(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    386950,       7307]
NotebookOptionsPosition[    378616,       7190]
NotebookOutlinePosition[    378974,       7206]
CellTagsIndexPosition[    378931,       7203]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Load electricity price by state", "Chapter",
 CellChangeTimes->{{3.7081060318265*^9, 
  3.708106036999937*^9}},ExpressionUUID->"b4e23c69-9ae1-40c3-a52d-\
486d2756b109"],

Cell["\<\
Build the electricity price by state in time database.
Data from: \
https://www.eia.gov/electricity/monthly/epm_table_grapher.php?t=epmt_5_06_a\
\>", "Text",
 CellChangeTimes->{{3.708106052028475*^9, 
  3.708106067866864*^9}},ExpressionUUID->"fcfb83ad-2156-4c45-88c4-\
3dd1a1302e57"],

Cell["\<\
I will use a substitution rule to parse the state names in the database.\
\>", "Text",
 CellChangeTimes->{{3.708106070587298*^9, 
  3.7081060860779743`*^9}},ExpressionUUID->"782515c8-a491-41d8-9699-\
787bd2600432"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stateEntitiesRule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<New England\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Connecticut\>\"", "\[Rule]", 
      TemplateBox[{"\"Connecticut, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Connecticut\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Connecticut\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Maine\>\"", "\[Rule]", 
      TemplateBox[{"\"Maine, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Maine\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maine\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Massachusetts\>\"", "\[Rule]", 
      TemplateBox[{"\"Massachusetts, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Massachusetts\"", ",", "\"UnitedStates\""}], "}"}]}],
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Massachusetts\
\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<New Hampshire\>\"", "\[Rule]", 
      TemplateBox[{"\"New Hampshire, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"NewHampshire\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewHampshire\\\
\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Rhode Island\>\"", "\[Rule]", 
      TemplateBox[{"\"Rhode Island, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"RhodeIsland\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"RhodeIsland\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Vermont\>\"", "\[Rule]", 
      TemplateBox[{"\"Vermont, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Vermont\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Vermont\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Middle Atlantic\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<New Jersey\>\"", "\[Rule]", 
      TemplateBox[{"\"New Jersey, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"NewJersey\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewJersey\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<New York\>\"", "\[Rule]", 
      TemplateBox[{"\"New York, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"NewYork\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Pennsylvania\>\"", "\[Rule]", 
      TemplateBox[{"\"Pennsylvania, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Pennsylvania\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Pennsylvania\\\
\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<East North Central\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Illinois\>\"", "\[Rule]", 
      TemplateBox[{"\"Illinois, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Illinois\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Indiana\>\"", "\[Rule]", 
      TemplateBox[{"\"Indiana, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Indiana\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Indiana\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Michigan\>\"", "\[Rule]", 
      TemplateBox[{"\"Michigan, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Michigan\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Ohio\>\"", "\[Rule]", 
      TemplateBox[{"\"Ohio, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Ohio\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Wisconsin\>\"", "\[Rule]", 
      TemplateBox[{"\"Wisconsin, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Wisconsin\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Wisconsin\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<West North Central\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Iowa\>\"", "\[Rule]", 
      TemplateBox[{"\"Iowa, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Iowa\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Iowa\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Kansas\>\"", "\[Rule]", 
      TemplateBox[{"\"Kansas, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Kansas\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Kansas\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Minnesota\>\"", "\[Rule]", 
      TemplateBox[{"\"Minnesota, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Minnesota\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Minnesota\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Missouri\>\"", "\[Rule]", 
      TemplateBox[{"\"Missouri, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Missouri\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Nebraska\>\"", "\[Rule]", 
      TemplateBox[{"\"Nebraska, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Nebraska\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Nebraska\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<North Dakota\>\"", "\[Rule]", 
      TemplateBox[{"\"North Dakota, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"NorthDakota\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"NorthDakota\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<South Dakota\>\"", "\[Rule]", 
      TemplateBox[{"\"South Dakota, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"SouthDakota\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"SouthDakota\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<South Atlantic\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Delaware\>\"", "\[Rule]", 
      TemplateBox[{"\"Delaware, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Delaware\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Delaware\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<District of Columbia\>\"", "\[Rule]", 
      TemplateBox[{
       "\"District of Columbia, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"DistrictOfColumbia\"", ",", "\"UnitedStates\""}], 
              "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"DistrictOfColumbia\\\", \\\"UnitedStates\\\"}]\"",
        "\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Florida\>\"", "\[Rule]", 
      TemplateBox[{"\"Florida, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Florida\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Georgia\>\"", "\[Rule]", 
      TemplateBox[{"\"Georgia, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Georgia\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Georgia\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Maryland\>\"", "\[Rule]", 
      TemplateBox[{"\"Maryland, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Maryland\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<North Carolina\>\"", "\[Rule]", 
      TemplateBox[{
       "\"North Carolina, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"NorthCarolina\"", ",", "\"UnitedStates\""}], "}"}]}],
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"NorthCarolina\
\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<South Carolina\>\"", "\[Rule]", 
      TemplateBox[{
       "\"South Carolina, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"SouthCarolina\"", ",", "\"UnitedStates\""}], "}"}]}],
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"SouthCarolina\
\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Virginia\>\"", "\[Rule]", 
      TemplateBox[{"\"Virginia, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Virginia\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<West Virginia\>\"", "\[Rule]", 
      TemplateBox[{"\"West Virginia, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"WestVirginia\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"WestVirginia\\\
\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<East South Central\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Alabama\>\"", "\[Rule]", 
      TemplateBox[{"\"Alabama, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Alabama\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alabama\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Kentucky\>\"", "\[Rule]", 
      TemplateBox[{"\"Kentucky, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Kentucky\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Kentucky\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Mississippi\>\"", "\[Rule]", 
      TemplateBox[{"\"Mississippi, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Mississippi\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Mississippi\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Tennessee\>\"", "\[Rule]", 
      TemplateBox[{"\"Tennessee, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Tennessee\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Tennessee\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<West South Central\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Arkansas\>\"", "\[Rule]", 
      TemplateBox[{"\"Arkansas, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Arkansas\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Arkansas\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Louisiana\>\"", "\[Rule]", 
      TemplateBox[{"\"Louisiana, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Louisiana\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Louisiana\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Oklahoma\>\"", "\[Rule]", 
      TemplateBox[{"\"Oklahoma, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Oklahoma\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Oklahoma\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Texas\>\"", "\[Rule]", 
      TemplateBox[{"\"Texas, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Texas\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Mountain\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Arizona\>\"", "\[Rule]", 
      TemplateBox[{"\"Arizona, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Arizona\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Arizona\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Colorado\>\"", "\[Rule]", 
      TemplateBox[{"\"Colorado, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Colorado\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Idaho\>\"", "\[Rule]", 
      TemplateBox[{"\"Idaho, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Idaho\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Idaho\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Montana\>\"", "\[Rule]", 
      TemplateBox[{"\"Montana, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Montana\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Montana\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Nevada\>\"", "\[Rule]", 
      TemplateBox[{"\"Nevada, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Nevada\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Nevada\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<New Mexico\>\"", "\[Rule]", 
      TemplateBox[{"\"New Mexico, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"NewMexico\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewMexico\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Utah\>\"", "\[Rule]", 
      TemplateBox[{"\"Utah, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Utah\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Utah\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Wyoming\>\"", "\[Rule]", 
      TemplateBox[{"\"Wyoming, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Wyoming\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Wyoming\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Pacific Contiguous\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<California\>\"", "\[Rule]", 
      TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"California\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       
       "Entity"]}], ",", 
     RowBox[{"\"\<Oregon\>\"", "\[Rule]", 
      TemplateBox[{"\"Oregon, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Oregon\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Washington\>\"", "\[Rule]", 
      TemplateBox[{"\"Washington, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Washington\"", ",", "\"UnitedStates\""}], "}"}]}], 
          "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Washington\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
       
       "Entity"]}], ",", 
     RowBox[{"\"\<Pacific Noncontiguous\>\"", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<Alaska\>\"", "\[Rule]", 
      TemplateBox[{"\"Alaska, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Alaska\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alaska\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<Hawaii\>\"", "\[Rule]", 
      TemplateBox[{"\"Hawaii, United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"AdministrativeDivision\"", ",", 
            RowBox[{"{", 
              RowBox[{"\"Hawaii\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
        "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Hawaii\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
       "Entity"]}], ",", 
     RowBox[{"\"\<U.S. Total\>\"", "\[Rule]", "None"}]}], "}"}]}], 
  ";"}]], "Input",ExpressionUUID->"fa5246d1-99e2-45ba-8858-300c6f24e4cd"],

Cell["\<\
The database is separated into residential, commercial and industrial prices. \
The database is organized as it follows: Every directory correspond to the \
month when the survey was made, and the file Table_5_06_A contains \
electricity prices by state on a given month. There are 3 columns that \
correspond to residential, commercial and industrial prices.

I will focus on industrial prices since they are the least regulated. In this \
database prices come as Cents per Kilowatt/hour.\
\>", "Text",
 CellChangeTimes->{{3.70810609625725*^9, 3.708106131147422*^9}, {
   3.708106245624771*^9, 3.70810635911899*^9}, {3.708128731525888*^9, 
   3.708128739936466*^9}, 
   3.708134979209346*^9},ExpressionUUID->"45aa0707-7587-44d4-b59f-\
f56fa5de4301"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"residential", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"commercial", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"industrial", " ", "=", " ", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directories", " ", "=", " ", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*\>\"", ",", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
         "\"\<ElectricityPrices\>\""}]}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"FileType", "[", "#", "]"}], "\[Equal]", "Directory"}], 
       "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"electricityPricesByDate", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"data", " ", "=", " ", 
       RowBox[{"First", "[", 
        RowBox[{"Import", "[", 
         RowBox[{"d", "<>", "\"\</Table_5_06_A.xlsx\>\""}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"date", " ", "=", " ", 
       RowBox[{"DateObject", "[", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"statesAndPrices", " ", "=", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"data", ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"entityStates", " ", "=", " ", 
       RowBox[{
        RowBox[{"statesAndPrices", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
        "stateEntitiesRule"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"statePrices", " ", "=", "  ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"entityStates", ",", 
            RowBox[{"statesAndPrices", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "industrial"}], "]"}], "]"}]}], "}"}], 
          "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "_"}], "}"}], "|", 
          RowBox[{"{", "__String", "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"date", ",", "statePrices"}], "}"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "directories"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"electricityPricesByDate", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{"electricityPricesByDate", ",", "First"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.708106139738665*^9, 3.708106145973899*^9}, {
  3.708119369615484*^9, 
  3.7081193743541603`*^9}},ExpressionUUID->"a590de0a-5185-45d4-af29-\
7f422312a435"],

Cell["Visualization of electricity prices by date", "Text",
 CellChangeTimes->{{3.708106367351697*^9, 
  3.708106377127743*^9}},ExpressionUUID->"74468f47-daf0-4f77-bfb8-\
d9e99cf8c3f6"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GeoRegionValuePlot", "[", 
    RowBox[{
     RowBox[{"electricityPricesByDate", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"DateString", "[", 
       RowBox[{"electricityPricesByDate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"#", "/", "15"}], "+", "1"}], "]"}], "]"}], "&"}], 
       ")"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "electricityPricesByDate", "]"}], ",", "1"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.708106428690057*^9, 3.708106512594647*^9}, {
  3.708135009362011*^9, 
  3.7081350198356953`*^9}},ExpressionUUID->"19dd0235-7c38-4222-b2e5-\
ae973b955940"],

Cell["\<\
Since the format of the database make it difficult to work with time series I \
will rearrange it.\
\>", "Text",
 CellChangeTimes->{{3.7081065658109303`*^9, 
  3.7081065944002857`*^9}},ExpressionUUID->"31362a74-f525-4ead-ab65-\
968b73262277"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"states", " ", "=", " ", 
   RowBox[{"electricityPricesByDate", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2", ",", "All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"electricityPricesByState", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"First", "[", 
         RowBox[{"electricityPricesByDate", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "i", ",", "1"}], "]"}], "]"}], "]"}],
         ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"electricityPricesByDate", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"electricityPricesByDate", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2", ",", "i"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"electricityPricesByState", " ", "=", " ", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{"electricityPricesByState", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Alaska, United States\"",RowBox[{"Entity", "[", 
             RowBox[{"\"AdministrativeDivision\"", ",", 
               RowBox[{"{", 
                 RowBox[{"\"Alaska\"", ",", "\"UnitedStates\""}], "}"}]}], 
             "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alaska\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
          "Entity"], ",", "_"}], "}"}], "|", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"District of Columbia, United States\"",RowBox[{"Entity", "[", 
             RowBox[{"\"AdministrativeDivision\"", ",", 
               RowBox[{"{", 
                 RowBox[{"\"DistrictOfColumbia\"", ",", "\"UnitedStates\""}], 
                 "}"}]}], "]"}],
           "\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"DistrictOfColumbia\\\", \\\"UnitedStates\\\"}]\"",
           "\"administrative division\""},
          "Entity"], ",", "_"}], "}"}], "|", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Hawaii, United States\"",RowBox[{"Entity", "[", 
             RowBox[{"\"AdministrativeDivision\"", ",", 
               RowBox[{"{", 
                 RowBox[{"\"Hawaii\"", ",", "\"UnitedStates\""}], "}"}]}], 
             "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Hawaii\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
          "Entity"], ",", "_"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"electricityPricesByState", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{"electricityPricesByState", ",", "First"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.708106606307434*^9, 3.70810661407677*^9}, {
  3.708106672821916*^9, 3.7081067048204517`*^9}, {3.708107142514987*^9, 
  3.708107142673913*^9}, {3.708118061277972*^9, 3.708118063449403*^9}, {
  3.708135045339497*^9, 
  3.708135046384541*^9}},ExpressionUUID->"fc47b9b8-4e80-443a-b372-\
d6e5154a20a2"],

Cell["With this I can plot the time series of every state", "Text",
 CellChangeTimes->{{3.7081067265462313`*^9, 
  3.708106738658341*^9}},ExpressionUUID->"a4853f4d-0e6b-435f-a4c3-\
28db13273a16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plots", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DateListPlot", "[", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"Partition", "[", 
      RowBox[{"electricityPricesByState", ",", "5"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{"plots", ",", 
     RowBox[{"UpTo", "[", "3", "]"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.708106744639288*^9},ExpressionUUID->"0a2057a7-152f-42f5-a94c-\
f07551003b22"],

Cell[CellGroupData[{

Cell["How are the prices on each state correlated?", "Subchapter",
 CellChangeTimes->{{3.7081068784457273`*^9, 
  3.708106885386256*^9}},ExpressionUUID->"1e47bf16-6ace-4b0a-9eeb-\
14c8345738be"],

Cell["\<\
From the time series it can be seen that some states have highly correlated \
prices. In order to identify the characteristics they share I plot the \
correlation matrix.\
\>", "Text",
 CellChangeTimes->{{3.708106917087534*^9, 
  3.708106983459618*^9}},ExpressionUUID->"c6b422e1-14a5-41b3-998c-\
b5c634dbc964"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"states", " ", "=", " ", 
   RowBox[{"electricityPricesByState", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateNames", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{
        RowBox[{"EntityValue", "[", 
         RowBox[{"#", ",", "\"\<Name\>\""}], "]"}], ",", 
        "\"\<, United States\>\""}], "]"}], "&"}], ",", "states"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"prices", " ", "=", " ", 
   RowBox[{"electricityPricesByState", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"corrMatrix", " ", "=", " ", 
    RowBox[{"Correlation", "[", 
     RowBox[{"Transpose", "[", "prices", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"horizontalTicks", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "stateNames", "]"}], "]"}], ",", "stateNames"}],
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"verticalTicks", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "stateNames", "]"}], "]"}], ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Rotate", "[", 
          RowBox[{"#", ",", 
           RowBox[{"90", " ", "Degree"}]}], "]"}], "&"}], ",", "stateNames"}],
        "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"corrMatrix", ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"horizontalTicks", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"verticalTicks", ",", "None"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1000"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7081071046355343`*^9, 3.70810710611121*^9}, {
  3.708107145199008*^9, 
  3.70810718398166*^9}},ExpressionUUID->"cefbb9ca-b02f-4760-96dc-\
e50508f338af"],

Cell["Correlations (excluding the autocorrelations) range from", "Text",
 CellChangeTimes->{{3.708106994383309*^9, 3.708106998751499*^9}, {
  3.708107227123704*^9, 
  3.7081072435258827`*^9}},ExpressionUUID->"e91d95a5-8cff-446b-bde4-\
d2685ffac4b8"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Min", ",", "Max"}], "}"}], "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"corrMatrix", "-", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"Length", "[", "corrMatrix", "]"}], "]"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.70810720822893*^9, 
  3.708107213610256*^9}},ExpressionUUID->"3cce6a36-ef81-4e7b-b718-\
094273d6f1f3"],

Cell["Positive correlations tend to be stronger.", "Text",
 CellChangeTimes->{{3.7081070041449537`*^9, 
  3.708107011414592*^9}},ExpressionUUID->"c0643665-f80b-49e2-8e41-\
fd234fd6b76a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Why some states have high correlation?", "Subchapter",
 CellChangeTimes->{{3.707500382009905*^9, 
  3.707500402748657*^9}},ExpressionUUID->"8d1b8acc-0be0-485f-a78e-\
8c5ed50bb78b"],

Cell["\<\
- Hypothesis: States that are closer have higher correlation.\
\>", "Text",
 CellChangeTimes->{{3.707500405167946*^9, 3.707500410817842*^9}, {
  3.70750045036073*^9, 
  3.7075004739030247`*^9}},ExpressionUUID->"d767ae2b-7dc0-4c9d-b316-\
0b455c2676a5"],

Cell["\<\
Let\[CloseCurlyQuote]s define a high correlation as one that is greater than \
0.7. From plotting the states that are highly correlated it can be seen that \
many of them are geographically close.\
\>", "Text",
 CellChangeTimes->{{3.707500651066042*^9, 3.7075006665211353`*^9}, 
   3.7076606362977133`*^9, {3.70767059123037*^9, 3.707670591970071*^9}, {
   3.7077694284162397`*^9, 3.707769438203649*^9}, {3.70776955037718*^9, 
   3.707769561280884*^9}, {3.7081070372847767`*^9, 
   3.708107093762347*^9}},ExpressionUUID->"05915803-37cc-4cc5-9014-\
36832adcb1e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"states", " ", "=", " ", 
   RowBox[{"electricityPricesByState", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"niceCorr", " ", "=", " ", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"corrMatrix", "-", 
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"Length", "[", "corrMatrix", "]"}], "]"}]}], ",", 
     RowBox[{"x_", "/;", 
      RowBox[{"x", ">", "0.7"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"niceCorr", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Map", "[", 
     RowBox[{"Sort", ",", "niceCorr"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"corrStates", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Part", "[", 
        RowBox[{"states", ",", "#"}], "]"}], "&"}], ",", "niceCorr"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GeoListPlot", "[", 
    RowBox[{"corrStates", "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "corrStates", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.707500497500441*^9, 3.707500523861746*^9}, 
   3.707670565135269*^9, {3.7077662220803947`*^9, 3.707766228161961*^9}, {
   3.7077663952420807`*^9, 3.70776639882232*^9}, 3.708107122220051*^9, 
   3.708107429152046*^9},ExpressionUUID->"c2750204-09d1-4468-8cd6-\
be7c069bf8c5"],

Cell["\<\
Almost half of the cases that have high correlation can be explained by \
geographic distance.\
\>", "Text",
 CellChangeTimes->{{3.707500559882272*^9, 3.707500586098516*^9}, {
  3.707500641143805*^9, 
  3.707500643836234*^9}},ExpressionUUID->"608343a1-3c47-4e67-a805-\
5e9ebe45d179"],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"QuantityMagnitude", "[", 
       RowBox[{"GeoDistance", "[", 
        RowBox[{"#", ",", 
         RowBox[{"UnitSystem", "\[Rule]", "\"\<km\>\""}]}], "]"}], "]"}], 
      "&"}], ",", "corrStates"}], "]"}], ",", "10", ",", 
   "\"\<Probability\>\"", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Distance (km)\>\"", ",", "\"\<Probability\>\""}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7076704808209677`*^9, 
  3.707670503904771*^9}},ExpressionUUID->"badef6c4-ddba-4d8c-b37e-\
48a3d9a91267"],

Cell["\<\
- Hypothesis: States that share the same electrical grid have correlated \
prices.\
\>", "Text",
 CellChangeTimes->{{3.707511700619503*^9, 
  3.707511717520549*^9}},ExpressionUUID->"e0e69f2f-c1a2-4a7d-994f-\
b6e2d35e20b0"],

Cell["\<\
The United States electrical grid is divided in 8 separated regions by the \
North American Electric Reliability Corporation (NERC).\
\>", "Text",
 CellChangeTimes->{{3.707511808938674*^9, 3.7075118663273582`*^9}, 
   3.707511903905675*^9},ExpressionUUID->"1e7d40fb-d3eb-47e0-9feb-\
aa93e14930a8"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/5N+bMu7xGl+TLSt2VedZ2svZ38uv0/V/UV79tdi7PBL+4FlLSx2vPznL+fm
YMnqfKSu2IiU5XkwWSyoKvfCarWisbERR44c0frSjmjA0aNHYbWYsSq3GDMX
rUf3kXMQEz5fWPtH9WbsK5f2Ab/6VQZKDCYEwr+7ueeXEELaBlu3NsFgMOD9
jPGc/UuvK/M/Gknmf/pUnqdNH30E5+bNKJg48dLHe/TW/Lho2/FKvz+rGfbL
e36jqd/frSi5pWSC0htLvC98f16fmIHkZXkIeJ0IuB1wOmzYtq0J3333ndaX
eOQuILP0duzYgS1btqDS78LQz5fiNy/Hs+6P6t7f9ovHzLRc1FYGtH6ZEUII
aSWam7fDYrZg0uoJ6DGzD7pM74FO07spY2b01DxboNrL/I9GkvmfPl3etQdW
Pf0MTKtWwe7xIPOJJ7G8W0/Nj4u2AXv0vtTvr99V/f4+j95+f7erZJpSKzjy
q+XqfmZJv3yrGQGfB00N9ZfdgrrNNfj20GGtL/tIK1NVVYXi0lK4nTakrtiE
3q+lcNYvbRN2GJSIhCUbEPS5sH37dq1faoQQQlqBU6dOoSJYAY/Dq/b/do/v
gz/O/qPyiaSnEDezl+b5AtVW5n80ksz/dGrvvlh6fycUJyTA7nAg8/dPMP+j
reKVfn9WMxw+H4Z9Hv39/m5XqfWStbLUAz7yxlwM/TwdeUUGrM8vxbqNJVi7
sRgFxWWoCHhw5DtmgG0F6flYXV0Nr9uOzA0l6DJ8ltojzj2/tC0o72s89lYq
Vm8oQm11pdYvN0IIIa2AzHF32VxYV5qNjtO6YtLqL+F3+uFz+pCcy3nAlPkf
jSzzP/0qOU3p7Nmw2+3M/2greG2/P6fK/vTT76+1lL5ZYs9Rc5Q9Xp2DLsOT
MeBfS5CWlQ+b3YEjhw/h0KFvce7cOa0vA8ktsnPnTtXz0eV0IOh34ePktbh/
UCKzP9qm/F3/BCxdm4+G+hqtX3KEEEJagYaGBthNdqwuXoVfTXgAiTkzUeOr
RYUnhDkbZuPXkzri3ikPcy5IO5b5H40k8z/9yvyPtqbS7y+7X7/LdX9+VQOn
935/t6PUzrQo9YGSCd4bXkuPnrICbocNLrtF7R3dtWuXmh1L9IHktjLnRbI/
R/h3p9/rwmdzstV8mPaUc9O2reTYHQclYdCnS1FYasDm2mqtX3qEEEJagRMn
TqA8EITJYsa7y8fhD8nPILdsHaq9NYjPmY5XF43A8oJlmLZmErrO6KXUOm+g
d1fmfzSSzP/0K/M/2ir26H2l7s9tNcPpa9v9/m7HlvkhL3+0GFPm58LrssFm
teLM2bNaXw6SG0BmfdhsNphMRlX353U78XlKtspJZO+v1ucXpa1lpyFJGPiv
JXA6HKq3ZWVlldYvP0IIIa3EydOnUOmpwqzsRPzqs//Ekk2LVNZTbC6G0WJE
U7AZZeZSdJ3RU6l13kDvrsz/aCSZ/+lX5n+0NVT9/voPuFL31x76/d2u8vh0
CK+vv5qXA7/Hidqaapw6dRo//PCD1peE5Gc4duyYyv4krw353Zi1fCOeenu+
ej4574PejPK78cHBSapnqOTG0bhnXOqW+7yeguT0jajwuVHu9yAQCCi9Xi82
b97MumVCCNEx27fuwHrHOvROfhQL1s+F3xWA0+FE0B1CblkOZqydwvq/dirz
PxpJ5n/6lfkfvT0v9fvL7t8fHpu53fb7u1VjwuvrjkOSMGFuNkI+F3xuh9pX
evjwYZU1kehi+/YdcNqtqAl6MWf5pvA5Hn7+Biepvd1an0tUP8p5I31BZV/t
iC+Xo9frKVE7M0ZybcknJ85bh2VrC2GzWWG1WGAJazKZ1OwbmYFDCCFEvxRW
5GNl/gq4nB41A2Rl4XL0TXgc9zLzabcy/6ORZP6nX5n/0dtR+v3l9O+PCqcV
Tr/0+1varvv93dL6Ory2ljX2OzMykbaqACG/C26HFR63C3t27cKOHTtuaUaI
1OXIfLfjx4/fgSvF9ofM+pB8NjO3BB8mZqHnq3MQM5Q1f/TmlT6gT45Nhdvp
QG2FD3NXbFLvl0Tr+STHe/+ARHw5Nwcel1P1vJRrBrPZrOoA+V4FIYTom93b
98BqsYV/vztQ7a3Gu8vfxq8nddI8Y6DayfyPRpL5n35l/kdvxeVde2BJ+HWe
O2gAvDYLPluQh7/8I03tZ9N6rapHY1+5NGNT9tq9+tVyjJqYgaJSc/hazBxe
Y5tQW1OFxob6m7Jucw1sFhPKA361T6+ubjOa1MdrmQneBAcPHsTm2hoEfS5k
5ZXg0TdT8dt+8az5o7es5GlPjEmFyXxpdnTI70Hqinz1eyDaMsCWOu6EJXmo
KveoawVR6v98Ph9OnTql9UuUEELIbdLU1ASzyQy304NZuYnoHt8Xsez5165l
/kcjyfxPvzL/ozdl775Ij+2GFY8+jg3Dh8JnM+PDuRvQYUCC6mOl9VpVz8re
P6kFlPpJyVGfGTdfZQQTUnNQWGLEuo0lN21uoQFGswV+jx0OmxVr84pRYjCi
NhRAbXXFNdZVh1BR7sfOnbuuuSa8en0v+/zaQ78vqbeUucy1lUGEyr0oLjVg
eXYRHh+dqvb7dhup/flCo1t5PUv/vA6DktRsmKvzYsn5ZL/vW5Mz1PwYma8R
8Icwd2W+ytuiaS+wzAD5ICELBqMVRWVmOByXsj+DwYD6+nqtX6qEEEJaAcn/
XBYX8g2b1KyPmGndwmv8PppnDFQ7mf/RSDL/069X8j+rVf2d+R/9WSX7i4nF
qmeehS03F/6gHx/Myla5Xyznnra6Ugckc4IlD5BeYT1evXmlzmj0tJVqz+r/
z957R0dZqPv+/nP++6117jq/de6+++593IKFElqoig27WwUsdJFqV+wFEekt
pEAaISQhlVRSSc/03ic9oVdRVARFFBX93nmeEAQFBEzyZmae71qfFSAheTMz
72TeT56yNrGo4+8rM7A1txxxGaUXEZ1WgoyCShgNOu51/frrr7F//37ftb4G
hw8fxueffw6d73mivb2d3xeoHvDHH39EvdfLtZd0u2zJKeddzXR/hMiOD+Eq
oXONzsGZn6RhxsepfB5fuB/6Zt/zJu3W5Zo6vQ4thijfa2wV4jLLeT7ggF5S
B0iucvS8GH78j383EVazEW63i93f2bNnlT5dJRKJRNIF2bd3H0xaMxZlfcje
R2r/BPF/wpUQ/+e/pPruq5q4OJg8HpS8/jr3dSp9TELvpMP9PQB9UTFcjfV4
JyKPa1tkz0f30ukNhlwHVHNE1+1UT0h1PBf+vd/v+MeTYZj1SRra6m2wWQyw
mX1YjHDYzPxn2nlLu2+p9oc84JkzZ5R+udqlob3Lhw4dQmNDPawmHRZF57Oj
4f2sz0ZJv69w1XQ+VsKSinmep9tmwuKYfD4nO58vyQ/e/VIcUnIrfeeXHgfN
76O9xQmH1YzYjFL+WKoFps81ROnv59mO30OsSiiETqvmnniJRCKRBE4O7T+M
t1IW4G/L+/N1/Qip/Qt6xP8JV0L8n/9Cvi9vwkToVXXQFhYhdWgo0keMVvy4
hN7F1kFDz7m/IrgavXhnfTZu42tT5a+1ha6BHNe4l+N49uCsJWnnmbk4FbOX
pqGqVgOn3cz9fwaDMaD8H7m/ne3t0GrUMJv0WBSTj/5TIy+q1xKEq4Xc3oOv
J8Cg12L37l3Y1d7mO39UGDk35nxdH/X33vRMOF5dnQGP77w68tl3OPvLr1xf
azXrkVlQiQ+icvm8DGFvuOH8jICrrbcm109f73rddWcv8sDpkbj3lXj2/jQL
M5DOfYlEIgnW0M8b2uHkcrp8r+9cmJ04E8PDxmBB6quo1dRgcvzTuG31UMU9
g6AM4v+EKyH+z79JHTgE6vx8aHJyxf8JF3NBz6+hqBDuBg+7P66JEjcSUHS6
hc6atwu5aXI4nvkgCUWVKtSotDCZTH7vAKjPl3qa3S4H2pq88NhNiNpagnGv
buLbQx7fwvVAno78XERKCdeR7t27l+dJtjQ2YGNqyXmn1m96FJ5+P4lrao1G
Pc/WpFBf/enTp7G7rZl9dHFFLV5elYm+U8LRd3IEO8Ths6PZCV7uGDr3iIx7
JZ49JP3btc5n7Zw7QP+f+t5D50SjoroWBw/sV/bElUgkEkmXxOv18ixXnbaj
v0Onp7c6eC312O3ayz7wlpVDFPcMgjKI/xOuhPg/P2bEaK4B1FVUQJObJ/5P
+I2L3F9H3d/b4dky7y8IIZ9AdUjUN7w4Jo93YvT22V8nT57E8ePHGZpXSKE6
vy+//Ir/zemwo9FlYb8Sm16KsKQi3utBvdDS6yv8Fcgd0+6e1LxKrgH85ptv
fI+9X7gPmB5r5Aj7TA7H428loqySak4N+O677y56/JIzpJ3d9R6n79pMi9fX
ZGH8O4mISi3F2s1F/Di9nKOmvuFpi1KhUmthNuqxNK4AE99NxPDZG696XgN9
/qkfpaDZY+Ne+JmL01BZXcv1jBKJRCLx/3g8HqjVat756zS7UG9tYAe4PPsT
rMhZgkc3PsLX+Ep7BkEZxP8JV0L8n39D/q/sgw+gSk1DWugI8X8Cc9G8vwYv
74CUeX/Bzb8mhePj6Dx4nBaeldebcvToURw4cIB3lxz0vTUajfy6VqPR8MxC
2mWyc2c7DDoN3Daj7990WLlpO558L4m/r875iErfxkJgQLV6VDPrspvQ3tbG
7nnXrp1wmPWIyyjjj/n7k2F4ZU0mzwjsrP/7fU6dOgWbzQqTXgu7xQiTQQe7
1cR7wem5uLOekH4vQ36eeoqnLUqByve4J3fY3NTI8zxrNdqOWaIX7LChx3sn
vz9++rixL8RiS3YFe0uLUc91v+TOJRKJROL/OXHiBFwWF9LKkjFz8wy8lDwf
MzZNxU0rQvBPHyFrR8ocwCBG/J9wJcT/+THn6v8qV62COj0DqcPE/wmd8/4e
hL64qMP9ybw/YVZHXdFHG/N4Lwg5CSXDPZUtLWhubua3NJtMpVKx81NptNDr
aU6hAWaT71gtJhh0WnYY1ONLfoR2r/b1fT/k/UJ7wW0rBBZUmzd8bjQiU0p4
vwc5QMrOnbvYAcaml/HvU94My2K/Ro/jy9XUUj8w7eCmXi2qX21tbkR1nRoj
50RzHeGCdVns6WJ8nzNyazEqaurgtFvx7bff8nlSX+/lPd4fx+Sz1+OZgp1z
CGd3QD2+F+635v7hVzchvaACB/fv46/dWUcrkUgkksBIlb4CY8PuxD9XDESf
lYNx6yqZ9yd0IP5PuBLi//yYc/5PU1kB9bZspAyQ+y6oubDnt7gI7gYv3pZ5
f8Ks35wG9TVmFlbC63Yo+pqV6pDI9XXW+NHsGvJ9Bt9bjf0gDBYn71XQaHXc
Y5lWUIVH39zMToacCfU3Kn17CoELOWVyaOTUIjodYHsbOz6qA6S+4LySKlTU
aninDtWr0qzAK4VcHmXXznaUVtTwuUhOPiW3Am31DjisJngcFrh8r8WorqMz
P//8MxobG/h8IFfY33dcE95JQnZJNfLLqrG9vJZ7fUfNi+HPR7MFO/t/7RYD
jp/4utf3+0skEonk2lOgysPflw3A8LWjFPcJQu9C/J9wJcT/+THn/J+2fAd0
FZXI/vdj/HfFj0voeX4/76/BI/P+hIsgN0A7San/kPbGKRXqpdy9e/dvzu8c
eh9U69fodsBiNiEtvxLzlqfzPlbamUB9kuKxhZ6EHnuDeB9IMTvAtrY23j1D
j9+Geg80ahX3p1Of79U6Nuq9Nxn1SM4px/JNhTzjj2pf6fN8+umnfH78PrSv
x2kzY0NqCTamlXIfvM1ixq72Vq4V1GnVyCqsxvSPUzFmfgz6TArHpA+T+HPv
+xMvKZFIJBL/C+2b0pt0eC5hBv5reX8MWTvSd10v/b5CB+L/hCsh/s+POef/
drz7Loz19aiOjJL7L0jpdH/64o55fx11fzLvT+iA6plufCYcH0bloMFtO1+L
pFTIgZD/63SANqsJTb7jSi+oYke5ICwL/aZHsvO73IwzQehO6LmTzht6DFKv
Oc2b1GvV+OqLL/kxTB6Qav7sdjv36l7r49+o1/nQcu8wfR7aZ3250HUeOXu9
TsvucGd72/mPp1pa2utB/+51mLApq5x/70P1snaLiXuH/6w2USKRSCT+Ffqd
k8fhQWVtBeIKYzA++gl2Pkp7BaF3IP5PuBLi//wb8n8Zt98Bo8mEqvD1SBkw
WPFjEnqW39yfzPsTLg3NyXvi7USUVtXBZjVzPZFSofoms9nMfb8mk5Ed4Gtr
MzF7SRrGvRKP/3k6rKNutRfcbkJwQjV/5P869spsxOKYfGzeVgadVgOP233R
+UO7f6/Hp+/btw/19fXc33u15w3Nyrxc7S55QHqfyaBF4rYdjEGv47rCuro6
/noSiUQiCZzQfAe3041d3t2YljAFfcTxCOcQ/ydcCfF//g35v23j7oPBdz1d
tV78X1Ax+vaOXR8PdMz7455fmfcnXAKamffc4lSuDzp69LNL9hj2VOhrNzQ0
wGKxcO2f1WxEbEYZ9ycPmBHJ+wyUvr2E4ILq/GhOAj130rky8d1ERG4t4V7a
NYmF8LqsaKx3wWK18i4PqsfrilzrXD76ulf62l988SW79aZ6N5q8btjtDths
NrhcLu5RlkgkEklghV5TEWvKVmDgqlAMk1mAwjrxf8KVEf/n34j/C1Jo3t/A
Iez+nBVlcDf9tutDeiWFC6HHw5BZG7iGyajT9Io9oPRa9dixY6ipqWH/V1qp
Zu8nj11BCWjO34g50Xh2cQqmL0pBSaWK92Sr1BoYDXrY7TZ2dUp686tN57Xg
75FIJBJJ4KahsQHj1o/j63ql3YKgPOL/hCsh/s+/Ef8XhIwYze4v+8EHYd1R
hrh8FZ5fkc47H2Xen/B7+k+Pwn2vbeL5YPX1Xnz//fdKv0zl0HHQXLJ6jwu5
pdXsYMT/CT0N1UrTnt/1ScXwOsywmvTQatRwOBxobm5CbW0trFarODSJRCKR
9No4vU7cu/5e8X8CI/5PuBLi//wb8X/BRVroSKQOCUXOQw/DXlGG8G21GDAt
knvWlL6OFnofQ8/5tA2ppdDpNLxftLeltbWVZwG+F5mN/jOiFL/NhOCBzg/y
f9Tr67Aa0OZ7LNIcPeqjPX36NM/1oz0bXq/3quf0SSQSiUTS0xH/J1yI+D/h
Soj/82/E/wUJ1O87ZBjSx9yOuoQEuAwahKVX8G5KqpsK7QXX0kLvg2aajZwT
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
cHoUz/VLz6+Cw2rmmX6Gc+6PZhHQLD+JRCKR/LWcOvkdPjv8Ob44+iW+OvoV
Tnx2Ejs8JViY+R5iC6Jh0VthNdqwMOMD9F015E97gen9I8Nux0eZ7yMsfw2m
bposs9+CFHJ8tP8juSwRO527UaWpwtLsj7EsZzFGrb9Ddk5fJeL/AovO/l+T
wyH1f12N+D9BuC7oPLl5agQmvJuEj6Pz8W5ENhZF53FtIPXgVdVqxP8JgtAt
DJm5gWf9/futRCyL344d1WqYTUZ2fzSDgPzfZ599pvQls0QikQR0fjn9K06f
PI2vvj6Ok19/g6+/OIlFmR9iwJ+4PHI+5HbUOhX2eQ5gafZirvdS2qEIykCP
h/ExT2BB6ivQ6XVotDWiyd6C/Oo8fJTZ4ZRDpT70ioj/Cyw69/8aLBZUrl2L
lNsGKn5MAYP4P0G4bsjvUV8w7QnuOyWC39I1+da8SlSK/xMEoRvoPz0Kdzwf
i6itJSitUqHBZYHBoOeeX3J/e/bswcmTJ5W+LJZIJJKgy88/nYXL4sHLKS/g
hqW3cH8v1fX9vreXfM+Y9WNRq6mB3eRg5zMtfjL3gf7ea9D/HbgmlP3gpd4v
BAJjcNvqofxYoXmSVBdaoSrn3SAFNXn8eBmwWnrEr4T4v8DivP8zGlEbH4+0
c/3ASh9XQCD+TxC6FNrBSXP4xf8JgtCV0PMJub9R82KQll+FBpcVZqMeJpMJ
DQ0NXO9H7k8ikUgkyoTmrNIeh9jCjZi5eQZeTXkRE2ImcP3Whe6GdoWQy1uX
v4r3C5MznJM481yd1++9xgiuDXtt68uYtfnZc/8u+2EDEXpc0CxIus9pt0zk
9jB+bCSWJpx/n9LH2FsR/xdYkP/Lvv8B7msx19ej+NVXpQe4qxD/Jwhdivg/
QRC6GtpDRDNHR86NQVpBFTwOC8/3I/cntX4SiUTSO0L+j2r5TAYznCYXGmyN
PM/t6bgnL6rdo70P5AbD89fwniZyPLM3P/sH/0cO6Ialt2JF7hLs9RxEed2O
c/8ueyECGXJ9t6weyrWAer0e9dZ6ng84NvwuDD63M0S4GPF/AQbV+o2+HZWr
VsPU2IiS114T/9dViP8ThC6F/F/G9mr2fyG+80n8nyAIfxV6Lrnzxbjz7o/m
+9lsNt47LpFIJJLeEfJ/5PMIk9HEv6fxmuuxdNvHF/i/DreTXZmFFkcr+x2z
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
NYFjX4jjnSIL1mX9P/bePDzqMs377X/e9zpznTkz57Vnpqen7W5REUwgYRcU
EAVUFFc2EREREBRZRWWH7HsgIUAgCdkTyALZl0rt+5rKRthx39rebXXsds73
/O67UrGI2QiVVCU83+v6XpWq1K/q+a1Vz6fuBWeriAXK0eiwi/qAQkJCQkK3
nT58/0MolSruEUK5vztzd3T2CCaORH+P7+gN4muuI9x/3x8xAQuTn8TZhrMw
680w6IzYnbcTYyNHfg1Awf9GpgX/GwR38D9DQR6yq1SuudTKwwjyg7mqsPBw
tOB/wv5qur5vTyhEk82Eb7751tfTjwGL6htZTHqU1cjxxOZUrv/X17oTB6TY
x3Ed9QLDjpXCYTFwbcErV674epWEhISEhISGTFQXkOL/3PxvV+67+GVoAOf/
LkhagISSWDyZ/CQzFV9zHeGb8x0hY/Fezttos1xAqayU838nRI38uE7B/0am
Bf8bBBP/CwyCKjsbcqMZK/ZmYtTiOK4P1VNelbCwcM8W/E/Y30w9P6ge3m+l
a/vW2Dw0Wo3DvgaezW5Ho0WP8NRS/Oq5GAS+7FpHWtfetgX9tjWuo19I2LES
OKVtoVEruUeIkJCQkJDQ7aD333+fewO7+d/e/N3cO2L+ofkolZXgkv0qXjv5
Cu4KH+9zriN8c/6NtB/fzd3BPUAMeiNCCvZhtIj/Ex6mFvzP+z41Lhjl27ZC
I13/rY12yPUmnDhdi2M5FXjo9RSeT/l67iosPJx8q/wvcNE+/PO/3IGf/exn
7P/rn/8V45aF/+R5YxZs7nzO3XNW9bh8V985+cle3z/45UT8x90TfrJcT+MY
6DLC3jXFbd//UiL/dhPgYeJclAc79bVkjJX+vyOhADaznvNeh7Oonjn19Dhb
VY8T+ZV4YkuqtJ5JLr7Xj88tYoATVx3GczvSkHG6Gk1WAy62t6K1pYl7Bf/P
//yPyAsWEhISEhqR+uGHH+BwOCCTyaBWq9GgkqFcVoZaRS1MBjOseiuWHFuM
/3XwPp9zHeGbszvWL744Bs2mFpyqSOPYzpGeyy3438i04H/eN50bdYmJ0Dc2
QlFUDPXp07AbtWhutuNkfpWoBygsfJO+Vf7nyfV6Y3Y98b/ulu8vlxs186Ve
l/vf//R/Y8zCbbe8jLB3TPyKclmp3y1xP8qFfXLLCWZhbj/y5jEkZJShpl6O
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
3IvlYOE+jOL3EvnYt7Op18cD0TOkW5fdf98THYQlEYsRfjDqtuB/nrm+xOL2
SM9xsznPfN6bzf/tKfeX3LWvr7fq/wn+142nTcepseNQ9tYm6K1WrvVHvTNu
NreM2J9SqURNTQ3zrFsVxfFduXIFNrsdaosVNeHhODU+mPcjxSpSjUJF4Wnp
fxaOGSKONhxFuY5Ux1+pUiOtoJrjj2jO72tG4w8m9jN/03HmHnuPFHENOJEX
PbxN+/TZt9OY2TXbjLCYTfjuu++4T49auvbYTXrklNZyTi6xuu5q/lG83n1L
E7hun1qj7WR/3ugPTfF2v5aOM+ofYjbqcb7RjLxzdRxPONT8b9zLrvjXc1Vy
HgeNx2Yx4eqlC9wXRatWwmazcs+UkS7q+eRwOLhXOn0uCAkJCQkJDYaoBqDZ
YoZWo+NeEfWKOrySugJzE+eKnN0h8FDwP2J8AZGT+b1iiqJ4PxfXn+E4L8oF
FjUZbz9TrN+d0eOxOmwl9h/cj3cjyQc6bvfjHcm7okKxNzIS6fPmj3j+15XV
Bfzbv3Xbl3cg9f88e394vl/X/h/97f/btUeJp938T6PXoyY6Bun3jGX25ett
7ktTDB31z6C83/rUE1zrj9hdX7XzqOeku+/kt99+y39TXw65XM5z+Pfff/+W
Pns//vhj6PVGqHVGKDV6Zn903jD7k/YZ9fuo3rMHKpMJZrOZl6ExU/0wYgnD
RTRmu93OsX8x6ec4zueprSe4HyqxLuIcvso79AdTbubD61NQVa+AzWxgJjNe
eszX9diEB2bKuZ2yJhm1DSpYpP1J1wqbzYbPv/iC2VaT1Yjs0lpMW9vB/rp5
DeK/VPdv35FizvulvtD3ejlmlo6vKauTMIuPPSWPaewQ8z9aR1rXqLSzKK+V
o+BsPTv/XB1yiquRW1KLfOl+TW09mpxOX1/KBk30+fL551/AZNDDZtRCoZAz
BxQSEhISEhoMEf+zSPMh+o5COQkGaT5C8WHHy1K4j6+vOcVI99DwP5cpDjA4
cjLqFbW4aLuMjIqTeCh+tugHcps5uKPHx7MRz2Bb6FZE7gvDoXUbcGjN6zi0
dj37MN++jsS1a5Exew5yJ07plbGMBP7XXQ5v17zcgfC/3nJ3e4sPdPtm4gSZ
/z08B1qjiePGqLftKdoXtyMD7IifK3l5Jc6tex21cXFQGAx9sj/KOyO2p9Zo
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
2rnO/US5u7eSq0vLv7g7g3O+X9qTibuXxg3JOvs7/6OxTV+TzHUwqReITqvG
l1/eeE0Zbrp44QLX9UvMLONaf13rOxL/e25HGmplDbgm+J+QkJCQ0CDKzf+4
z6FWg1ZzG0IK9nENOF+zjZFsf+B/ZOr1Mi5yMgIiJzHzDSncB7vBgczKdMyK
n8P/8/W2Eu7Znvwvfc6jHOeX05G3m+PO4+2DoeROnIK0+Y8jfPdevBuxH2si
1rLXR2zAnshwxGzewjwxp5vXEvzPf5wVGCTtg+ehb2lF2fr1yLj3fp+PabDd
yf+kdS5avLgz55l7aQRP6nf/Y3f8X01EBOoPH0ZdUhIK5s7jmMr6xEOoiY2F
Wi6HtqkZGouFY/8qd++W3mMic68s97nhkfdLppp+59a/xDF83bK/DlNNP67t
19Xq7nJ+u/NRtlZdwXnA7e3tzADdbm5u5jhGism7evUqf+ZT7V+r1YorVy5L
9zXQGMxQVhXgzNOPIWM0xUdO5rjS3j2ps8ZhrnSNUEuvqzYYuL+K53ydYhIp
ptD1PUPL9UYM+h9NMVYHUoo72YSv+YNv2cch7oGQXljNPOqeZfEYs1z0SR6s
bU1xWJR3TTm41MeD+i8Q46P8U8rHJDbmrunHXpHotRg9iv9b1sH/Xj2QzUxx
KNbb3/kfmbb13YvjsOS9NNhNWnwxzPnftauXUV5dj8mvJf8kppf2xf3S+haU
1UOnUXH9WiEhISEhocGSJ/8jFlXRUI6FyU8xD/I12xjJ9hf+5/JU3B8xAU9I
4zHojZz7+3Lqch+PSbg/voH/USxOl761fXryNOQHBiH+9fU4GJmAraFv4Z7o
IMnBmBo9Hfv378XeqBgcXbSI2eJP+Yvgf/7irHHBKF6yFHqnE/KsbGZXnI/q
B2MbLHvyv+Jly1wxfgN9PelcoBg+ek0yc61JU/nvU2MCULrqVZRv3oz6w0m8
jekzM+/hOczBePtPmILMoMnSNv/R6fdI41uzDAbzT/N+vW+KL0yHVmeAUq2B
XKnqtEpFvUwMaGtrY+5Hdcxc/Y013DtEq66GVpUvPSeNYw6LFi3kdbmZbUeu
2r0LOouFX5fygC9duoyrV6+hsdHJ9RTpPbUd/E+n03dYyznBFpOBa6iN7aNn
wu3gMcsSmP+ZjDoknCrjfghUL3Gw68LdTia+RDXY9iQX4XRZPdelpPOE4vCI
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
duqsfF/6S5LZznjbd36qc7TM6OFxJasm+/O6HOhodAurd9os1/0fYCCLnqXN
DW4cSiqS7afHJPcJ59E5y8v5e9uP/M2uV85bMsKxynaNfC1G+Dx/n7PNzK5R
H0e/A43/aaWVVlppdSf1xedfQFenkyyP2+V3Pz8wRvJimRf8/LHnBhH/82mb
qEfkOlLXtyJxOY4URKBeWdcGZ5NkGre4WiXzljo8/l1tdbejtPYcDuUdxMwj
T4oPHmeg+7PvUdbvdHkyOjznhQlyDpgMcEAZUvhETI+aAaNyvcd98lbKmgFf
B6171+MiJkt+77uh6/FW2FvX9buhb+PVsDmi9+Osr8/rr2fLDZz/Pbr2LSS9
/IpkLgSypC7+19SMuqRTMuuoO3ZM62D20WOoiYmB2WiE/uzZYcH/yPayZjwB
c3UNHB0domusPHAAWdNnSA7vYNL93ZBddpvPThs9HnUpp2Hz2mAzl8NqzofN
cBR2/XHY9DGikbumlyu/A/4X6L13wpc9bDqr9BlYLXU+raGyfLv+mMzhUjtD
dnfpEv3zLsn1am1tnehaLl26JP56v/71r2/5mYI+fpzb9XG/a/NtNnMJTPpc
NNbb5Tmu9aUb9GV0dp4X/qbT6br4H7V+orGR2WPlmtpUo2xDlXxdX18vOSGc
I+a6i8bPXKFsW5r/MXZfzib1jNRWmnJkn3P77aYMXLxwXpavFv0FyRK4Pp9e
uYzPPlXWqePafB956OIdKYMuM/jHmrxvz4kCXG7zQm8yY/amRGyKzEZ7oxud
TW6ZDeas81DaJrIrchLOS1IHRv5HrzXytmCvm9pkbiOWxci+57njctrwwubE
oPG/cX3A/8jjyI43hmfJvqev3YZD2ZizLalLR3qnukIy3Z3H8uR85Uwsj/Os
DSeFqfG5OdPOmf2DCUUITyoWn0e3wyqv2d/+9jfSv/mNr8nMvvvuuzu+ZqKu
mMtSl6lqk6k3bG30YF9cvmQWk1VyfbdE5qBNeX1xXW/G/uzKecv5X2ZDj1ga
LZx4XWgmdp/Ilxl21RuBt06nU3TXWmmllVZaadXbUvnfUzFP3za/45xoWK7P
B7A3vx/Yt68583n3BeoVVT8/rgfXjRq/o0VRiC48DJfDLRkXjc4m5ftIbEp7
F1szNmN7xgeYHjUTOzK3oVpfITrGfwoZ2aWL4zxufzY9/1YlvSH6v3ZPB8rr
yiR3mes/EBo8biPXIeTsHuWzswvt7g6s1/jfkOrREZOF8VELeH0/7Pf4u309
KfnfS+EvIGxvGPaGHcL+PXt8/oIBrCVw/vfs7BeQcu9DSBs1Tutg9ejxOD1i
DJL/5X4YzuTAWFQ09Pkf80yYKzNlGixGI0zF55DDLOv7R/q436NDYNu4/9VW
1jl97ATo09KFm9MHUGZkTWdgM5cp14GlsNoNPn2a8L+yXvK/eNH4dXkKmgtF
7+fTFTr8XM4hP7MZ04SVORxOfP/9912fDegNQk+rm+Vv3Kw4Y+vxeCRz99o1
rgVmQyEaPBX4y5++7fGyeH391VdfdXl5kc9R/6LyP4u5BjZLFWR+13993MUb
yToNx/3aRt//+Kw2j7Kf8/3eg7n+fVMMm9WEy5c/xb/92zc/uj7ffvutPD+3
raXehYQzFbhv8eDhTLdqcpnZmxPFT6yjyYVKnVHyBsgYDiYWoUnZJuqN1Nng
wdyBGSfkT9wGp90m/mor96YPGv43QXjbUeyLKxA2Sf7HDib/43lQWnln/O/B
pb48E3pKUn9HX0NyugMJRfj5/MiuLJo7WVfuH3pVFlXUCa/m12eKdWhvdCE1
t0ryMqhppV/nv/rP2ZPZFWikxwIz182mLl0xX7d8D/jmm9//6GucbI3c/+rV
q+Ij0L34fsQZXC6zqqpK/A9Yf/3rX7v4H/WJXBfyP87vUpt4M/bnY9YOmc2n
9pYZ3TGnS3BZ2a9kgnxP43PQt4D6ZeqstdJKK6200upOysf/avFK7Eu3ze+o
q9uTvUvmf0+WnOgxw+PzPOD34VO9+MjtHomcJl/zPv7ctz4qu5giy37A/3j+
jBo9/ozfq35+XEZYbggKdfmoNlSjRVk3sr/i2kIsPbkYy04uUR4zVXJMyNjY
au7G7GOzZfkDOX/L5jpQn8j8XbJUvUkvc7jU5PU3A+T27s/ZI+yROsgFcfPx
RPQseV7uBx4X7ttRWibwXdV8LXNe+OlDz+D90E0IDTmEY6tWSZawypO0/N/B
1ZKNMXo8ynfuhK2+HoaCgqHN/5T1znxsGjKnPY7qqCjx+6sKDRX2J1rUYK9f
L7eJr5PahETY7HZhcDIna6mCxeyCudYIs65O+drsn/8t9TOsuBv0rXJ6U8Gs
YZ+W0O7T/F137WmTjA3O6BoMJvHQu5Pi/BvzesnQeI3qcDj8eR6+57NY7PB4
GtHS0tbra1heY5NRsjnvy20wmsxyjezT/ZmvbVvX7LS/jWmic5SZa2YQU3vJ
/WNzyuOpM7xVviY1Purzu5gprDz3ir3pMvcYbM7Uk+ZcIn3FOHvKGVnOI7LJ
A+duTYJDOSdD4gpkZnYwesKN93vB0VeNnmq8j7ozj+T82oWlkJm8/kkaHhoE
/G+in2HRW7G8yoDmBicik8+JNxzza7t72g1Ec//tOJonnDQ1t7LX/I8ckTPW
nCOftz0ZeaW1aKp3orzaiFM5lViuHAPq2choe3suMSOFx5oZPPR0JAdUPfSo
WY3LLBf+PmGlb1+PVraFHp30gWRuBtkb85/5u9TYUZd85coVYXjUNbcpr/dL
ne3SFzrbxC+UnI3vBXwvocdoYJEN1ns9ogHm+w3fM/m+p743NXldCE8slHXm
sSUH3RCWieYb8D+bfxsSzpRLVjD35/9RHs+8bqPZIvnq9B5Q/Q+oOwxmtrFW
WmmllVbDpzirYzaakV2VJdf9PfX/UxnBOKXPKL9LdqXmB//Y73D5L8a+gMVx
C7Agbp70nNg52JC6HidL4pSvX5b7FscvxLNHn+ua3+Utc2kXxy+Qx68+tRJG
iwnheQdkeS8df0myO/h3lTyyUl+BsrpSbMvYgkcPT5OMD7Ku+w+q6zjlB+vF
OdhgsRbyTLLLbRmbZd2pU4wpPIKfhYzuVx5JnV9KaZJ4Hqr5v+r+4e0zMU9j
SfwiOS4jNAZ4VzXPy3sixmN52FLsDQ1H+PYPkfL0s0ibPlM4hsb/BlFTV6a0
yv7srW0yDzyU+V/q6PE4t369sDBHRyfMFRXCArvnUA+59nPN/GXLYHW4YbOc
hd1ZA2NBMbKfmOXLb8nNg+PCJdhcetgNKT52dV2fvgX/UzVvtoBrTvsPrkHp
Va/XG2R2Vr2O7W1Ro8frVS7X422AjTkmqo+hfz3IA6nD6Yv5NbI4anm47k1N
TdLUHXI+WOZ8raaAfZXYjZ3G+30W7V3rxabmp6fV1tYmup2o1HM+j7khNDNL
/RfZzYz1cXhcabK0F95PFF0aOdpru1Jkm/qUha283i+OzJRcrKe+fCpvYqYH
Z0xzSnTixcjjRsZD9udV1p/zlpxfDgZbu257V/jYHzkf5zlr6ozIKqoWXRy1
c8FaP+775LOV+LS9HvHZ5ZI1MaEXfn0T/ceE5wmPJb0jC8prRQdITz5qMdML
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
yfkmTEJVRAScly9Dn5YmLFCOxVD1yPP36ZFjUbJpE+znz8NcUSl6uMzHpg/Z
eebretKjyHp8JgoWL0G+0gVLlyLv1XnXP4bHTzm2Kfc8CF1cPKw2G8y1OliN
JlhsP67/MxkrJctXzc0I/HtPvR/5H72u+qrER8Rik5xdzttK1vB16xbnm8M1
ZvhncjOUa+s62Gz2HmUK97bIJck4W9s6YLHSr8+g7Js65XOF7TodJNlld6+v
ni6/s7NT9DrkWZyrfKCP52YHqlVuFnO6VHIcqN2iJkrlRZwRpn5Peu1x4TSB
+RXkKKKlWhbd5X9GXkdfOPGG8zrFcy48sVj8B9/ckyaznWQtZCZkeLUGk+il
mElCnsrZWXIaLuvZjQmiLaP/GxkNb9n0++P3K/ZmDIoZ7HH+vA/qzqg347pt
jcrB/YujBpU+lMdgU0S2sFSuJ3nWp8pxJx/rrfaTjHbToSzffK7y2Z3LjEot
kfPnVjPAzMxg9nROcQ1O51ZIfge1fuTznIO9cqFdOS90olO9nblxtXluTFwV
K9vdncHy/CLvfnVbssxq85Y5I/Tho2/g8t1p+MmcCNE4PvTaEZnp5Tlbq5y/
1bUGVNTUorKmTngnZ9LtNl8ONTkf/zfg8yO41hblc7SuzoC8kmrRhlJL2Ox1
iYfBX/7yl75+G9RKK6200kqr64reEnblc3F5Xblc598u/2OTudFfjz57zNHl
DC7nV6kpI8Nq93RKrm25cj/1eszfGP0j/MjnhzdZciiejn5KmBg5VWDOx3Cd
QR1/6FFlfz6MYl2R8Lb30zf2axYv9ZsHz+7vmqHen/MJjhYdQau7HfWOelmP
NxNflyxlh80pOsCCmjzMUo7L6EE/U611X/bkiKmYFjFD6celx4ROUl7vHyrX
dNr8bzCbuR85L7wI49lc2NxuFL25Aikjxgx5/pc2ZjwKV66SHGNjUTEczc2o
3L9/aOd/BLZf56f2TV8/yuOyZz6BM089rWz3FFQdioC9of4m/O+EZP2SxZHz
3ajIrHiNSb+qvip66XN2TfJK9NE3yScJ9N87ITo8s9km1/dkgJx3o89Wbzjc
rYrL5PKbmprRyNxl5RqcPoFsZmpSL8j90pvijCCzSJrr3YhOLRFdUm/mJ4Pd
5CnkPqv3Zwh3Od/sFiZHbZiPy/h4iNFkQYXOKLkn1EyN8LM+au84r/ny1iTJ
EiGr4wwoZzaZ25CYXYEn3omT51I1fo/7/QfZk1bG4q0DmaINJNMjT2W+8qx3
44WlmS1WYSU6g0l85cgIecusCT5u2ro40RkGez+qeknO1jocNmw8lOXzhxwE
usTA5nHjOj26Ola0ieRcPF78ujd5Nir3pH9dvd/vjmyRs688V8jNup9vqj6P
zXNjc2S28nnChramerS3t8l8Pvkw14sefeTOZMu93WY+H8+RG7HD8f59QlbJ
5nPNeDtOPDIfUfaROlPO2yn+nwWev2SL/NlYZR98GH1W2DQZYXfPVb7f0ae0
ubkJLU0Ncg1GrR+7P977tNJKK6200qp7Xf3sKowGo+RokKs9fKh3mq5Anz36
7s08MgvRhYeFJR0piMDjR2ZKfsTYLi++Wz3Po/5lTur1Og21pm6RWSfLTi6G
3WZHcmmSfN+fz8l9y+P+SfYOpFechtfuhUdpr70e2zO2Cnvk8WQ2SVJpgjBC
ZhX/oh81iVoP1qYXIOfqff2T0NHYlrVF+bzeqvG/IHfaqHHKMZgvXoy6EyeQ
9vBknCYDHOpaOX9eLnM/rA4HjIWFOPvc87J9QV+3AWwyXnofpj4wEhX7Q2Bv
bIDNmAC7/ngAa4tXvj8Ki7EQFqtjQOfHOGtrVf5mWcw1sJlyAvI2bpZPEu97
jKVGWVcXzBa7MEt6FLa3t/f7dTDn68hH6e1F9tcX1dxYj7ySGskkYL4D/erI
08b00k8tWE2+wjlczoJy1rK13iVsqMHrRHWdUTIeyOY443musg6zlO3lTOS7
4VnCfTqa3NLkH3FZ5TIzSQ0f9VdkhCofI28Z6/cfZAfO95L5pOZWiY6MPJD6
tM5mt7ATPoa8iPkOj6w+LnOZaw9kdPGdYO+/cX69JPOVy3UG0ZuNGqQz4b55
22g5R8lruY97y//IOJfsSFGOn0OybX2sy6os04ONyrnxQMAyydl+sTBSNKX8
GefmyUutZoN4kjKLiK9Lzs3mKuu150SBeP2pmTTj/ftZ9SxUua/qG3mjvt3t
Uf0xx0iWzNEb/kw9d7n/mPnB181TG07i6Y0JMk9tNluvm1Xn+VtTU9Ovmmet
tNJKK620ulV98fkXqKmrEf1eX+RMqHkfZEpkV/T94+1Q9eMbyCYfpb+eQfkM
5MvjSOpX7V/gMfuHfQ9i6cnFaHW1Cfv7KGNr13HjYzhfTS5JL0DOC8+IegLj
NP3fXd08J7ZnfaDxv0HQ6WMnIH/hIsn/sDc3o+50Gko/2CL3kx0Fe/3uaNuY
baxsA/M/nJ3nUb5jh8wGB3u9gtEpI0b7+F9Toy9bw1QKmykTdj3na5NhsxTD
ZKzGp59eHfDMSGpa6J9ltbpgtVQJn7zxfHLgTPAp2Mz5ynacFd0i9T5Goxmt
rW3ipT9UitpBcgt6hRWV1WLWhpPYduSsZAws+zi1135qwWryq39dECkzkeRw
bY0uyYpe+GGy8A16+XH2kZyP20sPM3Ifesm9ezBTvNvWhmTg/qVHuvRat2Iw
Dy2JVvZVmrDF8KRi0QOS7XFGlXkh1NExz5V5CZxVpsYqPb9a+BIzSyKTz/lZ
z8AyQHIo4UB+X0QyqXWhmcK+LrV6hAP1VZZKf63/+DeOCWe7E/5H5r1AOT5e
t72L/9EHL7OwRrR9Y/yMjucWeS2PcXxWGZq9DtQ7rXA6HfhKec0zT4O5hGRl
jcqyODvNvGfqUH0z5jHCD3luhij3UXP74pZE3Lv4sPj8qd6R3bu/MmFE86cc
97IavWQq5yv7Mb+0Vtg359lV/kePUc4x838Pd5q3pJVWWmmllVZ3UuR/ujod
njv6XL/mzGp9q54ivod7z3yMTu9FnKsrxpzYVwaMsZHzzTzyJJadXIIl8Qvl
eccHzILTF3B54jI47E54HfXKus2RrOLg7zetg9Ua/xtETUY2+TFU7NkDq3Ld
xJwIq9cDY24eilevlvnSoK9jL5v8L3PqdNTGn4SjoxNlH26/O/mfeD1ORE1M
jOwHq42ZwF7YzIWi+7MZUyV7w2KxD1h2JGeI2VeuXBH9nkUyNXwZH1ZzWYDW
7+Y6QLv+hLTMBJsL5FrZaKgT7UxLS5vM637//XcDsj13UmQWzFZx2iyii+Ps
39WOeskpHcz852bNGclfLIzCpsgcmeEkxyTPo5aNOQ+vKd/T68yiHC9q/cj+
qHXjz8iPbifnVs1g4EwlGR/nLekHR10hed/26LPircg5X2aInDpbIbPIZCv0
XCOL5OwwOcxAZP9SbzZCvOB8bHP6Op8vIr+mlo26NbJw5kHsPJp7nfZtsDX5
H/fZnfC/MW/EiFckZ7LV/Fx64NH/j8eO5wQ1sNwP1Mmp+cD0RmQmEef+1fcs
+nXydcS5fL7uPc2dqKypFbaeqRz7tPwqpOVVKV9Xid6UyymrMSCtUCeskd6B
nAsnG2bzfMksqpYZ9v7K5iH/XbwjRbgnmSf1q3xNBGr/+tpzVSuttNJKK616
Wxr/Gxyt6iNjCg+L796rJ+b2++zv9T1F1kH1WOw+c811o1fggdx94gH4dPQz
olcM9n7TOnit8b/B1aLzo1fcE08i59nnYDijXLdfuoyyrVuHNC9T9YsWvR42
uwPFa9eKN2Cw12ugO23cBOS/tgz6s2elLcr1pNXmEv0cWZrVeAY1NTpcvXq1
1152t1N/+MMf4HQ6lXYLc7SYa2G16JSuFU2izZj4I9zvZjPB8b7sEOMpWM2V
MBmqYDDo4HA4+yyruHvRC5H84Y9//OMdLYfz1vTvZ+ayW/JDLeJX91FMbq/0
VIOhyYWYwUF/M98c5LX7+T25l+p/Rr+03vAVmQN+46ho5sj3yInI117ckoTn
NiUKj2JuSL1kfthxqdWLD47kyDzo9HW+5+bt2OX9p/FSm+tG7kc927ztycI7
uX5kfWShRpO5K991rvJzzreyB4JJ9rb7gv+NVPY9daFkX5wVp+cj+R91ocxB
5j67d1EUHlKWeyipWPR+zc3Nkk8U+F7F/yVwJp8zsmSAzOVx2K2o93rktUVe
6FXOAd62tzTKY6gT/P7b3yu//X/x97/+Ca3NDcrrz+Z7rNLUpXKOnJ6U/aXD
5fnL8/FsSY3Mq/P4d8/8UDWA3D4t40MrrbTSSqtglsb/BkdzzndN8go0uprh
crjxYuzsQcfXfnpgDPblfCKzyR9kvO+fTdbmue/WDuR/BS+/gsyHxiB7/MTr
OmuIz54OtZZZ2YcnI23UWMmTtbe2onTLZqSOGhf0dev1NinbU7xmLWwNDdDF
xeH0g6ODvk7BbOY9Zz46FaaKclhd9bCZ8mAxlcHp9Mq15Xff9b9WjtfsZH9G
o0V5bh2s5mI/74vr4ng/rvu7NQf0dSyspnMwmmySsdEfRV6q0+lke37zm98q
/TvJ9Pj66697vS8548fr/SaPw8f/hqD+L5APkfV1z2/t7t/XW++9Cf7ciMjk
YlztrMfHsfn42bxIFFfUSYYqtWJkSdyfZID0iXvmvQTRFwY+/63yZfuiySXJ
/ArK6oRJUhfJ9SPvrTOaJbuYjJK6L3Udxw3wPHJvji/5H+dWz7e4setYHv55
ToSsO+8fv+LWs9uSI7LmOE5klCn7wybaV7LQJTtT8M9zI4SVrj+YKTO8dqtZ
2N+NGBgZPN/DLl26JE1tIFt9LHkgGRrPhf/4j//A5cuXRXer1je//0Z5/AWY
+b8R5TFcj+YGp3DJlz7oP/7H/TN6mY+Bhp8qRmFFrZwb3fmfyjT7638ZWmml
lVZaadWT0vjf4GiytNWn3hR/vcMFhyRvY3wvspj7s3l+vHT8JZTWlqDJ1YJt
GZtFExjs9dI6ON3F/9wtOLX9Q8S8sRKxq9d2dfS6dUh49VVk3WVZDYOhRSs2
f8HQ53/+mVdjYREsynVfwZKlyBg/MfjrFcQmD82a9jhM5VWwOYyilzMZytDY
2NyvnxWozeH1Nq/L6dHlrW9QrrN1Pt9Bw/E74H0/1vQIPA2j8jz1DY39sl3k
f3V1daLXMejLYdSXwGC0CBNsa2vr9XLph1jvtotXnnjWDQLWM1ibfn6cK44+
XYIdR/Pwxu40YX7kNmRrnKekhqusWo9nNybI3G0wMlXuWRyFncfyxPeQ3I+s
z+2f9eTs6+KdKTKP6lbun705cdDmfgS2yv/IrBqVdWfOMz0Ldx/Pl5+RmVHX
qXLWQJ6pfs9Zcer7XtqcJPo8zsE67TbJi/kkNg+lynFrVZbtsJlFx3c7+jd6
5X165bK0U+aqzaL56+6h9/WXX8BqMSnnjUXOF7JjzqQzz5raxoUfJfcL/1PP
XXUm/H+9HC77r6ne1ZX5web8L//HMFDeDFpppZVWWml1s9L43+DofwoZieWJ
r6HD04k3EpcJWwn2OnXvyX6PwsMFEaIBzKk6IxpFzgtP0HSAd1138T9XM8Jj
o/Fh6F7sDN/v7xDsiIpCzNq3RAcYbGZyt7XwvwULhw//y82DsaAAaaPvvrnf
7s156KzHZ8JcUwub0ypzsgZDHZqb+8ZbitmUDQ0NMsf6y1/+Uu5jlkirci6R
k7G/+eb3aGhsgdl4zs/++pr7BfZxWE3lyjW0rWt9+rKYM8Lrc3onWs0l4kVo
NVfDaLSis7Oz18v97W9/K/5vZB/0IGMusJqBoPX1Tb5ERsqsYOroqNsiw0nM
qcDLW5LEE3DRjmQ8vfGkMJZgsD9yLjKuT2LzhUWuCcnAy1uThHnx+JJ1zVgf
h/nbk2V9Hx3kc7/X7X/lvHxtV6qcr2Sa9O1jvjN981QPPR4H5i1zu8i72PT8
43zvfUuiZCb6TFENrBazsC7693ncLrQ1eZRbp7weqHvrSS459cXkex3tbWht
9KKmtg5l1bWSp8HXKvki/Qc6OzqU96EmuOobsWZ/Rte5wibv4/w4c4apy+O6
juvD40Gez4yc5co5m1daq+ynKqSerUBSThnKqmphMZv87ys+Buh2u+X/Jlpp
pZVWWmkV7NL43+Do2cdmY0fmVpyvv4i3U9/CPQcH0vuv5z3m0COYHjUTOpMO
Hd7ziMgPw8uxL2LK4ek/8AwczE295S9Cx0iGCbnmjR7D+/ma+IVkWPuaX48N
n3zT37mbmvuCOdEtrlYsObEQD4c9imkRj+PRiGmYFfEUdoWHIHbVGo3/BaGH
Hf87mwtTcXGXx2HQ1yuILXkoj01DXUYG7I3NwsXI6v70pz/d8ecBavzIvGpr
a6UD+Re1K9TesHnt3aA8t9lY6p/57S/2Fw+bMUl8BZkLfLvaoZ4U2SaX6XC4
lO2pED2j3XAKRn2Zsv3ne7VM8gtmfRqVfUUPssLS2i4PvWCznmA3tWLMBKbH
HPMgmPMx8+04rNybLrOjzBNhjgP9/8j5qPUb4W8yp4n+5YxYGi2/PxB9/+Ij
MsPNPGI7/eg8Djy9MQH/uigKv5gfieMZZdCbzLJu9Ljjug4V9if8740YTFod
i5ziGtHtUdN4rkIvGsd6v48e2RtZ1gdRObKdy3enQW8wI+JUscw6ZxdVo5Fe
e8prlE2dG1mf2j0tzvXyfYf6Ob7XcJ1W7csQRsxzhNpL+mq6nJzrtWF3bC5G
Lo2S11bgudJ1vqz08eW+msNWPSDZz2yIR2hCoaxTvceJC+2tuNjRhtbWFvkf
yqeffio+AvyfCt9btdJKK6200mow1FdffKXxvyA2Z3wnRU6Rmdp2TwfKlWuO
l2NfwsjwwZmtS8bHdf44eweyqzJlXtlhcyjr/PKA5wFf43NjuvjcrZqPJbda
c2olPszcirnH54j28kaP5f0vHJuNbRlb8H7aBumtGe9jVvRTN/2du6n/Ye99
2JK2Ea2uNrx6Yg7uDaMO9BGMjpiMKRHTNf4XxNb43/Du0yPGyBxwbUIizA6H
5Ff0RVGjYzAYuryqOOvL+vbbb0XPQx0Lr8m///7f0djUMgD874R4C4o2T1kn
vV4ver3+KG4rt5nPZTOmw1wTj/PnL/RqWeR/9C3jvqSObe+JfGEHvfXIGy7N
eVHqsajN2hSRjbcPZmJ1SAbyy2tl3jcy+Rxe3ZYsnnH3LIwSvV13FkduyBzi
FXvTsTE8S5gcm8t6O+za933Z6w9kYGv0Wcm28LrtkkXM7JMxyvEkh4zPKhfd
4uRVsTIPGuz93Jt+UNkO+vV92l6P1NxKvPC+8t6ivN6pxVS99Kh7jFO2lT93
O6w+jZvSZpNRbr/88ss7eg1evfq5+AM2eh1IOlOO9yPOYMSyaN9srbJ+z248
iSOpJYg8VYyqWqPwxtTcKkxixojyuIn9tG/IclWeS1/EVz5IwofROf6cY4to
opl5wv8laKWVVlpppdVgLv5/rrGhCSblb/fso89r/C8Ireb+VtSVo9JQKbzp
/oMTBr2+7OcHxshtcmkivI56YZYDzf84e/xG4nIcK4pGdGGk0od70JHSdpsD
F+svo6yuBIfyD97wsby/QJePC96LaHW3C+vk3POZqkzRPfbs+YZvcx+cqcqC
x+7F/BOvduXVjIt4BNMiZvj438rVODNmAjImPSqdyVuN3/R7a/xviLaybeR6
3E5pfs3XzHXH9mGUffABqsLCUHPiBIzKNWhf+cn/7ne/8zMwX1YlNWxXrlzx
++5zls0uesP29k44XfWwmMoHgP8VDQj/YwkDNFmE/1n0yt82r2/71SbTIwvt
adEv0Ww2ia5t1rtxwq+GKh/qbVN3Re5HXRznMcOTiqHTm3C+xSNzpm1K06vN
YDRjT1wBQk4WCge8WVNvxlt6wVF3xbzVtkaXsCnqwtTv+7K5TK4rcz3okbfs
41TRLXL7hgv/4zHiDC/9KqlVpUZzf3yB8GtbQH4t83gdNgs+//zzLm3bb5Rb
vnfcSXF5HqcVp/Mq8daBDNHZkfWq3I3fk5+LFnNRFHJLaoX/8bjklOhkncf2
sb6Wz8dljvY312fOB0mihaSfodFoQGtLi+T9MDNoIHLXtdJKK6200upOiv/r
NxpM0Blr8GzMMxr/C0KT/007MgO1xloklSbgZyGjBj37Y5P1UDtXXlcm+r9n
jz6HUQOcV/yz0DHYfeZjXKpXrk/tTthtduF6Pek6U52c90az0f+7P3wM73fa
XdiV9aHMZ3+Qvkl5vEE0MDf7nbuu7b7bm/G/o2veQiaZxrQZvp6u9JRpwecs
w7w1/jf0+vTYCcL6sp+cheyZT/r6iSeROe1x3zY/NhWnR45BycaNkoVsbW6G
u6kJToejy1fqTq8/+ZmAjM3adb1vgcFglmwMmykbNmOasDFTXQqshnTl69R+
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
ReJIaonoFy0Ws3iH0reSLJfnb2/riy++EO88vdHYxRVdLieMNWV45b1o/GxB
VK+2mdtBT8YPY3IRlXIOIScLZd+3NbhQ73YgPb9adIUvbzgMo9Hk9920yLbV
1tZqnE8rrbTSSqu7ttT5X4+1HquS3sR9Wv5vvzf1b2R/4XkHhJkklybiJyGj
xEsv2OvWV33/wQmIKTqCDs95ZFak4ecHxoimL6EkDtFFh/Ho4Wl4LGo6Zh+b
jUJdvjzugvcivI565FXnwGA24EL9JeW+S8rnNqd83+BshN1mR5u7A/tzduNn
oWOQVZnh08Ao93MeS+N/A98943+TsTF0Aw6GHEbk++8j5Zlnkfzc7K4+RW7z
+Mxhl+ka7B52/O+xqUibMNGnAzwWC6tfS0L9nKOjA0WrVolHnjDAIaADvMb/
XMr7VwlsxlSl05VOgZp3YTOmwepyw1hYiLz582GuqIS9qRm2lhaUbdki23t6
zHjZZuoHORvc0dnZK68qfh6ghs1idcJqHJz8z2jQ4eLFy/3waej64n5oaKhH
W6MHR1LOCV8is+OMKWcXwxKLMXFlrGQITFwVizkfJEmeh95ogM1iFA+xjo52
fPfd96LFbPI48OaedPElCzar6+se6/eNyyiowvlmt7CW9yOy8c9zI3ql6+pN
j3kjBs9tSkStwQSXw4Z3D2b1mQaQnHbU69HiZ1hcUScauR0xZ3H/0uv5H28H
iv/dyK9v2roTck6qfIy6Pq6Huh8eXx8n3oT8GdedfoWftteLJi85pxyVyrp7
3G7xDaC3AOd1e8vZ+b8EZohzvlYyBl0OfBSTK757pVUGPPs2tyEK41fE3va2
c3vIlvNKa5X3f7PkEjfVO4XLM1cnv6wOT204Kdv52No41OjNyt8Ks2iG1e3q
aX63VlpppZVWWg234t9Al9MlmQ0LT8yTWctg84Th3veGjsOOzG3CS9hhuQeG
3X4n36QfYKW+EoW1BXLfkzGzxLevw9sprI7X7XqzXrJnqIHMrsyU+0trzyG3
5izOVGUqnSU8kPcxG2VW9CzUGnU4UhAp/G+Cstx3Uteh2d0Ki03T/wWjb8X/
RkY8jEVhCxASEobQjz9G2ownkDV+ouR9BHbGMMtzHQw97Pgf+7GpMgtMrduZ
WU8hffJjKNu+HfaODmFjhW+ukPtTHxo1uOeBlfXizG7Oc8/D6nDDZiFvO3ZN
96cyL2Oycu1aC1t9g/BNck9mIBvy85H7yhzJDiE3J0vUpWegobMT/7eX+Zy8
Zm9sahLtj810BoMj9/eH/O/8+Yt9/Eno+n1ARnDxwgXlufSiKaOOSOU75Cvk
KCr34hwlsx5Urkf/tMzCGqTnVUkuc3uTBy1eh/j/zd2WjFGvDR+/P7aac3Eg
oUi0Yzq9GTPficNkZT9RlzZg67HiqLDYyJRzwiD3xxfi3j7QAE5Qjjt1nxNX
xIqfYXujWxiWqvdTHzfQ/I/PRy9Jnm8bw7Pk/KrRGzF7U6LoEul9x5yLOduS
hIvuOVEgXDa7SCfnLb0KXQ67sD+324X2lkZhZG63u09eR9QVMOPDrKwXn/dy
mxcr96bLa4fayQeXxmBcL9gfm9u37UiO+Pq1KX/bOMurzhVTs1hdq0dxeY1y
LPTYFJGNqlp6/JnuOLtEK6200korrYZD/fd//7fMU5JHUaMVbJZwNzR5CfVr
re42ueU87FDM/PixZiYvGWCFvgIX6y/jZEkcsqsy4bXXiy4wujAKR4uiRdv3
aeNVhObuF8/A7Rlb8EjkNNEKqjPCgc3ZYHLqDanrhfNRZ/js0WdRoMtTPsu6
Nf4XhO4J/1se9hrCQ44gdNdOpE+ZprG+Aephyf/8na6cQ+SA3KbcOXNhqqqB
o6NT5oINZ87g3LvvIOvxGYNzHnjyY7LuzOmt2L8PNrvLz/+66+38uRvmUtg8
9Sh87TXxOhQvRDJzVS/L5Y2dgJpTyWjs7Oz15wGZ/3XXw2wsGWTaP3VfxMFo
qOlX/vfXv/4VRrMZHqdN5ghnvRN3XZYE5yvJT26ka6PeSJ3DJA/cdCgbR1LP
4WhaKV7bldrnnnTBaDIvlXtxv/zvuZGSY0JNHHnSwYQi0aX1t99f9+Zx4XNy
BrnF6xTedV8v+Z9P7xcj3I/HdOW+DMRnV8hsqdflwPuHczCq27EcaP7HLFvO
7nK/U/dGP0qXcs4yw4M/J7du9vo0cWp7nA5hYTxGHhczhUySXUNvPvoFVFVV
Sebt//Ty/wdqMevD5/dnFD1erdGMqJQSvLotGQ8tPXLHWR+c7d4cmY1Gj0N0
uuT15H58Pj7vlcuX8fmnV9Dg9cBk1AsXrKurw69//es+epfQSiuttNJKq6Fb
5H+NzibszNou1/HBZgl3Q3M/7z3zsWjW9ud8glFhE4UBPnxoODFA37Zwpjyy
IByt7nY5zz7M/EA4M5s6yHXJa7AjczsWxc2X/fDgwQnCDtWckMDm8jgjzX1F
xsev2ZydJjds0fJ/g9K34n/M+Z156ElsDd2G8J27Nf43gD2c+V9XcyZ4zHjk
zp2H8h07YFGuA5mVwXlgXVyc6AMzBhkDpC6RHE+ffQb2zk7l+tTlz9voztz8
/n82h8w4FyxeLL8n3C9wVp76v9HjUZ2YhAZlu3tbnP91expgNpYOQu1fHKym
PBgNBnR2nu/DT0HXipnCktfrsgs/4YwhtX/jb5NXBPKx4eT3x/1Atsd+cOkR
vBueJdnIybmVaHQ7Rec18+040eEN9Lqp/K28Ri/6vz2x+b3mf+S0S3amyNx3
rJ+xMc+EzGzL4RzZ9offvPHzDyT/O5ZWKppLevQxn9dms8oMMLNvWxvccj/v
k1bzgpi9oWwHWdnFi5fknKdXJa8FvvrqK9Ht8X2gt6VmfTBP12H36Qvf2J0m
Pplq/vOd6kKZWbKJ/M9tF70i/QmpNaTvZuC6c873iy9+KWywSfmbwG3USiut
tNJKq7u9VP63K+tDjf8NUHNudf/Z3ZL7qzPWyEzr9KgnRC+n5uQOl/5/9j8k
ej3+/5Vzu0/FPCWcT/059Xxkgbyvt/6HPG8/zt6BZmezxv+C0Lf2/5uC+yPG
Y33oWsn+OLZqNbIGGY8Zrn1X8D82GeC4h4WB5bz4Eso//lgyMsgBmY2bNeOJ
QcOc08eOR8Ebb8CYmwezzgCr3SwefzZDYsDsr9onxA/QSr8EZXsMOWeR8+zz
vrnmgGXS/69082aYlWvt9jvgf9S+udzkf+WDjP8lwGrOg8Vih95gwKVL/aP/
o09frU4nuj+yLfrXDeQM62DrMa/HCMNkVgSZ16NrYnEis0zmX0/nVYkPImcw
ectMZLIxaruCsc9U/lZTZ0JxhR4z1p3AyF4wV7JLejkajGbJ+aBujgzrUFIx
nn8/UbbvRtrPYPA/6kobPb4scLWzi2qQW6ITHhh4v9rU9/nY38U71vkFFpf1
t7/9TXKwyf74XMzcLSiv9eli71DzpzZ1njwnmftR7+d/zDknA7zZ9pAD8r1N
K6200korrbTS+F8wmjOrzLT12r2SXWu2mGE0G7EtY4vk5g4nBkjdHud5n4ie
hZlHnsSkyKl9/hwa/wtu9zT/942w17A3NAxhH36E9GmPI3vMBMn7Fe+/QcBl
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
I3PQ3jh4+J8cY+VY3aPsby6XfPNgYpHM13L+NVDnRzbGJtPnvC+brxHm/A5E
/fnPf5Z1Iv9bG9Lz/fdj+3WC0gcSCuH9/9l7z+go7mzt93y5n+677rnrvOvc
OXNmzoxtbJOzjXEO4xwx2TYYcMY2JtiAMSajhJCEAiCQhCISKOfUqbqqOilH
MDiM43hsz3jG4Xhsn3nnubV3qzUiCYWWSoL9rPWsVre6q6v/VQ3dP+29H4/G
PJqYXzCzS0QikUgkulzE/M/XgHJLGZ48uLjX7+3iofG40Ol4IPZ+FNTmw6W7
u+rXppu+X6PJxK23ZL+Fk3XvoMJahuv3SP/0cLo//I/Y35jwqXgiZDEit0Zj
97YQbA4Nw75ly5B9zYQRk9F6qfhy539kYmUp4yehYPkK7qGl3A29qRma8Z24
Yvt2pBF3Hu7zjrjjtJnnuJuB9/h9yrUTkDJmnN9Xj++uWaT6Rer9Ld24ETZF
Mb7fD6w/lrIzKVeXWJtmD9Tdmd3zexiq4xgUmkWo6fj888/P2Gfq+yMmRX3B
itMFRbHBacs3Lu2wWu2cY9IfffWnL+DWFTy67hBn/prNss72lB58KsDbKFOB
mB/lQNz0fALXg70cknmOicGEJhagrcGDiKRCPLk5lZnMlV0sibItiFdRPy+x
P13XLthPyf2WHhdz0ud3ZfD2Z4+QGsAA/6u1OTB9eeyA9okY2x0vH+Ce2s4m
L5431o4Yqpn8b3rXayNOuyo8C29EZfMx0lUnczbqg6X5dxaLhd8TxMcqKyt5
VqYZCmQA13kGx/+IedIa/sdj4XjEeF/6WSdlf58y5XWJRCKRSHQpiPhfZ0Mn
Z1D8Ysd4zAy/wXSWcLmZ1vxft4/FxozXuQ+bWKDwv/55QugMY90eQHFNEWrs
1cL/htn94X/kyeHX4a6wu7AgZD4WhyzElp07Ef76euxbvhypN98mecBBtPC/
HmsxYQrylyxF8SsvoyZmH/TmZq6Zobq7tBF4zhHny7jxZmaUVXv2oCpiD88H
pNuICdKcQMr8oNmGNuN1fPzxxwP6HED8j/I1nKoLmiPT5Pq//dx/TD2/itMN
m82Ourq6Mz6znD59GlarlWsWKRtFU/I5K5nqBTV7JhSHg+sAqW6tr/ryqy+M
x9mRlFOBN/cd72Jt5jKtyUv+OZcv4IldJu5HM+qijxRjW0IekrLL0Vrv5pqr
s93opTxYjRkRXVdVJ3Yn5iMiuZCzbf9rbiSzq8SscvjcOtxuNzOWP//5z+dd
q7r6emjGNlrrPdyLed+qxKDmuw6W/9VYHXx9oPzv1pcSOOuEepxvfiGB13uo
+V/g+PaspaTt0W30um4z9imvrBbtDW7mag7mfq3Mxanel2pjqX+damK//vpr
/rfg22+/HdC/B8EQzRXyGefcQPkfrQM9jhgzzRDcn1XG9bnvvPNO0HOLRSKR
SCS6nET/j7Y3dCC+YB+u2j3FdI5wOZrycK8OmYpdx7aj1duGB+MeFP7XTxND
JX6dUBgHm2IT/jfM7i//m24cr8lddYD084bt65kBbg+NRMjGN7Fv+TJkyjzA
4DAv4X9nmGrmqIYudep01B4+bKxLG6qjo03PBDmfqW6RZv05HXbeT536L+vr
Ycs5xrkmTmJgpWWw19RwDdBPP/00oM8B1Ef34YcfMU/THBkm8j9/3SGzP0XH
+++/j2+++Yb7k3uK+BTxSs1RxNkg/v1N6Hp8AlRnLSwWGz++r6yAeoaJj7XU
u1FUYTmD55jh6U/HYPazsZj1TBzmvJGEjTHHsTI0EznF1Ug9Vo6k7DKUV1vQ
5NPR1uTjvFuq9yLm05spl9Wl02PquN6vpMqCyORi7g2mrF+3rnFNWVVV1Rnz
Fukc+eijj7inlHqAiZvrxiVxspHE/+IzStFsvK7t+/P7XX/n7zPdx9s40ezD
5thczkHu6wzBgfA/quskvkhzFIk1zlwe6+eQXeySaispx4TYH9W/Edej+Z7U
5/vxx58M6P0+HKK+/P7wP6pxpIwQmrtJl4G8EMqXPtVax8yTepr7w/RFIpFI
JBKdK+F/5psygJcmPgmf7uMe4N9F38X1bGbv12gznb+JxQdhVazC/4bZ/ed/
53puyBys3/E6toSEIXTjRqTdeLPUAQbBwv/O41mzcWTcRJS8tgp6XT3Xz1GG
xrDPAbyIA/xPKS+H6u6RA+zz8X6rLhc0jwc2h4PrYgYj4l+U/2E+/9sPu60W
HR0nztlHmitG3/89XuOYOSp6cL+ze4fTjHXqPy/46KMPYbFYcd/qRK4DM4tj
TVwaiztW7EZycjJsTh1VtVZmcrRv7S2NONHRhpOdbWhrbeHZblS/2ddcV+J4
gZwUmgdHGR/El2sslD/j4H5qqrd87733zpivRuywoaGB58gRJ6W1bfS6UVxu
xa0vJoyIrGTif3HppTjZWoekYxXMkvrL/4jZlVRamTcRb722H9sYCP+j3uJ5
G5JQZaGcFRULNibj/3ssnLngjgP5vM6VNVbYrLXdfa90XOh4j+T5d8T/aFYf
5X/Q66HXSTWrVM94Pp5KtZpU4/j4+iR+7z23K51nUtqJ82san5c0f1KyPkQi
kUgkGpyE/5lvWvdnkp5GZ90JLD+8FFfsnmz6Po1GC/8zz4PlfzQTcHL4TEwI
n4ElIU9gy67dCF+zDkduvR0ZMg9wUBb+dwHPnIXUiVM4U8P1zjuo2bcPqRNG
0NrMms37R/klSnnZGfzvbBMb6u+8u7P1xRdfjAz+58iE3WY1Xs+5PPP3v/89
MzDq+VUdORfYz0BmcCVn11IvZF9EXKGjox2aquD2lw+YWs929eJo3LcyCtXl
RfC4dJx65yTee/ddnD71DrO+YOqzzz5jdvz+e+8yX6IawovlxxAbpDrB4yU1
uOuVAxj3hPnsryf/O9Hiw4Gssn7xP2JSxKjmbkjiukbqAx/Tz77V/vC/wPMR
77IZ7zvKVK73uRCZXMS30X5Qb7XmVIzjf4Lf3xfqxx6JIv5HbDkiqQjP7kxn
lroqIptzS85m61RzSTM3XwnPQlujB7sPFjD787p1aJrKvf4ul4vPUzN7mkUi
kUgkulTU0diJ/YXxwv9MMq37isNL0e7rwDNJy+Q4DGIdhf+Z48HX/13P/cDj
wmdgqnF98/bNeDssEgkLFiBrynTzWcwotvC/XtZm6gwUPvsc19ONNP5H/ciF
K55BTXwCnDYbnLo+pPyP8h7sdrP7fxOgKjW8HydP/rP+j2qdaOZfQ0NjV98v
sb/4XrYTD9V4HQ6H2mf+98UXf4RTsXPf6PRlA8uOGKgnL92HSUv9M+DGPhGF
61bEISmnEi5dNS3DoTfR8Whu8GJdZDZ+PS+CezfNZn9n87/9maW4to+5HYHH
Uh0e1ZtR7++hnIp+1f71l/8RM6Wea+JcPo+L38dU6xfoc03MLud5lKdOnTb7
cA9IxP+sxr9bxPCa69xoMkx9vM/tTMcVxjkTWAd6n81+No5nWGYWVPP9qZed
GCzVmVKfM/Xx9/V9LBKJRCKRqHfR33G9ug/RBZEYs3uq6RzhcnRP/vds0nLh
f4NYR+F/5ngw/I9q/m4PuwPrdqzF6t2GQ9bj7V07sSliDw7MF/43aMYl/O+C
pv5ayv7VjO+Y1bGxI4f/GftE/K8mOoZrE52a8zzcj2awufhyMPyPegg7Ojrg
8/mYO2iOdJP5X7mxHy7u+aOsWepTpdo8eo2UeaCqds4H6X0fje04svrF/776
01fwuJx4eO0h7lPs68y3wZpqoaY+FYlpS6OxaG0UNmwLQ3puqbEvfvY3ErMO
6Hg01XvwZswxXiuzud/Z/K+z2YfDOeXMlnrmaVzIU7oeS/22xP4Kyy2cizK5
nz3N/eF/Vy3Yi037jqOj0ctZw4H39ceffILWlhZoTjvXY47E498XUQ0pcTt6
35KJ5VFmcUmlDQmZpbh+RRwfH5p9SH2/HrfO8w0Da0FZxvTvktT7iUQikUgU
XJ1oP4Hj5ccxO/IWTBNeYoqF/wVvHYX/mePB8D+q+1sQMg+7t4cjYv0mRK1a
i4jVaxDyxhs49PAjyJIckEFZ+N+FzfP1brkNqtM5ovjfkYlTuC5R9XiZ/WmO
ozzPTlXdXdxPZQ5GORmqqgya/1Fvnd2h+nN0zc7+tQWyf138en2+Onz22afQ
dJ9xeyECGSEX5Yhd/I/yQ/oi4n/Ur7g6IpuzB/rCjQZj4otjF0Vx/+yOsGgk
JqUwI1EdVmhOf83TSNVI539NPjezpDXGsfzNvMiLslzKp3h03SG4XRo/7tF1
Sdyb29/nD/C/ilob9w9fNf/8z03n1v9+NByrwrM4b4a4e3V1dfd8vx9++GFE
1n0ORB988AHPjSTT66w3jo3FrnCuDfG/qxdGYsayWL4tkD1DNX80g5J600Ui
kUgkEgVXpzpPIacim1mJ8D9zLPwveOso/M8cD5T/Efu7MfwWbNn6Nt4O24MD
8+bj6IQpyJhxHTIpi2HmLNNZzGh3ypixyHngIehtbSh6eSUO/+pKZoBiw9dO
YAaoKoqf/42fZPrxIhOHLFy5EnpTs7FvpdDsScZlMVRnkWEFqlbHdXK6dR+z
MpvNwbUyA1GA/ylOHZpyHJotzkT+52d3uu2QsS/G63UUQVHsvG9qd21ib32/
PfnfUeOxLu5xuNg8O9If//hHYx39swXvfOXAkOd/UF7GA6sPcdYEzX2j7A2H
w18rRfs8kkU1mSOR/129OApJ2RU42VLHHC/lWCVn6k7spY6PGBT1e+88WMAs
7lB2ObOpSQPIMwnwv2qrgxngA2sOnZOLQveh7a/Yns45w16XBl3XceLEiVE1
36+/on7g2tpauHQnympsfEz+8/EIPPb6Ic62tjuc/G8bZRsTMxSJRCKRSDQ0
On3iNHIrcvm7uPA/cyz8L3jrKPzPHA+W/721exv2vLYWqbfc7ud+188S9jdY
G+tHbKv0jddRe/gwz7izHT2KyogIVEdFi8l7o3jun26sTXVUFI5cM35EnHfE
IQuffwFaQxM0RyozL92aYDgemj0DmpLLLIyuUw6ux+Pj79cDEfUXfvLJJ3BS
L7HjeB/52tDXAfpfbxx0exZUJ/X89pX9ddUR2g/B6aiE4tT6lBkayP+w2uy4
4+Wh53/U/0mzBtsa3HC73fj888+535kuR6Iod4RqTAM5JO2NXrwVe3xE8b+J
S2J4ht+b+45zjSzt4zM70nut5aPjfNcrBzlnhebULd6UjDELIgf0/NRHTD3D
L+zOMJ7bg92JBXyce95nnPH7O15K4Jl/dV4dNuN883q9Zh/eIddPP/3E9Xwt
Lc2osdqxJ6mI+60rauzGe8DDx4tyPi5lBioSiUQikdmi/4vdugdZFZn8XVz4
nzkW/he8dRT+Z44Hy/82he5A3NJlXPtnNnu5ZEz5tlNnwJ6XB1dHhz9Dwm6H
RjkSmibuYVoTp8OBktdeQ9r0mcPPALvm/ZHTZlzHPdvFq16DVt94nnl8XRzQ
FgvVcYzzA6i3bjD68ccf4XA44STOxrzRzB7gc2v5qP6x//sUZxzTXOPYevj1
9UWffvoJaizWIed/lJfx2/mRWB+VwzVnf/nLXwZ1/IZa3//wAxrq6+FSHaip
taK0shaaquKNqOx+Z+QOpWldqQf4SmNtqY+b+N/TW9O4v7c3/kfH26Y4mdk9
sz19UK+Jtnf7yv1cf/hWbC4f5575KFQPSLMFLVYbTp8+xfPtvv/+e7MP8bCJ
6hxpth9lG1MNqa45+XpTUxOvBdWWikQikUgkGhp9+OFHqK6txiOxD2FC6AzT
GcLlauF/wVtH4X/mOBj8L3b5M5L1MRT8LzcXuvGdi+rbKOsi67bbxV3OvPlW
ZN97H3NR3fj+ac/LN67fy+s2bMdpxvW8H7kLFiBv4SKkTp6GrDvu5H1yunwX
yOP1z8CjHmDqje2ZlTsQUe0bzdviHmBH5gjjfwcHuD/xxhrmM//rK1MYLv53
5YJIzn/dm1IEn1vj2qj+iuo2qeaTmMmFTL8fTH4ErRuxyeamBq6LPFpUjSfe
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
nBo6Ozv7nG/bF1Hfqe7ywemgOYCjPQckwXgdldA0N9c2kj799FOevUbZGS31
Hq7L+o/HI0zhXMQbr+rq2f2vuRG4+5WDKKmyYs2ebPy/D4ViQ/QxNNS5cNtL
CVzHN9jno/l91O+68M1knkNI/Kvn66afAzab4Q3UxC1veDYOB7LKOYN3+bb0
i/K/vLJanGj2Bq3/l3ylsZ0NMcfRapxjUUeKuYaT+rhpzqZIJBKJRCLRcIn4
X2tjG1JKkjA78hZhJCPAwv+Ct47C/8xxT/735MFFxvrfhNui7riob466DfdE
3YutkaFIeHElsm+8hdnI5WCa+xao0Rsy1mRsO/PmW2BLz4De2YnSdetwZNwk
05nbSDLV4h2fMwc6ZaRERiL9htlDymWJNx6fO5dzPlRNg+qshaqU9LPWzs//
nE6de1hppkcw5atr4L7ZS6H+j2orbTaFOSllaVANFs23UxQntu/PP4MDmWma
1zfuiSjcsXI/7w/Vj1E9WlOdG4WVFq4PHPfE4DOJqfaQWOJQ9jibaeKbxFFb
G/zcrbfjO7mLh+aW1DKnWx+VgzG9zArsj4lD0ty/5OMV6Gz28ZzFYLN6kUgk
EolEoouJ+F97Yyei8/fi1zsnYqbM/jPdwv+Ct47C/8wx8T+aJ9roboKu6YZd
3XYZphn2Ds0Om0eFpc4Fi0/vttXngsPng5PyV3Udqst16dvthub1ovztLVxr
NlQ1eVxrdvsdcCoKVFVFwdPLeO6c2cxtJDlQ/0f8z+mwM5s7Mnna0PK/xx+H
q7kFenOzcT74/LP++s3/jsHppDwBPaj8j3IxdOMcpWxhTTk+ymsA90O3HTLO
fxtnALc1eFFcbmEuRDP4iP9MGmGz7YhH0X5R/RjxyfZGr2EPErPLcXUQagAv
ddP6Uf4GZR9v2peL31IWyoXuaxz7e1YlwmZXkJZb5Z91GKT9mLFsH341JwJh
SYW8L3a7HZ9//nnQ3qcikUgkEolEfVVHUyfiCvYJZxohFv4XvHUU/meO/fxv
LecKHSxOwJ68METl72FH5ocjIS8OubmFKE84AGtoBGojIs9wTUQEqvbs4fqr
y8KhYbBmZjH/qQoNRcFTT+HI2Amc18GcaNZsZndUq5c6YQr/TIwwpas/OrWL
GfL1XuoHmf/dehvXmVVF7kWy8Rxm87aRZlqjo3fcCWtqKh8PqgUc6v5fyhep
Dg9HZUgIHKUVUHV7//mf/QicigW67g4q/6O/EZ4+fRqK09VL/vBosX9N3cb6
5ldYEZpYgLtfPcg1XjTbbrjr/ogtUW8t5WkEsnppP65dHHVOhu+v5kbgkXWH
UF5t4z7WmNRiP8taZj5jG8kO8L++5PlSTkhCZhlOtdXhyPHKXnOC+3WcjeP7
m3kRXMt5vKQGXrfOtacikUgkEolEwy2afdPoacL+wnjhTCPEwv+Ct47C/8xx
z/7fe/fdi/9r+1hcadxG/rdd43D7ztuwedtuxN93P9KvuLabXV2uPvyrK1H8
0ktwtbXB1d4Op6aiZt8+5M6f332fvAULUZOwHxXbtyPnoYdRvXcvO+fBh1G+
fRuqo6NRHRWN7LvvRerEKeftWU2dMh2ZN93C/I/uK7P/zuNZs5Fy7QQUPvc8
9PYOY80TOA9kKPM/aNvEdpOvuAa1h1Og1WnoPe/jfI6F054H3eXFzz//HNTP
CT/++COcqguqY/TX/9Flk09B1JFS/OejEczbhpNHBXI0Ah77RBRufC4eEUlF
iD5SggdeS+Q5f3tTihF+uBBhhwrY4YcLsCXuOHJLauDz6Kiy2LFoU0pQeoAv
ZfeX/+3PLINb1zkveOIgzw3iyeMXR+H6Z+Ow82ABCsqt8Lk1eL3eoL4/RSKR
SCQSifoiyv11KiqKa4rwu+jfCR8ZIRb+F7x1FP5njnvL/50QPgMPhN6Hndt3
I2Tjm0i5/U5kDuHMu9Fg4j9Uc5Y7dy7XnTmN75/uU6ehWCyoPXQImTffitL1
G4zbTkFvaoJSUwO98wRbqaqG1tIC18mTcHV0wHY0Gzn33sfbJQ5I/b3E/Wi2
YPoNNzJX1Nvb+VJm/53fVO9H/E+tq4Oma8i67Xau0xvS5zWOD80etGYehd7W
DlUp6Cf/i4fTXsT874cffgjqZ4X//u//vkT4H+UkF6PR50ZseinznuHiUNO7
WNR1K+JwywsJnLdBuR40ay6noAo+t4pGr8bZs26XhiafC811HrQ11XW7vbke
dT4vPB4vOhq9eDsuF1ctCE6N2qXqs/t/fzEngucdns+/eTwCCZmlqLY4uPZv
6pKB8T861pyf/EQ05zaXVto4W4Zmc9Lchb/85S9BfX+KRCKRSCQS9UVU++fS
3CipLcY9MfdgauhM07mBWPhfMNdR+J857hP/27oTm8PCcPi++5EZ6HO9XE01
YNOv88/imzkLufMXwJqWxt8VqQeVeJ/TaoVeVwd7fgFsWVmwpKezbdk5sGZk
wJJyxH+fzk6em1gdG4tjjzyGvEWLuV6Qassqdu+G3tbGMwdL169nPmj6ax+J
No7BkclTuTeb1jxv4UKkDnWtJPE/431QaRwjR2ERVM0DTTnWD95GbOsY7IqC
lpaWoH5WuKT4n1KNRp93WPlfIMvj+hVxOHK8AlabDaWVtbAZlx7diY62Fj5m
zc0t3BtqtVrgcDg4o5jyIQKmXmwSZcZSDgjlUwQrn/ZSdYD/0brSnMf7X0vE
4+uTzusHVx9CWl4lZ8Hca9zvinkR5/Rh98VXzo/kus4dBwpwssWHlno3NkYf
x5sxx9DW4MHXX38d1PenSCQSiUQiUV9Fnzl9ah3iivbhFzvGS/7HCLDwv+Ct
o/A/c9wX/rdjRwgiVr2G1JtvRcYQ5quONhMH5Fl/Yyei8NnnmNVRXR9xPart
y7r1dp73R6yop6mWr/CZZ1ETH89ZslTjR3VkAX6Yfc+9qNixA66T78CSmooj
18jsv95MsxGrIiLgOnGS6zC5F3vMWP/8xSE8X4kzZj/4EOeAaE6atxcDfy9w
Qhd7660mMAEOexkaGpqC+jlhdPO/wLrRZSxUpQLN9T4kZlfgmn7yP5rVN/Y8
s/l6muq+AnP9Ao8j9nfdilieKdfg0fDu6Xfwwfvv4b1338W7hv/+9793rzXN
hTtx4sR5syG+//57/rutP7vEI/V//eB/doeT6z47mrxdGSpnmm5vrnND1zTu
ry6osODF3RlYFZbVb79gPG53YgHn/B4tqsax4lrejzlvJKG82mps342PP/6Y
j6dIJBKJRCLRcIr+Dulxe1FlrcBTB58443u62BwL/wveOgr/M8d94X/bdocj
8ZFHkTVR8mfPa6oHmzgF+UuWomT1apSuWcM5Ed15vdTP29PX/bPft/DFF1G8
ahWKVq6Eo6QErvYO47KUawU1yla22VBs3Cd1CHNtR7uJqVL2h1JWziyVGCrN
W6wMC0PGjTcjfYhqVikP+Nhjc6B566C57dDUYqiOEqgKuRSaPRn/nA14Ngv0
87/Gxuagfk6gfuLRyf8SeJ9Vpaxr/Yrh1h2osjiw4M1kTOjjfLfAzD7K5VgV
kY3oI8Xdc/l6OlBfRnWFPef7Xd/F/nxuJ957770BH4f3338f1dXVqPfqKCi3
4J5VB/v8Gi5XB/gf9VRTZvKK7el4KSTzHC83bt+fVcZ1lS6dGKCLc1aIs/bb
xuNONPuQcqwC1z8Tx7WFxH9/OzcC0anFaPK5YbFYeA7gd999F8R3qkgkEolE
ItHF1dDYgBZ3K7Zlb8avdk00nR1c7hb+F7x1FP5njvvK/w48PhdZNJtuBPCe
kWpmeuMm+bN/aQbdrNm9P4a44QT/Y1KuHo/jj82BUlzCMwU14/um6lSgt7ai
OioKyWPGXXx7l6uNdaF1zHn4Ee7HddrtnJtCLLD2YCIyZt/UzV2DeryN90PO
I48yb3RU1UB1+6A1NEOta4RW3wTdpxvH0AJVKcT5MkIc9oqg879vv/12lPK/
g8Y61RrrZZz3tP+qG163CznFNVyTN7WPeb8zlu3D0i2pOFZaw325NJuv51y+
gFsbPMgvqcbRgirsOJCPmctjcfMLCcyBvC51UOzvz3/+M9zGvrs0Fcu3peGW
5+OZLUr+b9/4X6NxzN6MOY7//Wj4BXt2Zz8Xj8ffSOKc5cGatkO5LnSekWlf
xizYi2378/gc1Ix/S6xWK+rq6jhfRyQSiUQikWi4RH9/bHQ3YVPmev7ebjY7
uNwt/C946yj8zxwL/xs55v7gaTNRtnEj5wurTifPtKs9fBhp06/3Z4MIA+x1
/TJvuQ1Zt97GzK9q717OBa4MCUHSr68KehY0c17qMaY+8ElTUf72FliSU1B7
4ABq9u9HTeJhqHbFPx/QUcQMULfGG46BquTBoahobGwM2ueD//N//g/q6+ug
KG5oSv4o4n/xxnrkG+e7i5kdzdIk0xw44n9jL8L/iKtxLsSiKGQX1hiPdcKl
OlBX5+P+3J5z+QKm3tzWliacbG8xntOO0soalFfVwqk4uHZvIKLea5r3p3Ff
qobCcgvXkg1ndslodl/zfymzYzLVay6O6mZ2gzFth+o/p3dtm3Kab3g2jnOF
SyqtUBw2PqZffvlV91xHkUgkEolEouHQzz//LPxvBFn4X/DWUfifORb+N7JM
POnYo3O4B5hrAI3vnVpDA2r3H+Bs4bTLPH/5Yg7MZEydMo0zlClnxZabh6KX
V6JkzWrDa4Lr1atR/Oqrfr/yCopfftnwK9zPXfLaa3DW1EJ1ubmmTVOKDecY
zoaqVA0J//N4fFAcVmiOtK6aQ7PZXl/5XwF03Yt26t9WFM5fpd7OaqsDi99K
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
bMVhhc1WCzvl+yrlfn7Wdd/hYT1+Jsr1f0qZ8fM+9H0GYKC/9ix2xLcbVo7z
dolrUhbHhx9+yPzPbrdzhiplKXz++ee9fvYJzPYLiGquqOeX8kVou6qqGMcl
9Tz7IfxvcPwvhWvldhzwz/+bdIGsjpHK/6j/d/LSfQhJLOTavZ78z+pQ8Oz2
dJ7jV2f8jvp+6XfECqn+b0PMMTQZPzfWudBu/DtSX+fF11//BX/4wx+YXVNd
K82aFIlEIpFIJBoq0Zygelc9ovIjQOzvUuImwv8Gb5oJ+W87xmN9BvGdFjyf
9AznRU+X/A9xl3vjf5PDr8OE8Jm4InwyVu56Abt27UXkypU4On4yMoQBmuIj
4yahZO1auE+fhur2oPbwYaQax8Ps/RoJTp04hdeHGClfXjsBRS+84M/6UGyo
b6mHt8GLfZtTcTgsG956HZo90c827Bk8v051ZEN3q3Abppl8mubk+5E99VQ3
2MUMjN+5vVrX79y83eqqdjjsdB8PM65+8T/q5aUaP3ty122J8DPGQz342XDO
KezJ/8qDyMT+mSdMr5lyTyhbVtc9XfMMNWYpn3zyyTmfd6gn+i9/+Qs++ugj
ZjNutxtffvknno14+vQpZonUX+zns/3ZJ+F/fXNXtouzFi5d51o4YoDE7KYP
kM8NN/+7dvFergF8KSQTrfVn1gCSbXaFa/7Ovt3ucBrvaxUOhx3vvfceZ/GQ
SZT529jYyPM5ezJpkUgkEolEomCLPnfQ38qJkS0/tIQ5itk8IVgW/jd400zI
30X/DhnlqWh0N8Om2DEr8qYRx9eE/5nn3vhfwJPDZ2JuyKN4e+c2hG54EwkL
FiKFaqokF3j4GdeU6cidvwBVEXvgpBlnhvMWLULq1Bmm75up6zJxCgqWLUfp
+jdQunYNSlavRtmG9VAVBd6WepQV1iJtXx4Sd2fi5btD+GdvncZ8jbJpdY8X
3nov6prqUFliQVlBDRpb66AoqnHfXKQazkzIg+7S4GvwwNfoQ15aKY5E5yI9
Ns+4Tw6ykjuN/4990DQ3NCUPA+N/h/BP1tfTw816hor/9WBJxnNw7q6j2M/s
aFagSoxFQXt7ezdfobxjMs1FJMZHvb1OnoWo888OwzQbkesneaZjf+cvCv/r
z1ppjky4dC88bh3bjPfE/I3JuGJeJNcCUnaGmfxv6lJ/dsfVC/21iWMXR2Hx
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
E4lEIpFIJDpO/etf/2IG6HF6EfHX4cmCcTh39kD1b+wbDf8bv7uqP/O/WEbX
Hie7es71+J+z/6dzlhbD3f7rB9/F5eMHtTn38fC/ux+7s9NjYl8jWrH8savH
9PUS/mdcRflfaM8BbHvyKeRfeAlWDbxSqptrxeWDUHjz7XCuWQnl2VsQNp+P
Pfaf4l2d/RGz2598JhrsF2KFOVF97NfsDaT5gAftp2On5SbuD66xXo2V5gT1
2LNRoT5GWSDE9oj70WzADH37aLLG+labh6vbV2CX9QbMHDmDH3tt5CxMGb6k
WzhZdP6fP6igqrwWM8dlYvKj/Tv749vA/6hisz/uuuPaFscZw//Iv7ZNn2FX
Bp97E3sAhf915XuRzf2+vH6emmb/pKeqg+9vprq+JXC7/WhoaBD+JxKJRCKR
SHQConuo/fv3o06pR/rWNPxq7tUYkNL//FgdVX/mf7F8rz1GdtkzA4/J0WLP
EcsHY/nfTy46HVfN7nj+Y5T/vTljVovXu9TyyzbX0/oaWrO/rhzTH0r4n3HV
xP/q92Dnm7OwafhwFJstUt1cW8xmbBqZAMfqlfA8dg02D7sOaY/asMVyL4qt
g7HffiYWJUxESsJU7t/932TN1/fMsDwsThiPCsvNPN/vjZGvIWS7iPuDySdY
Yb2JPYLE82jWn9N6LW9PHzmPH3tl5By8PnImaE7gxPhM3n5pePfxucmPzGfm
R/P/cuasZW5mNLsT/tdcnfG/2Of6Rv5HFmdXeH0B9edG+NxbhP916Tuhro17
sz4zMaCVuxpe18ZOjsuE17mF1/rzzz83+tZZJBKJRCKRqN+KeoEdDgdC3jAW
bpnPzOzKUyQPpD/zP6rz7zy/jR8vWu356lrvE8v5YvuDj5f/jZobj7POOqtD
jtdetfYYduWY/lLC/4yrJv6n/h3oizTCs/ctePYckuqB8u57Cw71O562sBab
5i7E4dRRyB6WjNUjh6DQEt803++D0XEI2S/imX3rkkay12+jeQhWmUfyNuUC
b7I8zKxwwrBlmBifwayPiub6TRq+lH/X+nxT9d9TmWtFf3Yb/xsyH7OfykYo
EsDm1WV42bREy//tAwxP+F/n/M9dnYU7brum6f9Txo1+tOk5Y/hfBryeCp7/
x7+7S4T/HfP7EGV/0dyPXWptQnPGb0ff22b+9+WXXxp92ywSiUQikUjUb0V9
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
/Nq8QrfTjfRXVnF+8wzrUjw3eK7hnzNlfkwZupAzomn2pNPt4r7eqP7whz9q
3kpnsfqZZMDnXM5r63C4OBuE+KBIJBKJRCKR6NTWb37zG3icXmxybkTcG5dg
VNZw1Lpq2R9XsD2PszOMZgndXQNSrsHV865HbmkWDkbeQlpJKmed0ONGX9uJ
lvC/tiX8z7gymv91xOyi8/Q6Y3kdze87kWOOxf9iOV5nvb/dyf9o/p9HCeA3
T5yB31vj2KtH8/0a7T/DOnM8ViWNwgbzUDTYz0dREmV+jGTuV2AyYZflBnya
HIfNlsHYYh2MevsF/PxKUyLKLPcgZLuYM0LoMfIJLk18CpOH9835f1TE/4jz
UA4IeaaI2VFvZ0d9oK15F/muyAPGOb6jUrFs1lqUbqpg/9+u8ppvFf+jXJWX
k9J49lwgHNG8dczcMpv4H7E/9gRSf6+7DF7K32i3tzebM0CY+zED9GsewePm
f9lN18BM0b1DPVewKWeY+V84hHnP5uKZe2Zrfj71s6eiz3ZD/tamfF1F/TfD
XkZPJXzq7/6ggoj6XLSv+cURi42fC6i+/rN3z8b65SXqNSsIh8P4y1/+wvd6
oVCIZ/35mMlmMJt1u92c+/vll18afCcqEolEIpFIJOoNUeZbfV09HC4nphW+
gNPfvAwjsoZjwqpnkJg9irmY0SyhJ+ryub/mnl/yAb5ddwTp29IwKOVaDFDL
6Gs7kRL+17aE/xlXfYX/UbWXp9HZLL+usMQT5W/H4nix19q6n7d78z+8CD9+
BdJGPs5evd9yX+9QbLLcj5DtIuyy3Mw+wA2Wh9Ttn6PEcg9n+tJj1CO82/4z
7E8+nWf8lVjvQ9h2ISost7Lnb4P5Ye4XpmOW9+X5f3pFszV2ldVg974I8ucX
cU9wV3jXvPG52LKmjHNDiPvVNYaZFVGfZdr0Feq5u8ART4Ei3xnNxyMfZaiO
fH1b4XOtbvLdafwv0MzyvNSDmqP34bbH69RjXNt0/qczQE+N/nw7rLDdjJAs
rY/YvVOt7ew1pNkm2vm8+jkrobgLUbq+BOuX02y/cizWvYDrl29V30tQPUa/
Bo+Lz8e+Oe5pVvg85HMk3rs2p1jjxgbyXvJf0vU7a9xQ/Apqamp4xgspEolo
ub/ca72S+azD4cIHH3xg5C2oSCQSiUQikaiXdfjwYUR8dVixPY850i/nXsXs
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
vwo/rDQ8LscoNTyLDTozqg2P4hPtNXt9283XC0vk8Tg7kPP9skJHonxDGlxe
N5rTZ6Al5R20Hv97TtKeT5TnfAw8n4S21HexJT4f2+K3oi5pOVLiKmBPmY+D
aeNRlbQapYkJ6Ex7Gx1pb6E99R3s197n61Ztv8NpY7TPE7X9liErfif2JCZj
X+I6ZMSVwJ86Vfv8DXmvPmkputLGyTG60t5EXsIW7XxbUJ+8BKlx+9CQMk/b
dhyqk2KxVzsft9kv55sg+/F1u3bOw2mjUSLnW46ChFxkx+1A9rpC1NVaYbfb
pU/26xmu5HPFeQH+5/G7ULajAnMi44/nW5ytJr8SiyVjU7A5cTty4ouQe1Lx
9aaE7UiYndP/M2MvpkIC8w9nhJw+B/HSss21cr+ZwVG2s0r+VsyzkPyRnnNf
RHH9753jb32pSmZIXoL1nk9NeXWV8MfmTn93T7Zd6vPPPw/2z0slJSUlJSUl
JaV+pmPHjsFpc2JfXbmwrmDNt+vvxV5gzgPMKk1Hp68LQ5OH4vblfeeXVPzv
9FL87+LruP+vvhStuzbicMgAHB41QPhav6oRA9A19T5Ymg+hPTai3/C/nqJX
j34+i3EQigyvosb4iPT5VhsHI98wXD53mu6QLI0Kw5PS78sZfilRb6JQPxSt
5p/LTMCTj0l/n9V0n7BEZgeT+dlMAyVD2Ga8V/ig33wTKg2DER/1rrDBj7S/
XUvWHDQ43Dhk+hccDjv3fT2i1VGtasPvRF3E7dgVPhgJIUYc1I7jHXU9skJH
oCniBzigbbMn/GE0RNyApBA9NoW+qn1+rTzfEvaSbFMecR+co36O7NChyNGK
x63Tjrs59GX5TnlGXYfSiEGoDL8H+WHPwRp+B4rDH0fCCJOczzfqJ7Jva8S/
YL/2mmuxRtyinUMnx3No504JiUJe2PPattdgztA5mPjqOsl5oA+vdb9fPH1T
e/x4oeuEKTG7gnPsPI3M+qjAnKj447m231ScKUhOeM583F7mBqs6O/ubGRGH
zYk7UFlag5YOP7LWFpzI1gj2+vp5kW2umLABG5Zvg8MZmG3pcDgU/1NSUlJS
UlJSUjpNX375Jbo6DmBPZTGeXfcs7lgxqM9n230bKjAPcKDMA2QvMOcBPhPX
d/dL8b/TS/G/i68e/pdXX4KW3bnd+Rr9Y7beKaUbgP0zB3f7//of/yP7o2+P
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
b/r+VrydhoqSapkLaG+wy9wWxf+UlJSUlJSUlJQuRH/9619htVrhcrilxzAs
JQR3rzg9X0DVmetny+6VeX9Hmj7A8qIlkhHMnsyZW99T/r9eluJ/J4pZMfz+
PBc3BOOyxmB3XSmaLBb4ipLROfdZHDL8MyRbV5jb93Bo9I+0+mGAx2mv3eXb
4SnZfNn4H/MnDo/SKmwAuibfg46lw9E14xHJ9ZX3I7UaNgDty0Jg8R7EJ58/
ic9wF/4Hd+KvWn2p1R/+dzCs7oNXHP/jrD9mfayInAWL8QH8u3kA4iInIS5q
kvCugOftbnSar5Pt6MVL042R/difmxT1lnjp6o2PHfflHdNfnP/ParpPenWT
o8aL745zAbvMPxLulto974+z+87m+TuFL2nbcK4fe4qPacf+uDtXhL3M9Dx6
TbeJp5HX1TPzkM/ZZ1xpekyyhvcZnpDMj1VR78k1ekx3SX/y1GFrET8rF5Z6
q2SfKv53fkVeNPnlldidVy69pewzLd5WJn6z+fpAtvIFHz9krXgxF8YkImFO
Dmor6uFwOGC32SWjtrq8TjKE103PksfeFuffzYqIw+RXY4N+//qq6OvjvD/2
+7bsb0Tc+9navV1x3EfZ8znvN7kq81qqK+rg8jphsdRrZZF/s1VSUlJSUlJS
UlK6EH355Zfo6upCXV0d/M5GOB1OvJ39pmJWvSz6tJ5f/zwKKvNxyH8EZbWl
GBI/BFvLN8Hr9Cr+14tS/C9QzPl4cm0gX3pzeQ7amo7A3v4hPMVZwtsCTO87
Wn03wHj4aPynQBkCn7vLCy8d/+s5Ps8p5xmAttgItKS8i9a4MXCX5cHSehQN
NZVoiX8TzQlvazUBLevehG9bAmwN7fj9F4/jC9wp/I9FD+DvP3vqiuV/9NWx
h5bsrtb4qOR7MPOWM/JqjQ9J32yL6efI0unhMt0tTJCz/+qNg9BgvBfZ0VHI
io6GVXtNb6Bb93McmjHorPyP/cZnek3/X43hUWTqjCg2vigskj259CfyfOee
97dWcnt7cnyZ8ctsX2b+sp+Xx6wzPijeRvYUk98VGYZJpshB049xVDsu/Y35
2mvOCOT56Als0O5Bs+kG5OijMDciFk2mW2ReYE50JKYMi8PKCenCOppavSjI
VPzvfIrsaNWkDFjqbcLn2GvK+yfzE0PP/3icOUfuRx41a1Q80pdvw95dFd1Z
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
9rrCy1JkWbu2lsHf7IXd3oDsuMLLer5zrkU779a0nd2czy1r6pmNRy7o8rqk
r7c362OmRPYFXEdmbB7yMwO+M56PTHRz4nbxYE56OVZmCV6O2XzTR65B0oLN
SO3OwN27q0pY58LRyeKVe/8KywZmf2/inFzkxhchY2WecFXeb2apON1O6fdl
Fhvn/CkpKSkpKSkpKSldbrW1tcFpcSGjNE2YDPMIgs1Evm1F/98bG2PQ7u1A
XsVWPL3uWckICfa6+nMp/heo/sb/GnOXwdbaiebOdHz0H+GS3Xu+vO/q43+B
4gw+evSYkUtW5zbdIcWZf5y/x+wM9vBy1h/rAzJDrdjzyxmA3M9luA3N4+6Q
vsimjXNxOHRAd85zgP/xGMzXYI8tGaDNdB/82jnI3OjzO8Hjzq8mhWyQDJLf
xwQyQ8j+2APcZv6ZrJHnKzE+JxnGH2uvORsw4DE8+Thx8h45J+cHro96R9gk
fY3tzD6OGI6SZfNQuLUW2/NqYdeuMdBjmid5sCz6wy5Hca4g10gG6PG5kRNX
iEmvXN5znq0mvrBCcl75NyYLIudbM3Wj5MJyTh7n7NFzN/mVy3H+VZIzO33E
WhTnlcu94DrWz8qW9/sij6Mnp4Tny1pdAI/fJT3IzMmYGR4nPbG9nWHI7fq1
bzB8ncw35Pfs7WeXIX1FnuSA0ANI5spsX/b8KikpKSkpKSkpKfWFOGemo6MD
DfYGLClYiIfXDFYM8DyLWSD6DVGS2ed3NcKYbsDAlYr/nasU/wtUf+J/PfP/
HHVVqKv8AB2HYvHfXz142jw/xf96xwLJ61h83cP7Dp5hpiN9gyx+9mvt73lk
3HVoaHCiMXfxKfeK25QYnkOybjw8ptul95iPzBlZFTn9gtkfi/vOi4iVGYTs
LU7VvSGZJuwxXhixBPuMg3HE/APhgEsj5iJPP6J7v8C+nAPY4/9bHfUenKZ7
tOu5RmYCLhm1QPJA3BE3onHjPHg790seLH1fVotV5t2RCV1uDiO8aMRq6Ttl
n2vQek5DA2vZsGyb3IfYienCBI/PyuMsvEvUb3um4rnXTNso999mtWP9zBxM
fe3ynvNMNeXVVdiUsB0t+/0yc5B/E+ZgJMzOxXxjQq/mFi4emyLrnvEt8A2S
vZL1sg+4h/0p35+SkpKSkpKSklJf65NPP4HP4ZMM29eTXsPdsSq74nyLPGtp
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
eVzC4/rSf0f2+s6Q5ciJK0RLhx8OR4P0Ase+m47FY7S19NFMxktVk19ZiXXT
s9DU4YPL5ZD+8vcuw1zDmaHrhJFyViHZH72TDnfDN87z4++s/fv3w+fz4a9/
/Wsf/bpTUlJSUlJSUlJSOl1/+tOf8OGHH8JqtcLj8CCnNAspxUlI251yvHLL
sjAhZ7zk2pJvnVzsb1V5tyezrYHQb4hCu7cT+RXbpL+TDDXY6+pPpfjfiWK/
/a3a/Riw8Das3bkKzf4uuPcWoGvy3Thk+D99x/9ivq/VD7X6wUn1wwCjM/wz
mrIWSB7Ip/87+Lz4Xw8DZIbwgWPTUVf3a9jdTWhbFSlskdfQNWUg/AUJWsVr
131PgAMGm8X1M/4X8P8NEZ8d/XXlxifxgXmAzAPcpI/o5nnrJcOXRW9eoCc4
PsB8hPGtl+1ZybrxSNWNxRZ9uDC89VHvysw+ZnWsjJwpPbyJUW8LHzwrR+qe
/1dlfAx/0NZXanwG8VETJafEY7odC8MWYM2oKSg3/Ar7wh+FbeNqrHk/r8/m
3Z1c/Yn/0V/H+XXMsXB7XZIV0df9tzPEB5gkDNLf6kV9lQU1lfXio5s1Kk4+
D9r9uYBr4UzHopwS+Fu8KMjcjendeRyX7Dwha+V7yx7jnVtKpYfa7rRpv52O
9ep3Fmf+ff7555fzp5ySkpKSkpKSkpJSr/XhsQ8lC7ijpRP7W7pOqc7GTlTV
VmF7RRF2Vuw4XmW1pdhavgnDk4fh0TVPikfwap93xxmKUWmj4ND+G77D24nt
lUV4Nn6IMMCr/d701NXO//g9YK84q+c7wfyY9SWJaLXa0fXuHd/MwC4Z//u+
+Aw7Fr4CZ10lHCXlaCipOKUcu0rRUFoLS+2h8/b/nVx/xkC0dCWg3nYQDXYb
3HsLtfUXwlVdCpu/Dbam/XDv2y7zD8UTGGwe14/432Hzd9FsvgE2070yW2+v
4WlhbXbtNXuCmbUxK3wVVkVOR2zk+9KXOyc8FvPCVxzvC6avLylqPAoMw4Qh
8rHV/FNs1o+SYzeZbpLjbdJeW433odIwGAlRE8QTeCYmQr44L2IFXKY7scvw
EoqNL8jzYsMLkk2SPeYt7fnzaB31PTQOH4CWnHlYM3t73/M/8raXVyI3vghO
Tz/gf2EBHsmsW/r/gsH/eubnzWfvbHEVmtp88DZ64HQ6sGpS+rdrHmB3ljAZ
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
1rBarUj+4zZVIydzBuVzk+fVlBhU1il7juMx/1GyXTnL5qRiVXoKUlL+clau
XIl169ahuLQEOqMWWoPmkUejL4XRoofT5YSh1Ayj5hFHZ4GmQI9Vs7erjHT5
77Z86ST9PkPlpJH8b9OmTVi4cCEWLVqkvq5YsQJJSUnYuXOnen+Z/xERERER
EdF01dHRAZ3OAIvFjqv3vqVqyuKda/EMf2T/R/O1F2C3m6EpNmHV+wP2//bl
f7mHTCir3aM+0+6+c0fd70WYTZUTlv+pfGtzDlx+DwIZH4b3577Sd14dqgf4
34Vr7fpup3qF3wrv+Ri4g7d+1gxUvzcTjuJsGAx2LHxtAz7+19T+vQ/jPQPz
v+qPvxm+3rfCdYfOE3vgrKhC1pZsvPdPUdz/0VfTdvJQAVw+h9qt4XQ7kPbh
zv4aP8kH5720BiWFOgSqPCr/+yAe+1+eX4MFv1mFZUlLsGTJ4Gfp0qUjOosX
L0ZycgpycnJwIvcEjp88PuTJPp4Ns9UMj9cDl8sFl/vB4w4dp8ehdhKH+3/D
+Z9kf8uWLVNHrm3BggXYvHkz8z8iIiIiIiKa1r744gtUVFRCr7OipukT3MJM
7v6dAkeyvLOX3lQz1/ZvOP5g/tTXb3v8MyPKavc9sM/li9BpuvrKxOd/Gbnw
2LRqR0f17K/Bv2M+/Ns/QTD9DfU9yfUeOK/NQFnqq6HbfYLArgWomvN3OD1L
dvz+ZwS2foTgNjkfqq9lG34Hb+4OGCyumOR/Gxfug9Pvg3fPEtS+/f+Ery90
zeUrZ8Fut6C0yKhqzUbaf6vm1r3w0Puz6VjosWxI+OW6B/I/h9uu8j/ZrZE6
e8cD+Z/0wOp1RhTna7DsnTjt3e3L/xKTlvbnag+fkeZ/kSO1ecMd6ePdsmUL
MjP3Y9++vV86u/bshs6gwamc0iHzPznyWFu3boXNZsP169fj/dcxERERERER
UczIPMCAvxZGczE6mf9NiSOf0Y3QZ+UtL8b+DbkP7LqVjChj+WcwGnwIVG+b
HPnflpNw23Woe+evUL7q59CXN8MQPAt7UQ7q3vr3qp9Wfk8dydje/D/gyM+C
LnQbg68Gbt1JBI5ugLdgP6zlNTB5K6BzBKG3l0HvLIPJ5oKuWIdFr49/58eg
+Z/PA4vFiprf/ue+HuB/o45cvz1YDl2pXvXrznkuvLtC7bMI/Vp6YyWXHbjH
49NX16p8MnybVJXdfrY5W81kPLA9Rz3n+0+n4PiB/AfyP/m8PvzZg/mfttSg
9gCnfbhj0M9SruFR8/HGnRlK/vdu6iPzv1gdyfIkBxzszJ8/H3mnTuJUjgar
5+56ZP4nOaLU/wUCAe7/JSIiIiIiommtrq4JRkseLvd+l/nfFDjyGbXjq3B6
LDiyp1DlPLJjVbKjP/7PJHy2KRfeCgOu3vn2A5/nROd/815arfKtveuOwO21
w2PMh8dWCqfXqY7LZYE39D11TH1H/XcevH4bCk5qsCFhD4qLLcgvtOPUKQs0
hVpsSczEglfXYcmvNv7lvLlB9cRG8/rV/t95u1X+J7uFKxf8D9S8+x9R98tw
DWD13O/BVpqrepuT/7RV9eAm/HI9VvwhA4m/3RLeQfF0iqrrk3xQ9nRIXrcz
7ZC6ZrmdXLPs95CMT1uix/LQ7Za8vQl5x4rUPo1I/rdp0T7MDl2P1A6qGsLQ
KS0I9/9uTfpMfe7y+cuRzPXDvv0hUps41Hy8paHnkduqHHC0/cuz1uDTX6Zh
2eJELEuc2OxvJNlg3qk8FOfpsG1FFlxe16D5X6Tv+ODBg2ov8O3bt+P9VzER
ERERERFRzFRXV6Ok2I1A9QbuAJkCJ5zpPYlgbRoslmpkbcvB6jm7sWHBXvU1
Z38JHC4rruOpuOZ/UvcmNXknDheo+XaHM4twcFceDu04ET67cnFoT8EgpxBH
9+VjV/qhcDY1a3W4p/eFcO+sPK58/+ET1euXGXsvr0HW5myVv0kOZ3b64Tyx
GzV/+hvVo1z/8gwElz8HnTuArSsy8e7fL8Wq2dtgD733Wq0Om5dlIu3jncj5
LB9Wuxl6owEmszH0WGZVc+Zw2XHySKGa7ZeXXQijxQiDwaCOXq9XR3bTym3l
+SUnjLxW2W9s0JvUnLuD24+HPvddWB/6/OWs+3SPygt12vDzRR5z4DGHvq8p
1GHj4v0qi5ScVrLD0eR/83+RHs7+JmH+d+rUKfh8PjUfUL5Knd/D+Z8cqRfc
v38/3G438z8iIiIiIiKa1mT2vdXihcVWiLYb/8Q9IFPgdPdlgGU1q2Ex1cLh
CsLu8sLhKIPZWIXa5o9wC088cB/J/xqvvgqLsRorfpehar+iNStv0Pq50ONL
L7LsqJUsat7Loe89ndxfpzbc+ctOk/QHzrwXYnO9A4/Uz0mdnNNth9VqUfmb
xWqFMVCP4Jpfof75GagNncY1r6Ll4mW0XWyFOdcDr6kCFy62oaWlBW6vS/Xw
2mwWnDlzBq1trTh//jzKy8tgMpvU40ouanPI759W9znfeh6toSO3a2k5j5qa
Guh1epUVlpzS4qPQdb33z8nIPVoEh8cOk8kEm92qagVtTmv/sdjNsDsd6vEG
O/JcNrsNTq8NuUcKsHvNYVUrJ+/5x8NkqeG9v2uw6L1kJE6y7E+O7PbIyMhQ
ud7evTITcB9SU1PV9wfL/zIzM5n/ERERERER0WOhrCyI0sIKVJxdgtuYGfd8
i2dkGeB1PIm2m/+Ilvbn4K/cigu3fozW0JHff7iXW/K/5qsvqXwwJ1OPha9v
UHVuUk8XiwxtdmR+ntehdlUsen196LliuKfihdUD5tuN/Xmkv1b6i3Oy8tVe
DpX99R2zzQFHwWG4j2bAvf7P+HzXH4b8mfJ4PCqfkzq+mzdv9n+/oaEBGo1G
/Z7U4p0+fXrIx7h3757K5wMBP7Qavbqmo/tzoSnWweawq90Vcl2SF8o+78iR
+wx8zsF0dnaisbFJZZButWvYrPqOpc7wUdmw5H/zX16NZUuWTcr8b9myL88H
HCz7ezj/4/w/IiIiIiIimu66u7vh9fphMtjR0vGMyorinW/xDH+6+nK9cBb4
lKrd7Bkk+/vL7Z9AXcv78PjzYNC5cGDbCbUzQ2bdRb2uLvR4c/41XfX5Wm3W
2OZ/L4R3YiT1zbZT+zikjm2Ur2neC+G9GUf35cHlcz6Q/aljNsNsd8HkLoPO
aEZ9uW/InynJ4bRabf9+Wanla21tRVtbm+pLlXywpKREfW84sp+itLRU9fuW
VQYRDAZx69YttcN7vHVrcv+6urrQNTlV7aB8VtJDPGQGOGsNFn+4EonLJ37v
R7SP5H8HDhxQnwV3ABMREREREdHjQOqBdCXlaLr6AvO/KXhGsrulqy8rlN7g
ijNpsJrP4kBGIdI+2qF20koOOPunKeEdE1HI5T54OgWZm7NVj2os8j/ZMSL1
fn/6yQoseWejqteTejaL2YL1n+4d9T7gSP4X6a/9Uv434OgMRtSdPjvkz5Nk
c5WVlaoWT9y/f1+dCMnd5PevXbs27M/muXPnUFFRobLDWJHr9fv9MBh0qhZQ
5knKXEB5fx/YDyL53ycrRrX3d7B9vbJ/N975n1yXzAbU6XRqTiARERERERHR
dHf9eif0mgCar81i/jfNj2SAN/AkGi++jWBNJizmSmRuOoG9a3Kwb8MJtbdD
+nfHOx/w/X9OCT1u7PI/yepkR2/mxmNqD4bNZlVz9RxuB4rzteEccxQ1gJH8
7+SRIjW771H5n/T1St3cdCKZpGSNPp9HzR3M2pKNZNkV88yAXTGS/80def4n
GduOHTtw6NAhZGVlqSM7d/fs2aP27w7VmztRR7LIY8eOoaysLN5vPxERERER
EVHMMf97vI7UAt4JnY5734AnmAmn1xn6aoS3zITCk0ZkbspR8wGlh3cs2Zzs
kkj9cAeMRpPKyxa/Ef38T/JF2dEbrPXB7vf1Z3Oyszc/u0TtEZkzivmGkfzv
eFYB3H6nepzBjuzklXysvr5+yJ+ngbV+U43MDnS6nKE/E3botEYse2ezquVU
9ZSz1mDJCOv/JN/buXMn7HY7nE6n6rOVI7+WvmiZvbd06dL+E4/8T/LJnJwc
5n9ERERERET0WGD+93ieyOzA9ntfx7X7X8P10KluToXdUYNDffMB5wyzE3bQ
bO7pFLX/w1fhxqnjJUj4xTrMnRXF/K+vNvHwrly4nGbYi0/A7PSq3lXpAS7K
1ahZgPNfWTuq65eawSW/2ojcwwXqMQpOlPzlhF6HvBaD3gSj0YCqqio1h6+r
qwu3e3tws+uW+u/IvL8pnwE6wjMBZY+zZIBL39qIuc+vxqIPVmLZiqHzOsnU
5s+fj3Xr1sHhcKhMVvqXpcdYjuSmsnMjsgNl+/btqh84HhlgJP8rLy+P91tO
REREREREFHPh/C+I89efRm8cciipR+vtOyOZZccT3fe+e8C5hZkoq0+FzV6j
+molP3vvn5PVjMARZWjPp+Hj0H0ObMmBv9KDVbN34MNnRnbfkR7ZT5GRmAlP
uR+20nxUz/4qnCd2wxCoV3t6JXOSfRmHd51QGeBo9hyr26re4YdO6HtS13jy
UMED8wENeqPKC+1OG8xms8q0vF5vvH+kx+3GjRsqvzOYjKoeUvJgmQn4yYtr
sGj2ykH3/0qGt2HDBjVXT/p8pc5P6iUl9xtI/lv2mMh7Je/h1q1b4zITUPK/
vLw8Nf+PO0CIiIiIiIhoupN/++q1DgRr1uIGnlI50ERlT7KztkPqzprmoqb5
Y3SEnv+Lvt8b7sQ7O5uOJ7IjpKwuFVZrDY7sycX+jUex9pPdw+d4s9IxV7K/
jBz4ytzIzszHAqn9i+RvL6SrGjvptZWvkV+PNv+TTHLpW5uQl6OF06JF3Rv/
FjW///8QXPsObCW5MHkrYHa64PY5sOq9baoecdT1hUPkf3nHiuAJONWuXJtD
eoGNWPjaemRty4HdZZ82+Z+QDFBq9Sx2C0qLdEhR8wDTMP8X6eG8b9nSB3p4
ZZ5efn6+6vNV2WjovZBMdLA9xZIBhucN+tRttm3bNuEZoMwfzMjIgEajUfWc
RERERERERNNZZ+d1GI1G6LRlCFRvxE08EdN8rbsv95PnuH7/6/CV74CupBba
knI4/QdQ2zRXXUPnI47ssGAOGNsMMFibBqu1Gp6AR+3WSJ+z68F9EA9kZuFc
TvZGuLzO0HFg3bw9+NOPV6i5eh/11Q9++vNwPZ58XfBq+Nfye6Pa1/tCOt77
yUrsW38MzoAX3r2JqPvlDJx+bgaq//y3qP7o7xDY8j7Mbj+K8jTI3HQMHz4z
unmAQz3v8t9uxpalmaoPWK8xouSUFvNfXqNe/7H9eXB6nNOqlkxyMdl34g26
sCv1MN7/x1Uq/1O7OxKXISkpCcuXL1f/LfP+JPOL1NN1dHSor/fu3Rvy8aVn
OtInLFmc1ORNVP4nmaXMKSwsLHzkPEciIiIiIiKi6UD+fd7W1gaT0QWrrQTX
+7K1WGRLNzATV3q/g2tffBdVDYthtWqhKbWpXkG/3we9zgetxgyL/diXjt15
HE73STjcJ2C3aXDm4tuh64xtVvk4nsh+EKnDrGpYCJPZAU/Aje0rDmD2v6x6
ZP4neZivyqNqACXfW/GHDCT9NkPV60mNXGmBDpsW7UdxgQaaYh02JOxF4rub
1Y5g2TOh9vYOU2MoWV7G8kzojQboTSZoHT44dyxE2e//BuV//BvUvvkVVKx4
HvryZpUPagp1/fMAP/iXlFHtBX74SFb58XOpWP7uFqyeswur3t+OdfN3q9et
LdHD5rCrmYDThfTpSv4nme7WlP348zOJmPN6EhYvXqT2+socP51Oh9LSUmi1
WpX9jfb1y/w92Quyd+9eLFiwYELzv8TExP76v97e3hi9i0RERERERESTR01N
k8rZIhlQLOrKpHbPZi+FQe9UOZ9BZ0dlZSUuXbqkrqGpqQnV1bWorW780rHb
/NCHbi85pcnohcngxZW731JZ1UT1LE/3I597B76qdsG0dDyL5qsvhj6vEjg9
HmQkfqZm7w2Wi8nMv/f/MRnbkrJUH6zUwknvsNUR7gNVx2SAyWyEVq+Dz++F
P+CDPvRrR+j2MkNPcrT5r6wZemfHC+H8b+uKzxAI+lB/ug61taE/K3X1qDl9
FrX1p1F9thme4ztQOfe78O5fAYs8p68KTrcdh3YcVzWMUnsY2SEy1vmD6z/d
o16nyWRWM+5k74jJbFIZmNSytbe3x/mnOTqkR1ftVbbbkZ2djc1bNqv5fpL9
SWYvdcOSD0qfsOw9GUv22d3drR5fdnFE+ognKv+Tr0ePHlV/PuW1EhERERER
EU13tbWnoTPo0PD5azHZAywZ3emLvwn9W9uCYKASLS3nceFC24ivT3oJJXOQ
vEFyF7PJjoqzy1DTOB/nr/+UGWAUjvRlX+z5IQyaahj0FTDpA7BYrKqfV/K/
B2r0ZJ7f8+mqpk7q6zI3HsOu9EPQaQ0qDzNbzThz5gxaW1vVOX/+vDqSs8iO
Wen9lLxX8jOT1aT2TByWnSN9PcGRGYGf9D2f/Drhl+ug0YT+jDaeHfLPia/g
IGpfnoH60Klc9BP4t38Cs90Fp9sBm92KJW9uGF2/8UPnw5+tUvuNpSZOrl2O
5GBSQyavr7m5GZ9/fiUaP5KTgsvlUvmY/Oy5XE5Vqycz+2Svb+TzlF7fsZL8
T94/efzc3Fzs3r37gXwulkf6f5OTk1UNo7wWIiIiIiIiounu9Ol6aErN0Gs9
OHvpTZUB9kQ1X5oJl/do6DncaG5uGtM1SmYkWUNDQwNMJiMM+gC0Ba2obkyI
y+7i6Xbk8758+wcwG52wWGz9e24l/9u0ZL+a/yd9tGqe36x0LH5jAw7tOoHC
/FJ4Ai54/G5VyyX50NmzQ2d0A3V2dqKxsVHdR/K5/Owi7Eg+oPLFBa+uUzWB
0nMrfb+fvLQGRadKcebs6UEf6+69e3C63PCnvYH6F2fg9AszUPfaDPi3zYXZ
4w89h2Xc+d/sn6Zg3ad71I7hSP+r9L0+vOd2OpDZALLPQzLOyE4Pyd8l+4tW
v6w8h2T7dXV1ahagvJ8Tmf+lp6er1yc1jLLzhIiIiIiIiGg6u3PnDqqqKuGw
+2E0SAb4FjrufDsqdXWSJdae+whajRterw93794d9/VK37BkBSZ9EBV1yaHr
nMkawBjlfw63HbtSDyE7M0/lc4t/tQGfbc6GTqtTe3C9AS8uXLigMjA5g+18
HY7cR/p5fUEvDAY9CnOLUVKixclDBWrenswJTHlvG4oKSlBXVzvoY8ifK3uw
Go6D61D7h/+K6rnfhTM3Ew5DITxBD4pyS1UN4dxZo8v/5r20Wu0xkVrH2aGz
c9VB1bcs2Zhkf36/f9r0/D5Mcj75TKWuUWr/5OfuUTs9xur+/fuqhvLUqVMq
l5uI/E/2lqSkpKgZgJJtTqfdLURERERERESPIvV1paV66PVO2Kx6nL/x9Ljn
AUr+V3F6CQzaCpUjRMPFixf7549Jn2pVwyJmgFHL/1wP5H9yZAewzW6DPXTM
ZhP0Rj0qKsvRNMZazqFIDij5ntSjyow/i8UMnUHfV3umU595W9uFQe8r+Z9c
q15vgNlmh8Vqg9XlRlGhUc3/S/z15qHnCz5i58h7/5SsMsiNC/diZ8pBWG3h
nl+pR6Xoqa6uVlnc2rVrMX/+/PCe4RhngAsXLlQzDaX/WOpQo/H/JoiIiIiI
iIgmO6n1aWlpgc/nR2mJH97yXeOeBxjO/xbCbhm8bmusZM5a/el6GI0mGLRl
qGxYhC7M5E7gceR/Mv8vPPfP/qX8T3p0peYyEAioeWkTkZVIXeH51vNobZMZ
gi2PnK0nNWRy+5qaWrUb2GS2wOl1IHPTMfz+vydh7ij7fuX2S97ciN1rjqAo
VwNv0KVqIc2h90JmUEq9msw2pOiQXcDSUy17VA4cOIC0tDRVCxjr/C8jI0PV
Nspzj6V2lYiIiIiIiGiq6unpgcfjV3P2xjsPUGbzVZ6dD5u5NiaZkcya02mt
sJgNaL/3DZX/MQMc/ZH37BaeRF3L+zAZPWr3RyT/k3o3mc92+fJl9WdjMrty
5aq6XsmxPV4P9Dqjqt2T3SLzXhh5/idzB1f+cauabWh32tX8wIGZqNSeSiYq
uVUwGFTz4ySDpLGRvTCyb0Rq8aSvWnK5RYsWxTT/kz7jxMREtX9Ynlv2kRAR
ERERERE9Tnp6umEyOGDUyzzAt9He+3cqA+wdRb7Wrc4TCFSlwWIsi1nNmOwE
MRh0sFq1qGpYzF7gcWSAql7z7FIYdWX92Z/s9Zgq89FkPl1kH4fL6YLTY4de
Z8CyX2/Gxw/3/85Kx+yfrVJ7fSNn9k9XqR0hkv8tfXuT6ve1Wkyh98L0QP4n
R/I/6U2WI3skJAeM1m6Mx5HMIZWaSslWpdY0KSkp5n3ACQkJ2LFjh/osy8rK
4v0WEBEREREREU0oyVEqKyugKTVAr3PBbtOg8coraL76Mq7jq8PWA0qWdCN0
u/L6RBi0PtTU1MRkd0BEQ0MjdFpb6LnK1TzAm3iKdYBjOJLv1jTPgVEX7seU
3kiZCznVyDXbnQ4UndIi5c/b1A6PB+r/ZqWrfSAbF+5T9YEbEsJHdh2rrPC5
VGxbkQWbzQyzsxJ6sxMGve5LGWDkyHslOaDsA2Ed2dhJHaDsVpE8TnI5qdGL
9T4Q6QPOzs5m/kdERERERESPJanHicwD1GqN0Gn90JXUwV+VgRt4SmWAQ2Vs
Ukd2sfu/h+5TAZPJMiGZiNQB6vVG6HVluPzF98bcs/w4ny9U/jdX5X8yi62+
vj7mn1u0SZ+y5Edmq1nt/ZU8T/b3znkuDZ+8kK7yv4+eTcXy322B2+eEy+uA
0xM+wWoPtizLxEfPrILBYILdbobOVoEzzRfR1NSg6iEl65PHHywHlPdMathk
ViFrAcemqalJvc+yD0Tq/yI7gWOVA0qf8YkTJ1QPsOwWIiIiIiIiInocycy3
9vZ2tLa2qexDpw0iULUZnfgqbuDJ0Jn5pRypC0+g9db/gtHgVjmKzEebCGfP
NsCgd4SubwNucR/IiI/0S0f6u6saFkJb4oPX652StWyym1dmyMnMPtnZUXSq
FCcPFuDAtuOY++JqzP5ZCuY+n47jWfmw9e3zjeR6NrsVJflarPpgO0pOadW+
D6NBh66u8L5f6YOura1V+Z/cfrCeYKlfk7rJyT4rcbKS901q8fLz87F161bs
3LlTZX/Lly+PWf53/Phx9XlWVlbG++UTERERERERxV1bW5vauasptcJiPwGb
TY+2m/+ocqNIliQ5Unntalgsemi1OrU7oqura8Kusbr6DAwGvaoBvNOXbcU7
X5vs58rdb+Hq7e/j7KV3oNeb4fX6p/Q+VJk1KXMAL126BH/Ap3JAq8OCg9uP
Y/FbG5Hy3jYY9MbQ6/SouX3Styt5p2SGNoct9HvSzxvOBOXP/MDedfm15KJy
v8EyQMkSZY9FZA4hjZ7sVSkuLlb1lJF5gHl5ef21gNHM/+TxVq5ciZKSEpX/
sW6TiIiIiIiICLhw4QKqqqoRDNaitCSg5u1199WOydfL3X8PmyMfVktF6HZV
6OzsnNDrk/qs0hIrnP4jaL76ksq2WAc49JHPzFexA3pdEJpSIzyegNr/Mp2c
O3cO5eVlMJtN4Z0efXV/gUCwv8ZRMmrVN9zXO2wwGdWf9aEMvP3DNYBypnJ+
Gm8yd6C6ulr1n9fV1al6TskB169fH/WdIJE8MbLL5fz58/F++UREREREREST
htRYSb2MptSNQM0qNH/+qqq3Kz+9HKVF5QgGA3G5Ltn94HDYYTTYoC1oxdnL
r6u5dvHO2SbrkffGU7YFNms1zp1rmXbZX8T9+/dRW1sDo9EAiyWc0ZWWlqqs
SUjfcCQDkrq+R2V/kdsPlv/J/c+ePRuzfdePo4qKCrVj+eTJk2pfR7R7gCUD
3Ldvn/osA4HAhNYrExEREREREU120l8pdVRmQ5XqC/aVr4fZlh36d7Rjwuv+
BpL+QZ3Gi7K6VbjFXcCDnq6+7O/MxXdUbVVZ2fSffXbt2rXwnD+bTWU9kl9H
6vQkr5P5fpIfj+TP7sD8L9IHLO/jVNyZMtnJey392Tk5OWpeX7R7gKWvWHqA
1XxTnW5K7rwmIiIiIiIiipXInLXu7i4EAhVwu+rgcZehoqI8rtclPZ1mUwXK
65epXSTxztom04n0akeyP43GBa+7fNrW/Q0ks/vkz6scyf0GzvUbrZs3b6qs
SI7b7VY5uNT+XblyNYpXTBGyU0Wy1qysrJjsA5ZcUXaNyLxSmfko9aJERERE
RERENHnduXNH9QvqSitwruPZB/aTPM5Hsr+LPT9Ey5WXUd/6e2g1dng8wcci
+4s2yQ9l1qQc6Rc9c+aMyo0o+iSLk7pKyf8kB9y0aZPK66Kd/6Wlpak9IHa7
Xf0dQkRERERERESTl9R1NTQ0QK9zwl+1CdfvfX3a7AHuGnBGez+Zz1jVuBCl
Bc0oLXHB4/Ey+6MpQWo2Jf+TbG7jxo1Rz//kLFiwAJmZmXC5XGhqaor3SyYi
IiIiIiKiYYT3s1qg15WrmreeSZDdReN04glcx5Pq68C6vp4B5+FssFt97wm0
Xv8pTJZC2O0efP75Fe6opSmjp6dH9eZK/rdlyxY1sy/a+Z/sFk5OTkZRUZHK
Gpubm+P9somIiIiIiIjoEaRnsKWlFTqtBVfvfHta5H8ys6/u3AcwGd0I1q5W
9XzS23zt7jdx+fYPcPmL7+Hz29/v3+0Rqfm70vtduDyHodVrYLX4cP069xvQ
1CKzRqUmL7KjIyUlReV10c4AExIScODAAfU8sgu4t7c33i+diIiIiIiIiB7h
woWL0GmtOHPpLZWHxTu/i0b+V9WwCNqiJjg9x3H+2vPquDxHYTT41N5lk9GD
2pb3cLn7R2jHV3HuystwuA+Hvl+Gqso6Zn80JclOH5npKXuWpQYwNTU1Jvmf
7BVJTExUu1zknD9/Pt4vnYiIiIiIiIgeobW1FZpSg8rGZNftVJ8BGM7/FsKo
K4fZbIdBX6aO2eiAxWINfc+mvhp0lbA7C+Cr3ARNcXXo9dtx6dLFeH8cRGOm
dnr3zf87fPiwyuiivQN4YB/w3r171fP5/X41S4CIiIiIiIiIJifZGVBVVQmd
1gdX4ABuYWbcM7zx5n+1zXNg0FT3ZX2W8LGG87/+/7aYVeZn0HvR0HAWN27c
iPdHQTQukv/J/L8jR46o3R+xqP2LHJktuHLlyv5e444O1swSERERERERTWay
C9jt9kCncaGu5f1p0Af8JMrqkmHUVfRlfmYYPedgsbrUryX/0+v1qK6uVvkn
0XQg+Z/T6cTu3bvVnt5YZX+RIxnj9u3bVc9xW1ubmidKRERERERERJNXY2Mj
DNoKVDUsmNL5n/Qv3+mrA6xu/BQmo7Ov3s+qehUl95N6Jcn+JPckmi4i+Z/0
5cqOjljnf/Ic69evV/3G8jPGXdlEREREREREk5tkYRZTDaoa5qh9ufHO8cZy
JPP7/PYP1Py/+nMforpxQf+8P6PRqLIRmXco+wqY/dF0I/nbROV/0luclJSE
EydOqPo/6QNm/kdEREREREQ0ufX29sJoqEDl2QW4PQVnAHb3ZX8OVx70pdXQ
68ph0AdVXZJkEzIXjTP+aLqS3tvKykqV/2VmZsY8/5P5f+np6ar2T+pqJVdn
pk5EREREREQ0ud25cwd+fxAGvQutN56eUjWAXaHTiafg9ByDSeeH2e6Fxep8
YNZfe3t7vN9iophyuVwq65aZfAsXLox5/peWlqZ+ts6dO/ela2loaMBf//Vf
Y8aMGYOer3zlK+p6R3vbocjfX88///yX7vtXf/VXuHz5ctTuQ0RERERERDTV
3bjRCb3Gj4rTS9GNmaqmLt7Z3kjzvxuh67XZi2A22GF0nYHJFoDFbILBYIDP
52NvIk1rkm97PB4cO3Ys5tnfwPo/yddramq+tEdHvj9Unjfa/C9yXnzxxUFf
u+w7Gelzjec+RERERERERNNBZ2cnDAY9dNogKs8uVvlf1yTI94bL/npC58zF
t8O7fmXen9kEc+hIbZJkfz09PfF+a4liqqysTM3hk3l8spc31vnf0qVLkZiY
iCNHjqjZmteuXXvgegbmf9///vfR1dU15LUPzP8evu3AxxlJjnfo0KEvXcfD
9xvLfYiIiIiIiIimi7t376p/i5vNVui0Zag4u1jla5M1A5Sav1t4Emcv/Bom
vR9mU3jXb2TXx5UrV79Ul0Q03cjPbXl5OYqLi1VNnuzmiHX+J0dmDG7YsEHl
jg/310cr/xNz5szpfyzJHQe732A53nDPNdL7EBEREREREU1HkplVV9epDFDq
AG/iqUmXAUrN3+XbP4DNXqzq/szG8Lw/2UUg2Z/UMhI9Di5evIhAIID8/HzM
mzdP5XKSk8U6/5M+4y1btqj87+Gft2jmfwPr9QbmfwO/P1Rv8MPGch8iIiIi
IiKi6erOnd7Qv+Ft0JZU41zHs5NuH8gXoXOl9zsw6AMwm+0qb5Dsr6SkBG1t
bfF++4gmnMzhO3DgADZt2qR6c2VG30TkfzabTWV4A/f/xqr+L1Kv9/DujoG5
4FDGch8iIiIiIiKi6Uz+Ld/Y2Ai9zgl/xRZ03PvGpNkHItdxCzNVbaLZ6FJZ
g+w9lXldLS0tj8waiKY72V1bWFio8j+ZBRirWkDJ/zIyMlS9rfz8Dey1j1b+
N7Beb+BeXpnp+bd/+7ej6uMdy32IiIiIiIiIpjv5d7jJZIa2JIDLPd9TNXfx
7vkN7/p9ElfvfQNWi6mv79eidn1UVFTE+y0jmhSk1k1+Jvbv3x+z/G/gDhDp
AZb6w4jh9v8OzPlGsv93YPYnmP8RERERERERRcf9+/dx8eIluN1BtF6fhS7M
jFv2J7s+rn3xPZy+8C5sVh3srlNq3l+k9k/mn92+fTvebxnRpCA/C7L72uFw
qBo6mQkYiwxQdo1InaHsHZbni4hm/vdw9ieY/xERERERERFFX0WVGZ34L3HZ
AyLP2YGnYLOXwKz3wWR0hU647i9S+3fjxo14v0VEk4bUwhoMBrjdblUDGKv8
b1lfH3B2djbKysr6nz8a/b9D9f4Kzv8jIiIiIiIiij6/L4Da82/GpQf4L/lf
af+8v8iRjKO6uhq9vb3xfouIJo3Kykr1s+HxeGKe/8mMwZMnT6r5m7KLWERr
/t/A3R8P7+t91O8NZSz3ISIiIiIiInpcdLR3wWKuQH3L2yoD7IlD/udwn4RJ
7+/v+5W6v/Lycty9ezfebw/RpCL5n+zDzs3NxcqVK2M2A3BZXw/w6tWr1e5t
eV7ZHRSt/G/g7z1cAzjwOb7yla+o/HE4Y7kPERERERER0ePkekc3bNYK1Lf+
Bh2935nQfcDyXJe6fwSHKxdms0NlGzL37/z58/F+W4gmnbq6OpSWlmL58uVq
Pl+ssr9lfXtA5EgeLz+X8jMZrfxvuJ7dgfV8g+V5ch0Pf38s9yEiIiIiIiJ6
nJw/fwElxVZYLWa0dDwzofMA74RO89WXYNSVw2g0IhgMxvvtIJp0uru71S6O
rKwsVZsXy9q/gfmf7AGWDPDcuXNRy//EwMcabg7gYOfhLG8s9yEiIiIiIiJ6
nMi/zX0+P7QaP9yBzAntA+4NnXPXZsGoq1D5n9/vj/fbQTSp3Lp1C16vV83+
k75fyf9imf1FjtQYJicnq/wvmvV/4uG8brC9vUPtEB5sd/B47kNERERERET0
uGhtbYVe54WnbJfqy52IGkB5nqu934HTkw2TwQGbzYbOzs54vxVEk4rs35Ae
3L1798a87u/h/C89PV3lfk6nk/u4iYiIiIiIiKY4me/v9fqg19lRXr8SN+59
PeYZoOwcudz7XRj0QZhMZlitVnUdRBTW09OjsjeNRoPU1FS1l3ei8j+pM0xJ
SVE7QKT28Nq1a/F+O4iIiIiIiIhonJqamqDTOmB3nsKlrn+IaR9wT1/v7+kL
v4HJ6FL5X01NDff+Eg0gc/+kLjYnJ0fV/k1U72/kLFy4EJs3b1bZPGtziYiI
iIiIiKaHM/UdqG78SO3liOXMv/MdP0N5/XKYjbL316Zm/z1qnhjR40jyP9mJ
bbfbceLECSQlJU1oD7DkfxkZGXA4HKiurlZz+4iIiIiIiIhoaruLM7j8xXdi
0vsr8/6u9H4HvvKdsNo1MGiqYbFYQ8esZozdvHkz3i+faFKRfviWlhY1/09q
8KQfdyJrACNZ49GjR1UdYm9vb7zfEiIiIiIiIiIap47226hvfVvV6MWi5/dC
1z9AW9wAs9nRn/tF9ovev38/3i+faFI6ffo0tFotNm7cOOE9wAsWLEBmZiY8
Hg86Ojri/VYQERERERER0Ti1X7sLd2AHOu9/Lerz/6T+r/3ut0KPnwl9aT0M
+jJV/6fX69SOUyIa3JUrV+FyuVBcXPxAXd5EHNk5IjMAJX/0+XzxfiuIiIiI
iIiIaJxu3OiEXlMGVyATHXe/qTK7aNcAXr33DTRcfAsNl1+DzV4Knc6ECxcu
xPulE01qtbW1OHXqlKr/m+gawISEBBw7dgzBYDDebwMRERERERERjVPn9Ztq
30DtuQ9xE09FfQ7gDcxUGaDsF6lveQ9mkxN6vZH5H9EwZD+2/GweOHAAiYmJ
E14DmJubq/aANDY2xvutICIiIiIiIqJxaL92B77KtbiFp6Je+ydH8sTr+Co+
7/khXN4jMBp8av4f8z+iR5PdG16vFwaDAZs2bVKZnGRzUgso9XmxzAMXL16M
gwcPqj3dlZWV8X4riIiIiIiIiGgcbty4ofp/z7U/G5MdIF+ETsPnv4C+tKZv
96+F+R/RCLndbhQWFqo9wJL/SS63cuVK7N69O6a7gSPZojy37CIhIiIiIiIi
oqlL5X86J3wVGWoHSLRrACX/a7zyKgyaSpX9Mf8jGrmWlhbYbDaUlJSo3E9y
uby8PAQCAbWjI1ITGIv8T3qOS0tL1R7g9vb2eL8VRERERERERDRGN2/ehNls
glYThK98G25hZlRnAIbzv5/DqCtn/kc0StIDLPmf0+nEtm3bkJOTo/YCy1y+
gT3Bscr/JHeUn9empqZ4vxVERERERERENEb379/HxYsXYbE4VQ54seeHUc//
zl5+HfrSutBzmJn/EY2C/Hy2tbVBp9OpWXySBcrPUKzzv2V9MwDXrl2rfl6l
DpGIiIiIiIiIpra6ujqUFDvhLdsd1R5geaxLXf8DNnuR2v0hGaDkCZcvX473
SyaaEm7duqV6cM1mc38N7UTlf6mpqcz/iIiIiIiIiKaJ69evw2atgCe4FT0x
mAEo+38drjyYjC6YTCaUlZWhp6cn3i+baEpobm5WOVwk/5N+4FjO/4vkf2lp
acz/iIiIiIiIiKYRn7sOTt923MITUd8DLLuF/RVbYDQE+nuAOzs74/2SiaaE
s2fPqh7gSPZ35MgRldFF9vQy/yMiIiIiIiKikaitrYNB60Pd+T/gTpTzP+kD
9pXvgNHgVxmG1ADK7mEiGl5ra6vq/5Uj+z/27NmDhISEmGV/zP+IiIiIiIiI
pqe7d+/CZi6HJ7gT7Xe+HfU5gO5AFgz6YH/+19XVFe+XTDRlVFVVwWAwqPxv
9+7d+OSTT1j/R0RERERERESjcufOHdjtVmhLatH4+S+iWgMoO4Wbr82C1WqA
2WxX+Z/sHLl37168XzbRlFBZWanyP9kBXFBQgKysLCQlJcUsA2T+R0RERERE
RDT93L9/HxcvXoReE8DZy6+jC0+qur2evvxuvPnfDcyEw5UPs9Gp8j+r1aoy
RyIaXnl5ef8OELvdrnYCHz9+XOV0scgAmf8RERERERERTU+3bt2CyWSG1aqH
y3MUF7r+Jy51/wideGJc/cCS/3XgKdidBf35n8PhYP5HNEKRHSCSx8mR/Fzq
AVNTU7FkyRLmf0REREREREQ0IrKTV6vVQqczQae1Qq+1wagrR8Xp5egaRwb4
l/yvsD//kz2mUnNIRCPT2Nio+ubr6+tVDaAcqQFctGhRTPK/5ORk5n9ERERE
RERE00xvby/a2tr6T0NDE4xGEwxayQAT0YWZKgMcbQ4Yyf9s9lKV/8keU+lj
PHfuXLxfMtGU1N7ernaBHDt2DAsXLoxq9if9xHIOHTqk8r/m5uZ4v1wiIiIi
IiIiiqGmpibo9UbotA64AjvgDnyGc+3/ii/6ZgOOPAOciearL8JkdMFiCfcu
+ny+eL88oikrEAjAaDRi27ZtUc0AJftLTExUtcCyd+T27dvxfqlERERERERE
FGOSAXq9Pric1Sgt8aj+3eZrL6Hj7rdGnAFKXnj59g+g11Wo2j/JLYLBYLxf
GtGUdePGDbjdbuzfvx8JCQlRz/+KiopUrzERERERERERPT6kDkjmj7mcPmg1
XrXP48rtH+BOX77X+4iaQOkZbr/7TfjKd6gaQOZ/ROPT09OjeoD37t0bs/xP
ft6JiIiIiIiI6PEjdUcOuwM6jRdOTzZqm+ahOnSqTi9FS8ezKgvsHnC6+jJA
yQfPXXseBk0V8z+iceru7lZ7dPbs2cP8j4iIiIiIiIii7ubNm3A47NBqrNCU
BsKnqBImczE8gS1wBzLgDmbA489C282f9M8LbGn/V5iNDhgMZuZ/ROMg+Z/D
4YBOp8OaNWvUzl7mf0REREREREQUTVIH6Pf71R4COcFgIPTflfB66uEPHbej
BqWFNag999GAfSFPIVC1AVqNh/kf0Tjcv38fly5dgs1mw+bNm7FgwQLmf0RE
REREREQ0oWReoOSDWo0Tpy/+Bl14EpVnl0KvdUOj0cDr9cb7EommtGvXrql9
Ohs2bFA1gEuWLFH5HfM/IiIiIiIiIpookgH6fGXQ6w3wV62FttSF2tpatLa2
4sqVq/G+PKIp7fPPr4R+tvQ4efKkmqm5c+dOLFy4UOWA48n/5CvzPyIiIiIi
IiIaqaamRphMVtjM5TCbzSqzIKLx6+3tRX19vZoDKLuADQYDCgsLsXHjRpUD
jiX/kzmCSUlJKC4uZv5HRERERERERCNy9+5dlVPcuXNHfb137168L4loWpGf
q1u3bsHj8cBqtcJkMmH9+vWjzgAl+5Pe37y8PFVPWFFREe+XRkRERERERERE
RH0kA5Q6QKmzlQxQ6gBH2gsst1uxYoXK/qSeUHLEtra2eL8kIiIiIiIiIiIi
GqCrq0tlgJLh5ebmjrgGMCEhARkZGf19xFJLSERERERERERERJNPd3c37Ha7
qgHctm3biDLARYsWqdtKbij7eaSWkIiIiIiIiIiIiCanyspKOJ1O7N27FwsW
LBh27l9qaio0Gg2am5vjfelEREREREREREQ0jJ6eHlUDePz4cTXX71FzACX/
S0tLU32/58+fj/elExERERERERER0TCkB1j6f2We3+bNmx/ZAxzJ//R6PVpa
WuJ96URERERERERERDSMe/fuqSzPYrGovR6S8T0q/0tJSWH+R0RERERERERE
NIW0t7fDaDSqXE/yvaF6gOX7W7ZsYf5HREREREREREQ0hVy5clXlfzIHUPZ7
DJb/yfcSExOh1WrVbWX3LxEREREREREREU1+kv+ZzWZkZWX19/lK3jfwyPeW
Ll2qdv9Kr7DP58OtW7fifelEREREREREREQ0DMn/JNPbuHEjEhIS1B7glStX
IikpCenp6cjNzUVeXp460vsb6RWWvmEiIiIiIiIiIiKa3C5fvgydTqfOzp07
+39dUlKicr7Kykp1KioqEAwG4fV60dbWhvv378f70omIiIiIiIiIiGgY0sfr
drtV5hep7QsEAjh9+jTOnTsX78sjIiIiIiIiIiKicerq6lI7PS5evKi+dnd3
x/uSiIiIiIiIiIiIiIiIiIiIiIiIiIiIiOgx8f8Dh2Z5gA==
    "], {{0, 720}, {1280, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{1000., Automatic},
  ImageSizeRaw->{1280, 720},
  PlotRange->{{0, 1280}, {0, 720}}]], "Input",ExpressionUUID->"503480fd-e2f0-\
45dd-a873-bd81867db42f"],

Cell["From this data alone a predictor may be constructed", "Text",
 CellChangeTimes->{{3.707572923655435*^9, 
  3.707572934716154*^9}},ExpressionUUID->"467d6949-aa8d-4fca-b77f-\
e0d48942d4c0"],

Cell["\<\
The data of the coordinates of each grid was obtained from: \
https://www.google.com/maps/d/viewer?mid=16rZqG5BrdTh3Lpkhmjs6oafMPaM&hl=en&\
ll=62.92523564759902%2C-125.22216709375002&z=4

Although higher resolution data can be obtained from: \
https://public.opendatasoft.com/explore/dataset/nerc-regions/export/?flg=fr \
it proved to be impractical for the scope of this project because of the time \
needed to process it.\
\>", "Text",
 CellChangeTimes->{{3.7075119172224293`*^9, 3.707511935952215*^9}, 
   3.707853162935532*^9, {3.708135422121771*^9, 
   3.708135497339704*^9}},ExpressionUUID->"06530ac3-93ae-446a-9fba-\
57d8ccdf7f09"],

Cell["\<\
To see if states sharing the same grid have correlated prices we can plot the \
correlated states with the grid map as background\
\>", "Text",
 CellChangeTimes->{{3.7075120170905523`*^9, 
  3.707512056235133*^9}},ExpressionUUID->"44d4d4a2-3184-41b5-b5a5-\
e27f89f3315d"],

Cell[CellGroupData[{

Cell["Map of the grid: Parse the KML", "Subsection",
 CellChangeTimes->{{3.707853205963812*^9, 3.70785320767957*^9}, {
  3.7081074956221933`*^9, 
  3.708107498385221*^9}},ExpressionUUID->"e6a62191-a72b-4cc3-baea-\
f5d1ddac617d"],

Cell["\<\
The kernel has trouble parsing the KML file containing the grid coordinates. \
I will parse it manually. Also I will manually remove the grids from Alaska \
and Hawaii since I don\[CloseCurlyQuote]t have data relating to heating and \
cooling degree days in those areas.\
\>", "Text",
 CellChangeTimes->{{3.7081077165393972`*^9, 
  3.708107796878984*^9}},ExpressionUUID->"79549605-8fb5-4cf1-b34c-\
e887411d3639"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<nerc-regions.kml\>\""}], ",", "\"\<XML\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"namesString", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Cases", "[", 
       RowBox[{"data", ",", 
        RowBox[{
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<name\>\"", ",", 
           RowBox[{"{", "}"}], ",", "n_"}], "]"}], "\[RuleDelayed]", "n"}], 
        ",", "Infinity"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"coordinatesString", " ", "=", " ", 
    RowBox[{"Cases", "[", 
     RowBox[{"data", ",", 
      RowBox[{
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<coordinates\>\"", ",", 
         RowBox[{"{", "}"}], ",", "c_"}], "]"}], "\[RuleDelayed]", " ", "c"}],
       ",", "Infinity"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"StringCoordToPolygon", "[", "s_String", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"flattenCoord", ",", "coord"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"flattenCoord", " ", "=", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"StringSplit", "[", 
          RowBox[{"s", ",", 
           RowBox[{"Whitespace", "|", "\"\<,\>\""}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"coord", " ", "=", " ", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{"flattenCoord", ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", 
              RowBox[{"Length", "[", "flattenCoord", "]"}], ",", "3"}], 
             "}"}]}], "]"}], ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"Polygon", "[", "coord", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nercAreas", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"namesString", ",", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringCoordToPolygon", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "&"}], ",", 
        "coordinatesString"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nercAreas", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"nercAreas", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<ASCC\>\"", ",", "_"}], "}"}], "|", 
      RowBox[{"{", 
       RowBox[{"\"\<HICC\>\"", ",", "_"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.707846208666113*^9, 3.707846216718544*^9}, {
  3.707849429555588*^9, 3.707849430517205*^9}, {3.7078498208206253`*^9, 
  3.707849876123752*^9}, {3.707850812905902*^9, 3.707850816989962*^9}, {
  3.707852036353258*^9, 3.707852038156726*^9}, {3.7078521092102737`*^9, 
  3.707852109426777*^9}, {3.707852148677436*^9, 3.707852227518056*^9}, {
  3.7078577691895313`*^9, 3.7078577694103003`*^9}, {3.7081076940923986`*^9, 
  3.708107711446794*^9}, {3.708107808400495*^9, 3.708107811664455*^9}, {
  3.7081079077921953`*^9, 3.708107911394135*^9}, {3.708107986732173*^9, 
  3.7081079869678993`*^9}},ExpressionUUID->"2bc4180d-e588-49db-858e-\
3c343b2131e5"],

Cell["Then I can plot them", "Text",
 CellChangeTimes->{{3.7081079933072*^9, 
  3.708107996903273*^9}},ExpressionUUID->"38d0826e-6366-49cb-966f-\
459e2e639bf8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"names", " ", "=", " ", 
   RowBox[{"nercAreas", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coordinates", " ", "=", " ", 
   RowBox[{"nercAreas", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nercAreasForPlotting", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
       RowBox[{"Tooltip", "[", 
        RowBox[{
         RowBox[{"coordinates", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"names", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"1", 
        RowBox[{"Length", "[", "coordinates", "]"}]}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GeoGraphics", "[", "nercAreasForPlotting", "]"}]}], "Input",
 CellChangeTimes->{
  3.707850631737692*^9, {3.7078508268649187`*^9, 3.707850831439556*^9}, {
   3.7078518500123577`*^9, 3.7078519100465612`*^9}, 3.707852217227968*^9, {
   3.708107963806394*^9, 
   3.708107984073885*^9}},ExpressionUUID->"d0c587d3-7389-4a33-b804-\
d04a8208eeeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A function to find the grid corresponding to a state", "Subsection",
 CellChangeTimes->{{3.70785321652687*^9, 
  3.707853236176914*^9}},ExpressionUUID->"b9892ec1-e8dd-4a67-a163-\
6d290e3854ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindNercArea", "[", "state_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nercAreasNames", ",", "nercAreasCoord", ",", "testResults", ",", 
      "pos"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nercAreasNames", " ", "=", " ", 
      RowBox[{"nercAreas", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nercAreasCoord", " ", "=", " ", 
      RowBox[{"nercAreas", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"testResults", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"GeoWithinQ", "[", 
          RowBox[{"#", ",", 
           RowBox[{"EntityValue", "[", 
            RowBox[{"state", ",", "\"\<Coordinates\>\""}], "]"}]}], "]"}], 
         "&"}], ",", "nercAreasCoord"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{"Or", ",", "testResults"}], "]"}], "\[Equal]", " ", "True"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"First", "[", 
        RowBox[{"Extract", "[", 
         RowBox[{"nercAreasNames", ",", 
          RowBox[{"Position", "[", 
           RowBox[{"testResults", ",", "True"}], "]"}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "None"}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7078529372670403`*^9, 3.707852992798153*^9}, {
  3.7081085101904087`*^9, 
  3.708108510593482*^9}},ExpressionUUID->"2bfc208d-e4e1-404d-b8e4-\
e3ea3e53ee18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nercAreaOfState", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"FindNercArea", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "states"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.708108522179139*^9, 
  3.708108522349687*^9}},ExpressionUUID->"9f17d8c3-255e-4641-82c3-\
a38b7dbc028e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["High correlated states with the grid as background", "Subsection",
 CellChangeTimes->{{3.7078532574638844`*^9, 
  3.7078532663158283`*^9}},ExpressionUUID->"ffdebc4c-b6c8-4042-902e-\
126fa7410923"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GeoGraphics", "[", "nercAreasForPlotting", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GeoListPlot", "[", 
      RowBox[{
       RowBox[{"corrStates", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"EdgeForm", "[", "Thick", "]"}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"GeoRange", "\[Rule]", "\"\<Country\>\""}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "corrStates", "]"}], ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.708108056892208*^9, 
  3.708108071146936*^9}},ExpressionUUID->"44b3ae22-fc35-4278-8298-\
73c828a499c2"],

Cell["41% of the high correlated states share the same grid.", "Text",
 CellChangeTimes->{{3.707523137899798*^9, 3.7075231581827793`*^9}, {
  3.707768659900619*^9, 3.7077686601604757`*^9}, {3.7078532725858593`*^9, 
  3.7078532727251043`*^9}},ExpressionUUID->"df37551d-08ee-4338-8dfb-\
44893386b2fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"corrStatesAreas", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"FindNercArea", ",", "corrStates", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"Select", "[", 
     RowBox[{"corrStatesAreas", ",", 
      RowBox[{
       RowBox[{"Apply", "[", 
        RowBox[{"SameQ", ",", "#"}], "]"}], "&"}]}], "]"}], "]"}], "/", 
   RowBox[{"Length", "[", "corrStatesAreas", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.707853125920632*^9, 3.7078531260901423`*^9}, 
   3.70810845299439*^9, {3.708108531974489*^9, 
   3.708108545046076*^9}},ExpressionUUID->"6a87fd03-dfaa-4ccc-8b97-\
43900363efb8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Degree days", "Chapter",
 CellChangeTimes->{{3.708109883259918*^9, 
  3.708109911997068*^9}},ExpressionUUID->"08d2837e-0a00-411d-af4c-\
f1b398c66497"],

Cell["\<\
The degree days database is formatted as text separated with \
\[OpenCurlyDoubleQuote]|\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.708109902968904*^9, 
  3.708109936629212*^9}},ExpressionUUID->"ea3baf36-fe97-4569-a17a-\
1cf765604e2c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shortStateRule", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<AL\>\"", "\[Rule]", 
       TemplateBox[{"\"Alabama, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Alabama\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Alabama\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<AR\>\"", "\[Rule]", 
       TemplateBox[{"\"Arkansas, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Arkansas\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Arkansas\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<AZ\>\"", "\[Rule]", 
       TemplateBox[{"\"Arizona, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Arizona\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Arizona\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<CA\>\"", "\[Rule]", 
       TemplateBox[{"\"California, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"California\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"California\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        
        "Entity"]}], ",", 
      RowBox[{"\"\<CO\>\"", "\[Rule]", 
       TemplateBox[{"\"Colorado, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Colorado\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Colorado\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<CT\>\"", "\[Rule]", 
       TemplateBox[{"\"Connecticut, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Connecticut\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Connecticut\\\
\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<DE\>\"", "\[Rule]", 
       TemplateBox[{"\"Delaware, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Delaware\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Delaware\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<FL\>\"", "\[Rule]", 
       TemplateBox[{"\"Florida, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Florida\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<GA\>\"", "\[Rule]", 
       TemplateBox[{"\"Georgia, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Georgia\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Georgia\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<IA\>\"", "\[Rule]", 
       TemplateBox[{"\"Iowa, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Iowa\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Iowa\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<ID\>\"", "\[Rule]", 
       TemplateBox[{"\"Idaho, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Idaho\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Idaho\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<IL\>\"", "\[Rule]", 
       TemplateBox[{"\"Illinois, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Illinois\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<IN\>\"", "\[Rule]", 
       TemplateBox[{"\"Indiana, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Indiana\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Indiana\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<KS\>\"", "\[Rule]", 
       TemplateBox[{"\"Kansas, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Kansas\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Kansas\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<KY\>\"", "\[Rule]", 
       TemplateBox[{"\"Kentucky, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Kentucky\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Kentucky\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<LA\>\"", "\[Rule]", 
       TemplateBox[{"\"Louisiana, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Louisiana\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Louisiana\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<MA\>\"", "\[Rule]", 
       TemplateBox[{
        "\"Massachusetts, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Massachusetts\"", ",", "\"UnitedStates\""}], 
               "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Massachusetts\\\", \\\
\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<MD\>\"", "\[Rule]", 
       TemplateBox[{"\"Maryland, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Maryland\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maryland\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<ME\>\"", "\[Rule]", 
       TemplateBox[{"\"Maine, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Maine\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Maine\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<MI\>\"", "\[Rule]", 
       TemplateBox[{"\"Michigan, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Michigan\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Michigan\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<MN\>\"", "\[Rule]", 
       TemplateBox[{"\"Minnesota, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Minnesota\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Minnesota\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<MO\>\"", "\[Rule]", 
       TemplateBox[{"\"Missouri, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Missouri\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Missouri\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<MS\>\"", "\[Rule]", 
       TemplateBox[{"\"Mississippi, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Mississippi\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Mississippi\\\
\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<MT\>\"", "\[Rule]", 
       TemplateBox[{"\"Montana, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Montana\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Montana\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<NC\>\"", "\[Rule]", 
       TemplateBox[{"\"North Carolina, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"NorthCarolina\"", ",", "\"UnitedStates\""}], 
               "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"NorthCarolina\\\", \\\
\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<ND\>\"", "\[Rule]", 
       TemplateBox[{"\"North Dakota, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"NorthDakota\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"NorthDakota\\\
\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<NE\>\"", "\[Rule]", 
       TemplateBox[{"\"Nebraska, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Nebraska\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Nebraska\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<NH\>\"", "\[Rule]", 
       TemplateBox[{
        "\"New Hampshire, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"NewHampshire\"", ",", "\"UnitedStates\""}], "}"}]}],
            "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewHampshire\
\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<NJ\>\"", "\[Rule]", 
       TemplateBox[{"\"New Jersey, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"NewJersey\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"NewJersey\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<NM\>\"", "\[Rule]", 
       TemplateBox[{"\"New Mexico, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"NewMexico\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"NewMexico\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<NV\>\"", "\[Rule]", 
       TemplateBox[{"\"Nevada, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Nevada\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Nevada\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<NY\>\"", "\[Rule]", 
       TemplateBox[{"\"New York, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"NewYork\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<OH\>\"", "\[Rule]", 
       TemplateBox[{"\"Ohio, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Ohio\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Ohio\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<OK\>\"", "\[Rule]", 
       TemplateBox[{"\"Oklahoma, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Oklahoma\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Oklahoma\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<OR\>\"", "\[Rule]", 
       TemplateBox[{"\"Oregon, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Oregon\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<PA\>\"", "\[Rule]", 
       TemplateBox[{"\"Pennsylvania, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Pennsylvania\"", ",", "\"UnitedStates\""}], "}"}]}],
            "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Pennsylvania\
\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<RI\>\"", "\[Rule]", 
       TemplateBox[{"\"Rhode Island, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"RhodeIsland\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"RhodeIsland\\\
\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<SC\>\"", "\[Rule]", 
       TemplateBox[{"\"South Carolina, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"SouthCarolina\"", ",", "\"UnitedStates\""}], 
               "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"SouthCarolina\\\", \\\
\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<SD\>\"", "\[Rule]", 
       TemplateBox[{"\"South Dakota, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"SouthDakota\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"SouthDakota\\\
\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<TN\>\"", "\[Rule]", 
       TemplateBox[{"\"Tennessee, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Tennessee\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Tennessee\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<TX\>\"", "\[Rule]", 
       TemplateBox[{"\"Texas, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Texas\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<UT\>\"", "\[Rule]", 
       TemplateBox[{"\"Utah, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Utah\"", ",", "\"UnitedStates\""}], "}"}]}], "]"}],
         "\"Entity[\\\"AdministrativeDivision\\\", {\\\"Utah\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<VA\>\"", "\[Rule]", 
       TemplateBox[{"\"Virginia, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Virginia\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Virginia\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<VT\>\"", "\[Rule]", 
       TemplateBox[{"\"Vermont, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Vermont\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Vermont\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<WA\>\"", "\[Rule]", 
       TemplateBox[{"\"Washington, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Washington\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Washington\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        
        "Entity"]}], ",", 
      RowBox[{"\"\<WI\>\"", "\[Rule]", 
       TemplateBox[{"\"Wisconsin, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Wisconsin\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", \
{\\\"Wisconsin\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<WV\>\"", "\[Rule]", 
       TemplateBox[{
        "\"West Virginia, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"WestVirginia\"", ",", "\"UnitedStates\""}], "}"}]}],
            "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"WestVirginia\
\\\", \\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}], ",", 
      RowBox[{"\"\<WY\>\"", "\[Rule]", 
       TemplateBox[{"\"Wyoming, United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"AdministrativeDivision\"", ",", 
             RowBox[{"{", 
               RowBox[{"\"Wyoming\"", ",", "\"UnitedStates\""}], "}"}]}], 
           "]"}],"\"Entity[\\\"AdministrativeDivision\\\", {\\\"Wyoming\\\", \
\\\"UnitedStates\\\"}]\"","\"administrative division\""},
        "Entity"]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullDateToMonthly", "[", "date_", "]"}], ":=", 
   RowBox[{"DateObject", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DateValue", "[", 
        RowBox[{"date", ",", "#"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\""}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractDegreeDays", "[", "txt_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "lines", ",", "dateStrings", ",", "dates", ",", "stateAndDDays", ",", 
        "states", ",", "ddays", ",", "datesAndDDays", ",", "gatheredByMonth", 
        ",", "datesAndDegreeDaysByMonth"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lines", " ", "=", " ", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"txt", ",", "\"\<\\n\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dateStrings", " ", "=", " ", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"StringSplit", "[", 
           RowBox[{
            RowBox[{"lines", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", "\"\<|\>\""}], "]"}], ",", 
          "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dates", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"DateObject", ",", "dateStrings"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"stateAndDDays", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"StringSplit", "[", 
            RowBox[{"#", ",", "\"\<|\>\""}], "]"}], "&"}], ",", 
          RowBox[{"Drop", "[", 
           RowBox[{"lines", ",", "4"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"states", " ", "=", 
        RowBox[{
         RowBox[{"stateAndDDays", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "/.", " ", 
         "shortStateRule"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ddays", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Drop", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}], ",", "stateAndDDays"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"datesAndDDays", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"dates", ",", 
              RowBox[{"ToExpression", "[", "#", "]"}]}], "}"}], "]"}], "&"}], 
          ",", "ddays"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"datesAndDegreeDaysByMonth", " ", "=", " ", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"gatheredByMonth", " ", "=", " ", 
            RowBox[{"GatherBy", "[", 
             RowBox[{"dh", ",", 
              RowBox[{
               RowBox[{"DateValue", "[", 
                RowBox[{
                 RowBox[{"First", "[", "#", "]"}], ",", "\"\<Month\>\""}], 
                "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FullDateToMonthly", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"Total", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], 
              "&"}], ",", "gatheredByMonth"}], "]"}]}], "\[IndentingNewLine]",
           ",", 
          RowBox[{"{", 
           RowBox[{"dh", ",", "datesAndDDays"}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"states", ",", "datesAndDegreeDaysByMonth"}], "}"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directories", " ", "=", " ", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*\>\"", ",", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
         "\"\<DegreeDays\>\""}]}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"FileType", "[", "#", "]"}], "\[Equal]", "Directory"}], 
       "&"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingDegreesByStateYearly", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ExtractDegreeDays", "[", 
      RowBox[{"Import", "[", 
       RowBox[{"d", "<>", "\"\</StatesCONUS.Heating.txt\>\""}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "directories"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"heatingDegreesByState", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"t", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"Transpose", "[", "heatingDegreesByStateYearly", "]"}]}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coolingDegreesByStateYearly", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ExtractDegreeDays", "[", 
      RowBox[{"Import", "[", 
       RowBox[{"d", "<>", "\"\</StatesCONUS.Cooling.txt\>\""}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "directories"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coolingDegreesByState", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"t", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"t", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Transpose", "[", "coolingDegreesByStateYearly", "]"}]}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.708110194668708*^9, 3.708110196546895*^9}, {
  3.708112426892177*^9, 3.7081124581874123`*^9}, {3.708112634354622*^9, 
  3.708112662888714*^9}, {3.7081129011243896`*^9, 3.708112934344831*^9}, {
  3.708113050073757*^9, 3.708113122048506*^9}, {3.708113155885408*^9, 
  3.7081132736711617`*^9}, {3.708113310176784*^9, 3.7081133264718847`*^9}, {
  3.7081136061442413`*^9, 3.708113623726267*^9}, {3.708129224050786*^9, 
  3.7081292326233187`*^9}, {3.708132518212421*^9, 
  3.708132528413539*^9}},ExpressionUUID->"7b655bfd-d5ea-4697-aaff-\
ab20a677195d"],

Cell["\<\
In order to find correlations between electricity prices it is necessary to \
match the data by date.\
\>", "Text",
 CellChangeTimes->{{3.708113690477879*^9, 
  3.7081137223772917`*^9}},ExpressionUUID->"3a5e7137-7d95-4254-a9b2-\
512a63a3fab9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dates", " ", "=", " ", 
   RowBox[{"Sort", "[", 
    RowBox[{"electricityPricesByDate", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectInDateRange", "[", "data_", "]"}], ":=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "dates", "]"}], "\[LessEqual]", 
       RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", " ", 
       RowBox[{"Last", "[", "dates", "]"}]}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingDegreesByState", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"SelectInDateRange", ",", "heatingDegreesByState", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coolingDegreesByState", " ", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{"SelectInDateRange", ",", "coolingDegreesByState", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingDegreesByState", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{"heatingDegreesByState", ",", "First"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coolingDegreesByState", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{"coolingDegreesByState", ",", "First"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.708113738223167*^9, 3.7081137551790037`*^9}, {
  3.7081144153589993`*^9, 3.708114416968987*^9}, {3.708115967839635*^9, 
  3.708115973900814*^9}, {3.7081209769913797`*^9, 3.708120985497463*^9}, {
  3.708132942026318*^9, 
  3.708132986470192*^9}},ExpressionUUID->"cfe60afd-33ed-4516-8280-\
66cbf7553a4c"],

Cell["Plots", "Text",
 CellChangeTimes->{{3.708113779766837*^9, 
  3.708113781467381*^9}},ExpressionUUID->"700aab21-2931-45c3-bc2f-\
993d0cd3e860"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pltData", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"heatingDegreesByState", ",", "7"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"pltData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Date\>\"", ",", " ", "\"\<Degree days\>\""}], "}"}]}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"pltData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Heating degree days\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.708113787067643*^9, 
  3.708113804910653*^9}},ExpressionUUID->"91bf1ab1-ba62-446d-92f6-\
19ac32a24d26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pltData", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"coolingDegreesByState", ",", "7"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"pltData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Date\>\"", ",", " ", "\"\<Degree days\>\""}], "}"}]}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"pltData", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Cooling degree days\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.708113812095532*^9, 
  3.708113820077848*^9}},ExpressionUUID->"6c9921bc-afc2-4a94-ad00-\
0b611c39b4b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Correlation between degree days and electricity prices", "Chapter",
 CellChangeTimes->{{3.7081143053703413`*^9, 
  3.708114313051385*^9}},ExpressionUUID->"b1b4f595-8b4b-4097-9e81-\
17f307f49f48"],

Cell["\<\
One might expect that both heating degree days and cooling degree days would \
increase electricity consumption, also increasing the price by the effect of \
increased demand. This is however not accurate, as the following plots show, \
heating and cooling degree days not always increase the price, and \
surprisingly in some cases actually reduce the price. This might be explained \
by differences in infrastructure, economy or electricity generation of each \
state. For example, anti correlations in heating degree days could be because \
in cold days there is less need to maintain the ventilation needed for \
industrial processes. In cooling degree days might be because renewable \
electric sources produce more electricity in hot days.\
\>", "Text",
 CellChangeTimes->{{3.7081188153226547`*^9, 3.708118931772737*^9}, {
  3.70811902190182*^9, 3.70811902810714*^9}, {3.708119708490541*^9, 
  3.708119850707749*^9}},ExpressionUUID->"00a382d1-8ade-42df-8c9b-\
a07fab27916d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DegreeDaysCorrPlots", "[", "data_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "states", ",", " ", "degreeDays", ",", " ", "prices", ",", " ", 
        "stateName", ",", " ", "corrString"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"states", " ", "=", " ", 
        RowBox[{"electricityPricesByState", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"degreeDays", " ", "=", " ", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"prices", " ", "=", " ", 
           RowBox[{"electricityPricesByState", "[", 
            RowBox[{"[", 
             RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"stateName", " ", "=", " ", 
           RowBox[{"StringDelete", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"states", "[", 
               RowBox[{"[", "s", "]"}], "]"}], "[", "\"\<Name\>\"", "]"}], 
             ",", " ", "\"\<, United States\>\""}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"corrString", " ", "=", " ", 
           RowBox[{"\"\<Correlation: \>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Correlation", "[", 
              RowBox[{"degreeDays", ",", "prices"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Standardize", "[", "degreeDays", "]"}], ",", 
              RowBox[{"Standardize", "[", "prices", "]"}]}], "}"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Index\>\"", ",", "\"\<Value\>\""}], "}"}]}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Standardized degree days\>\"", ",", 
               "\"\<Standardized prices\>\""}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{
             "stateName", "<>", "\"\<\\n\>\"", "<>", "corrString"}]}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "1", ",", 
           RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingDegreeDaysCorrPlots", " ", "=", " ", 
   RowBox[{"DegreeDaysCorrPlots", "[", "heatingDegreesByState", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coolingDegreeDaysCorrPlots", " ", "=", " ", 
   RowBox[{"DegreeDaysCorrPlots", "[", "coolingDegreesByState", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heatingGridElements", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Heating degree days\>\"", ",", "20", ",", "Red"}], 
         "]"}], ",", "SpanFromLeft"}], "}"}], "}"}], ",", 
     RowBox[{"Partition", "[", 
      RowBox[{"heatingDegreeDaysCorrPlots", ",", 
       RowBox[{"UpTo", "[", "4", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"coolingGridElements", " ", "=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Cooling degree days\>\"", ",", "20", ",", "Blue"}], 
          "]"}], ",", "SpanFromLeft"}], "}"}], "}"}], ",", 
      RowBox[{"Partition", "[", 
       RowBox[{"coolingDegreeDaysCorrPlots", ",", 
        RowBox[{"UpTo", "[", "4", "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"heatingGridElements", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"coolingGridElements", ",", 
   RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7081143208299513`*^9, 3.708114352839057*^9}, 
   3.708114529322995*^9, {3.708116158912457*^9, 3.708116162783124*^9}, {
   3.708118211663636*^9, 3.708118218271023*^9}, {3.708118300751863*^9, 
   3.708118490958788*^9}, {3.708118608710103*^9, 3.708118752537704*^9}, {
   3.708119067397851*^9, 
   3.708119068518928*^9}},ExpressionUUID->"dd296132-67c9-4b36-8f9d-\
2ffc7467b570"],

Cell["\<\
Since the correlation between heating degree and cooling degree days are \
different for each state and depends on it\[CloseCurlyQuote]s properties one \
could assume that they are fixed, or at least that they change very slowly in \
time. Let\[CloseCurlyQuote]s suppose two values \[Alpha] and \[Beta] of the \
\[OpenCurlyDoubleQuote]strength\[CloseCurlyDoubleQuote] of heating degree \
days and cooling degree days respect to price changes. I can find the optimum \
values of \[Alpha] and \[Beta] to maximize correlation between degree days \
and electricity prices. Assuming that the properties of the states don\
\[CloseCurlyQuote]t change in a short timespan these \[Alpha] and \[Beta] \
will be fixed in time.\
\>", "Text",
 CellChangeTimes->{{3.708119858216374*^9, 3.708119929262497*^9}, {
   3.7081201407758207`*^9, 3.708120142167688*^9}, {3.708127609003295*^9, 
   3.708127612238164*^9}, 3.708127647557948*^9, {3.708127677701949*^9, 
   3.708127799667285*^9}},ExpressionUUID->"ce775c12-30e3-462d-aa9a-\
498114700891"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"state\[Alpha]\[Beta]paramsWCorr", " ", "=", " ", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"prices", " ", "=", " ", 
        RowBox[{"electricityPricesByState", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"hd", " ", "=", " ", 
        RowBox[{"heatingDegreesByState", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cd", " ", "=", " ", 
        RowBox[{"coolingDegreesByState", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]\[Beta]tbl", " ", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Alpha]", ",", "\[Beta]", ",", 
              RowBox[{"Correlation", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Alpha]", " ", ",", "\[Beta]"}], " ", "}"}], ".", 
                 
                 RowBox[{"{", 
                  RowBox[{"hd", ",", "cd"}], "}"}]}], ",", "prices"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Alpha]", ",", 
              RowBox[{"-", "1"}], ",", "1", ",", "0.03"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Beta]", ",", 
              RowBox[{"-", "1"}], ",", "1", ",", "0.03"}], "}"}]}], "]"}], 
          ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"states", "[", 
          RowBox[{"[", "s", "]"}], "]"}], ",", 
         RowBox[{"First", "[", 
          RowBox[{"MaximalBy", "[", 
           RowBox[{"\[Alpha]\[Beta]tbl", ",", "Last"}], "]"}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "1", ",", 
        RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"state\[Alpha]\[Beta]params", "=", " ", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{"#", ",", 
        RowBox[{"-", "1"}]}], "]"}], "&"}], ",", 
     "state\[Alpha]\[Beta]paramsWCorr", ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GeoRegionValuePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"state\[Alpha]\[Beta]params", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"state\[Alpha]\[Beta]params", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Heating degree days\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"GeoRegionValuePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"state\[Alpha]\[Beta]params", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"state\[Alpha]\[Beta]params", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<TemperatureMap\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Cooling degree days\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7081201894037*^9, 3.708120199649619*^9}, {
  3.708120230430468*^9, 3.708120231930646*^9}, {3.708120350952323*^9, 
  3.70812039627743*^9}, {3.708120448371314*^9, 3.7081204498951483`*^9}, {
  3.708120498168486*^9, 3.708120523651575*^9}, {3.708120557606921*^9, 
  3.708120575288701*^9}},ExpressionUUID->"9b9d81d0-1aa3-4afc-9f98-\
a84360d63548"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GDP of states", "Chapter",
 CellChangeTimes->{{3.708121646610704*^9, 
  3.708121650635962*^9}},ExpressionUUID->"99836ca7-e7e1-41e8-b1e4-\
17e5f0574fe9"],

Cell["\<\
One factor that might be related to prices is the GDP of the state. I chose \
to use this because is a measure of how well the economy is doing, and this \
affect wages and investment in infrastructure.\
\>", "Text",
 CellChangeTimes->{{3.708127930823926*^9, 3.708127986989908*^9}, {
  3.708128062928741*^9, 
  3.708128089268033*^9}},ExpressionUUID->"2432e7eb-3d45-4a3d-9c70-\
768f88078897"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DateToYearly", "[", "date_", "]"}], ":=", 
    RowBox[{"DateObject", "[", 
     RowBox[{"{", 
      RowBox[{"DateValue", "[", 
       RowBox[{"date", ",", "\"\<Year\>\""}], "]"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dates", " ", "=", " ", 
   RowBox[{"Sort", "[", 
    RowBox[{"electricityPricesByDate", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindStateGDPByMonth", "[", 
    RowBox[{"state_", ",", "datefrom_", ",", "dateto_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "gdpTS", ",", "gdpValues", ",", "datesMissing", ",", "fillArr"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gdpTS", " ", "=", " ", 
       RowBox[{"EntityValue", "[", 
        RowBox[{"state", ",", 
         RowBox[{"EntityProperty", "[", 
          RowBox[{
          "\"\<AdministrativeDivision\>\"", ",", 
           "\"\<GrossDomesticProduct\>\"", ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Date\>\"", "\[Rule]", 
             RowBox[{"Interval", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"DateToYearly", "[", "datefrom", "]"}], ",", 
                RowBox[{"DateToYearly", "[", "dateto", "]"}]}], "}"}], 
              "]"}]}], "}"}]}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"gdpValues", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{"DateToYearly", ",", 
         RowBox[{"Normal", "[", 
          RowBox[{"QuantityMagnitude", "[", "gdpTS", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Somehow", " ", "when", " ", "the", " ", "TimeSeries", " ", "is", " ",
          "created"}], ",", " ", 
        RowBox[{"it", " ", "returns", " ", "full", " ", "dates", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"that", " ", "include", " ", "the", " ", "day"}], ")"}], 
          ".", " ", "I"}], " ", "map", " ", "it", " ", "again", " ", "to", 
         " ", "yearly", " ", 
         RowBox[{"dates", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Adjust", " ", "the", " ", "magnitude", " ", "so", " ", "I", " ", 
        RowBox[{"don", "'"}], "t", " ", "get", " ", "a", " ", "big", " ", 
        "number", " ", "that", " ", "crashes", " ", "the", " ", "predictor"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"gdpValues", " ", "=", " ", 
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "/", 
           RowBox[{"10", "^", "10"}]}], "&"}], ",", "gdpValues", ",", 
         RowBox[{"{", 
          RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gdpValues", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"DateWithinQ", "[", 
                 RowBox[{
                  RowBox[{"g", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"g", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "Nothing"}], 
               "]"}], "&"}], " ", ",", "dates"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"g", ",", "gdpValues"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Since", " ", "GDP", " ", "of", " ", "current", " ", "year", " ", 
        RowBox[{"can", "'"}], "t", " ", "be", " ", "obtained", " ", "I", " ", 
        "will", " ", "use", " ", "the", " ", "last", " ", "known", " ", 
        "value"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"datesMissing", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"dates", ",", 
         RowBox[{"gdpValues", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fillArr", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "gdpValues", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", 
         RowBox[{"Length", "[", "datesMissing", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gdpValues", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"gdpValues", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"datesMissing", ",", "fillArr"}], "}"}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "gdpValues", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gdps", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"FindStateGDPByMonth", "[", 
        RowBox[{"s", ",", 
         RowBox[{"First", "[", "dates", "]"}], ",", 
         RowBox[{"Last", "[", "dates", "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "states"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.708121830433869*^9, {3.7081218979121027`*^9, 3.7081218984174223`*^9}, {
   3.708121932397317*^9, 3.708121943160294*^9}, {3.7081220126392317`*^9, 
   3.708122039534142*^9}, {3.708123478718156*^9, 3.70812348588454*^9}, {
   3.708127034710746*^9, 3.708127052188155*^9}, {3.7081351939119167`*^9, 
   3.708135207217502*^9}},ExpressionUUID->"9afc1297-1575-4fd9-8a24-\
2cd0d8575954"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GeoRegionValuePlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gdps", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"gdps", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "t"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"DateString", "[", 
       RowBox[{"dates", "[", 
        RowBox[{"[", "t", "]"}], "]"}], "]"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"#", "/", "100"}], "+", "1"}], "]"}], "]"}], "&"}], 
       ")"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1", ",", 
     RowBox[{"Length", "[", "dates", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.708127074585678*^9, 3.708127099532515*^9}, {
  3.708127415190877*^9, 3.708127577274523*^9}, {3.708127850487012*^9, 
  3.708127869226845*^9}},ExpressionUUID->"a45edb3f-634d-43e6-80b3-\
a08bf3361a05"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Commodities price", "Chapter",
 CellChangeTimes->{{3.708128300446196*^9, 
  3.70812830758445*^9}},ExpressionUUID->"f9df6345-66a6-45da-9768-\
21300324856e"],

Cell["\<\
Since electric plants rely on commodities like natural gas or coal, their \
prices affect directly the electricity. The prices of commodities can be \
found on public databases like FRED II or the EIA\
\>", "Text",
 CellChangeTimes->{{3.7081283139184933`*^9, 
  3.708128387772546*^9}},ExpressionUUID->"711ed3c4-3edf-47e9-8cc0-\
ffa16f1a111e"],

Cell["Source: https://www.eia.gov/dnav/ng/hist/n3035us3m.htm", "Text",
 CellChangeTimes->{{3.7081286086628942`*^9, 
  3.708128609941471*^9}},ExpressionUUID->"2e37ea61-3904-43b3-b86f-\
0c551aafac27"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"naturalGasIndustrialPriceAll", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<CommodityPrices/United_States_Natural_Gas_Industrial_Price.csv\>\""}\
], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"naturalGasIndustrialPriceAll", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{
     RowBox[{"MapAt", "[", 
      RowBox[{"DateObject", ",", "naturalGasIndustrialPriceAll", ",", 
       RowBox[{"{", 
        RowBox[{"All", ",", "1"}], "}"}]}], "]"}], ",", "First"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dates", " ", "=", " ", 
   RowBox[{"Sort", "[", 
    RowBox[{"electricityPricesByDate", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"naturalGasIndustrialPrice", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"naturalGasIndustrialPriceAll", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "dates", "]"}], "\[LessEqual]", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", " ", 
       RowBox[{"Last", "[", "dates", "]"}]}], "&"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.708128441431368*^9, 
  3.708128511680663*^9}},ExpressionUUID->"09416ec7-f9e1-431e-98c7-\
ccb9b78dc2c9"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"naturalGasIndustrialPrice", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Data\>\"", ",", "\"\<Dollars per thousand cubic feet\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708128561965004*^9, 3.708128579470675*^9}, {
  3.708128620863573*^9, 
  3.70812862955999*^9}},ExpressionUUID->"3afb2e57-760f-4f8f-a78d-\
4a371c43b991"],

Cell["\<\
Natural gas price in the US (averaged). Source: \
https://www.quandl.com/collections/markets/coal\
\>", "Text",
 CellChangeTimes->{{3.708132697921321*^9, 
  3.708132730045575*^9}},ExpressionUUID->"fc3bd5e0-21bb-450f-8aa3-\
579f1f341e22"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FullDateToMonthly", "[", "date_", "]"}], ":=", 
   RowBox[{"DateObject", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"DateValue", "[", 
        RowBox[{"date", ",", "#"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Year\>\"", ",", "\"\<Month\>\""}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coalPrice", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<CommodityPrices/EIA-COAL.csv\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coalPrice", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FullDateToMonthly", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Mean", "[", 
         RowBox[{"Drop", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
     RowBox[{"Drop", "[", 
      RowBox[{"coalPrice", ",", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coalPrice", " ", "=", " ", 
   RowBox[{"SortBy", "[", 
    RowBox[{"coalPrice", ",", "First"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coalPrice", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"coalPrice", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"First", "[", "dates", "]"}], "\[LessEqual]", " ", 
       RowBox[{"First", "[", "#", "]"}], "\[LessEqual]", " ", 
       RowBox[{"Last", "[", "dates", "]"}]}], "&"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.70813204320586*^9, 3.708132065974346*^9}, {
  3.708132358519573*^9, 3.708132412940535*^9}, {3.708132540648061*^9, 
  3.708132547482821*^9}, {3.708132603687256*^9, 3.7081326213632927`*^9}, {
  3.708132914797957*^9, 
  3.70813291889008*^9}},ExpressionUUID->"0843c762-61e1-407f-8597-\
fd682985353b"],

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"coalPrice", ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Data\>\"", ",", "\"\<Dollars per short ton\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708132628105792*^9, 
  3.708132658198152*^9}},ExpressionUUID->"98468ddd-b857-4710-b1e9-\
76048ecb55b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dataset for training", "Chapter",
 CellChangeTimes->{{3.708128809700255*^9, 
  3.708128814355513*^9}},ExpressionUUID->"04b8114e-1256-4312-b550-\
9ebc3006e13a"],

Cell["\<\
With all the collected data I can construct my database for training. If the \
data is useful and related to the actual factors involved in determining the \
price of electricity the predictor will be able to return reasonable results. \
\>", "Text",
 CellChangeTimes->{{3.708131240506809*^9, 
  3.708131311012537*^9}},ExpressionUUID->"f0b3d231-ab4c-4822-988b-\
331cb45ee8cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"examples", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"gas", " ", "=", " ", 
       RowBox[{"naturalGasIndustrialPrice", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gdp", " ", "=", " ", 
       RowBox[{"gdps", "[", 
        RowBox[{"[", 
         RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"prices", " ", "=", 
       RowBox[{"electricityPricesByState", "[", 
        RowBox[{"[", 
         RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hdDays", " ", "=", " ", 
       RowBox[{"N", "@", 
        RowBox[{"heatingDegreesByState", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"cdDays", " ", "=", " ", 
       RowBox[{"N", "@", 
        RowBox[{"coolingDegreesByState", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"dDays", " ", "=", " ", 
       RowBox[{
        RowBox[{"N", "@", 
         RowBox[{"state\[Alpha]\[Beta]params", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "2"}], "]"}], "]"}]}], ".", 
        RowBox[{"{", 
         RowBox[{"hdDays", ",", "cdDays"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gridArr", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"nercAreaOfState", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "prices", "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"features", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gridArr", ",", "dDays", ",", "gas", ",", "gdp"}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stateTraininSet", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"features", ",", "prices"}], "}"}]}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s", ",", "1", ",", 
       RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"examples", " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"examples", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "To", " ", "fix", " ", "the", " ", "bug", " ", "in", " ", "randomforest"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "+", 
       RowBox[{"RandomReal", "[", "0.0001", "]"}]}], "&"}], ",", "examples", 
     ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "+", 
       RowBox[{"RandomReal", "[", "0.0001", "]"}]}], "&"}], ",", "examples", 
     ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "1", ",", 
       RowBox[{"2", ";;", "3"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.708128836636958*^9, {3.7081288794383993`*^9, 3.7081289042930193`*^9}, 
   3.708129060391917*^9, {3.7081304502825537`*^9, 
   3.708130455798871*^9}},ExpressionUUID->"f98bf0bd-6656-4b0a-aa78-\
bb57b17b4df2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"RandomSample", "[", "examples", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingSet", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"examples", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{"0.8", "*", 
       RowBox[{"Length", "[", "examples", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validationSet", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"examples", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{"0.8", "*", 
       RowBox[{"Length", "[", "examples", "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.708128944548787*^9, 3.70812894484726*^9}, {
  3.70813045926335*^9, 
  3.708130460107355*^9}},ExpressionUUID->"1de43350-5969-4342-9592-\
eae82ad999dc"],

Cell["Search for the best predictor", "Text",
 CellChangeTimes->{{3.708132821132099*^9, 
  3.708132834827289*^9}},ExpressionUUID->"2a545274-a65f-4124-a935-\
ee3c8d896652"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"predictors", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Predict", "[", 
       RowBox[{"trainingSet", ",", 
        RowBox[{"Method", "\[Rule]", " ", "#"}], ",", 
        RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], 
      "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<GaussianProcess\>\"", ",", " ", "\"\<LinearRegression\>\"", ",", 
       " ", "\"\<NearestNeighbors\>\"", ",", " ", "\"\<RandomForest\>\""}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PredictorMeasurements", "[", 
      RowBox[{"#", ",", "validationSet"}], "]"}], "[", 
     "\"\<ComparisonPlot\>\"", "]"}], "&"}], ",", "predictors"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PredictorMeasurements", "[", 
      RowBox[{"#", ",", "validationSet"}], "]"}], "[", 
     "\"\<StandardDeviation\>\"", "]"}], "&"}], ",", "predictors"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7081294057100067`*^9, 
  3.7081294418241673`*^9}},ExpressionUUID->"3cb1850e-9710-43a6-aa4c-\
c91d5491c005"],

Cell["\<\
Seems that the random forest is the most accurate. I can repeat the training \
many times in order to obtain a distribution of the standard deviations.\
\>", "Text",
 CellChangeTimes->{{3.708130170832732*^9, 
  3.708130228375543*^9}},ExpressionUUID->"d0a2ec8d-31b5-4a89-9a58-\
9499ef7168e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]s", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"examples", "=", 
       RowBox[{"RandomSample", "[", "examples", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"trainingSet", " ", "=", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"examples", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"0.8", "*", 
           RowBox[{"Length", "[", "examples", "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"validationSet", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"examples", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"0.8", "*", 
           RowBox[{"Length", "[", "examples", "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"Predict", "[", 
        RowBox[{"trainingSet", ",", 
         RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"pm", " ", "=", " ", 
       RowBox[{"PredictorMeasurements", "[", 
        RowBox[{"p", ",", "validationSet"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", "500", "}"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "\[Sigma]s", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "\[Sigma]s", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", "\[Sigma]s", "]"}]}], "Input",
 CellChangeTimes->{{3.708130240423008*^9, 
  3.708130241532001*^9}},ExpressionUUID->"798071d7-4907-4e05-bddd-\
d720ae434b97"],

Cell["This training set produces better results", "Text",
 CellChangeTimes->{{3.708136941609149*^9, 
  3.70813695029991*^9}},ExpressionUUID->"1770f692-a090-4523-9a55-\
5e0a52aa7481"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"examples", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"coal", " ", "=", " ", 
       RowBox[{"coalPrice", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gas", " ", "=", " ", 
       RowBox[{"naturalGasIndustrialPrice", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gdp", " ", "=", " ", 
       RowBox[{"gdps", "[", 
        RowBox[{"[", 
         RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"prices", " ", "=", 
       RowBox[{"electricityPricesByState", "[", 
        RowBox[{"[", 
         RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hdDays", " ", "=", " ", 
       RowBox[{"N", "@", 
        RowBox[{"heatingDegreesByState", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"cdDays", " ", "=", " ", 
       RowBox[{"N", "@", 
        RowBox[{"coolingDegreesByState", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "2", ",", "All", ",", "2"}], "]"}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"dDays", " ", "=", " ", 
       RowBox[{
        RowBox[{"N", "@", 
         RowBox[{"state\[Alpha]\[Beta]params", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "2"}], "]"}], "]"}]}], ".", 
        RowBox[{"{", 
         RowBox[{"hdDays", ",", "cdDays"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gridArr", " ", "=", " ", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"nercAreaOfState", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Length", "[", "prices", "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"features", " ", "=", " ", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"gridArr", ",", "dDays", ",", "coal", ",", "gdp"}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stateTraininSet", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"features", ",", "prices"}], "}"}]}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s", ",", "1", ",", 
       RowBox[{"Length", "[", "states", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"examples", " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"examples", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "To", " ", "fix", " ", "the", " ", "bug", " ", "in", " ", "randomforest"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "+", 
       RowBox[{"RandomReal", "[", "0.0001", "]"}]}], "&"}], ",", "examples", 
     ",", 
     RowBox[{"{", 
      RowBox[{"All", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"examples", "=", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "+", 
        RowBox[{"RandomReal", "[", "0.0001", "]"}]}], "&"}], ",", "examples", 
      ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "1", ",", 
        RowBox[{"2", ";;", "3"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"RandomSample", "[", "examples", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingSet", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"examples", ",", 
     RowBox[{"Floor", "[", 
      RowBox[{"0.8", "*", 
       RowBox[{"Length", "[", "examples", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"validationSet", " ", "=", " ", 
    RowBox[{"Drop", "[", 
     RowBox[{"examples", ",", 
      RowBox[{"Floor", "[", 
       RowBox[{"0.8", "*", 
        RowBox[{"Length", "[", "examples", "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{"trainingSet", ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pm", " ", "=", " ", 
   RowBox[{"PredictorMeasurements", "[", 
    RowBox[{"p", ",", "validationSet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pm", "[", "\"\<ResidualPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"pm", "[", "\"\<ComparisonPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"pm", "[", "\"\<StandardDeviation\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.70813696209945*^9, 
  3.708136965545059*^9}},ExpressionUUID->"7951e7a5-c383-4ff0-b4b4-\
19528087bf4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Safeguard for kernel crashing", "Chapter",
 CellChangeTimes->{{3.708129095715867*^9, 
  3.7081291038824463`*^9}},ExpressionUUID->"1c430cc1-6c4f-4783-b4f1-\
0baad7e0626f"],

Cell[BoxData[
 RowBox[{"DumpSave", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<state.mx\>\""}], ",", 
   "\"\<Global`\>\""}], "]"}]], "Input",ExpressionUUID->"22087cf2-9358-4839-\
985a-41bd4d9f9685"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<state.mx\>\""}], 
  "]"}]], "Input",ExpressionUUID->"41086213-27ec-40a5-95c1-198673ef93c2"]
}, Open  ]]
},
WindowSize->{1440, 753},
WindowMargins->{{0, Automatic}, {Automatic, 63}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 174, 3, 70, "Chapter",ExpressionUUID->"b4e23c69-9ae1-40c3-a52d-486d2756b109"],
Cell[757, 27, 293, 7, 60, "Text",ExpressionUUID->"fcfb83ad-2156-4c45-88c4-3dd1a1302e57"],
Cell[1053, 36, 224, 5, 36, "Text",ExpressionUUID->"782515c8-a491-41d8-9699-787bd2600432"],
Cell[1280, 43, 23309, 431, 932, "Input",ExpressionUUID->"fa5246d1-99e2-45ba-8858-300c6f24e4cd"],
Cell[24592, 476, 760, 14, 108, "Text",ExpressionUUID->"45aa0707-7587-44d4-b59f-f56fa5de4301"],
Cell[25355, 492, 3007, 79, 378, "Input",ExpressionUUID->"a590de0a-5185-45d4-af29-7f422312a435"],
Cell[28365, 573, 185, 3, 36, "Text",ExpressionUUID->"74468f47-daf0-4f77-bfb8-d9e99cf8c3f6"],
Cell[28553, 578, 1342, 33, 147, "Input",ExpressionUUID->"19dd0235-7c38-4222-b2e5-ae973b955940"],
Cell[29898, 613, 252, 6, 36, "Text",ExpressionUUID->"31362a74-f525-4ead-ab65-968b73262277"],
Cell[30153, 621, 3500, 84, 289, "Input",ExpressionUUID->"fc47b9b8-4e80-443a-b372-d6e5154a20a2"],
Cell[33656, 707, 195, 3, 36, "Text",ExpressionUUID->"a4853f4d-0e6b-435f-a4c3-28db13273a16"],
Cell[33854, 712, 884, 26, 55, "Input",ExpressionUUID->"0a2057a7-152f-42f5-a94c-f07551003b22"],
Cell[CellGroupData[{
Cell[34763, 742, 194, 3, 65, "Subchapter",ExpressionUUID->"1e47bf16-6ace-4b0a-9eeb-14c8345738be"],
Cell[34960, 747, 320, 7, 36, "Text",ExpressionUUID->"c6b422e1-14a5-41b3-998c-b5c634dbc964"],
Cell[35283, 756, 2338, 66, 193, "Input",ExpressionUUID->"cefbb9ca-b02f-4760-96dc-e50508f338af"],
Cell[37624, 824, 249, 4, 36, "Text",ExpressionUUID->"e91d95a5-8cff-446b-bde4-d2685ffac4b8"],
Cell[37876, 830, 428, 12, 31, "Input",ExpressionUUID->"3cce6a36-ef81-4e7b-b718-094273d6f1f3"],
Cell[38307, 844, 186, 3, 36, "Text",ExpressionUUID->"c0643665-f80b-49e2-8e41-fd234fd6b76a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38530, 852, 186, 3, 65, "Subchapter",ExpressionUUID->"8d1b8acc-0be0-485f-a78e-8c5ed50bb78b"],
Cell[38719, 857, 261, 6, 36, "Text",ExpressionUUID->"d767ae2b-7dc0-4c9d-b316-0b455c2676a5"],
Cell[38983, 865, 571, 10, 36, "Text",ExpressionUUID->"05915803-37cc-4cc5-9014-36832adcb1e0"],
Cell[39557, 877, 1667, 44, 147, "Input",ExpressionUUID->"c2750204-09d1-4468-8cd6-be7c069bf8c5"],
Cell[41227, 923, 293, 7, 36, "Text",ExpressionUUID->"608343a1-3c47-4e67-a805-5e9ebe45d179"],
Cell[41523, 932, 701, 19, 31, "Input",ExpressionUUID->"badef6c4-ddba-4d8c-b37e-48a3d9a91267"],
Cell[42227, 953, 232, 6, 36, "Text",ExpressionUUID->"e0e69f2f-c1a2-4a7d-994f-b6e2d35e20b0"],
Cell[42462, 961, 307, 6, 36, "Text",ExpressionUUID->"1e7d40fb-d3eb-47e0-9feb-aa93e14930a8"],
Cell[42772, 969, 251564, 4129, 576, "Input",ExpressionUUID->"503480fd-e2f0-45dd-a873-bd81867db42f"],
Cell[294339, 5100, 193, 3, 36, "Text",ExpressionUUID->"467d6949-aa8d-4fca-b77f-e0d48942d4c0"],
Cell[294535, 5105, 648, 13, 132, "Text",ExpressionUUID->"06530ac3-93ae-446a-9fba-57d8ccdf7f09"],
Cell[295186, 5120, 281, 6, 36, "Text",ExpressionUUID->"44d4d4a2-3184-41b5-b5a5-e27f89f3315d"],
Cell[CellGroupData[{
Cell[295492, 5130, 228, 4, 55, "Subsection",ExpressionUUID->"e6a62191-a72b-4cc3-baea-f5d1ddac617d"],
Cell[295723, 5136, 422, 8, 60, "Text",ExpressionUUID->"79549605-8fb5-4cf1-b34c-e887411d3639"],
Cell[296148, 5146, 3523, 92, 287, "Input",ExpressionUUID->"2bc4180d-e588-49db-858e-3c343b2131e5"],
Cell[299674, 5240, 160, 3, 36, "Text",ExpressionUUID->"38d0826e-6366-49cb-966f-459e2e639bf8"],
Cell[299837, 5245, 1363, 37, 147, "Input",ExpressionUUID->"d0c587d3-7389-4a33-b804-d04a8208eeeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301237, 5287, 199, 3, 55, "Subsection",ExpressionUUID->"b9892ec1-e8dd-4a67-a163-6d290e3854ef"],
Cell[301439, 5292, 1737, 44, 216, "Input",ExpressionUUID->"2bfc208d-e4e1-404d-b8e4-e3ea3e53ee18"],
Cell[303179, 5338, 430, 12, 31, "Input",ExpressionUUID->"9f17d8c3-255e-4641-82c3-a38b7dbc028e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303646, 5355, 202, 3, 55, "Subsection",ExpressionUUID->"ffdebc4c-b6c8-4042-902e-126fa7410923"],
Cell[303851, 5360, 1040, 25, 216, "Input",ExpressionUUID->"44b3ae22-fc35-4278-8298-73c828a499c2"],
Cell[304894, 5387, 299, 4, 36, "Text",ExpressionUUID->"df37551d-08ee-4338-8dfb-44893386b2fa"],
Cell[305196, 5393, 732, 18, 55, "Input",ExpressionUUID->"6a87fd03-dfaa-4ccc-8b97-43900363efb8"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[305989, 5418, 156, 3, 70, "Chapter",ExpressionUUID->"08d2837e-0a00-411d-af4c-f1b398c66497"],
Cell[306148, 5423, 262, 6, 36, "Text",ExpressionUUID->"ea3baf36-fe97-4569-a17a-1cf765604e2c"],
Cell[306413, 5431, 28598, 594, 1295, "Input",ExpressionUUID->"7b655bfd-d5ea-4697-aaff-ab20a677195d"],
Cell[335014, 6027, 253, 6, 36, "Text",ExpressionUUID->"3a5e7137-7d95-4254-a9b2-512a63a3fab9"],
Cell[335270, 6035, 1828, 48, 147, "Input",ExpressionUUID->"cfe60afd-33ed-4516-8280-66cbf7553a4c"],
Cell[337101, 6085, 147, 3, 36, "Text",ExpressionUUID->"700aab21-2931-45c3-bc2f-993d0cd3e860"],
Cell[337251, 6090, 814, 23, 55, "Input",ExpressionUUID->"91bf1ab1-ba62-446d-92f6-19ac32a24d26"],
Cell[338068, 6115, 814, 23, 55, "Input",ExpressionUUID->"6c9921bc-afc2-4a94-ad00-0b611c39b4b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338919, 6143, 201, 3, 70, "Chapter",ExpressionUUID->"b1b4f595-8b4b-4097-9e81-17f307f49f48"],
Cell[339123, 6148, 990, 15, 108, "Text",ExpressionUUID->"00a382d1-8ade-42df-8c9b-a07fab27916d"],
Cell[340116, 6165, 4993, 119, 538, "Input",ExpressionUUID->"dd296132-67c9-4b36-8f9d-2ffc7467b570"],
Cell[345112, 6286, 1036, 16, 84, "Text",ExpressionUUID->"ce775c12-30e3-462d-aa9a-498114700891"],
Cell[346151, 6304, 4300, 109, 308, "Input",ExpressionUUID->"9b9d81d0-1aa3-4afc-9f98-a84360d63548"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350488, 6418, 158, 3, 70, "Chapter",ExpressionUUID->"99836ca7-e7e1-41e8-b1e4-17e5f0574fe9"],
Cell[350649, 6423, 401, 8, 36, "Text",ExpressionUUID->"2432e7eb-3d45-4a3d-9c70-768f88078897"],
Cell[351053, 6433, 6073, 149, 492, "Input",ExpressionUUID->"9afc1297-1575-4fd9-8a24-2cd0d8575954"],
Cell[357129, 6584, 1411, 38, 55, "Input",ExpressionUUID->"a45edb3f-634d-43e6-80b3-a08bf3361a05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358577, 6627, 161, 3, 70, "Chapter",ExpressionUUID->"f9df6345-66a6-45da-9768-21300324856e"],
Cell[358741, 6632, 352, 7, 36, "Text",ExpressionUUID->"711ed3c4-3edf-47e9-8cc0-ffa16f1a111e"],
Cell[359096, 6641, 198, 3, 36, "Text",ExpressionUUID->"2e37ea61-3904-43b3-b86f-0c551aafac27"],
Cell[359297, 6646, 1397, 37, 101, "Input",ExpressionUUID->"09416ec7-f9e1-431e-98c7-ccb9b78dc2c9"],
Cell[360697, 6685, 431, 10, 31, "Input",ExpressionUUID->"3afb2e57-760f-4f8f-a78d-4a371c43b991"],
Cell[361131, 6697, 247, 6, 36, "Text",ExpressionUUID->"fc3bd5e0-21bb-450f-8aa3-579f1f341e22"],
Cell[361381, 6705, 1953, 55, 124, "Input",ExpressionUUID->"0843c762-61e1-407f-8597-fd682985353b"],
Cell[363337, 6762, 357, 9, 31, "Input",ExpressionUUID->"98468ddd-b857-4710-b1e9-76048ecb55b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363731, 6776, 165, 3, 70, "Chapter",ExpressionUUID->"04b8114e-1256-4312-b550-9ebc3006e13a"],
Cell[363899, 6781, 386, 7, 60, "Text",ExpressionUUID->"f0b3d231-ab4c-4822-988b-331cb45ee8cf"],
Cell[364288, 6790, 3855, 104, 423, "Input",ExpressionUUID->"f98bf0bd-6656-4b0a-aa78-bb57b17b4df2"],
Cell[368146, 6896, 829, 24, 78, "Input",ExpressionUUID->"1de43350-5969-4342-9592-eae82ad999dc"],
Cell[368978, 6922, 171, 3, 36, "Text",ExpressionUUID->"2a545274-a65f-4124-a935-ee3c8d896652"],
Cell[369152, 6927, 1202, 34, 78, "Input",ExpressionUUID->"3cb1850e-9710-43a6-aa4c-c91d5491c005"],
Cell[370357, 6963, 301, 6, 36, "Text",ExpressionUUID->"d0a2ec8d-31b5-4a89-9a58-9499ef7168e9"],
Cell[370661, 6971, 1743, 42, 285, "Input",ExpressionUUID->"798071d7-4907-4e05-bddd-d720ae434b97"],
Cell[372407, 7015, 182, 3, 36, "Text",ExpressionUUID->"1770f692-a090-4523-9a55-5e0a52aa7481"],
Cell[372592, 7020, 5356, 145, 676, "Input",ExpressionUUID->"7951e7a5-c383-4ff0-b4b4-19528087bf4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377985, 7170, 176, 3, 70, "Chapter",ExpressionUUID->"1c430cc1-6c4f-4783-b4f1-0baad7e0626f"],
Cell[378164, 7175, 240, 6, 34, "Input",ExpressionUUID->"22087cf2-9358-4839-985a-41bd4d9f9685"],
Cell[378407, 7183, 193, 4, 31, "Input",ExpressionUUID->"41086213-27ec-40a5-95c1-198673ef93c2"]
}, Open  ]]
}
]
*)

