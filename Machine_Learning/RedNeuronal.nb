(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    615553,      11316]
NotebookOptionsPosition[    611770,      11200]
NotebookOutlinePosition[    612106,      11215]
CellTagsIndexPosition[    612063,      11212]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Red neuronal artificial", "Title",
 CellChangeTimes->{{3.6599193963849*^9, 3.6599194044085608`*^9}}],

Cell[CellGroupData[{

Cell["Introducci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.6599194103045053`*^9, 3.659919413016464*^9}}],

Cell[TextData[{
 "Una red neuronal artificial (RNA) es un modelo de ajuste basado en el \
sistema nervioso donde la entrada es un vector ",
 StyleBox["x",
  FontWeight->"Bold"],
 " \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "N"], TraditionalForm]]],
 ", y se desea mapear a f(",
 StyleBox["x",
  FontWeight->"Bold"],
 ") \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "M"], TraditionalForm]]],
 ", donde N y M son enteros arbitrariamente grandes. ",
 StyleBox["x",
  FontWeight->"Bold"],
 " es el est\[IAcute]mulo de entrada que recibe la red, y f(",
 StyleBox["x",
  FontWeight->"Bold"],
 ") es el est\[IAcute]mulo de salida. Este modelo est\[AAcute] basado en una \
estructura de capas, donde el est\[IAcute]mulo se recibe en la capa de \
entrada, y el resultado se obtiene en la capa de salida. Cada neurona est\
\[AAcute] interconectada con las dem\[AAcute]s de la siguiente capa. \n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvQl8VNeZJS68pJ1Jd+L+z0w63Zmk/e+ennZ3phNP93TiNsaQjhfsuN3E
S4wdE+MNDMQgA2YH2ZgdWQjQLrSABNr3vbSvJZXQviEhJIEAsYhVBGwD0pz7
TtXVU20q7RJ+51cUr0rvvXrv3XvP/e53v3u+///dZS8vuM/JyWnFQ3h7+Z3V
v1y+/J21rzyAD/++duUH796Pjf82zcnpCv6J7T4NGjRo0KBBgwYNGjRo0KBB
gwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBB
gwYNGjRo0KBBgwYNGjRo0KBBg4bRRb2/Uz/86yf6cjRo0DAmmIiWrvzmct2F
cfmxbzYu6JbLcu3tvZDhjE/L0s/dUePu3bu9vb0TfaUaNGgYPiaqpUsy71Vw
1wR+HN3f+mZDedL+9XzIKM2vv/761q1bf1QBH/GlRukTNX7RDBsNo4EJa+mm
CtyLM9++ffsrE7CNb77RlDK6UB60X32vLNwbN25cuXLl8uXLl4CWmMX99LUU
nbh48sYOXqf8N5BnLpi+c7rX+GcCxy+aYaNhFDDeLd1k+izX6cSWM84JAr95
s2K/PM6rAt9ofD5aYJn41d5F+aJrvnr16sWLF8+ePXv69OnOzqxd+JtrHr65
erXUUxRy8ll03OfSlzlJKqvx7Wc1Zdu35s4ds+/vAXfNRI5fNMNGw8gxvi39
nGLt+IkG01vvp5wkufPW9etl7thcGNnQ1XWuIVJ0H/vL0HBYk6cyP0wKsIhR
LDdv3kQ33dXV1dHR0dLS0qzg+PHjHR2VYR/IrnSvoafnRkfiR9j0KEfPjlpR
7oEPHyV29BA3bnQkfST39zx6b7hrJmD8YtWwqfKSx+03oMg0w0aDgxjXlt6Z
vBTf+dTQ/KjyFgfGHr/cleeKrflBpceOHcNP63aILqTk8uXr16+TH1ifpx4/
TBIonOFd9RWe57lz59ra2hobG2sVNDQkblHK6YPD1WfO5IhicPqi4Pz5842R
C5V+HPUBhzRELDB9yvtC2X9hVFN3d5Hogp32FF4QwEHo9EF9qAPsiFFeE33n
Q8C4j1/O65yd6NRRGTaVYny6KKbh3LmuhghRBO7FKDVp2GhNQIM9jGdLPx67
BPSddAodB9pLewI+LQqrPV0WPN/JHPNDq07ijN3d3eQHHEKTT6vMQ0e94BOv
ShiYJ0+eRPlWVlYePXq0pqamKWkz/rIz69SZM2dOn87ZiQ/vhZafONHCItmc
1NTUhB42+XN2ts3NyaJGbE093tra2taWvh0f3j1oOH68RQG+xPlR1mBC8M/U
KqzxHr+cTV3WT/h3jIZNrLtSApX4RTx55WFvzz17FgXHLlKzajTYxTi29KpQ
GhuXFRS4iTMG6o9VRm3E1qu747KysnJycoqLi8vLy9GboEqfOHECV4UuA+0L
rQB8PrXsvUkCmpBuBefxPKur8/a/gU9v+ObVsMjYE1cfJlV9GllRUZax/3Wx
/bpbUkFRUchqsemeWlJSemSd+Hp9BAooy/NNZf/1YWVlegUsNfwEygu2AZhn
KhXWOI9flI5gaeoZZcLoZkeiMGx27ervLUyYh5bFJqBZNRoGxTi29HylG9iZ
c+YMhq7blbrqoSvPzw8WI845nx+Kj09I2C9cMa/uTMzPLy0tRc9SX1+PloVr
mIr23iQBHtoNxXA0Yc0RvR79NQzOnF3yy+1+fvNQ9F8k5GVG75wjTMXNn73E
P33knZKSlpaWmZkZsELuv2LXrldRVNsjM9IVZGdnoyMG+8GmBfOwsCb61h3H
+I5fGjk3BAO/BxW7kIZN4OdsTHiSOp0Otk1BQYHBYMAjxYGaVaNhUIxnS6+q
iv7cuMMWFxfRa7jG5eKv4PCF8tAXNgTHxCQlJaE+5+fnl5WV1dXVgR9g0mA8
e/v2bY3MhwpRxDduoEMEJ4CgSkpK9KYiPn36NL7v7OzEOKiiogIPPDU1NS74
0xeEJbozJCQkNDT0yJEjkZGRsbGxiYmJycnJKJpEBQkJCXFxcfg+JiYmOjo6
Pj4edQDlhV+BCQrOmVJkPs7jl3LFkHcv6u6GJb/DaNhEfIL/X94ekpAQG+u+
WLFwonS6wsJCHKVZNRoGxXi2dJy8uroa1RL1GfUThkdGRgYOwW7h4eE44cGD
Bw8dOnT48GGcE2cAz+fl5WFPXMDZs2dRjafY4H1yAEUMagXBKjRVXaYARYyn
il7y1KlT7e3tDQ0NGArBGkTZRQVsnC3MzK0BCoKDg1E0KCAUU5yCGAUoVhRT
uAn4BtUDXTbMVNiQqFRTi8zHefwCo323cZ8dn30mDRvfJf1WzTp/5Znjqebm
5mpWjYZBMZ4tHeyNTgE1mT8EokblxzlJ5uBwMDn5nCdMSUlB5ceeGMlikIsx
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
JQXnVygcKkEbBRlfDwj3VfbyeOxg+63kXUUTpdglJPPZfrpDH6IdXhegIKxg
vF115mCLOOr42cus3KB8ipB/FyUonbNy8Bat12+SyRHO3fjiKzHPiz0Br1qt
1uzsbAxV+IKgggWbQ+757WKfsQvueWrZxtBMJ43bEgSf70koYgLnnt8t12TV
x/o+//Fe6hWwv8mgSIPhDLEi5zq7z2zCXpVk6/iS/zS8NMAQkl7FqWScx4Ka
Jrltlvc7OM61tbWi2QpDM10j8/PzEfMoDQQFp7g9INxXqa/loYOt/UKfYWrB
IIX7fdBsykp90YubI9PTEeogMscFgjsCEBEoyEjmzhxs6bbwwBt+CwLSSutP
U9qCYSpLUJxaOXR7fhhMTrEO/EuHI94s0JoQ1IoBEYNUvg48ASGk51gembqD
tegTfENOnG4WYryO4wu2OWlFFAfcR2cGVtc37I7KHP74Jz5jFjw7exfOTnl5
OW7zKysrwSpUjQbziBQZJ7K7adgSJaYp5zW6O5c0g+c1qeVWi2mG/Ry7kAPt
8qf3CBASdNg2y9pONlvRI5I2ZAjUccxZlIhfmgrLFQy4PSDcV1tbvWn/FD1D
MxLP6vN0BZv49ys7Mul+Tr9LhD00WKFbVtul4czBFvfCsmrWv/5p/bQNcYn5
tZzE7IqVg+cAFQgmB6szP8YcPpX52SJK3RV8tTo7EOb57oxjDpxu0U5DdESJ
97+2lXOdWw4X4LBgpAO37DyU+t1HFwx7eO7vpm/CicNxw2kCpdfrsjCc6xR1
490XLopROalZ0xJpintf/3NabOO1xhh6E0+LabSL9suTEf0zUV936qI4vH4x
RYbUiuNUssE4jKWeNHNUYbmCI3ozMm/oivuqVw62F1JmOrbzvxGcV1sLFsJ9
q8lkApnn5ORQuI8KIbbL37WDLbg0Mrv2teWRP3xujWD1e3634tVlhyMyqz+7
8UWPxoT49CfmBvPevLGl1SBnynAOx5bNQadOnRIOiay3wfIEs+WB121NrI4h
+vLgbL6EkaL25AUOEwz4MTRs3Bv9t+Pm3v3QzKemrsEBxOnDScRm8RHC0qLb
KdSgEsBifqc5QFYK0ZKv+/I83QmwN4MB8DnbZlm44moqmQqcLGGlg5hscdLf
vp1Cf0Bv5szPdsV91RsHW50EKvwkIn8rrAafi2AVH4EhI0kHnmA3sLxdQYtb
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
PFz3F3Q7qJDjeYe+04Gy1/ZWQUGhN+HGbAJhbYNuAFetA084g9asg1Ik7EWq
qTvy/Lwg8swj03bmWMoYeFPkMN9Ssmp39JPvb/rbsR9olTAPzbj7oRk/etb3
zU/3R6YXCS0X91wq96QjyGQLjFBrXB6YKMaRTWFZ2Cbo68y5S//6p/Vcbnj8
24sbqFSDjbC3iPvgcgc6nAfp4RmQlsvX3XfoC/FDg9iX6tBXUBgM8NA2iA6b
rEymtiQgepEScip+/NJG5jrmbImhVm1VVRXieQTzBQUF2dnZmZmZZh0rd4a9
MGfbD5+cz77OoWPmj3hq6WvLIsIzKj0Rb5QrqA0hOkYQjCMiRK85duqlJYek
bE/7xzjfyKRsZooadNtuCgXclt20CcTe7OcSj5EjNVYXD7aMiQf+bG/A3XV4
3qEvl5GrDn0FhcGDTtgGfaVDdJgu2ZvBmoqfvLwp3VLDknW8hcrteXl5IPDk
5GS646WkpIDVQe/g+aiUvD8vDfnJS+uHjF3EbiDhdnfp6mduWN0QorOU2mmI
LofiPmMXSo9FPuN8X1sUiH2jhShiWgS34MZ2crVlZVoRKSl6xIgOegfYNUBh
ZAbqJlPXTxBG25lbk9x06BtSK5zrVB36CgqDCp22DeLbmy9d++2c/eSZKWti
Ll3RNGlJraAUknlubm5GRgbJnGUwOTk5FosF/MmQGBs3W6ocxRvdu93JipGG
EB2EJofo4vFfr2/53Qc7v/vogqG4HRg732fsgn95bnl0dLTJZMIu4T7i9OnT
2P82N236j5DG8dxzgNUpv4YH6N21AluH8KRD35BaYYe+KiNXUBg86KJtkMly
jDf++Dex8OhtycOONnzCU4keHPhXWKqVl5eDPGtra/kRQryxrOaYU/FGV253
TkN0poaemh04xCFPHhChlccv3rT/1++s/bvHFviMWbB2+56IiAiMMlarFftM
c5Dbn31m8+ympHzn2nLB/+wLe/DBzs2Q7jGV8Qh72KGPM6U69BUUBhu6Yhsk
S/MZ+jrZP85ScObMS3RQaAX0LooYhcOdbNAjWJ3ijRMXh8rijXS7SytuuC25
3clWdILltoSZHZlcSwS9uA43CJGRkQcPHtyzZ897vpvnr9oeEhISFxcHksfg
gvdev3jx1rhx31DxzM+vS0e5oMCWdbn3Xq/aClqv3xSds44d+rL4oaFDH2dK
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
+g69GZk36IXZtbW1CL/z8vJSUlIQJyMsB5OD1ePj48G9JSUlWKdF9uWku5Cv
r4ffCMwMfj6rkzkYG7zNVLlJB58nJSU5IXMK4XpcBqmgoKDQf9CbOXOgqakJ
gwVib73OJCc5ORnUilAZUbrZbEbEDqo/deoUbhPadpGl5h73DWF4wo1Gs54z
z83NFWl52RcVT/ASVmiXZmHC3MXsp4KCgkJ/Rm9Ws1zRnZXOnTsHuj5y5Aji
8/z8fLqXFhQUlJeX05n04sWLGFnadvHmTZvzcplHoi74Ovgi5/RqFovFggg8
XUeWDvEcL2EFrGabAMW9AHMsDubOCgoKCgMCooKalkM3ddzoGXz++ecganbE
NzQ0IA4XLmwnT54EtbIuEbvRbhfp/vngg558HXwXfMpFvc4cA4TVas3XYdUh
nuMlrIDVbKWJ7P0cP75HDrGCgoJCb0F2Heo58C4A/Hn16tULFy6A0s+cOdPc
3Hz+/HlB40a9lG+l4NwD7cTbdvtObPzo0aMYKejFXKNDPMdLWAGrYeU2g1HP
gn8FBQUFBZGlZ1YHrI5YnbakpHHn3Tfs6x8xosM0iBBR4ZRuU1PTKR1NOsRz
vIQVsJo2UlBlt4cMRhUUFBTuRDCrwxCd/tRCj6WDJsrx420zoW5LB7l9luhg
sHCVvaduAFazKSXee6+qSFRQUFDwCoaUjqe98CBbMDm7+93Km4tZXU4BMF0v
zwUINRVb//7w4SrBoqCgoNB7qKvTMi1s8Jdr0R0gBovbLqANB4zJXQiYKygo
KCj0IBBCsyd05MjO9903Ntry5IjJFZMrKCgo9AlaW20iKiwm9CpDgnieVYjM
k6vsioKCgkLfwtfX1uaDx8SJWoDtfgYzKkpTBhBvmTxZzXgqKCgo9AvIYTYf
iNhB8njs2aPRO58/8UQbh3cimFdQUFBQ6AU0NmotoiLx4uoxapRG7HV1fb27
CgoKCgpu0dqqTYmC2EHakydruRc8WbFCW6gUVxQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ6wv8Him7oyA==
     "], {{0, 276}, {495, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{495, 276},
   PlotRange->{{0, 495}, {0, 276}}]], "Input"],
 "\nLa ",
 StyleBox["fuerza",
  FontSlant->"Italic"],
 " de la conexi\[OAcute]n entre neuronas est\[AAcute] dada por el ",
 StyleBox["peso w",
  FontSlant->"Italic"],
 " de la conexi\[OAcute]n y el ",
 StyleBox["bias b.",
  FontSlant->"Italic"],
 " De manera que el resultado de una neurona al procesar la se\[NTilde]al es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sum]", "i"], " ", 
      RowBox[{
       SubscriptBox["w", "ij"], " ", 
       SubscriptBox["x", "i"]}]}], " ", "+", " ", 
     SubscriptBox["b", "i"]}], ")"}], TraditionalForm]]],
 ", donde ",
 StyleBox["f",
  FontSlant->"Italic"],
 " es una funci\[OAcute]n de activaci\[OAcute]n, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "ij"], TraditionalForm]]],
 " es el peso de la conexi\[OAcute]n de la neurona ",
 StyleBox["i",
  FontSlant->"Italic"],
 " con la neurona ",
 StyleBox["j,",
  FontSlant->"Italic"],
 " donde ",
 StyleBox["i",
  FontSlant->"Italic"],
 " y ",
 StyleBox["j",
  FontSlant->"Italic"],
 " est\[AAcute]n en diferentes capas, y ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "i"], TraditionalForm]]],
 " es el ",
 StyleBox["bias",
  FontSlant->"Italic"],
 " de la neurona ",
 StyleBox["i",
  FontSlant->"Italic"],
 ". Una manera de realizar el conteo de todas las capas que existen en la red \
neuronal es agregando un tercer \[IAcute]ndice ",
 StyleBox["k,",
  FontSlant->"Italic"],
 " que indique entre qu\[EAcute] capas est\[AAcute],  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sum]", "i"], " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["w", "ij"], "k"], " ", 
       SuperscriptBox[
        SubscriptBox["x", "i"], "k"]}]}], " ", "+", " ", 
     SuperscriptBox[
      SubscriptBox["b", "i"], "k"]}], ")"}], TraditionalForm]]],
 ".\nUn tipo muy usado de neuronas artficiciales es la neurona sigmoide, \
donde la se\[NTilde]al de salida de una neurona en funci\[OAcute]n de su \
entrada se calcula a trav\[EAcute]s de la funci\[OAcute]n sigmoide.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
AAAAgHHwHy6PWME=
     "], {{0, 138}, {280, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{280, 138},
   PlotRange->{{0, 280}, {0, 138}}]], "Input"],
 "\nLa funci\[OAcute]n sigmoide tiene la particularidad de que devuelve \
siempre un valor entre 0 y 1."
}], "Text",
 CellChangeTimes->{{3.659919421391006*^9, 3.659919685149439*^9}, {
  3.659919743156139*^9, 3.659919892162366*^9}, {3.659919997825447*^9, 
  3.65992013844009*^9}, {3.65992090687052*^9, 3.6599209442703114`*^9}, {
  3.659920978917962*^9, 3.659921197716276*^9}, {3.65992240325947*^9, 
  3.6599224089524803`*^9}, {3.659922489624625*^9, 3.659922585855557*^9}, {
  3.659922646912006*^9, 3.659922650294767*^9}, {3.659922681766717*^9, 
  3.6599227069578533`*^9}, {3.6599228086534224`*^9, 3.659922809613098*^9}, {
  3.660512882885914*^9, 3.660512883716914*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"LogisticSigmoid", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<\[Sigma](x)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659920142227826*^9, 3.659920179611471*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], CapForm[
    "Butt"], LineBox[CompressedData["
1:eJwt1H0w1HkcB/Alj6v2N3dCzW1HqEMxJi1Lms/3SkV5bk+ytdg6RCoVV6qz
Lpq60ZXdEtamWvLM5raczfb7YYpKrbFatnAieVi7vxwRPd3ezP3xnve85v3/
eyX3cPjPhhQKJUif/9oNrCe+fsUI0ZHnIQuJfGAl/nB+fgEjvLbIqVFpfEi/
ylw9/R4jVrs0VBKZfGjTRHHfajBibexQxa18PsTkF7/s6NHv2S7Wskd8yJ1y
elpQhxH0TKanj6MAZsQbqj2iMSKZdiWr6I0AZGaxh+If0IiRG4EuvaeuQsYz
laY5dgmhnZr1QtEFMF663MaLvpiQqMIMdCIRuPztb471U4lv6mbtWpg3ocRS
PKP+zZx40dmXWuBXAq3sJxdxMCNSzrjnpfHLgF5Mt8t/bUK4B/muuCurgh2b
2SeVF4yJi/ke28d8JWD7MY7nHGBEDL1zDWh/XA+utSLeUa0hESVRVByduwuD
x2+6qcoNiBvm3Zb5exvhQFGuuCiRQjAFps+0jnKI/HW3Q7X9F7x3uNZk2QgB
ThpnNuv6R1zxuOHBtYhWSAoOzR4a/oBf4fe7FwY/gqhjIRs9PWdxXRLL4NCl
xyDAx0Lxe9N4JGeexR3tADDsjXAzmMKvRbTdMjvcCYm9LUdKpydxh/OUjJeH
u8C3IHOZ7MQoftzn3kBqazck9E+92m0zhCf7WvTYuPdAyODamnbHl3h8/KJk
yUU1eOLCnoms57h0tiTmk0cfeL/bu29gnxSX+Td66xoHYM1Zkkqk/gmVz0K7
CoWDUNemq8iIVICEd8KZOv0a5AFPmD4tahgfGFnFch0GTeWtA8GRQ5AV1dU8
lfYGRDVuwpm7o3DdvsCwumoEmmLPWbk3TIIRNe5y2f23kL604EXIt1MgXNj1
apFiFDo6u/26Cqfhe67RquimMUh56rX6kvUsrInLyaLwx6FE4WcV1/4Byu67
jSbtn4Cc6oZy08CPUDiqaLWx0oCBoDug1fgLzAgZLVaEBmwqqtpK/CkIdkyK
84ImQVXGczA+b4DCbBO0me2TwK5yOXd0yBAZpu2nF23Ugq/QdMPDVUao4t02
x6UiLQxfapx1zDJGStX7CbM5LUgdMjQr+0zQl626HsZmHQyKf1lntMIMGX1m
nq7n6aDLaQtv+oQ5UqY7266X6cC2cItdu5yKEvJiOOwxHeRV7p73/mSBQtWn
m1MwEpT4JvVfPy1BVjfr97zyICGpmWOxIp+GfL7WFc+EksAtVuc1iWjofT1j
8GAYCVFnWPZ7xDQ0z5pQvNHb33u7t7CWhqxr6+TKcBIc7zDilz+koWBGSG8N
i4S+G4tbrf6hoSBmiefOSBICebJ0WiCGIh9J5/ZFk7CZwzCpDcPQk7PhvC69
fXwluUG7MCQ9FfsAxZDg9KG0PIeLoVyVgE2PJcHoSK6KehJDgWsu2HZySZBH
J6wzvY2hY7Vhc85xJEg3DstvV2FooIOjFehd/R0nYOsdDEnYSuFnvQt7dsZk
N2Ho9u/V9p3xJKSFwB+LlBgyPejan3KAhGRX2XJxL4aYS7KFar33WzBKNw1g
yE0ltfwxkYTwNpemzHEM1azfuQ5LIiGgtHTbShJDlnfo6lS90Vk7JTGDoaUO
x3369PaKFXJiFjB0WXYuYtNBEv7/L5Sek+larve/c+dd5A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma](x)\"", TraditionalForm], None}, {
     FormBox["\"x\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 4}, {0., 0.982013787154201}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.659920132383233*^9, 3.659920179878311*^9}, 
   3.6605106717447567`*^9}]
}, Open  ]],

Cell[TextData[{
 "La activaci\[OAcute]n de la neurona est\[AAcute] dada por\n\[Sigma](z) = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"exp", "(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SubscriptBox["\[Sum]", "j"], 
         RowBox[{
          SubscriptBox["w", "ji"], 
          SubscriptBox["x", "j"]}]}]}], "-", "b"}], ")"}]}]], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". \n\nPor la estructura matem\[AAcute]tica de este modelo conviene \
representar todo en forma matricial, de manera que la notaci\[OAcute]n se \
reduce a\n\[Sigma](z) = \[Sigma](w\[CenterDot]x + b).\n\nLa \
propagaci\[OAcute]n hacia delante (",
 StyleBox["feedforward",
  FontSlant->"Italic"],
 ") consiste entonces en aplicar sucesivamente esta funci\[OAcute]n,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", "1"], "\[CenterDot]", 
       SuperscriptBox["x", "1"]}], "+", 
      SuperscriptBox["b", "1"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", "2"], "\[CenterDot]", 
       SuperscriptBox["x", "2"]}], "+", 
      SuperscriptBox["b", "2"]}], ")"}]}], TraditionalForm]]],
 ",\n\[VerticalEllipsis]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "N"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", 
        RowBox[{"N", "-", "1"}]], "\[CenterDot]", 
       SuperscriptBox["x", 
        RowBox[{"N", "-", "1"}]]}], "+", 
      SuperscriptBox["b", 
       RowBox[{"N", "-", "1"}]]}], ")"}]}], TraditionalForm]]],
 ".\n\nLa red neuronal trabaja propagando hacia delante la se\[NTilde]al \
inicial mediante la funci\[OAcute]n de activaci\[OAcute]n hasta que se llega \
a la capa de salida. Si se inicia con una matriz de pesos y bias aleatorios \
la red neuronal inicialmente no producir\[AAcute] los resultados deseados. La \
manera en la que podemos determinar qu\[EAcute] tan lejos estamos de los \
resultados es mediante una funci\[OAcute]n de costo\nC(w, b) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "n"}]], 
    RowBox[{
     UnderscriptBox["\[Sum]", "x"], 
     SuperscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{
        RowBox[{"y", "(", "x", ")"}], "-", "a"}], "\[RightBracketingBar]"}], 
      "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", \n\ndonde w y b son los pesos y los biases.\nCon esto se puede conocer cu\
\[AAcute]nto se deben cambiar w y b para que el costo sea menor, es decir, \
estar m\[AAcute]s cerca del resultado correcto.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["w", "k"], "\[Rule]", " ", 
      SubscriptBox[
       RowBox[{"w", "'"}], "k"]}], "=", " ", 
     RowBox[{
      SubscriptBox["w", "k"], "-", " ", 
      RowBox[{"\[Eta]", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", "C"}], 
        RowBox[{"\[PartialD]", " ", 
         SubscriptBox["w", "k"]}]]}]}]}], ","}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["b", "l"], "\[Rule]", " ", 
     SubscriptBox[
      RowBox[{"b", "'"}], "l"]}], "=", " ", 
    RowBox[{
     SubscriptBox["b", "l"], "-", " ", 
     RowBox[{"\[Eta]", " ", 
      FractionBox[
       RowBox[{"\[PartialD]", "C"}], 
       RowBox[{"\[PartialD]", " ", 
        SubscriptBox["b", "l"]}]]}]}]}], TraditionalForm]]],
 ".\n\nAl aplicar sucesivamente este procedimiento se espera llegar a un \
resultado cada vez m\[AAcute]s cercano al correcto. El algoritmo para \
calcular las derivadas parciales ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "C"}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["w", "k"]}]], TraditionalForm]]],
 " y  ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "C"}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["b", "l"]}]], TraditionalForm]]],
 " secomoce como el algoritmo de retropropagaci\[OAcute]n. Este consiste en:"
}], "Text",
 CellChangeTimes->{{3.659920463462933*^9, 3.659920513591063*^9}, {
  3.6599212111867456`*^9, 3.659921324689685*^9}, {3.6599213885932703`*^9, 
  3.659921626510948*^9}, {3.659921739014242*^9, 3.6599219418752003`*^9}, {
  3.659922824005316*^9, 3.6599229385405407`*^9}, {3.659923721650215*^9, 
  3.65992382718782*^9}, {3.659923884979227*^9, 3.65992388920325*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Entrada: Establecer la activaci\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " correspondiente para la capa de entrada."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659923874826771*^9}}],

Cell[TextData[{
 "Feedforward: Para cada l = 2,3,\[Ellipsis],L se calcula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["z", "l"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["w", "l"], " ", 
      SuperscriptBox["a", 
       RowBox[{"l", "-", "1"}]]}], "+", 
     SuperscriptBox["b", "l"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["a", "l"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     SuperscriptBox["z", "l"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659923974675457*^9}}],

Cell[TextData[{
 "Error de salida ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Delta]", "L"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ": Se calcula el vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Delta]", "L"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Del]", "a"], "C"}], " ", "\[CircleDot]", " ", 
      RowBox[{"\[Sigma]", "'"}]}], 
     RowBox[{"(", 
      SuperscriptBox["z", "L"], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.659924078130061*^9}}],

Cell[TextData[{
 "Retropropagar el error: Para cada l=L-1, L-2,\[Ellipsis],2 calcular ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Delta]", "l"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["w", 
           RowBox[{"l", "+", "1"}]], ")"}], "T"], 
        SuperscriptBox["\[Delta]", 
         RowBox[{"l", "+", "1"}]]}], ")"}], "\[CircleDot]", 
      RowBox[{"\[Sigma]", "'"}]}], 
     RowBox[{"(", 
      SuperscriptBox["z", "l"], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.659924164761177*^9}}],

Cell[TextData[{
 "Resultado: La derivada parcial de la funci\[OAcute]n de costo es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "C"}], 
     RowBox[{"\[PartialD]", " ", 
      SubscriptBox[
       SuperscriptBox["w", "l"], "jk"]}]], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox["a", "k", 
      RowBox[{"l", "-", "1"}]], 
     SubsuperscriptBox["\[Delta]", "j", "l"]}]}], TraditionalForm]]],
 " y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "C"}], 
     RowBox[{"\[PartialD]", " ", 
      SubsuperscriptBox["b", "j", "l"]}]], " ", "=", " ", 
    SubsuperscriptBox["\[Delta]", "j", "l"]}], TraditionalForm]]],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.6599242796130037`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementaci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.659919417216414*^9, 3.65991941912045*^9}}],

Cell["\<\
Esta implementaci\[OAcute]n se basa en la que se ofrece en el libro: \
http://neuralnetworksanddeeplearning.com.\
\>", "Text",
 CellChangeTimes->{{3.659925355568756*^9, 3.659925396488452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Se", " ", "inician", " ", "las", " ", "matrices", " ", "con", " ", 
    "valores", " ", 
    RowBox[{"aleatorios", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Initialize", "[", "asizes_", "]"}], " ", ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"layers", " ", "=", " ", 
        RowBox[{"Length", "[", "asizes", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sizes", " ", "=", " ", "asizes"}], ";", "\[IndentingNewLine]", 
       RowBox[{"bshape", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", "sizes", "]"}], "-", "1"}], "}"}]}], 
            "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wshape", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"biases", " ", "=", "  ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "bshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"weights", " ", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "wshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"emptyNablaB", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.0", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "bshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"emptyNablaW", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.0", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "wshape"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Definici\[OAcute]n", " ", "de", " ", "funciones", " ", "a", " ", 
     RowBox[{"usar", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cost", "[", 
      RowBox[{"y_", ",", "a_"}], "]"}], ":=", " ", 
     RowBox[{"0.5", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "a"}], ")"}], "2"]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CostPrime", "[", 
      RowBox[{"y_", ",", "a_"}], "]"}], "=", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Cost", "[", 
          RowBox[{"yt", ",", "at"}], "]"}], ",", "at"}], "]"}], " ", "/.", 
       " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"yt", "\[Rule]", "y"}], ",", 
         RowBox[{"at", "\[Rule]", "a"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sigmoid", "[", "x_", "]"}], ":=", 
     RowBox[{"LogisticSigmoid", "[", "x", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SigmoidPrime", "[", "x_", "]"}], " ", "=", " ", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"LogisticSigmoid", "[", "xt", "]"}], ",", "xt"}], "]"}], " ",
        "/.", " ", 
       RowBox[{"xt", " ", "\[Rule]", " ", "x"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "El", " ", "vector", " ", "de", " ", "entrada", " ", "debe", " ", "ser", 
     " ", 
     RowBox[{"\"\<vertical\>\"", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormatA", "[", "array_", "]"}], " ", ":=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "array", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"x_", ",", "i_"}], "]"}], " ", ":=", " ", 
     RowBox[{"LogisticSigmoid", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"weights", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", "x"}], " ", "+", " ", 
       RowBox[{"biases", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FeedForward", "[", "a_", "]"}], " ", ":=", " ", 
     RowBox[{"Fold", "[", 
      RowBox[{"\[Sigma]", ",", " ", "a", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"layers", "-", "1"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Backprop", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nablaB", ",", " ", "nablaW", ",", " ", "activation", ",", 
         "activations", ",", "z", ",", "zs", ",", "delta"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nablaB", "=", " ", "emptyNablaB"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nablaW", "=", " ", "emptyNablaW"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"activation", " ", "=", "x"}], ";", "\[IndentingNewLine]", 
        RowBox[{"activations", " ", "=", " ", 
         RowBox[{"{", "x", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"zs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Calcula", " ", "todos", " ", "los", " ", 
          RowBox[{"feedforwards", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"z", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"weights", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ".", "activation"}], " ", "+", 
             " ", 
             RowBox[{"biases", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"activation", " ", "=", 
            RowBox[{"LogisticSigmoid", "[", "z", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"zs", ",", "z"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"activations", ",", " ", "activation"}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"layers", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Calcula", " ", "los", " ", "errores", " ", "de", " ", "salida", " ",
           "y", " ", 
          RowBox[{"retropropaga", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"delta", " ", "=", " ", 
         RowBox[{
          RowBox[{"CostPrime", "[", 
           RowBox[{"y", ",", 
            RowBox[{"activations", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], " ", "*", " ", 
          RowBox[{"SigmoidPrime", "[", 
           RowBox[{"zs", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nablaB", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", "delta"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nablaW", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", 
         RowBox[{"delta", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"activations", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"delta", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"weights", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "l"}], "+", "1"}], "]"}], "]"}], "]"}], ".", 
              "delta"}], " ", "*", " ", 
             RowBox[{"SigmoidPrime", "[", 
              RowBox[{"zs", "[", 
               RowBox[{"[", 
                RowBox[{"-", "l"}], "]"}], "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"nablaB", "[", 
             RowBox[{"[", 
              RowBox[{"-", "l"}], "]"}], "]"}], " ", "=", " ", "delta"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"nablaW", "[", 
             RowBox[{"[", 
              RowBox[{"-", "l"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{"delta", ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"activations", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "l"}], "-", "1"}], "]"}], "]"}], "]"}]}]}], 
           ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "2", ",", 
            RowBox[{"layers", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"nablaB", ",", "nablaW"}], "}"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Realiza", " ", "el", " ", "entrenamiento", " ", "de", " ", "la", " ", 
     "red", " ", 
     RowBox[{"neuronal", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrainNetwork", "[", 
      RowBox[{
      "trainingdata_", ",", " ", "epochs_", ",", "minibatchsize_", ",", 
       "eta_"}], "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", " ", "minibatches", ",", "dbiases", ",", "dweights"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"costs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"ClearSystemCache", "[", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"costs", ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"EvalCost", "[", "ex", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"ex", ",", "trainingdata"}], "}"}]}], "]"}], 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"minibatches", " ", "=", " ", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"RandomSample", "[", "trainingdata", "]"}], ",", 
                "minibatchsize"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"Update", " ", "mini", " ", 
                RowBox[{"batch", ":", " ", 
                 RowBox[{
                 "Calcula", " ", "los", " ", "valores", " ", "de", " ", "las",
                   " ", "derivadas", " ", "parciales", " ", "del", " ", 
                  "costo", " ", "y", " ", "con", " ", "esto", " ", 
                  "actualiza", " ", "los", " ", "pesos", " ", "y", " ", 
                  RowBox[{"biases", "."}]}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"biases", ",", " ", "weights"}], "}"}], " ", "-=", 
                 "   ", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   FractionBox["eta", 
                    RowBox[{"Length", "[", "mb", "]"}]], "]"}], "*", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Backprop", "[", 
                    RowBox[{
                    RowBox[{"FormatA", "[", 
                    RowBox[{"i", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "mb"}], "}"}]}], "]"}], "]"}]}]}], 
                ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"mb", ",", "minibatches"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "1", ",", "epochs"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ProgressIndicator", "[", 
               RowBox[{"j", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "epochs"}], "}"}]}], "]"}], ",", "j", ",", 
              " ", "\"\< \>\""}], "}"}], ",", "\"\< \>\""}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Igual", " ", "que", " ", "TrainNetwork", " ", "pero", " ", "guarda", " ",
      "los", " ", "valores", " ", "de", " ", "los", " ", "cambios", " ", "en",
      " ", "biases", " ", "y", " ", "weights", " ", "cada", " ", 
     "\"\<every\>\"", " ", 
     RowBox[{"iteraciones", ".", " ", "Tiene"}], " ", "un", " ", "mayor", " ",
      "consumo", " ", "de", " ", 
     RowBox[{"memoria", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrainNetworkAndMonitor", "[", 
      RowBox[{
      "trainingdata_", ",", " ", "epochs_", ",", "minibatchsize_", ",", 
       "eta_", ",", " ", 
       RowBox[{"every_:", "1"}]}], "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", " ", "minibatches", ",", "dbiases", ",", "dweights", ",", 
         "ev"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"costs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"deltaws", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"deltabs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ev", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"ClearSystemCache", "[", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"costs", ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"EvalCost", "[", "ex", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"ex", ",", "trainingdata"}], "}"}]}], "]"}], 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"minibatches", " ", "=", " ", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"RandomSample", "[", "trainingdata", "]"}], ",", 
                "minibatchsize"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"Update", " ", "mini", " ", 
                RowBox[{"batch", ":", " ", 
                 RowBox[{
                 "Calcula", " ", "los", " ", "valores", " ", "de", " ", "las",
                   " ", "derivadas", " ", "parciales", " ", "del", " ", 
                  "costo", " ", "y", " ", "con", " ", "esto", " ", 
                  "actualiza", " ", "los", " ", "pesos", " ", "y", " ", 
                  RowBox[{"biases", "."}]}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"dbiases", ",", "dweights"}], "}"}], " ", "=", "  ", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   FractionBox["eta", 
                    RowBox[{"Length", "[", "mb", "]"}]], "]"}], "*", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Backprop", "[", 
                    RowBox[{
                    RowBox[{"FormatA", "[", 
                    RowBox[{"i", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "mb"}], "}"}]}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"biases", ",", " ", "weights"}], "}"}], " ", "-=", 
                 "  ", 
                 RowBox[{"{", 
                  RowBox[{"dbiases", ",", "dweights"}], "}"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{"ev", ",", "every"}], "]"}], " ", "\[Equal]", " ",
                    "0"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"deltaws", ",", "dweights"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"deltabs", ",", "dbiases"}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"ev", "++"}], ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"mb", ",", "minibatches"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "1", ",", "epochs"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ProgressIndicator", "[", 
               RowBox[{"j", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "epochs"}], "}"}]}], "]"}], ",", "j", ",", 
              " ", "\"\< \>\""}], "}"}], ",", "\"\< \>\""}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Utilidades", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ViewTensor", "[", "t_", "]"}], ":=", " ", 
     RowBox[{"Print", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MatrixForm", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "t"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EvalCost", "[", "ex_", "]"}], ":=", 
     RowBox[{"Norm", "[", 
      RowBox[{"Cost", "[", 
       RowBox[{
        RowBox[{"FeedForward", "[", 
         RowBox[{"ex", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
        RowBox[{"ex", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ShowCostFunc", "[", "]"}], " ", ":=", " ", 
     RowBox[{"Print", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"costs", ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Iteraci\[OAcute]n\>\"", ",", "\"\<Costo\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", " ", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Valores de la funci\[OAcute]n de costo\>\""}]}], "]"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ShowInfo", "[", "]"}], " ", ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<Informaci\[OAcute]n del resultado:\>\"", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Gr\[AAcute]fica", " ", "del", " ", 
         RowBox[{"costo", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ShowCostFunc", "[", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Mapa", " ", "del", " ", "cambio", " ", "del", " ", "peso", " ", 
         "entre", " ", "las", " ", 
         RowBox[{"neuronas", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"deltaws", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "deltaws", "]"}]}], "}"}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", 
            RowBox[{"deltaws", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "\[IndentingNewLine]", 
        RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"cmax", " ", "=", " ", 
            RowBox[{"max", "[", 
             RowBox[{"[", "c", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ArrayPlot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"deltaws", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "c", "]"}], "]"}], ",", " ", 
             RowBox[{"PlotRange", "\[Rule]", "p"}], ",", " ", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Neurona i\>\"", ",", " ", "\"\<Neurona j\>\""}], 
               "}"}]}], ",", " ", 
             RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
             RowBox[{
             "PlotLabel", "\[Rule]", 
              "\"\<Cambio de los pesos entre neuronas\>\""}]}], "]"}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "\"\<Capa\>\""}], "}"}], ",", " ", 
            "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"deltaws", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "\"\<Iteracion\>\""}], "}"}], ",", 
            "1", ",", 
            RowBox[{"Length", "[", "deltaws", "]"}], ",", "1"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "p", ",", "Automatic", ",", " ", "\"\<Rango del color\>\""}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Automatic", "\[Rule]", "\"\<Autom\[AAcute]tico\>\""}], 
              ",", " ", 
              RowBox[{
              "cmax", "\[Rule]", "\"\<Escalado al m\[AAcute]ximo\>\""}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{"c", ",", "i", ",", "p"}], "}"}]}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Mapa", " ", "del", " ", "cambio", " ", "total"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"totalchangemap", " ", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"deltaws", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "c", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "deltaws", "]"}]}], "}"}]}], "]"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"deltaws", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "\[IndentingNewLine]", 
        RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{"totalchangemap", "[", 
             RowBox[{"[", "c", "]"}], "]"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Neurona i\>\"", ",", " ", "\"\<Neurona j\>\""}], 
              "}"}]}], ",", " ", 
            RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", " ", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<Cambio total\>\""}]}], "]"}],
           "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "\"\<Capa\>\""}], "}"}], ",", " ", 
            "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"deltaws", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
           RowBox[{"{", "c", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ";"}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ShowResults", "[", "feed_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "i", "]"}], " ", "<>", " ", 
            "\"\< \[Rule] \>\"", " ", "<>", " ", 
            RowBox[{"ToString", "[", 
             RowBox[{"FeedForward", "[", "i", "]"}], "]"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "feed"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659896383927318*^9, 3.6598964350328608`*^9}, {
   3.659896653045203*^9, 3.659896658836915*^9}, 3.659896786427917*^9, {
   3.659897001808999*^9, 3.659897002907425*^9}, {3.6598971970661163`*^9, 
   3.659897221896283*^9}, {3.659897308467721*^9, 3.659897309842939*^9}, {
   3.659897340626255*^9, 3.659897454831624*^9}, {3.659897503919601*^9, 
   3.659897507299178*^9}, {3.6598978486615973`*^9, 3.6598978487581367`*^9}, {
   3.659897900010503*^9, 3.6598980112333603`*^9}, {3.6598982094841213`*^9, 
   3.659898216486753*^9}, {3.659898278913622*^9, 3.659898298710095*^9}, {
   3.6598985013931723`*^9, 3.659898545359284*^9}, {3.659898583277692*^9, 
   3.659898935398712*^9}, {3.659899609459655*^9, 3.659899695686791*^9}, {
   3.659899794978739*^9, 3.659899983395425*^9}, {3.659900169813932*^9, 
   3.6599002988903513`*^9}, {3.659901429526387*^9, 3.659901476906479*^9}, {
   3.659901545093731*^9, 3.6599015756441317`*^9}, {3.659901646627964*^9, 
   3.659901650307665*^9}, {3.659901685549156*^9, 3.6599016890398293`*^9}, {
   3.659901720456584*^9, 3.659902008478837*^9}, {3.6599020480517197`*^9, 
   3.659902104653366*^9}, {3.6599021464018993`*^9, 3.659902225750671*^9}, {
   3.659902269756583*^9, 3.659902270383298*^9}, {3.659902350444652*^9, 
   3.6599023653334713`*^9}, {3.659902430493525*^9, 3.659902480914654*^9}, {
   3.659902554762782*^9, 3.659902656074977*^9}, {3.659902726462132*^9, 
   3.659902861889139*^9}, {3.6599032148691673`*^9, 3.6599033472344513`*^9}, {
   3.6599033943287477`*^9, 3.659903439688114*^9}, {3.659903476900391*^9, 
   3.659903525542548*^9}, {3.659903568841693*^9, 3.659903577427335*^9}, {
   3.6599040603422422`*^9, 3.659904060905425*^9}, {3.659904111088489*^9, 
   3.6599043351764803`*^9}, {3.65990437742314*^9, 3.659904408068619*^9}, {
   3.659904443856544*^9, 3.6599044822504387`*^9}, {3.6599045163256407`*^9, 
   3.659904689585359*^9}, {3.659904766503957*^9, 3.6599048731255903`*^9}, {
   3.659904906227068*^9, 3.659904906468987*^9}, {3.6599050003970823`*^9, 
   3.659905000762969*^9}, {3.659905074168062*^9, 3.659905131737034*^9}, {
   3.659905309729014*^9, 3.659905339073715*^9}, {3.659905383706476*^9, 
   3.659905449012731*^9}, {3.659905486207942*^9, 3.659905489242876*^9}, {
   3.659905551597575*^9, 3.659905554783411*^9}, {3.659905976981668*^9, 
   3.659906061306367*^9}, {3.6599061693358307`*^9, 3.659906198538073*^9}, {
   3.65990623616013*^9, 3.659906236343533*^9}, {3.659906390915649*^9, 
   3.659906392706629*^9}, {3.6599064314377537`*^9, 3.659906432387175*^9}, {
   3.6599064675452757`*^9, 3.6599064714685287`*^9}, {3.659906565298855*^9, 
   3.6599066492552958`*^9}, {3.659906724465962*^9, 3.6599067954374037`*^9}, {
   3.659906920417573*^9, 3.659907025893556*^9}, {3.659907065582921*^9, 
   3.659907183319625*^9}, {3.659907222172114*^9, 3.659907236944751*^9}, {
   3.659907306103894*^9, 3.65990730625091*^9}, {3.659907355171426*^9, 
   3.659907383625987*^9}, {3.6599074254920473`*^9, 3.659907621882299*^9}, {
   3.6599076725526333`*^9, 3.6599076926082687`*^9}, {3.659907725400155*^9, 
   3.659907878724433*^9}, {3.6599079842758827`*^9, 3.6599079844739313`*^9}, {
   3.659908089852613*^9, 3.659908128732725*^9}, {3.659908162891986*^9, 
   3.6599082078697863`*^9}, {3.659908242632257*^9, 3.659908244222211*^9}, {
   3.659908274392631*^9, 3.65990836416031*^9}, {3.65990859003843*^9, 
   3.6599085906408*^9}, {3.659909193575098*^9, 3.65990920462528*^9}, {
   3.659909257659595*^9, 3.6599092984763727`*^9}, {3.659909641606558*^9, 
   3.659909714694977*^9}, {3.659909783295433*^9, 3.659909802664422*^9}, {
   3.6599098534047813`*^9, 3.659909860837956*^9}, {3.659910070424122*^9, 
   3.659910146436648*^9}, {3.659910256486308*^9, 3.659910306685073*^9}, {
   3.6599104082628736`*^9, 3.659910504454897*^9}, {3.659910681230981*^9, 
   3.659910686688281*^9}, {3.659910788704866*^9, 3.6599108012551517`*^9}, {
   3.659911832391803*^9, 3.6599118324868727`*^9}, {3.659911891051299*^9, 
   3.659911891298026*^9}, {3.659917587890646*^9, 3.659917593461431*^9}, {
   3.659917735271576*^9, 3.6599177804535646`*^9}, {3.659917820933105*^9, 
   3.6599178561825247`*^9}, {3.659917887584189*^9, 3.659918098912581*^9}, {
   3.659919131790474*^9, 3.659919141022876*^9}, {3.659922026656192*^9, 
   3.659922110885497*^9}, {3.659925170054744*^9, 3.659925313744814*^9}, {
   3.659926189600053*^9, 3.659926216272781*^9}, {3.659935227264112*^9, 
   3.659935227728035*^9}, {3.659971885771905*^9, 3.659971887589274*^9}, {
   3.6599719238523273`*^9, 3.6599719396294622`*^9}, {3.659972034579959*^9, 
   3.659972045371421*^9}, {3.659972102663835*^9, 3.6599721294305353`*^9}, {
   3.6599722248100853`*^9, 3.659972239431614*^9}, {3.659974708977312*^9, 
   3.659974810604075*^9}, {3.659974857537159*^9, 3.659974890303049*^9}, {
   3.659975014823937*^9, 3.6599750209965982`*^9}, {3.65997553392881*^9, 
   3.6599756332656603`*^9}, {3.659975732349619*^9, 3.659975746743086*^9}, {
   3.659975795642088*^9, 3.6599758163683567`*^9}, {3.659975868636641*^9, 
   3.6599758875675697`*^9}, {3.659975988825191*^9, 3.659976001390581*^9}, {
   3.659976234642321*^9, 3.659976283951591*^9}, {3.659976396077344*^9, 
   3.659976396330781*^9}, {3.659976476433549*^9, 3.659976509340055*^9}, {
   3.659976716718122*^9, 3.659976716966551*^9}, 3.659978326350424*^9, {
   3.659978424578006*^9, 3.6599784307591887`*^9}, {3.659978499592201*^9, 
   3.6599785010605783`*^9}, {3.6599785702018414`*^9, 3.659978601957066*^9}, {
   3.659978939666572*^9, 3.659978943147403*^9}, {3.6599798320638323`*^9, 
   3.6599799106403913`*^9}, {3.659980024750173*^9, 3.6599800983862123`*^9}, {
   3.65998017368925*^9, 3.6599802218169813`*^9}, {3.659980264657894*^9, 
   3.6599803362253017`*^9}, {3.659982197519611*^9, 3.659982236452159*^9}, {
   3.659982314432465*^9, 3.6599823905231047`*^9}, {3.659982420731741*^9, 
   3.659982427668209*^9}, {3.659982467290538*^9, 3.6599824872621326`*^9}, {
   3.659982649522026*^9, 3.6599827095526342`*^9}, {3.659982752152443*^9, 
   3.659982775872121*^9}, {3.6599829071994867`*^9, 3.6599829323374863`*^9}, {
   3.659982966613595*^9, 3.659982995599945*^9}, {3.659983359714781*^9, 
   3.659983374945204*^9}, {3.659983421627684*^9, 3.659983422264957*^9}, {
   3.659983461966023*^9, 3.65998352063102*^9}, {3.659983893058775*^9, 
   3.65998389402601*^9}, 3.659983945810254*^9, {3.659984033617601*^9, 
   3.659984071096624*^9}, 3.659984128744166*^9, 3.659984163250794*^9, {
   3.659984244772032*^9, 3.659984255457909*^9}, {3.659984410237392*^9, 
   3.65998445173864*^9}, {3.659984710782633*^9, 3.659984753507153*^9}, {
   3.6599880351649237`*^9, 3.6599881311065025`*^9}, {3.659988202401369*^9, 
   3.6599882060142803`*^9}, {3.6599882478292236`*^9, 3.65998826152497*^9}, {
   3.6601797210359745`*^9, 3.6601797986269283`*^9}, 3.660179833226342*^9, {
   3.660179926923935*^9, 3.660179952729472*^9}, {3.66018005325109*^9, 
   3.6601800566058598`*^9}, {3.6601805666567698`*^9, 3.660180606162969*^9}, {
   3.6601807195185394`*^9, 3.660180747489558*^9}, {3.6601808531393414`*^9, 
   3.660180905605404*^9}, {3.660181035901365*^9, 3.660181049041565*^9}, {
   3.660181252149957*^9, 3.660181304289377*^9}, {3.660181338749565*^9, 
   3.6601815039772367`*^9}, {3.6601815704416685`*^9, 3.660181715874879*^9}, {
   3.6601817900920734`*^9, 3.6601818722387123`*^9}, {3.6601836308420286`*^9, 
   3.6601836312013535`*^9}, {3.66018367854744*^9, 3.660183764922635*^9}, {
   3.660183908453231*^9, 3.660183949338317*^9}, {3.6601840937676153`*^9, 
   3.6601840977257986`*^9}, {3.660184527927209*^9, 3.6601845308878684`*^9}, {
   3.6601846350233*^9, 3.6601846477692747`*^9}, {3.660184689476719*^9, 
   3.660184808378254*^9}, {3.6601848536014977`*^9, 3.6601849013453965`*^9}, {
   3.660185114757807*^9, 3.6601851203106694`*^9}, {3.6601853705569367`*^9, 
   3.6601854056602583`*^9}, {3.6601854500693493`*^9, 
   3.6601854661325483`*^9}, {3.6601856028600645`*^9, 3.660185605717554*^9}, {
   3.6601859287383537`*^9, 3.660185929206683*^9}, {3.6601860543612666`*^9, 
   3.6601860858936634`*^9}, {3.6601861336838074`*^9, 3.660186138123023*^9}, {
   3.6604311824339943`*^9, 3.6604312015989137`*^9}, {3.6604428091784587`*^9, 
   3.660442812772153*^9}, {3.660443112231186*^9, 3.660443132521222*^9}, {
   3.6605050327716637`*^9, 3.6605050542741632`*^9}, {3.66050652415971*^9, 
   3.660506529910754*^9}, {3.6605066931857967`*^9, 3.660506702628146*^9}, {
   3.660506735282918*^9, 3.660506749513668*^9}, {3.660507249778352*^9, 
   3.660507289218205*^9}, {3.660507620202424*^9, 3.660507621676732*^9}, {
   3.660507711862286*^9, 3.6605077376514482`*^9}, {3.6605077830897713`*^9, 
   3.660507847016452*^9}, {3.660508321880416*^9, 3.660508329207806*^9}, {
   3.6605083907075577`*^9, 3.660508419339376*^9}, {3.660508472306511*^9, 
   3.6605084800631943`*^9}, {3.660508715770041*^9, 3.660508718465939*^9}, {
   3.6605090690792103`*^9, 3.660509227377494*^9}, 3.660509784864213*^9, {
   3.6605101934328537`*^9, 3.660510196761115*^9}, {3.660510317215261*^9, 
   3.660510379007485*^9}, {3.660510425282999*^9, 3.660510442188335*^9}, 
   3.660510574022665*^9, {3.660510609893425*^9, 3.6605106188796787`*^9}}],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Compuertas l\[OAcute]gicas", "Subchapter",
 CellChangeTimes->{{3.6599255653106203`*^9, 3.659925573814535*^9}}],

Cell["\<\
La aplicaci\[OAcute]n m\[AAcute]s trivial de una red neuronal artificial es \
que aprenda a calcular las salidas de una compuerta l\[OAcute]gica. Primero \
se calcular\[AAcute] la compuerta AND.\
\>", "Text",
 CellChangeTimes->{{3.65992557757438*^9, 3.659925634581852*^9}, {
  3.659925987481975*^9, 3.6599259931860027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"td", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Datos", " ", "de", " ", 
    RowBox[{"entrenamiento", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Datos de entrenamiento.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"td", ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"feed", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "td"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Se", " ", "inicia", " ", "una", " ", "red", " ", "neuronal", " ", "de", 
    " ", "2", " ", "neuronas", " ", "en", " ", "la", " ", "capa", " ", "de", 
    " ", "entrada", " ", "y", " ", "1", " ", "en", " ", "la", " ", "de", " ", 
    RowBox[{"salida", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red sin entrenar son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrainNetwork", "[", 
    RowBox[{"td", ",", "2000", ",", "4", ",", "3"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "entrena", " ", "la", " ", "red", " ", "con", " ", "2000", " ",
      "iteraciones"}], ",", " ", 
    RowBox[{
     RowBox[{
     "sets", " ", "de", " ", "4", " ", "elementos", " ", "y", " ", "\[Eta]"}],
      " ", "=", " ", "3."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red entrenada son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowCostFunc", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.659908408434352*^9, 3.659908683248211*^9}, {
   3.6599087876316853`*^9, 3.659908857974122*^9}, 3.6599090510580463`*^9, {
   3.659909138929482*^9, 3.659909150116515*^9}, {3.65990986787351*^9, 
   3.6599098821626587`*^9}, {3.6599101346673317`*^9, 3.659910176662353*^9}, {
   3.659910373839717*^9, 3.6599103874460173`*^9}, {3.6599118508919086`*^9, 
   3.659911851017771*^9}, {3.659917607222137*^9, 3.6599176148370247`*^9}, {
   3.659917797277699*^9, 3.659917804499463*^9}, {3.6599181067940483`*^9, 
   3.659918208054164*^9}, {3.6599256424173813`*^9, 3.659925692705991*^9}, {
   3.65992593698785*^9, 3.6599259495604362`*^9}, {3.659926009221183*^9, 
   3.659926177405992*^9}, {3.659926505514627*^9, 3.6599265060724688`*^9}, {
   3.6601849110318165`*^9, 3.660184912455841*^9}, 3.660185147113661*^9}],

Cell[BoxData["\<\"Datos de entrenamiento.\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], 
     RowBox[{"{", "1", "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.659918194218508*^9, 3.6599182093146963`*^9}, 
   3.6599191447572308`*^9, 3.659925317748679*^9, {3.6599256585634336`*^9, 
   3.6599256935722446`*^9}, {3.659925937483941*^9, 3.659925949689774*^9}, 
   3.659926026443894*^9, 3.659926180015134*^9, 3.659926219371542*^9, 
   3.6599357061420383`*^9, 3.6599719445432997`*^9, 3.659972244677093*^9, {
   3.65997481770614*^9, 3.65997486177684*^9}, 3.6599756378226767`*^9, 
   3.659975751693491*^9, 3.6599758920508432`*^9, 3.6599765145689087`*^9, 
   3.65997897463553*^9, {3.6599800141711493`*^9, 3.659980104233591*^9}, {
   3.659980189488554*^9, 3.659980204787058*^9}, 3.659980272091556*^9, {
   3.659980322147729*^9, 3.6599803382063227`*^9}, 3.659982491934841*^9, 
   3.659982718403852*^9, 3.659983307121162*^9, 3.659983401054542*^9, 
   3.6599834836909103`*^9, 3.659983525042129*^9, 3.659983897625351*^9, 
   3.659984077475988*^9, 3.659984134171091*^9, 3.659984167133101*^9, 
   3.659984260119898*^9, 3.659984418386919*^9, 3.6599844558887997`*^9, 
   3.6599847569222813`*^9, {3.6599881660824966`*^9, 3.6599882103069534`*^9}, 
   3.659988269009443*^9, {3.66018054258575*^9, 3.6601805736547995`*^9}, {
   3.6601811502337356`*^9, 3.660181155619047*^9}, {3.660181283495015*^9, 
   3.66018131006164*^9}, 3.660181887899519*^9, 3.660183736788028*^9, 
   3.660183769085243*^9, 3.660183894374544*^9, 3.6601841022596235`*^9, {
   3.6601847309036055`*^9, 3.660184750780896*^9}, 3.660184792975331*^9, 
   3.660184912829417*^9, 3.6601851482260103`*^9, 3.6601862688966646`*^9, 
   3.660431206913813*^9, 3.660438315759759*^9, 3.6605050803613987`*^9, 
   3.66050785376898*^9, {3.660509254514434*^9, 3.660509260436522*^9}, 
   3.660510671987609*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Los resultados de la red sin entrenar son:\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671988611*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.493282}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671989238*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.456909}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.6605106719901323`*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.675264}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671990844*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.642487}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.6605106719916353`*^9}],

Cell[BoxData["\<\"Los resultados de la red entrenada son:\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510673004159*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.000121704}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.6605106730051527`*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.0445673}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510673006116*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.0445673}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510673011565*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.947023}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510673012624*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.0055000000000000005`], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJw013lYjP33B/CR0JMQQvYQkhBCorztRUhCWUdCEqa0aZ32aZ+amZrJlj2E
EEKUPSRJCCGEZMueLb/5Xd/3PP881+s597nP53zOfa6n6eW63nGFlkAgKGsh
EPz/v//3T/24z06215rIisbxPyDrVNLvg38LaB0cO/5LYOV6mtbHe2Phu2/Z
+bQBQrVazHNcfZI2RO/yca9fep6guyEmNrTyXcZx2gitzt/d/vZRHt0b/V6d
/9JlqMbGqO7S0sNMdozuh7qXlnl7/h2lTVB1edah/3w1NkVJuNDC5fMR2gx1
t3oUP/HTeDDEMz20/tPS2BxLt7Tou1CWSw9FbkPa4BWmGg9DeSs3H3HSYXo4
lvRaUda57BBtgfQ2w2e97KrxCOTt6rvHRnSQHomOp7yvJpXk0KPwJPDT5Cnm
GluidcW3A68yD9CjsWeD29UfLTW2QsmBO/UtI/fTY9CuynvOuX/76LEw69LX
6mi4xta4XnDTLU1HYxs8mb5plb48mx6HmT8sO9T00Rj4ozvk6/WTe/9nMVCx
2KEwdhYtGI/mz0rrn9XtYXw8/HLd5++OowUTsKRC5/j2gZr4BOwYM2jl/rLd
jE/E7O6ubdMDaPFEXPrVb4lNH018EkSvlUfDynYxPgmOfab+sBTTgslwkWwX
Th+miU/Gud5B1pmvdjI+BaVd+l3X3UKLp2CJLL9F1FxNfCpKuxlkfGijiU9F
WaFjhkXJDsZtkbV4cuz4eFpsi+BhJwdoTdPE7dDswFBPt5aauB38grUc5pdu
Z3waytra372eRounYW79+9eHnTXx6ZhQ0GlmQ09NfDpq9Jco02uzGLdHkq9Z
+9CjtNgexSs3nNoRoonPQO4pH5Ofdpr4DPzNkMn9OmniM1H2u2dor5JtjM9E
RhvzB0FraMEsHGs+6tQbPU18FuynZUW45G5l3AHaf3JEp+fScEDHI89j//zZ
wucd0KlTdJz+HrrIAdKuTWtfO9CC2UhfO6HA5+9m5s/GDosTZ/YdoMWzId87
ZEjgQrpoNmJuOdc90KMFjug2+sbEs4WbmO+I+OzjrTr70GJHWBk0S3k+gC5y
xKKxzUPaPMtk/hwUD/T7plDRmIP00oYAzzm0eA52pL1/GdeaLpoD07OZG15e
VzHfCR0vZR/0k9BwQnny6/UjptJiJ1zScX7euQVd5ITaNz6+3YqVzJ+LQy1O
PBkRT2MutF/ZdVg6gxbPxdjMJrNS29JFc/HfijV/L9/LYP48aOcZ3vi+mcY8
2ITpqbq70eJ5ODRyVrCFGV00DxMO7D4z4ls68+fjusz9ZtdCGvMxIyRw7rM4
Wjwf9r0W9AmfSxfNx65Js8y/99LkO6P1itwtYz4qmO8M2y3jjtmfpcXOqJ28
5bFxIl3kDI+vpTmFC2mBC2bKH5QbmmnyXVDouba32V85812w+/eOpG+ldJEL
euy4auy1nRYswEvz0R02+dBYgHE+s7LX22ryF0D3g+OEt900+QvQ6XfYMt3P
MuYvhMWhDluuXaWxEI4n1+/qu5UWL4RzvqlNV1+6aCEm+DhO3WuvyV+EHTNU
R68Ya/IX4ZFMGev3N435i6Ds2/n5sXt00SJM+7H8U1AuLViMoPaZP27E01iM
Zkfa221foclfDG2tK9N/QpO/GC7LD/vd7qbJXwLXTLvZ/X+mMn8JFt1psqHh
Li1eAnQ6ETHhGF20BHlfR41smkoLluJ7l4rZlus1+Usxbf+TvU9naPKX4te/
iYY/zDT5S/HiandpsJ4mXwhvI/v/1r2T/s9GQiRltYu/VkJDiLttTxknHaSF
QrTJG/LjRDItFuJR9QnTySI6SwjdN3FfRjjSRUK0aJEkjbWgq4XYMbFxmmUn
WrAMuc6O7xK/prD+Mnzwt3oiPENjGexzb1q+iaCFy9AkRfGo93RarH6+pU6+
rgGdtQwtClrc3vI4mfXV71/kbvVgL129DJsT/A1Pe9MCV8hD47ZZ29BGrqhO
jWu/TJeGK27GJF/tdT+J9V3hPN27e8guWuyKQyZro0XedJYrFo/IC/kJusgV
em+7pHXQp6td8avo5MILTxNZfzkmHUwQ/z1MGy3HE5HZsUtiGsuxQuZ1tIMj
LVyOc1/72H3oQ4uXq/8eODzD/nsC6y+H3PPB9kHX6KLlSFy9YZh0M129HDXD
DX94iWiBGxrf1Xwqm0QbueH6/pFDDnSm4YaZ+1dfbvwQz/pucF6XWXHtEi12
Q9Ap9xjdTXSWG3o4FrQq9KKL3PBTnLDnpS1d7YZ8q52KYCNasEL9957IJKIh
jvVXwCH3Zt7XMhor8GbZDWX5PlqojmdHWHWJpMUr8ODy8xbXF9FZK3B+S4Rf
9Ui6aAXOtdnQdFFbunoFpMp2w8e8k7D+SuSbPZcGX6WNVqLdxIWHe+yksRKK
Zlf7G4XRwpU4vbVjZthCWrwSzpkFOWMs6ayV8JkdqzenA120Em2cgz0vfY5l
/ZWwf5kXnVxGC1ZBa/CYTrmHaKNVKNlX+7J/Eo1VeD1mcsHXNbRwFWwtV3l0
mE6LVyHRpuKyxJTOWoW2Na77ZujSRavwoV/3b651May/Cud29km+ep0WuMNe
krok8ABt5I5i62VzAxNpuCPs0uyVV9bSQnd4FZTELZ5Fi90xsMPNApuhdJY7
lgivCFa3p4vcYXghceGjb9Gs7465gdb35ZW0YDXGNzWJkJ+hjVbDoujkugdb
aaxGuuWSY64RtHA10h6FeAxZSYtX4/vUuUdtptFZq/HK4G1OymC6aDUknX6F
9Wqvqb8a4t5PnL78iGJ9D0wYE+6s/Zg28kD2BLszcy7Q8EC9XvMj1XtpoQc8
Xz0V7U+ixR74HD5lRO4GOssDbWZWj/nkQhd5oHpQ4GVP0NUe2CT70aF3f039
NZj+c4KPfmtN/TX4fNzGdNS3SNZfA12zE1GKKlq4BjNnzbpjeokWr4F3WLD7
9wN01hrMO75O9UNGF62BVhOdc4OC6eo1EM8tNVe60QJPeGx/MnPkDNrIE2lD
q/1bjNTU90T3RQ2tWvbU1PeEwPucL3Q09T2x9NuQjns/RbC+J1Lb7Xa2eUQX
eWLHgsvZzS7T1Z4wPBvs8+cQLViL6sL6gb1VtNFaRH/xHe8XSWMtWu6IHtCw
lhauRcDJYwv2OtPitej2fNeMyIma+mth/0Y7JGGwpv5arB4dsqKws6b+Wlzf
eSC6RzNN/XVoO7vzkuz6cNZfh6c1Q70WVdFYh9LbVhOtimnhOphUTVswPo8W
r8O66+NtvLLorHW4PKEo4FoiXbQOhXd6Kuw20tXrcLf/GqNPK2jBesxxnbev
0FFTfz1qdo0qyhunqb8eOwv+fb9lpqm/Hk++DXum30VTfz0WdHje3r+Fpv56
nPTb2Vfrm5j110M+M/HQked09XrcbWNqG11GC0SY9iUoKfgcrS/Csax3XTJy
aCMRlA3TkysyaXMRmjQWx1jE0RBB+PTtrhP+tIMI3XtI4xespIUinLrz5GHP
ubRIBGsDO6vmk2ixCNprI2a2Gk5LRbALCzpn0ZvOEuH38UXDgtvSuSK06Rg+
54VA058I2bOfK+9Uh/3PZSJ8bzyT2qOIrhZh7TbLt3u20fUinHMY18QzjBZ4
4VbQ26Frl9L6XhBsjny8bxxt5AXVcNHKXka0uRd+vRs29I6AhhdyXy3ede5Z
KPv3wgTTBJMXF2ihF+bZO5lgFy3ywtER0/TvRtNiL7i0fz9z+ypa6oXx63Y5
7bKjs7zg4X5S9nggneuF6J6Txfat6SIv5A+3ltbXh7B/L0zzdh5z7Q5d7YXK
HW1/3z1B13uh2m/rtI6ZtMAbwZm1e+JCaH1v1L+MSR6yjDbyxoDDJ8JbTKbN
vbHAaq5W2wE0vLHP7oFseivawRuO1+3PnPgUzP69cWLblH+z79Eib+TH17zu
doYWe0M56HJjxyxa6g3jgVq3xkXTWd4Yucz0ZboHneuNRdZjb3V1oIvU+QOz
upWOoMvU8R59lhzsSld7I3vIp76nmtD16vctkLb49DqI/W9A1rRHGU6ltP4G
1E/94/kijzbagObD3Xts2USbb4B084NJ4RE0NuBr/fTAlNW0wwYIT313uepA
Czfg8mdbsYklLdqAJwE18Ud70uIN2BytMlzRgpZuwMVJrtfGfQxk/xugClxi
M+E+nbsBWja3OnsW0kUbYHO53b+CvXTZBtyblJVmIaWrN6CoumlgeQBdvwEj
Dz9cmL6MFvhAUlL6NGware+DcWLZoeThtJEPdns/87rQjTb3wenP3hVdmtPw
wXh7QUTGx43s3wc2g8b2t3xAC32g3bXM688FWuSDVd+d9WtyaLEPopKXH/2Q
Tkt9IJywWqdbOJ3lg9Dckotr1tC5PsjxuZf+eC5d5APzL0csvECX+aBuqMfs
fgPpah90Ofdq+58OdL0P9m+rffRFQAt8sd+5xYmW7wLYvy/knw6+nnifNvLF
h7aGAzZfoM19Mdd41nCDQzR8YRLbv+iAinbwhUGxdbxrNC30hcPbL/aWXrTI
F7rn1l0yW0yLfRE9XHZwnB0t9YXlzaZXRCPoLF84tepRUtiLzvXFoS8/Qs1a
00W+qItavPXEL3/27wv/haV1i1/T1b6YNyGob+8Kut4X1Q8m6jc9Twv8EDw5
b63gEK3vh7rnWk26bKKN/HBUt3XyLAlt7ocpD1weZPnS8INDk9bZrZbTDn7o
tedLocKBFvphxLgNry1taJEfoiLTXn4fSIv94Lr4c/itzrTUT/17oCTqQgs6
yw8lq7+cuPXNj/37Qepd8uz7C7rIDxcezb41qpwu84PoXetpaUV0tR8mbezR
vflhut4Pya0GGMi20AJ/bO+6/LdlIq3vj8/DE7b9CKSN/GE6sfZm6Wra3B+C
+1OdzjnT8Efu6j+CK1NpB388OvZox8uRtNAfb7Wt/+vejxb548L2H009O9Bi
f8QPWLa8XJuW+iNdYN8w66sv+/fHjPPN5DUv6Fx/aB+bqyO9Qxf5Y86UoP6O
F+kyf0RlmF0yPUZX+8Piu/xI5510vT/Oe8+52ENGCwLwUrTx5uhIWj8AZ8bF
7fLYQBsFoO6ET/cjy2nzALR7sKlVKycaAegedGNa6CTaIQDb68cc0B5BCwPQ
8mxKs6y+tCgAF+3KzR060uIAVGf5aXdoQUsD4Gs2z/nDDx/2H4DNgYe1q2rp
3ADoNu/7/PEDuigAe7QKrn25TpcF4NXgR/LuBXR1ADz22XVfeJCuD4DP9UHW
OVtpwUa8b6J3S19K62+E8anLByXhtNFGfLRU5rXfQJtvxAJZ18IjbjTUTh2/
z3Ue7bARsbucZvWzpYUbMbPqe9Kf0bRoI548MZrwciAt3gjdV0Z21d1p6UYY
FqrE79to+t+I36XhV/S0NP2r4517/7T+uoH9b0TXaR1+iF/RZRtRd3nKtruV
dPVGVOV/Khtzg67fiCVmWWuOnaUFgQjqYTprbC6tH4iyzXkL7+2gjQJx/nmu
V7iCNg+EaeAjL2sJjUAkLR1jrRtEOwRi4IBex1+vpYWBeGje78xdIS0KxJmi
gUMr5tDiQHyesODn8ym0NBB6Pkbfm1jRWYHQVQ7THTqIzg3E9KNxhiIjTf+B
eF3oql3YXtN/IFp/sz7SvYWm/0A4/nmslfjLm/0HwnL01Mf/faAFQdihV2ic
8YzWD4JDtxtnh9+ljYJgsNk86WkxbR6E3plf/DMLaASh34x5y91yaYcgdFlR
aWG9ixYGodOSkeXGSloUBPe77r26JtLiIFg+26ljJKalQXiwet664T50VhAi
oweMnutO5wZh7r1/s6IX0UVBMKz7qrroQJep37d5UWObyXR1EO5uvODmMVrT
fxAS+7/JKx+k6T8Yedeu3bPtrek/GL/Xyo6WdNT0Hwx3//3mS1pq+g/GuZbZ
o//+82L/wbCJdDmx7yvtEIyvDwpTlr+hhcG42LvNYdMntCgY8/4c/NtYTouD
8ajFiBXVV2lpMCYuW3ertIDOCoZX57n9rh+hc9XvP2LgVL6HLgrG4kydia83
0WXBmH34zGOdVLo6GH3OvG49KoauD4Zug895ryBaEILHso3V+SJaPwSzRoye
r7eSNgrB+wjjtp4LafMQ9DtQ+fO+g6b/ENh86PF31hRN/yFwH/CuecUYTf8h
WL5c2NRtqKb/EOQvuPLkXz9N/yGoMpBF7+2m6T8E49avqFnQTtN/CCYeaVbb
WUfTfwhu9FwRUvNXxP5D0DltS+rpL3RZCE62+NR28xu6OgT14669lTyl60Pg
43hSL/wuLQhFR7sNrlE3aP1QaJ159DDtPG0Uiparvy3POUmbh6LmYd3bsoM0
QmHW2HKZYBftEIrayzePWGXSwlDsuHGtJExKi0Ih/nQ261YMLQ6Fc7PEbqYh
tDQU7VaMHpKygc4KRePOD1cbV9O5oZg49MfdAKGm/1AI/xXZ/p2n6T8UGWZV
bRJnaPoPxbGcX136TtL0H4oZXz66FFtp+g+DfFtuge9QTf9hKDRxHD7IRNN/
GBITdA996KHpPwyHGoZ0P91B038YZkZZeqXoafoPg+O9U5nrmmr6D4PxydsG
h7+uZ/9h6FI/zFX+nBaHwdwn+F9iGS0Ng163slLlOTorDOteJRw9mUPnqust
t0t6k0kXheGv0ePxg+PosjBs6jLvWLQ/XR2GapO/lz6uoOvDcG2D0wJPJ1og
xoJXHef/nkDriBG+c9S2zUNpfTGCQ551dDCiDcVYu9ZvR4c2tJEY+1ul9Hv/
d93/bCJGmcGv2HvvaHMxnpafOXD7EW0pRr/DrfyfXKchRkz24lt/TtG2Yvy6
OyPTbB/tIEb2m2Nn1yppZzEq85Q9i2JpoRjND47a08efdhejzrtxlHIlLRJj
0oLEM93n0QFi+H050ilvMi0Wo2+6aPjCEbREjKbvf35r15eWqvuLPDzlkQGt
FMPQqXerPG06S4yj89sN3fJ17f+cLUbPTusy02voXPX9WjsOzaqg88WYa/rf
k1OX6CIxFkl0417k0cVi6D/71aX7brpMjFqLA8ErFXSl+n7TDDMKo+lqMTyO
rJlj4kfXipEc15CZtZKuF8Pxk/V8k/l0gxi5li+9CqfSgnD8uXK+YoUlrROO
1afKVncdQOuHoyjCsmt1Z9owHK8SbO8c06WNwrH1bkBw+m9Pzj8cfTatbiJ5
R5uH48K35/aSx7RlOPaGV9hllNIIx/imc1/kFdK24Wjeeof2s1zaIRwnD/RU
dd1BO4dDr5lzopuMFoajUvf3tTNRtHs4oo2eWPfyo0XhMLj6+458FR2gPp/d
hoCOLrRY3f8qSac902hJONb8t3PLxLG0NBwjX8388WEQrQzHidFj2mb3pLPC
0dPbqnJdWzo7HCXPxo+e2JTODYeV1+pefb+t4fzDETX7bYjBa7ooHM65fca2
fUAXh6Obp9Su6w26LBxjr5XJhp2lK8NR1X+3zvzDdLW6/9MfFJLtdG04ymwO
D7gqo+vDkXNU52i7GLohHMP0rbuvCaAFEfjX7JBLmQetEwHlkaq5ExbT+hGI
X7BacH4WbRgBy8Htbe0n0EYRmPbnZNcaC9okAqVf5nhI+tPmEXgibNJndBfa
MgLL1jRYfNejEYHPd5NTCv95cP4RkJ4d1VvxmXaIwIYFkVV+L2nnCOQV9Tjk
VkkLIzBsx52YJTdo9whc0pfMcztHi9TnHW/Tyu8IHRCBdzMNNsl20eIIVP+b
WF+QQUsiMDWu999P8bQ0AoPnGh0dFkorI/DravG/UC86KwKhLS7cu+dGZ0dg
8vmS/lbOdG4EFJ8vvsieTudH4Eru5t+9x9FFEYj4tEKYPYwujsAUJ9umo/vR
ZREwexd9t6IzXRkBc93A4qBWdHUEnrdQ3RzUhK6NgHF70b26r6s5/wgk/NxV
cbSWbohAw9dvp6KraEEkjgaMDlheRutEYnXj4ib2l2j9SPSoWD11XD5tGIn9
dYFjrXNoo0h47bpSPjmLNolEwS7VH2c5bR4Jp23zc/wktGUkGk2CKrYG04jE
11jFqtsi2jYSHaNnOrdeQTtEIsbaTTXXhXZWv//r/u57Z9DCSFx8pVepNYF2
j0Rk1/gz7iNpUST2jbY8U2lKB0Sq//6acN2xJy2OhN7T2kf32tOSSMydEP7C
TYeWRqKh3rfizx93zj8SbbtP2bH1E50ViZnyaEx7RWdHYnl61Y5/D+ncSHgc
aHH23C06PxIvAu9HxF6iiyIh2Gle63KKLo5EnrTlsxGH6LJIOM73WdZ1J10Z
iai4+MW6Sro6Ejfbhl/TSqJrI6Gvt1WlHUHXR6Jkq9WFNv50g/p9dy+MMvak
BVH4s/H4h/HLaJ0oZNfvfOQ+j9aPgl67YV+U02nDKJxo3tG0HLRRFE71NvQ1
GEmbROHn+XbXlg6kzaPQ1/hzlzwj2jIKyXZ5S9t2pBEFnTL3RP+WtG0UFpSZ
p78S0A5R2HPGxnvJ91WcfxS2jr7X4elbWhiFGc3t/dyf0e5RML/dLO7XPVoU
hZyugRMVJXRAFCwMzTdZXqDFUWgZXxhdc5KWRCFxV1mD8iAtjYLybde6uTtp
ZRRy23vM6qqis9Tx57Ieb5Lp7CiM0o+YURhF50bhcf9B5VsC6fwo+KzesiNK
RBdFQX6gLm/DSro4CtrWY/95LKLL1M9fLfb3cKQr1f0MvWfgbUtXR8E94lRJ
uA1dGwXJxXsKlQVdr+73ZdbKU6Z0QxQmb1eNeGZEC6Kxbunsn/qdaJ1o/DBc
lW3bitaPxjhryWhJU9owGi3TRTtv/VzJ+Udjm1ldVY962iQaKwffrPJ9RZtH
I7T8n6qiiraMxgcbv5Zj7tCIxoN1w0z2XaNto3Gl06TXPYpoh2gskBaP23yC
do5G8ok6k14HaWE0Bt97rjq4k3aPxteU73HjM2lRNDyKAuqrpHRANMavunYp
LJYWR6MkeW7jgFBaEo19wzPkj3xoaTQumXUIk6+hler7ar/8uJMrnRWNAwN7
DenmQmdHY4f9nxd1s+hc9f1cO3ijaAqdH43CBb8fb7Gmi6LRp/nJdhEWdHE0
Zv1XuGztQLosGrkX/l5Y2puuVJ9/0+rBLp3p6mhI6rU3u+jTtdEIa3zcdFkL
uj4aI6+3XrK+cQXnH43ylmd3RH2jBTFI7NzletY7WicGq8tdSy6+oPVj0Dru
6fb3D2nDGMz7+GJCj3LaKAY2TW7tnXuNNomBsl73mqyINo/BQ/1W2ypP0pYx
uHNhbm/jwzRicEkomu63h7aNwVbTL+1ubaEdYjB2WJjXYAXtHIPBtkVL5Ym0
MAb9az3vCaJo9xh07jeldEMQLYrBh8xOeO9NB8Tg+eyTxms9aHEMtE808/2y
jJbEYETY+wFiF1oaA2HW8rHtZ9PKGJRbrNqdY0tnxcBxXZMl9qCzY2AfOXnp
51F0bgwaNzvs2DqEzo/Bjct2RrP700UxqLi/rPy/nnRxDCLW3DlS3JEui0HB
lecnk1rTlTEYd+PxY+fmdHUMTF917W7a6Mb5x2Dov7/rmnyn62OwedWHkifv
6Qb1fV4Xml94SQti8bJLedqBx7ROLHRjit9n3qX1Y/FQeMdKepM2jEWPzgkb
Ei7TRrEI75uamniWNolFxbeUZNlx2jwWXi+s3LIO0pax2NNrpt6x3TRisetQ
svjGFtpW/f5J10+/UdAOsTC0vZ/XKpl2joXNObn7qBhaGIsTlnW3VobS7rGI
una1ZpMfLYrFzy99t99bRwfEYsLWZv86rqLFsbilJWpYtJSWxAI7/GKz59PS
WJiNGL7n5yxaGYvGLVdnOtjSWbGwe7Q4KAd0diw2/+zfr/VoOjcWfZsL7XyH
0vmxqBTYPn02gC6KheDWgOdzetPFsWgYNN/+Rhe6LBaZuwcY2ranK2MREKSF
6y3parV3Tzs3W1sz/1i8KPBOevJnOecfi3OfPu8VfaMbYrH/7zQdnQ+0QIKk
Tlr7dr2idSS4/2pP1JSntL4E//xuKd7fpw0lsB7Y+b6qjDaSwPSoycTp12gT
CQ793FfR5AJtLsHR3g4xZ0/TlhK4+951DD1GQwL9ub8tJuXQthJEWcT3b7Ob
dpDAIn5236dbaGcJdl3qPyAvnRZK1L936gYlp9DuEjyxCBm8VkKL1P3l3+g7
O5wOkEB7z9XWVoG0WILTytU1/TfQEgmMqnO3d/GkpRJc99k5vt0KWilB8PsZ
ha2X0Fnq8/lc7KA/n86WQHSmOzo60LkSbP4SPLqXHZ0vwdiiFn/NJ9BFEmwc
9DZ68hi6WIKa3QtuLbGgyyQ4/jqlIngQXSnBvV/Xpdv60dUSxPZz/HelJ10r
Qb/XXl2/GGrmL4GwJri6TzvN/CW4/eqGnUtLzfzjEFd61lGmrZl/HGokJ7/f
/uvK+cehaQvjoR1+0IZxKBnu83dRPW0UB2Vdj/n73tAmcch8nzX613PaPA79
qoKzZlXRlnHIHzAmdt9dGnEwMvB40+IWbRuHnMwtFzyKaYc4nPdZ37r8PO0c
h/06YcXWZ2hhHLJdvd4dzKPd49DC7JNv70O0KA6ftx8SbtpLB8RhX+LSbMPt
tDgObUcV2mZm0pI4zFmRbG0kp6VxKLWXRexPopXq+0hQtR8dS2fFwb+797sb
Yjo7Dvecv+gsD6Rz41BR3eDWuIHOj8Oubcv/bFlLF8Wh4GznG+NX0cVxOKBq
fvONkC6Lw6nCLo2KBXRlHNo9n75gihNdHYfgMvnjXzPo2jj4iL5FHptK18dh
0nFvO9F4uiEOfzI6mg4dQwviUd6mvtd3C1onHhN12w8qHKyZfzxmLldOTTTR
zD8erx5vWbu4t2b+8VjebcqmYd00849HnjK/pGVHzfzjMW9Lr8baNpr5x2OG
9dGB1//TzD8e82dkzT7cVDP/eIxd1M9T+XcZ5x+PkAOR/tE/aOd4rDX5s97v
Ey2Mxzm3ytlr3tLu8QhIWdHZ7SUtisedtd8uCJ/SAerzOD2ZtuwBLY7HhZ5B
B1fcoSXx6Dp44Ou1N2lpPLScHb9uvEor46F843w77jydFY+6TQcCt5yhs+Nh
mHzmXd5xOjceZ20a+5QdpvPjYRX9vtvHfXRRPIYktKhou4sujsf3y6WTLbfS
ZfF4//HaOlclXRmPBVpR06VpdHU8zg9OrDyfSNfGQ17p2+5HDF0fD0FK5bch
4XRDPGTNHcI8g2hBAmraBR/I8aV1ErA5S+Bfv57WT8Cgw9FPRnnQhgm4Me3k
kwg32igBNjGTfW4voU0S0Na3ZlMfF9o8AWv62jtunENbJsAs01JePoNGAkwu
r14yxJa2TcDA8J0HUyZo5p+AwYkHQ7+M1cw/AdvD55QuGKWZfwKSKtxUl4dq
5p8A0+t5VcPNNPNPwMcNXRS7+2nmn4Ae+0WFXXpp5p+AVs3TnWVdNfNPwJ0q
z8VtOmrmn4Cjox9dT9bXzD8BwZXXt7RtqZl/AuyNBtzJaKaZv7qfHq9X9RJo
5p+AnWE/nQ/9EnL+CVif5LzT5htdlADrfoJJ5R/p4gR4nfo4anUdXZaAl+NN
g5u+pCsTcAknWm1/SlcnwDN/y5vxD+naBCzs/0HvVQVdn4Dmkfk+SbfohgR8
GNa2h+V1WpCI9S31m7+6ROskwsCubEBGIa2fCK8EUcz007RhIiaVtevc9Dht
lIh966qenD1MmyRiervvFUH7afNE+J1IaBi7m7ZMxJrtJVOaZNFIxLalbwuK
M2nbRDQr7O4sU9AOiVhwfXOHZVLaWf38pV2fhybQwkQsNvZ91yyGdk9EjxQH
wWMxLUrE9YrggSeD6IBELHk7YY3cjxYnwrDuQ4GPFy1JxLxmZd2dPWlpIurj
LBNsVtHKRNysDNEycaWzElHt2iA2WExnJ8J0V1NtbWc6NxF9jRol3x0180/E
80V2rd7N0Mw/Eb2e2iXX2Grmn4i6vqv+q56omb/6/va0DH5io5l/It5e3fXi
6WjN/NX3/XSHdY2FZv6JmDJwY+zbIZr5J8K4bMu5b6aa+Sei4E5ctVY/zfyT
sK7zqbp2vTTzT8Lnxfsf9u2mmX8STg5/enBMJ838kxDS+GiZUzvN/JNQ8LH/
1/WtNPNPwn6tGa7JOpr5J2Fgw/19h5tq5p8Elz250r1/l3L+SVi7r8jv2xfa
Ngkt6v9rYldHOyTh4+MzpjuqaeckmI9t+VFwnxYmoduwYXYrbtLuSVhiLbK4
dZEWJaHPQN0cm9N0QBL66k87cCyXFieh3YSwQYP30pIkFM5qHHRoCy1Ngvsv
o+zhclqZBMPBUzLOxdNZSaj+dfv7zHA6OwlXkgZdqPGnc5Owb8DVr2Hr6Pwk
eBi1izdaQRclQXYjJuTKQro4Cf1idlz3cqTLkuC8+7Vnbzu6MgllXo+XVo6j
q5Og1Ut/m2wkXZuE2aX6/ZwG0fVJOO7jW9/ZmG5Q57+u/FnThRYkw+/mQ+vj
bWmdZGhl9MyP16H1k2EZ5OC24t8Szj8ZHuu72kz+ThslY0qv4eNN39MmyXCs
n7naoIY2T8bR16ZHmz6iLZPx/WRsp4bbNJLhmmuq+FRM2yYj5dTjfvWFtEMy
7GeuL/5ygnZWn8/vqO+fg7QwGdfPhZrq7qbdk3FvZO7zbptpUTLSV/bPtJDR
AcnoOv2a/ex4WpyM7Flh373DaUkyDGxHyVQBtDQZ5zxe9Li8nlYmo2JaoOLb
SjorGZLy759Nl9DZ6nxr5+Er5tK5yYhru8Nxlz2dr453q7KvnUgXJePs6nY9
ho6hi5OhHD/3QugwuiwZ23qeGnF7AF2ZDPfD83xMetHVydC5Mi0wypCuTUbr
xScmvmxD1yfjZeK5kmkt6IZkrIxNbHu8cTHnn4L4tBmtjb/TOin4pjW8MOM9
rZ+C5JHeRvovacMUeKdMGpxURRulIHTd65rWFbRJCuwGb4biBm2egrzu2dZG
F2nLFNQFOlUePk0jBSbrPuhNOkrbpqBc++r9qn20Qwp0zIaPCNxOO6vjBxJ6
dVPRwhQs6T1IdUFKu6vP2+ivXCuhRSmwCSrr2l1MB6TANXNrz9v+tDgFrYxm
ZsWtpyUp2JM0M3PKKlqaAq3u7XV1ltJKdfxMu3c359FZ6n6aFY9VzqSz1fcz
4UjDyil0bgomLXboZmVD56fg5XPTXW1H0kUpWPDnWuL7QXRxCs6tPl1+sy9d
lgKH0ETvo93pyhRYdq1w39SBrk5B0QGTo5JWdG0KDIz6Tg9sRtenwPbNKnPR
30WcfwoSv6Yt8fhGC6So3jO93P09rS1FdqWVZM1LWkcK+9t6Id6PaT0pTkzw
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
ddIR63L87855tJ463uPOLKUjrZ+OrutbDE2eSRuko13c+qzoabRhOmrnDtgS
OoXulo5Lq+b02ziBNkqHy0+9Mb42tHE6At/7PvS2ok3SMbf0UFPvkbSZOr+k
8rj3MNo8HcWFHep9BtMW6ehpLDkSYEpbpsO565yfIf3oselYsybzSlRvGuno
EhphmNSDnqR+Xmj+Ib0LbZuO/eevTdnRkbZPx4EvPr0Ot6Md0mH3xjnkbGva
KR2SkVtcburSzulwa+Nx/ElzelE6qqbWpnzSooXpuOU4vrbZvznc/3RcHr/t
bNfftHs6Ai6ZtRn+g/ZMx5H+Haqmf6FF6vPOjeqz8iPtkw75nT014W/pgHS4
X9rXY9trOlh9XzWny86+oMXpiEzU+fX4KR2VDr+D51X/HtGSdLwr73C4dyWd
mA7PXiNGT62gpenYM9dh1NoyWv7/9ZTZ8hJamY6HLkg8W0xvTscH5cZnry/R
Wem4n+m/t/15elc68lqve4yzdHY6jlmmRqw/Reeo3/epQ/q243RuOmbvHdrp
9hE6Lx2NLl2aaR+i89Xf95bmSy330wXpmKkaZLxuD12UDjS7Omf3DvpSOr4O
bPn+8Va6OB1Xa4d97LSJLknHjr3+LnMy6LJ0pLm1HyiV0RXp6HgAy0tT6Mp0
3FNYNWmdSFelQ7d0rPYsCV2tPl985JrUKLomHW+l00feFdO16ZgwrHx5lxD6
XTr0Zsz9ItxI16dDy759TbYv/TUdT4ynj/jsRTekQ+Ay9tXYdfSfdPz60u+7
xIMWZOBSwnS3eytp7QxcGPd2SN/ltE4G7uRPdfZdSutloIvJzqorC2n9DEyZ
ioLOzrRBBvLmu35f60QbZuBJrxnxFx3obhkY/22Sf5cZtFEGPPcmF3jb0cYZ
6C9f71IymTbJgNXmQTP6T6DNMrC3b5uMSBvaXP3+LgtHPrOiLTJgU+dsilG0
ZQZKoh28s4bTYzOQ6BrfSsucRgYWB8z67WZGT8rAyPFvrK6Z0LYZyM3ffmNw
X9o+A60XXcxR9KIdMvDfANXjv91ppwy02rpu8aoutHMGXE+lDCzvSC/KQGOD
7VSb9rQwA7dcXh8+0Eaz/xkImp/v1kVPs/8ZaHj734p4Hc3+Z+B2smnub23N
/mdg+IjVk9c10ex/BvrM7mD8/K8j9z8Dg2+HTp//iw7OwOue30/f/E6LM5DZ
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
d4Y0tp/7XHAN9hDXW77gyJNK2IuhrX8eUNCrgH0Y6tQzWu91CfZjSKfi3LHM
MtifofAfr15qOgcHMbS9t71C/SwcwtD8K3k5rsVwKEPLHU8FHSmEwxnK+XG3
5p18OIqhOf2lvEYeHMNQlW/X2DW5cCxDd+cXeWYJcDxDXj9kxv3NwonietnW
6QbH4RSGnqbOiwnIgtMZ2nR5gmPxUThTPN/byNdv0+FshsrXDkTaHIE5hiJJ
u/1gMpzD0LUVhwwaE+E8hmZ4NNtOSYALGJLu/s16SxxczFCgXqBmWSxcwtCk
B+01o/fBZQw1Zfzm4b4HLmeoYrPxVUkUXMnQxuKZCq8jYClDxipWU+3D4GqG
kja8mnQ0FJYx5Ct92vNsG1wvvq+08xlWW+FGhgr8h7WOBMEtDJ3UdtnxNABu
ZYipcc612gy3MbT4akZRuh/cwZDusYqkng1wJ0M10/zs7dfDPeL9bjO4zXjB
fQx538w0G/oRfi2e96JPkPsaeFC8LyWtiGJ3eJihmxfXeo51lffPUPO4GpUt
K+X9s/R+30hmjZO8f5ae1mcMGC2T98+S+4s50w4ukffP0gflEMMukvfPUk5W
z3tHW3n/LMXaLBGKFsn7Z8n3kc5ENSt5/yx5S9R8/20p75+lont/RN2bJ++f
pWR92U+L58r7Z+mFQ4Nu3hx5/yz5eW7LVzGV98/S2ONOX8JmyvtnaULqF+N2
Y3n/LL3rM9dzNJL3z9LL4rjH56bJ+2dpyoeMMD0Def8szbZTaD6sK++fpYk6
YV/eacv7Z8k28NCw/yR5/yx9tHz8R7OWvH+Wslqnuy3RlPfPkm7jq9Pn1eX9
i37Q3Wz0tbx/lvL7S25mjZP3L+530cu4scry/sXzGpPKXiV5/yx95+LiM6Ag
758lx4TyXYGj5P2zdP3qyrLyD27onyWZdZhq/js4hqUfos2GMgfgWJaed9Rv
O9gHx7PktSwjIrIbTmRJ2lursvUJnMLSidjr3/u1w+nietOud3i2wpksVXhO
0HdrhrNZMp84rtvpNsyx1C7ttXb4E85hqcDwK237ajiPpbO7CmPtrsEFLP17
w9SddhVwMUuvnl1+ThfgEpaWJVY/X1ICl4n3821aqNNpuJwlbfXgva75cCVL
p4Zy1T1zYSlLb0YOG/tycLW4/smd14OPwTKWOp4WPorIgOvF82nGx8alwo0s
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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 2000.}, {0, 0.1294862969231541}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510673102359*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Al grafica la salida de la red neuronal respecto a los valores de entrada \
llamando al primer valor de entrada ",
 StyleBox["x",
  FontSlant->"Italic"],
 " y al segundo ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", se obtiene la gr\[AAcute]fica siguiente."
}], "Text",
 CellChangeTimes->{{3.660510987587076*^9, 3.6605110318025312`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExpectedAND", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "<", "0.5"}], ")"}], " ", "||", " ", 
         RowBox[{"(", 
          RowBox[{"y", "<", "0.5"}], ")"}]}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", ">", "0.5"}], ")"}], " ", "&&", " ", 
         RowBox[{"(", 
          RowBox[{"y", ">", "0.5"}], ")"}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FeedForward", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"ExpectedAND", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Opacity", "[", "0.8", "]"}], "]"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Red neuronal\>\"", ",", "\"\<Objetivo\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJy1nQu4HUWZrhcCOtwGB/BwHbkkEFTCRSAIIutEBjWAMaOIIAgoqNEhgHLk
7hwYCQcQPJDgRLnoEQFPJBgVDAYJl6UIEoTJRi4JCSTs3LOzExDlog8ZdvV+
u9PfXx+94pmzHx8X/eZf/6r+6q/q6uqqv3f+3Okf//xbWq3WbzdptdZ/4/MH
x9x656V7nHkIn/sde8rQM5bs2P7ynod8d9dRP2/DL53z1q9+8fO7t6csnb1m
6KhOyft/9a7TL/7Re9tD79pq3zvHzSz5XkPmtR+45OD2ow8Mu33oqJ6S3/Pq
Yecc/thh7cv3fOCRcc88WfIDjt1lw2FTxrQ/NOlzi6eNe6bkF+74yy1OvODY
9nqtgb/5Jb/+0UPnjDj35PaJdzx6xdBRz5f8quFbfme9e8e1Z4y9YdtRExaW
fOb0/Y4YfsdZ7e3/8dRbxj2zuORr9n99zNSPXdQ+d9ZB+04YuqzkP7r9tn1/
f9zl7afGb3TftHErSj7nhZGLRm54TXv/g54+8plpK0v+xJXXPXj26O+1r+6/
ZfaaNatKfu+MDc++ZNYt5TG6vjb3la8M6MkxnxM32jHpic7wjz70SNITneHj
zj0w6YnO8Ekzt0l6ojP8v/2vyUlPdIZv8OP3JT3RGf794W9JeqIz/PLfDkt6
ojP86s+8lPREZ/iWD34v6YnO8H+fOiLpic7w86denvREZ/glB7961oCe6Ay/
7ZoLzth905+VOqPfgZ/aKumJHfyr4+5OenLM53av7pH0RGf4yx/YPOmJzuX3
+q9NeqIz/Ivjhyc90Rk+dfgLkwb0RGf4hx/fLumJzvBdxi9PeqIz/MI5/zvp
ic7wT457T9ITneHbzjo36YnO8CN/1Zf0RGf4e//HmUlPdIbPfGnsj8fuNb3U
GZ2u2mJK0hOd4Q+ds1PSk+/Dj/7phklPjvn84NFXJD3RGf7wSbskPdEZPmP4
/KQnOsM3mb9Z0hOd4XdMmZ/0RGd438oLk57oDN/iPTslPdEZPv3FsUlPdIb/
/UHzk57oDL/zE19OeqIz/Jv9xyU90Rm+2YwRPz1hdNXPoscFr2yZ9ERn+F27
/HWDAT3RGf70jK8nPfELH37w1klPjvn8/fDHkp7oDH+or5X0RGf4EX94MumJ
zvBj1vtq0hOd4X9YulXSE53hn9rqmKQnOsOf+OXjSU90hr9/388mPdEZPmbp
6KQnOsO/MWN40hOd4UdfctTFb3nbw6XOnPd2334x6Vn2d4P8a7uenvREZ/ik
rTdNeqIzfN7we5Ke/B780lf/ePiAnhyX9n95JOmJzvCZW52c9ERn+MRbNkp6
ojP8z/t/OOmJzvDvHPBg0hOd4XdvcUzSE53hGz0/MumJzvAXZwxNeqIz/PYf
fCTpic6ln57x/7TDK7NKnTm/ja88KemJzvDXXmwlPdEZvnL4bUlPdIZ/6K1L
kp7oDD99yK+TnpQD/r7dj0p6lt8f/BxzyusLB/REZ/g1nxqR9ERn+LHT7kp6
ojP8Ay+OTnqiM/zXz+yX9ERn+En3bJ/0RGf4NjMOTnqiM/y4sf+a9ERn+Pnn
//Dj2658qtSZ8zjh0T/NHtATneEb7Hl90hOd4X+35ZykJzrD1ztietITneE3
vf+wpCc6wzff5Y9JT8oHP+jcXZOepd/Bz233/0nSE53h9846LOmJzvB/fWJY
0hOdy37oni2SnugMP/PpvZOe6Ay/+fWzkp7oDJ/ce23SE53h7xzf1xlyxbOl
zpR3+z2/mfREZ/hDO/4+6YnO8H//6tSkJzrDt/7YiKQnOsNnPbck6YnO8PnX
bpX0RGf4M7f/IOlJueGH/ezgpCfHfI54bLukJzrD2/dulPREZ/hjfxya9ERn
+J+vOT3pic5lOY+YkPREZ/gNx/cmPdEZfuPbJ18x++ZqfE+5xu9xX9ITneG7
X3tz0hOd4Rd/bljSsxw3DPJv3TA36YnO8AvvXj/pic7wG9777aQnOsNnXrVv
0hOd4S88tFnSk/OBT723lfTkuCz/5tsmPdEZPvI9Y5Oe6Ax/+x2XJT3RGb7V
fnOSnugM3+Xam5Ke6Aw/fcj4Bx+euajUmd+ffv91SU90hr/4tW2SnugMP/K4
WUlPdIa/89kXfzugJzrDT/nZpUlPdIZ/9Ix3Jz3RGX5rp5X0RGf4Dve9PHVA
z7IdDvLx794s6cl5wq+4/6SkJ8d8HrLDRUlPdC7tN5mV9ERn+PeG/J+kJzrD
l+52UdITneFHHHPexjtfuLTUmd85/rKNkp7oDN94298mPdG5rP81C5Ke6Azf
be8Lkp7oXI6bPrZz0hOd4afc/cfJA3qiM/xb9/UnPdEZ/txh6yU90Rn+5KeO
TXqiM3zcxeckPTl/+Aa9DyY9OeZz29uuS3qiM/xz7/560hOd4cM3Ozvpic7w
zV/65N6LJi8vdcbf7568K+mJzvDjdp6V9ERn+NKfnJ70RGf4mL22SXqiczne
n7Y46YnO8L/etyjpic7wgz/7p28M6InO8J37/znpic7w6/tOT3qiM/z8u+5J
eqIz/NsjJiU90QU+Z/i5SU+O+Xx758ykJzrD3/3FTyQ90Rk+84ZDn9viyL5S
Z773lw/el/REZ/jk4ScnPdEZ3vP3myc90Rk+b+rspCc6w//l/rlJT3SGT7pg
WdITneHjLj486YnO8JlHfTHpic7wF67+RdITneH/cN+EpCc6w8fs87WkJzrD
XzzrjKQnesEPnTMm6clxOe6YMTLpic7w2e+/Zv1Pn1fNN/HvX5hydNKznH8Z
5GP6N0x6ojN84uRHkp7oDH/i/seTnugMf2HSvKQnOsN/ut2hSU90hr929wlJ
T3SGf+lLU5Ke6Ay/ctS3kp7oDP/Nfl9JeqIzfNZ7xiU90Rl+wkdHJz3RudRv
bjvpiY7wOxZPSHpyzOewDxx4xPqj+9uLpr/1kd1G3Vh+3v/MmjRfh/7wp4ad
eN6Iu4a0T76mPXHcM9X3hn59TW2eCr7g1dNW/qHv1vKY72208viz1p4nhO8x
au/jtrm+suPzQ1dPTOXnmN9p3Xn8b/pXriz94+/lx06plbO8zu/2q+Qf+7Je
Lruxb6CcHPO9vQ/7TPI/5z8m7fOuURPKz6V/+Wzyf97IM6dNG7eq5Gfc8JY0
/8kx/37XI8em8+WYz61fL8pfzrcOfu/WWS9PPGrGzqUd//6Omd+5+ZLrbyr9
l/MoS0bvubw9uTzme18eO2qPA3fqL+3x87vjX0v+seffVx2w6V4DfrDDz+YP
/fWmgd/lmO/dMqzw3zJ/E4aOeuN/Pw//XvBO4M+80bimvdFO8/Y9gSfzN9qp
8jnFPwT++pqBv+cCvzr5fz7wIQP4jXaq/BfJ/eLAP5wKuizw2ak8KwL/l3TC
K41+q7vWleM87wSOznn7nsDRWTk6K0dn5eisHJ2Vo7NydFaOzsrROR+Pqw2P
cVrXWXkn8LrOat8TeF3njtG5Y3TuGJ07RueO0bljdO4YnTtGZ23fqw2P7R6d
87wTOMd5+57A0Vk5OitHZ+XorBydlaOzcnRWjs7K0TnfX642PPaj9XhW3gm8
Hs9q3xN4PZ57TDz3mHjuMfHcY+K5x8Rzj4nnHhPPPSae9fqz2vB4XULnPO8E
js55+57AOVaOzsrRWTk6K0dn5eisHJ2Vo7NydM5fz1cbHq/z6JznncDROW/f
EzjlUM6xcnRWjs7K0Vk5OitHZ+XorByd8+Oj1YbHcRM653kncHTO2/cEjs7K
KV+34zjKmeedwCln3r4ncMqpnHIq57jOV7epd+XUu3LqXTn1rpx6V85nnsfx
L3rmeSdw9Mzb9wSOnsrRUznlrvNKT+XoqRw9laOncvRUrr+veup9A3rmeSdw
9Mzb9wSOnsrRUzl61nl1Pso5Vo6eytFTOXoq199RPfV+Cz3zvBM4eubtewJH
T+XoqRw967zSUznnqZxj5eipHD2Vqz/VU+9T0TPPO4GjZ96+J3D0VI6eytGz
zis9laOncs5fOcfK0VO5fk/11Pt79MzzTuDombfvCRw9laOncvSs80pP5eip
HD2Vo4tyjpXrv6ueeoyeed4JHD3z9j2Bo6fy+jhpddBTz8ddJ1x/59qtiz+n
o/v8SPK/oPyEFzrcWH625E95IUO/sV8dOL93airvPNGz13ItZ2G3KNjD1b4Y
Ly4J9nC1vyqVe3mwh6v9Lql++4I9XO3RTe3h+fOdJ7zSh0/VRznnq5zzUk75
lfPpzitfnnnCq3hQ+/r9Ufxd55/zVv91Xn1fOX7QSf3UeeVHOX7QVf3UeeVH
OX6oB/VT55Uf5bRD6qclf8r5XeX8bp2vljjWfrI32GvcuHrlk++rHz3W8206
z/qfnkdVfu3XiRvlxIFy6lU59aSccirnWOMWrnEI17iCuzjReqzPC0W9lWOv
9cyxu/9Ve66Pyrk+Kuf6qJzroyuPXp/hen2G6/UZrtdnuF6fi/pbUH7W46c3
8KL+Fgde1N/SwO9I5V4e+IdSeVYGzjG/r5zfV87vK+f3lfP78OR2wvzyU+2V
c6zlL+Lv+WDP+SjHXv0U9bUo2HP+yrFXP0W/sSTYo5dy7PP1sizYo29et2Um
rlYEe+ojr9sKE4f9Rp/+YI8demv9Ksde4xCO3upHOfYat3D0Vj/Ksdc4r8fh
suBHOfbaLurnuyL4UY69a0fUg/pRXvTzE8rP1uBfcX+0yvKiP3w2cI0HLZf+
Lt/DD36VU/46X10eK+d7rvwan3C9LlBu9Y+dK08r+7c66FYvX7y/Vf96Pmqv
/14fJ+j90YJQHq5/+fuj3mDPdTF/f7Q42HO9zN8fLQ32XEfVnvaj9lxf1Z52
ovbY6fw8dvV+qbLX+Wfs6/1PZa/zq9jX+5nKXucPsa/3J5W9zo9hX+83qr98
+5oX5oXwU+83Kl4crQ5xVecxjvmsn9cCKedqex1RP9ST1i/1oRzd8/GwLHB0
VI4u+XbxrFy/VM8YD/XrS8Xr14uK1/v/qh7z7X1eeF6Gn7quGp+x/Hp/XT/f
JeZ8Y/n1frbe7vpF/+fCeVHufL3PDuWvP5+teNGe54b2jh89X/wox4/2A/hR
ferPMZcEP9o/4Ef1xI9y/Gi/gR/VHz/K8aP9CX60vurrDfqDH+1P6H+1fdPP
Kqc/VU6/qZz+UTn9nXKu78rr408d58f7C+IjP66O9wXUn3LqQzn6unLqPEp9
vBrHyTpvUB9PxvGqzhvA6/Vecb3fh+t9d71dx3G73nfD9b4brvfdxThpfvlZ
1zNyjvn3ej0uCPaF7pFzzPeU8716+Z8Pfor46w28qKeFgRf1He2L84n2RTkW
BV7U9+LAi/OJ9kU5l5jyRF5c55aa84q8KOcyU57Ii+vlCnNey005o31Rnr7A
n07lWWnOK9oX5Yz2RXvot/FDXCgnLpQTF8qJi3ycR3viQjlxkY/zaE9c5MsT
OXGRP6/IiYt8eSInLvLntdyUM9oTF8qJi/x5RXviQjlxAT8tlWNViJNC38g5
5nv5eolcx++My/Px7Pql2G8w3s23l9geGe8qp3zufOvjOj3fGJ86/1OvdxdX
Lh50viXOW2q5+aTc+fqN/S3lzvdjrp90/Zvvf3Rern6+sR/QebN6/Mf2pfNa
VqdNN7j/r9O5n6nuX+D59XvPtz8yqu+T2w/ROFwY+B2D4w/l5XMH4eVzB+Hl
cwfhlDPsLxnkt8u8ATzsLxnkYX/JINf7+otu+ME2n370uTaf8M2/sOejp+76
fPsv//bw2Vf9suI3XH72SVeftjDwfafe9+Iv7lwc+AOPbzR+TmtZ4Ee98vGt
14xa0X5N+JIdrp88ZOLKwM8duej9H5m7KnCOzxn8d3i5nkF05tiN29W+XD8g
vFwnILxcD5CNqz4TV/22nDpuh+u4Ha7jdriO2+E6bodTLvh+e/z5vF3X9Id6
5Jh/b9X+Vre/Mm7YUb+bXtmX7bDWXlutmWPamx3+kQXB/060B7H/zNcu/f5p
V/eGeCjbidiv/u6sfSbOWRT8l+1H7C+6Z7vf3DlkabAv25XYb9V78tFzT10e
7Mv2JvY3v+22pa1pfTaeC3/PB52PSe2mN9gX/hYG+2WpPS0KfESqr8WBn5/a
0ZLg/+FUP8uC/Sapn1ge7Iv6WRHsv5/6j75gX9TPymC/T+pX+gMnXuDoovpz
/so5T+Wcj3LKrZzyKa/r0BvKTzwqJ+6UE1/5eo96fiP5mR/8PJT640o3jrX8
9AMTatfNqn8YWrtOab+xOPDwfHyQh+fjg1zv0w9eeMgr+58+v73klE/sseVa
/STH/Dt8s58sGnP8L+a3l4o9x/w7/JP/feNr+2cvCP4vPuvkkQ9NjJxjvqec
78F//3eXXv7pXz4f/Hy/Z8/eC1+PfFE6Xhj4VtdNebxvbm/gJwyftcP/XG9R
ON/3vnz2127+cOTnXnb9PQecujjw/3vvnz7/D7stDv5X/fN2U394+JJg/+vt
73/bw1ctCfabJH2XBv6+VE9Lg59/S3otC/YfT/ouC/bXJ92WB/5w0nm50W1F
sC907gv2eyXdVgZ+XNJ5ZfDzo6Rbf7AvdI6cY+JCOXGhcbtkMC7UnrhQ+xMH
40I5caGcuFD/xIXaExdqT1woJy7UD3Gh9sSF2hMXyokL9UNcqD1xofbEhXLi
Qv0QF2pPXCgnLuBbp3KsCnHyQNJxVYi3QvfIOeZ7+fpa6/nbGS+tNW6s+O2M
/2TcwnhOnxuW42mx5/5Wx4HluFbsuZ9U+3K8K/bcZ6p9OQ4We+4/1b4cH4s9
96VqX46bxZ77VbVHL+Uc6/MmuD4/guvzIPhYeb4D1+c1cH3+Al9Ti4dq/MB9
odrrc1vGrzq+5TxVhx8Ojl/DOGTw/NWe8avao4vaM37V8qCX2jN+VXt0VHvG
r2qPvmpfHw8vNPUVx43cZ+frMY7nuf9We32+TLm5L1d7fe6MPffraq/Po2kn
ul69Hs+9Jq5i/Otz0roOy8359pnz0vvW+aFdM57W+sVPMR6uxtsca73D9X5/
Se36XvHi+h3Hn/VxePTD9+DFdSiOM/dJ1zM/vuV7yvkevLieRf+r0/WmN1yn
DkjX+zi+LcYN0X7jNG6I9sX4YFHgxfU+jmOPSuOGaH9dGjdE+2J8EMe9xyd9
47h0cTqO4969k15xfDs56RvHq8V1ekXg5ySdo32hW7QvxlV9Zrwdx7GFznE8
/ImkW7R/JOnsx7fEBZzvExdqf+BgXKg9caH2mwzGhXLiQjlxoZy4UE5caHmI
C+XEhfohLpQTF8qJC+XEhXLiQjlxoeUkLpQTF+qHuFB74kLtiQv4DUlHHyfv
GBz/Kud7cMar7jkU/w4vr6PCy+ul8PK6KLy8/gkvr3PCy/IJ51ifQ8H1ORRc
n0PB6+M9Hc+vCFyfQ8Hd+nktf1k+4WX5hJfly9bLClMv/VY3fd5UP6/Fgevz
Jrg+b4K7501anmJeLK6/dfxv/Sv8Ne+7rHOXtyrmAcvbOd7sl78i/mO+IccL
PzFvjuNFfMb8L467PCbrmhduXfPFrWseuXXNL7eueefWNR/duuapc1zX/zXx
4s+1M8+dnzxf13bg8pU18e7zy61bu3F5vbrP9/Xm3OWz6j7P1Ztzl8ep+/xO
b85d/qLu8xq9OY/7Q9+c///uJ/x+Wb2/hneX/6f6W7d+yOczcPbd5c+p/tat
n/N5FP5r+kWfj+G/ph/1eR3y+UDivt035y5vRuT86TxwE3d+8r8b83U4Xu/v
/vb8Ho7X+6O/PR+I426/TJ77vCIub1e3eROw/3/LY7WueZrWNQ/RuubZ6T6P
TH084vaza3w37W+q/Hf3Wf2t232Gy3PgeXdxV9m7PA06r8tft+M+ly/CcZ33
5DPP13o+9abl1nbdnNcA+3W9T/tb+03d3+R4PT7cPtjmfaZ5Xtl3Vw+Vvc6H
O+72FTpenFcsR56/8Weee+Z5Vc7ufqeyD/MYWe6fuznu1u3Y9TzEuTzXcNyt
p3LcPc913K3Lctw9/3Xcre9y3D0vdtytE3PcPV923K03c9w9j3bcrVtz3K0H
cNyt53TcrRNw3K3vynP/3C3P/TpDx93zTcfdejzH3XNGx906tDxvtdw8cJ77
9Y2ONz3nVd60TlJ50/Ni5U3rLZU3PXdW7tZtOt70/Fp50/pP5U3PwZW7dd2O
u+fpjrv12467dUGOu3WVeV6tS9HrdZ637Hpyx906Jcfdus08r9bJdPe8xq9v
d9ytm3LcrQvN82rdTnfPlfx6e8fdOi7H3brTPK/WEXX3/Muv/3fcrStz3K1r
zfNqXVN3z+laLbcfxHHuH7pdF+fWzeZ5tc6qu+eJfj+F403r9JS7dbl53mo1
Pd9068Hc/g7lTesJlbt1v3leld89h3Xr03S/ieNN6x6Vu3XFeV6V3z0v1vVy
bv+L403rM5W7dct5XpXfPdfW9XtuP47jTetIlbt10XlelT88f8/y5v1BypvW
uyp366XzvCp/mD/J8qp+dd9Knlf7cXS+Jc9bLbefJc/Xmn+W/jPPub7E9Xh5
Xo3TulufQ/8f96fkeTWO6m6dzxv36WZ/Sp5X45zu1gu1Wm5/Sp5X45Du1h21
Wm5/Sp5X44Tu1i9V8en2p9R5q4z/+nXQrXeq2pfbn1LnlX+3PkqvX25/Sp5X
/t06K72+uP0peV75d+u1tP93+1PyvCXjh7juS/vnpv0pdd6S63tcP6b9p9uv
7bjb55Lna82Td7Xuzu8Td9ztc3G8ad9NnVf6u3WPde73TTvu9l847vb7O+72
ReZ5q+XWmee53/ftuNs/4rjLY+C423eZ59z/xnXsee73rTvu9r847vIzOO72
geZ5q+XW1ee533fvuNu/47jLO+G425ea562WW+ef5z5vgONu/5HjLp+G426f
bJ63Wm7fQZ77vAeOu/1Tjrs8IY67fbt53mq5fRB53mq5/Zh5/kY/Y9bD53nL
5rFx3O3Xc9zlnXDc7VPO8+r6qPs+8rw6L5cPR7nbT+e4y5vheNO+6TrX8WHc
V1LnrcY8P8rdfsAm7vJ+KG/ax13nOl6N4+06bzXmL1Lu9jM67vKWON60r7zO
K33cPp06bzXmZVLu9mM2cc274njTPvc61/m0uA+ozls235Tjbj9pE9e8MY67
ffd5XtnrPqY89/ugHcePyx9S53q/FvvbOvf7rB13+UnynPmZaJ/nfh+34y6f
SZ5zvY7zUXnu94k77vKf5Hmr5faT5rnfh+64y5eS562W23+a536fu+Muv0qe
c38U96vmud9H77jLx5LnrZbb35rnfp++4y5/S55X7V33w+a5zwPguMv3kuf6
PCI+D6pzn2fA8fp+3rhPts6r8ut+2zz3eQwcd/lk8rwqv9ufW+c+T4Lj+NH8
M3lelV/38+a5zwPpePE3P9zHWd6Qn1O5y2PmuMvP4DjPS1x+BuUub1ieV/Wl
eRjy3OcjzXP6t3j9zXOeX8S8pnnearn8DHnO84uYHzXPmX+I18c8r+aFusu/
2mq5/Ax5Xs3DdJfHlfFAvH7leTXv0V0+WK7v8XqU562Wy4+X51V8uv34+fFb
Jp9qlrdaLm9JnlfPN8P7+LK8Kr/mIcnztd4bK+XP8zf+xeQtyfO13jPbVf5Y
6jfOl+b5Wu+l7SoPLeOxOF7N87XeY9tVPttWy+UtyfO13nvbVV5c5mNj3pI8
p/+JeXTzvNVyeUvyvIpPl49X16+6vCV5Xvl3eX11/Srlc3lL6rzy7/ID6/pV
/Li8JXVe+Xd5hnX9Kn5c3pI6r/y7fMW6fhU/mrckzyv/mvc4zyv/mp8kz5vz
qda5zlfE+/061/UhMS9rnet4O95f1LnqE/O71nnlX/Pn5Hnl3+WJ1flA/Lj8
OXVe+Xf5ZnX+rT7PGcfzdV751/2FeV71D5o/J89bLZcfMs+rfWe6/6w49nk8
9N+L447l6qd4Lj4z2MPzv9tj/Pv8AmoPV3v226p90/5/tW/K+6H2Tfv51b4p
74faN+X9UPum/e1q37RfXe3dPnbWSRT2zftVpw32sy5uXdy9edx2Qhwqr8dh
J8SV8npcdUKcKK/HSSfUu/J6vXdCPSqv12Mn1Etet+7zlnD85u1Y9ewEe46V
o79y9FeO/srRXzn6K0d/5eivHP2Vo79y9M/rFvO01OM89n95+06wr8d5j4nz
HhPnPSbOe0yc95g47zFx3mPivMfEeY+J8x4T5835atDZXTfy9p1gj87K+b5y
jpXX35P4ZNBZOTorR2fl6KwcnZWjs3J0zusW8/ags7ve5u07wR6dlaOzcvwq
r7/385mgs3J0Vo7OytFZOTorR2fl6Nxt/iJ0duOUvH0n2KOzcnRWjs7K6+8z
1edH8f2t7n217r3VzAcpd++t5v5cuXtvNffbyt17q7l/Vu7eW839sHL33mru
b7vNNzVtcBylnDhx49N8vXeCPXGSf69WT+DEiXLiRDnPy4th4/wQDzofWM5D
Cuc5nPohTtS+nA8UzvMz9UP8qH057yec517qp5zHzpZ/SeA8r1I/5Xx1tvzL
A+c5k/op56Wz5e8LvIiHVZar/+Iv5o0hPt39UD7eOsGe+FROfConPpW790S7
90oTt8XXng9xm/ezwLyfute8n3phaC9wLT9xmH9/92LzvvvFwQ9xqH6IW/UD
Vz/EofohbtUPXP0Qh+qHuFU/8O7y5lX9Z3d586q4dffl+TjsBHviVjlxq5y4
Ve7eS970HvN8/CwI+2vq12X1v8D47w2c39Pyc6ycuFJOnCin3rvLT1jxfH39
3OYJzNdXJ9hTv8qpX+XUr3L3vvim98trOalf3d9E/eb9LzD+e8376xeG8lMO
5Rwrp36VU7/d5Xus6tHNb+XtO8GeelROPSqnHpVTL/p8hHpUjr2Wk3qsv5e2
qse8/wXGf2/g1KOWn3pUTvmUc6yceuwur2ZVj27eMW/fCfbUYz5/Zk/g1KNy
6kWfQ1GPyrHXclKPul+Pesz7X2D89wZOPWr5qUfl1KNyyq2c4+7yl1bPKbje
1rnLR9p9/k/qUTn1qLw+D9Mf6lE59npe1KPui6zP26j/BcZ/b+DrlofT5dt0
eTVd/kz+Yj5MjpXzRz1zzP2A5i2cNjhuVs74QznXLeX0g8ppV8qpp7yfeeY+
hef+C8J5qT1c14Fzvso5X+Wcr3LOVznnq5zzzZen39zPzgvjYXQo/r03nK/a
w3V9LO0iP/6cF8aN/G7hZ5HROXJdB8vv5sdF88J4ht8t/Cw157UkcF3vyu/m
r+PzwvWX3y38LDfnFbmua+V3u81HTXn0OkJ5Cv995nwj13WtlCd/XZhg8o76
/LGufy6OYr7QIs5XhXKqH7iWx+VbLr7Puo64jg5/6l95fVwX57vy96ETwvNW
7X/1T+1dP178bm84L9q5lp/+TTntP9+/9Zp5wkXhd2nn6p/+UzntP99/LjLz
kEvC79LO1T/9s3Laf75/XhJ+t+DLwu/SzvNxsixw2n++/18efrfgfeF3ac/5
elwROO1cfxc/+fmr/vC7xGG+HiOnfbrrWr5+54XnFIwD8nEyL/jhOD+vHvNp
F+c7N8wT8rt6feR39fpY76/i/Ln6od9QP5RH53koj143KY9eNymP+qmPhxeH
8qgfyqPzEpRHr6eUR6+nlEf9UB71Q3nUD+XR+2vKo9dZyqPXWcqjfiiP+qE8
6ofy6H0i5dHrLOXR6yzlUT+UR/1Qnm7fN0E59T6Icur1tCnfu/qhPHk/kbt8
7+49CPX+Re83VwX/9etmtG9l/2L+duy7zevOsRufuPGGe46g9rRP5bQT5cSr
cuLGlcf1b66fce3dtTuN2yLuF5jr7EJzHVwceNFulwZetJ8VgT+dyrcycI6L
8uq4jn5e56Xpb+N9ShHXOp9J/6PzY/QDcRzeWqe/7t/PdVoqx6qgA/YaJ/w1
tSf+i/aTv1+I/UDdb9P7Oyo/+XmGXjPPsDhwrkPKuR4op19WXj/fOK5w13d3
nXXXO3fdcf286lav78iJi3w59Tnms+F+v17OeF56v1wfV/QFrnFYb4/xfk3j
mXki197ph5TruJF+IT9Ojpw4VM58Td5P7PeIm3w/GftD5mXyfuL9FPGX729j
v8r8S95PvG8ijvP99nLzu5HTb+bPN3Laaf53430W/W/+fOP9UT0O4/WC+3Xl
XN+U6/1C3U+cf+O+XDnXyfzvRq79Tz3+I+d6m//dyLUfq59v5Fy3878b5+W0
P6yfb5w34/qf/93ItV+Fc98M5/qVb3eRc5y/nsb32rj3xbj3zrj3v7j3yLj3
ubj3wrj3s7j3vLj3rbj3trj3p7j3sLj3obj3qrj3m7j3pHAd0v2M7r0nTe8f
0feYuPeJuPeSuPeDsB9J3zPi3vfR9N4Q9/4O9x4Q9z4O914PHQ80vadDxwlN
793Q/YPuPRrufRbuvRhlvy/5Tt17Ltz7Jtx7K9z7I9x7KNz7INx7Jdz7Hdx7
Itz7Gtx7H9z7F9x7HNz7FNx7Gdz7Edx7Fuhn1b97b4J7f4F7D4J7H4F7r4F7
vwB+9T0F7n0B7r0DLv8//vU9Ai6fv3svgMvP7/L8u3z7Lm+/y59fz3sT+wcd
D7i8+i6/vcuT7/LVu7z3Lv+8y2Pv8slzvpqXnvFBfpwc88a7/PMuD7zLJ+/y
urv88C5Pu8v37vKuu/ztLo+6y8fu8qJj5/KruzznLl+6ey+Gy3/u3kPh8pm7
9z64/OQat/X8dfq8Mb4X0uUPL+Nb9Hf5w10eb5cPnHJqXm6X39vl2Xb5ul2e
bZcf2+XZdvmuXd5sl+/a5al2+a5d3mmXv9rlnXb5ol3eaZf/2eWRdvmfXd5m
l//Z5WF2+ZxdHmaXP9nlYXb5kF1eZZcP2eUxdvmQXV5il9/Y5Rl2+YpdnmGX
H9jlGXb5fl3eYJfv1+Xpdfl+Xd7dpvy9mnfX5ct1eXdd/luXR9flv3V5a13+
W5eHtimfreahdfljXR5alw+2Ka+sywereVxdPtim9/O6+1/Ny+ryuzIOyL8H
Ld7HubysLp+qy4Pq8qm6PKguf6nLg+ryl7q8oy5/qcs76vKFuryjLl+oy/Pp
8oW6PJ8uP6fL8+nyc7q8mi4/p8ur6fJhuryaLh+my2Pp8mG6PJYu/6TLY1n8
zQ/XNZuXch3zSa5rfkiXv9HlgXT5GCcMXv+6y7vo8je6PIouH6PLi+jyK7o8
hy5fostb6PIfujyELp+hyyvo8hO6PIEu36DL++fyB7o8fi4foMvL5/L7uTx7
Ll+fy5vn8u+5PHgun57La+fy47k8dS7fncs75/LXuTxyLh+dywvn8su5PG8u
X5zL2+byv7k8bC6fm8ur5vKzuTxpLt+ay3vm8qe5PGYuH5rLY9aS+YT4HErv
6+f8x6R93jVqQvsHx9x656V7nHnI745/beJRM3ZuK8eeYz73O/aUoWcs2bGt
XO0XTX/rI7uNurH91LATzxtx15C2crX/8p6HfHfXUT9vvzb3la988fO7t5Vj
P2Xp7DUD+5j49/5fvev0i3/03rZy7Pk+/NI5b/3qgH/l2A+9a6t97xw3s+R7
DZnXfuCSg9vKsX/0gWG3D+yTgt/z6mHnHP7YYW3l2F++5wOPDOyfgh9w7C4b
Dpsypq0c+w9N+tziNyKh5Bfu+MstTrzg2LZy7NdL/z+/5Nc/euicEeee3FaO
/Yl3PHrFQLuCXzV8y++sd++4tnLsZ4y9YduBdgWfOX2/I4bfcVZbOfbb/+Op
twy0K/ia/V8fM/VjF7WVY3/urIP2HWhX8B/dftu+vz/u8rZy7J8av9F9A+0K
PueFkYtGbnhNWzn2+x/09JED7Qr+xJXXPXj26O+1lWN/8jXtiQP9FHz73X51
3DbX39hWjv3V/bfMHmiHtKdVB2y61/L25LZytcfPvTM2PPuSWbe0lWt7Id4P
/NRWKf6Vq3/4zJfG/njsXtPbytWe9nHbNRecsfumP2sr1/LQPq7aYkpqL8rV
P3yzGSN+esLoTlu5+qc9XfDKlql9KVf/8KMvOerit7zt4bZy9U/72+7bL24w
0B6Vq3/4Rj3j/2mHV2a1lat/2uvGV56U2q9y9Q8///wffnzblU+1lat/2vcJ
j/5p9kB7V67+4e8c39cZcsWzbeXqn/5g+z2/OWmgf1Cu/uE3vn3yFbNvfr6t
XP3Tf4zf477DB/oT5eoffvqQ8Q8+PHNRW7n6p7+Zfv91qf9Rrv7hRxxz3sY7
X7i0rVz90z8df9lGqb9Srv7hm7/0yb0XTV7eVq7+6c9+9+RdCwf6N+XqHz7z
hkOf2+LIvrZy9U//95cP3vfbgf5QufqHz37/Net/+ryVbeXYc73n36+87Ma+
P/Td2laOPf0LfEz/hqn/Ua7lP2/kmdMGnkds/tBfb7rk+pvaytUeP1+YcvRZ
A/2tcuzpH+ETJz8yeaD/VI49/Rf8ifsfnzrQvynHnv4I/sKked8Y6K+UY0//
Av/pdoem/kc59vQX8NfuPiH1J8qxp/3Dv/SlKal/UI497bms31HfSu1dOfa0
T/hv9vtKar/Ksae9wWe9Z1xqj8qxp/3AT/jo6NS+lGNPeyjjd247tRfl2BPf
8DsWT0jxr1zbC+OFvQ/7zG/6V1Z2cOyJV/79lmGj9jhwp/62cvXP57APHHjE
+qP728o1/hmH3Drr5TT+V67+aa8LXj1t5UD7Va7+Oa89Ru2dxkvKsee4LOed
xyd9Ah/84/fw9/Jjp6T7C+WqJ/wdM79z80D/oBx7zr8cjywZvefA+E256oO/
L48t6ku5ll91c/cjcHcf1HR/BKf/Ufum+xq1b7qvUfum+xq1b7qvUfum+xq1
b7qvUfum+xq1b7qvUfum+xq1b7qvUXt3X0NcNrV3OO3Rxa3eRzTdv6s9caic
eFNOXCknfpQTJ8qJB+XUu3LqVzn1qJz6Uk69NN2vKVc9OXb3TeqHY7XnWDn6
K0d/5eivHP2Vo79y9FeO/srRXzn6K0f/pvtT1dndP6o9Oqs9dso5Vo7OytFZ
OTorR2fl6KwcnZWjs3J0Vo7OTffpqrO7j1Z7dFZ7dFbO95VzrBydlaOzcnRW
js7K0Vk5OitHZ+Xo3DRfoTq7+QS1R2e1R2fl6Kwcv8o5Vo7OytFZOTorR2fl
6KwcnZWjc9O8jers5lXUHp3VHp2Vo7NydFbO7ynnWDk6K0dn5eisHJ2Vo7Ny
dG6av4Kjs5tfUnt0Vnt0Vo7OytFZOTorpxzKOVaOzsrRWTk6K0dn5ejcNI+n
Ort5NrVHZ7VHZ+XorBydlaOzcnRWTvmUc6wcnZWjs3J0Vo7OTfOZqrObb1R7
dFZ7dFaOzsrRWTk6K0dn5eV8sXDKrZxj5eisHJ2Vo3PTvK7q7OZd1R6d1R6d
laOzcnRWjs7K0Vk5OitHZ+Wcj3KOlaOzcnRumt9Wnd38s9qjs9qjs3J0Vo7O
ytFZOTorR2fl6KwcnZVznso5Vo7OTfP8qrPOw7vnBeis9uisHJ2Vo7NydFaO
zsrRWTk6K0dn5eisnPNXznHT8w448yA6n+meU3T7vEB1bpr/V52b5vNV56b5
edW5ab5ddW6aP1ed3fyw8qb1JFpfzHO550HqH3udH3PzzG7+3K0TcM+/KJ+W
082HdzuPrTqr/27X/6ifpvUM6qfpeZyeV9PzDvh/AuHY3A8=
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}, 
         Opacity[0.8]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRESEgEgIDEwMEFAQFFQUGFgYH
FwcIGAgJGQkKGgoLGwsMHAwNHQ0O7+XkIBARIRESIhITIxMUJBQVJRUWJhYX
JxcYKBgZKRkaKhobKxscMCAhLBwdLR0eRzc4MSEiMyMkNCQlNSUmNiYnLx8g
NycoOCgpOiorPCwtPi4vPy8wQDAxRjY3QTEyRTU2OyssQzM0RDQ1QjIzMiIj
SDg5bFxdSjo7Szs8TT0+Tj4/Tz9AUEBBUUFCUkJDU0NEVERFVUVGVkZHV0dI
WEhJWUlKWkpLXExNXU1OXk5PX09QYFBRYVFSYlJTY1NUZFRVZVVWaVlaZlZX
Z1dYSTk6a1tcbV1ebl5fb19gcGBhaFhZcWFicmJjc2NkdWVmdmZnd2doeGhp
f29wemprfm5vdGRlfGxtfW1ue2tsECAfgHBxgnJzuamqhXV2jn5/hHR1hnZ3
nY2OjX1+inp7h3d4kICBjHx9kYGCmoqLlISFlYWGuKipk4OEloaHmIiJm4uM
nIyNmYmKkoKDi3t8iXl6no6Po5OUpJSVg3N0oZGSpZWWp5eYq5ucopKTqpqb
rJyds6Okn4+QtqansKChoJCRj3+Ar5+g28vMrp6frZ2et6eotKSlsqKjsaGi
OSkquqqr7ejSvKytva2uvq6vv6+w1cXGwLCxxbW2xra3wrKzx7e4w7O0yLi5
yrq7y7u8zLy9zb2+zr6/z7/A0MDB0cHC0sLD5sXUybm6wbGyu6us1sbH2cnK
2srL3MzN3c3O18fI3s7P4+IQAhIR4NDRAxMSBBQTBRUUBhYVCBgXCRkY2MjJ
BxcW38/QChoZDBwbDR0cgXFy5B0OCxsao7OyEiIhqbm4FCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MgpKRg5OShJSTiZmYhZWUhpaV
nq6tipqZjJybjZ2cjp6dj5+eiJiXi5uakKCfkqKhmKinlKSjlaWkmamomqqp
na2sk6Oim6uqnKyrkaGgEyMin6+uobGwp7e2orKxpLSzoLCvqLi3qrq5q7u6
rLy7rb28pra1rr69r7++sMC/ssLBs8PCtcXEtsbFl6emt8fGu8vKscHAucnI
usrJuMjHvMzLvc3Mvs7N8OfmwNDPwdHQxdXUxtbVydnYy9vax9fWyNjXwtLR
ytrZzNzb5OUezt7dz9/e0ODf6ODRxebE7uriHeQezd3c8u7j6+QOEOIRqZma
7ObU7/MPv8/O4uoC0ujR8+/r9fHt9+8P9PDs9u4B4+7i8eno6Ong6+/k+PDT
8PTT+fHh7vIB8fXh5ufE7vbq8Pjn7PDm7fHo7/fl8fnpqJiZtyleKQ==
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}, 
         Opacity[0.8]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
kvWGb5zb1aiDIaOMo54L+G0d/fxCybvHt89XS8bKhsbQBvrqLm2ve77rLHBe
vfQ/3GR9z+sO15vlWfTW3uL8WZ5jb8+Ld23keb1T8g5Qc2aoOYs3SsbrJsbx
xsbe3dreNCaJ57c96z6eaVvXf9380WeB+Zvp/0+9Y0fpz74LxMAWtts5/23v
NHf+B/eynnt8ueQ9xBfvl7xX5FHip5+xRPwMMGba2x5v/GytnTn9jTfOepDx
AE/fyjkfl+Tr9D8vGdPUt3+XvHvUjY4+S5zcp+07Y3IbY3Wmz31jHG7nHH4T
8RuJ30fw7u3dL9xniH6A88H9qA/7lWz/GDVi/5K5vZ0+7Odevi2ZC5p1bLBr
drJN/Dd8Fh55XMl8+3C0LylZF6mJi2qnZn4XemcxUW+oO3C1IdrhQid6XuTn
k0rmt+eifWFJjvK55wt3ol7sZftt19nLNryV3/5w1z21f6gP9nDv1OKh7ot3
DrPNnobrE96/rxiw46+XXAc/tnENnp3rOw8syafZ9z76BN7K9we4K5zuiJL8
je8QB5ccf9U+PBeOzLcIeDK8lW8UB2j7Tcm52EaUnMu3it+WnLuYfoMj8A64
3Fj1KH2IHGnMoI8qyd/eEd+R4v1VSV8uYxwSe8yD7/HbFq4Gv+L3Ixzqd577
bPv8niIWTijJk/iNwTea4fr8RP2Gr4ihOfqcs5/v2Y3xrMeX5L7s6aKSvBMs
E0pyPt55cUkeCa6FI6f+pyS3AuOxzgH7Mc4BC9+V/v97ueQ3EfbO+MXOwTcX
+S7WmOA6PHdBSZ+x70vcOz6+UD8TB3ybYt+sy/eXUeqJngv+vsL3jvU+831j
onb2O8ZnGCd2xmsn5wz0XMb5LGfKdxHyGXe5fc3fpeQ+8sTVYuN3/iTPkfPj
d+x0bZO1X2Cfta/R3oyZa2wzj28HrMfvkWt9Fn2dPjzaNvbJPos/m7+fiZPp
rtPEcr12aiS1sou2qfp/tG3mM4/f5DPU/Lbn98Lj9mlP085c9DTPi5pM/aYu
Uw+ps9QKagM1grpHXaXmUq+oY9Q46hJ1Hp7QWSzXL3AXpvkueMGtrv9jydrP
nqjb1GzqHWdDbaY2UTOpl9Q+asu9niPnSZ0iT8MRqN/UaOoeNZjaR10l75MD
4a38Toc/kKOoDeQ3ajW1m/pJDaHeUEeoadQtaha1ippFfZvimbKvH0pyozU9
k+fFgv8eL7lXaga1o5v7ftL54H2xpI95/19K+p5aRx0kltvW/E7aQ78+XVr3
8Zx+W6Tmd4eentVLJf33U0mexPrtan6n4FlqJjWXHPaWuZLvAXNL8oDmOb/i
mXSs+U1hY8/8NduNmlxhS33zYWk9nw+0c57/MF7mleRqtDvU/N7B+p1qfi/e
wvP8p21i6q2SZ/j/8y8Zaz+X5FW0F6v53bO/Z/5uyfPkDL/Sl11qfgvjbDvX
/G64tT741HatyUXwDfmAvEBu4Ry+LJlTiIVPSsZCqcljaMNDvvDZhWpyBc6c
+Jptu6UmvwEPcf13/bx4zW9/A42Rr8U527V4dtGa327ww/ySvGGIcfSDsURe
/2/JuCYufjQ2eM9c3/WiMbGuZzLPs3hTn+LP733HEM+QM95Sv/IfrjbXB+x/
K33M3rbVB/gRPxDLxG4Pn3vHcwHjHHESp+Ti9YwdzrK/509MEAPcJ+Kb2L5H
fGAb656HGiP4CP8Qm8Qr8fmKcbaBPluiJq8a6Rlzvl8bH9t5zpzHQOOCWCE2
uHPcH+4OvJTfz/A9vp/w7ZJvCc/E+NM1Odn7oUfW9MEXoY+v6fvdQt9X8xvb
h6GPrLn2A6Hvr/n3md1r9mmvGvrGmnzojtB9anLEq0Iv2pIxfWe0B9WsgVeH
7tSS8Xc7+6jJgW7lTGpyI94/UwzXhJ5c0zeLxXOTasbdf0OfWdOvw0I/WfPv
P0+xp5qcY3jNPu0TiGFr6iOhH675N6VPQ4+ueYZ7hH6o5t+dhoSeUZM7rBz6
hpoc8brQXVoyPnaJ9r01eQTPPeizp8Nhat7/50I/W5P38Htxe38znhX6B+8M
a/d1/enEck0Ot3fNM+O8JoReqCXzQpvQF9SMx9dDH1CT04B3ZzFPJa5r8rhP
Qh9T886Bd1cxb1pzHnMWjzWvlXutUhMHGC4MXVoyj4yPdqMlcxln3t9zv715
j+E85DHz5onkk5r5+rTQ39fM0fcQIzX52lhyUc2ce3foHWpyt/NCz6uZcy8J
3bYlc9/N0R5Qk09PDN2+JXPW5dFepCXz1PnR/rlm3j879I/e7bmhz615dzvE
3Ctq5ob9a/oRH44K/UHNevZV6JNq5qc1asYrsbpaTRxgeBdbzTp6OGvXrLU7
1twne5zNXamZz1avGevE+bGhP6tZFzsGnitr3vU5oc+omfOODv1xTf4xP/S4
mjlv25r3ijv1E/FVM/8tHOtcWs1z0b6oZi4cXNO/+HYE9ybkz9Fes+a95c52
jvlTauavo0J/VLMe7xf6xZp8/TBitubfHPapGd/ENuMvOIe1D3X9A7kHNf/e
uxe2mn+zRT9q++vQJ9fMhV8SmzXz7nGhP6/JD1jjNdfZs+Yd5v5y75+oefcf
B1fNvw9/F/rUmrl2aM0x7O/hs5p1aV98X/O3R7vY+2U182tLtC+umV8Zf945
/wOC1Uq+
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtlmWYVlUUhb85exgYQEJMlEba7u5WVGwx6IYBBAVFCQEBaezWx0exWxER
ERFRMehRQlKQEJBu3+W6P9acte5377nn7r3X3lOjRVGTLimXy40H+aAmf7pF
LvcDF0uxzgF3gkfRo8BseFMwGD4SzIBXAV2Tr82HnwmawMeCqvBrwb3w7uA3
+I2gD3xJXi63EN4BTEXXBbPgd4BB8BFgLvwuMAQ+GsyD3w2GwseAavDrQE94
D3Ao/HLQGd4JXAAfD+byrtbo6fCjgT5a75gIPxs0g/cFP4bPrLPqmyeE99Re
OvM58NfALPZrjm5EvJ5Bb4YfnO19JShKfkdlfn8BvRV+IPldNcPP6p1T4ReD
dvBHQB3u74/+HV42i+3VoFtyjN+D3xa+9w/OcAn8HVAMb8+18+G1w9/aCjRg
vzHov+EVWOujR7CuQpdnnRmOoWKnGF8IPwa0hbcBU8LXxAeA+vDPQe/kHDdk
vyfQG+AVWS8Cb4H5ed5D31YnfDZ946XwuqAjvAOozfO9FU94adZa6J6sP6ML
dRb0Q6zz0GVYa6CLWL9HF7BOC++pvQaCX+DVwf3JNaLc3wz6JddAPZ4fil6G
LpfdewPolfzMZeEYK7Y6o3LdHDyenPO6PD8IvRh9EOvr4KZw7czm9/3wlmAS
ejmYHM6JctEf/AuvDN6WV8B2+FHKofIJFsMbgHeTPXF9uOZV66rxf+BHKsZ6
H2gc9oi8IY9dFfaovKkabBb2nLw2HH1F2GPyljxyCPye8G+PgWsyz8vrqrm1
8CPAm4otWAo/DLwBn6YaCHteXlcMH4QfToz2wucoprofvQf+q84oP6F3w3+S
x/T9ajysf+oM8hA6j3UF+sWwh+SdbfKozoPeB18AitELwLjkHInXAMOSr/2l
86gHyNvymOLH8/vhC8Gx6HXhs30AToRXyPe7PkneSzFSbLTnKngj8H5yjyzB
vafIE8ke2ww/HnyUXLPb4CeAj5M9Xcj9p6InJHtmV/idetf/NcXvp6G/SO4p
Cd0K/ZW+RT0GfTp6InwH2A1vAb6ELwGvwm8Pe2FRnnvDrWHvqkfsg58EPk32
QB77nYz+LLknlEa3QX+tWkuuxWXgu+SabBfu2erV3+ibwzFU7OTZhsoj+Fa9
CnRU7WX365rOuhxMTz6zamklmJFcUxvgx4EPk3vCivCe2kueL8f52qKnyEvJ
uV0DZibnWLlZHa4t5WgS/FzFKLkHvAKvyB7b4SXhnZVf9K7kb6wCHxmOdcpq
cVjYy6rJquixrGvRwVqAbs06OfladfSz4bOVCNdGcG11co0o1gey2lbMVQsl
+X1dck3Ia+vl2WTPae98fl+T/A7Vggb1yuSaqAZ/Mpyr/MxLg8O1kMtqfUC4
t6jmzwjXiGqjMfq8cA9T72qZHKtaYa6YVeL5l8O1thOcBa8XfrZpstcfCPci
eV5evy/cK+R5efXhcK+TZ5W7slzblJxD1Ub7cC2pRtQbuoe9qh6h3HQK9xrl
6KXwmXQW5VBeKYPemOwZ9d69YGlyD346PKM1m/XOIeEZUC67Z2C4p6uXL0I/
r3pGVwrP7H7hmaxZXKweE555mnXr0aPDM1azVTkaFa4h1Y5yPi6rGdWKcvxc
uEZUG1vQw8MzWbNYOe0SnnEFmUe6hv8nK5V5pEd4RhZmNa9esyXcC9VzNBs2
gbnJM0Je3xPurfK8Zs/W7Fs0gzR7dmbfrhmkXrUj3BvVs9Rryuf7rOo5mu23
hGeZZrx6Ral8x0I9o1d4ppfOavipcI2qNpWjPuGZXiY7o7y+MTwr5Pn/AM+j
X/0=
           "]]}]}, {}, {}, {}, {}, {}, {
        EdgeForm[], 
        GrayLevel[0, 0.2], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxNmGnYTWUUhk+UtHeUUqFBUkqKyJDMmpNUJE0yFEXGkFAaUVHSSIOhOUSD
RlIafsqYNEghlCGUKNG6r33v63w/1vV+71nD86z1nr3f5zvVuvW7om+pQqHw
2n6FQulYB6SFQrewrmEbk0JhQaxzw94J+yJsnp//FvZZ/D0n7NOw98M+DJtq
7Kyw2WEfhU0Ie1vfB2G/J1mNL+Pvr4yhznth8/X/K8ZHxnySZngLxF8Y9nWS
5cy1Lp/Pl88c8d8M+1hsOLwbNiVssn44T9P/VprVnSOn2eZ+bu/0tV5ucJxg
7othT7i+ZN5ksR8Kmxg2SU4L5fx82IywmfpeD3sj7FnX6WGLI3ZL2NawF4yl
5nP6Z9j3Bvm8bw/gbI79IucE/mtijJfbFPuZ6kyelPvLYY+mGd5k5z7LeYyV
H/iP2ANxz4S9KsbTYa+4f8p67MeZR87lYV38js3zDODyoLXg+7jnxYzvc2XG
o60Lzj3281jYXWLAa6QrffQNu1P/iLCH7eNu/eSPsn/q9jGOnAfExDfcsyR/
kJzwD3Glxh1hY+zjfnsgrr+cwBzgCvd+8sI3zDwwBuq/Vx5j7e1WecDvmrBb
wnqFXevaO6ynnG6Xy9PO9GY/Gxo2WH6DPIP+afG5HyD+Ffr47CZjqdtd/23i
DZNTL/sfJq+h7rvYJxid5AeXq12Jvc5a9NdRvJ7OmmeD71x7uYDfwx6Iu8Ez
BqOz58f+euux72DejfIa7WzamUONMmFHhB0ZdrH8mHEbV2Z8qXXJuch+iDtP
jCvDrpIffTQIO1f/Oc6UPi7QT35b+6dufePIuURMfK3T7Jkhv6mc8DdzpUZL
+7ksrIk9EHehnMA8yxXuDeV1flgr88A4W//F8mhvb2fKA37Vws4Iqxt2gmu9
sNpyah5WKezksFPC6vhZi7DT5EcfjeUHr5qu4C/03cX7/XRjqVtLfxPxWsmp
rv23klcL9yfbZ6OwqvKDy/GuxFa3Fv0dl2Z4ta1xqTOtIj/wj7UH4mp4xmCc
5PmxP9F67I8xj5wDwiqm2fesuecGxlHWgm8F+THjw1xPMOdEcQ61H+LKiQGv
8q70sSdml+o/OuxU+zhEf1W5VLfuwcaRc7iY+A7yLCuHlZYT/v1dqXFgmj03
9FHKHojbl2ScwCy4wn1vkvHCV9Y8MPbTX0EeVextd5LxSMJ+jr93hv0dtsZ1
V9ifScbpALmc5Ez/SrLPeL63Jxk/+uBOhR+8/nAFn+eA9wHvrR1JFkvdbUnm
Jx+8ss4G/APtA15lnAf39l4xfpQfXH5yJXad3Onv+yTDI46zaux3bnmS8QN/
ZZL1QNymJDtjMP5LsvNjv956/4StMI8c3v3cUbz7lqopqIvGWOKzttaZrlNP
bLAe7wWeM56vX5LsDIhbbT/sv5MffXyTZLzBX2X/xP2gn/2v4lAffcA9xf37
rXnUQkM8ow/dgx5Bb3zt+wHu6J3N6pyZ+nNtxYrmQJdMtNYS85jBdP3cL2ij
ScYt008PL8sr10esaAI0B/cz9zT3NvfeHXJEU6Atcl04QV589oiY3OdjxXvI
Gs/rHycn/Pkd+LBx6LVp1pwij/H2Ro38zh/jWY+X491yQavkeor1cXnhR4fM
su7stKil7pILWmSE8xidFnXTKOuOM/ZO+RKLNrjM705LexjuvMY4s6F+xn3d
W17ojfutzXd3iPNGdwxMi1qqv3jc+X3sdaC+kfpzndXPuFy3DXLP895Zfxf3
3LXcda3FR6v0lOst7uHeyz280BfdrYs2GSxOT/fD7K+XvLqKN9C8bs6sj7NA
E3A/tC2xRw+gObifLzK2s75cV3USh9hrxeezjnJEp3QQnz4vlx/+HnLBn2uu
9sblWjPXnteI18Ua+buTtZ2YcLzAPLRKrqfa2ENH/WiU/P+fSXJEm6BRRjv3
2+21nXO5ztlcIl9ic81yrufHu/hv37fkcK9z9/Je3+G7EY7oirPk1MR9W2Ob
pUX9dKG1uefri9mwxJ57h/uU7w0aoJ59NDIu121N9RNb3Xk0FbuVeXXdox1q
6T/dPX2gX+rIFX9NMdARNcQ8xX0DP4NfS2ufkRa1V2PnVb8Eb3ihA9AZ3Mnc
zbkuqSAXtASagzu8rPNGP1XVBy/u8CryqGQsvCq7X+R9xp15mvWOkRd5p6ZF
rZlrz2ppUccdL14Nax8pNnqjvL5D3VPjcHvINVM5z7mO3OGF1jhIHvhTZ0ft
XIux5hqqonWrGHu051zbOVWyXllrMKcy8kJXFJxpKffUQ7fsnxb10z413R7v
e3jtVQfs9i5dp1barbYobx5xuW7LdVxp8ej1H2vAb5e6Ct92NQRc/iqhs/5U
h8B1m1pil/hrSuiqrWJv8YzB+Veu9L9TPbTP2C32s0ldw+8O/AbDb0W55vtZ
PbFafbFdvYBuOMK5wneHemOl/JZ7r29SP2wWb7F73is8Gy3saYU5W81b7Hsk
x8/1XK7vfhRvo/rpN7HRRt/q+8E9NX6xhxX6v7HGKuM2O4NN8sC/zNltKKGh
WHPttta6S41F7/DbCr/x8DvW/6LohdM=
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[0, 0.2], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwt1NdSFUEUheEpyqt5C15EEQEBkSxKMuBRQJBjxEgyIGbAgwGQJIoZVERy
FBCFd/JfNeviq+rqsKf37u5JrooXNiQFQZCJXWgNg+AO7qINx3EUx3ACVYjh
FE7iOhpxBTdwCVdxDZfdvokm9ylWBSodU2Ot/pbmZCATWdiPVKQhHfu8tgzl
jpGPXOShADnIxgEcxG6kYC/2eG6Ox/I8N8Pf0pojKMFhlKLZOSq3Fpxzjsrt
PAbwF/8wiN+YxRzWseyaqVYrWEU/XmMN89jGDhYc6yVeOaZqewEXXWPlsogl
51TvPWkvZz23AXGvUe1Oo9o1rMEZ1KHWY/VeW+21NR6Le2/TmPEey1yjUp+B
alWMQ65Zoc9EZ1GEd3iPDxjDEzzAQzxFt/vUfoZH6EQXHnvtR3xyjA7P0dh9
j33GF8/R2gR6HEO17EWfa6r2EIbdp/YI3rhP7VG8dd+ocxhzX7/PfNBn+Nw5
aO8vvJevGPeeEj7zNe9JtdedWPEZfMckfuJHGL29DuemN9iOW7iNe27rTra4
r9g1L/IZKNYUfjnmhL+h2N/C6G7qzumuzXmvEx4b91rd4XXH+BNG/wC9/S1s
hNGb0lvaDKO3uuG23qzupt6s3qru6LRrpNrM+OzbnYvuQMzfUGz9U/4DS0Oj
cQ==
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[0, 0.2], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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

           "]], 
          Polygon3DBox[CompressedData["
1:eJwtlnf0j2UYxr+hfs/9oLSUJHvPkJCoqEOnVE5pqVOiQycqDQpZifZQp2jQ
knYqMyMjMtqbiBQRKVJU6HN1ff/4nPe63+/zvu8z7uu+v9V7Xtetf6lCoTAF
ykCvKBTWpUJhM5yM3gdDSgqFEcT70S9BA/Qo7r2MPgtWE48krou+AAowgHvd
w2M09jviV8Lv0Lu2QSEXCs2Jv0Xfzpia6EkwDL2Ke8+gW4fHNoYT0J3Dvw1n
TG30RKiX/IyefR7qE48gfgE9HPYSL9Y99BXwPfpnOAl9BxwIS4hHc70MktZM
fDnXi6EMDCS+hOtIOADe1x6Ev6FvaQ8mo8+Df9H9oBv6TghYSjyG69GsuRf6
T3iW+H6oBCuIH9DcNacSr6FBeE+1t1pjPfT1sAG9FTqG16C1jIF24TPT2d0H
7cN7pL2qS1wHfRP8iP4STtdamE8d9GDG7A2fgc5C92qhG8NY4obETdAtoIf2
Alpq73h+AXoaHJR9RjqrkdAK3RTu5vlGxM3QDbUnJc6hRugOsAU9Dk5B3wtH
wnKtgWsJ71yIngEJXT5772fDwegejHkr+Rv61oNQBVZy7yHNHcrDB8R3cX0Y
piY/M05zg0NhGfE9XJ+AoSXOySfRfWB98hw11wnhvdQYjb0WfiD+BU4NIz0e
TkO3gR3aO2iLPiQ7196FCuiAReiZkNFls3N1FpRDP8IzVeFT4kfDZ6azmwxn
oLvAH+ir4EzlpXIqec5Lwmeqs5WH5eUp8De/7ZHn0G35xnvoyuh/oBHxOcTH
6JvaWyhVzHnl/tdwXHGPtddrYWfyHDSX12BfsufkvfXwF3o3nK3c03eSPSKv
NOF7Fya/8yt4LuyNXTAEPR42oatzvRmeht+It8Nt8lp47sfCDbAHjpLPoF84
Z5Q7msM6vRsOhyOgL3wWXmulohd36oygAvSGc8O1639PomvwvqHE1dAzoR3x
xuQ5Pk78etgroxn/hvyZfXY15E30F1wnpaIHlZdwWDEHlYsfQsWiB+SFljwz
N3lOO8I5o9wpQW+FVsTzkte0C+oQd5A30AuhFnFb5RZ6LjQnnkNcFr1dexnW
5eBK2BZ+t2qgauEWKB2ugaqF9Xi+U/Kcl0I14kHyPno6NCDukryGleGcVm7r
zDcQzwvPRTVRtXFReK7yqLw6K7y3ynnl/ibYn9xT1FtmhL+lmq3a3Zr3z08+
893hmqDaoDlv1tkS903O+ReVJ8T9k3P01bDH5DV9Y6Nym/jG5JyfGs5Z5W4f
6Ip+LOy9n+Ab9McwIbkmf6J94vlfk2vkQOI22bVIHpPXKkLT5DGlVS+za53O
UGepGqpaKk+tUZ4SX5qc808Rt8iuVcoJ5caJ2b1De6C9aAbT0b/DKuUW8a3h
+ah2q2eod0yETkWPyCudifsXPSFvdCS+pug5ea878S3hNeldeuegYs4od9pw
r2fYk/KmesJgeTG7Nqnnqfep5qj2qOYNkxeze4nWqLX2LnqvPfHV8kF27dSe
ae/kcXm9K/GAcI1QrVCPGIr+PLw2eUxeq5L9X0RnqrOtnN2blQPKhfMZsya5
J6k3zQ/30rE6M/Ry5WFyjV+Bfke/M3Yt8bSwx+V1veNN9NvhXqcxGjs73AtH
qeaHkdZ/kDnoi8LvUo9Vr10W7oX6pr79UbiXKMeUa5qT5qb/aAvQi8O9XjVf
tb969n8X1SjVqkrZuSsPyAs1s89KNUG1oXb2XqtmqHZUzf6vI0/L28dn907V
DNWOptn/ZZRjyrX62bkjz8v7dbNzRzVCtaJh9lmpp6i3NM7OJdV81f7V4VxV
j1Sv/A+yoFZM
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[0, 0.2], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
c4a5wjPVs9QcZO7xTLV2sQay9rGGUftaI1kbqYE9azxjPVs9c9Ti1pDWjmpy
tac1lrWVGlRta01mLabGtdax5rXWteax9rCmtZa1BrG2sEa1NrXG8Kw2J5mL
PLPVzta01rJqaGsla15rXWsmtb81sbWwNYBnuTnE3OGZrnZWE6oF1dBqBXOY
uUvNYG1pzWqtao2pVrbGsrZSM6tV1AhqgyNir9UkZ8Seq/2taa1lrQHUrtbQ
1s5qWGPXmDVWjWG1uTWxtbAa3VxhDjL3mDOsjayBrX2tkYxtc5i5yxi3VrFm
t1a3ZjHWjVlj1ZjX140BfV+f3xUxsjdiSu2jBlF7qIHULmoktZEaxrNfDaV2
UgOYy9VMaiVzurWUNbi1tzWV2lsNr3ZXg6td1HBqNzWMsWPONdcaQ2ofNZba
akicvea4LXEGt4dOcA/cDRfAZHgXLoRvsnSmepYugS/NEbASvgrbfyqrom+p
/1RgLizLknYwZ24ODTE9nuG9M7JU+y+Nsf4D8Ow3h2wIDaB2Xhe5SQ39AEyF
adAFnoHPYBEMgrfNOfAFvAMfmq+hLHwU1ybCmzFmdszRuc3JUi76BD6NnHQt
fAwL4TqYD2/BJFhgfoIXYBR8AO9BY2gCU+LbnoAB8Y2+ux/0j2/wXR2gY7xz
aqzRjJjjG/FO3zUh1nZevMs1fhFegpdhdHzrNdAovvn5mKNzGwl9YCbMgr5Q
JdbItakKD8F9cD88DDfFnJxLMxgH4+F1eC1LvlIOymfJZ96KPXgn1mh8zGFC
3DMGxsKr8Eqs3Yvx7aPi2rh4tmPUqp6xnq1bY65j4l7nrO/eC52z5MPO7WkY
GHMcBs/BCBgOLeB2uANui73oBb1jT7Qfg8ejr0esmWvVM651g+4x5kkYDEPg
qbCfhaHR90g8w3sfjW/TZwfFNz4Rz/BefaRr3OPYB6EttIY7oR3claWYNVbb
ZMl32sY1fahlls40z7JWsZfGTJfY09vjGW1iDVrHPa3iHc7todj77rG2XeNb
Osda6lMjY02vh+ZwM9wA1aEaXAQXx7UWsdaO0TcbwtVZ8tEr4QpoAFfFtSvD
dkx9qAeXweVZOqv1SX2xaaz1sNjbofGs+jHWZ1aIb/TbKmYpNo1pY7lJPPsS
uDTeUS7ucaw+XSlLMWJsVI65VQrbOdaIOTvXmlAr+rRrZyn3mFPNpeYgtXLJ
0LJqZt9dB+rGN9SJZ9SOPv8V+w/Nf2f+M/4/QT0UtQ==
           "]]}]}, {}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136, 
         151, 166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 216,
          217, 218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 237, 
         210, 195, 180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 229, 247,
          15, 243, 235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 234, 
         246}]}, {
        GrayLevel[0], 
        Line3DBox[{606, 250, 597, 462, 265, 280, 295, 310, 325, 340, 355, 362,
          376, 390, 404, 418, 432, 503, 630, 446, 604, 525, 447, 448, 449, 
         450, 451, 452, 506, 633, 951}], 
        Line3DBox[{252, 251, 512, 606}], 
        Line3DBox[{252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
          513, 602, 264, 607, 464, 279, 294, 309, 324, 339, 354, 514, 603, 
         826}], 
        Line3DBox[{489, 375, 637, 484, 592, 787, 1069}], 
        Line3DBox[{403, 389, 489}], 
        Line3DBox[{403, 417, 431, 445, 527, 605, 459, 635, 511, 458, 457, 456,
          455, 454, 509, 453, 634, 508, 638, 775, 
         929}]}, {}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
EXPX6HpHwOfW2skO4BHTuv+xr8Fnz7aXSj64kS5gmj263KFz6B3ueYm3H7Xe
+B07f9bJHsX2o82WVzSe5zvY1xsDHp8bXGbnpS/Hm2qc73hOwnMTnpc8olsw
n5i9smzZ/j73eY1+4BFzU0JJiCaf+6ftjWD12XtNHGSm26kz4NM03XE3eHQ8
NyIMMi6kYzz4/ODDmawuMf/RdNsU8Fm9yYoqJqUeMR8aNW4LPr+5OrBa3Kd3
BMyZ9rX1bc/cU3SaHFUNPGIGLniscX/PeOHaFjyuLS5hz5sTYp4zn6e+sWD1
6Xor3vNNn71qdmX7kM1DS+YzbvVr5jO0/ghWl5mvm41+c3/nnZfk1mdJlBPz
GZxYOx7SYLKjRp/15220A4+YScM6TQefzluv6YNHzAKbFebg82lrT2PwiHlw
gHVJ31KfaSdsr7RadkPAND143mttz0yuT97zu/tTT7ZuDu1+3vPN53fe86aR
QzCrz96W0zze3I94PnO29PkCPDoVug6EHGvurrE+V4QNjwSPffu4sfrssmbU
afC56fJCtg9hNr/xRTT49D1twOoSMzg2cyr4DDC1YB4xq80uaAc+N/i2qgoe
z23IrQXZIOmHYvA565Djb+ARM9HovWngc8BtB8tEn9+F+UEtFZAbQ2qkNXXM
UmBdYp1ifT6KM2YeXe3mM6/6fccyn3WzM34Bj5iPZ3Udpmk/+jCsEfOIeSC6
L9vfO7Ueyc5JmEHXr7PzUpu8pDjwePjrZRGQndLaBoPPUTW9Y8HjHqu14ZBL
vht3AXxev2IWDB4xh33XNBF8Nk10ZusmpvO9GhM1+fTu29gIPGI+H3bAEOZ7
QM/Ui+ARc+qoP7zBJ3pEr+izxZK9Hz7cnCZgVn3cvaH93Cfc93VXB+24NnS4
vYA5xerkYHhf+mmHEAu4H6vaGLFzbO4Wgd2XlQYJxwOq/CZg1l5XHOPg9oT7
3iAneMT6mj8lC5hLCwPyXoRnK1JbftIHxo25pfr5MzD+eM/h1fqtuCDUtXr/
pW1pWjaYNXTwkscKfbsdV2F8mKvKxsnrnzfOwXbzsqHfIA//55A3V69zgf7b
2e24Av1i7inrf0tRbVafv+cPNH+zPvE68brxekdG3TCC8WOa23kNhv6T2nRL
PeoxUMA01DcJgP53m26pYleYKmD+4V7H9/SUbMVHg4MUMb+cE2ZXTbWGrBbm
e3Vv0hNFWPyrcZf/dl7AvPugi/Ocak+4/R9vMcQGPo9Z/Pco1s+Amdn68H3R
fi1eDypNYYAb+97sXw09oF9MPfePXaF/PWVbqJq5xIkTJ06cOHHixIkTJ06c
OHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixN9tLmrE
iRMnTpw4ceLEiRMnTrycfKFqEidOnDhx4sSJEydOnPg7y6lRo0aNGrVK0Hj7
0p/F37XxvGv9U6scTdfzhrh6XtH5pf1zp3ssGL91e4YCUxt/O62yrc8VbZWl
fv7q7a/rJfRh7L6iLJPD4u/n8YmOlpbF/hnC07Yutj13ZWjl4s9r46vMlZ//
zUHZnzZOjRq18renoW1CdyZbC++brT5VUpIjaOMrzNanbLesZa38r1yt/K/e
nKJXsesf88eASUeSrRXauLLlCo4R1RP0WkyyKh+nRq1yto/69If6FrDetXHV
xlsH3t76cLmgn9px8nj5xvn2xi/Xf72lR1I8FLXwnKaV67rJ9e9xtFlqgZ10
H+FxXbcrX6j3zON5iTkpHW2lnnlc123l0wFqx8njqu1/X/84Prve/dXuv2KO
4zs9/7MU4/ZYL9q47lpFzw8m8RveOE9p47prOM6y+SoZv5jjOAMXb0jZbIn1
ro3rruE49+eq9y/mOM6ZNQ1TOraW+lfPdddwnCX56v2LOY5Tdb3XxnXXcJxm
nPGLOY5z7vIHCXo95yZo4/h8sjPQHJ5XFNo49qP6vMLnctdP1fN9rlZulae+
Hx4f3PHbtXoTliSI++Hx8Jfq91keV11fcrVyuecT1fmfq5WvLlQ/Th5XnZ+5
Wrmuz1f4+bJ6kdS/mIs/r41jP2X3U9K/mGM/rW60P6SnJ30+FXNdrz/YT4Nn
6v2IOfajeh7k84ruX6rnNT7HfsrqRdK/mGM/emrbf3+uknveVl1Pc7VyXTfR
fZHMIx6X57/yNDz/ie8LjycHmKt9L8fjla3heV18XTwu9/1kZWty72/ZeUVy
XTxe2Rqup5z1R8IV+ervI49XtobPD+Lr4vG/+v3F/V58XTwu9/6acfrh8fEv
1PfD45WtifYp3r72b47X01i5/kmed8S8sjW5+zte15rn6q9XzCtbo/urmeN1
fVCg/nrFvLI1vC58H6yN/7/cX3z/oY1X7P2M7sfTcJf68Yi53IbP85z3RRI+
b7f6fZ/H5bbKdh6Te34om/+S7+VxuQ3fL4i/l8d1/fwl936V7X+S7+VxuQ2f
nznvxyQ8NUz99/K43CZ6ryWZ72KO3xf5TP16K+Zvazy6Os9U9LxhE6J+PGJe
0fHg+1ptvLL6ecrZr8WcmuYm8sbzLOFlz3MS/2I+t/WsBL2Oq6XvMzkc93vx
usTj2dut1+p5SH9n4XG5/ac2mKn2dxwex/nAWf8lvKa7kDJVze8UPI7zX9wP
j6s27e+55Y6/c+2MBL2ekyQeeBznJ+f9oYTjebS8vOzvGwiY2rhcP1jfnPcb
HP/l/30BP4/nF238eHdj+B1T4pnHG3M887hynqr5PYLD5daPbxshZYKaOudx
ueMvq0PJ77w8js+3nPPtWx9/2X2UjJPH5c4X/LxqvfC53P0C+1GtFz4XPYfy
nlsl/av65nPsB5+ftHHsR7Ve+Lyyjl+1XvhctI/z9n3O/V3Nub+rJfcXn6e1
8Yr2j8+j2jj2o7qf83lF+1fdz/lc7vqP/eipbfz9BZ9HtXHsR3U/53PsB58v
tXG5z7PlvU7ixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHi
xIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHi
xIkTl8e1/7mK/Xunur6Ot/U9xIlXhOcqOH9Owsvmj4IzvyQcvy9u6+duu14N
6VFOrhj7rPkOm64Xxf++4p/FhRV+5i6mnl0PlZOX2w/242fUMzzkkoukfw6X
3b9MrqgT3u3WyzEXxf/eKY/L7v9Z+PTYM0ciJf1zuOz+NyY1/eaf085J7i+H
C4cWZVl9ctlZ4p/DZfuX23+PL88N/H7kecn4OVy2nwNtnZuHzPSX9M/hsvvf
vvxzq/pumyT3l8Nl999lQ6Ph0+yl95fDZfdv1/CYU+t2NyX9q+f/+f+64bmC
fXCUx7IdMyTroZiLzi0KbfztjJ/4/zfX3XwRnRO08rLPy57vMnlFz/O63rd1
dN1yx/1fj4s4ceLEiRMnTpw4ceLEiRMnTpw4ceLEiRN/J/i/APz64KQ=
      "]], {DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["y", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], HoldForm], TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {{0, 1}, {0, 1}, {0., 1.}}, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Red neuronal\"", "\"Objetivo\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.8]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.8]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.660187213874543*^9, 3.660510673498283*^9}]
}, Open  ]],

Cell["\<\
La compuerta XOR es un poco m\[AAcute]s complicada, y necesita una red con \
una capa oculta. Si no se agrega esta capa oculta la red converge a dar 0.5 \
como resultado en todas las entradas.\
\>", "Text",
 CellChangeTimes->{{3.65992643309614*^9, 3.659926486361459*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"td", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Datos", " ", "de", " ", 
    RowBox[{"entrenamiento", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Datos de entrenamiento.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"td", ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"feed", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "td"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", "1"}], "}"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "inicia", " ", "una", " ", "red", " ", "neuronal", " ", "de", 
     " ", "2", " ", "neuronas", " ", "en", " ", "la", " ", "capa", " ", "de", 
     " ", "entrada"}], ",", " ", 
    RowBox[{
    "2", " ", "en", " ", "la", " ", "capa", " ", "oculta", " ", "y", " ", "1",
      " ", "en", " ", "la", " ", "de", " ", 
     RowBox[{"salida", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red sin entrenar son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrainNetwork", "[", 
    RowBox[{"td", ",", "2000", ",", "4", ",", "3"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "entrena", " ", "la", " ", "red", " ", "con", " ", "2000", " ",
      "iteraciones"}], ",", " ", 
    RowBox[{
     RowBox[{
     "sets", " ", "de", " ", "4", " ", "elementos", " ", "y", " ", "\[Eta]"}],
      " ", "=", " ", "3."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red entrenada son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowCostFunc", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FeedForward", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Resultado de la red neuronal\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.659926458268635*^9, 3.659926462420582*^9}, {
   3.659926494755622*^9, 3.65992651798256*^9}, {3.6601849189124985`*^9, 
   3.66018492031876*^9}, 3.660185130021467*^9, {3.660187322400281*^9, 
   3.6601873228206015`*^9}}],

Cell[BoxData["\<\"Datos de entrenamiento.\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], 
     RowBox[{"{", "1", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], 
     RowBox[{"{", "1", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], 
     RowBox[{"{", "0", "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.659926523336327*^9, 3.659935709809491*^9, 3.659974823960455*^9, {
   3.6599757556691027`*^9, 3.659975775590789*^9}, 3.6599758512513657`*^9, 
   3.659975898540893*^9, 3.659976517642838*^9, 3.6601837967755013`*^9, 
   3.660184175907095*^9, 3.660184920678155*^9, {3.660185131398597*^9, 
   3.6601851369007473`*^9}, {3.6601873167266507`*^9, 3.660187323432461*^9}, {
   3.6601873602834463`*^9, 3.660187368863626*^9}, 3.660509268114694*^9, 
   3.660510673919313*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Los resultados de la red sin entrenar son:\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673920529*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.582204}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673921281*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.532365}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.66051067392218*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.631832}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.6605106739236803`*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.582087}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.6605106739252157`*^9}],

Cell[BoxData["\<\"Los resultados de la red entrenada son:\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.6605106752077703`*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.0405141}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.6605106752096777`*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.963919}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510675211481*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.965792}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.6605106752133493`*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.0365923}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510675215122*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.0055000000000000005`], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJw823tcTPv7NvAihBBCEoqQDoQiJBeSJCSlkBSVSmk6n2s6TzXVTM1MMwlt
JSHJOUkih0RJQgghJCEJlfDM8/rd6+sfr/de3eta1+dea9v+2Oq7vK1cBsjI
yNQPkZH5/7//36/O5VU3iobNiK1cTv8AC/2ztaasYCyPwLg7zvPUGStir+uM
0hFjGCtBPN3z/cNhjJXh0F5SbzKEsSpi/irHuw5irIYJQ/792CjHeBo4gzWU
RAMZa+Bsc+mJIf/zTDT/61NKG8BYE9+ern465X/Wwsc218nnZRnrYNlc+/0b
/uc52D9O07hdhrEe+izKIxL/53l4/Wrt2Jn/83y8fJhdlPLvKnkBDvJr7Wr/
MtZH/8KKgaP/ZwM803XmbvnDeCFuLH7XeKCf8SJE54y/9v43Y0Pc67pjMO9/
Xgwdj2DliD7GS1BfOHFjTS/jpdjSNbJS+X82Qk7RBCu3HsbLkGls3lH6i7Ex
rH6ODBz2Py+HW+ukJ/Y/GQOac3x+nfpBZgMKB2yuDmQsswKxlpsn2HUz11dg
QIJ+W9F35vpK7PSRmTSAMXslcqf1iG27mOur0BKUue7kN+b6KryaGKk6kLGM
CWpiBD/sOpnrJogd+bqy+CtzfTXyx0rc5BizV6NPTuXJ1i/MdVNcy37/s/gz
c90UCwbmnxnIWGYNhqlM+GHbwVxfg7AC9WMnPjHXzbD60NVLf9uZ62bI8pcb
s4mxzFrs2ql84PBH5vpaPD5vYPq9jblujmqTgp6VjNlSn6w8xP/AXF+HU3fe
zXz1nrm+Dq6jIkO0GctYoPrvz5jAd8x1C/inV86pbGWur8euPHM3ecbs9Zge
MWDSxrfM9Q2QLLacL3jDXN8A/fUCyZPXzPWNCJGbYTSRMXsjCoZYDNrawly3
RNnrVS2iV2RYYnuyQWnDS+bnLfGuyyBYgXGlJWxFq4abvGDmN2Gpgol9SDMz
vwkOB2W3FD1n5jfB7bXm2+ZnzPwmzLM0/TKMsYwVnn+sclr4lJm3Ql7D+1k7
m5h5K8T8uqcV/4SZt4L1OQ/rwsfM/GY8COekVT9i5jdjBqfy+rtGZn4zEBX+
7N9DZn4zqnS/V4xnLGONMwYzt2o1MPPWaLj5ir/kATNvjetWJZvW1DPz1mi1
6mBb3mfmbfC3/9iQLXXMvA3uDr1aa1vLzNtgV3BFmc09Zt4GOTY/z2+8y8xv
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
hPHF1SFkLh/XFjcYxLiTeXyEB/3Nr91KFvBxQF6tc5Y5WcyH4/BLA/hLyDnS
fYpY1fLa5Fzp+e4Zo5s+iZzPh2JGmqqGArmQj/06vTG3+x3o+5fuXy7ZIuQz
uYSPRvMcl8Uvyef4uL+uuGzIfXKpNF/VybD1KrmcjzmWwXfrSsiVfKSefOp4
+z/yDT64b7jvajPI1XxYLrls+iaWfE/6flif8pELINfzce5542Z9V3IjH0uM
S5/52JKb+LB3HdxdbkZu5mO+Pzd13BJyi/S8ghYJw7TJrXwkaCv1flElt/Hx
sGTDUe+R5A4+4tbNT/vzbwd9/3x8mjI7R/yN3M3H60+Xr+ItuYcPXh3/w49G
cr/0+/jjPaD0FlkmA9XJi/8llJLlMrBN7eu9XcfJ8hnQu1m8bV0OWSEDbjln
s5BGVszA06M2fivZZKUMDEwZ+sLSl6ycAbUNjjf2OpNVM2A0bcjEzC1ktQwk
zLhdc8uMrJGBIM34O4OXkjUzcMtvxaDNumSdDCilTdh3YipZLwNzBxp3jxpD
1pfeX3swhy1HNsxAcdfziX9+2tP3n4HTh1dnx38kIwNvjr3tndhMNslAtitr
dlkd2SwDf79eneh6jWyRgZWvr16efI5smYEAjSCZ1wVk6wwsqRj09JSEbJeB
I5L8hclcsn0GxtscGcaKIjtmYMYoX1MnX7JzBiz1U5/vcCG7ZaDJgn/ZxY7s
mYH0u3pNwevIrAzENhtMzzIm+0t/Xj8mrXIeOTgDc96MVPihQQ6X9p/Ukaqv
TGZnwGTMisFRw8lxGZhyfd2exr/b6fvPQNoNxzz9LjI3Ax3qn4oOvSPzMhCo
4Rk47ilZkIFmrbAu4T2yOAMLw2+OVa8k52RAOGlk7YWz5NwMaOXojrY9Ss7P
wOafox/K7icXSm1fMehiGrkoA5Wj1uUExpBLMtC56F0SAsnnMhB6se6akge5
NAN2Ax0Wfd9BLs/Ao94/L55vIldm4Pcl3WN1q8k3MqASxubeXUyuzoCzy4Gw
Bl3yvQz0uy/3eKtOrs+ApqqBxd9x5MYMsJIdx00fRm6SnqfyxUub/m6j7z8D
3rYrdJO7yC0ZKHir4nzvPbk1A8+X+lopPye3ZUBygNPhdZ/ckYE7Ladn1laR
OzNQZmX9w6CU3J2Bwow2i8Iico/0+/LqVdf4j9yfgVdl092PCckymehaPH6C
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
qTeSg7PAXxQx724dOTwLnbIbDYLvkNlZ0JT5uFrzBjkuC+9vlTk+ryBzsjCn
cmEs/xKZKz2/WQ3Hzc+ReVnYPGTQo8GnyIIsqMw3/3fzGFmchcYVU2dx8sk5
0vctQ858/SFybhbMjSNcxmWT86X7mDQqqEVALsyCx/mV4cXp5CJp3vo836hk
com0b0OF7eZ48jlpv9czZmuxyaVZ2Ht1b+vAMHJ5FobZzExsCSBXZuGt7peR
lSzyjSx89XUIObyXXJ0FwQelG4mu5HtZGPP+dIe3E7le+n5tb+rcZk9uzELY
Ld06M1tyk/R+c7fFLLYiN2dhgbb8cN315JYsfKhvdZluRm7NwrzyQzzVVeQ2
6fs3+BNH2ZjckYWtpmEWExaTO7OQwxnyVFmf3J2FIMu1OpPnknuy4J3Rv0pD
i9yfhbOnX02eM4MsI4Z/+NmLS9TIcmLMnr10lPkksrwYYzYbTbMfT1YQY/yv
yC+s0WRFMa6zan04CmQlMb4Edh87PISsLMZt5SrB1QFkVTHulg3Te/XHkr5/
MYLHHgqR7SVriBGjucV7ZjdZU4yQdfKjNnwl64gxZQJvS3A7WU8Mbc+aVUfe
kfXF8N0namxsIRuKcSf60eAhzWQjMfTW7G1a+oQMMX5Jlq3xayCbiBHN1d90
spZsJsZzlyXdH6vJFmL4HFw6Z/YNsqUYoS9m/vG4SrYWQ/5nh8OpMrKdGIqt
7E0/z5Ptpfe786Rh+Wmyoxi6n9taUorIzmLYnTsZ8uwo2U2MvDz1/dp5ZE8x
EretXBV1kMyS3o83ivVIQvYXw0opZeocITlYDN7N0o1JPHK4GMXCg3/fp5DZ
YgTGmmitSSTHidEtPld/LIbMEcO0re/ryEgyV4wXSTMSAkPIPDFGSUz4Lf5k
gRiD5nuMWs8ii6Xvi/fxv5f3knPEUHGdtEN3DzlXjG8zHmn+t4ucL8bQc992
TnAgF0r3NzRVhreVXCSW/v36pvxwG3KJGBZHLwVyLMnnxChI55rJW5BLxVgQ
7hSevIZcLobtIAfFUavIlWIMOHZsgMiYfEOMN7e9Nk1dQq4WY23eo77jBuR7
YlzcNvKP4TxyvRjrPppuuaNDbhTj8fQSOXtNcpMYEy6ED/42ndws7aP2eitn
KrlF+r1cGPtHfRK5VYwf+y2+XBlPbhNjxrWb2vZjyB1i2L8tO9s/gtwpfb+S
3OMODSV3i9H0TzHHZBC5Rzq/ravnkwy5X4zCZ7nztXs30vcvgcXBVz9jOsly
Elw6qrv01QeyvARnJkzqX/6KrCDB4NilC488JitKYPdlxvuRdWQlCaru+MtH
3CQrS1DfcVPytZysKkEDv0zkeo6sJsHfTb9+vz5B1pAgUF3jllMeWVMCF/OO
b++yyToStLj/DduXQdaToMtDwel3Ellfgu8xdw9wo8mGEoTrds+ZFkI2kmCa
5srR5SwyJEjd579imxvZRILGhevL+3eSzST408GPzLMlW0iwcu7w+A0byZYS
RNfE3ftjSraWgH2+dtNpY7KdBENGlo52X0i2l2CD0sShM+aQHSVImHVH/90M
srMEBtfz+Mcmk90kSAtIVPUdR/aU4PR7mwbjEWSWBF4130+NGkT2l57Pa7Mz
rf0b6PuX4N+P5Y+vdJPDJahuvKW8v4PMlkBzfV1geCs5TgKetvlnp2YyR4Jn
BvNC1jWSuRK4aUZMWHyPzJPg1Wmtm1o3yAIJDFmLo9TKyWIJXnScWKlyjpwj
gbwkUUG5iJwrgXdN49OJ+eR8CYaXHjw6NYdcKD3/gO++swXkIglkvr81XMQl
l0j7fY/9aRZHPidBxOj2QodwcqkElWfnrg/2J5dLcHyUT4vQk1wpgfX02p0X
nck3pO/7GZfqZntytQSKJjsnDLYh35OAO/n12gXryfUS6Z8g43Y4ryY3SjDA
TXODZBm5SYJTA81VGgzIzRL0GRRVjJxDbpHm18cabpxJbpXA0VI+PnMKuU16
vs/9/ns+ntwhQZPxwJRZo8idEgR9+GEcNITcLYHp29Symn/r6fuXYGvzqN/q
PeR+CfLGVf0J7yTLZMPC7dvV521kuWw8wAdj49dk+Wyc3f89KP8pWSEbUwa4
uY1sICtm412ieER4DVkpG963nzt/vk5Wzkbiq+S9uy6TVbOxhCU79flZslo2
srMOhNsWkTWyof31avSTfLJmNn5w7mpvP0DWyUZMx4zgN0KyXjbklRY5e6WR
9bPBc3f//DuBbJiNf1WzR6dFkY2y8dz5w73pwWRk43T32ClXWGSTbJxnTx+w
zZ1slo2+IG5gnxPZIhv8wtvBB7eRLbPRaWQ52HQz2TobRpfyVL+tI9tlw7hn
xaVDJmT7bLzVPPl00zKyYzYG33MPG7KQ7JyN2pK/+yvnkN2yUdzVbRgxi+yZ
jRc/n2xcpkZmZcPE3eClzESyfza6Fh94fXs0OTgb7dn/2WYMI4dnQ+nP42WO
A8lsad6IRv68fgv6/rMRfG7epv/XMr3H5Xg2cADvVXhScwgtSUJzjJVCXuE3
kpbaMrZQ3ookOXQQHiNrJFmNJOS5D09SllRjiqQ5NrWUQpHeKITWG6WVorT3
/uP35/dzX9d1X4ffr087Ha2B6cCY7U9e07EazAwLV+W9pOOU9f3TuhJr6QQN
GqRM9x1VdKKy/27r3r53aVEDHKoydimmk5T3jnfdM/0mnaLBPc8ZzmPz6TQN
AjctWD0sh87QoN/6z+4NyKLPauA5KDpe/xc6W4OfZlsk90miczVY9SK5p89x
Ol+DKOPC1H7x9DUNjv294MigGLpAg6Zz1cXDI+kiDdYcm+c4IZwu0cC40+Gf
mVvpcg0KbWPeuwXRFUoezrdYrwmgqzTo/9fUkz/40jVK3pyHfSWtoOs00F+0
8fMrS+h6DTIDPjg+c6UbNDhhciBW34luUvpS2qFrN5du0WBAm+q0rz3dpoFJ
S8L2eBu6UwOr4SGbb02kuzX463pYwscxtI4Azajt1TNG0HoCbvgvn7/FmFYJ
WJTeWpIzgDYUkNY8Zst7FT1QwN+j78xEL3qIAGvjCpOfuhax/wJe/GA68GEb
bSbgu859I8a9oS0E6HXqzf3+FW0pYHHljtDyOnq84htVOROqaSsBb4r1+0bd
p60FWNzvWf2ihLYTsCDhdPHCW7S9gJ3CR/vMq7SDgBMLWzKGXqKhjC9UW/74
G+0oIM44Tmo+QzsLSP5obeybSrsKGN1/WWylTLsL2HZCt8c1kV4qoPuB7brC
Q/QyAbrxjbcdY2gvATnbJln+EUn7KP9/3RXkvIv2E9AzdHXmnW10gIAzd9dV
e4TQGwTY55m2Pw+kgwXUjdrdFepHhwl4Nijrf3r/odUCqhdm3TzuQe8UsNYu
4UebxXSEgGHvQ8eUuNCRAl75e/+yzpGOFtDUFWTQbw4dK+D+03y3zBl0nLL/
Ju8NS2zoBAFBR8PWdE+kE5U89DKZkWZJiwL82wNqvzOnkwREVe3zUpnQKQJU
OUcz8gfRaQJibC+VbjagM5TzHB9yZXJv+qyAFX+W7WjscWH/BaybPbh3eied
K0DS11+2oZXOV87zsCbUpom+JuDty8tL3r+gC5T3VlV23qyliwQYJy3zOfSI
LhFgmKSO9r1Plyv92R8QZFdKVwgoWbdycL9CukpAadXPoc+u0TUCTnbYxPye
R9cp77Vpj6eQTdcLyNvw+9MdWXSDkpeTZmbeaXSTALMva1ULkukW5b2MFpya
LNJtyvzpB1tNjtKdAlLX6jT1iaO7BbhW1sR17Kd1RLydEFjbuIfWE1ER3VxZ
F06rRFyKzQl9tI02FPGjU5/sihB6oIi5syYn3ltPDxExZfW2EffX0CYiGsfZ
znvgTZuJ+HPVWb2a5bSFCMETq+uX0JYiXt2a5tXsRo9XxhfUv+5eSFuJMK9N
Nv5kHm0toq+qsGKkA20nIjfx9Nhp02l7Ee1fp/Rzs6YdRAxxN/ph7UQaIlaY
u++OtKQdRRiduGyUYk47ixhsnj3llgntKmLlTE1FoxHtrqzXVtbL6BN6qYhJ
6bkXZ/WllynzjS69Xfsv2ktE5r9n/Hq060v2X8ST/Zo3he20n4g1lxdldTXT
ASKCarObbBrpDSL6L/8iLbCeDhaBxytrU5/QYSJagtVxz6totQj3AJ28Mffp
nSIy/PxX+JfSESLslpoFnymkI0UEBh1533qdjhYRbe/U7pBPx4qY8H2K7/4L
dJyIGwvGza46SyeImNfqFDXhDJ0ootfw8FnhqbQoIkR29LyvpZNEBIjD6idp
6BQR27dsr4hKoNOU9f58NrH+AJ0hwnpL5Yv5++mzyn4O39M9tYfOFpGl9trT
bxedK2JOzrtVIWo6X4Rq0NgT1aH0NRGPYoIdnDbSBSL+9lxpm72WLhKxtyks
0nIVXSKioQZTjnnR5SLO9Cz63NCDrhAx8dvRUXsW01UiWgcvtvm4iK4RESb5
f77dia4T8enu1l0doOtFHNq111w9i24Q8dOOc4Zd0+gmEedj9J0jrOkWEQca
R5X1nUS3iejdfTDp0Gd0p5Ifl8a8ERZ0tzJ/b5FZhimtI2HT7psFDkNpPQlO
9lvOlQ2gVRJGXVc/9etHG0q44xG4pFuPHijB3ONV76P/OLP/Ek7YH+iw+UCb
SFh+uGdseRttJqHF9FF8cDNtISFSvjpzcCNtKWFq329Nc+vp8RKyPGbbetfS
Vsp66SP2qKppawlvrUVVdgVtJ+HpVJ8bvmW0vQS1odGvg4ppBwnVkz1LbxbQ
kJAx7OVw9VXaUUKg33+OT8mjnSU0/Bbs+CqbdlXOd6l4ePKvtLuEkFnDzb3T
6aUSDqiMXMxT6WUSzn/0lmu1tJeE33pdHHZSQ/tIeKdfnBdwhPaT8KC/W4R1
HB0g4ZOh7QEffqI3KPcxTr351l46WMI9j5/lhAg6TEL55aYGvx20WoLlpq8X
z9hK75RQEBv0wCCEjpCwfYZq27P1dKQE34OVNpf96WgJBhcSeh/1pWMlvLmt
+zbUi46T0Nr8tHWxB50gYeacZn3bb+hECdvKmuyM3WhRgttFMbRrIZ0koUf3
xvVn8+gUCaG/W4wqmU2nSch/Hn7woj2dISF+k9Yg1ZY+q+TX1TUhYQqdreTX
13V81AQ6V7nPvQG3tlvS+RJORwVuDBpJX5OwcswIs7WmdIGEiZ+43vUZShdJ
OPXyZozXQLpEQvi8b1xWGNDlEhyT/zBY0YeukDB96+s7nv+iq5R+mGnivbsX
sv8SrjwWv13TQdcpfWopNN7YStdL6L31TcXW13SD0o9t9Qd2N9BNEs407Jof
95xukXAh5fBb7RO6TRm/6f2xc4/oTgmdb/ZN+6OC7lbeO/vTP6vLaB0ZX0zd
vbi1mNaTYXr1RKnBLVolQ3VkscO467ShjNtlG0XHfHqgjKwN95tWX6SHyOj/
pY/V3t9oExnmo/9enpZJm8kQDq8PK02jLWS4f5r+fdtJ2lJW8hC3foSWHi8j
PfafBc4a2krGqav/VW05QlvL6BulOn8yjraTkZgcOL8ihraXMercq9w++2gH
GXmf+RvN2k1DxrlFpV+FhNOOynkX9N54Wk07y3DS71j/fDPtKsNnTazLyCDa
XYbZh1/7rgykl8p4NsstWVxDL5Pxe4j7sCc+tJeMsOxT60d50T4yer2Znejv
QfvJuFylJ2d+QwfICOxp3PHOjd6g7P9infUXX9LBMuwnPbz8syMdJsPY7drw
mrm0WsaWxwe+tppF75RxJWD6d7um0xEypjmdmXLPho6U4Xns2cNxk+loJR8L
77n/MJ6OlVGkH5JYNYaOk6HjeSHTdiSdIGPcLs3BOFM6UcbAcOPZzUNpUcbP
4yxzvh5EJ8lINbry7pwhnaKc71itjrGKTpMxoCLy3g5dOkPJwy/pgc97nNh/
5XvOV0WuH+hsGf4+QY0X2+lc5X93DMot39L5Mh7Xj1EfbqKvydBzzn2q20AX
yIjyLDbY+pwuktEJr/a/ntAlMuIfBkve1XS5DOvLBroPK+kKGUfm23zmfpeu
UvIR+bLX7RK6RkaLi42wsIiuk9E10uT1Hzfpehk3HJM7FlylG2Sozz+8VJhH
N8lwMb8+ddEFukW5jzdrfcvP0W0y/nF84OiRSXfKyOkwrqlNo7tl7IufNjYw
hdbRoufbOaPfaWk9LfKnzynbI9AqLQwez7MafIw21CL15Ar7lHh6oBbVxxJa
px+gh2gRrNZZcXs/baJFe3bWRt+9tJkWYzeetXofQVto0R386dH4nbSlFtfm
vEubrKbHa5Go6+NXvJm20sJHE1AYEERbazElxvKuaj1tp4Vnv9MR6f60vRY/
dhpUuq2iHbSIfbq6tHUlDS2MuwsDji93mvt/qxipqQ==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 2000.}, {0, 0.1290022184489655}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.6605106753108187`*^9}]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx0vXdcz98b/5+SQmZGdkiISEZGeUlWCJVRZhIyyqzIzpaR7BFp77333ruo
lIo0NO2K6Ov7+5zHdT7f1+f2e//zunV33ud5zuOcc515nTPW8JDOblEREZEi
SRERsX+/r/Q8Q69NPbYQv7VxUnuWxDgJ9k9b+GSCZoAAfFGD5SEzDSeBV31p
l5xmAnGxnYNP9klzFshFDJoZapJJPG+25rtHXe6CnOSJgXKaBcQ/tckMbjb1
F9yYlpxlUvaG+K37r83+GEcIlj0yrA0xKSOeJvG7s2NaiqCbyP/9r4q42sP3
hrYGhYIdQTk35TQ/EH/ge142736lINrYbpim7UfiKm3Pq5W61wpGjDroYlJW
S3xzjmHWkx0NgpP582fayn0i7v35wdzgxCZB8eWecSEmjcR3pYw3zW1rFsye
X7K6LKSZ+MxV3+8Z3W8R3G1xKe3qaiWeuDTKIamuhf6Grpe0vK6EdbmQzvgd
tO6HlcVdrjN4yqZ4jx2TnUhncOWly8SvRTmTzuBaSxNOZ4p5kM7gxy1slkqe
8Sedwe9bmbTY34ogncF/fJ9b93xjCulM/HGO2J+LhaQzeIWNaO8xCZWkM/hB
jdOvZIfWks7gB67o9fu8v4F0BpdRTX1wNb2JdAbfdW1NYeSvZtIZfFvrQ+OG
B1xn6Kcb+rGXYaInhQP/c+BdamaoC/2N32svO14N2MN1Bu/9bUX9zP5OpDO4
qdiwo37+zqQzuJN4jredpAfpDB41LvG7lbU/6Qz+t7/tqOKACNIZ/PmB/Mag
symkM+Xrc8w5d9dC0hm8Ku/Y4jOtlaQz+E8b5cu/JteSzuCbzz2fMt28gXQG
z5q9es/q3CbSGVwk0sH61R9e76HTjWF7o44v5/UYPKU5Rv2Zlif9/+CCk2Mc
5I660N/49ZeZc1NClesMPrlvSnZjmyPpDD7v7g6xi67OpDO4p7ucrlRfD9IZ
fE77gritT/1JZ3DFKZs225dEkM7gFyo09Ba7ppDO4C97eu9/lFlIOhOP7Zl6
vG8V6Uz1qCZgcYxqLekMfq3RacamCw2kM/jO+DVJYq+bSGfo0Sc04tOdORGk
M/ik0BcqL6r9SWfwJxXTXkWXeVC84B22x2R8p7nQ3/gN1a4/vkbaiXQGt2w+
O+9ClSPpDG6zdvWoTjtn0hn80fwJRoMHeZDO4Em/Vmo9cPcnncFvCNRE//yN
IJ3BkxtvWi7NSyGdwT98D9uQ0lpIOoMfjgnaPGNCFekMXvd6kc2BtbWkM7i0
Rr6y8c0G0pnsZXbv6duUk0hn8GrtVU2618JJZ/CnP64+W37Rn3QGfyH5S9vJ
xIPnk/Gfkn1/bGrmdgO/FWFyP8oauc7gWZfHL2pJdySdwdVOaGvIPHAmncFF
j6k0hQz3IJ0pX/7FK6aG+5PO4GP69zvZPCGSdKZ29q7nq5iOFNIZPHzX6NzZ
g4pIZ/DjBdPivi2oIp3Bf2uayIsa8n4X+RO7ZdosK59HOoNvmy3ufvVpIukM
rtA5cMHWqjDSGfxW6J+/a+T9SWfwS5KB36b8Vz8ILvVkTLyUD7cb+J1UEyHh
ksx1Bi/QilJQDHIkncE/j5AaWnTTmXQGD/Ob2at1rAfpDG6xafbesen+pDN4
oFbcpKNakaQzePCMrcN9xqeSzuCqk6cY1swtIp3BT1i7bonU4eMk5OPePI2E
c+qlpDP44oFV3V3W55LO4Ge6mhw+SCSSzuBbl7rqHVoYRjqDX1k2IfZelh/p
DD6orOdt5efulD7wuI5vUZGHud3A74Zny8Qd7bnO4LLjfY/PfelIOoN7zpy/
aeplZ9IZfEdMXmvkZA/SGXynV/uu46X+pDP456+rL1ibRZLOlJ5pWrMHrUkl
ncFTVec8KtpWRDojvQo9r5+TGMHHSeCrfpqNjnlYQjqD98g+2p62K4d0Bo+J
C/mlacntOHhKVczuDQ6hpDP4s25+Zj/N/EhncPfJ960ezXXnujDeL9ewRHc2
txv47e12wD79NNcZPEGrNL2XtSPpDD5TK7Ji1Fln0hn80tyh70coe5DO4B90
crtNaPAnncH7b3jSPu9FJOkMLnHMf9GXE6mkM9IVWZI9zHpgHekMXvhrxqT8
uPekM3h/v7pSjZZi0hl887mXOY4ns0lncI15XnuffIknncGfPZaSK+kdSjqD
R6yWbtUb50c6gy826nNuQYkb5Qe8XsHGM+m3E/2N399x8z/038x1Bm8Jje7+
0sKRdAb33/HM0dnCmXQGd1j/dmafBR6kM3gvP71eM3/7k87g7pU6vc6mRpLO
+L6Ry9BjR20aSGdwl1knx6tl8nEneKDKJdERe96TzuAHNmXrzF1RTDqDP7Rr
y5zyMIt0Bj94oPa5l0k86Qy+vVChLcEyhHQGXz39srqqoy/pDJ7Y2OewyCk3
yid4WmLHob+JTvQ3fu/7Rcsfnst1Bj90MmXqZyNH0hncd/PEkLgjzqQz+ImC
2WtvL/EgncEnLxBZ80KKz6vxHcu/OluaXZpIZ3ADNeWDMrsaSGfw19GjdFdZ
8fEo+F2FO5rder8nncE3Fip0j3Pi4wzwxyM1vHTCeT8KfqrfTeMdLXGkM33X
KKf6Q0sw6Qxu49e4cL2EL+kMfnPU3OPpsm6Uf7LHQ3I6vtxyor/xKyrrPqxy
KNcZfHbV4+MdOo6kM+WrR+9FBw86k87gWtX9Pe3WeJDOiO9yn7yI7/l8Pgme
ZFY6bMitJtIZvGXalHWzZjWQzuAS0htTolX4OBU85Fl7hL0vH5+Br/rof7hT
jI8/wKt7jG3pUZ1BOoO/PPUz99axONIZ3Pz5sVs9jINJZ3C3r72mJB32IZ3B
PQNKcy3TXUkX8Dj/G/42+k70N36HGykHbmh3IJ1p3Dfp1NwQdUfSGTwgz+Ki
815n0hn/35kDr0bHnWghncH9zkq/e5XI55ng/j/3N6ofbSKdwc+darkSI9ZA
OoNfKJId9aKxhnQG/6I08vCQ9XzcBi6rYDxIas9r0pm+G9s0apZ0BukMPrIs
QXvSr1jSGXx1dpDy35og0hl8sETqUb1Kb15fGT9yr6uq47gr6QW+WbzyVpa8
E/2N38J4idlZpQ6kM+VXNrNz7AxH0hn/rvnk4hiTEq4zrT/Z+Lt7Hm4hncEz
W284JwTx+Sf4G9UtP/dubCKdwc9OM/num8/nA+AS8w+eb7OrIZ3B6+8vPdj1
uZJ0Bn8y68PWXplFpDP4Qv21YxI100lncOcpT3a8GBxLOoNLtpi5PTMO4vaO
ca31R65V6niTzuCzOjukFce7ko7gB8Ty+zz+weszfpf77Ju4IMpBMNXyp0DT
tkhQE94jS17TQbBcUiK0xcxfUP/hnr6tXClxC/HzVaqnIgRuUxxOymk2EL+7
bs9w+5QmQY+qwz00bZuIG8doWCzraKZ43nedyAo1iRRsfe8WOO+Sv8Bp1Yxj
ZSHviMs0VLtPto+geMAnfuz0PpDVJNh1X3DPpKyFuO/v8ZemdzZTPMbaFsNM
y1IEJ8pyO6tt/QVKm/cus5V7T3yu++317skRFA/4o5Rf8ZMLmij84QH68iIi
eQIxjdaZza/8Bbf7zikMMakmnpKQMz+qMYLyCf00ljwKd64Ip/DgN45MEt3g
7y9oSuhuUBZSQ7y75Jpow4GRlB/o9Ois65R7M8MpPHjpxNEyI+L9BSstCpu6
uuqI+xe0LrabF0n5gR6zJcPaXG+HUXhwEZt0RUG+P5Uj+O1ufnMP7uTxQI8R
tnISFnEJlH/wlYe+mnq2hlI84GVv1onGv/encgS38rUakHc9kuKBTudEHb9t
nJ1AuoCXbF9ntWdjKMUDLqpVucX+qz+VI/jsZ7OWpQdEUjzQz/qtXraUbzzp
BZ6VYpHkmBBC8YBPEjkn8U4sgMJDP+t7StrHFeNJL/Dgg4n7ps8KofoAPcpv
K2XJPm2i8OA2WQ927/OLI13ANcK9lhV7BFN9QL6Pz2uamnWO6wi+99Pw2Wkq
cZR/cK03qVn75Xk8yJ/n05YJS6KaqXzBR/cvnWtuxPUFl7108ubbK7GkC/jD
q+d6RLoEUX7xWypuvdXP1YnsNri9teOoxufOVC74d5PyaZYF44NJZ9qXKdRJ
7/8ljvRFPA3f/AuX724gvRBe9IpO+8QTzZQ+hDeyGlA78QHfpwBXlfCLfJfE
OfR4W39d3cCKx4N62ici9O6HK3zdEjr9kT18RbY2njh0qss93ldnMK8PiG/n
tuUyscf5uj24/NsPv3/4cHtE8+9nesMrZJspHQg/YuqyxIaGT5QOsuf3+nnX
hyRSOPz2GPBjUE0GTwfC+6fMH6Qy3pHSSftEEh2Hv2g4kf7gQ7YvrL2S1Ejx
gK8U69Z9zX/pifSuWf9rRX1VI+8n2L8r7Xpd9cmT6wvu7TL7Yt5i3p/hO3sD
O1qTkh0Eb/MezZisaUu/D1b/rG4JcBJYqh8LCTFpJX55xZSvD/6lB3/j39+v
L3l6xLuF/sav5mm1K9cSHajfR3rXXVZ+eHE6r58Yd4gfmeOhvSCY+l+EX1Xd
rcdcSz6+AZduHDK4VLeF2ifiMfw83XPpab7Ohfb6s94nSHV5MNkNjGt2Fl8K
WqIbTPEjfHbI0YZ1Z3l/D25z7eCd1g28HiCeczo7UvTP83Uf1DvXB4Pc9+0I
JjuDcVN87FRbzwN8HoRyK5Dqc7jXiWCqh7S+PnW3xpVLfNyOdj/CU7fPmLvB
1E6gd8Fro9wiu2Aa/0DvFve71q7/7CHqIXQSSVq45FFoMKWb1sfOf0r4OzyG
xkvQb+OGBZ2OScFkNxA+bVRcSHZ+MOUT+Q78OinMxS+a8ol8558cETNvRTSV
O8Kb7zO1GFQZTOVL62DSaxefaAomXaDTlzd+F33fR5Eu0OnY8IHZXaejqHwR
Xt46f0RHRzDpRfY4U+v4uOFRpBf0m9Hnx75+4ZGkF/TbYugRHKMfSbpAJ1VX
B/NJnXw/FDpNrpD5uOTfeAz5RL4NDIO1pJZFUD1Deh8MdLKaP5uvc0GPc4M+
jbBo5uMihH/ZTy3vzEO+v4B6WtmwrUtuCq/fNE42Cz/QIcv7afDAVLPD6s1h
9D3YpXkfhgzP0mkRtCirVXd1NZI9uHXk+CTrdm7n0R6Dex6q/bi+RbC6rvdh
Oc1/dvlRWYBpWYjg4O9u781+831AlNvsgcMjdOTjKB6U4+qqDMlHEiEUHnqe
GHazaYvOf+3vsv9P2kD7zCl5/v+Dtx59JD5MPZziQfp/LJbXVBrtTPaL9t99
nC5tLOZ2D/pMMjCoDE/k9hn/n/va5DvKwdyuIp726nFNrkecKDz9+0Cly/eL
ud1HPP7m7t/7JHO7iv/vTLLEnooPfHyM8rw/3LhGtocHcdr3d3i6NjPYm+on
7Gdzu31h1OIUqs/gHZ/l06L/xgmGqv1+Kaf5VrDVWr0rzMRTEHnmoM7+S3ye
gu++rllzwfYwHz/gu4Wn6pzDsxoFo285TbaVa6Z4LiRlb+72i89fYG+ODvhu
q97bgzjq72TZBe0iyd7UXvDdi1N3qz/dz+0UuFG79eztw+MFhc6Pw03KKgRr
ZvU+JiISJ9jXQzzrlDufB9G43mZT/5RTDcTxXanfjSJvixpJf8RTpPs5qv6/
5kewZ3vsWr3/9PcgDvu30upwR3mRN7VTfHfUbOXPTbb8XAS4891DuVvnxAtW
SDzbVxbyXpAivszFVi5dsPjJO1XZXG43UM69rPJVdId6EIddbJ/04Nu2Gm9q
10jnG890xeBIfh4AfFI3/bpwnXiBS+S+n11d1YKXB+IO2srlC67GVYjo/eB2
Cd+t0CoYKB7oT/UG5fZmzaGRGTWJVA8QvuGtmvmMicEUHnZ3o4ecy5ySWNKH
6oVp1tJFoz2II3yZmNRjq5/eZH8Rf6301hXfPvJ9dvDK4on5ZofiBd0Pz70o
p1kr2FK07UpZyGvB3QINy/Ej+bwM3x1/XeLlzvX+lF+UZ0VNysa76/h+IsLP
qjhYq+0WROHRnobsOxh090cM6Y94Dn6YJ5I4wYM4wl8ekeOmKelD7Yj6H4OD
t137plK/Av7uWtcHm5vxAkM5if6atvXUXpW2nBxwUYPPB/HdcXLT/Ht3+FG9
BI/xGm7ZrhhE9QztRvzWDMete/g8F/XLLruXQ6miB3G0vx5HO9v8h/tQO0L8
jecC1xTMTaV+DnzzpJlmvT3iBXElr5+blDXQd9uXd86yOMDLBeXv6FbUWdmc
TRztpm3hlAHSr1KpvJFO8QkNS6vt/ag9gF+vaIvtCA2k+o129lzq7vDCND7v
xncXeqmdsJrjQRzfNelnvjdC0Yf6FcT/+atYybFdfL8V/NLaGR9qUuPJHuK7
B7Pm6Yvc5+WFejF5jV77QIls4mivf3Ta70Y08vqKdG7sf+1u+iq+fwpeF96R
PmVZINV7tO+lVrc8vynxdQB8d0iD/vtIgQdxfHdf/6P1O9V9SGeUv0vPFbub
5LP4eJS1P0Wvv5krVPm6CeK3FdvXpP7Nl+o9uP7bSxP2lARQPUZ77aG/Uvv6
ixDKL8phn+KBTVu1MomjfXxUGTbYzjaZr6ewdDofMv/+ZL0v1Vfw6LI+hRdM
A6j+oT2pTd3hZjAghNo1vjtvas9RJav4Oh10OuR6/2x5Bh+HIPy0Eyrn/V7w
+Qytn3tJDny9gvcjtC4x/XvGWssM4gj/7m28z4OWJCpXxF9wwue0UaQP1Utw
82RNNX3JAKpnaGcGQe+bll/n43x895h0/yFTR/J9IvAf34/vaLJspP4P9ffC
cotJ/U7y9RO0g9LU7BY/73TiaAe5S6p+9VuXROWN+M0Hz6s/ONGH6hl4xm5x
pTRnf6qv+G56cJ+2vj2CKT3on1c0LGy4GtZM5Yr0bMjs7n7+sTfVS3D9Q2E5
nsv8qZ7R/NUsdM7Vq0HUjlD+x7YqLdaO9haEX5sqLSJSQuPY5Q/Nu704z9dd
Uf6fpVcutJKKF5h9SZ+qaVtO4aePzg2uehhB5Yr472xfMTorr5HG1QjfoCjd
91dGE7UXlNvMsROWvM3ypvh72bnd1LRNEpQucz2vdIev06I8K7OrQ7UnxQtk
vGeO17StovCFI7+8XBAVQeWE+HUrlmhXlzTSuB3ha+ZcPBeZ10TtCPbp6v3A
Jsl33hS/lWl1bFlItuDUifDu417w9V70P9X7jl05tyReYL5T1M+k7AOF/95q
6TP5A18HRvw3fDdpDx0cQBx2feVX6xs7jYNpPP1nzJ2OEJNCQc+XTWv29uLn
IWGf1L6nfSxr9qbvInyLet2so958PRnxp3zw6ey9M15QNDhf1VauhsKvSrVa
5CnJ15lRX9rWnh4/rS6I6gHsk17cBft3u2OpXFGP8numVcRvC+f7+ix8/pKx
tdpd3vRdhF82ri1WNpqvV+O7MkufHmo7Ey9QzniZHmJSR+GXRxhExk3n/Snq
0ZyWgVMf7Q/i501Z/f1e36Cx8moMlTfql7LEp1k6oWHUjhA+t3dxxL4BPvRd
hDd72n+rYjZfD8d31Tcfm7P4WbzA5qzpxrKQTxR+x/1bN/Zv4nqi/r5w79m5
oyyH0gne602vgK4/qZRO1Ltl/a5GdP/I19VRT7dV2Jse/hpI9Qzhb7r0XlA5
JIz6D8R/Z1Wb6jg5H0onwjsZ2qY8esfX4ak/sbTzaAqLp/aL8Ie3W41xPxdJ
9R7t4Po4mU7XpamUHtTHYUMmnnPfxNftUX9/99iveudsINU/hO84+OPkjNOh
ZE8Q/5CHwzZaqvhQehD+vEJD4o4Wvs6P+H3P35rY9iae2jvCL3/2+Mtpt0hq
D7TOlLepbNm9FEoP6ukM3eIlinl8XwD1etKyMXsy+gZSvUT4RUNyR0jXhZD9
QfwP+3T+PbzKh9KD8GPfmIy53MXP/6MdlOlHLImqTab4UR/nfXNOOKDF9xdQ
f6PC4mb+cgjg9ZuFD/zyvGntJr7OjPhHSu+Z9fMk7/dRX3wV18vL+PF1ENSX
vnLZKbftud1GOxg/RuZPrSCZvovwS2W6FSzK5fsXiD9BRWxr+/wAqk8Iv/FV
b/3gLL4fgfKfrrPKoe0mPwePevrywS2bMYJmsj+oF1UTlo08eYXXY4T/ciwu
1+kFb1cIL/Z9+I1rG/j+CL776LT275dv/KneIHyYWuKBgcuD6bsoz3feWw61
xfL+BuV/oEnX+pZxI7VrhC9pH69jdICvA6L+dr25FF8gmkTfRfgDd5P8Fsbx
fRbEv7Pu7I1sM3+qTwhvoHQoXSUliMbJWK/QGX7zwomT/sSRj1sWtn2uh3vT
eBXlr2dquvljWxyNtxDPCXO/JYPSmogjHoUbPcwScxopHoxrlns+2Vx21Z84
9Bj6bLFpfZo3jVcRT5LzJE0TaT6/QDwTRZvNyrObiCOezj0KCyrfNFI8mP+9
2paz1+6hP3HYp2UiXdnNJd40nkQ8dgU71q2fztcrMK86v+LW6ph/4zdw2Ikz
cofyH33ypnEd4tf63C3+yap40gvhK+1P3XT8V3/AUQ4vFtuqrgwMJ45235D7
4Efqi1iKH+Gr1coD1YL5eBLhn0rJT6v55U3jQHx3s/HmFjXjeNIR4TWDRU8/
Sw0ijvIpDRnflNIznDja9yff+h+KMTEUP8Jft1FZNyKZjz8Rvne9kkeRlA/N
Q/Dd1ud/FNUvx1M5IbxufISb3OogCo9yW3Zmb9nG1/7EqT8S8Rixe4wP1UPE
89UuqNjRgcePchMvt2uba5dAHO1skYWbreKxVCpvxF/rv1Ug/TqQ4kc8ORM3
Dflc408c8RhnrDV+oOxD9RPxzOi+b+meuHiKH+V2cWh1irZ0AnG0Y6vTl+K0
Y1OovBF/jWPCF1XDQIof8Wwa0ZxW+9OfOOJ52DLmstEyH4oH5TN7zIrDKrfj
iaO/eObw98n6ASlUrohn0455rSe+8fksykHb0DQsuU88cdjz9iHBCoP3JVP5
If70P4vKX14LoHqO8KH1xntNXRuJQ1cH3/wVjveaiMMOz/M5OEtkSTPFj/BH
J+67X3I3jjjCa3c3sTiSkkTlh+9OkC1Otx4bQPUc4XdGrDDovNhI4aFrWB9X
jdXD44jD3iY1d/kvm5xE5YF4Dlw0nCoTw9sFwtvqbygYu53Ps7BePvmHjavj
lmyqx7DDoac044vn8vMW6LfLbHWPCI4WEkc/eWegR7OuLR8Xwq6eFvvQ8MiA
r0Ohv20OHNwn80EhcVo3PlH06EY6H8/BTv50nrg4+1oK9Ufo9z71mLnmcXgh
cYwTrz+4+HR5txxev5md3JQdOeiEfwqlA+PcxCvZDjMGeRLHeG3dzY83xtj7
UH5g3wx9bjfOzuTzCMRjO3B+qsu7QuKI573Xibob83KoXiIeuZZgv8dvUyg/
GLdOkJLyme/kQRzjtT4dOq4z+/mQLrBv3gpan8MP8PkC4ilpLZX42a2IOOKx
abA3WX80h+ol4tnS66rR9O6plB+MQ8epX5z6U8WDOMZlZ46YXJh10Zv0RT16
7+bpfa8fH+cjnu/XSp5fli8ijnj6pXyTcfLMoXqMeB6ovjurOo2vT6L+Fnxy
OKae604c469Hp13efv3tRfrSuK++PM8hxI/GPYjn/uae/TesKiKOeOS9tAtO
1uRQ+0E8liuvronTS6X8oB0UrM2e93ufO3GMs4Ka/qxTP+lF+qJeW0ycpp5m
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
iiPpiXnlStWlzkvf8v0JcMdLEioxhU2kJ52fspmfod+vkfSk+xXcJHR82upI
T3DFoQLVzIJq0hP8p+4Sb6fid2Sfwcs/hxee2VxEOoNHMb9O6Ay+a/zOUYUD
4kln8NMtJ7otXBhKOoMf6jt3ztIiP9ITfOr2wvduKi6kJ7jlLHeLm4VcT3A3
RZGWkI8OpCfOAy+9bKly6lwL6QkepuwgWdHQTHqCm2vo313U0kS6gRcWNKWt
XFhPuoFPqCi99WTWR9IN/OMk/YxFNytIN3B75qcJ3eh+kd92Olq6maQbuO0g
05Yy+3jSDXxtvtnfoVmhVD/BR67eFCJ+3Z/0BF95L+l5p4gn6QkuHnOoIHUT
b9f4vRy9OVz8EV+v2MzWy3dHtY6omc7np8/GOdUcKnMR2LcG9n8bx+dl5Ww9
+Xa0uLd/Nw/SYbvQvWfQQZR917R4+stb5wpJhyXsuzdlDNdlhlSSDhfZd0uu
rIjo0Z+P28/ePhpuKxcvmLYidEd6nAulH7+e1nOHNx7m6VcNWq5fHhItyJeZ
o+00jM+v37H1sHVOvgtGhvLxlYvQfWJI/wn23Tdb5qj7nEyh9K9g35XV2b8s
4kUhpV+JfbdSz735ZEUllWM+++6M/Zvu3ZLl+fqxw7tJTjND0O5SPXz9Vk/K
D/adWn/cPnD7ogvlC7+LD+xYn7mK52sPW1d7el6irF93Pl+e09avsCwkWfD0
xD3jSm+e39FC93ohv60sPSqGT1dVFUZQfuNYenJ7LnAaapdC+bVBuq5qD5aJ
KaT8GrD0SBSNDRomVkX1VomlJ8JvcZPYDK5DiMz3O2Uh+YJFP6TOdrb6kw7Y
7/JR/vuqrc2D8n815qampm2eQLfnoKm/l7uQDvidNfuOiOdEroNP2soepmU5
grqdU96Mb3Wk9n6WrX/nxr3VHOvM9ckUuo8L+gSxdDqMbcpyd/UnHS6x9BSc
+rWoNC6F8uvGvqtYue/s7yFV1E5PsO9G7hzycJ861+HohbvucppvBIsyTAfl
2vF9Vey/RY1V3CT/zJ900JiosMtW7rVAw1pi6IOHHpT/KWx9vT077opYXxfS
Ab972v9eutidz/d/s3X3O9KTTpW/5fPT6qNb3piUFQhcvks5VD7n+lwVukcL
+hxm6U/6Oarr3TAPym87i/+IhvT39wpVZOerWPz7jHrsitHmOkxrmJZoUvZW
EBlZuVTPO5Hy23Un9XRZSKkgZpB4W/kKf8pP7myDOZq2JYK/L+7HP3vN5934
/aKRcXLNB56vl2XtrSEmxYLsF+aj5qTyeaXG/8+8cipLj2Xq/eflt/g4fxD2
M/uJuA2V9aB8PWfx3/9kF5i1sIry1aiTVR5iUimYH/jy3JNjuVS+2If0+Vra
OW9qIqX7GNs3mOc/6HzYCz4vxm/LloOu4vE8/fjdIDRPrGffNU873Lv4FZ9n
5bHvRnlPWz7kKh+3h7UbPZTTrBDsezJGNV7eg9JfiHbwolVniFcJP7fB9jl1
Fiy0vP8yh9J3882Tu3KaVYL9RTvj1uzj9We70H1KSCd+j/eQyF5ygadzGYt/
eOLtWUNs+HwqQqlbSYjJe4F9dcOqxPPOlM4ZtmLX5DQ/Cl6Uj/w2NOs9pdMZ
fh7qvQ8YypRQvRpek2tUFlIt0N6+/EteXjalM0roPiKkT4nFb3JO4e5PUV4f
8Bv7K2VArCFPpwyLf3R/N9O6s3wedJPtqxzdOCX+vSVP/51lBYM0bWsFk9M1
PsgX1VL6xdj+8Cm3Vuu00+8p/RbsO+5zLZxPXymm9A8XuucH6b/N4q+JsBHc
ueJG6RZl8dtsq/zbmu9E6cdv5EMpE6mlPP0NbB/GVybh8XJTPh/Z3rQ/J8Sk
RpD37k7GITOer+Zf9q9MyuoFucqCilxjPi/byc4JfFi7K+3V/VrK12stk7Ny
mvWCs/0aWxQU35N9w77NzsGnp5z++Ybye0Lovh3kt4l9d6PBGi/n4b6UXwP2
3cc7VQonqvB1oSL23akWo13mOPB1BvyuMp5pP3ESz2+U/bwtZSF1go4dwa4z
t/P5ghLbR3qy1P7xgcPOZB+cvonPtZWrE9yb5T8/bylvX6t9D02zlWsUBNpu
8N9qw+dfsezcwn3Fp3N6LOLzr1miqr01bRsEZwZNlCzVrSV9sF8mV60hqv2u
iuzkSJbegJPvvMyNuW5vhO7PgW4rWXoOuCmouZ4IJt1iWHqig8t1Bz30Id2U
WXraGyPSv31yJb1c4D+3y2tD/DG+voFf6yeq93pLcd1us/3ElUfvOrut4fMC
UbeipBCTTwKHlyeMCw/weuW+a2FkiMm//iTt2OXDyXz8bxvS67FJWZPA3Ht5
QP8hDaQP9gGTjkV+8R5QS/pY9iw+LqfZJPD6VlOx+lYV2WHsJ8abvdQ/X/6a
dJvF5ikBQvMmN5YeR7Ulc/x6x/HxEktPxd3yjL2DfSj/J9h3h2sryF1dxtc9
8Hst0lU38LMD6WCw1VG7LKRRcH2iuL+jgM83e8j0WVEW0irIF9t02e9IC+nQ
sr9UzlauVbD62Ty3rwZ8HlQc7dxN07ZFcG/4NodzOTWU31Vs31On2C5eSa2K
7Hks+/6hAxbvPHW4DjZC99VAh+4sPTXfp92LMUyn+nOC+R1Ub+pprromlnR4
zdITYTlqkNZGV8r/SpaeiktlJueG83HdAocCo0iTZ4Lpl6zXTDvOxwNebB5R
fvvdiSY9P8pXJDsnI5qtMGXU0QjiB9l8xHSh5L1xncGUnt4s/sdzv+6sSW4i
nsTiF6twGBo0vYnSeYnFo3bmco+9O5spfh3WjuU/3rlx7ZoP6WnF5hfX1/d2
8MoLpHj0WPhI/6yDWq8aqdyvsvCLJyYoXh7eTPoHsPnLVzZ/Qfy/2Hj+68FE
1d+6XhRPF+PLDSNeWw9upPLSG3T6pKZtlkBmRrTNtxthfH+BjVcXsfOK4CKy
/xnXnS1RFp2sF8L7O1YO6ge7aR36EsPtKhunle/c7Ld2eBDZh49C98+ANzFu
zzjq860Xf9bayr0TpBjNW7fHJITC2wvdSwPuxnj7nf9wlOM1Fs/PjBc7D2yN
JB7Hxj9KU600TLvC6LtOF7ODTMqqBOobDytNlIkneyJ8j40wX8c44ndg8cQ+
P2LkVcnTE8PGM1OuVard9/Xj9Z+Nf0Z1c7/+KzyE4he+90aYX2Ic7aLb3Ofq
tnLVgk814/6u2hdKHOOfrF22D56cjKDvurFyXmiR9UO+P98fmcXGP3Eea5/I
7AuieHawfr9iiExPu9h44idY+W+wFrlVZJxE7QLn3crXjDv3NyeK4rdl45PS
dxMF+sFeFB7nCUeUhJ/ddYzvO7Sw/v3o18VtT7/GULuwhH8cGw8gPPpZ/bl/
rXdsTKP6b8TsqoyCU/dPk3n9/8z0sGDn9NAv43yIT5qXpMZQ3u+UMDvWtn/7
6hVZjRTPGpwDnPRox8E5EdQu3rLw9of3HzQVDSR7nvQ3vFNR00og/yVG4dJW
Pg5JFrrHBlw84j/8A+PQU57F0/X4lPGD+/w8gyz7zodlXcUbx3KuyezA5Jfu
PSOseDxRbP5bd/vFOs1tfN8/jv37VvOqKZ9am6keGgrdMwNuxPhIxhE/fu0H
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
dhZ1M+UcxXFSZDf8Hz36QVc=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHf8l9P7x9/3vrVEIg2VliQibRGVkjJSyEgaMlJ2JCMzyigrolJKpOxR
JCslI6OskBXZe4ff6+l1vo/fH/fnuu7rPufc433ONV7XdT6Nh47pPzquVCpv
Z5VKItpHdAvR3jrZQnw9Xfw8rVS66KgeqY3oF0WlsqPaHKXr50t2no59dT5T
12qIT0WHlpXK1RrjcbX9Oa9UVuv6P2pfW+ffqM0A0fGSvy55JDpIsu/E99Xx
pvhvRHvo6CT+W9GeOsZnlj2s9mPF7yX+HI1zuu5zsPi39Kzvq/334gfo6CL+
B9GBOgbrmS7T+VGiI9U/EX+z6EWiF+ropzanaZyDuL/GeVHXbpJ8osa/Qe8y
UNfuET9Px1Nq873uv1yyp8W3Et1a427gGRhDRyPx92icuzVOc/ELRH/S8YzG
PE5jbKX2n0i+Rm3f0nk98YdozLVcE3+A+BPEbyP+QPFz1Leb+lynZzlQ/Dvq
d4X4A8S/Lf6u0t95hca/U/3aqm1V8ZFoZx31xFcTfV5tn9GYO4l+onYrxP+q
8U9V35ri9xd/kuQtxA8Sv1F8E/GHiz9NbTbTGBN1r4PVv7HkC/WO50q+Uvxv
anOjrg3QtdN0v4sl/7xifqRke4tfqfZ7qt3V4ruK3iD5NeKZfF10fgHjqE0n
5pb4jqLX6BnOl6y9xrtVY50jfgzzRvfaWdd3ED099bUzRXeXbKyutxVtn7nt
t+qTqF0HnbcTnae2F8S+3ymMp+Nw8ZMkZ0FcIdpIbXtL9qrOtxd/mPjGoper
fxXd50w9zwQ926m6fmHhd+BdLtO1STo/W/KWajNc59fwu4vuqv7Hq82Xuna1
2pwruqvaxBpzN13bVfR2tR0v+dlqd7CurdO4V0reX/z74heIv0z8F7p+ptoe
JP5dye+WfKqOvvAae5DoLmrzqMa6VG1ah/ZHSr6r+MWSHyG+jfjHxB+iNu3E
Xy66Qf3riu+vZ3pA5+3FPyg6MvOYp+r6zbrXEPW/N6xp3nGkrk0RvZb3FT+N
Oar3XqS+pwR9sY/an6yjg64Pk+w4jdFN/Ao9wy1qW0VtKqID1OcD1p3GOF7t
dpb4X8mmS3az+EL0Fh3TxOeix+raL6IPqP3j6v+r5Bt13lz8H+K/STwHmFeL
mDeS/8ValnyOzoeLf05jNJH8N34jyYfo/FzxdfS8k3Q+TvzPes5TU+uHU0Sf
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
NqX9TvTkYPETma/YsdIxGDp8ZOnYDNsxJMQYB4g/Av+fbyd+ePAd0fNHim+d
2cdDV9+nZ/hc9GydP6c2q9Vmf7CZ2P7WIh19Y8/1sWqzLz60aBxbjo05Q+fL
1Pdl/JrSPjF27f4wzj3qe6bkT0n+iuRHib9U/KOsSx2DdH2Kxr0oMb8+tg77
Qv0X633OTbymPo6NM10a2b/MSutMdCffDPl7sX1S4iz80pP1bn8TM6jt8+Kv
ihxvPotPGNkfJraYHNk/Zi2jZ8aJfhbZlwODmBg5FjhU/Ams48hY0h3qv7Vo
LrpPakyph+jc3G2Qt8Rv1LG9ji8L+5HE9WcXHpM445gQ6xHzpaXtAvahfWz/
G9/7ssz6Dz2D78k4+J8TEr/rRsmWgo9E9sPHJX6nD2P7nMRuZ2mMQ1PjewNF
Ty+MxeGLnpJ4/DVqvyN+po7Ndd5KdIiON8TvhO+r46OKscOLI/v94Glvqv/m
pdf1E5LfoPGXadxLIscCYwrjlvhdoxL7xqt1rzdiY4G/qv3LsXHH71PjkeMj
449jE//m67BP4AORMcljEuMkT0p+QWSsA1wUHw8e/OMbbIdkX6ltE/GjJK9f
MWaD/zgLW6exvhL/kOgbuv565PPXRNvyu2GrRNvr+Lpi3Yvt2JgZewNvvF/j
XKj+DcRXy41f8vs8EHxVfHfuB8bCGPVFr8j9ngPBIWK/L+eHM+8i401gEGMi
YxIvi74UGeO7U+e7ip8g+qLozpExi6jwbzOIuZ/7tz6MtZ77PboVxqR4FzCt
/fWtW0neT7RZuBc4CM88OMQavXStacW45xIdD4hvkBg7fV20Cn4o8YLa1ta1
PVL7k3umnjMj8PFYY8QKsf2qnmFMxmaODed3iTz3hunYOvI7nhz5e7aJzG9Q
n/k6H833zP0evA9YG+vi2BCj7cC8j4zv3KN2p4uvJ7o0Nub2le57ENhlxRjf
iYnn2ktcD2N+Eb4L3we874DQnn7gcMRAy2LjrcwT8Ff0InoT3Xh1Zp1RTd/p
96BbX8lCzCL+xuDL99JxVcX6kjbozDapKbH8x4Vx5XFgTYnjZvTaNxprqfjd
Csfkx4rfEDsu20/j3JQ7ziLGOkvHzqntG5hCM/G/h3Xxs8ZZLn539Zui89PF
/6Rx4sJ5gpkaJxY9gmfGRykct9+eGzs8OHKc+WnhfMUE9K1k/XWsrdhHwKdt
IlpKdmDk+2FXD4jsHzRP/C7gZcRSlRAz3pwY39sU25+eIP7P2PkCYvf5evau
Ov8ZnRPsOTYem479xz/GB5imvhdJ9pdk20aOiS5nzWeme2i8TcR+8MFHmxYZ
l1yS2nYMS+2/LJZse9FWatdP8vfV7ypstuR3Z87t4GfOwK9DV0X2Yx77n9+o
e63UWLdIfprovpHxq/MqjjWJY4k3j8mN6c4j9lK7ERXjNtiUwdF/U6dyrc5P
E/1R/V6Jrf/AFrPC+ZjzM8eFPSNjCD+J7hNZJ4J77h4ZB62bet2T50CXodPe
S6x/douMj4LhElu3E3+tjvHi24q+Vxi73UW/+/uFcd+24juqb9fIz/1uYZxy
EHkq9TmT+Zjb7u0ROWfEe/K+Wxees3tHnrd8m+6Rv8/U3LEOWMH6wlhyl9Jx
NvE2WMHbhfNCNUtjwOhJ9PJusb8J9wLLPVX0B8nap75OroU1j+7djvWg8+r8
prH1zkDJa4h2CO3p9wv4DrLCubgBOt6rOBd0iI41/B6F8cg99TydUmMY4H1/
Rf7teS/sTofI3x2d3TmyLcRWtI/+P5eAbiK38E/uXN0Y3f8pjfmd+GWpbSE2
ERz5Kh2niP9OsvqpdSG5jXsz52HaB7yFZ7he/B2xY/k6ur468nfj+4FnEBtM
S72ueS/e7xb1yUVH5faPWc+jxR8SG9vkGnMV34d445XE36a7aFe1b8DvIdqu
sE64VX07F9Ynt4lvS3yuNruKLg26gnvsXBhf3Sn4z+CJVxF7Fsa3p0u2Mjee
Ca75kNq2FL+t+HfC9+d3IC95W8U6+amgl9BPbQrfazq4R+wc4mY6Okq+Ld9X
dKXe4U317ZqE3K34G3Xt4Ng4MPEAcf7tktdgPcbWn+jREUGf9hJNYvvT/8Nr
oJ+I/hY5PkGPDQ3fkfXeWG23jIz3DQ7ympFzq/jsx4mewLzU9c8S2xR8ca6t
D/YGvO7vyDrhf5gRFAztIcn6Ro5Pbsith94RfTP3OgSX+5d+0f/jStB9csc/
vPeJ4tfmHv+6PMQ54o/P7T/iE+wQ5jLrjbWGb/aKzk+KnJfFl64S7D5rj3WH
b4BfUDsy7kYM10Zt5hBH6503iO+vd95S8ltiY0/8LtNi+yer+D6MnxjjulWy
iwrnoCdmxhDAJcg/tAu+91CNe77a9+c7SPZIap/2iNRYIdjeDrrv+dhc8RMk
O0ft+4h/HV8ksfw18b+lzmc8LLo8t529I3NOinz622qzi65/WrHeORDfSnQu
8VBqH3I/0T6Jawduju2zvRrZH8LnWRPZ1xmWuGbgEfyBxNjdvczBzJgzcfTh
iXG5+bFzlI3FL8L+6HtOIU5g/ifWCfMkH5p4HT0c7Aa6AT04PGDmxOANUvuZ
2I79k//g5sp0sJvEmOEc8fsl/5n3yk3601rjfCw+D3Ob+IrY6qDM+DYx/rep
453+ottE1onoQ+wSPi8x2NGJscr7Yts1fD9ygLVSr9MaonUka6Zjf53PTpzH
yRLn6sBeiG0/Tq23/mHt6pgqecqciq0b8FvIfaEPXuQ5I/tA+D/EuKt4rsT4
Nzg4eHi/oLfwc4iNHo/s66zPjF/NLozdgOHMSF0DQu3Huorxng9FeyXGgdaL
3zdxjInPf37u2P1VyTsmxh6eEt8yMeb4NOsmMX4FdoV/Q7z+AnZR9LPMuZev
c+t4sB/sGbgFNQZtiO1z2+JrsNeie0X2HR/XtQdZv6K/Fs5JU2+yhY6N2MrC
zwD+WV+0TeyYkfhkr8Kx2DzWrPgbxa8Sv1nmb70h9aR4TWRz5mLh+15F7J4b
CzhS9NDIdhkdsVb3qCZ6l/rXDboWf7VKYR9jUu6YmnifuL+U/CPsFPqpCDF4
7hwIftu1uu/CxJgw2DB59j0j58+IiYlbmut4Df0u2W3Es4nn8gzxW6T+7Wqm
nuNbRL62Q9CBjUJ/xqFehPfkfTvjg+fWi9VFz8idMyVmLFPrwgUaf0ZuXUib
ppH1I+cjwvgfqd15uWOyLHdMTxva1tLRJPL3qhnsCDZ6y9RrM0sdh9EeHGB4
eE5wgHv0fLP5XbCBhWtqqpZei8xJ1iM6bKvIeozajS6iz2ngXHxV8XfGfsbG
4TsQK1SLHC9QH7OiYqwYPPht8XuCZ0T2O/Cp/si81sA2ea764RseHdkPw8/4
M/Ma/TF37RDftlNiXPkd5iA+WeG4dTZzLbefOUX0gtw4QVXsmmTb6Xir4nXZ
MKzNs3VtbsV2fFHiPAX5Ct6jQXiXcaxP0XNEVyR+9i6JcwbkDhLRsbnnKTb0
0IBdvi5+aObc/da54zlsN3HiitJ5yjPVdnrkOIKaCfLXl+i7Xlc4drk5cvxC
XcCUMG+vyYxpUT9zUvAT8BdeyENMILptYbwau7Zn6Itffmfm/Cl5sWkB6wbf
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
bLhZGfJY4pumzoPgE1J3Rx6QfCC1DcT+1PuwV6obvqpkRRlyXbn3X4Hl7ps6
rlwbYqWepfH03rltPLaefa/Ej8SpC7l/6T2uCyTrV3oP4aLCMQ+xD3scNgUM
h72B7BuhppcaYDDe6yN/C/axotepUwJTxf6MTo1BgR1tCN9gpY73K65RPCk2
/rBV6Vzgluq7MHVtHHHoL7nruGqK9im935X4F321V+z6kHNCzE7sD84JZkjd
S2u1vzKxX8ocA6urnRqvAbehjne/0nmmvgFjwUY8ltqX5ne+j7rU0nma/dTm
7tS1C+Cu64Lfi/8LZki/e9W2d+k6NmLeXqWx+z659xiCm+M3Nimd98WmUGeC
P0/tCfs0iedq6Hrj0vld8B9qFLEXD6Wu28H+TxYdkXkf3LbiG5XeL0dMB8bC
fppbStdkUr94mGjD0vvowDoW4l9VXBvfoPSeOnAY6t+YR9eXroEcFzmuBs9h
j9F0ybcrve8OrIZaUOpCyTtTqwZWzb5h9jJ/VnFtIXvMu0u+teSDdd+Gki+U
bO/UOCn++dGZ91kz96jxAyvtmnrPMrRW6doY6hfBxtlLS36fOkP2zOIvkJPd
OXGtBXF0j8Q1M6w7sIvlFdejUUuGj0ZN1h6Ja06Indsnrg9h/VKfQ/4PPJAa
Oew59TjUIGHPqVHavnQ+HnysXum9juBLVwQ8CkyPepEhlVCTnBi/+j427g/+
T/6uaekaZbBBagWoGWAvDzVXncNvtzxzvQe5nRapc0nEg9uWzp0zB47JnGcn
375jaZ+Ie+K/DJX8M43XXPJLEsd6rVJjo9j0nUrvF9gptw+EL8Q+X3JwrB1y
feyxIFdFvntm5jGpG7898x5Y9hpQ60jfB9Smfuk9ouBs1En2lewmyZqFGnLw
T+qpwN3JibUKtejgfuy9RX90Kv2/By5Um9/1/AMy111Qf9G+dB0S/5fgvoAN
Uns1MPP+d3Qa+9zJW5LPbBnqw8Et8ZHwJcgvoZ/xK/mfB+RAab+N6B5qf31i
X4h78wx7gA9kzomzV4J5Bm7D/MBmrcCmJ95nwZ6XmfiZmfNx1Biyr57cN/tQ
/rNfFdcnfpG59o9a9/sz1yLyLg9kri3skPte3Ic5zp7ki8V3zP2/GNh7wT4O
9o+RT5kVng2/A/8RvYofTS1ex9K1mPQdlzonRNz9W+561K1Eu5euUcB/IO9D
vST7xKhLpj6ZfQfdStdQdsu9fvDHwaL4ZuQNqUPsmVjfU3tAjpI8Kv/DAHye
vVAzNcZepWso95LsgtR5AWLz3zPXErBP54fM+CFYKPci/8nafVPyhyrWsfgz
5E73ET0ycz0JNmVt5loCdDj/54LaFXwS9pyznwuMCUzjv32NpffssDdnjuix
mfcv49uwN5j9ZXtn3qPOnlCwoSGZ9xqz7tgDhZ+Dv7Mmcz0z9veNzLUK1G3h
a2FDifvwF6ifQB+1TZx3npo69qA2jNwM9Z/8bwH2lPF/J/DZyDtT30OdD2v2
69gYDnV6X2auiWVPBP/b4qmK9188kbnmhO/8RW7sgBwLe49nVYyLsW8TDJb9
SuxDpo6F37dv5tqnOPg5xEDs739Jfd/lmyTep0BeDl1PToH9YXNL70GYGHyq
HqXrY3oGH5J8/rzUe97JnZJT5X8jUOdDXTl5XDBMYoeDSv9fD/yfEzLj6veJ
n5g6xwfmwB549mjgD7P/BIyP2i321YDjsG8d/YcvjU/Nd2Cf2R3YrNL/v4Ax
HwHDqXhf0onh9yUvwJ4RMCn2gxEnE+cSN4P1kYclH7tb6fwoGOm88I78v4++
pf+PA7aPegVwZv4nAjge+XHy5OwZoJafuBj/hdpgaoTJ3ZLDJU77PXetODXq
HUrX6XYI/gm6tE7q/fDkINC55MepvQMHJi9MzTL7P/8PjCLL2Q==
          "]], Polygon3DBox[CompressedData["
1:eJwtnAf8V9Mbx+8891uUUYrKyCoZWWVnk0IKRRnZaWhI2YrISHayUkZlla0I
ISOyVyX0l4gSkpX1/7z7nNer+/qd5z7nnHu/9577jM/zOTU/uX+Xs7IkSU4r
kkT/kulVkpyiv0t08sRakjwjuafkryUfJ/ktyY9KbponyUDJ3cokaSD5SMnr
Sh4ekmSHNEnW12RrS26k/qdL/7zkxyQfrP43aa6bdbRX+ysdj0v/rMa3l/4b
9Wso3Vs695LOHajxO0gerjmf19zr6Ggp3RM6N0v9+0p/ktotdK6P2ttqzCy1
n1b/GWqvrfk2Ubu5jnXU/kvncrUf03GN5KN0/U3U/wid76j5XtS5H6Xro3PL
NO9JmrNL5vl+0LV7qv+m0h2n/o3Vfz7PTfpbdG6e2idKv73a3aU/TPo/dW5H
6Y/WuQX6W0nfWX9LzXc919f8P6h9Bs9Q7fY6dpb+YMmXqO/BkneS3F19j9F8
O+oeLpDuV53bUfLFkrfT+PWkX0Py3vrbS3IP6Rtq/LuS/5H8r8a8rfavOraX
7kfJx6q9QH0eVnuR2k/H31NKn2nMXLU7S19X+k76PfWkP15ya8ZKPlRypeuv
L/kejXlFcm/d7wlqN9a5M/k9mmNA6nP06aPxO0rXS+Obqv8iyU9Ifk7yIZIn
ar6+6n+Axq3F9TRHR427k/tX39MkryN5E/V/SfrTg9/nZ+p/ueT9dH4+a0fn
3lZ7Du9c7Yt07i21P9Qc96j9MGtL/ZtJPlPz9daxodovq88v6t+POdQepHO7
qd1P/TdU/2d1/d6Sl7I2JN+k6x+o/lup7x41P++/JV+uPu+o/arG36j2BI3f
X/qPdC7V2FE6t7Xa++r8Pjre4l511Ne5jTS+hY4Gaq+v+XdV35ka86rGn6fr
7y35dcmdJC9Wn3XRJV7vG+l6feL64fecrWN3tc9Cp/5fSn6B70PyZO5H8r2S
H5F8kOReul6ha7fWvFdIPkvXO1Xz7cIz4N3qqCf5UfX5Rn3/1big9rM6btKY
jzXffeo7RecP1vgNJJ+S+Zt9Un/fVJ8/1fdCyS3UflPzPah2I/Xvr/5rqX83
9aujPjtK/6mOXHIqeVu1T1f/YzK/3190/Q907j+1/9Mc26i9gneo9muar4Pm
K1lH0m+qY121h1Z+1+15php/mvq3UvsU9W+i/nMlPyP5Ucn3S/479/M4VMf2
Gt9Y+uM1vsY71d/zJe+n9mD12xh7J/m4zN/gvurfV/JOfAvSN5N+tq7/gOT1
JJ8leRbfpPqeo3Obq/2c+l+q9ljp95b+Ft3jwanXSjvJJ0m/mfTHS7++5Gma
72TJ3+qaJ9T8fXTl/jRmG7Xf0fjb1b5Z/feU/hPJ9/M9aL69JL+GPeb7lf4A
ya9IvlvyOMnvS35d/X5X/790rqXaXaVfV+0u0q8j/QzJl0m+jXUs+VTJW0k+
WfIG2KPg9Z/H3/OO7ulZfqvkcyQ3CH7+T+me15M8WOP3kFxX1xopeRPpO0h+
P/P63VjyIZLfy/w9Diz9fTTV39clrxt8fdZaQ8lP6HpHSP4UGyy5n/rtLPlw
zT9W8tPS95C8EBsr+SGdf0e/t5nOPaj2+9LPVntH3e/F8Xp8W30l3y75A+nf
lLyT5Eskvyf5Dck7SL5I8qOV/cF0zX8435vk9yTvJv1lkifrGm/ret/q3AbY
J+nfVXtX6S+V/inJR0r+TOO7sR71++aqf1ude1ztM0vbg9PU/7V4/+9Kv0Tn
HlD7DOnbqX2q9I9I3yTYHryceb2PU5/X1f8LnTtQfU5W/81p6/zN0p9S+tvv
Kd1t2FvJW0vuKP2tkqdU9p+PZPZ3j0jeGPua2T/cr35vYSt07l58j8afhz3X
ubOxBer/idqPq/2s+h9b2pcfrevdIrlTaV9yqOQbJTfX/XeRPDfz93aB9PtL
Pkf6Tfj9mm9tyWMy+/P1gv3Ns5n99RhdZwaxBGtOY6ZIfk/yFvwGbG/wfG9m
/l4bBX+/z2X+3jYM/t5nZ/ZfWfD3MBbfjv3X9WdKbqW5z5U8qfLzvUtzfyR5
M/XvLv2X6r+p5DvxEfgqnWurMVsExx74ly2kv16/7xi+Pf2dI3lT6Y+V/IX0
zSXXkdxE8sTM/nlYadu2if7OllyTfgPJ90m/puQOup//6XofSX5e8tWln+fF
uvZmkjdnTUn+XvrNJR8Y7B/WivZhn2B7UcTvfZrGXyJ5D/19r+bn+b7m/541
oPYcnb9D7cvUHi99++B4r1n0vx0kPyl5o+gvDgmOBzaM/uh1jb9Z8jCNv1vy
AcH+u370p+9KviN1TNQT36Wjodp34kP4fjTuK+mP07nzNWao5jtc7QFq3yH9
k9J/Lv1ROjdU5/7Ep0jeku9f7ael/1ryqZKHS/+Ynt8+ar+h+Y/Q+MfwedIv
07mphdcx6/kAyb1z6z/CFuNT1F5V+Xpc9zmNb6VrDJBuuebbCnug++uF/dDf
dyTXD443p2S2t6zf5zW+0nGL2lNLj79W12or/dbqP0jyz+q/teQ8OD6/HZ8g
eZdg/7IKny75CN3PN5qrm851UnvXYHv+l/S7Sr+N5LMlr5C8Df452P9MzRzv
7xv8fkpdf1/8fXC89FJm+3+J5ryO54evx15KP17yuZJ3l/x46flvyH29x0rf
//W57+9NyZNZv5I/kHyd5ruEe9P5NpJf1XzXar6rpd9W8g18v6lji50YL3mM
5P6St5PcuHJ8Pyp3/Hyd9Pum9r2t+b6lX5U6VtyZ+E7y5breON3DjWo313X7
Sx7A96v2Xzq3RP2/kvyi+g8v7Z/Ozf19jqt8/w0l9+P7wV+q7yMacyXfvvTX
S59Jf6b0l5b2d+fltg9b8DzU/2wdW5b2U/gr8iHWcwedI387JLf9aar5fpPu
VWyt5NGSL1SHndRvh/j9t5G8QmMCuZ6OoyRP15gfg/ORdpJ/J0apvD52l7xS
8hpq76djuxgPDsD2Sm4t+Rdd707NP0fyNOk21f2cLbmu+hyZOUbcAV8n/XTp
N5N+sPRvSD8J3yD5KcndS9urbrn996Hqv4vGX63xrwT7QfzhBam/15dLv5u7
1J6g/scRt6Ze08+o3aO0fTwmd3zxrc411RyfJc4PDtf8u0k+Red71hzfHp45
JyI3+kfnd5V8muTvyIl5JuRv0k1U/x+l30byD9gwtQ/VeU2bdMj9vd2jez5D
99JOuro159l8D+R85MS7q/8wjZ8o+RJsp+Sp+G6N/1D9d9P4EZL/Vp/deF66
/njJ9aTvy/ep/kOlu1XjB2r84tzvqh0xb+Hvj7WKD3ldc91Q2n9cmtu+j1af
J1PHuNeq3SI49/lBY66t2V+fr/ZZOtea9x1sz+to/H78Po2ZrbGf69wBOteG
/Ip3I3nn0vJFGj+B9Uqsofu5PY7vQ7wk/RTJkyXfJ3kvzX+N5P8yx6uXqf+N
5MfEETGeeJN8F5ug9mGlcYuOue39VpLP0dghOlqp/a/Gd5L+E8lHcb+Vn28T
9R9QM84B3jEitX0POvei5K3wFTW/n0nSXUzMVjofDRrzEDET76Zw+6HEOcxr
0t+mdk3t3tH/g3UQ060M/v6nqP9oyXuXfv5PSH5E8iTWc/BaH6H2lthX9Rmh
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
K3WMrewv0HHuNsnDKttG4pnrpGvAetJ876hPL7AW8GVsDzZQ7Zm6XqI+exOH
V8aXyOXBoC6unM+wtlgzg6tYM05cAzy3Mn7OFNSsqMeuK7lFbnt3ButJR/vM
Md+CYP9OLZtz3Sv7d2qvPJPjyN0r//Yp0d6B561KfM9dpeum48DMMSK1ppuD
1wLnjuF71s3sGWOq6YwvzSd4MOIZM0vnz3fkzhfhAxAfYM+wa/V0HK32WuSc
ueuf1OaxF6vtBjGPxm+dOd8DpwGvWUPHurlxHvCepRrzrNovZv6ewbRWMJfu
d1u1fy6Mz/5UWCYHJBcE/7pY7aN1fkbNuFfrGLMQu4A3g83hP/AjnfkG1P6v
MD5IvLiP5D/U5w21N6pcL8ZmPR6/TfA7am6vqb1pZX4BNg5b9zG2LnNN9BPs
bO75iRfOlLxJlawGBLGR2Mql+tsqc85N7v1b5m+deyBezXV0Urumo27ufJln
Bwb+uP6+hy1NXWN9vzB/AqwDDISaO/EX6438izysR+5aFzUvuBDU1MAswd9v
AnuSvEh9fiH+0LN+NXctjJrYz6VrXGB84PGjStdwd5f+/cS1XTgQcCHAa14M
5qTATSFfIo8C4wHroeZHPHVR7lpRl5hPgYmAjfRErlwzpXYKBjSh9NzwLcD8
wf6n567lzMSeleYobJO7xgx3gd8LNr9pYm4INSJqRdScqNVSc6L2tEPUr66R
SW4enw+cl601x0uJuTDUzKidbZKYa/FY8LvjHU4NrmlR21onMXfljNzzcz24
FdQYp8fr9ZbcOXdtihoVtVvmYK5lhettraXfIHPM9Hxu29BI8nOpOQL4KHxN
19y+67Xom/Bp+LlzKvsueBTUX/GZ+MKTcvvSpZVtEbyEN2q2ueQfq/OQmmsa
U+Lz4P7AFz7JnS/BBSGffzRzzWFJ5d/zSHw+/H5qEFPj84eLBN7wKXYhMRfp
osq2Etyeehg+FFt4WG7fim8j1gWjBK+8ojJ+SExFbEVMS2y7dcTLXqgcW2PD
sGWAj8dmjm9vLxzbEyuD6YIXtgNvyoz5g/cV6tM9+s+78XOZuTpwBtYr7avx
bfi0gbrHUfg83m8Z60H44MyY9uLK+MnTmWvo31XGuKmlUwMH+8ZGYisfT42x
YgOxhXUzY+7wN8AGice+0v18UdgW1NHxZWG8HK4F/nKd0r4U/s1TqTkS4GVb
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncllMex/G75+557pjs2bIU0Yismcau0WZpEyVpUZZhkK0aXvYSkQyV
iRY7E7JUlhZSSitZs5ayEyNricT7O9f88X3d5/c5398513Nd5/zOeXbpe37n
flWlUmkJVdNmNaXSCeVSaRxYT9wNfKlSKs3E9qP52BfYy9jz4v1pAfYlVkdu
B/F9cjfGjse2xE7CHsTqY6dgD9EEWlKnVDrAb5XficbrwjeZ7/VapdI6eRuw
3fTvTr3kXu93ETaFrxFNw97DtubtIX5cbiOsT8bmm4UdQAuxVVhvrMbvLbX9
reY4R9674qn6J/G10q7tWT7n24RnU3pL3xr8Yawdz93meEnuGrnnY6eLZ9GJ
vNOwudidfH+iIfhI8S/0nf5vqbXxrjDezrxn8zzLcyB2HtaCb5X2Tnyr6G/i
3/jeMd/34pX83cQ1nrENf9vq4rut9rsN3lP/E8bbDeuL7YSdhc3AmmHnYh2q
i+/8Gv46LTXHCUBdbKn4LXobW4k9jz0jbp0cc9Y33mnip423l74z8a2wbtgE
bAesB7Y91hd7CtsTOwO7ATvI3zETW6Gvq3hT6qw9BtuK7yS+UTSSZuu7kf+F
mmLMjH2Ud9CSvvR8S7Dx2Iq8F/oZG0N3YXWN2VL/WPFj1F081Rz76uuJH2DM
m7BZ+Sbm2I7n33S7/gp+FM9o8ct+x2HL+JbTWuyhfHc5bcXv8HYQP4qfrP2M
Ofbh75U1ia3NvsBn8q6pFGsma+dBcQu6T3wdNcd2FL/Pe7z4OfnXyh2I/ZO+
l9sMvzxr0Ry19HfBDsdGZf/l788Y2Gx9w/guwy6nH7JfsP5ZY+J+tLpSrJms
nTny78B+wh41Xn/jtBe/h3eqKfZc9t5l4j7413zb4X3E2+trou/0PG+l8DXW
/jMNEe+db8g3Xd5Xxt0Sq0tds66wqbSJuMLXnm9beRvp6+T3avwk7V21G9E1
4m/4bpUzkqYbb7V4St4fX2/5J2Tf8H2K3aA9jCbxfS6eid/GU6JB3uGt4t9p
L2M3pdv5/uO3Me+1qS1ZZ9hmPIOxZtr1sXf1dRRvQV21t8t6N2z37AXeM/LM
fM9SPfFwvp+wc8Tn0jeVoqamth4mPpy+wPbnu8xzDdd+WP8jqXvao/lqzPMh
X+NKUXtTg5/DRmM/Yk3kXiL3Ru2xWbN0Z+quZ27OsxFdFA/eUe6Fchto/8b/
CHUST5TfQF8XfDE2FWtSLmpAasHN8lsYr1HeMb6M5xWaq30QvcL3Ld9z2Ejx
BuPdgD2FtZF7v/bm+DVZ5+Jn+UaIf+Mbqu/p1LPUSv3LsC5YG3FL+hE7Oes2
71nu0dj1nqUn9pEx3hV3oA35ZlXFN2gvbp1vx/cGtkZfq9SDnFHanbK39E0S
t6UH5GxhrF/oDPG2NUVdTn1uwzshe1d7MXUUD5T7j9RQYy722yLPwb/O3/EV
dgpPr9rFc16SszI1hqcW/YtvGt8uWJXxlvJdSW+bYz72IM/W9BDfYr552APi
eqmz2CJsQdaJuH7OvdTz7BOsjvE+yLz0ofFeTE0sFzUxtXFOdbH2sweO0D48
56H4Kt59Pes2eQ7ed7AZdLP2z7xrqbkzoEHeM9+rfJfSG/KuoL2xeuI3c4bk
mxm3B3YIVpc+wy6sFDU4tbi+/ouyB2uKmpnaOaV2CrAzFusu9+DUTeP1rSlq
R2rIjOwX7H3xjvhhUubmb8ZOFI/Dh4m3F4/i/Q5rTfeKq8P452e/8w3NuZPv
kfrEcxxNF+9EU/g+5jsWe6xcrI2skbewdtgM8c70JPYJ9lfsFvH3xrwYm4wd
lHqF/VBV1N/U4QmVou4erX1M7kLim7L/tVfxnV0qasCRcm+X+ys2OOtQfyvs
Hqw2jcTm5c6A3SFeX1WcGTk7dsAOzbfG2vnbJorHZt17f415f6cLaorvO1x7
Nd+31Nf3nYONxzYuF2spa+pJujLrW/wedeVbb56exjvU+GX6hKd+vjs2J3uV
/wNx09Ri7d5y7pNzPx2Wem6cQ6uLdZX1lbMrZ9jCnHf8K8WjKsUdKnepm7K3
jTWG2vFtm9pB54kn8w0oF3sze/R4c7XH52FNaY538YO5jsYmijfLHRV7M98g
53e5qE2pUUtzBmEd870zN9YZW4Y9bN5BOStzFopn5c5RLupz6vTzfHviQ8Q9
PMP41OHqIj/j1Mit0Kc5d/iG8vXiu0f/van32GCse53iDpS70K/ZI9k/5eIc
2VT8OJ2a2lxV3A3Xy2tA52EvYIfwXSx3P2y0/sU1xX079+7cZXOnXcBbZdyP
jbVQ/8jUM/FZ9F/spZriTLxQfEHuSdguuR/IW2SOlrkTGOvc3Ef5PsoaoCZ8
F9PfeeZRN2xG7o2V4szePXdjeX3F19Ee2h/wnZz7vfhNepWnLa3Aftf/Rs4a
cZusKWxD/mcw5jF571X/O9JL7XJ3zx4WjK0q7ri565axY3PHwVJe2mN9cr55
lgZZ4+JTxevo69QB+gtfP/w1bBHPkamH2M/YbsYblGczXndsBPZq3iF2RO7O
2FqsIV+/crEHsxf7Ywv5JmO7lov/OfK/xwBsh9x3+Q7OnS/30Dyz59vHs6zj
PV08gDauXdS61LyB4j1oBN+C1ABjjKGfst6wZry1cj4a70BjNKMR+R9F32zt
J2qK8y/n4HJxZ/ETvGdqzzfHkeY4O2sQb8O3Z+4auYfkPkmXa3/M15tvaHWx
BweWi/qQOtHQGp6EXZTzoKq4d+T+MTt3lHJxz859e2bWeGoWzxZ+N6f1PC/Q
uHyffDu+Wfj01Hbxj7yXYo9iK7KnPd+Q3IH1nZY6TEel1mUtY8v/X8Ou0v5M
7qepa57vbvl30dRKsRf3wq7QbphvynOMOa6sFDUrtWuucYcb98Xca+kQ7SV8
H2a/ixvRpbkTYMfJHSxn19y7sNewY7FB2Aisldw9sq+ylnLO5izGGmZP5j3m
voDdRk9Xirqwe52iTqReTKsUdbUptjx1o3bxDvIuVubM4jnffM1zNmUf1Cnu
hbkfPlMpalQT7Cntq7U/T/3nH5a/Xf544wwwXv+coTx/AEWMLBs=
          "]], Polygon3DBox[{{1434, 1433, 2048, 1325, 1326, 2049}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jtPFFEYh/HDrrsqCooYiUYlgLdGOytA8AbFUikUQiKwYKIWWqBxtSUE
ahMxxODGmNW4G7uF1gIaWlAElIuJ4QvwBfidbPGf53nfec/M5Jxpyj6/96wq
hPBesiT6Q5fjkkmhug8bYx+v4WNsx3w6hAfmeviE3gC+w2l5yr/ja5zHKfyR
qrxnCb/gJ+sHrJ/ju3qL+EbvrN6orKiH8JK0JkP4qb7P2/gvfo6381VefyCE
y+rf/IbeGnbgOnbiTdngt/APNpq9zf/yXn6Hb/K7uIVduI3duIN1nt9k7pH8
Uw/jlbhfvndZvef7F/A/lnEVC5hz/4y5af6Kn+aTvOx+DktYlCf8LfbjOGbw
otmXvI2/sLZBfTXuNb/Oz/MxfoqPyDH1IF6QUiKE2nh2vMhr+En+jR/lLfwr
P8ILWI2f8XA8FzwU5+OZ8rwcVJ+w5iNPx/3gs9xI+IC2J8xgMv5LmIjzms1V
lf9qH9IvQPA=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1355, 1649, 840, 1354, 2055, 1538, 1356, 2056, 1539, 1357, 
       2057, 1540, 1358, 2005, 2058, 1698, 1854, 1541, 1661, 2006, 2059, 1662,
        1701, 1542, 1700, 2195, 1699, 1782, 1962, 2194, 1359, 1897, 1898, 
       2243, 1543, 1360, 2060, 1544, 1361, 2061, 1545, 1362, 2021, 2062, 1546,
        1363, 2007, 2063, 1702, 1855, 1547, 1663, 2008, 2064, 1665, 1703, 
       1548, 1664, 2184, 1650, 1694, 1549, 1651}], 
      Line3DBox[{1365, 1963, 2123, 1364, 849, 1366, 2065, 1550, 1367, 2066, 
       1551, 1368, 2024, 2067, 1552, 1781, 2217, 1614, 1705, 548, 1666, 2185, 
       1615, 1667, 370, 2198, 1707, 1706, 1785, 1964, 2197, 1369, 1899, 1900, 
       2244, 1553, 1370, 2068, 1554, 1371, 2069, 1555, 1372, 2025, 2070, 1556,
        1783, 2218, 1616, 1709, 551, 1668, 2186, 1617, 1670, 373, 1669}], 
      Line3DBox[{1374, 1965, 2124, 1373, 1966, 2125, 1375, 859, 1376, 2071, 
       1557, 1377, 2072, 1558, 1378, 2196, 1704, 1559, 1784, 2219, 1618, 1712,
        1856, 1857, 2233, 1671, 1619, 1672, 1716, 2180, 2026, 1715, 1714, 
       1788, 1967, 2201, 1379, 1901, 1902, 2245, 1560, 1380, 2073, 1561, 1381,
        2074, 1562, 1382, 2199, 1708, 1563, 1786, 2220, 1620, 1564, 1652}], 
      Line3DBox[{1384, 1791, 1792, 2221, 1383, 1905, 1906, 2246, 1385, 1968, 
       2126, 1386, 871, 1387, 2075, 1565, 1388, 2076, 1566, 1389, 2200, 1710, 
       1713, 1711, 2234, 2041, 1390, 1787, 1621, 1673, 1622, 2187, 1391, 1790,
        1623, 1789, 1624, 2236, 1858, 1392, 1904, 1720, 1903, 1721, 2202, 
       1393, 2247, 1909, 1910, 1394, 2077, 1567, 1395, 2078, 1568, 1396, 2183,
        1653, 1654, 1397}], 
      Line3DBox[{1411, 1571, 2082, 1410, 1570, 2081, 1409, 1918, 1917, 2249, 
       1408, 1728, 1911, 2248, 2027, 1912, 1407, 1864, 2009, 2130, 1796, 1629,
        1797, 1406, 2188, 1628, 1674, 1627, 1795, 1405, 2042, 2235, 1718, 
       1719, 1717, 1404, 2129, 1970, 2080, 1403, 1569, 2079, 1402, 883, 1401, 
       2128, 1969, 1400, 2045, 2127, 1913, 1399, 2203, 1723, 1907, 1722, 1908,
        1398, 2204, 1859, 1626, 1793, 1625, 1794, 1695}], 
      Line3DBox[{1413, 1724, 1725, 1861, 1860, 2222, 1412, 1799, 1800, 1798, 
       1866, 2237, 1865, 1414, 1915, 1916, 1914, 2131, 2028, 1415, 2046, 2132,
        1922, 1416, 1971, 2133, 1417, 893, 1418, 2083, 1972, 2134, 1419, 1973,
        2135, 1420, 1726, 1727, 2136, 1863, 1862, 1421, 1801, 1802, 1675, 
       2137, 2010, 1422, 1804, 1805, 2223, 1803, 1872, 1871, 1423, 1920, 1921,
        2250, 1919, 1735, 1424, 2252, 1926, 1927, 1425, 2084, 1572, 1426}], 
      Line3DBox[{1430, 2085, 1573, 1428, 1730, 2086, 1574, 1807, 1630, 1677, 
       2030, 2189, 1575, 1737, 2029, 2087, 1817, 1576, 1434, 2049, 2088, 1931,
        1577, 1436, 2089, 1578, 1438, 2090, 903, 1440, 2091, 1579, 1442, 2092,
        1580, 1444, 1733, 2093, 1581, 1810, 2011, 2094, 1738, 1874, 1582, 
       1678, 2012, 2095, 1679, 1741, 1583, 1740, 2032, 2096, 1819, 1584, 1449,
        2050, 2097, 1934, 1585, 1451}], 
      Line3DBox[{1450, 1933, 1932, 2254, 1448, 1739, 1928, 1929, 2253, 2047, 
       1447, 1875, 1876, 1813, 2038, 2225, 1814, 1446, 1631, 1676, 2224, 1812,
        1811, 1445, 1869, 1870, 2144, 1734, 1732, 1443, 2143, 1977, 1441, 
       2142, 1976, 1439, 2141, 902, 1437, 2140, 1975, 1435, 1930, 2139, 2048, 
       1433, 1736, 1923, 2251, 1925, 1924, 1432, 1873, 2239, 2043, 1806, 1809,
        1808, 1431, 1867, 2238, 1868, 1731, 1729, 1427, 2138, 1974, 1429}], 
      Line3DBox[{1453, 1978, 2145, 1452, 1815, 2098, 1586, 1816, 1632, 1743, 
       2240, 1877, 1587, 1680, 2013, 2099, 1681, 1745, 1588, 1744, 2033, 2100,
        1821, 1589, 1454, 2051, 2101, 1935, 1590, 1455, 2102, 1979, 2146, 
       1456, 911, 1457, 2103, 1591, 1458, 2104, 1592, 1459, 2031, 2105, 1593, 
       1818, 2014, 2106, 1746, 1878, 1594, 1682, 2015, 2107, 1683, 1749, 1595,
        1748, 2205, 1747, 1823, 1596, 1460}], 
      Line3DBox[{1462, 1980, 2147, 1461, 1981, 2148, 1463, 1742, 2108, 1597, 
       1820, 2016, 2109, 1750, 1879, 1880, 1684, 2017, 2110, 1685, 1753, 1754,
        1752, 2206, 1751, 1825, 1598, 1464, 2256, 1936, 1937, 1982, 2255, 
       1465, 1983, 2149, 1466, 919, 1467, 2111, 1599, 1468, 2112, 1600, 1469, 
       2034, 2113, 1601, 1822, 2226, 1633, 1756, 1881, 1882, 1686, 2190, 1634,
        1696, 1602, 1655}], 
      Line3DBox[{1471, 1984, 2150, 1470, 1985, 2151, 1472, 1986, 2152, 1473, 
       2035, 2114, 1603, 1824, 2227, 1635, 1759, 1883, 1884, 1687, 2191, 1636,
        1688, 1763, 1764, 1762, 2210, 1761, 1827, 1987, 2209, 1474, 1938, 
       1939, 1988, 2257, 1475, 1989, 2153, 1476, 928, 1477, 2115, 1604, 1478, 
       2116, 1605, 1479, 2207, 1755, 1606, 1826, 2228, 1637, 1607, 1656}], 
      Line3DBox[{1481, 1829, 1830, 2229, 1480, 1942, 1943, 2258, 1482, 1990, 
       2154, 1483, 1991, 2155, 1484, 2208, 1757, 1760, 1758, 1885, 1485, 2039,
        2181, 1638, 1689, 1639, 1486, 2040, 2182, 1640, 1828, 1641, 1284, 
       1487, 1941, 1768, 1940, 1769, 2212, 1488, 1946, 1947, 2259, 1489, 1992,
        2156, 1490, 939, 1491, 2117, 1608, 1492, 2118, 1609, 1493, 2119, 1610,
        1494}], 
      Line3DBox[{1508, 1612, 2121, 1507, 1611, 2120, 1506, 953, 1505, 2161, 
       1995, 1504, 2053, 2160, 1954, 1503, 2216, 1777, 1948, 1776, 1949, 1502,
        1294, 1647, 1834, 1646, 1835, 1501, 2192, 1645, 1690, 1644, 1833, 
       2230, 1500, 1886, 1766, 1767, 1765, 2211, 1499, 2159, 1994, 1498, 2158,
        1993, 1497, 2052, 2157, 1950, 1496, 2213, 1771, 1944, 1770, 1945, 
       1495, 2214, 1887, 1643, 1831, 1642, 1832, 1697}], 
      Line3DBox[{1510, 1772, 1773, 1889, 1888, 2231, 1509, 1837, 1838, 1836, 
       1893, 2241, 1892, 1511, 1952, 1953, 1951, 2162, 2036, 1512, 1996, 2163,
        1513, 1997, 2164, 1514, 1998, 2165, 1515, 2215, 1774, 1775, 1891, 
       1890, 2232, 1516, 1839, 1840, 1691, 1648, 2193, 1517, 1842, 1843, 1841,
        1298, 1895, 1518, 1956, 1957, 1955, 2166, 2037, 1519, 2054, 2167, 
       1958, 1520, 1999, 2168, 1521, 965, 1522, 2122, 1613, 1523}], 
      Line3DBox[{1537, 1660, 1039, 1536, 2179, 2004, 1535, 2178, 2003, 1534, 
       1780, 1959, 2260, 1961, 1960, 1533, 1896, 1299, 1851, 1853, 1852, 1532,
        2020, 2177, 1693, 1850, 1849, 1531, 2044, 2242, 1894, 1779, 1778, 
       1530, 2176, 2175, 2002, 1529, 2174, 2001, 1528, 2173, 2000, 1527, 1659,
        2172, 2023, 1526, 2019, 2171, 1846, 1848, 1847, 1525, 2018, 2170, 
       1692, 1845, 1844, 1524, 2022, 2169, 1657, 1658}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{663, 841, 2055, 664, 849, 685, 2125, 858, 696, 1306, 2246, 
       869, 710, 1112, 2203, 880, 724, 2237, 565, 1122, 566, 737, 2238, 567, 
       1209, 900, 2086, 748, 1215, 1216, 908, 2098, 757, 2148, 915, 766, 2151,
        923, 775, 1346, 2258, 932, 787, 1167, 2213, 944, 800, 2241, 598, 1176,
        448, 814, 2170, 1025, 1075, 454, 828}], 
      Line3DBox[{665, 842, 2056, 666, 850, 2065, 686, 859, 697, 2126, 870, 
       711, 2127, 1311, 881, 725, 2131, 1121, 891, 738, 2239, 1279, 998, 1129,
        1131, 1132, 2189, 749, 1003, 1061, 1280, 2240, 1281, 758, 1282, 1138, 
       1224, 916, 2108, 767, 2152, 924, 776, 2154, 933, 788, 2157, 1348, 945, 
       801, 2162, 1175, 957, 815, 2171, 1026, 968, 829}], 
      Line3DBox[{667, 843, 2057, 668, 851, 2066, 687, 860, 2071, 698, 871, 
       712, 2128, 882, 726, 2132, 1316, 1317, 1318, 1319, 2251, 1127, 1130, 
       1128, 2087, 1217, 1218, 1004, 1062, 1005, 2099, 1063, 1226, 1009, 1225,
        1010, 2109, 1149, 1147, 1148, 2114, 777, 2155, 934, 789, 2158, 946, 
       802, 2163, 958, 816, 2172, 1037, 1038, 1043}], 
      Line3DBox[{669, 977, 978, 2058, 1086, 1084, 1085, 2067, 688, 861, 2072, 
       699, 872, 2075, 713, 883, 727, 2133, 892, 739, 2139, 1325, 1326, 2088, 
       1327, 1328, 1139, 1141, 1140, 2100, 1227, 1228, 1011, 1066, 1012, 2110,
        1067, 1236, 1015, 1235, 2227, 1016, 1157, 1155, 2208, 1156, 790, 2159,
        947, 803, 2164, 959, 817, 2173, 969, 830}], 
      Line3DBox[{670, 979, 1044, 980, 2059, 1045, 1188, 1189, 1187, 2217, 984,
        1095, 1093, 2196, 1094, 700, 873, 2076, 714, 884, 2079, 728, 893, 740,
        2140, 901, 2089, 750, 1334, 1335, 2101, 1336, 1337, 1338, 1151, 2206, 
       1150, 1237, 1238, 1239, 1069, 2191, 1017, 1070, 1244, 1245, 2181, 1243,
        1019, 1163, 1161, 2211, 1162, 804, 2165, 960, 818, 2174, 970, 831}], 
      Line3DBox[{671, 1301, 1302, 1089, 2195, 1088, 1190, 1191, 1192, 1049, 
       2185, 985, 1050, 1197, 1198, 1196, 2219, 989, 1104, 1102, 2200, 1103, 
       715, 885, 2080, 729, 894, 2083, 741, 902, 2090, 751, 909, 2102, 759, 
       1339, 2256, 1341, 1342, 1343, 1344, 1160, 2210, 1159, 1246, 1247, 1248,
        2182, 1071, 1020, 1072, 1251, 2230, 1252, 1250, 1022, 1171, 1169, 
       2215, 1170, 819, 2175, 971, 832}], 
      Line3DBox[{673, 1303, 845, 2243, 674, 1096, 2197, 853, 690, 1261, 1262, 
       1106, 2180, 1107, 863, 702, 991, 2187, 1054, 1263, 875, 717, 1264, 
       1265, 2235, 1204, 887, 731, 2135, 896, 743, 2142, 904, 2091, 753, 911, 
       761, 2149, 918, 769, 1345, 2257, 926, 779, 1164, 2212, 936, 792, 1293, 
       1294, 1173, 1174, 949, 806, 1023, 2193, 1074, 1295, 962, 821, 2242, 
       1296, 1297, 1255, 973, 834}], 
      Line3DBox[{675, 846, 2060, 676, 1304, 854, 2244, 691, 1105, 2201, 864, 
       703, 1266, 992, 2236, 1109, 1110, 1111, 718, 993, 2188, 1055, 1272, 
       1273, 732, 1274, 2136, 1114, 1206, 897, 744, 2143, 905, 2092, 754, 912,
        2103, 762, 919, 770, 2153, 927, 780, 1347, 2259, 937, 793, 1172, 2216,
        950, 807, 1298, 1024, 1178, 1179, 1180, 822, 2177, 1027, 1083, 974, 
       835}], Line3DBox[{677, 847, 2061, 678, 855, 2068, 692, 1305, 865, 2245,
        704, 1108, 2202, 876, 719, 1275, 2130, 994, 1117, 1119, 1120, 733, 
       2137, 995, 1056, 1276, 1277, 745, 1278, 2144, 1123, 1210, 906, 2093, 
       755, 913, 2104, 763, 920, 2111, 771, 928, 781, 2156, 938, 794, 2160, 
       1349, 951, 808, 2166, 1177, 963, 823, 1299, 1028, 1183, 1185, 1186, 
       836}], Line3DBox[{679, 1030, 1031, 2062, 680, 856, 2069, 693, 866, 
       2073, 705, 1307, 2247, 1308, 1309, 1310, 2248, 1115, 1118, 1116, 1207, 
       1208, 2223, 996, 1057, 997, 1058, 1212, 2224, 999, 1211, 1000, 2094, 
       1135, 1133, 1134, 2105, 764, 921, 2112, 772, 929, 2115, 782, 939, 795, 
       2161, 952, 809, 2167, 1350, 1351, 1352, 1353, 2260, 1181, 1184, 1182, 
       837}], Line3DBox[{681, 981, 982, 2063, 1092, 1090, 1091, 2070, 694, 
       867, 2074, 706, 877, 2077, 720, 1312, 2249, 1313, 1314, 1315, 2250, 
       1124, 1126, 1125, 1213, 2225, 1214, 1001, 1059, 1002, 2095, 1060, 1220,
        1006, 1219, 1007, 2106, 1144, 1142, 1143, 2113, 773, 930, 2116, 783, 
       940, 2117, 796, 953, 810, 2168, 964, 824, 2178, 975, 838}], 
      Line3DBox[{682, 1076, 1077, 1046, 983, 2064, 1048, 1194, 1195, 1193, 
       2218, 986, 1101, 1099, 2199, 1100, 707, 878, 2078, 721, 888, 2081, 734,
        1320, 2252, 1321, 1322, 2253, 1323, 1324, 1137, 1136, 2096, 1221, 
       1222, 1223, 1064, 1008, 2107, 1065, 1230, 1231, 1229, 2226, 1013, 1154,
        1152, 2207, 1153, 784, 941, 2118, 797, 954, 2120, 811, 965, 825, 2179,
        976, 839}], 
      Line3DBox[{683, 1032, 1047, 2184, 1033, 1078, 1079, 1080, 1051, 2186, 
       987, 1052, 1200, 1201, 1199, 2220, 990, 708, 1034, 2183, 1035, 722, 
       889, 2082, 735, 898, 2084, 746, 1329, 2254, 1330, 2097, 1331, 1332, 
       1333, 1146, 2205, 1145, 1232, 1233, 1234, 1068, 2190, 1014, 1081, 1241,
        1242, 1240, 2228, 1018, 785, 942, 2119, 798, 955, 2121, 812, 966, 
       2122, 826, 1039, 1040, 1041}], 
      Line3DBox[{827, 967, 1082, 1036, 2169, 813, 956, 1253, 1289, 2231, 1288,
        799, 943, 1287, 1168, 1286, 2214, 1285, 786, 931, 2229, 1249, 774, 
       922, 2150, 765, 914, 2147, 756, 907, 2145, 747, 2085, 899, 2138, 736, 
       890, 1205, 1271, 2222, 1270, 723, 879, 1269, 1113, 1268, 2204, 1267, 
       709, 868, 2221, 1203, 695, 857, 2124, 684, 848, 2123, 662, 840, 1029, 
       1042}], 
      Line3DBox[{833, 972, 2176, 820, 961, 1254, 1292, 2232, 1291, 805, 948, 
       1290, 1073, 2192, 1021, 791, 935, 1166, 1165, 1284, 1283, 778, 925, 
       2209, 1158, 768, 917, 2255, 1340, 760, 910, 2146, 752, 903, 2141, 742, 
       895, 2134, 730, 886, 2129, 716, 874, 1202, 2234, 1260, 1259, 701, 862, 
       2233, 1258, 1053, 988, 689, 852, 2198, 1098, 1097, 1257, 1256, 672, 
       844, 2194, 1087, 1300}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
5oQ=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[0]], HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox["\"Resultado de la red neuronal\"", TraditionalForm],
  PlotRange->{{0, 1}, {0, 1}, {0., 0.9657920053888848}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.659926523336327*^9, 3.659935709809491*^9, 3.659974823960455*^9, {
   3.6599757556691027`*^9, 3.659975775590789*^9}, 3.6599758512513657`*^9, 
   3.659975898540893*^9, 3.659976517642838*^9, 3.6601837967755013`*^9, 
   3.660184175907095*^9, 3.660184920678155*^9, {3.660185131398597*^9, 
   3.6601851369007473`*^9}, {3.6601873167266507`*^9, 3.660187323432461*^9}, {
   3.6601873602834463`*^9, 3.660187368863626*^9}, 3.660509268114694*^9, 
   3.6605106754614887`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNvQe4ZUWVNrynqvY5597bOd3O6d42IsHrOOGb+eeb5ATHjBFJOgZQQYI4
igRlFBFBRDGhZElNVjIqIFnJUaAj3TTgzDAoSVL/e8VatXftc2/j8z/Pf5+u
c07vc3Za66213rVqVe237Lrvxz/yqV333e3Duy79p713/fTHd/vwPkvftOfe
1Sb/J0XxJx+v2huXFvB5c1HIy+bq3+bd4AW2jP95I75NKp566qlizz33xP9B
e/HFF4uPfvSjxaZNm/D/N998c/HFL36xOPjgg4uf/vSnn7V7+2Rvh6893PP5
558vfv/73xf77rtv8fjjj+P/v/KVrxT33HPPfu1HCPjaKa6//vrihz/8oV7T
FVdcUZxyyikT2PPiiy8uzj77bN3zlltuKY4++ugJ7HnJJZc09jzmmGN4zw28
53333VfcdNNNuHfJe95www3FD37wA93z8ssvN1cre8LWQw45JNnzySefRAk9
9thjxbPPPlt86UtfKu69997a1T799NPF5z//efxfydcMV3fAAQcUn/vc54oL
Lrjgs039voRvk+v6m4iOix3pEC/i29Q2ReK34yi7+KA9VKtmff+vawdpUbLv
/3XtIC369v2/5oM8DW8OZDgOCHz/r/lwT+rhCtoBPllwtgDF9/+aj/4EvHk4
pq9ddgNHLZsZD4+3XabnV/k/vO9B+/yXnjzwseVH3PA7/vFjeoIefMLfutqx
oX2Cfr5J95/MnaN2bPz/J00/xB9PG//H6/VCZmZOn7sk7nVr9CyzMz+qywna
x2nHVXrGuVu24/16xvmZH4XMto/Rjve1aTN3nDKzjT4Vd+sFLJ3gBfCOd+oF
jEzwjB+hHW/TM67I/KiT2fbvtOPNuuOrtmzHT/EPrr322uKb3/wmGlCwcvvt
t1/x6KOPvk/v5LWZY3Qz2z5Mx92DZXThhReCOSiuu+664rvf/e579Dpft2XH
25O/Ovnkk4s99tijWLVqVbG9Xty2mR17mW0fSg92++23F7vvvjsa53folb0+
s+NAZtuu9mChOPzww9G6HHHEEcVdd9311jYQ5g7f1ZMn4usUa9asKQ466KDi
pZdeQkcEfrba9q/6+z/LHG0ws20XOu4VelV/mfnRUGbbzrTjpXrGv9qyHS/S
Hf8m86NJmW070Y4/1Uv9u8yPJme2sTE/X8/4D1u247l6xn/K/GhKZhv7obP0
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
8URyTW2fiz/5fwF5gxJV\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Ajuste de una funci\[OAcute]n", "Subchapter",
 CellChangeTimes->{{3.6605126940694113`*^9, 3.660512698469203*^9}}],

Cell["\<\
Se puede ajustar una funci\[OAcute]n simple utilizando una RNA de una capa de \
entrada de tama\[NTilde]o 1, una capa intermedia de tama\[NTilde]o \
indeterminado y otra capa de salida de tama\[NTilde]o 1. El tipo de funci\
\[OAcute]n y el rango que se puede ajustar es limitado, pero es ilustrativo. \
A continuaci\[OAcute]n se muestra un ajuste de una funci\[OAcute]n \
sin(2\[Pi]x) en un rango [0, 0.5].\
\>", "Text",
 CellChangeTimes->{{3.660512710093131*^9, 3.660512803460742*^9}, {
  3.6605128751795883`*^9, 3.660512875668006*^9}, {3.6605129139471188`*^9, 
  3.660512949716868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", "[", "x", "]"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.5", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "30", ",", "1"}], "}"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNetwork", "[", 
   RowBox[{"td", ",", "540", ",", "2", ",", "5"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"FeedForward", "[", 
        RowBox[{"{", "x", "}"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", " ", "\"\<f(x)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Funci\[OAcute]n original\>\"", ",", "\"\<RNA\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowCostFunc", "[", "]"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.9, 0.36, 0.054], 
        CapForm["Butt"], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/wMOeX0m
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.365248, 0.427802, 0.758297], 
        CapForm["Butt"], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"f(x)\"", TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 0.5}, {6.411413578754675*^-8, 0.9999999707837952}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Funci\[OAcute]n original\"", "\"RNA\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9, 0.36, 0.054]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.365248, 0.427802, 0.758297]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.660512958911446*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJw9WAlYjun3jrKLKFtC1GRpWkTJkm6iUBSlfd/3vupr315GIVsZSxE1EiXS
SLYmvrHOWCplV0qR0CSkRqR//2vO+em6dJ3Oc8597nPOc57neae6h6zz6i8l
JaXU99////7vX7vhFvs1Mnczyw3pD8hsWiFObysjeTAUQ5YtDhWxXg7vZ0m7
nTW9TLICApZpXV624xzJ43F9YObphFX3SFbCeBXT+d0n2J8y9I98bNn870mS
p2HG0+6ZD9zOk6wKzW8aJ+cMKiJZDfVrzqm0GBaSPAN7dm5xeZHK9rPw+XbL
w6MmrP8Zpks8H2u8Y70mrh/JXDC1qJhkbZR2psh0St8geTaeDXhgFPfkNMk6
aD2f5TNu558kz8HO3nfKrtnsfy5kl76Y7vi2gGRdvPVzH9N44ATJetAb1Bzs
IMv5mocjdzpvS8xZrw+tfAwt38zxzMcYxfPKlnpnSF6AFNehT+bvZbyFqFxp
cL9xCudjEebFfDzz2PR3kg1wbal4sIoWr1+Mx5O3vmr/wPwNMadQ86JmEOMD
1QM97LsiSBYAp8NN5epTTpF+CSb9GXFCM4/8CUtwJ32Rafwe9r8Ue9I3TM+1
Zv1SLFPS2Ff1kPVG2JrRf9ZSb9YbYfLH8ke9dxh/GUK/XE+q3kL5E5bht59c
3httZH7LcXTZy+WPjCk/wnJkyUy/efUF58sYQx16Dh7z5/iNcWhH3dZjPWdJ
b4IpdR7J7cepnoIJFnzc6Vi1k+u1AtMLvmllpbP9Cti8zjx3x4rjW4ks9WUR
SntZvxJjLo8apbiD+a3CzGbRzYPJHP8quMvtHaOwgO1N8XlNv6dtMpRPwRQt
GTeWWD/iepihyXLin5JtbG8Gz3Gbqw/s5fhWI+WWt/fXLOa/Gn+3fxl3bwf7
X4OXp9S+/ryK7ddg6te55ibDuH7m+P7xjf+5V6w3R1Xw2U2V29jeAinV2jO2
u5MMC/yhcqC4Qp3XW6BkddzC5M8kSyzQOFvV6HcL9r8Wz+Zeq4oeTXqsRc/T
G47TB7H9Wmgsm3DeoZj4StYiMmFxkGYg81uH6Wd/0nMZS/nEOlzyfna7tyWf
7NehcvvIX6TeEn/JOsRnj5eVvkp6KUuc6h/+t3wM+Yclqi4FatfwfBAsMcQp
5kKtCcdvCdPepo/Wq7h/rHA+XbMrUY7jt0LSp/R9Rh7kT7DC990JI/f9Q3gS
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
mwllS/h8F2Bp/2WmztpVhv8HcO3xHQ==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 540.}, {0, 0.22883578371152258`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.660512958968677*^9}]
}, Open  ]],

Cell["\<\
Cabe preguntarse cu\[AAcute]l ha de ser el tama\[NTilde]o de la capa \
intermedia para obtener un ajuste \[OAcute]ptimo. Al graficar el costo final \
respecto al tama\[NTilde]o de la capa intermedia se puede observar que \
alrededor de 15 es seguro obtener un buen resultado.\
\>", "Text",
 CellChangeTimes->{{3.66051298129065*^9, 3.6605129977067327`*^9}, {
  3.660513308498114*^9, 3.660513345287052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrainFunc", "[", 
     RowBox[{"middlelayer_", ",", " ", "iter_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Initialize", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "middlelayer", ",", "1"}], "}"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"TrainNetwork", "[", 
        RowBox[{"td", ",", "iter", ",", "2", ",", "5"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"costs", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", "[", "x", "]"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.5", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rescost", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TrainFunc", "[", 
      RowBox[{"i", ",", "500"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"rescost", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Tama\[NTilde]o capa intermedia\>\"", ",", " ", 
      "\"\<Costo final\>\""}], "}"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7DNfNh1oTVhoDxVwsG6aOl/mbTqUz+FQPnvq
jaW/Y6B8AYeoI8+zojQCoHwRh4rnVx38tT2hfAmHX0veP9i6zQvKl3HgDN/Y
OCMGZr6Cg8YW5k7LLm8oX8lh0/6tb2v2BEP5Kg6GCRy3N7bAzFNzOH3Z/tDH
Qg8oX8Ph68XbT2pWwPRrOfjeqlvydI0/lK/jENBWPWFXJcx+PYeWkJBbs/19
oHwDhx+/Pxpx/IW539DhediCPxLMMPVGDr92sTxpuRUE5Rs7HDbJy6hgg9lv
4hAUuvTLnTXe9gBETlqH
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.703125, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo final\"", TraditionalForm], None}, {
     FormBox["\"Tama\[NTilde]o capa intermedia\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotRange->{{1., 20.}, {0, 0.03393953299515113}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6605131319337893`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Determinar el idioma de un texto", "Subchapter",
 CellChangeTimes->{{3.6599328279735928`*^9, 3.659932835781384*^9}}],

Cell["\<\
El objetivo de esta aplicaci\[OAcute]n es determinar el idioma de una cadena \
de texto. Cada idioma posee una distribuci\[OAcute]n caracter\[IAcute]stica \
de la frecuencia de aparici\[OAcute]n de cada uno de sus caracteres. \
Aprovechando este tipo de distribuci\[OAcute]n se puede entrenar una red \
neuronal.\
\>", "Text",
 CellChangeTimes->{{3.659937163460154*^9, 3.659937278867896*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenLangDist", "[", "lang_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "joineddict", ",", "diclen", ",", "dictcounts", ",", "dictfrec"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"joineddict", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"DictionaryLookup", "[", 
         RowBox[{"{", 
          RowBox[{"lang", ",", "All"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"diclen", "=", 
       RowBox[{"StringLength", "[", "joineddict", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dictcounts", "=", 
       RowBox[{"CharacterCounts", "[", "joineddict", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dictfrec", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"dictcounts", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/", "diclen"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"dictfrec", ",", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"CharacterRange", "[", 
                    RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], "]"}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}]}], "}"}], "]"}],
            ",", "Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Letra\>\"", ",", "\"\<Frecuencia\>\""}], "}"}]}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "13"}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "lang"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<Spanish\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<English\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<French\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.659937032971423*^9, 3.6599371215720577`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQDQEf7I/9yWXe0H/YHirgcNf3esSeL5OgfA4HI1Z2
+Wlya6B8AYdMMd8AjyVLoXwRh/mCXk1TJu2A8iUclneUCbWltkH5Mg5XWDbI
v5wyEcpXcOgS/ns9yq8ZyldyWDrRrLu4YjOUr+Kgfff/wnyPKihfzeGgVdNe
Lz9uKF/D4ZPiVQ4eoxVQvpbDImPdw6IH50P5Og7iTzhT7r1cD+XrOTz9smHf
1fVboXwDBzuzIoaNi6ZD+YYOE7+7Wa5dnwflGznozU4Wlb2wHco3dnj7PJ8/
OxHmXxOH2305ZZWFq6F8UwcOl48xEwtg9ps5sKy41tk2swXKN3fwzC48OT99
mx2Eb+GwcumDwn9NkVB5S4fV7nquO9QjoHwrh2yp/Yd276y3h8UPAypwQOVy
oPEF0PgiaHwJNL4MGl8Bja+ExldB46uh8TXQ+FpofB00vh4a3wCNb4jGN0Lj
G6PxTdD4pmh8MzS+ORrfAo1vica3QuOP5p/Bmn8APB7nyA==
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Spanish\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.1528224961038857}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 3.659937122825492*^9}, 
   3.660510676767747*^9}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt080rwwEYB/BfOKwUO4zMpma01jaz99moPe0gSbJRZJai5UZqlFwYO3Cx
xVpIWS4ieX+5IMoKObjQhuTtgNRom+KCPDvs+QscPPX09HnqOT1981s6rI4U
hmGqv/tn/lbEJPAGrSNbqyZcwEOsmWvPG0WzQGo/Cx88zaDZkB3qrS/PTpgD
m8zT3RtvG50D18fdV7HPYTQfdNrz8OXeFFoA4lBehbnMjxZCrSVYd566gS6E
hsesoObehhZB+4Q34yLqQoshwJa93pzMoSXg3ilyLfgm0DKQtPofzOoVtBxm
43FLF2sRrQDfae2hLTKJVsKH98i4PG5Hq8BZkOYfcybu1fDex4p7outoDSh6
h7jF4SW0FrjpUDoenUbrIPPWzumpHETrQZr7sl8V6keXQKxpfmDt2YE2wG4H
r7G5xoM2QlvAXO9zd5oS/2GSC5LJImYTc4hziPnEAmIhcSGxiFhMLCGWEcuJ
FcRKYhWxmlhDrCXWEeuJS4gNxEbi//z81fx8Afwf8IY=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"English\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.11370771469410355`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 3.659937122825492*^9}, 
   3.66051067747614*^9}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt071LQgEQAHBr6AsHKQcHBxUxMTFLnz5F8MKCyChoCoQiJcWiGqJaM15J
oNQSoVBEU0sNfRtFvIJKaKhJMLCgpCGkL+hbqOgcur+goYPj+N103HFyd19L
Z75AIGj6yu/6E3f2QF9vYJdds2MDwsUpLs6Po4sgWiNPe4XzaBG4Xkb51edp
tBjO4pkbPraDloBvzFYSYENoKRxcG5rzHJNoGdTG2rqzDIdWgOc+rNmY2EQr
Yao3HVyUtKFVEOF6Go8bWLQahrfD55Hn3DwaYJzZda8ygtYCw4sc7vgKWgf1
H8pbrnQJrYeCVlFCUxFFV8HpQ+Zi1tOProbXypmjR3MMbYCOQ39objC3HyMs
1Pn3r1TLaAZST4Nb/GVuHhO4LsoaLb4g2gyugUKxTShBs3CyOfSWKO9CW8Dl
lHGmPS/aCu/JqLM9OWLP3UfwO+A3i4hFxGJiCbGUWEasIFYSq4jVxBpiLbGO
WE9cRVxNbCA2EjPEJmIzMUtsIbYS///PX/2fT0iG8KY=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"French\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.11611568460447279`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 3.659937122825492*^9}, 
   3.660510679104156*^9}]
}, Open  ]],

Cell["\<\
El entrenamiento no se realizar\[AAcute] sobre el diccionario debido a que el \
objetivo es clasificar un texto, y en los textos la distribuci\[OAcute]n de \
frecuencia de caracteres es modificada por las palabras que se suelen repetir \
m\[AAcute]s com\[UAcute]nmente. Los datos de entrenamiento se \
generar\[AAcute]n a partir de muestras de textos. El muestreo se realiza \
seleccionando partes aleatorias del texto y contando la frecuencia de aparici\
\[OAcute]n de cada caracter. Esto genera una lista de 26 elementos, donde \
cada una corresponde a la frecuencia de aparici\[OAcute]n de cada letra en \
orden alfab\[EAcute]tico. Los textos de entrenamiento disponibles \
est\[AAcute]n en los idiomas Espa\[NTilde]ol, Ingles, Franc\[EAcute]s y Alem\
\[AAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.659937305771235*^9, 3.659937341954743*^9}, {
  3.659937379178846*^9, 3.659937623641363*^9}, {3.659937656105071*^9, 
  3.659937672065298*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"categoricalConvTable", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetTrainingData", "[", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "path", ",", " ", "files", ",", " ", "samplesize", ",", " ", "samples",
         ",", " ", "trainingdata", ",", "text", ",", "langname", ",", " ", 
        "del", ",", " ", "len", ",", " ", "samplepos", ",", " ", "textsample",
         ",", "counts", ",", "dist", ",", "languages", ",", "basearray"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
         "\"\<TrainingData/\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SetDirectory", "[", "path", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"FileNames", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"samplesize", "=", " ", "5000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"samples", " ", "=", " ", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{"trainingdata", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"langname", " ", "=", " ", 
           RowBox[{"FileBaseName", "[", "f", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", 
           RowBox[{"Import", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"ToLowerCase", "[", "text", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"text", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], 
               ",", " ", 
               RowBox[{
               "\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], ",", 
               RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], 
               ",", " ", 
               RowBox[{
               "\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"del", " ", "=", " ", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Keys", "[", 
              RowBox[{"CharacterCounts", "[", "text", "]"}], "]"}], ",", 
             RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"text", ",", 
             RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"len", " ", "=", " ", 
           RowBox[{"StringLength", "[", "text", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Genera", " ", "muestras", " ", "y", " ", "toma", " ", "la", " ", 
            "distribuci\[OAcute]n"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"samplepos", " ", "=", " ", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"len", "-", "samplesize"}]}], "}"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"textsample", " ", "=", " ", 
              RowBox[{"StringTake", "[", 
               RowBox[{"text", ",", 
                RowBox[{"{", 
                 RowBox[{"samplepos", ",", 
                  RowBox[{"samplepos", "+", "samplesize"}]}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"counts", " ", "=", " ", 
              RowBox[{"CharacterCounts", "[", "textsample", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"counts", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", 
                  RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"dist", ",", "langname"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"ReplaceAll", "[", 
               RowBox[{"dist", ",", 
                RowBox[{
                 RowBox[{"Missing", "[", 
                  RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"trainingdata", ",", "dist"}], "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", "samples", "}"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "files"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"languages", " ", "=", " ", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"trainingdata", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"basearray", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "languages", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"categoricalConvTable", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"languages", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"basearray", ",", 
              RowBox[{"i", "\[Rule]", " ", "1"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "languages", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "trainingdata", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CategoricalToNumeric", "[", "td_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", "td"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"data", " ", "=", " ", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"categoricalConvTable", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"categoricalConvTable", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "data", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericToCategorical", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "found"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", "list"}], ";", "\[IndentingNewLine]", 
       RowBox[{"found", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"found", " ", "+=", " ", 
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"{", "data", "}"}], ",", 
             RowBox[{
              RowBox[{"categoricalConvTable", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"found", " ", "\[NotEqual]", " ", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"data", " ", "=", " ", 
              RowBox[{"Replace", "[", 
               RowBox[{"data", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"categoricalConvTable", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], " ", "\[Rule]", " ", 
                 RowBox[{
                  RowBox[{"categoricalConvTable", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "data", "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Return", "[", "\"\<Clasificaci\[OAcute]n erronea\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetDistFromText", "[", "text_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "t", ",", "del", ",", "counts", ",", "dist", ",", "samplesize"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", " ", "=", " ", "text"}], ";", "\[IndentingNewLine]", 
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"ToLowerCase", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", "  ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"t", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], 
            ",", 
            RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], 
            ",", " ", 
            RowBox[{
            "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"del", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"CharacterCounts", "[", "t", "]"}], "]"}], ",", 
          RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"t", ",", 
          RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"counts", " ", "=", " ", 
        RowBox[{"CharacterCounts", "[", "t", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"samplesize", " ", "=", " ", 
        RowBox[{"StringLength", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dist", ",", 
          RowBox[{
           RowBox[{"Missing", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "dist", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetRandomTestData", "[", "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "path", ",", " ", "files", ",", " ", "samplesize", ",", " ", "samples",
         ",", " ", "trainingdata", ",", " ", "f", ",", "langname", ",", 
        "text", ",", "del", ",", "len", ",", "samplepos", ",", "textsample", 
        ",", "counts", ",", "dist"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
         "\"\<TrainingData/\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SetDirectory", "[", "path", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"FileNames", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"samplesize", "=", " ", "5000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"samples", " ", "=", " ", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{"trainingdata", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", " ", "=", " ", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"files", ",", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"langname", " ", "=", " ", 
        RowBox[{"FileBaseName", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", 
        RowBox[{"Import", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"ToLowerCase", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"text", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], 
            ",", 
            RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], 
            ",", " ", 
            RowBox[{
            "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"del", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"CharacterCounts", "[", "text", "]"}], "]"}], ",", 
          RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"text", ",", 
          RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"StringLength", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"samplepos", " ", "=", " ", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"len", "-", "samplesize"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"textsample", " ", "=", " ", 
        RowBox[{"StringTake", "[", 
         RowBox[{"text", ",", 
          RowBox[{"{", 
           RowBox[{"samplepos", ",", 
            RowBox[{"samplepos", "+", "samplesize"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"counts", " ", "=", " ", 
        RowBox[{"CharacterCounts", "[", "textsample", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"dist", ",", 
          RowBox[{"CategoricalToNumeric", "[", "langname", "]"}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dist", ",", 
          RowBox[{
           RowBox[{"Missing", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "dist", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScoreResults", "[", 
    RowBox[{"td_", ",", 
     RowBox[{"trials_:", "100"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "score"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"score", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"data", " ", "=", " ", 
          RowBox[{"GetRandomTestData", "[", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
            RowBox[{"Round", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"FeedForward", "[", 
               RowBox[{"data", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
           " ", 
           RowBox[{"score", "++"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", "trials", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Pruebas superadas: \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "score", "]"}], " ", "<>", " ", 
        "\"\< de \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "trials", "]"}], " ", "<>", " ", 
        "\"\<.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ClassifyText", "[", "text_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "dist", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"GetDistFromText", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Resultado de la clasificaci\[OAcute]n: \>\"", " ", "<>", " ", 
         RowBox[{"NumericToCategorical", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"FeedForward", "[", "dist", "]"}], "]"}], "]"}], "]"}]}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", 
   RowBox[{"CategoricalToNumeric", "[", 
    RowBox[{"GetTrainingData", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"26", ",", "26", ",", "4"}], "}"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNetworkAndMonitor", "[", 
   RowBox[{"td", ",", "200", ",", "10", ",", "3"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Test 1.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScoreResults", "[", "td", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Test 2.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "ClassifyText", "[", 
   "\"\<En el principio cre\[OAcute] Dios los cielos y la tierra. Y la tierra \
estaba desordenada y vac\[IAcute]a, y las tinieblas estaban sobre la faz del \
abismo, y el Esp\[IAcute]ritu de Dios se mov\[IAcute]a sobre la faz de las \
aguas. Y dijo Dios: Sea la luz; y fue la luz. Y vio Dios que la luz era \
buena; y separ\[OAcute] Dios la luz de las tinieblas. Y llam\[OAcute] Dios a \
la luz D\[IAcute]a, y a las tinieblas llam\[OAcute] Noche. Y fue la tarde y \
la ma\[NTilde]ana un d\[IAcute]a.\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClassifyText", "[", 
  "\"\<In the beginning God created the heaven and the earth. And the earth \
was waste and void; and darkness was upon the face of the deep: and the \
spirit of God moved upon the face of the waters. And God said, Let there be \
light: and there was light. And God saw the light, that it was good: and God \
divided the light from the darkness. And God called the light Day, and the \
darkness he called Night. And there was evening and there was morning, one \
day.\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.659932867743372*^9, 3.659933034827691*^9}, {
   3.6599330886853037`*^9, 3.659933236841154*^9}, {3.659933271444338*^9, 
   3.6599333049196253`*^9}, {3.6599334543323517`*^9, 3.65993347072902*^9}, {
   3.659933534340192*^9, 3.659933538548366*^9}, 3.6599336343574057`*^9, {
   3.659933696844008*^9, 3.659933772299573*^9}, {3.659933848549431*^9, 
   3.6599339585914307`*^9}, {3.659933997615103*^9, 3.659934066057029*^9}, {
   3.659934099047036*^9, 3.6599341012959538`*^9}, {3.659934165039351*^9, 
   3.659934169364889*^9}, {3.659934260845233*^9, 3.659934261523334*^9}, {
   3.659934327164485*^9, 3.659934489920456*^9}, {3.6599345329767323`*^9, 
   3.659934545250003*^9}, {3.659934581374588*^9, 3.659934618811349*^9}, {
   3.6599346653336353`*^9, 3.659934704108684*^9}, {3.659934842650635*^9, 
   3.6599348867642813`*^9}, {3.659934927758157*^9, 3.659934998809301*^9}, {
   3.659935083304237*^9, 3.659935084762933*^9}, {3.6599351242068663`*^9, 
   3.6599351502083893`*^9}, {3.659935590158731*^9, 3.6599355934011517`*^9}, {
   3.659935665780664*^9, 3.6599356682442713`*^9}, {3.659938009494513*^9, 
   3.65993801806433*^9}, {3.659938136327649*^9, 3.6599382054696627`*^9}, {
   3.6601850041937447`*^9, 3.6601850184731827`*^9}, 3.660185157194158*^9, 
   3.660509245706875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Clasificar d\[IAcute]gitos", "Subchapter",
 CellChangeTimes->{{3.65996821713584*^9, 3.659968227677921*^9}}],

Cell[TextData[{
 "Utilizando una RNA se puede obtener un buen nivel de precisi\[OAcute]n a la \
hora de clasificar d\[IAcute]gitos. Para esto se usar\[AAcute] la base de \
datos MNIST que consiste de 60000 ejemplos de d\[IAcute]gitos en \
im\[AAcute]genes de bloques de 28x28 pixeles.  \n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3Qe4LVlRBWBnQMWImLOCmHMERUEQMCdGjKgMCgbUURgFFBWdUUyMIMmM
EUwYwYgBxSyYc86YIxix5W++BXt6+r7X7845nU7V9+158+476Z6urlq1au3a
t7zXVXe7z+Uv9EIvdP+bPfc/d7vyAXe83/2ufNAVN33uX+70oKvvfa+bPPd/
Hvfc9eDnPsYPu66rVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atU6ynqudbVqXWiVD9ZacpX/1Vp6lQ/WWnKV
n9Waa1Wsq7XkKv+rtfQqH6y15Co/qzXXqlhXa8lV/ldr6VU+WGvJdQw/KyuL
HcPXzlrlg2VDK/8rW9rKB8uWtMJ7ZXNZxbqyJa38r2xpKx8sW9IK75XNZRXr
ypa08r+ypa18sGxJK7xXNpdVrCtb0sr/ypa28sGyJa3wXtlcVrGubEkr/ytb
2soHy5a0wntlc1nFurIlrfyvbGkrHyxb0grvlc1lFevKlrTyv7KlrXywbEkr
vFc2l1WsK1vSyv/KlrbywbIlrfBe2VxWsa5sSSv/K1vaygfLlrTCe2VzWcW6
siWt/K9saSsfLFvSCu+VzWUV68qWtPK/sqWtfLBsSSu8VzaXVawrW9LK/8qW
tvLBsiWt8F7ZXFaxrmxJK/8rW9rKB8uWtMJ7ZXNZxbqyJa38r2xpKx8sW9IK
75XNZRXrypa08r+ypa18sGxJK7xXNpdVrCtb0sr/ypa28sGyJa3wXtlcVrGu
bEkr/ytb2soHy5a0wntlc1nFunXY//zP/3T/9V//1f3Hf/xH9+///u/dP//z
P3d/+7d/2/3lX/5l90d/9Efd7/7u73a//uu/3j3jGc/ofuEXfqF72tOe1v3E
T/xE99M//dP933/lV36l+43f+I3u937v97o/+ZM/6Z/3d3/3d92//Mu/dM96
1rP61/3v//7v7n//93+X/lWvZ+V/ZUtb+WDZklZ4r2wuq1i3DoP14DL4DE77
q7/6qx67/eqv/mqP6Z7ylKd03/u939t927d9W/cN3/AN3Zd/+Zd3D3/4w7uv
+qqv6v/+xCc+sXvSk57U/fiP/3j3cz/3c/3z/vAP/7B/nX/4h3/oX/fZz352
j/nWZOV/ZUtb+WDZklZ4r2wuq1i3DoPF/umf/qn7m7/5m56f++3f/u0e5/3A
D/xA903f9E3dYx/72O7zP//zu0//9E/vPumTPqn78A//8O793//9uyuvvLL/
+2d91md1X/RFX9Tjv2/91m/tn4f3+53f+Z3uz//8z/vX/dd//dfuP//zP5f+
Va9n5X9lS1v5YNmSVnivbC6rWLcO08PF68FmMNrTn/707slPfnKP9b7kS76k
x3n3vve9u7vf/e7dXe961+4t3/Itu1vd6lbdbW5zm/7vH/ZhH9Z9/Md/fPeQ
hzyk+7Iv+7L+eThB/d8/+IM/6P7iL/6i+8d//MceV67Jyv/KlrbywbIlrfDe
+ez//u//zlzPec5z+kW/NGXpe0VLpReGe7HkzCx9sr//+7/v8zStFQ7F32mv
PA+XQpeV1/F8/+5x+mxy8J/92Z91f/zHf3y9hd+x/LvHeW3vldf1el7X73Vj
rWLd/Oa68THXkJ/p5T7zmc/sfv/3f7/HZz/2Yz/Wfdd3fVfP6X3e531e94mf
+Ik9nrvLXe7Svd3bvV33+q//+t3LvuzLdje5yU26V3qlV+r/frvb3a57z/d8
z57vu//9799zgV/7tV/bffd3f3ev9dPfhSX58pqs/O80LP4ejSrtgngmHv71
X/9175tinVgqTvp394bneK7YfYh4N2blg9s2PiLXJlfLlXJm/EouHcuxNM5y
MX9LvuafXo+/zWWF985nZ+G8YW6dsv7t3/6t9xuYi15ef836rd/6re43f/M3
+0U/L4/K0b/4i7/Y/fzP/3z/d7orvgQTim1imtehuaer97if/Mmf7H70R3+0
+/7v//7ue77ne/q8bPl/i1brR37kR/rHee1f+7Vf61+X/4qJ4uEhtPcV6+Y3
PsnHcG38TN7D6f3sz/5sz+nBaQ972MO6Bz3oQd1973vf7oM+6IO6d3u3d+u5
vDd+4zfuXuu1Xqu7+c1v3uO9l3u5l+v//uZv/uY95nvv937v7h73uEf/vM/+
7M/urrvuuu4JT3hC70t8Vxxck5X/nYZFn9piPPFMPPypn/qp7od/+If7WIfX
di/4d/eGeyR187FycPngto1fybVyLM2yvCxnqnP5lVya/KqOtr7v+76vr6vl
Yv6W/scSOufCe+ezMbw3rCtdyylLTMK92fNIB2UvJC08H4HT9Mp+6Id+qM/P
8Nl3fMd39Lopfxe/5FY+RDP1p3/6p70Pimf+3ePk9Mc85jHdF3/xF3ef+7mf
2/fhPudzPqf//2uuuaa79tpru0c+8pH942jxf/AHf7B/Xa+jPlGT+L1urFWs
m9/4JB/L3gy5TdwRg776q7+61+LBa3Abjd4d73jHntd7wzd8w+61X/u1u1d+
5VfuXvIlX7LHe3Cfv7/O67xO9yZv8ibdO7zDO/Q8YLR9n/AJn9D72Dd/8zf3
78En12Tlf6dh/B3Ww2OLq3KsfGyP0dd93df1e4++5mu+ps/FT33qU/vauO2V
iN/H2ltePrhtkwvFNblajJOX5cyv//qv7x7xiEf0PRL5tV36H/a82f8mL3tu
dM7iMqwwlxXeO5+N9W+D9cQbcQP+mrJce9gKxlMXiEmPe9zj+pgkJ3/lV35l
j9fEKfkURpOn+dfjH//43ofwgWIWbg5OpKnyeLwLjb18LC/f+c537nP6ne50
p+5d3uVd+nxNk0WTr5cH+z360Y/uX9fr/PIv/3KPEfxeN9Yq1s1vasdgPblP
H1cdoH9Lp/cBH/AB3e1vf/vubd/2bbs3e7M3625961t3r/Ear9G94iu+Yt/H
femXfunuZje7WY/3XuzFXqz/O54P7oMH9Xc977a3vW13hzvcodf9fcEXfEFf
M3ivNVn532mYmCqX0pKKq/YiiWdf+qVf2n3yJ39y9yEf8iF9bcJPv/Ebv7Hn
ut0bnhPd6SHq2zErH9y2yYX4Fbn6O7/zO/u8LGfe73736z70Qz+0743Ir1nv
/M7v3L37u79799Ef/dF9LuZv8qrXwKXogeCW57LCe+ezIdazztLhXWyJS2oF
9SZ894Vf+IXdQx/60L5WgO1wcZ/xGZ/RfeqnfmqP3eTUj/iIj+g+7dM+rcd0
uBq9Cb74Mz/zM70f6tFdffXV3Ud+5Ed27/Ee79FzMa/7uq/7/DwuZ7/CK7xC
/3e5+23e5m16v/TacIDXVbfg+XCGh6hBKtbNb3C6HEavBH+pB/Bv/EoN4Lq/
+qu/eq/N4xPw3Eu8xEv0GO9FX/RFuxd5kRfpXviFX7jHe/70dz+H/fB+L/My
L9O9/Mu/fPcqr/IqPU4U78Q+taw6dk1W/ncaJqaqofmfeUH2j4tntKY0CG/x
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
ZWoX94tZKuKZWWc+H3/lm3QK6iO8tuf5HGKie4JWVs1Mt+o94US+Ple9uxX/
G/qDxQ/c/75b/Xe6XjFGDXrKeE+9rOYQY/m0vCtG662IxZlvT3/FJ2mgxfmc
68d/9fPmsq344N4Nt6dWcJ+YZUqzJ9/L/7Ce+0v8y3kMibFDTTNtv9oCb4w3
4lfuP5yS+O191mSnhPfkFbgKpnedaSlxbnqs5uzQ+eLU6OvETTgd5//4xz++
9wWxQr6SO2mmMi8vc/vkYPyIXn7m79CSeC17avmXXD48p8zf1Rs0nXoLeD9x
CEb03j6XXoXPqQ7xOnPO7DmUVawbt8wQc01x0MF6YobYoV8qn8FJMBn/EoMy
7yRzlK3MzbMvg39m1jE9Apyn36pfITbBXGoZNQUc599hQrkR7sNPwxaea94K
rIEP54f8U92kNg7uEzfxLHrOMAgOSnwUM90X6mWv577wGL7tHszcs7YOOoZt
xf+iO46WXGzA/+uZ40bth3FdXSPfJ4wj35wq3lO3i8/uDzU2v8XLBO/RXMHG
OYuS7kBcF/v5Lp5nLtuKD+7dXHN51n2lz0AnRV9vr0X6HOKWONrOqs+Mqux7
U1eIj+plcdT55eKg+gy3t7Z9laeE99LTzRlr8hV+gTYKX+G641HkMzHTz3AX
+qy0vfgVfV7XF+bDWcB9rj28px6gGVFHir94QtgRT+ccM3XkkNeF9zI3hm/I
9Xg+ccxngxPFM7FJTtXb8/mPdd7PMa1i3bhlTqRaxLW1F5dP8kU5Hg+nR6rW
gN3UnkPdcGrP6EfVnfwz51rIhea40IjiidShsJmaJmdDwnx6vLCa/q7/9zzv
r0/heWZSwaE4Zn7qPvJ5+av7yb+rmXDh7oV8ppylC6P4PXAx9hrz7cwq4P/u
z1M/y0pswN/DwfoR4oaZ/DC/mhNu1svHueJM7es/VbzHD/HKahffjTpbn5vv
Z7aVfG0On/tAr4S/i/VqDTPr5+RgtuKDezdYDNaXV3E94YfFLfdX5pcOZ9Xn
bHD3n5or50Tao0Gzh48RB3FKcvna+nCnhPdyZkpmc9Jq4srkKngcJnO94Kqc
P+ba+VMMxYXYQ+v66qNkfh8eBd7jA7gXPsN37AGTT8UjPIjYnf5M27/P3nC+
MTwjVQ0SzR/Ox2dW7x+LAzmmVawbNz4J66k5xSHXWo8K1hNH7H/QY+BbOLPs
qWi1JJkFpBcL63mcx8MCMBs9AJ5QfOOP+hfqGphSLWOfEExnbhRsqa/hveVR
+VHNgm+GQ/kkP+SnYhqsxl/9zGO8ln289gDnjJnMqHK/qJ/1pcVY+NDMK7jR
/eHe9H0cw7bif+o/97jvFt8PT8PFmfOPf1Vbwv24vsyxPkW8xxdhN2dl8Ftx
OXNxxeWcZyov45U9jtZUDW+mLt+bc5bpVnxw70Y3pW6lQ5bX9Rty9p46Kvt8
2rPA5Xi1q3uPRkY9696z31ucpNlz34mDOYt+zlnKU+yU8N7Y2dqZx+yeF19z
zphclj4TbGi2kzme+Dp9LXsanc0j9sJ5fEEuo62iaZdf5VGxiF+J2V6v1WgO
1/CztWdCjun+tmYV68bNtQ3njK/AO6gV9V3N5dEz4GPyFy5ZzTk2D1lsgqmC
9fDMODrcnX5FtEreA3es7wBHwFz+3R4hvS6+qzfhZzROtK5qjZwnH0zGT7P4
paU/gjuES9RDmVOUvOvz+330pfVP1NY+i7rK6x+zJt6K/7nvxR95I/u5XCPf
FxyNu8psT71LtYCfnyrek2ejs89+Svvl1D78To6GA+FB+lL1zjOe8Yzn+9zW
zy89a20pBs5trr3+Xfq4cra+hvrJPjM16th8ejjQ/g0+5rE5X1LvQ3wVv5aa
rTfFTgnvjVnO227nMg+1RP7OP3AielB4D/t16WbUkvgUvqDnj7ugAeBD+mU0
6ThD9cRZeO9UrGLdeM0ht0dTClupEXB7eDnaAXsmotfL/gwYanjOssfIc5nL
pn+Fp5PjcHm0AHwZjsBrqGH4Jk5OnYvDw0fDfbR16Xl5rDiWfuuFzhfFmXgN
9wDMmZnPwXw+v88Ii+IS1db2HsOJcGj462PYVvxP7MH1qhFdI/Wi2pE+xL5q
3ALcLC+ZMXcqeG9YF1v6sXyXHlVM1rfFz0R/lRlZ7gcaK9+PPJ9+ifqHT89l
W/HBPVnrN/EdPTO1LG08TaxYmZlUNFqZb9XW0+KYf1NPqyvk/3B79KBec+1z
MwrvPecGZxkMzzoRD1JHihf2d+lHqQf0+uH9tp8rJmcPYvq50YkU3jvtWBct
fnvOn749nESjpT6wN4eP6dGpH3IWLV6vXdmXkfl4/A/WwzuLXzQFbR9XfuPb
/DB7weU9XAdcZ74K7MfPg8H4rceG6/a5L3QG0BjeS6xs97Tpr+Fj6KnCI3o/
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
AvlAHQ8TyJE5Uws+WKOP7j3Wwdp6AGpOmid1Il2VOOLaudauqZozewvhHz+T
v+RE89TUmfK13j2t8JbmuE/Zn5v+td85tQzNgroIb40XPYZtxf+C93Bt+LTM
GKZ5w43lDCh+BP/BfGYBwFfyHawDP4s1U5bvHo6CK2EufBy81i64jn/iE9Ul
ODQ5Nbq7aO+iufM4nwlPN1xeXx/aZ/We8J1eGo6S5s/c+syg15+zD0SvWgzV
4/B9eI/2nPL0dOVzWFKM9Vw115CnWbLvsRUfXKPJZ8F62VsEz4sb6gKYzbUX
d+RN9YCaemzeHm4YHuS/ag6+iJPhY/KpHN6eY7827uS8VnjvcNbOEZWjxZng
Pn4pl9mzhncW39TJehfp78r7alU+yUdznp+Yhhei/Uq/T70tLsIT9AbZQwRv
ZA9H4b15fdD37nqb86VGpGuHy+Ve100MGvafxB69e5yHGgC3hw/Eu9gbRhvg
Wm7Fpszfo1/Qi4QZ4Aj5W7xWv8A5+PFj2Fb8T67Rh8ThwzfwG9/gIzm3R+6S
y2A+PJ9egB6nGAEXqg/lsSlLDPLaeqs5s6JdXt+SP+nqxCn50vL/fpa9Zq6r
z+ja4yNxenAijKfXK3aFv4M14Tt9Yr1X/Wu4zlwZdTIdIf5Gf18N5WfuCz07
r+m91Mi+j2iifS/eE9dJayj2thqXpfdVbsUH12iuIayHq8XZ6tPrB+Cz1Q18
jk/yidQAwXjBeVl81v0iBukviEHyKS2EfRpi+dbm206xwnvHs5ynJX6nxyuf
8Sk+CgeoSdTC4Z/54ZgGOWfxiuf6JTnXr53RJ7bpI7oX8Ixr05juPdapOV1n
mAe2h18yg0X/Hh8RHUlbc8LyeC66Ez0suU8fmHYPb7uW+SvDMwlyLlb2p8Ol
Zq/RwKiXM0+a/7YzTvWvYYKcZa/2EWv1r+V0+waOYVvxPzWba2/OK+yvtuMb
qQ1hLDEitSDtuf4UzCVGiCP0cR47ZdEShA+RK9s5tOIQLOX92n0V7fuKWfAg
//beXk884/NwGW5Sbes+8LvoT9jHi8O2xzc4zxlq7p1okodnBqp93BcwsDoB
xvUZon/2WX1235P34U/H4orPa1vxwTWaOMMXso9cD8U9oh/Cx/TIxvY/ji21
CT2J2gCnLRfTSekN87MtaWguxQrvHc/kQzkQzxdNl9pBXBPj9Hf1+nA66l59
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
148pvLc9HxQPcTg4kcymF7/wJvgb+TZz0uA+vEzhvcPYFvAevZF7l/YJH0Kf
ZN+hPq77HF7jG/ygrQsyizYzki34r53XSNuXPRf2NuJXLHEly15HOM/sdlyM
Pbd4FGdO4aLVJ/CoHEsfBZ/K7XL9UJ93ynZqsa7V84lx6lrYi3/QJ+Df1Ld4
a3N6YL/sNZ+yPNZzPNfMbj5ohqm4B+uJqXiSVit6ynZq/rdl47P4Hzy1WKuf
41wiNTdttpgvltc8lu35oFgkDtK35LxTud2eS7oUGE4/zV60cDc5l77w3o2z
LeA9dYCchkdzL+uh2oeop0W7yweC64bn0Lcadz9XKwTrZS4yDk9vzGvSENBT
WbSBll4CXzRXJecw89NnPvOZfe6WV9Wj8nl7NvMezsQ4pJ1arGuve/Zft+c7
85ecByP+6fnS2eHkpiyP9RzP9RqtD47t+y7/Oy3/27LxY3EfVw0L6Pc5g9IM
Sxov/Rw1feG97fmg+CfuiV8wn9oXj2t2gVyLXzHfTM/NWUSucXT2hfdunG0B
78FV6jx7tdR5zsqj38W9wXzufbXAxRb/oAXVt7XXwvkXYgf/yrm29oDgDy09
BMvcNOcww3pma/DP5Njgu7KLW8W6siWt/G87Jq7q69ijBwvopdCn2tNOxyN2
44DU63KAszHtm6MBgxue9KQn9Xw3Xc2arHzwBWdh5dyE9O/MVtM/w7XozTsL
S9/NNdaHMw8DBvR3s0bxNGYSmLWr10GrXHZh2wLe4xPue31TmM/eXFon/X4Y
zf1/5ZVXXnTxDfUfzhhvZ3YFHRRs95jHPKbvFePwLPVClrMYYT17iegN1Izh
UqpPNt0q1pUtaeV/2zE1NP5HbU3rqt6X02n51N9it1ieOh335wxVe949jo5V
PximWJOVD75gH1s0za4zLRRtlN49XH/ttdf2s3TptswTlbtp+2B6f3dmLh29
vhvtH/84pbMhz2tbwHvDeSzm9bin1QPub/j+4Q9/+EWX/RWPfvSje427ecj2
WsCO+sRwpFllzuvIUlda9mHg9eitcI16aKdyBtohrWJd2ZJW/rcdE1fb/U1i
f/Y3ye9iN3yn7pcD1Og4PXuWzGe1txdvBFOsycoHu+tpmvV1XWfcHJ0U3ZZz
FPTjYXt52jWG8S28jL/jcPEzuBjYngZwbdh+jbYFvDc8XyNn5dKou9ZmW8CA
U5YaAoYzg9ZzxRB6ea9nljO9e7vweWbpwZtiD6yXvY617/bSrGJd2ZJW/rcd
y+xKWEBPFnYL7qPpE7vFcnW5/9cPzHx7j5Mr5H81+ZqsfPCGc+mH+3XxuXI7
bkeedo3lbnnejA5/hwvDw5ziWUHntS3gvbJ9WMW6siWt/K9saSsfLFvSCu+V
zWUV68qWtPK/sqWtfLBsSSu8VzaXVawrW9LK/8qWtvLBsiWt8F7ZXFaxrmxJ
K/8rW9rKB8uWtMJ7ZXNZxbqyJa38r2xpKx8sW9IK75XNZRXrypa08r+ypa18
sGxJK7xXNpdVrCtb0sr/ypa28sGyJa3wXtlcVrGubEkr/ytb2soHy5a0wntl
c1nFurIlrfyvbGkrHyxb0grvlc1lFevKlrTyv7KlrXywbEkrvFc2l1WsK1vS
yv/KlrbywbIlrfBe2VxWsa5sSSv/K1vaygfLlrRj471atcbWoXytfLDWeVb5
X62lV/lgrSVX+VmtuVbFulpLrvK/Wkuv8sFaS67ys1pzrYp1tZZc5X+1ll7l
g7WWXMf2v1q1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1jrn+H5VA95I=
     "], {{0, 159}, {636, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{636, 159},
   PlotRange->{{0, 636}, {0, 159}}]], "Input"],
 "\n\nCada imagen se transforma en un vector de entrada de 784 neuronas, y el \
resultado es un vector de 10 neuronas donde la activaci\[OAcute]n en la \
neurona N representa que el d\[IAcute]gito N fue encontrado. Por ejemplo, si \
se encuentra un 5 el resultado en la capa de salida ser\[AAcute] (0, 0, 0, 0, \
1, 0, 0, 0, 0). Para fines pr\[AAcute]cticos se reducir\[AAcute] el tiempo de \
c\[OAcute]mputo tratando de clasificar s\[OAcute]lo dos d\[IAcute]gitos: 0 y \
1."
}], "Text",
 CellChangeTimes->{{3.660513958893536*^9, 3.660513985477292*^9}, {
  3.6605140622842007`*^9, 3.66051412801152*^9}, {3.660514310688868*^9, 
  3.6605143166810493`*^9}, {3.660514526078466*^9, 3.660514695708764*^9}, {
  3.660514741524631*^9, 3.66051475894036*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DigitToOutput", "[", "index_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "out", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"out", "[", 
         RowBox[{"[", 
          RowBox[{"index", "+", "1"}], "]"}], "]"}], " ", "=", " ", "1"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "out", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OutputToDigit", "[", "out_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "pos", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"out", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", "1"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Return", "[", "\"\<Clasificaci\[OAcute]n erronea\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ScoreResults", "[", "td_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "score"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"score", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
             RowBox[{"Round", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"FeedForward", "[", 
                 RowBox[{"d", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}], 
              "]"}]}], ",", " ", 
            RowBox[{"score", "++"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "td"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Pruebas superadas: \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "score", "]"}], " ", "<>", " ", 
         "\"\< de \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "td", "]"}], "]"}], " ", "<>", " ", 
         "\"\<.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Conjunto", " ", "de", " ", 
    RowBox[{"entrenamiento", ".", " ", "Para"}], " ", "disminuir", " ", "el", 
    " ", "tiempo", " ", "de", " ", "evaluaci\[OAcute]n", " ", "la", " ", 
    "red", " ", "s\[OAcute]lo", " ", "se", " ", "entrenar\[AAcute]", " ", 
    "para", " ", "reconocer", " ", "unos", " ", "y", " ", 
    RowBox[{"ceros", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"0", ":", " ", 
     RowBox[{"1", "-", "5923"}]}], ",", " ", 
    RowBox[{"1", ":", " ", 
     RowBox[{"5924", "-", "12665"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", "=", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
      "\"\<TrainingData\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "12665"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", 
         RowBox[{
          RowBox[{"td", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"DigitToOutput", "[", 
        RowBox[{
         RowBox[{"td", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "td", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"td", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
    RowBox[{"1", "-", 
     RowBox[{"td", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Conjunto", " ", "de", " ", 
    RowBox[{"prueba", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"0", ":", " ", 
     RowBox[{"1", "-", "980"}]}], ",", " ", 
    RowBox[{"1", ":", " ", 
     RowBox[{"981", "-", "2115"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", " ", "=", " ", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
      "\"\<TestData\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2115"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", 
         RowBox[{
          RowBox[{"testdata", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"DigitToOutput", "[", 
        RowBox[{
         RowBox[{"testdata", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "testdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"testdata", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
    RowBox[{"1", "-", 
     RowBox[{"testdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Inicio", " ", "del", " ", "entrenamiento", " ", "y", " ", 
    RowBox[{"pruebas", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"784", ",", "30", ",", "2"}], "}"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNetworkAndMonitor", "[", 
   RowBox[{"td", ",", "10", ",", "2", ",", "10", ",", "500"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ScoreResults", "[", "testdata", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6599682415630026`*^9, 3.659968249258594*^9}, {
   3.659968357706737*^9, 3.65996836109733*^9}, {3.6599685581643324`*^9, 
   3.659968561086195*^9}, {3.6599686517652073`*^9, 3.659968653858917*^9}, {
   3.659968956842544*^9, 3.659968991205764*^9}, {3.6599691851088686`*^9, 
   3.6599691852088757`*^9}, {3.6599693089291325`*^9, 3.659969324381196*^9}, {
   3.6599694151756415`*^9, 3.659969419641859*^9}, {3.6599713547836246`*^9, 
   3.659971372895015*^9}, {3.659972343768929*^9, 3.659972344993252*^9}, {
   3.659974633773177*^9, 3.659974634003304*^9}, {3.6601766760338707`*^9, 
   3.6601766901854935`*^9}, {3.660176793716239*^9, 3.660176863561284*^9}, {
   3.6601784092872643`*^9, 3.660178410084091*^9}, {3.6604356519716024`*^9, 
   3.6604356578013153`*^9}, 3.660438536985819*^9, {3.6604993835844*^9, 
   3.660499389344206*^9}, {3.660499453073731*^9, 3.6604994614679937`*^9}, {
   3.660505818824648*^9, 3.660505838636465*^9}, {3.66050799587599*^9, 
   3.660507999539378*^9}, {3.660510251882229*^9, 3.66051026826342*^9}, {
   3.660510472900786*^9, 3.66051052704708*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1591, 930},
WindowMargins->{{27, Automatic}, {29, Automatic}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 106, 1, 102, "Title"],
Cell[CellGroupData[{
Cell[711, 27, 107, 1, 73, "Chapter"],
Cell[821, 30, 66587, 1146, 626, "Text"],
Cell[CellGroupData[{
Cell[67433, 1180, 460, 11, 35, "Input"],
Cell[67896, 1193, 2847, 60, 250, "Output"]
}, Open  ]],
Cell[70758, 1256, 4722, 134, 632, "Text"],
Cell[CellGroupData[{
Cell[75505, 1394, 301, 8, 35, "ItemNumbered"],
Cell[75809, 1404, 687, 23, 37, "ItemNumbered"],
Cell[76499, 1429, 675, 22, 37, "ItemNumbered"],
Cell[77177, 1453, 761, 23, 41, "ItemNumbered"],
Cell[77941, 1478, 842, 26, 51, "ItemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78832, 1510, 106, 1, 73, "Chapter"],
Cell[78941, 1513, 202, 4, 35, "Text"],
Cell[79146, 1519, 37866, 816, 3861, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[117037, 2339, 136, 1, 69, "Subchapter"],
Cell[117176, 2342, 334, 6, 35, "Text"],
Cell[CellGroupData[{
Cell[117535, 2352, 3583, 91, 286, "Input"],
Cell[121121, 2445, 2288, 31, 25, "Print"],
Cell[123412, 2478, 2294, 46, 92, "Output"],
Cell[CellGroupData[{
Cell[125731, 2528, 2307, 31, 25, "Print"],
Cell[128041, 2561, 2292, 31, 25, "Print"],
Cell[130336, 2594, 2294, 31, 25, "Print"],
Cell[132633, 2627, 2292, 31, 25, "Print"],
Cell[134928, 2660, 2294, 31, 25, "Print"],
Cell[137225, 2693, 2304, 31, 25, "Print"],
Cell[139532, 2726, 2297, 31, 25, "Print"],
Cell[141832, 2759, 2293, 31, 25, "Print"],
Cell[144128, 2792, 2293, 31, 25, "Print"],
Cell[146424, 2825, 2292, 31, 25, "Print"],
Cell[148719, 2858, 29279, 487, 251, "Print"]
}, Open  ]]
}, Open  ]],
Cell[178025, 3349, 355, 10, 35, "Text"],
Cell[CellGroupData[{
Cell[178405, 3363, 1714, 50, 86, "Input"],
Cell[180122, 3415, 88601, 1590, 306, "Output"]
}, Open  ]],
Cell[268738, 5008, 281, 5, 35, "Text"],
Cell[CellGroupData[{
Cell[269044, 5017, 3751, 106, 311, "Input"],
Cell[272798, 5125, 540, 8, 25, "Print"],
Cell[273341, 5135, 1083, 30, 92, "Output"],
Cell[CellGroupData[{
Cell[274449, 5169, 559, 8, 25, "Print"],
Cell[275011, 5179, 544, 8, 25, "Print"],
Cell[275558, 5189, 543, 8, 25, "Print"],
Cell[276104, 5199, 546, 8, 25, "Print"],
Cell[276653, 5209, 546, 8, 25, "Print"],
Cell[277202, 5219, 558, 8, 25, "Print"],
Cell[277763, 5229, 547, 8, 25, "Print"],
Cell[278313, 5239, 544, 8, 25, "Print"],
Cell[278860, 5249, 546, 8, 25, "Print"],
Cell[279409, 5259, 545, 8, 25, "Print"],
Cell[279957, 5269, 27533, 464, 251, "Print"]
}, Open  ]],
Cell[307505, 5736, 177898, 2902, 325, 139331, 2269, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[485452, 8644, 139, 1, 69, "Subchapter"],
Cell[485594, 8647, 598, 10, 59, "Text"],
Cell[CellGroupData[{
Cell[486217, 8661, 1715, 51, 161, "Input"],
Cell[487935, 8714, 25284, 467, 252, "Output"],
Cell[513222, 9183, 8533, 153, 254, "Print"]
}, Open  ]],
Cell[521770, 9339, 415, 7, 59, "Text"],
Cell[CellGroupData[{
Cell[522210, 9350, 1977, 58, 261, "Input"],
Cell[524190, 9410, 1384, 35, 247, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[525623, 9451, 142, 1, 69, "Subchapter"],
Cell[525768, 9454, 402, 7, 59, "Text"],
Cell[CellGroupData[{
Cell[526195, 9465, 2709, 67, 261, "Input"],
Cell[528907, 9534, 3679, 78, 264, "Output"],
Cell[532589, 9614, 3676, 78, 264, "Output"],
Cell[536268, 9694, 3676, 78, 264, "Output"]
}, Open  ]],
Cell[539959, 9775, 954, 15, 107, "Text"],
Cell[540916, 9792, 24406, 551, 3411, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565359, 10348, 133, 1, 69, "Subchapter"],
Cell[565495, 10351, 37487, 618, 314, "Text"],
Cell[602985, 10971, 8745, 224, 1011, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
