(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    275620,       5427]
NotebookOptionsPosition[    271785,       5310]
NotebookOutlinePosition[    272121,       5325]
CellTagsIndexPosition[    272078,       5322]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Red neuronal artificial", "Title",
 CellChangeTimes->{{3.6599193963849*^9, 3.6599194044085608`*^9}}],

Cell[CellGroupData[{

Cell["Introducci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.6599194103045053`*^9, 3.659919413016464*^9}}],

Cell[TextData[{
 "Una red neuronal artificial es un modelo de ajuste basado en el sistema \
nervioso donde la entrada es un vector ",
 StyleBox["x",
  FontWeight->"Bold"],
 " \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "N"], TraditionalForm]]],
 ", y se desea mapear a f(",
 StyleBox["x",
  FontWeight->"Bold"],
 ") \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "M"], TraditionalForm]]],
 ", donde N y M son enteros arbitrariamente grandes. ",
 StyleBox["x",
  FontWeight->"Bold"],
 " es el est\[IAcute]mulo de entrada que recibe la red, y f(",
 StyleBox["x",
  FontWeight->"Bold"],
 ") es el est\[IAcute]mulo de salida. Este modelo est\[AAcute] basado en una \
estructura de capas, donde el est\[IAcute]mulo se recibe en la capa de \
entrada, y el resultado se obtiene en la capa de salida. Cada neurona est\
\[AAcute] interconectada con las dem\[AAcute]s de la siguiente capa. \n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvQl8VNeZJS68pJ1Jd+L+z0w63Zmk/e+ennZ3phNP93TiNsaQjhfsuN3E
S4wdE+MNDMQgA2YH2ZgdWQjQLrSABNr3vbSvJZXQviEhJIEAsYhVBGwD0pz7
TtXVU20q7RJ+51cUr0rvvXrv3XvP/e53v3u+///dZS8vuM/JyWnFQ3h7+Z3V
v1y+/J21rzyAD/++duUH796Pjf82zcnpCv6J7T4NGjRo0KBBgwYNGjRo0KBB
gwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBB
gwYNGjRo0KBBgwYNGjRo0KBBg4bRRb2/Uz/86yf6cjRo0DAmmIiWrvzmct2F
cfmxbzYu6JbLcu3tvZDhjE/L0s/dUePu3bu9vb0TfaUaNGgYPiaqpUsy71Vw
1wR+HN3f+mZDedL+9XzIKM2vv/761q1bf1QBH/GlRukTNX7RDBsNo4EJa+mm
CtyLM9++ffsrE7CNb77RlDK6UB60X32vLNwbN25cuXLl8uXLl4CWmMX99LUU
nbh48sYOXqf8N5BnLpi+c7rX+GcCxy+aYaNhFDDeLd1k+izX6cSWM84JAr95
s2K/PM6rAt9ofD5aYJn41d5F+aJrvnr16sWLF8+ePXv69OnOzqxd+JtrHr65
erXUUxRy8ll03OfSlzlJKqvx7Wc1Zdu35s4ds+/vAXfNRI5fNMNGw8gxvi39
nGLt+IkG01vvp5wkufPW9etl7thcGNnQ1XWuIVJ0H/vL0HBYk6cyP0wKsIhR
LDdv3kQ33dXV1dHR0dLS0qzg+PHjHR2VYR/IrnSvoafnRkfiR9j0KEfPjlpR
7oEPHyV29BA3bnQkfST39zx6b7hrJmD8YtWwqfKSx+03oMg0w0aDgxjXlt6Z
vBTf+dTQ/KjyFgfGHr/cleeKrflBpceOHcNP63aILqTk8uXr16+TH1ifpx4/
TBIonOFd9RWe57lz59ra2hobG2sVNDQkblHK6YPD1WfO5IhicPqi4Pz5842R
C5V+HPUBhzRELDB9yvtC2X9hVFN3d5Hogp32FF4QwEHo9EF9qAPsiFFeE33n
Q8C4j1/O65yd6NRRGTaVYny6KKbh3LmuhghRBO7FKDVp2GhNQIM9jGdLPx67
BPSddAodB9pLewI+LQqrPV0WPN/JHPNDq07ijN3d3eQHHEKTT6vMQ0e94BOv
ShiYJ0+eRPlWVlYePXq0pqamKWkz/rIz69SZM2dOn87ZiQ/vhZafONHCItmc
1NTUhB42+XN2ts3NyaJGbE093tra2taWvh0f3j1oOH68RQG+xPlR1mBC8M/U
KqzxHr+cTV3WT/h3jIZNrLtSApX4RTx55WFvzz17FgXHLlKzajTYxTi29KpQ
GhuXFRS4iTMG6o9VRm3E1qu747KysnJycoqLi8vLy9GboEqfOHECV4UuA+0L
rQB8PrXsvUkCmpBuBefxPKur8/a/gU9v+ObVsMjYE1cfJlV9GllRUZax/3Wx
/bpbUkFRUchqsemeWlJSemSd+Hp9BAooy/NNZf/1YWVlegUsNfwEygu2AZhn
KhXWOI9flI5gaeoZZcLoZkeiMGx27ervLUyYh5bFJqBZNRoGxTi29HylG9iZ
c+YMhq7blbrqoSvPzw8WI845nx+Kj09I2C9cMa/uTMzPLy0tRc9SX1+PloVr
mIr23iQBHtoNxXA0Yc0RvR79NQzOnF3yy+1+fvNQ9F8k5GVG75wjTMXNn73E
P33knZKSlpaWmZkZsELuv2LXrldRVNsjM9IVZGdnoyMG+8GmBfOwsCb61h3H
+I5fGjk3BAO/BxW7kIZN4OdsTHiSOp0Otk1BQYHBYMAjxYGaVaNhUIxnS6+q
iv7cuMMWFxfRa7jG5eKv4PCF8tAXNgTHxCQlJaE+5+fnl5WV1dXVgR9g0mA8
e/v2bY3MhwpRxDduoEMEJ4CgSkpK9KYiPn36NL7v7OzEOKiiogIPPDU1NS74
0xeEJbozJCQkNDT0yJEjkZGRsbGxiYmJycnJKJpEBQkJCXFxcfg+JiYmOjo6
Pj4edQDlhV+BCQrOmVJkPs7jl3LFkHcv6u6GJb/DaNhEfIL/X94ekpAQG+u+
WLFwonS6wsJCHKVZNRoGxXi2dJy8uroa1RL1GfUThkdGRgYOwW7h4eE44cGD
Bw8dOnT48GGcE2cAz+fl5WFPXMDZs2dRjafY4H1yAEUMagXBKjRVXaYARYyn
il7y1KlT7e3tDQ0NGArBGkTZRQVsnC3MzK0BCoKDg1E0KCAUU5yCGAUoVhRT
uAn4BtUDXTbMVNiQqFRTi8zHefwCo323cZ8dn30mDRvfJf1WzTp/5Znjqebm
5mpWjYZBMZ4tHeyNTgE1mT8EokblxzlJ5uBwMDn5nCdMSUlB5ceeGMlikIsx
5pdffqmR+VCBIoYtZ8WB0NQEpkK5o6xRKOjE8bTxzI399Xvbg4KCAhWgUMLC
wlCI8QpQynyXZc3+GoMp1BOcDWQ+5SzzcR6/oMvrUICfq6qqkoYNdsOpZEPA
Y8fhaCaaVaNhUIxnSy8qKkK9hYFByxzjR1RstAvyuRn509NC/sc1oDVdu3ZN
q8PDAJ4Ynpu1qb0G+nuxgY8GgwEFRIetHC6hhwVZ4T0iIgKFiMICsYB2UHDY
Ld0EWqQoUJQvfgLW41Qk8/Ecv+BU+CE8Kzx/tDhp2GAH7IbegXyODZwBvYNm
1WgYFOPZ0lFpcTa0DpyW58SXOTk5+Cv2QU9BkwbvOBW+zFemQRkjgVY29WIk
JgcwHgdTWQ26A7iNEkEnCypGJ4tnjj4UlIVSQLGSlGBhomTBOagG2AG7ofiw
gV6+RAGoBofjVGSbqTYBOt7jF/xEuwKcFs9NGjZ4ztgZDYrkT38jnrxm1WgY
FOPZ0tEuUHth5KC9oHWgPstzYp8iFXgIfTJoSuCHy5cvw3DSXIXDAxq+teUw
A4CiR2/e2tqKQkefi6JBuaA/ZddMZy9KpL6+HlWiVQEjNFTB2B04M0tqykVc
jPP4BY8LDQGPnQa/NGywPw6nVQOg18A3aFmaVaPBEYxbSwcnX7hwAcZPd3c3
mgxOi3PiT9znmAJusB9hnDm6GPIDF01M9NOaOhiwqFysFrdcqI6CuKSAH1H6
DIdGSaG8UBA1NXkeIiJjXYQShoFCAQWhRC4quGAKn0ZpsmRRhWRJTa1ud5zH
L6j8eG54aPwtadhgTxwLYi9QgG18gzGCZtVocAS9F3TLnMywOKbFkZZew7pa
7lhLRzPp6ekxLZdbEnv8MnbDX7tUOGcCV1hMaX6YSKhkVfHQziuyON7VX3/5
5ZfgK/C5aaHiDS5gNAMG8njy6NY7OiqD5uPQzcnHjrVVHPpgV46yqv0qj+XO
6pPg/FN3Vct4jl/wePGQYWOjUaB1qA0bDAQaTcC2XD2nWTUaBscFRSjCtwbd
PRojagvqGGraVQXYUDd8QLT0lpgFrrmolqx7nCRiZSNdqyFbOpcko71Ui/XL
S5M7BavI32Ld7unpMeMZbSHz0CF1+KQG4FlFGUesK5cPFqwuudcM+BJ/VSi9
RYmI3p1TGyb+dytEEeN7ddFgZ6mKNqWLicb5wPFLiXu/heNeMohVk66MYlxS
hVVTrTy3PYUDrRplfdCiuBNX+fQAPGfUdjxVadicVYHmzVQf9WgYP5hkhlBJ
UFVQYVC7rptg2Wy/OpMqZCf2lXaLJQ9dqNK0xtHG5XJjW2BLV6SFjPq3aqFR
q+QwpflhYqBwubPugqRlFGhr3GLjMhUx4CreKynKu1qQg1rO29S7V4nF5p1C
RMdp8aJF8gA3ENRAIcFl6DYm+JZHCQMlcDsVfRVPIb/CGPQlQnyF5gdABkb9
5zxmU1OJMooRgird3c1xFABV2UVAmdDS+ghmDLtRQDYBDpeuW0AOgjSrRsPg
MFnmZHLWUgUloskvSUjyNDXa9HO9vdyb8NC3xolW7u6+T3z0rFbU5Gzof1rT
/GS/YMQSVHLN8Bg5zDQAOZA/kyMWqbwXWnXyZJVYyLggrPH8eRqeGCMNlH7i
akifKsEznYqe1N6i5hhhae7QnRBQVqnvylJktSgkmHJ2YCc+pQnHROmK5qFP
DR6jdE+BXeWIlSxNSld8hBRo2aO/ckWOMbHPFQU8hHpcKae/pGI5Tkv7HBvS
jDHDPfNUNYwH1PRMfBBW09lpkhUSo8KeHqrAeYOu0fDFkN2rQgwPj8cqJtue
EmX0/cc/HvVW9lKqYY2P6ADSukSFJD+QLJQ2IjU/3YuV0aUiT7Qo5sRA816r
vcOAWgMQVIPRujAdlWXpbx8oaig68LaT0/xAfWtr66lTpyjidO1EvDDAjRqA
p1QWaYdiYe7JqQ17V7gQ4jipp0zJ5asEL/eWmQZxU1vYfABofvjV3L6NO6Iz
BOMa9IwXj0X3j1Rg7rTTVj+hjGKE5Mr16+2xykio4Px5Kb3ltDg2wWiZC+8K
HnP/ek+nj1LPaGaMhhGDE6BelZzHRxtvampqaGg4dix5q2LMNXR1oQIXCyNu
MYjd2PDdS4RBQmPkgyO1Z86AFlDVrwizpD2xv5ru79cLNUmBHhXGnJgAVaby
OcVG7KDmpxQzvyc4YdyhkNDS1DN4jCzQ+vr6PJ+38OXGqErKVL7plU1phZaW
FjElVx8u5HHchLzfRSNVCX8vtpUC3plcGiSOX3UoMzMzPd2Xg683PXRNTUmK
ZtquPMW7O9WFzc1g1BoXtTW+SZmmRLfY1pYu1FR25eBmMXoVY9IliR1KJ6jU
8v16MRRqUiRzt6e2lCnVe0t6W9upU1kKqy9CzTd647/IV7zi+e5Kn9BpqvCa
JaNhmCCZex5FM0S7rqurq6ioUFZMxArBuHcPVZ8SknHKMH1BeP1ZNHylfWeh
Yh83KNbZZ4lcW9HerqOOxcLIhvPnFZlbJ7d8oRAq9EIXRjYyHKspCp8WHK7O
2mLihLKysPVi0yXZNJd6L3HCuEPRAFya3HLpEh4mGPvo0SxFOUqRf9J5iM3V
oUVFRRQcrqmpOaYPFIb3dh3KFN1ryHviQ7rwqJQHigJ2Cdd5vCbO6SWWNLot
VDbFskSDIdxFsfhLTVF8U1rY3Ay4crCrQSY1/CwRPWBVVVVtbe2xY3rlKRHu
pVevwobhvAT6tfb2Cv952N5wJG2v0ONaE8qIL2V49N7h6lOMimluLg3st2T6
c7JoloyGYYJk7lEO0gUhg8kZE3v0aOSn+H5+cEWbQKqoh/MDSpoai8U4HSNu
7GnQeYi6ujoE+6O6VsdsElZIsgjBam1N26ocXtbS0lxK8ySZIbupyh/8/T9T
SKUYnJCVdUCoE73urjMYuOzuXuKE8YfRleVWgMdYWVmZtlfw97qwsnIBnfJp
pb9Olx6x7VUnp9e+SCgtPSJKbp5vfm1tXYEQk4IVH4ke/WiWuyjgT3zTfQVR
fbAzODg4aItCQAtchQ6DEJJS2KrEiKktbD4QuPIvv/wSg83Tp2sDRKV/0z21
uKgoRBFGFK6qjg6dopflKhTOzzcqVs4O1PKamjzlua3wCd82x8np5W3hqOTo
PRUdxXkHihvr6+NdTJZMRUWkaAlOW7OUyN57bHSjYVxBMt9vOHv27LFjx8rK
yrhgAdayaOBvB+iV5W/K6PwN9+SiwsJDQqtzRaBOp0tT6iqstNTU1KysrLxg
8RendUfU+p9HxALPVHeSvlgEQZHQN9zdhW6ok7MfOCH4U2rPLfXLyMjNzUW1
v5c4YfwhZKM6EhdIow/dZHIRSvaogpKS0P5J6sV7Kf1BGVelZNatVgg8MCcn
Ozt2qyjgJXuiorYbDdGnl7n6fDZPHr90+/aXnZxe3RGly8jISEtLm+LC5gOA
Kofrx12cOnWqUDG1PwnOZyXHIAdj2Obm5G1OimK5iCcvo5UTbjAUFCQpz23x
noCNYtX/oj2o5Hg+yqFv7M8o0x9Zo5wtD48rPz9YtIi3vAvq6pg8UbNkNAwT
VhYNOa0MygXrCv6e5486ButOaeuvbgsXIiqexhiUFze6KXV1gStG36iuoHT/
/snUVW5uGJq/tjMmC9U4JcV7qan5LxVbc7aGpcqvcIr163GmF12CY3iee4kT
xh9SAxBDIXSLFEmQZI4Hi444Li5Orf6Uk5NTWFjIPfHwQcsg+YSEhMjIyCNH
jhw8eNDf39/T03P//v149/Pzg4keFhYWHx9PeUBsxMbG3gPC5v3g/Kd3JS1z
hajXB+fn5wSu4FgED5YzERjFRIg1oel7FGvcNz09MTF0gyLdsjV4/8pnBd3v
PHw4KmqP0m5eRsenYztZ6p2UlBS2ZY5ykhUHCwpQNFM+bZOGCQWGcqgzZ86c
aWpqQl3Ky8vLz883KB6PxsZGWCCoXWjsQl8oLi5KARXIDylASz8s6moU/orK
SfMsR9h12RT2JG+g7WM3vEdERKDVU1yO6hagi1ATqC9073DCREBqANLNgjIF
S+BhKm6Wcmzj2eIJ4zmzLKg2XGACBllgcopEUZE1MDAQBO7l5QUm9/X1DQgI
oFJxnAk4CeWhprqwuRpcOWvCfK/sCvR0qNgqxfLV7mLM+dqu2GydLkph5cVu
kZGHD/soHD7PxcfH23uTaRzz7gdiVvTFT4Pj0Evu6w8SWPSpGJm+tCUsBY9u
6qdt0jCRQFXp6emhm4WaP9LRQcUh8AAqGGiZbRZgG5fAR/KzmsylcgVIAyx9
0ARQOlo99yeZg+Ep+wlgg+pz9wwnjD/umDQATROgR1GCKFmSeUlJCUqH4sMo
AnoAqCgiLXP5V3a1KBeY4pR7pTSrVCqmdjeLEh36VBc2V6O3txd2Dm6hu7ub
T9IgXCgFeD6ZClDDKY0lZflh4eBBHThwwMfHh32fh4cH3r29vTG0waOj8jke
nVr2GQ0K2zST7qnRjYZxB0flnAClIYfGWFVVhdoLWx3vYIDc3FwyMxWbJatL
6w7GBgw82hXsDsAPqO2056X5jXfJ5Byhc3iurtj3GCeMP6QGoAxNrK6urjSB
gk4gJZRptgJsUwbKoAB9KP5EaWJwtZRyJdugvPANTHf22sr8dRblAaldPKWF
zdVQq2/B1GEiCXaF6P5SFXDgyeZAJkd/h1GMj7DJ+4GP9E3JfpB9n5Q6DzPh
HhvdaBhncFTO0EQ0fDb5OtN0DNUn6H5hs8W7rMxo0XxHo+bcJRi4oqKCpIGa
j6PQwEHp9KyC81H/OZykecPzUM8cwMY9xgnjD8lC/YuGmpsxyGpQwPwgTPmE
YkJhMdwO36P0qfVKYx7FB55HCUra55gL37C/LlVAVcBiBVNd2FwNPkbcwrVr
1yiNi0eEzi4/P58GOcmc6YTM8koEqiATWEgmxyEczki1c2mW3wNpmzRMIFhj
uWjoxIkTYG8Y5BShBQ/wGzRwEYtoMND1Sr1EAk0YbZkLA8EPzEDBXoBHYR8p
7EkS4EQPeUCO7gsVyNm6e4YTJgRSA9C4nP/MGSrJm4EBz0p4uRH8EoVOrT90
AfUKZBdAwsf3FCs2w1QXNldDkjnGOOfPn6dWLbo/1F50Z3JUAsMDtg2ME5gi
ZqMYNaQfEl0A1c4Z/0NzSJpG90DaJg0TCNnw0QBhCVD5kwpaBMU/0cCPK+BG
iwmyFaPuYTfszKNwBjADviSxNymwZAB+LzU/ucO9xAkTAqkBSKEtUDoFzKls
fFkFfHPRBP6Vi9bPi6XoRhG/MypIQT+1ZLHEPSbxR/W5Gzdu4KbQLlpbW1FL
MVCF3VJuAgwPaZbAaFePYsyALoAq5cwxyuEM4/OLTbgH0jZpmECw4VsIbQnI
RAZSolxZ8d2/DchWTAVy7E9ZIcoQkRnUuuXcX36UzKDe4R7jhAmBWgOQUlFc
XYgNijtR6El+b6ldTLUoq1J+VnFvCJurQTuHgsCUCcUAh4YN5cqlVcPsFfRl
YfBSawF6sdQWi0zFcg+PboaDAXlVCLVk3+hDJf8/pEOMMqOTDeRzSprbat12
oM5xIFXgyBVyB0uoueLe5oQJhKR0SzliwvJPZrCU8rOFe0/iT23noJaaGTZm
eVikcWI2ljEb1JhZL9S0uYdHN0OGSZDZVtW1UsFwyAiYVZJ5rwLZNPjRxvUZ
ydyxQ8Yblo/OVjsdFI4ThVWuuPc4QcMUxUCF81sWVswASGvEcixja3SjztMk
jZxvuiVjFHGuv2NhXnJQSbngfnJQqfH3WsCRH5TZXPiLX5lALhp4EpOUt4Bf
jWl/jnNtHKJBg4bJAvsmon3LxJFRjB2j6JtIC0PNsLBcxa4U2/b2Flrciub2
gL+PQoYFHIUxwwVlPZlP5ZdfovOlP/myUQb8GzmY0qBBgwZLDDHDwu2uNIXA
q8XQyagSL3I8KZZ8xVhkWMDhyk96lV69ev78+dOnT588eZIZkL+h0xwaNGjQ
YIkhZli43q5kBdlbeunSpQtNUUJfTtHqBs0yj/zoZlhAr2BKqrsvT4nl5jL5
urq6lpaWs2fPTvkApCtX+nJz+19dXRN9QRo0aJiamNwZFhSDv1PpHfbo2tu5
oJLhptXV1biGKbk0oL29b8+evlmz+pycrL8ee6zPxaWvqWmiL1SDBg1TB5M7
wwJNfSUtoCuOp25VRkYG3sHqXLQ7lRQYYHs//vgA3v7BDwSry9cjjwz4Kz4G
BU30RWvQoGEqYHJnWICVfulSS4xIrbg7qampuLg4PT2dC3txkbgwXDYM+ClA
5lVVfbNnGyn64Yf75s7tCwsTPhariIvr+/BDwfPSUE9LG9/L1aBBw1TDpM+w
cP58o0LmwjKHNQ4yT0hISE5OzsvLq6urO3NGpN+9ffv2RD9Hu9izp5/Gse04
wOqPPmo8FvR+69aYXaIGDRqmPCZzhoXm5mYY593d3efOnWttbcVVYUSAc+Ji
cJ1g+8lO5qBfkDDZ2NnZpiluH+D/hx4SZ3j8cW2GVIMGDbZwZ3JnWFA8LWIh
8MmTJ6urq8HhMM7RTeA6J7ubBUzOWU5Qsbf3iE6l1xu9Lo88IuZPNWjQoMEC
dyZ9hgWKVoHV5dgBoN0+qSdAaZM//LCg4pEDNvljjxld6Jq/RYMGDRa4M+kz
LFCTARv4COOcWV2wMalVi+knh00+KkxOXLliDHeZO3fUzqlBg4Z7BXcmfYYF
rjbCBj7izEz7go3Jq1pcVWX0k496YCHOTP/5CP02GjRouOcw+TMsUFmLV8jr
4a9M3uX8dJU7O4/JycPCjAHqmrNFgwYNKkyJDAuWVzh2QlvtXcOKOZGIixtz
sqXzfPv2sTq/Bg0apiYmeYYFKfHNzC+3FIydarFLUO4jc92D0qqGeTyZdkjx
5ENFWprRIT+8WEcNGjTcu5j8GRZkWgr1r4yF+C3I3GnWp3iB0gNTK4cm2N7U
ZDTLxxr05GiL/TVo0KDBBiSZ8/XXr+85kHxULcxr92AXwbHz5w/pF41q70NK
puftrYW1aNCgYQoht6od7Dqer1nOwWoy5+vHv3XziS+Vcus2KZ06WnFxjt9g
fzolkX/J4dFHe7sxiF2bBtWgQcNUgJmdPLEvUHrd8U6G0FihdPAqXdkOEqxZ
Nm3njHPKPC8zvwODzAvQOT+KcewaNGjQMGZQW+abAnM2BmTjteFA1nr/zDF6
PbU00CqTv7zuUIGh9vTp0xcvXmQsDZh2wLXSYf7oo47clxmRKyJkqadM4Toy
LshexM7cueLnwsJG6Ulr0KBBw5iD8TYgT9irN27cAOMxbHIssNo7zYzGX1x5
ICZFKKiXl5fX19efOHGCMfC4kgFXmZsr2HXWLEfuyETmfrV3z6dRuXJJ/LGL
F9FZdHR0tLe3qyPtrcfSOzubhc1c6bmFvm+Ej1qDBg0axg6gstu3b9+6dev6
9evgtwsXLjBG/cwYYPm+REnjL60KjErqlx3Q6XSFhYWVlZXNzc1gXVxJn9LR
GK8yKMjx2U9B5v71yn11JVNVeEFE+YkTMtlTdXW1XANrfZXr9u1mS5O8E8p5
2Q+/uGOWc/D8HfEYzsQVNukbOkelFDRo0KBhhJCLhrgI9NSpU5QaaB0DLHWL
BR/+Zu3BlGyhVAAmp/ZjREQE5RwLCgqqqqqwZ5ciSNvvPGeEicOhLBxu3LrV
GbdYIfP5QdmVlegssrKyqFcGVrenP8Of+/DD/i8SysHhDz27xaqb6Acvu85c
FvShWzIYPq3seNVxTU1XgwYN4w1Q2ZdfftnT09Pd3Q2TGExOJYFjY4BDiQWZ
hUIBuLy8HLwN9o6KiqLqY3h4OIgdTGswGLAnzGZcGy7M6NPmWp7Zsx28KRzy
9ddf37jRIdKiAm95J+bnJycnU5oyPT29uLjYnjIkwyAt1oHitH+89VV2xYmQ
jKr1/pn/sfbwjI8CbE3pPjLXHQzv7JEOhs+tam86eXHEZaVBgwYNNjGeljmA
nqKxsRHmN+hUp9OBWmGWg8nB6kxyBJsZ+9Ay7/dpU1/rscccvCkcgo7g2rUT
SpJsJ6c39kZmZOAnKPmekJCAH7Kn2Y4hgLV1QzT4qWZDUYVLly6hE2w7dTax
oNYtvGCNT/rTy4P/daGvLYZ/9PceYPg1flnbQgvA8CPVN/gm4MoVMWMiX1oO
EQ0abGA8feZAZ2cnOgvY3pWK34Mpk5jSLjc3FxY7qP7kyZNgSFzbtWvXjMb5
5ctDWv4pyTyMZP66e1hqKmj84MGDGAXAPscQwF42JS4CBXVYnJbKaWDyixcv
UvQMd4QRzRmTftr58+fxDHH9VU3tYPhth3LA8DDgf/quly2Gf+x9HzA8DPg9
UXowfNelnpEW6lRHe7uYfWYpWH2hW8foqalpoi9Ug4ZJhPGMZqEpe+7cOdB1
c3Mz7POSkhLq9+r1es5LYmhAoXVcG/bHVRk9LdQbdyz2G6yL4UZPT0cEyfxN
j+jMzMjIyJCQEBjng5D5rVtGLVwLeRaOYvCUcBfo79SKlxh0tLW1MVQGd0eG
p9YZ7hcMj5sCw5fWtoLhXQIyP96fAob/69f32GL4xxcfeO6TEDC8d0I5GP5K
zzdjBRM6UK4Oky/04GB1+WI1kC981IQXNGgwQaqBqeW2bo4NYNaCP0FrIFIQ
IHOhUqodNAjeY1wiLgMXBgO4323O7EKwxxy7I9zOzZudsZwAneebVFAQFxcX
pmAQMqcQrrUwSEsyB42r5xek/nBLSws1jSlfbJ/h8yuawfCrvdPe3RELhv+L
3+y2xfAw4OdsCAfDB6VVgeFvfTVZM7QOA1VVYk5EpueeO1cUhC25s7g4UR+Y
74+Gelra+F6uBg2TFxS8ujvG4CiAnooLFy6ATslvYDZJ42BXBrHgY38cOEPN
HVs3ZBpunE1cYoxmySgrS0lJYRI9sLo9MqfD3JoKLl1S6JIwfqGbBeMI2ufo
mKhFTzJXT/sOj+F1pY0haeVrfNJ/93kUGP57v95uld4fenYLGH7u5mgwfFh2
3VQNhmf2KNL4kFQxweqoEjwW9K4pMGjQMI6QXnp6dcDqYFQK85LGZXh5v1ne
p3g/aIlVOaSgq/D5ueSlCpm/F5pdWZmRkRETEwM+t0fmXV1GH4u15M6WAvVS
Up69Ergd/MylSWR4Se+OMzxOYovhYcAfSCwFw7+yMQwMbytU8uEXd4Dhp0Yw
PIqVYy4G9g9PeRj8z1J7/HFthlSDhnEDKfGOSUQd3Cj1WMxW1puLtNB+Q4N1
+IdwZnQW4EZQd1ZWFmh8EDLn2s85c2ydUw4uKCmPw3F+s1QjpHdOIuOnab0D
oGuZTMqS3tUkb4vhcULJ8MxawkAaz5hiMPyLa0LtBNKMUTB8UFrV8GdsweSc
5QQVjzBbn15v7OsfecRqR6xBg4axgJlLx5akufmX0jh3WDsRxNvT0wMCbGho
yM3NTUxMjI2NxTu2rYQmygSjNox/zkKqBerRETBdCKcDmBlEZoO6rCSEAuXC
tB4Vhoep7wjDN53oVIdK2gmkGXkw/CznYAwE0DsM9UAB2uQPPzw6mmawyamQ
hnfN36JBwyQH1/Wj+TtmfYFvQbBgOZBhUVFRRkZGSkoK3rFtvmgIzZ9xFDYS
jMYVNj307BZYtmaMJzsmSe+w26VCo4MMz/yw0kUDurbjhLfK8DKQxhbDy1BJ
BtL8r7f2jUowPAx+HjV/R/zl6zft984DwHEWbPJRVKe8csUY7qLJ0WvQMPkx
Z45xJtQB/yrYFXQq3BFtbUePHi0sLIRNjndsmy/np1IiqMDGaUFuku5mrwpN
LW2xkybJEYa/fv26DATl4iOwLhhepu02c8JLhrfqhDfzw1syvNVgeIZKrvZO
W+yWaD9U0mow/K2vbqv3+ft5+wuq2+g3Y2Yrm5QuB0GjHliIM9N/PkK/jQYN
GsYaIFsGMMyePehoWlFouQXCBI+B7qqrqysqKvBOxYB+oS2u3wcJ2J1dhY0K
y/zhF3eQu0B9HrGl12/cJGMPaouapedTx4IOm+HNplklsTc1NTliw1tl+Ax9
Q1R2lSOhkmB4yy9h+XNGG/clA5PMQVe5jUHQSMHg0jFN/K1Bg4ZRQVOT8LTQ
O2o3ekGu2QQ3grXoo8Y7timBK9o7bXLHBMxByN1Xb7iGF0kj9nu/3r7CM+1Y
x7nhZcG2w/DMvs3c3OppVvsMb8cJLxle2vC2ljtZMjwM+JC0cjA8QyVtBdLw
9S8feBdXNeOCZbaRAY8lLm7MyZbOc2vxpRo0aJhcgAlN7yg4wWLdvYQ6mBDc
woATvJNnhOOdfnLY5I6lopCh5iBY/wT99CX+ksFe3RSeV9nKhBeWkTmOw8xF
o55mtcPwwwukaVJgZsM7uKD1TNf5NzdH2uLz776wLa2wiot5GWLab6KTaYcS
Tz7kXK5UZkOxDi/WUYMGDeMJtFMp3zFnji0PidQrkN4MvAt7nlGI9JM7Frve
N3ARKJgNLAfKem3j4T955nOS2L8u9PVNKMM+ZjHzI4Qlw9MJP6RAGvU0Kxne
6jRrkwmDMvy8zyPMOPxbT29+eqnPZ94xRSWltbW16EHw0+hxcJHGB9LYOCSZ
nb5h53Jl3dAW+2vQMFXg4mKc8GIMg7U14GoaNK4El4fMn2/HeEsrO/744gNq
XRSpGHxRSV0EZqM2S2llvbN7/H//z53ktL/4ze7NwTknuy4NMg84MtiaZh02
w1tOs9qhd3QBv1jozftFX/bcx/6bfWJT03WpqakMGSooKKisrMRu+JV+Pt+0
aQjS9CPJ5UpRei2sRYOGKQS1mc0XrDKQPF4wzEDv3J49u5/D7RrzxK2vbj/6
ew9O80k+l3IEVAxWy7PgvaGp2TU06ydv75cU99aW6OqW07ZWRY0FxiKQxuo0
K7j9h6/sfmFl4K7gVH1ZeXFxcVZWFrONhIeHR0dHg9LB59XV1TgcJ0e3InxQ
v/iFgysFRprLtb3dGMWqTYNq0DC1MKhu6tDVU9u7rjwy15183n31hnRfczk/
OJByWyA6SXH0SISl6Z9bESSdD08vDw7Pqh65O33YsDrN6gjDF1Uee90lbGdI
tq6k1pLh0XkB9fX1FRUVRUVF6enpMTExzDYSFhYWFxeXmZlZVlYG2sexInbo
ypU706b1okt1gGBHIZcrnfOjGMeuQYOG8QTTGYDYQdoYzmOgjY3t28WXQ1/o
Lfn8Z+95n+u+St6TC/nBJLA5SS8gNzWlw44tMNS+tz3quy9sI6X/+Ldue6OK
r16/Maa+F8fhSCDNhe7LMnAFA43pS/xXeiQfSTc0nzjJaVbQO/oy8LnBYMjO
zk5ISKBlHhERgW18AzJvbGzs7OwUgsbV1YLMHVNLG4VcroxTcmxqW4MGDfc8
Wk93MxDxp+96nTxzHtQBCxZER480k3qA0sEqsFrb2trUefewUVnbuDUo40ev
fSFDGZfsSZKhjNbDsCcIapkFyfBPLQ20Gq/yd7/bO/fT8OyyBvRlGIzU1tYW
FxfDFE9JSUlMTMR7VlYWvqmpqWFSV5FqRKe74+TUa01e2Nb1jCiXK51vQ5Jh
1KBBwz0K8gm4F3Y1GOx/z/eAUQr2AIGDyaX2O7bxjdTF5cSome/FNyb/3xb1
C2G9uik8vfTYBPpeHIRLUK6t+MMPXeNxy+fOncMtowurqqrS6/WFCkpKSmA8
NzQ0gGz7nSEHDtwdYmLuEeVyxXBs7JYmadCgYUqBZA66rmk+Sev6H3+/r/6Y
MDVJUAyoYOgjKOXq1avd3d34K30vZu50MF5m8YBQRlj7vglllvK/E472rith
2XUfuiVzFtjyteNQFiPPGRKD/gs32NjYCBOd2UbwDb6/cOECo/pFt+Xl1TsU
Mr87wlyuDGj58MNRfjQavmmwMhnv+JqH4UAJx3X0J/pjd52c/OvH8KqmOiSZ
g5EMtS3/41WhK/U3c90Ky+vUs2/SKcF0z9euXbt06RJ9L3SnS98LKd0ylHGd
n67jbPfEutNB4EFpVfN3xHOawM6CIL/oHPA2bgcjDqniKLUccde4dzwBPAep
VC/uKzXVqMPgGO6OMJcrVRq0daAaRgiSuX+92VoPMwwwxnDICIhVkvmgArOm
S1OO8hPxu+nnbF/VNx6MLQddwMg8WnvsH+btBaH98JXdBYZas2gKWdaMeJE5
srEbKA6kZ+Z7gd1uFsr4u8+jSus7xjOU0RaBP/zijjkbwt0iSyqaz6jd5n/1
8q7Q+KyioqLCwkK8GwyGqqoqEDtuDfcIQx0DEwxPMEjBUMX8Rqiv9dhjDl7b
3ZHkcu0zJY3S1g1pGCHImH710mBjDBhXIKKemydlUDFsrwUc+UETmffKCDrC
lrFnZJ4aXxHAm9wpV0daaYPfbHAJP2PLQcvV9YPwuaR0psnu6emBVU93emdn
p9VQxpjMspfWHJKEOeOjgDENZWw6edE7odw+gbMKMbLl4/0p3OHRt9yTdXmg
UM5yJiUlZWRk5Ofng9KbmppwazDIxUSnLa/RlStDWv7ZO5Jcrn2mRaC21R40
aHAIF3TOqH6+NeosYwpK9oqI2YQkT6OXY1n6ud5etVPGr+Zcuoir9fb2dlJO
ASoe4LRR+1JM/pLlOp2/0cb+6kzqR/07LwFPW11VQQfCmVSRWW1fqby8y2Ae
mlU2Je++YZCCAFzFD+qoqmuyxefq59xrypRNSoS9isPPnTsnQxnNfC/5ZTXv
botUhzLuPJx/rvvqqPheSOBzN0dLBXInUwYifOkVb6hvO6cmcC4dZcx5UJJe
RMs7H9CXlefm5oLDo6KiwhWAWnU6nV6vr6+vP3nyJHbGsTiPzauloo5jsd+9
I8nleuuWcY2YJs+iYYQgmavxQViNyBqQ4yo+LIo7cRXjxyRBu97VX399u0tZ
GOFdLZrSqSSl8u4vU6REb96s8Fb+dFugxkd0AGldooGT9AXb36GF7bQsubNy
P/53L1bWa+d9IX4q5sS1azARpWuXJpPSTKq9xFH7Ci9elCu7sUF9JMbuasZ5
n0qwS/K5Hfvc7KFJSqc7XYYy4hCroYwNTc2jFco4EgK/cOECJzdF0r3Glvlb
wkGbIO3MzEzaxqGhoUeOHIF5DDIvKyujqjA6rEGqDbMLubgM5ckPPZdrn0kI
1+EwSA0abOKCThCtVyUMXTQKjKwxDm1oaDh2LHmrUi0burrQXord8WExiP16
e4Ig8L2loh01RQkf4YLweiVtPVX+rl9vN9onCs8benpudCSKrsDzKL03R4Wp
vyT2OJeZVwbNlzvvyD17FieRKtPMHQBUKqa/e1E3GiwG+2iPjEOA3Yhrw/5o
5ppxTgzK5/gG3+OvtsZB0p3ueCjjrKUHJAO/uCbUkVDGquNde6L0czaEmxH4
I3PdHSFw2AAkcHQ0XObJvgYVo6qqqqSkJCsrS64MUq/ZR6+Ew3H71hdjSuTm
GnOLDOXJDzmXa5/JYa7NfmoYOUjmnkfRYMGNctlaTU3sZnz/7qFqZdI/Z7eJ
teuV8KudWaJdG4IFE3+WCP5Ho25v1+1SSHlhZMP58wVuYtMtH62uIXKh+LKR
otNNIhh3weHqrC3GySLYS2HrxaZLssLP4A0ZIA0+6VTMnSUJ7TgWf21sbEST
LC8vR5sFn3DJHtq7RuYSakFdCqQPic8JdUroYYQy/q+39vkmlJktI5UELhNn
SAKfvyM+MLWy9XS3VQLnmn1pgUsCV/csUomFdbi4uBgUaqamhf25LGjw0ZxM
5OqwUmXfUHO59ilyPfSxaMmdNYwcJHOPcpAuqjpaQYmCo0cjPxXev2CxdK2t
LVUw7/yAkqbG4gNvC96Nw54Gncfr2F4dgv3BrtUxm/BpSzJlSNO2KoeXwV4q
Vaxv/EFp9anKH/z9PxOHhooWl5V1YIWTCOjSGQw1NTVoj+AKNFiQ/9VS4blH
XwM+QYsGjaBRoK/BL2LIDGsH3+B7cL6V8N3JD67oly+7CSyGBOk/tzUf6gif
91n4XtShjCggtTudrF5V17TaM0kdyvj2tphNAVkvrTsyQgKXQitmSomyN5HK
t9QrQN0wGAxFClhV8D0qOec9HfLLMfvn4487/tjvOJ7LleDazzlzHP8JDRps
gmS+34Amg3aBal+gANayoOa3A/SKTyNqIz684Z5cVFh46BNsrgjU6XRp4dvm
YHupF+wfDCrzgsVfnNYdAbFneb6p2N3rj5SWlpSkupP0i4r0+iPrnJRTua8W
/zv7wW4J/vQlZeelfhkZsGFQ83EGpfWlC1+60+KkU3+UZA67i41Ur9eD+dF4
pxiZDyq0NRSJLTuwz+f5ZTUO8nnfQN+LI6GM0brSF1YGyRlS+fr7efsXuCYG
pFRYEjgFZKxa4FII0TI5hcwux9zQzEnB4QMXB9XX19Mjh1PhzPghMPnpC1dz
Kttyq9otX8wZaoQ0zh3QTiTuOJ7LtU+VYNSG8X/rK4u4Fw0a7IBkPhArg3LB
uoK/5/kX1NVhfBoiqPfVbeFpsDQ8jTEoL2502/iC8L64RkdHg5NB6f79k6mr
3Nxec3J6bWdMlmKfeC81fr90qdiaszUsVX6FU6xfjzO96BIcw/PAXMcwOd93
ntmFvXuoAiRfWloKMsc7LfMp42aB7c2EQfIFrgCryxcjKOQLH0cWe0wSHhU+
71NROkMZcdSVK1foewGXxmWXr9wXP2OJr/S08PWnz28VGzNdps1ymfEH/4BE
PWxjtfIhzkBVW2YdMrPA1S4UWuAkcGad4NJOJoyj0izPLP38TC0Hhsc3uOCo
3Do7i4wwWLh8/eaAIFs8f+rTOuYGueNgLtc+padgZbCxij+usOkHL7sGpQ3B
yaNBA2wkNAFUtqamJpi7eXl5jMiF3dvY2AhLGHZyTk4OaDwuLi5KQXh4eEhI
yCEFBw8ePHz4ML7EX5OSktLS0kDF2B/voHF8g++xf1hYGHbDe0REBMg/TkFs
bCz+RDFSAh8jIyPj4+OpSor2ywXp1OWWwhqU1MAFMzJhsk+AwvSaPdtI0WAG
G8kpjGBaCtqENNTT0kby46PI54T0vegMLev8dE8vDzYj8L+Z6zZ3U6jrofTC
siqUUVFZ1YLtYd97fvN9T62/76m1P35566d+SQ3NrUwYx5xxagtcbeRLF4q0
wM0InGJinDHnmghqKkqDnzswSgqPYs6GcFtknll+nEseOPPOkKreOXOMM6EO
hA4Omsu1f9aVSonor22cdu7maF7V44sPVB3vGtJSDg3fWMhZGzQfcDhXzNHR
QQkLkCqYGbQMEo5QAPo9pAI+kp/VZJ6VlQUbm1kAwNIHTaBgBfcnmTN+jKei
xHRMTAyOhXFOumbeGTRkfASHg8ylF5SRCfYChiccdL2SxoekjAdWB4fwWND7
CJIXjCKf51a1uwTlznIONmPCn77r9aFrfFCSvqH5BBiMXmvYA5xPR3Uq0Zet
3xf5t69seeDJTx54cuV3Zq16c71/ZoEQnkWxctG9pQvFqgVuRuAkXrkSSvY1
ZHX1qrc+ZRLWKpN/vD/ligLyP54G+F88kO7uuywFdMeDFUGv3Vyu/Y+X6/cf
esj+7GpYdp0M9Vn4RdLFKz39Xcykre0aJhRy1gYtqLKyElRZWloKA7i+vh6t
DO9oibm5uWRmCsFJVgdR09JOSEiA6Z6enk7NT3QHsPDB57TnpfmNd8nkiQpw
QnxkCBn1pWHk44d0Oh0uA60bI2UOw9G0OUzA96AIXBuMOvpYJmn1RttnuDJH
08NbFQL+Z8ADRuUjmCEdCZ/bIvDH3vdZtj8tOq/+/KVr9LrQkQ5bFOY0ag5q
EbpddMqoEqgPuQpc/SOfeGf7g08s+9Z08Xpm0Rc+YSnYWSqoSAJHncQJmazH
DoFb3qx6fatZ/s32ritmwZB4/eTt/a1tImGo/GmpuyU6gvp60RFzlDRYEfRa
y+UqVyuLKkGb3DEB88vXb672zaRU+/d+vX1vVPEADZlJWOc1TCjkrA3aINpU
pQLQJhoXmiTeYV/R/QJyBsfiPSMjI1UB7HC+g8M5d0mmxRmEMVZSgqOkdjQo
GpwP6x2HgPYzFfA82CFZATbwEd+j+YMKML4+qwSx4/2ESvBfJuFFG3fcPzCu
QLPlLCeo2Nt7RKfS641eF4zKRxDD5jif37j5ZWppyxq/LIzxzXgP3zh7pMcW
NHZfvUHTl5TFdaMMdEG3SzJHNQCZo1ZgpIaag2qDcsc7tg9GJPzm473fmbni
wekfP/jk8r979fNdQcnNLa3ouymcMlQCHxRdl3pw5ZY2+Z8883lyjph/QX2r
rq4WA4q6hsLyOlxG/9qiykrjjAYKYrB191ZljsS4AGVHPzmqhGOpKFhkVc2d
Ty839qT/9I5nZlkTiokxOZqWhQY15KwNai8YksG6cqaJ36CGi1hEgwFtEyyN
jVITYHeBtPENk6oweIC9AI/ifCXIuaCggEY7DqH9j/ciE6gvLWPJ0LJwHphJ
HFzDSENfw/gEABswy9EBDcnZO66gTQ6LblTSgcEgZHIxvI+NvyWzuDI0tdR5
X/LPP/SzJHAQO+gdJK8mcJnGiMmXZRgJ6wzJnH064zrQ44PG0VPDHsBHdPS6
7PyPdoT86D833z9j9f1PrXn4OZelbrGNx09SAkuaoCOkrCs9t3D9MhXR659F
zdsaI+9u7f4YVDlcGy7MLTD2+Y99/+z5rfuO6Bj12r/qHwMrGYM0WGJWc6jT
v6JTcPjYO6bE3BQr+P6cXbzmuZ+Gt3SctZlXVMM3FeoGTkUOGehFMMaAAQZ0
ZuK9xQTp5ORcD3aW+XblMnCZOV06RSX4faMCuQPOxsyJlCeVS8u5YgWnxclB
IFz9MRm1WegnhwE2iokdQSY0DkeWyV1d3MdaO/xi83/0qrnbAS9Q+iofXXLJ
sUEJnEnZONnHSUwUIgsUIyl06KB09OlqG4BrGTj3IVYoVFe7Hkz9P+/snTZz
w7SZG6fN2vTmZxE5R1tGLuF166vb2w8XyhD32atCK1vO4pxtpy9w0nb6Im/Y
GEFhca+v9v7+S8ZYym89vbms3JgbSK4VNV6Di0t/um37E9kEp7PlIfPnD8nb
plbCRMs61tKKzo5X/t0Xtm30z8CfpAKGRuka1LM2KqEto5gVF1CjVl8wQb3N
hdX0bXKuhxFiOI86cpjRvwT3lx85t6WG9JTSPLupQF5btwJsTN5qLOOHR13U
FGcmLYzAbwMzNbagcem+1J++62VG4A/86rM3XA5HZJR1nulSlBmu9yjABmuC
HQK3jAPHl+z6Cbkb9SJgt4PqaxRgmxOg0Tr9axtD5fX860Lf4NSjw6Z074Ry
6R7H4CKnso3eD45DP9gZ81//Y/sfdob9w+++MO/I3t+HgSGuWSxbUzwtcoAg
zqs2s/mCxQ6SxwslDnrn9uzZ/Rw+DGNeARsmigB1HpYMZ5ZzSiqf+oNx9PR3
v9ubWFArRzGa10WDeqGflMB1HMwdTKDmM4RAnXL3hjVIopCkQcizMTkO5VnU
xiEnlfjXyeg25GB8jLKAUZfpBz8YkrMFBB5X2OTskf7Y+z5mxDV9if/yfYlB
8QUzFvtMm7npe89/HptRDBLm8OecCXShDErgZG+mfqD3m12ztAGYvk2ezSye
XGbEWLQ7Rq3KuDk4Z0iqjLhZqZr76O890HmpFz2Bn3ENS1xjHvzVZquRLctd
j3DtvxwAGiNb1L8+6OKv0VgCRllj/DqvmWmp+bgOxOb9zVw3XvALqw41t5+R
XpdJN1DVML6wnLW5rcKdoUDmm3Bk59sWMDuVOjLB6m9NLibHsHroZDs00Hk+
mDRT16Ue5lOzJPBZzsGbAnMyy4+jtyVLgJ+rauqmL9x334y1Dz+3KSxRCEPJ
qROCvjU7BA7+lwQuQ/LQU7N3lr089bs4zmL0iy1VRtfQrP/5prucpnx/V3x1
y2n7PXhuVbu8Xy66UdM45QgUhbcOQ2Xt3/9uj1Uyj0zUgcwxWMB9MZhKRrZY
4UlqMoDYQdrz5wvfCzZQOvhyxIorZrGOuJLOzk7a5yIyoa5hxd44el3wvtE/
40L35Uk6XNWgYcqBTOtoPLk6LZ6To5nx0tKMDnlr3lewmWVCzIee3TJ7Vei2
0ILiupN3lMA5DnPAtCA3RgrV19cX68ueeM/1gSdXPvz02qCIpNLSUk5q0w0i
ZzSkEIqZBW5G4OrRk2W/LFldnRHDqipjcGLRcyuC5L08s+JgQmGDpe+l6niX
DJ58+MUde6L0N7/8+o5pvSqnXXCRkgwbGhoKSgz//O4+Myb/29d35+fn494Z
08VkFmpRF0drwihBLcuAa+CSW7XWWZGh+tefGJ/Pj177Iiq7Sq3zr1G6hm8s
2rtGkCMAo2nHM9SYEbkRyxxKjcfRvTWfPEjMDoHT5UUfOKdCqIICzoQpXl5e
np2b9/jbWx98wvn/+9UnviExBQUFctEBeMPSheIIgVu9e3U8tlRllBkxLFUZ
Cwy1b20OV6sy7o0qpipj6+luua4TNO4SlHv5+s07qgxKcmafMZNyfhZ8vick
zYzM520M4Ko3UHpxcTEXGktxzvEn8z7VqJklyHh+PigqQuMKQ5IKpdfl350D
a1tOaV4XDd9wgAoemes+TE0MruxzKKu7zMnkV0tLlbmUgI8SO0wTB4yvtsKK
zOduLawFndH2w4X6hk41WzIKRRK49FqfPHmShAA2qKmpAZkXFRWl6zIf//2W
b013/vNffXLgSLxer6e6CLPYS4HiYRC4JSxVGRm2pA6FUrN6ZW3jJr9UmRHj
uy9s+8l8T9l5OXukn+2+fseUNYk0LoOgJO8BTGyanHeUvcNfvbxLkvlO3wgu
Z0tOTtbpdHggk0QCSJ0QSvZQaq8LsM4rkXMNuC/nfcma10XDNxkgcyeT7FJg
amWvCoMfzCUhDonsmexy3xrpByhx51eueUpUD6wvm0E77e3GIHYbnnmzsTmX
86gJ3ExLFmYqbG/wOQxRmOI5ufn/Nn/HA0+uePiZdSGxGfgepAreoPeYUifD
JnCrV2uZEYPyibYyYuw8qPvLl3dLBn7k9T1hmdV0y1OVheYrBVJ4uJrG8aWu
pPZ7v96OY3+76Qh2+M/VwlPxp7O3yJQWeKcUOfoykjlObpPMx0zN2PJZyUGH
9LqgTNVel5fXGfO0fn/OrpC0cjwNzeui4RsISeZ8/fXrew4kH1Wzls0jwat0
ZTs89akO+UaT1O0gmSvK7ybOoc6Yldk3OudtxLHLKAi0d/pSaOjaEQMHqARO
QZ6S0rIn3ne7/6m133vOJTI1HweiIwB1cJUW19GMLjOoVRnpe1GrMkrfS01d
wx9co2Wsyw9fcXWa5aKoMm76vx94ekQVoMeRThUeItc4cP0C/nS0vpVM/uqm
cIpi4a9zNwQ/u9QrNjaW0kN4j4uLA5njaeACqOc24JbHS83YEupZXavdVkRa
MZeDMWDJUN/G8DDN66JhokBVkPF8WSqQMDrOJ75UWsjWmwMd5g4nGqOJxZhn
ZQoy/TNy+fqIMgVULUDbBPmAcKjZ3k8mlPiwsSr8jipzHMVSLCMA1ZOY6jVi
khaqa+uf/NBj2syN33t+S0J2GboDJl0d61WHVjNigJ9xYZv8UmXmi58v8DqY
kI/bKTla+5Fr1F+8tO2+p9beP2P1D1789JM9EYaKanrFGcGO+6WbaJlbjKHu
BAoUZ3juk5CrwlF0A2SIp1FRUREZnyrJHMZ5UlJSUVERzoDHAvu2P+PbuKsZ
W31K7LItvS5ymd6nfsmy11u2N+nU2Qt/tJb+VYOGcYCZnTyxLzBA3fFO2RzM
KZ1ZIx3OzIvWhJaIszHpRuJmUvnre5KEJlVOTg61bsAw1AEGi+J3+9sg161Y
hM1c6bmFHrD76g252ITkDLJSMkCZEzjsWPrAKQbOyH/pam481jJjiQ9MX3BC
Um45jXPsMw6ryM0yYgQmG8jAeP3j7/f5ROfRBK2rq6NseIm+7DOvqL99+TMh
9vLEsj+dufw3y/cn6ApAxUxchZstqDh231PrvzN7K5n8j7fEEINkjlFJZWUl
njzVQZm7MzMzs7y8HH/CIzImQJlQNWOrT0kdscPASyaBYt9tqKx9w+Ww9Lp4
RBdJr4tG6RrGE2rLfFNgzsaAbLw2HMha7585Rq+nlgZaZfKX1x0qMNSCzbiK
xIqFw0QGDs1+CvQq+X/JJOnbjbEsr7unFhQUUJYqPT09KysLfF5TU4Pmae6z
3b7d6tIk74Ryec0//9DvyT8cWOqeuGJ/UlRmeaTOIAlcnc3BbBEWl2hJ58+x
ltYZS3w52zjOfM6nlFra8rP3vGV/6hlTzI4GvRITwjLzFHtA0K97QOSs93d8
a/qyB59wfnD68pkL98CAx41gBPTbTUZa+8tXXC9d+yM5kCMjMRKprsZ58MzT
FGCjpKQEtj3MXeyD59Pr5jbhasZWYbYkClXUzOsSl6l/7F1jtOq/fOBdUNmi
9rpolK5h3KA2P8B+MknNWGC1t3ms2osrD8SkZOv1ehhp9fX1sHnQ9i8rmWsG
EBojTIZO5oV7jEw+zzefau3gc5A55Shhn8PsbG9vh9E1IJqCPwdmGAiQ+Szn
YEuVV/n6k2c+B8M/s+LgOj+da3hR1tHWiuYzZi2a4/cJ53N05dLrhTv6IqL4
Ws8f6Us/d+4cOjhm8yktLc3Pz2f3hydGVcaI+LQ31/k+/Mz6+2esue+pdT9+
Zecm/4z7fvmZ6Tm4RObUyhvE4wXjMVE4U5+wuGH2409CM7+7+/bChb2TQ83Y
KqTXBRSNR8SxlZnXZXtQmnRSzd8WTa+LJtWlYTwhfYMy+yRFXc6MAZbvS5S8
99KqwKikfp1eUERhYSEG49KPPWBekmt5MAZ3DOyhKr2MTP7B4Wp0EzA1cf7i
4mKm9lCTuXloHMMgbawD5dRqdcvplOKGLcFZn3imvLDq0PQl/mYpgdQvsOXM
ZUFzN0djEBSUVpVT2dZ6unui+LzqeJdZ6DhXANF3RDKXDAwyR7kwHwrKSKox
i4S2JYZ1nnE/enXXtFkuA+53psu3n9mcXVpP6XWY30ylgXcpFMPZUlDitQsX
bs2ceWcyqRnbgn2vCx6XobJ2wY5IJ1Ng5xdh+ZrXRcN4Qg4hSSwMV6N206hj
qVss6vlv1h5MyRbSvmByJkuKiIhg/iOYzRRapx+7f1Ug9bUee8zBm0LDqfE1
Mvne0quMOYEdBTIBC4GaYGHSzWI9mgJDANtaXnTIyxZNgSyACma60sakwro1
PulrfTNmfBRgqXlrNlOAXuD3WyKX7Yn7+QKhzfVnz2+L1pWOEZ+3d12ZvyPe
SRU6LlcAqWf6qOsC1mUyIzwx6jHCojYoYPJNihLU1jfK0A4y+bSZm+6bueHH
v9mamV9CLUc53SzD6fG48KxEaOgHH9yeNu3uJFMztgNLr4t6EhwPJDXP8IuF
3tLrogmkaxg33DGpOlM7juv4zLL9jhYOJRZkFpZzOSR4G+wdFRXFNEnh4eEg
dhh+aP7HBqboNepdO778U7VqyMm7io0O7IEWBysR58/Pz8cP4QJAMrhZ0Jd5
djxGxNlIlCCDHtmWGWHeqQCXLZUqSe9cxdl1/mJiQe3hjAqQ/GK3RJC8pazi
AJJ/zfXfFvku25uEHiGpuCm74sQISYDJI6TqOChdvQJIZjJSe4MbVFALLEtx
ZgYlytXuaia//6m1D8z45J/mbk5KMSYQR7+AqsXsz1Lw7UtXVzD5nYce6i0p
GcndDcAoqRnbgVWvi3oNLB6LZ0S29Lp8kwTS1UuvBxXQYDPlbuptyzMu110Y
i6u91zCelnmrogcIkw/mNxo4hu1xcXEwy8HkYPXk5OS8vDxYfdiHeY4G6HWw
hTpkv1lfzK/A5YjiN2AmVjQ6tEFOwPX/ECw6el9tOG/VoYkymoUU16rEk2MI
wBTJGINzeb4kebAZSR5dJw5vbD0Vn1ftHVPo7B7/8rpDMM7/y3Nb7JD8zGVB
s1eFugTlbj9cmFvVXnV8cOfwlZ5b2F+qjs/ZEN7YcUHNReqEdK2q0HEuIMKN
4BaYZk6OQfCRCz9fWR+Cc97/758ZmXzWpmlPrb9vxpoHZqx68Mnl35ruPPOd
z7k4CD04J5rJacLzUFFxx8nprpNTb2CgIxV1CBgNNeNBYdXrwkGNlOpasCNS
CqRvPZg9eZWlRwf9hNzbW+9nRT/DbGxi2l90jufTlynL/O6Yo1acyFl3oVeq
D8lkhffiMxwRxtNnDlDxCVW9srISpJqRkZGUlIT2DisdTR4EC6pHq2camgFr
eZhdyMVl8Fuyw+VO6w4pWZn0ej3oBazLpNUDfohCuLbDIC3jzFtVaicy2lwt
PC5JvkMBs2GS5OUzoXu5urr6pRU+981Y+ye/3PjGxoN/cI1+bkXQE4v9uAzH
6gtELR3y3gnlIHlq4Nz66vaeKL2crp3lHFxSf0qtQ6L2ErRarACiSwTUzaWy
FEDgLDmrysLdcU5KsglLJv+HVzf95JX1P3l53f9+df2nbv7otTEI4tyEDOnv
nXxqxsOAWcICq16Xb4xAutLw/OqlJ4piFxTltiagQTL3q1EpY0j5bnlItXd/
r4CH9pUJ2kyEJcYzmuWykoyDwRKo6rDPS0pKmPCOKiUyY510mPcXFkPNHV43
RGcI7ghnA42IdZclJTk5ORj1w/4vKysDc1rvNegwt62Ca7YCVC6ilCMaqWcr
YYfkwfBUwWVcNzN7vui8H5T47V+u2XcoEVeOnXGpeG5pxXVgA5eATDrk8bJj
xj9gUhQHn6/2zcypOHH6wlXp7JVr1eX8HWmcK4BwR3SJqI1Jqb2Mj+v9Mxm9
s/iL+Ois8qwSIf9YWlqK3jkyMvLAgQMeHh579+718vI6dOgQ+ms8fJwZXQNT
xd2NjZ0kasYjh1qqiyMdS6/Lgdi8H75iVEj4zfrD96hAOq0ovxrVYism0Ll4
LHpRv0G1FMxsJHNnYY1XiTp5Km4xtt0LFGWMc+fyjWFoSxKSRRjD0tSzX395
OuWj/pMsSe60kMHXoFoVSPW/Wwpujg0oS8XlNqAypj9jblOqoTIu0criaLR6
xio4kFNGvQIUvIRf4bwns2Tm5+fTx4KOQy6iN9aKri7jCH1gOASsXLOTq7NH
SX0tjmiYG4I6Lcw3oU4GZJXhmd2PE46Mn/z1R3sefHL5d2atcguIMRgMpHSu
l2cabnX+KTB8dE71Gp/05R6p//i2x7efHeirEWazi8gZB8v5qXU/e9vtyYX7
FmwN/dg1LCA6MyQ+u7q2njSOSyWNG2cnbfgEtoUWcAo1obDhp+94/usC79yy
Wlw/GDstLe3w4cN+fn779u0DmXt6eh48eDA+Ph53BLbHw0E/Igr3Zz8biprx
sGBXzXjUYSnVZel1wTjr3hZIp3NF4dr4JiUZH3q0trZ0oaWxK0dRH9J7Cm5O
Pivu+lyqcK14lQlCaA77ANvbU0UbKQ2aL7azhGBRwV7ldIkdhn2C7IuVhpb3
BbYXxZxQMpuMlorRvQQzl9QYQUpUoVFzxk2yk6RxmyNQZv98/HFH7oWx3KA7
EJRcsQK7EZY5136ifYFvcQ0DRgFc+zlnjvpscYVNMG7Tyo7Lb+SNcGzIfBDM
5XdZlQqQSiaS5FG3JckrlbxNnZZC8jn1FdH1vLB497emO//pzOU7vI9g8MLY
bFw2+gUcbumQj82p/JcPjHEU35+za0twdkJ+jX+CfpVnyvytEdMXef31K9vu
f/KTB55c+eD05Q8+4fyt6cu+9YR4PYjX9OXTPxAkv8Yz8bOAjHR9Y2F1m1W7
MSitij8RmFqJJ/DnL26b9tSGb/9q4/IvwouLi5OTk8PCwgICArwV+Pv7g9th
maMDpUAiHs7N6uo706b1OjqdPSxdesK2mvEYwayjh6lg5sUqMlQ/7XxAel0o
kG5W51Hfxu2CRxdc32HYbyqrzxLR9DAAR9EfO6YPfU8W4l6DcKR0JCwRBJ0n
FiNU+M/D9oYjen1RsvsbYjMStR2tI2cXPiyMbDinzE9VKjxP7MhVEhlLH+Ak
TY52T0N66enVkSslB3ckSuN8MO1EuWgIdIp2hOpEeqSPBQYkk92AErl6Ef27
0AaRCUYHGv8yKtvZIx0murrXo0nAQQ2dhDL7Hhfvq91WaNqS5GWSVkbCqHPG
cYK4tLQUl/r8YlfJ50zrgG6IaR1oS9NXk5RbPvMjfxnhvMYrubVNqApwOlvO
O6NNoXElZeT5hiWvcz/84ecBv16699/e2fXnz6x9YMYqrgCC9a7kfRb6Wk6z
XOiQxxOgQ361byZ/BZSOh9B99ca0mRuEbMuTqx6Yvvxnb2z2C4mKjo4GgYeE
hISGhoLYYZajD5Vqt8KvtX79bZC5I0vARqJL32dPzXjsYEsg3czrYksgvaL5
DB/veF7zaAE3jrvGLZ8+XRvwNkrqTffU4qKikHVKsc0P1Hd06HaLTVch2Xa+
MXyB4OTk5uaamjz317G9wictLSVsy8tOTq/ujmM71QeCvt8NNqR9rpzkTQ9d
WVnYerHpkqwM56VwtFrBcqKfxDcFtF7umHI6oA4PoUvluv6HH7a/KkSSOUqZ
EYngQEZKw75lmptmU00gmYuegvpO1qbkth8uZFzfo7/3KK47KXPwqa/ZjOHl
fA09VyR5zu+A5NGFyYzekuQpeAVuZ5g35xR+/ZH7g0+u+M6sT3b7RYASDQYD
vpd8nlNSKYMDMXhfsCPSUFlLBzjuWoqrlJWV4VQ4vEAB7HxY0fiSqTHowNEV
18TmVGw7mL3GJ/2ZFcEzPgp46FmboTWPzN0zc2ngS2tDwP/3zwCTrxCmviLb
8s56jwQFKSkpoHH0ofhp/BAeOPNQ/PEXvxBkHhs7WE0ZmS593+BqxmMHqwLp
6FulQDoKaMXeOCmQvsorlV6XXyzy5zTH2e7r0mwYhciNcZERxqXifnGzuNNC
xdT+JDg/L/gTJyFxV640uuRt+PDuQYMwMMoOCMJ3CTcYCgqSts7B9uI9UVER
Bza8KFwxXpmZmaioEYK43/L23oT/VocWwx7LyjqwwknIc+gMBoxk8SRbFYEg
mSL8nnFbTQmMKMpozhzjTKhtX6j0mTMLp5SklpKG4C4QC5gcXIq2Br41KiU+
8oit0zZ2XGBDw2uFZ9qlK/2ZiO1YAnbMeEuS5zgFl0QHFCid3dB/fOxx/5Of
/JdfrtkTFIfOCBUYVF9cXvPO1gjJrm+4HMY3zPJDCxy0j84LzSE3NxftQqfT
ZSjIysqCzc/gTJI5HgtIhvpgaoc8RWYSC2qTCut+6xLOGdUfvvoFLHbFCb+h
n8mnK06b6csenP7xA0+u/Mkb2w9FpfAneLXM+Cmmti9c+HLatDvf/nYvOtBB
MDJdesKumvFYo7fXXlo6el1kX/z9ObsWfZEgC/T322JlvnVLy8EhjLOMMIvL
u5KWuULU64Pz83MCBfU6rQlFZcjzeUspvo0R5eWlpel7FGvcNz09MTF0wwvY
fm9rcHBg4N5Vs7H9wZ7o6KQkT6U/f9XVdaX439kvMTEx+NOXlJMs9cvI4Hpk
nBl1HnUMjZ3So5pxPjUAsqWw0uzZjuSPYOSG9GzIYG8yFXnAuH7/oYfszK7e
VcJjGMVBh2dmWdOwI4ftkzwdUJwmPn78OPj2P1f63jdjzbd/tcHjcEpxWYWc
SsNr9spgfVWTzDTBxEZSiAaWDJVVAJ0C1H+GDzEJKRdy0hVvFiEvl0Flldbz
5xbujuMgovnEyciM0tfWBjzwpDmT3z9j9X1Prf/u7M2HE7LRGaGJ4VR45lzT
equ6Wiz5HGJU0jB16fsGUTMeH1h6XeTiLJroaoF09Ssuv45xemqfsEPVbIJk
hM9nOKu8YfO9sivo3gxYIb9c7S78Ka/tikW1jNqiWONukZGHD/usfBbb81x8
fLy9vf38Pn3buP8Hi0WUy0tbjiR7LZUnWbB+Paj/RZfgGEY1c2GaOmvVnYlI
QahhOIAtgbEzTQsbA0bJ5+r41esmyEBW0R2wvQ/W5OVS2Qx9g8xrv9Q9sev8
RevhN8OCJHn6oPBzIE8mEp2zOmDaUxse+HcXubDo3xb5gma5kIexEyA3maWO
ZjmM8FwFTLuJL8vKyuR6fFryJHNbwZNJueX0Bry6IVTG5+CvGDX/drWPJZNP
f99tvfuRzOxcxn9SPM3I5GCkzMw7Tk69jqkZ945Ql77PpprxOKPXtkC69LpQ
z0H9+tFrX3ScOs0BCJ6A9d7KDBMqI9w7UHoaRohBuFCERZGpgAo/oF+QcGxs
bHh4eEhISHBw8IEDB3x8fLy8vDw9PT08PLDh6+vr7++PPx05coRyH3FxcTyE
a8YJZq2Kj4/HyVEfZPirRuZTCai0tC5QFW2su5dTUWontnR3i+LGOJQGDGzy
wYw3sgoMZpFtoa1j0e4YtjgQe1px3TVVlNRo+evumgLaSWW7DukeMlnjfzPX
LSxNDwYDJ1xQgB1I5pSuBcuR7kpLS9XszWlTxsMQdiLksXN2cQWZ/NefBB1T
pcBDZ4Gu4Yl3dpiY3Pn//G7r0q0BYZGxaFlJSUlpaWnoPqRyWr/UTEBAr8MC
mL0j1KXvs6lmPCFQr+kwS0sXn1VqVajt7c/DcGsoHRjzly5dYpS+zQrGcK+J
kxHmDcoai7rEeR+qIVFSD3UDtBwdHQ2KJpMHBAT4+fn5KDY5gW0/BYGBgdiH
K8QlmYeFhYHGDyngJDuVnVAhUUWpzqGR+RQD7A3pD5wzx5H4837AnqfNxjGm
A8feMekK0lRG+4pML5ExCSs9km1GyI8A5POI7BqZPMI4Zfb05oDYPFyDXExK
N4tapZBChYzh555S5IoucS7PtxMhX2Co/R+vigWkT/3Br1boHQomZ6QNiBq2
0N+8tP7RVzYu+tTnUEQ82Ds5ORnNisppaHdoXxga4DJgf+KHjGTu6em4mnHv
CHXp+2yqGU8g7g6U6qLX5fEPfWzNNQdEZaBPBE1x+ti6DwH0yyXSEyojLEdS
6KpQr1DuGL5RDYkGOck8ISEBzIyqAmYmLR88eDBwIIKCgsDzTEpFJmcqcNQr
5jcJV4Cahr/CfsD5US1R1fG7mmU+VeHiYqyBDEKzM6gkOLSUh4BVHKv5dwfq
kNPnSf0NNrp/ft+rpLpldE303Kr2x973kRNk7uF5aCBLdkdOm7nxoV+5eIdn
cMkVPSRNKtAHzkVGnCUEb9D7KsGF+WYR8lyyB+6tPdaGYT5+95fLAjASYYgj
zX69Xs9J1ZDIeI6dOXxGO0XLOnz4MO0lNEB8j3HBAOW0lJReh9WMe0eoS983
iJrxREHtdcHdHUgstbOS929f352RmY2hkHr0cddsPR2tmomWEZZkjouktJ3U
ncZIKlsBqgTqDAx1dMTo/cHDJPaogQBj07WCSoVSxs501LBHSElJSVaADXxk
3AvMDLQOmCgamU9hqM1svlC30YrxCgoS9M5tEIjk8KEb83I9CIXyJJ+DqcJT
i2iiY6S83jdtVEz0quNdMnnEwy/u+CKi+NIVMTCHeYZf/HBb6P1Prf32L9du
9gynGxxNBtYpiZ12OK4Q+zNzE6Nu1Evy7UfId3Zd/Kd3PPHTeG87dVYqcR1T
Mlbg5woViRu8YxBNZw62qWkMYwlMjncYYCRztGhalcKnXVHR67Cace8Iden7
BlEznliYSXVRtjRaVxoQk+0RmrzVO2LuGp/XPvHEyzMoAjSIXoxZ9khW/aYC
bfLJISN8R6VchNuhAcAZ+XITWGFQbzGkgtGO4su2AH1oqGPYh3M98hCiUAG3
GWSLzk6ttjoKj0LDRGHQQKwRh2Op1/dRgkOu166urZ+7KVSa6Pqa48M20du7
rshlSg89u8UlKPfy9Zts8mwgYFRw13su/g8+ufzB6c6rdwfC7EE9R32GTQ7j
BMSLJg9728H8ZXLWlQx/4+aXzCWH966LV8Dt9AbgZltaWtgwOfkIYq+vr8eP
JmXr/3NV4MovwrxD4jiOhtUEbqf4basiUG+Uwezu7nVYzbh3hLr0ffbUjLsu
9WDgoxZqmBBIrwsIEHyOhwz2Q2ni1mCacvlVeHg4niduEzeOCkBJBGOfRT85
rJRRDL8cgYww5+7VkwJcECeFWDkvI3W2mRkc91WrAsab+Ibay80DwYGneuKe
8p74CSYpc2iaWMNUAddHoJKDtGGYoUJiAwNtfDniBDSWc1gMM+PiPr/onP/2
0g61iT4kPSXQy4duyXJ87eyRrlYd59wrTG5UYxApTJr56z25Hn/17iC0dJA5
LgPXQ8GZ4UnzgdxmrwpVlgW549eplAu7kT/NOEnwM4UFqKwo4idPtP/J00Zd
r289vfmx+e7vfHZwb0iKvrxKpgLsb2UOqxmPVJferpqxOqPr44sPYBy0xi8L
XScYHi/Hn9jIwZ6UMzK4CzxkmK/opOLi4uhVxjv6R1iqKGJ6k27KFNg0UUZ9
6DFcGWG1wUN1TaluIWdquK1eB20m08pvZCAxp3Xkzl0DwRgA/AqtF019S8OQ
ICOH6XKR2XlgJBgqa3+z9qCTKdEMTHTGottX7LzScwtMIldczt0c3Xb2stqt
yvhkTryCSGGZM4IXfC5iAqcv37gvjDYwLsYoZjX0Kq1mcgwQ1DHeNIlxg8z7
hm32GtcUYOOJxdZzKv3PN93f+CyiuOYEOxdxSY6qGY9Ml75vEDXjQTO6OikC
8thHCsjrGzqH9DwdBGV/GAeCR41OE9Ypbi09PT0+Pp6u49TUVIy/KisrUQFQ
E4xhLZNPRlgO8WRUsB30mHB9IKQKrhrqPXtUYIwxB6FjqFrWb1hIjG3KjCFl
5VBd3VDEizQoMDPRZdJ2muj+MbnSRP88KJNBwlZNdPCnWfKIypazd03JI+jP
UauOg7hgGzP4sLS0tLi4+P1PA+6fseq+GWu2+CdiB+w5IEnTUMCkcriYppMX
rTI5h71qGQS63LGxxifdFiU670se4LrPzu51cuoddN3QCHXp+wZXM+4zkU99
27nM8uP7okvW+en+Y+3hGR8F2BGQR58rs4TsidI7mCXEDh573wdDg4b283g+
eFB4tjDOZVAfp5jB5Chu3Cwsc9QHMQaJiekdItkan6jjJDRcGWHLqGBbuG0N
Q9pf/dcxVNnqz6Rh79YGXAAOGQGzSjIffL08y1X8liJb6ZxhNyeIButw0ET/
5bKAxtZT0kSXz9YseUROZZt6taBMS2emOk5voRRgQQNftP3ItJkbps3ctD0o
TUpBDpXPJZODmsxCd0AgksmpTka3CfYpqu3YGpL/0rojVtkPfdn2g5noC+S6
e2FBXb16+y//Uiwdqqx05AkPU5fehpqxrRLkA6ceGoHt/IrmpMK67SG5a30z
nllx0L5ejWWWEPSJjjx5duU485ZDeTLpCXookWK1trZKAWe30VnDZjA+/Mce
6x3Keqj+vnG5yNujngqXLGF+zPjKCE9qGDNp1LNDQYWRAQPYoEDQAI0pVR68
Xgs48oMmMjeK/AyalaO3P2GTd6VqTGRPvEjDQNg30aUX/bsvbNsbkS9N9MOZ
NY/MNS4jhWEWW9CoDj9WryixmjyCQeMUXeQ+f9gd5TTLBWfbeTADHcpQ+XyN
Xxb5RN/QKZkcV2uVyZMKqtf7ps/+5NBD1ta5yNefPb81OD6PbhlKITHARlzY
7t1iUf9gasbqFaBD06Xv67OqZmyJu0PP6AouNUvbbT9LCPprkDz6SpB8UFqV
TAVFXOm5pd755x/6GerbmPCLhSuzU3GZgDFWqqZG9IYOygibuQgUy02GMAH2
HBTjLiM8JKif5NjCmEmjRp3IQEGJUFxfkpDkaXy6y9LP9faqn7hfzTlSrLdI
mqSkxhvw9wEjJVOXu1ynE1vO6eeEvpwjWTmUxlIjfsLzKNoLpyo0PclhwNJE
l+peMNGlhDVMdL/4EpnNGXwemFppRuMym6R6rbdMHoHvqQ9G6WBWKtL+R18Y
F6VKPsdfHeFzkAyZPK3suHrZKcMvGasTmpD7sWv4jIX77n9q7X3KKEDRyBW3
AFvUM66svu3cU0sDJSn91cu7IpNzqNNIsUfYljKTVM/Fi1/94AeCjuxqJ/YO
W5fehpqxJe6Y1oKNJKOr1SwhYHgwsx2Sf/T3HhiO4elZDmc2+KXLiUI5TECJ
9ItFb9p017G1V1Z8vUtTT5noiJdtb+rQYRnhCbH6UHVRA8dDMZhkrsYHYTWi
x89xFR8WxZ242tPTkSRo17v6669vd6UpBF4tJg5OJQnhdqf9ZUrx3bxZ4a38
SfES1fiIDiCtS9jb51SJUBnGtSy5s1LIwzuQlUMy+WVVNmdmDXOcCjQQVk10
qWK9LTD1O7O3ygb7/Tm7dh7Ov3r9BodON01JgaVkh9S+pklMuSqz0PGvFTDQ
BawyPD7fE6XnIWZM3tzacSgxf9HWg/933rZvTXd+cPryB2Z8QiZ/dN6+t7fH
oRtqPd1NDRkOOaXb/Gfv7M/MLQTrpqSkJCYmJiUlgX7B6lx3z2Dgm35+IkWF
XTXj3uHp0ttVMzbDHRsZXWUqKHVcnK2MrvbTdrd3doHkD2dU4PksdksEycve
3M7rn9/3Kqo8xhBTzvFRL9qooPj4470OCPv39ZO5X+3d8wq/iDRAOC9TcrOf
shfU57CM8IRYfbRDpF00VFfGEHBBp6RFqqSRw9krZVlH8lZ8/15ogyKhUyxU
PReD2K+3K5k39pYKEdSmKCHcviC8XpEkxTdKv9yeuER2DPtFto6OxI8UNqZ7
5Kgw9ZfEHueSlkGycnD6ANtlgvoXHqpoY0JhapaiiLk8wZ4WhAYLSBNd5g5D
Y88orJDGOV8z/uBX39LBcRpKlk4VmdnZjMalg0JtQbE75s9R7Jdhe0Pic5k2
SCabiMiqXuIa+9N5rg8wG9ETy8jkP31r17tbw4OSyzrOXPxSgUwCSFczaktM
doWTouJSUmoA5XJBKNdcx8XFZWZm6vV61DFclXEB0Zw5vXbVjHuHrksvyHww
NWOz8hpeRldbJE96NEvbbZXkj7WdTiqse3dHrC0+/+4L2zKKa6RGmXSWCvVg
urIdmPoUZO5fr9xmVzKH6wsiyk0xUVwsMMhyG8dkhK0cOPaQZM7XX7++50Dy
UbXJOmq/RDL3PMqqKJ9eTU2sUAx691C1oiCds9vE2vVK5o2dWULL1BAsmPiz
RLRoJVW6bpdSDgsjG86fL3ATm275qBwNkQvFl42sJE1R+LTgcHXWFmVn+1k5
6LcXrlG98PrMDyoVeT30ehg8uEhUV9RA1HBNHHioUAvwNrefmftpuBw+v/15
2FrPhO8+v2XarE3fm73ZNSRDLXVlRuNcj2+2AsgydFzN56gRjvN5WHYdd/vQ
LfnDL5Ie/f1+ddogMDls8nc/DfAJz6g/dpyJQa+ZwMwaVHehdxc/dKyl9Q+u
0TAGUIV0Oh0InJpIR44cIZnLpf3G4MnubvtqxtJnPgRdegfUjC1/wn5GV/yE
9F2PLsnjVz7YGWNJ408t9troGYM+sb6+Hgcy3LR/9ryxcUjJzU2PsVNJmiya
enZlZWGhGDphjIMN8JK9hfCOyQjjwNyqdrDreL7kKmn168e/dfOJL72pSkTu
4IOyB5K5RzkXAuCJlSg4ejTyU/FIg8UTbGtLFcw7P6CkqbGYmTfisKdB5yGE
21eHYH8YIdUxItHGluRmpW6kbVUOL0NdYu5TRd0ZNSdV+YO/vxAKdSQrB+35
a6UiV+qW1BZGLzPiC12PdeUiDQ4AzefMxWtL96XK4IfXXcKKjtYzTjunyPDk
h/vvm7H2/hmrf7PSu0hfTlEsrnqTsipo7NQ+HXQF0FD5vL3rynLPjPv/fbOp
/vcnm/j5e+5Ldh45EKWrqqnl6k5cDAXJUWdkRiT19BwzmXKSlBYL19onJCRQ
ECk6OjolJQX1CrcJahoQRmhXzVjdLQ6qS++4mrHVp2cno6vUq3EkbfeQSB5H
Pbu8f6Lh0bfcV7lHRiWkpaenp6WloftDe4TlzCW0cuhxNyfHTvy81dqoDHA6
hK3nJPL2JObnJycnx8bGopPFb6G8KFFlXW/QMRlhHGhmJ0/sC5Red7yTvqNR
oHSS+X4DSh+lCbOESbtgLQtqfjtAf+wYGm/URnx4wz25qLDwkEiwtCIQVk1a
+DYh3L7UKzU1VUSZKqmXnNYdEUvDPN9UimT9kdLSkpJUd5J+UZFef0TJtfeG
u/tq8b/drBzlB9+lcwc3qyRgdUs/caKqqgrFSuFrtDup9K6R+ZBwpeeWOnT8
pXVHKo+dktHaIHP6CjbsPfLw02senP7xXzy32j0whlOEMikPY/nQuNTjazs/
asnn67wS1XxeXNW8J6LwNZcIGUUjmXzWssD1vulJBTUyvRHz8OKd4XA0gAkz
AjcT+GKeI/I5bAlqItFhjhMOWNcv78iumrHk80F06YeiZmwJdfCw/Yyuw0vb
zUlVS4YH/mHe3h++snvxrsjUnBIYUXhoaLYUBpTKkyiIAcqTAQGOK0/2mVJz
Xrt2Qhn5gyH2RmZkUBKNa0vz8vJQ0Lh+nN8KmTsmI2xmmW8KzNkYkI3XhgNZ
6/0zx+ilnnNXv15ed6jAUMvkVpxjQpkOtVYMAMl8IFYG5YJ1BX/P8y+oq6us
rAwR1PvqtvA0VHtPYwzKixvdNoo0SgtcUazMpuHfP5m6ys3tNSen13bGiGn9
lBRvUwqOpUvF1pytYaneDmTlMCVtEW72mOZuBvFSjw47oP7gG9gkxoXDGhzA
ra9um4WOM2Go0pTEYnw6ftGfcpAbFp3wT7/dpPill73kvLewxMB4DxrSQ5V2
seTzpW5G+/zPnt+qrurTlPdfLPIvqu1Qr9YHt4By0a3A8GCyUSaVazXBksBp
c9LpwcAPxlIKg0HRPAdwKi7tAR0NiDmRsKtmbF+Xfhhqxo6g11pGV872WmZ0
HTRtty2Sx/NMLziKx4XnzHExWjQ4nO4pKk/SPSVXuYrhlZeX45rwfSoyDyOZ
v+4elpoKGj948CB+BT8HTkAB4SJxL2LSwQyOyQhLllBHAjBnlnw4o47V3mlm
NP7iygMxKdmcVcFTlWoSuJIhVgFz4Mng+eApoSxwfvSAsHulDYYxKX4xJycH
NI5So/Yjs29Qeh1PG70n5Xwp+E89Mbyj0CnzTrV27EapOpB/nAJHsnKgplEZ
9bKyiJiZQShTNuX1JMclg60aQWlV6tDx1NIWtYYSJ0MpEiXJnKPp9zd6fWfW
Jw88ufL7L2wKjM1lKgdOdA51TIT90X18fjD316tDzFbxfPvZLc+tCFrsGven
zwtF9HlbYzh9KZPToTmjVlCPDu8YO8DSoCK6epmSGYHTFcyobLo+6IFhdDqP
xZ7GiMSenszy46cvXLXePY2XmvFIYJXkB03brSZ5qTTCZQKcb8XzBxvg+aNp
w1SWypNorVaUJ4ciI9yn1Aol/LIjYoFxLi06MxNUAJ4BbwxO5v+vvS+BjuI8
s0VgZ8ibmZh5J5MwZ+ZNfDxZ/ObMjHkv70wcYwNx7MR2HBs7ccArODZewAZi
Fttswph93wVICBACSUhol1p7a5e6te8CBAIEErsI2GAbbL9bdbt//ape1K1d
6L+nD7Sqq6urq7ru/9X3f9+9nskIC5YQMhTUZmHNvEF9pbvwweZY8Qt/Zm5g
eFybTG5KSgp+ycIeBXvi5al28gVxWplmAU8KNQk6dvHywZEELdN6AwD9BknA
n+Rnmcwp/okTjTMClt5nB++buL4nrhxs/SaZsymjuLg4Pz8fFzLTmwOMzHvZ
wdaOqJw6oToOPg9Jr3IsHWfZGzkTPzAcYfwS6OmG8f1ApOmBV9cMHTPPZ8yC
Py0Mbjh5hhGsh0pZvL19Ym6woT/xB+NX//7DfeM/2qulxMctenPZwX98dtUQ
3TaU+kUsngTl4ryz6o/A3Rn2ELEifgYYfdj4Q3k6zuVxFo9FGpQ5wk8I35TZ
D1GfE5FWvCHEPHtr/MPvBfxowoYhejV786VrLr9Jr6gZdzvkhmtDrsaVbTdJ
ngl5xPBgG00ev6ICZ4HK8KB0/IvnctrclqHyRkb4W3u5/o0bTZGcAH11Z1x2
NqengY7J3DMZYRF4iF++XPAsVBO7F9PXa7VAz328LyE9D8RFEWbao5Do5Pye
dyfVAfheOIOcAGWtCK4R3r1SZAPEjsuZzMz5CMHq3CX8idOK0B1RHKeeSQIs
4mVkzvAb/wom99CVgzcg7DfE5Yldwr5hfMFeIU4A+QyYNEsfOdiCRcV8+sjn
124ILzCIVLMDSJSOszYVxxaXLfPS+FXgX9q6zVx3aPjjS4aM9QXlhqYUc4ba
aabl5pe3SOCOs/kYTSatiAqIL645fpYS2fjcpbtiho5ZwBbR0e/6lZZXkpyp
DY6fJdsqcbuHf/GcFU30esbbcSWKJkT8ZoROHRgJPx5mrdk1DCo4fe7KmOmB
pG7Hx8ytSYaciZPRqufVjHsHHZI8E/L8nYBLhc9alg4Gfvi1NOiSO1dEKfjl
y996LCP8bVveo9lW2Dx5T7LFAvYgM4AuOiBz1zLChk/hE1Gay58fq23laYJu
RFBsdmpOEXN64G0QKSiOfIivBq7DV0MUzRoq706eA/C92L9Ge9NSHZQPZR0a
LmqmX+jVwu423iYgDue/2B/OXTJYwhaw5zjjeBdGIvZlYLc5lHvuyoErFFcl
65yZzqUWBIlF3Jv09wnQPnKwLTvWIlTHRzy9Erx644uvZBq/YjftNZSO4wlG
dracMIOK56IaJD6jcNSft3KzU1Ydbjl/kRV3WiPkzS8TC49+tCvtwakBBoa8
/7Wt76yPP5hWeebCVeZ16SJEoUV8em5h8YjfaWlzn7ELX1+4k2r/wh1Am3DX
f2zJ+iw5pdE5FUuvIuZP2OcoEzjbwG1tLHZOxr/Pzg9xyuQIy0+1XDaIWrgr
NuhJNeM+hIHkhaAZjjPdN6p0sJQIZxChu6zVph1nj2WExSfevn0unlNpbwSn
l5ZSLx183gGZu5URdorejMwb9JllHDEWb7AgFlErzeZAeiBJEBpTyl6dI6ff
i8oSPE28ohnq8AtiCfmTs05gaTwptAO7B9LGEtb208+RzMB38W5d2L545cqB
i1RUDgtbEEZrbMRgi3S/rjPvCwfbxpZWalKRncCuV67dEBUXzFnxxlnrF9Ct
iAwdQBSeIjEymyr372PNDzZG0t73vokbFvknv7suxrFncNSbOxDlHs6qEQRu
6OLBPjC3U1RW9bOXtTj5h88uv3v0B3f/csakj7dgxMflDA7HEG/SQZcH/KhE
RY3oSmAjOQhc1vFwHlTrwAFxKi2LL3JFL+RmCzzvCpUGtT0NcoOz5Mylcw6C
nWIsamp3j+apjHC7T8EWsDWMDmAP6qV3TOZuZYSdojdz5mf1mWVcaLjKSvXi
eU4mstgDkQkYFb9nSrF5/hVcfS8x7CK24XwHTxPB6Q/OazMhKZw4RC2TCOTY
HwFgC9g9Q9O3oZb1iAeuHMIUku1vYkaGjSqdUN7rPfSFg23L5evgT0FNCIZl
8wjOctKfl+lxcQoMHUAsHWdeQu7lpxZKfnHluv3JT80OvPuxJQYy/O93ds3d
kRKXV3fp6meCwBmEO+3iwY+8urb+/le0admfvrQ+PiltzsqAv3no/eEPTXt5
9lqm9RC9gNjxs6fCKnabBV1X7CKHHhK4AaK3VDwwPJVUHaGXaINe+sLyddEO
0x9/Zr0FORhgUp23PzgyziXvcG/iTd+Q+BRO4SEsxBlnJhb/4rnL0kQPZIQN
6M1qFs47sKEMVxmTVIxsEc0yw8DJd60ToWtw7C8TEDMgQlGH4coFCZylkpV8
eJaFVqc8Od4JVw7yCfU/5d0TbNNPhbZ63cGWpeNienH8glBhHsGcBlNVZ+1K
TTKNc/Q8K3UAtWvN1n8hR09f2BljeWnJoZ+8vMlJgmKs7z//YXWUuRRnnFkO
QxumqCERFl0cSiqrax+ZtnOILnsVm5JN8dg5K/2H//K94Q++++JfVuFaRhjD
vCI1HFgVyTYlWdLTK6YFk4sye/GYtSkKgwUt5/BxiKNAIPxE9hANZjLnz4Ac
yCFe5K+cHxZcAvzdejPzK6bw8NtgGSS7APDcedOQZzLCrr6OXMwpFBq7HXJR
VoNuOUqXc6YXmEnm79mrr+D+e8kSuJ5D+GiQeym2I8+efOYMnrtyiJ+QmHM3
ZDL74yXWuw62MjWNm7nXYB5B6VRZo0nOjTPnjGj5iiREySu07tRFv5iiiUsi
DF08iGB/NWP33K2xQbHZ+E0eiMu8709rfMbMHzp2/jsrQ48ca+DNHSEIXCTe
xZ1aeWU1mfyf/7AmI78USyoqKighO2v5zuG/fBd8/tKsNbic6aFJP7LP7WpL
nTvvGPWEDOCz80OEbOD3n1mZnZtP1072NlJ3i3ZvODKDnMy/bZ9I92j0ZI6x
IxlhGWIKD78WjKoIXxGT4188d16H7JmMsCvI36jncFvqEWZAxWl6XnRy93Tn
voXjlzLM4Htoq+EI+St0CE9cOcQBd/ygfnpx9bqDLXUFR725Q5hH8FaLDeZu
VMfBugwMqISDn1zJkbPrD+WD7gwpZQwWoL61obmZpQ2UQKR7MntJcvIKXl+8
Z9gjHw57eO6P/7j0QEw6u/7lVnFDtg3v/cP8/UN0sSazpUoUM1M4BVz6wbId
wx967zu/fO/1BdvZk4LfP4b+rpjhFtQ0cWDCLUxgYimOUlFNI5P/M9eGsmyM
zRQxMTFpaWmIz517dyp4AhGce6CdSNy2T+GB8fA7KS8vZ7UDiz2MQlseywj3
Ob6WDBaZuGjTCvbeBlehl9AXDrY3v7wVlVPHIU/M7AjVcdJ4fXvVcdI4ZSrB
z0uDMsHVhswD+Bysvj3aCoZn4wmT57imSOaI83HDyMp/xLHbgyLvG7/o7tF/
uXv0zCmL/dmhye4zzlnLReAvLDxAJs+w1jJ3x4Q89lAbHXJy0tPT56zaTWHb
t5cGscHwil68dLtTQhZCl+PBqQG46SBvYINrg9MQlqemm+Pi4mhPfPDgwcjI
SHB7UVERdniA9TL0ETBQtly+blyKq4C3qJ6lQeQpPKYEORl31u5e1DaUeyMj
3OeQk1TMXfTrxIIC0XcOtkLBTyTo5JrD+vbmEbHZlYsD0x6ftc/QxYPAdfLK
aBB49YlzJHBZ3InzIJwoByFjgyygZTtPcnJyTFzCS3M2sf3/gReXHIpNAZ9T
PoUjCIvAp2+MZbomzVrPZnMMKxggWKYI/sc2CzVhn/xFW8KGPvKRz5j5760J
xxY4Hektnze2tIpqyY92pbFEk44P1CHfG5mG/Uc0TjIPCQmhHgi+HQ4XjZj7
49RM3wGH1GQ5hvFx/IJQ9qPhh+SEzIHx4791KyMsQ57CE2Y0rKoy1hR5IyPc
H2BI6fSIpLlCNwK3k97bhXsH1w62X7c3OBZmapzlrK0/GpZsmbUlbvQ0f6dF
4LRyMBC4PJHNIiXmQ0SNIgtQCwoKEEuLvp7NgWE/+O3Hdz8863+Mmztz9QGM
I1ifE6y4MOkQgWs/NreWcyu00WFWv17XdqvUwWLmZf6xtA16f91hThh5xedi
QgE3GuayRqahRM+IpotbX8/OuISEBATkbFtjWI6RBWzPsFxderidwe/Eqaar
u2YrkK1bGWEDZOEyxzky21nwUkZYQcFrkGk9rSd3abPnDq4dbMlRCHQRzIBy
jx8/XlVTFxCZ+c7qiP/zxjbDpffAG34ztpgOpFacuXBVpFDkInCh5ioInDV7
oleOvaKcmmdu02q1sncAxJ6Uan565lYtiz7m41GT1qUXlFPTe2VwJncgoeAI
awlutDeAk7uWTunAk/XBKcxse8Xnrddvinp7BJBXrt34ur3RAzsX6CiRl5cn
BqP09HTcF+CrYQV8UL9uZOhduGJyNlvJ9CvXGrmXEXaEuzmyzsoIKww2dMl9
Fb9YL1qY26zI20BvvQ5neF042JLMz5y7FJRonbLq8L+/ttmxCHz29qRDGZUX
rlxjxZEbAhclKAYCN8hYHdchFPYoGF5RUVGiY+uBxO8/vdRn7MLhj30yb0fC
lvAc7snuhBJ+R+yAUFCkmAAblyixS2EQvIqd2R2VJfM55e7d8Lk810mXIvn+
ndvE/osbgbKysuLiYvbEsS+JYhEqLJfRcvm6m2YrSnVRv13Iut4WnqeuZYQ9
RddkhBUGFbrkvspbP89kP0VQvqtSi0DOJtoUgbcWfSYLiTindGcOtuayxrfX
xf3s1S2Gq2z0NP+52xMPmysuXbkqql4/b2+m5i2Bc07qtO5CJfvCUzfbUMpe
WFz+3Md7KbrCh19UAefxWf3ulMnpy8OeDhZ0Gfic9iXCz8LA54a5TjEvLOdz
xGyC8GIQ3XDYB9yMUERRheUGROXUOTZblVYfZfsAJ7idN1u5lRHuAD0jI6xw
B6NL7quMGTyqwrJz+czkFpLMyVjKxa3LsjVhsb3RuWC4Mwdb4XqMQPTxWfs+
2pEUm13ZqoN1UE7N1DwncIOQrDDQoUCxUDIB8CcblISEEbYzY10EJcqHPfrJ
ksAUWkyy+l2sA5DJ8So4nKJYJGF2kXvC507nOuUqX0qKiXwOSzSFust5HTz+
1JxRYbkM3O84RuaTPg3h1EmRDsrm0KLXSbPVQJARVrgD0Hn3VfCqxw62hNC7
APVlrWNg/uc9hUdESyboxViOJeDgYAsSWx6cTacJhqBCxfSSDsc2TAOBC5DA
hSmkLCRrIHChQyjuIMT0IqUDmM0IjM4mA+tt+5oB3Lj3dhSV14qaSYo5ULKJ
7sCibkEu0THw+fPzggx8jvFXzHWaLMcMO8N6e6FFQwUDxpBMC7BnjXdGcpd6
Z35JdyJWHLBlyX7xrr+Q4sG5SEzLzszMTElJSUpKSktLo2UnjrPLZquBKSOs
0BUMJPdVJsy9UaL4Whfkv2bZYs+Yv7o9vcRisRQWFiK8qaioAKOyspoav+2u
CBcOtl/bGz8ZHoscuHDDFG2YMoELgR2nSuAiBeqKwA37IAtf4F3morrvPaWZ
TbzoewAUuuVgyj1Pfjp0zLwRv1mwxC+itLS0vLycFvbCHsKgauXI52J0EHx+
uvnCq8tspkVPzA12nOtkoaZc3oM/sZCmXaRux+Y1xeREy+Xr4tLA/c61z25U
N5yxndaF+0DgNJKjGjb+ZCFQB81Wd4qMsIInGEjuq5QV8ka6jQR1zCbHT7e9
IN3hWnMkpzwghTHZ9tjuinDhYGtgMBAyq0HcE7hTJXCvCNwRjIotNadoJzTB
N4TFKuDtFHPeQ2+uv+vhWXePnvnw6ysSUzMxcmFP6CrlVDmNfC784zDWyHwe
nVH8v15YxxTTtigLedhxrlMulRE3PmymNrQbqxpgGbjHYWqF9zui2co/Kgen
IMaUHh8fHxYWZmi2wgH3tNnqDpURVpAxkNxX2enmsenhtzqZg3Wv6HZ4NbkB
L+p0/vzyUEq7U1yosrISr2IdY9OKCwfb23YPONk5SO6p50yfmMF0owTOyl6v
CNyAE81XSAK///gAiw/xuTU1Nbj7yMrKmrs68H/+evZ3Rs/4h1/PQYiOa5/+
m64mHGU+Z+3lnpgc8jkf/zF5q7X6BFXCWCTvdK6Tk5sshvnchbOGAnHzy1uI
w3l4EZk3X7rGXgYcZAypOJsYR81ms9xsFR0djSUYnfG7Vc1WCgb0pl5l591X
WWHiMZnzS5HMwS2gmkMLGJ3P2BobSw8+xOfFxcX4RLoptbsoXDjYisZGdoCy
qgTsLZegkMDBZgYlcIO4WRcbjRtbWlkZ+Ns5+3FXjo2DWvFNSeZsFw2JiH5w
0rK7Rs8a9siHY6dur6g7jp1h/YObBI7g89Lqo//2os0t6Gcvb6w/2sC0CecI
6LshFGk410mNX7xK8WQli+EG8lTyigM5cm0nfjb4FeHA4vfJZqvDhw/TCDgl
JQXnVygcKkEbBRlfDwj3VfbyeOxg+63kXUUTpdglJPPZfrpDH6IdXhegIKxg
vF115mCLOOr42cus3KB8ipB/FyUonbNy8Bat12+SyRHO3fjiKzHPiz0Br1qt
1uzsbAxV+IKgggWbQ+757WKfsQvueWrZxtBMJ43bEgSf70koYgLnnt8t12TV
x/o+//Fe6hWwv8mgSIPhDLEi5zq7z2zCXpVk6/iS/zS8NMAQkl7FqWScx4Ka
Jrltlvc7OM61tbWi2QpDM10j8/PzEfMoDQQFp7g9INxXqa/loYOt/UKfYWrB
IIX7fdBsykp90YubI9PTEeogMscFgjsCEBEoyEjmzhxs6bbwwBt+CwLSSutP
U9qCYSpLUJxaOXR7fhhMTrEO/EuHI94s0JoQ1IoBEYNUvg48ASGk51gembqD
tegTfENOnG4WYryO4wu2OWlFFAfcR2cGVtc37I7KHP74Jz5jFjw7exfOTnl5
OW7zKysrwSpUjQbziBQZJ7K7adgSJaYp5zW6O5c0g+c1qeVWi2mG/Ry7kAPt
8qf3CBASdNg2y9pONlvRI5I2ZAjUccxZlIhfmgrLFQy4PSDcV1tbvWn/FD1D
MxLP6vN0BZv49ys7Mul+Tr9LhD00WKFbVtul4czBFvfCsmrWv/5p/bQNcYn5
tZzE7IqVg+cAFQgmB6szP8YcPpX52SJK3RV8tTo7EOb57oxjDpxu0U5DdESJ
97+2lXOdWw4X4LBgpAO37DyU+t1HFwx7eO7vpm/CicNxw2kCpdfrsjCc6xR1
490XLopROalZ0xJpintf/3NabOO1xhh6E0+LabSL9suTEf0zUV936qI4vH4x
RYbUiuNUssE4jKWeNHNUYbmCI3ozMm/oivuqVw62F1JmOrbzvxGcV1sLFsJ9
q8lkApnn5ORQuI8KIbbL37WDLbg0Mrv2teWRP3xujWD1e3634tVlhyMyqz+7
8UWPxoT49CfmBvPevLGl1SBnynAOx5bNQadOnRIOiay3wfIEs+WB121NrI4h
+vLgbL6EkaL25AUOEwz4MTRs3Bv9t+Pm3v3QzKemrsEBxOnDScRm8RHC0qLb
KdSgEsBifqc5QFYK0ZKv+/I83QmwN4MB8DnbZlm44moqmQqcLGGlg5hscdLf
vp1Cf0Bv5szPdsV91RsHW50EKvwkIn8rrAafi2AVH4EhI0kHnmA3sLxdQYtb
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
PFz3F3Q7qJDjeYe+04Gy1/ZWQUGhN+HGbAJhbYNuAFetA084g9asg1Ik7EWq
qTvy/Lwg8swj03bmWMoYeFPkMN9Ssmp39JPvb/rbsR9olTAPzbj7oRk/etb3
zU/3R6YXCS0X91wq96QjyGQLjFBrXB6YKMaRTWFZ2Cbo68y5S//6p/Vcbnj8
24sbqFSDjbC3iPvgcgc6nAfp4RmQlsvX3XfoC/FDg9iX6tBXUBgM8NA2iA6b
rEymtiQgepEScip+/NJG5jrmbImhVm1VVRXieQTzBQUF2dnZmZmZZh0rd4a9
MGfbD5+cz77OoWPmj3hq6WvLIsIzKj0Rb5QrqA0hOkYQjCMiRK85duqlJYek
bE/7xzjfyKRsZooadNtuCgXclt20CcTe7OcSj5EjNVYXD7aMiQf+bG/A3XV4
3qEvl5GrDn0FhcGDTtgGfaVDdJgu2ZvBmoqfvLwp3VLDknW8hcrteXl5IPDk
5GS646WkpIDVQe/g+aiUvD8vDfnJS+uHjF3EbiDhdnfp6mduWN0QorOU2mmI
LofiPmMXSo9FPuN8X1sUiH2jhShiWgS34MZ2crVlZVoRKSl6xIgOegfYNUBh
ZAbqJlPXTxBG25lbk9x06BtSK5zrVB36CgqDCp22DeLbmy9d++2c/eSZKWti
Ll3RNGlJraAUknlubm5GRgbJnGUwOTk5FosF/MmQGBs3W6ocxRvdu93JipGG
EB2EJofo4vFfr2/53Qc7v/vogqG4HRg732fsgn95bnl0dLTJZMIu4T7i9OnT
2P82N236j5DG8dxzgNUpv4YH6N21AluH8KRD35BaYYe+KiNXUBg86KJtkMly
jDf++Dex8OhtycOONnzCU4keHPhXWKqVl5eDPGtra/kRQryxrOaYU/FGV253
TkN0poaemh04xCFPHhChlccv3rT/1++s/bvHFviMWbB2+56IiAiMMlarFftM
c5Dbn31m8+ympHzn2nLB/+wLe/DBzs2Q7jGV8Qh72KGPM6U69BUUBhu6Yhsk
S/MZ+jrZP85ScObMS3RQaAX0LooYhcOdbNAjWJ3ijRMXh8rijXS7SytuuC25
3clWdILltoSZHZlcSwS9uA43CJGRkQcPHtyzZ897vpvnr9oeEhISFxcHksfg
gvdev3jx1rhx31DxzM+vS0e5oMCWdbn3Xq/aClqv3xSds44d+rL4oaFDH2dK
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
+g69GZk36IXZtbW1CL/z8vJSUlIQJyMsB5OD1ePj48G9JSUlWKdF9uWku5Cv
r4ffCMwMfj6rkzkYG7zNVLlJB58nJSU5IXMK4XpcBqmgoKDQf9CbOXOgqakJ
gwVib73OJCc5ORnUilAZUbrZbEbEDqo/deoUbhPadpGl5h73DWF4wo1Gs54z
z83NFWl52RcVT/ASVmiXZmHC3MXsp4KCgkJ/Rm9Ws1zRnZXOnTsHuj5y5Aji
8/z8fLqXFhQUlJeX05n04sWLGFnadvHmTZvzcplHoi74Ovgi5/RqFovFggg8
XUeWDvEcL2EFrGabAMW9AHMsDubOCgoKCgMCooKalkM3ddzoGXz++ecganbE
NzQ0IA4XLmwnT54EtbIuEbvRbhfp/vngg558HXwXfMpFvc4cA4TVas3XYdUh
nuMlrIDVbKWJ7P0cP75HDrGCgoJCb0F2Heo58C4A/Hn16tULFy6A0s+cOdPc
3Hz+/HlB40a9lG+l4NwD7cTbdvtObPzo0aMYKejFXKNDPMdLWAGrYeU2g1HP
gn8FBQUFBZGlZ1YHrI5YnbakpHHn3Tfs6x8xosM0iBBR4ZRuU1PTKR1NOsRz
vIQVsJo2UlBlt4cMRhUUFBTuRDCrwxCd/tRCj6WDJsrx420zoW5LB7l9luhg
sHCVvaduAFazKSXee6+qSFRQUFDwCoaUjqe98CBbMDm7+93Km4tZXU4BMF0v
zwUINRVb//7w4SrBoqCgoNB7qKvTMi1s8Jdr0R0gBovbLqANB4zJXQiYKygo
KCj0IBBCsyd05MjO9903Ntry5IjJFZMrKCgo9AlaW20iKiwm9CpDgnieVYjM
k6vsioKCgkLfwtfX1uaDx8SJWoDtfgYzKkpTBhBvmTxZzXgqKCgo9AvIYTYf
iNhB8njs2aPRO58/8UQbh3cimFdQUFBQ6AU0NmotoiLx4uoxapRG7HV1fb27
CgoKCgpu0dqqTYmC2EHakydruRc8WbFCW6gUVxQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ6wv8Him7oyA==
     "], {{0, 276}, {
     495, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{495, 276},
   PlotRange->{{0, 495}, {0, 276}}]], "Input"],
 "\nLa ",
 StyleBox["fuerza",
  FontSlant->"Italic"],
 " de la conexi\[OAcute]n entre neuronas est\[AAcute] dada por el ",
 StyleBox["peso w",
  FontSlant->"Italic"],
 " de la conexi\[OAcute]n y el ",
 StyleBox["bias b.",
  FontSlant->"Italic"],
 " De manera que el resultado de una neurona al procesar la se\[NTilde]al es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sum]", "i"], " ", 
      RowBox[{
       SubscriptBox["w", "ij"], " ", 
       SubscriptBox["x", "i"]}]}], " ", "+", " ", 
     SubscriptBox["b", "i"]}], ")"}], TraditionalForm]]],
 ", donde ",
 StyleBox["f",
  FontSlant->"Italic"],
 " es una funci\[OAcute]n de activaci\[OAcute]n, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "ij"], TraditionalForm]]],
 " es el peso de la conexi\[OAcute]n de la neurona ",
 StyleBox["i",
  FontSlant->"Italic"],
 " con la neurona ",
 StyleBox["j,",
  FontSlant->"Italic"],
 " donde ",
 StyleBox["i",
  FontSlant->"Italic"],
 " y ",
 StyleBox["j",
  FontSlant->"Italic"],
 " est\[AAcute]n en diferentes capas, y ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "i"], TraditionalForm]]],
 " es el ",
 StyleBox["bias",
  FontSlant->"Italic"],
 " de la neurona ",
 StyleBox["i",
  FontSlant->"Italic"],
 ". Una manera de realizar el conteo de todas las capas que existen en la red \
neuronal es agregando un tercer \[IAcute]ndice ",
 StyleBox["k,",
  FontSlant->"Italic"],
 " que indique entre qu\[EAcute] capas est\[AAcute],  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sum]", "i"], " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["w", "ij"], "k"], " ", 
       SuperscriptBox[
        SubscriptBox["x", "i"], "k"]}]}], " ", "+", " ", 
     SuperscriptBox[
      SubscriptBox["b", "i"], "k"]}], ")"}], TraditionalForm]]],
 ".\nUn tipo muy usado de neuronas artficiciales es la neurona sigmoide, \
donde la se\[NTilde]al de salida de una neurona en funci\[OAcute]n de su \
entrada se calcula a trav\[EAcute]s de la funci\[OAcute]n sigmoide.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnTuu4zYUhplHkdZd2ngLXkECrWACd9PMAFEbYBJAmB0YKTJlYKSY3kC6
C6RwkWZKAwHSuw1SXSArcA6PaMlvk5ZIiZkP372yLIsiJf0iDymS56vX378o
PzXG/PCFLF68qr5+8+bV228/ly/fvP3xu9efycpP8v/lJ8bY3XYAAAAAAABw
BTMxC4usFbo2GTpFMF5ELZV+Ls1K9DKT1cXQaYLxYqo6PxG9bGQ5FdVMm99m
Q6cOxoYp3OfmMF/Rkmll1kOnDsaJlEq7vXKabQv0Apcxc7M724Ze4IzaRmm1
0ZZK6AVOMaUsSvnc1toQu2Xe/IZe4ATRx0bKooXUi9byWbZqQS9wCbF09zWk
4rilDr1ACOgFfJHyaSEl1bMsy6HTAgAAcAl9n807bPBE9LJUywbNgCdiD6MZ
CALNQChoBkJBMxAKmoFQ0AyEgmYgFDQDoaAZCAXNQChoBkJBMxAKmoFQ0AyE
gmYgFDQDoaAZCAXNQCipNCPxlPUMJXbkry43srSzaTHHTWbE1YyZmUpHUi0l
hnk7Z4nEWsgvdpTVVn6bd4kDUhNHM3K8rXAnD5G4K8l5rKKmvkeG4elXM1L+
bEUF3qWNjpLBmsqMfjSjs06sT+fL8giHZjKkq2Yk9PZxe0RnfNxgBefFo5qR
HGIt97tj/iBl2XN47gTDEq4ZqQtt+pk9WEq0Z2amyI8QzYhaerzHEvPGLIc+
fwjHTzOyV89liJRtG/KYPLmnmTj3tn8NQjrONWPm+3qM2LhRyg4t46grZcux
ZmwLv/vcRIuxlJyL9piMaTVjZ4J1pUbEOyp5Fx5bMsdp5p35M/79lLi2vFnK
H7mPT+Zf87PZRo9pQc06d9SuWMjyQ/w6r5R8z+QwOSP1FrV57ZvFJPGRw/wv
ECsmUYua/FFLyp64NaOjmFa09eaO1KeTlEYaVzn+EqmLjfUx2GdiVVTJ4hKb
d+jzvZPC6ePtCl3C5kPadhHrKWroM76ZvnkHvQSEzdVfuW1HSxrfYtzPoB0f
Ez9svv7KJbVJ/TPJMziABaOehUodPTV135dyd9X2lq1r50fRru3ciKqpXhvd
S33nNXmAX9g76bnir9z6XTv1uDYOJI1zd55JlR1Tn+2b9pPts/3bTlnbOt+s
EztGxv1etX59zdGTrh6i9yHK/Vt2v7C3r4L7PPZXbvVc6JiM0fX/0HOepi8f
Ylq819od5Uwbi/7Ah29Teki4q/f88Ps+L/EN63EtjvyVy1FrVVdjrBXoU2fz
6cRajmkvyZVenubm9o4ejMi03+pcIlwvVVjYu6k98Vfe5F/FuR/z+skemPfm
b/lPrZcPUc/pd/PXmcfVU70UD+olMOyNa3DVX7nbfuGZUstmWH6Va/tLcr38
EfWcnuQJONZL+YheGgvjUC/zsLBXr8ANf+WHNta4qNtazSJ1e0jMsvnSmzAp
c3ftVrPYv/04uOflhXu+OP7uju7S7hf2aipv+Su3ftTGqBbbf2kyiL0bzX6R
K7+6uL3N962V77TT9hCTteY9aF1jsa1p7vuuCTttR9r4hb15FS76K997aRxl
/aguQxO3h5iY9enZ1ZEPdu6IubBun2W19+fGtq7a8sGNjJAt2/rZd3vtdA6T
QttXAsM+kP6VK1VH+5Yt5v27GF/i9p6jMz3L5+UOFYdPu26bHD7zRssY2e+B
sMEpfG5WR+vjPvUbwNTlX+f0ZtNSn4q08yjkNmuDQS8npHziU7/d7Jhaa5+s
GQlzjLXdksVVce3zJ10PmLH3fgEfTKIeduPvXQe30FaEYlePh0/Q5yK3uhGc
on1/NuY38xT/TsYeoQ0p0N45/5iX8e+lbScd+myhC6qVtWhls4s+9lDqplty
l3xxWin2LfQ6ujliS9q+xyvkR6sV/eZ62OnWSDmA7Qc/9FnDIxxrRbfMmnex
kWaYYnapPDnXytkey/6tGFMwj0d+3NeK7mVnyOy17U7bdkbX+wdu4acVt++k
zxmWzZwZvvMiRCsuxER9RfRgb9hxNHn1Xvi4CddKE3LRtY+69lvGys2Gx7XS
hO/iDadU/3yoJQu6asUdZVLP0BscrlBfoNi4WdCPVpqjTdVvVulbH9Ye+Fss
3DzoVyvNUQvNZ6SefV01kheV6u2T+ekyIY5WDo5fmNpPrJ3hpGpGn+79UatS
sFfyILZWDmKamdrf9ErHti91OcdWyYd0WoHcQSvgC1oBX9AK+IJWwBe0Ar6g
FfAFrYAvaAV8QSvgC1oBX9AK+IJWwBe0Ar6gFfAFrYAvaAV8QSvgi/p7QCvg
DVoBAD9y9T8NQ5Cv/2kYgvz8T8OQXPU/XVk/ZsyaD5e44H/a+X8cr78sGI4z
/9NTVyqtxuuPD4bguv9pKY2sr0ksGGi47n9a7d1ynB6FYShu+Z/W36ucvNBB
fC75n9Z5Jqdu247Wf7iNWC7Oz53OHYgFA3dwMzGp1/Oh0wI5ULfvDp0KAAAA
AAAAgHHwHy6PWME=
     "], {{0, 138}, {280, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
    
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{280, 138},
   PlotRange->{{0, 280}, {0, 138}}]], "Input"],
 "\nLa funci\[OAcute]n sigmoide tiene la particularidad de que devuelve \
siempre un valor entre 0 y 1."
}], "Text",
 CellChangeTimes->{{3.659919421391006*^9, 3.659919685149439*^9}, {
  3.659919743156139*^9, 3.659919892162366*^9}, {3.659919997825447*^9, 
  3.65992013844009*^9}, {3.65992090687052*^9, 3.6599209442703114`*^9}, {
  3.659920978917962*^9, 3.659921197716276*^9}, {3.65992240325947*^9, 
  3.6599224089524803`*^9}, {3.659922489624625*^9, 3.659922585855557*^9}, {
  3.659922646912006*^9, 3.659922650294767*^9}, {3.659922681766717*^9, 
  3.6599227069578533`*^9}, {3.6599228086534224`*^9, 3.659922809613098*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"LogisticSigmoid", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<\[Sigma](x)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659920142227826*^9, 3.659920179611471*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], CapForm[
    "Butt"], LineBox[CompressedData["
1:eJwt1H0w1HkcB/Alj6v2N3dCzW1HqEMxJi1Lms/3SkV5bk+ytdg6RCoVV6qz
Lpq60ZXdEtamWvLM5raczfb7YYpKrbFatnAieVi7vxwRPd3ezP3xnve85v3/
eyX3cPjPhhQKJUif/9oNrCe+fsUI0ZHnIQuJfGAl/nB+fgEjvLbIqVFpfEi/
ylw9/R4jVrs0VBKZfGjTRHHfajBibexQxa18PsTkF7/s6NHv2S7Wskd8yJ1y
elpQhxH0TKanj6MAZsQbqj2iMSKZdiWr6I0AZGaxh+If0IiRG4EuvaeuQsYz
laY5dgmhnZr1QtEFMF663MaLvpiQqMIMdCIRuPztb471U4lv6mbtWpg3ocRS
PKP+zZx40dmXWuBXAq3sJxdxMCNSzrjnpfHLgF5Mt8t/bUK4B/muuCurgh2b
2SeVF4yJi/ke28d8JWD7MY7nHGBEDL1zDWh/XA+utSLeUa0hESVRVByduwuD
x2+6qcoNiBvm3Zb5exvhQFGuuCiRQjAFps+0jnKI/HW3Q7X9F7x3uNZk2QgB
ThpnNuv6R1zxuOHBtYhWSAoOzR4a/oBf4fe7FwY/gqhjIRs9PWdxXRLL4NCl
xyDAx0Lxe9N4JGeexR3tADDsjXAzmMKvRbTdMjvcCYm9LUdKpydxh/OUjJeH
u8C3IHOZ7MQoftzn3kBqazck9E+92m0zhCf7WvTYuPdAyODamnbHl3h8/KJk
yUU1eOLCnoms57h0tiTmk0cfeL/bu29gnxSX+Td66xoHYM1Zkkqk/gmVz0K7
CoWDUNemq8iIVICEd8KZOv0a5AFPmD4tahgfGFnFch0GTeWtA8GRQ5AV1dU8
lfYGRDVuwpm7o3DdvsCwumoEmmLPWbk3TIIRNe5y2f23kL604EXIt1MgXNj1
apFiFDo6u/26Cqfhe67RquimMUh56rX6kvUsrInLyaLwx6FE4WcV1/4Byu67
jSbtn4Cc6oZy08CPUDiqaLWx0oCBoDug1fgLzAgZLVaEBmwqqtpK/CkIdkyK
84ImQVXGczA+b4DCbBO0me2TwK5yOXd0yBAZpu2nF23Ugq/QdMPDVUao4t02
x6UiLQxfapx1zDJGStX7CbM5LUgdMjQr+0zQl626HsZmHQyKf1lntMIMGX1m
nq7n6aDLaQtv+oQ5UqY7266X6cC2cItdu5yKEvJiOOwxHeRV7p73/mSBQtWn
m1MwEpT4JvVfPy1BVjfr97zyICGpmWOxIp+GfL7WFc+EksAtVuc1iWjofT1j
8GAYCVFnWPZ7xDQ0z5pQvNHb33u7t7CWhqxr6+TKcBIc7zDilz+koWBGSG8N
i4S+G4tbrf6hoSBmiefOSBICebJ0WiCGIh9J5/ZFk7CZwzCpDcPQk7PhvC69
fXwluUG7MCQ9FfsAxZDg9KG0PIeLoVyVgE2PJcHoSK6KehJDgWsu2HZySZBH
J6wzvY2hY7Vhc85xJEg3DstvV2FooIOjFehd/R0nYOsdDEnYSuFnvQt7dsZk
N2Ho9u/V9p3xJKSFwB+LlBgyPejan3KAhGRX2XJxL4aYS7KFar33WzBKNw1g
yE0ltfwxkYTwNpemzHEM1azfuQ5LIiGgtHTbShJDlnfo6lS90Vk7JTGDoaUO
x3369PaKFXJiFjB0WXYuYtNBEv7/L5Sek+larve/c+dd5A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma](x)\"", TraditionalForm], None}, {
     FormBox["\"x\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 4}, {0., 0.982013787154201}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.659920132383233*^9, 3.659920179878311*^9}}]
}, Open  ]],

Cell[TextData[{
 "La activaci\[OAcute]n de la neurona est\[AAcute] dada por\n\[Sigma](z) = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"exp", "(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SubscriptBox["\[Sum]", "j"], 
         RowBox[{
          SubscriptBox["w", "ji"], 
          SubscriptBox["x", "j"]}]}]}], "-", "b"}], ")"}]}]], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". \n\nPor la estructura matem\[AAcute]tica de este modelo conviene \
representar todo en forma matricial, de manera que la notaci\[OAcute]n se \
reduce a\n\[Sigma](z) = \[Sigma](w\[CenterDot]x + b).\n\nLa \
propagaci\[OAcute]n hacia delante (",
 StyleBox["feedforward",
  FontSlant->"Italic"],
 ") consiste entonces en aplicar sucesivamente esta funci\[OAcute]n,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", "1"], "\[CenterDot]", 
       SuperscriptBox["x", "1"]}], "+", 
      SuperscriptBox["b", "1"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", "2"], "\[CenterDot]", 
       SuperscriptBox["x", "2"]}], "+", 
      SuperscriptBox["b", "2"]}], ")"}]}], TraditionalForm]]],
 ",\n\[VerticalEllipsis]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "N"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", 
        RowBox[{"N", "-", "1"}]], "\[CenterDot]", 
       SuperscriptBox["x", 
        RowBox[{"N", "-", "1"}]]}], "+", 
      SuperscriptBox["b", 
       RowBox[{"N", "-", "1"}]]}], ")"}]}], TraditionalForm]]],
 ".\n\nLa red neuronal trabaja propagando hacia delante la se\[NTilde]al \
inicial mediante la funci\[OAcute]n de activaci\[OAcute]n hasta que se llega \
a la capa de salida. Si se inicia con una matriz de pesos y bias aleatorios \
la red neuronal inicialmente no producir\[AAcute] los resultados deseados. La \
manera en la que podemos determinar qu\[EAcute] tan lejos estamos de los \
resultados es mediante una funci\[OAcute]n de costo\nC(w, b) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "n"}]], 
    RowBox[{
     UnderscriptBox["\[Sum]", "x"], 
     SuperscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{
        RowBox[{"y", "(", "x", ")"}], "-", "a"}], "\[RightBracketingBar]"}], 
      "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", \n\ndonde w y b son los pesos y los biases.\nCon esto se puede conocer cu\
\[AAcute]nto se deben cambiar w y b para que el costo sea menor, es decir, \
estar m\[AAcute]s cerca del resultado correcto.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["w", "k"], "\[Rule]", " ", 
      SubscriptBox[
       RowBox[{"w", "'"}], "k"]}], "=", " ", 
     RowBox[{
      SubscriptBox["w", "k"], "-", " ", 
      RowBox[{"\[Eta]", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", "C"}], 
        RowBox[{"\[PartialD]", " ", 
         SubscriptBox["w", "k"]}]]}]}]}], ","}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["b", "l"], "\[Rule]", " ", 
     SubscriptBox[
      RowBox[{"b", "'"}], "l"]}], "=", " ", 
    RowBox[{
     SubscriptBox["b", "l"], "-", " ", 
     RowBox[{"\[Eta]", " ", 
      FractionBox[
       RowBox[{"\[PartialD]", "C"}], 
       RowBox[{"\[PartialD]", " ", 
        SubscriptBox["b", "l"]}]]}]}]}], TraditionalForm]]],
 ".\n\nAl aplicar sucesivamente este procedimiento se espera llegar a un \
resultado cada vez m\[AAcute]s cercano al correcto. El algoritmo para \
calcular las derivadas parciales ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "C"}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["w", "k"]}]], TraditionalForm]]],
 " y  ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "C"}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["b", "l"]}]], TraditionalForm]]],
 " secomoce como el algoritmo de retropropagaci\[OAcute]n. Este consiste en:"
}], "Text",
 CellChangeTimes->{{3.659920463462933*^9, 3.659920513591063*^9}, {
  3.6599212111867456`*^9, 3.659921324689685*^9}, {3.6599213885932703`*^9, 
  3.659921626510948*^9}, {3.659921739014242*^9, 3.6599219418752003`*^9}, {
  3.659922824005316*^9, 3.6599229385405407`*^9}, {3.659923721650215*^9, 
  3.65992382718782*^9}, {3.659923884979227*^9, 3.65992388920325*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Entrada: Establecer la activaci\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " correspondiente para la capa de entrada."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659923874826771*^9}}],

Cell[TextData[{
 "Feedforward: Para cada l = 2,3,\[Ellipsis],L se calcula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["z", "l"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["w", "l"], " ", 
      SuperscriptBox["a", 
       RowBox[{"l", "-", "1"}]]}], "+", 
     SuperscriptBox["b", "l"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["a", "l"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     SuperscriptBox["z", "l"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659923974675457*^9}}],

Cell[TextData[{
 "Error de salida ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Delta]", "L"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ": Se calcula el vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Delta]", "L"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Del]", "a"], "C"}], " ", "\[CircleDot]", " ", 
      RowBox[{"\[Sigma]", "'"}]}], 
     RowBox[{"(", 
      SuperscriptBox["z", "L"], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.659924078130061*^9}}],

Cell[TextData[{
 "Retropropagar el error: Para cada l=L-1, L-2,\[Ellipsis],2 calcular ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Delta]", "l"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["w", 
           RowBox[{"l", "+", "1"}]], ")"}], "T"], 
        SuperscriptBox["\[Delta]", 
         RowBox[{"l", "+", "1"}]]}], ")"}], "\[CircleDot]", 
      RowBox[{"\[Sigma]", "'"}]}], 
     RowBox[{"(", 
      SuperscriptBox["z", "l"], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.659924164761177*^9}}],

Cell[TextData[{
 "Resultado: La derivada parcial de la funci\[OAcute]n de costo es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "C"}], 
     RowBox[{"\[PartialD]", " ", 
      SubscriptBox[
       SuperscriptBox["w", "l"], "jk"]}]], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox["a", "k", 
      RowBox[{"l", "-", "1"}]], 
     SubsuperscriptBox["\[Delta]", "j", "l"]}]}], TraditionalForm]]],
 " y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "C"}], 
     RowBox[{"\[PartialD]", " ", 
      SubsuperscriptBox["b", "j", "l"]}]], " ", "=", " ", 
    SubsuperscriptBox["\[Delta]", "j", "l"]}], TraditionalForm]]],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.6599242796130037`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementaci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.659919417216414*^9, 3.65991941912045*^9}}],

Cell["\<\
Esta implementaci\[OAcute]n se basa en la que se ofrece en el libro: \
http://neuralnetworksanddeeplearning.com.\
\>", "Text",
 CellChangeTimes->{{3.659925355568756*^9, 3.659925396488452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Se", " ", "inician", " ", "las", " ", "matrices", " ", "con", " ", 
    "valores", " ", 
    RowBox[{"aleatorios", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Initialize", "[", "asizes_", "]"}], " ", ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"layers", " ", "=", " ", 
        RowBox[{"Length", "[", "asizes", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"sizes", " ", "=", " ", "asizes"}], ";", "\[IndentingNewLine]", 
       RowBox[{"bshape", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", "sizes", "]"}], "-", "1"}], "}"}]}], 
            "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wshape", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"biases", " ", "=", "  ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "bshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"weights", " ", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "wshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"emptyNablaB", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "bshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"emptyNablaW", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "wshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"task", " ", "=", " ", "\"\<\>\""}], ";"}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Cost", "[", 
      RowBox[{"y_", ",", "a_"}], "]"}], ":=", " ", 
     RowBox[{
      FractionBox["1", "2"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "-", "a"}], ")"}], "2"]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CostPrime", "[", 
      RowBox[{"y_", ",", "a_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Cost", "[", 
         RowBox[{"yt", ",", "at"}], "]"}], ",", "at"}], "]"}], " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"yt", "\[Rule]", "y"}], ",", 
        RowBox[{"at", "\[Rule]", "a"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sigmoid", "[", "x_", "]"}], ":=", 
     RowBox[{"LogisticSigmoid", "[", "x", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SigmoidPrime", "[", "x_", "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"LogisticSigmoid", "[", "xt", "]"}], ",", "xt"}], "]"}], " ", 
      "/.", " ", 
      RowBox[{"xt", " ", "\[Rule]", " ", "x"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Para", " ", "formatear", " ", "el", " ", "vector", " ", "de", " ", 
     "entrada", " ", "al", " ", "estilo", " ", "de", " ", "matriz", " ", "de",
      " ", 
     RowBox[{"Mathematica", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormatA", "[", "array_", "]"}], " ", ":=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "i", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "array"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"x_", ",", "i_"}], "]"}], " ", ":=", " ", 
     RowBox[{"LogisticSigmoid", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"weights", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", "x"}], " ", "+", " ", 
       RowBox[{"biases", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FeedForward", "[", "a_", "]"}], " ", ":=", " ", 
     RowBox[{"Fold", "[", 
      RowBox[{"\[Sigma]", ",", " ", "a", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"layers", "-", "1"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Backprop", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nablaB", ",", " ", "nablaW", ",", " ", "activation", ",", 
         "activations", ",", "z", ",", "zs", ",", "delta"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"task", " ", "=", " ", "\"\<Backpropagation\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nablaB", "=", " ", "emptyNablaB"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nablaW", "=", " ", "emptyNablaW"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"activation", " ", "=", 
         RowBox[{"FormatA", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"activations", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"FormatA", "[", "x", "]"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"zs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Calcula", " ", "todos", " ", "los", " ", 
          RowBox[{"feedforwards", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "task", " ", "=", " ", "\"\<Backpropagation: Feedforward\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"z", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"weights", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ".", "activation"}], " ", "+", 
             " ", 
             RowBox[{"biases", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"activation", " ", "=", 
            RowBox[{"LogisticSigmoid", "[", "z", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"zs", ",", "z"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"activations", ",", " ", "activation"}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"layers", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Calcula", " ", "los", " ", "errores", " ", "de", " ", "salida", " ",
           "y", " ", 
          RowBox[{"retropropaga", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "task", " ", "=", " ", "\"\<Backpropagation: Error calc\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"delta", " ", "=", " ", 
         RowBox[{
          RowBox[{"CostPrime", "[", 
           RowBox[{"y", ",", 
            RowBox[{"activations", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], " ", "*", " ", 
          RowBox[{"SigmoidPrime", "[", 
           RowBox[{"zs", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nablaB", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", "delta"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nablaW", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", 
         RowBox[{"delta", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"activations", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"delta", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"weights", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "l"}], "+", "1"}], "]"}], "]"}], "]"}], ".", 
              "delta"}], " ", "*", " ", 
             RowBox[{"SigmoidPrime", "[", 
              RowBox[{"zs", "[", 
               RowBox[{"[", 
                RowBox[{"-", "l"}], "]"}], "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"nablaB", "[", 
             RowBox[{"[", 
              RowBox[{"-", "l"}], "]"}], "]"}], " ", "=", " ", "delta"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"nablaW", "[", 
             RowBox[{"[", 
              RowBox[{"-", "l"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{"delta", ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"activations", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "l"}], "-", "1"}], "]"}], "]"}], "]"}]}]}], 
           ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "2", ",", 
            RowBox[{"layers", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"nablaB", ",", "nablaW"}], "}"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calcula", " ", "los", " ", "valores", " ", "de", " ", "las", " ", 
     "derivadas", " ", "parciales", " ", "del", " ", "costo", " ", "y", " ", 
     "con", " ", "esto", " ", "actualiza", " ", "los", " ", "pesos", " ", "y",
      " ", 
     RowBox[{"biases", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UpdateMiniBatch", "[", 
      RowBox[{
       RowBox[{"minibatch_", "?", "NumericQ"}], ",", 
       RowBox[{"eta_", "?", "NumericQ"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nablaB", ",", " ", "nablaW", ",", "deltaNablaB", ",", "deltaNablaW", 
         ",", "x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"task", " ", "=", " ", "\"\<Update Mini Batch\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"biases", ",", " ", "weights"}], "}"}], " ", "-=", "  ", 
         RowBox[{
          FractionBox["eta", 
           RowBox[{"Length", "[", "minibatch", "]"}]], 
          RowBox[{"Total", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Backprop", "[", 
              RowBox[{
               RowBox[{"mb", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"mb", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"mb", ",", "minibatch"}], "}"}]}], "]"}], "]"}]}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Realiza", " ", "el", " ", "entrenamiento", " ", "de", " ", "la", " ", 
     "red", " ", 
     RowBox[{"neuronal", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SGD", "[", 
      RowBox[{
      "trainingdata_", ",", " ", "epochs_", ",", "minibatchsize_", ",", 
       "eta_"}], "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "minibatches", ",", "c"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"costs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"task", " ", "=", " ", "\"\<SGD\>\""}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Dynamic", "[", "task", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"task", " ", "=", " ", "\"\<SGD\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"c", "=", 
              RowBox[{"Mean", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"EvalCost", "[", "ex", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"ex", ",", "trainingdata"}], "}"}]}], "]"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"costs", ",", "c"}], "]"}], ";", "\[IndentingNewLine]", 
             
             RowBox[{"minibatches", " ", "=", " ", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"RandomSample", "[", "trainingdata", "]"}], ",", 
                "minibatchsize"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", 
              RowBox[{
               RowBox[{"UpdateMiniBatch", "[", 
                RowBox[{"mb", ",", "eta"}], "]"}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"mb", ",", "minibatches"}], " ", "}"}]}], "]"}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "1", ",", "epochs"}], "}"}]}], "]"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ProgressIndicator", "[", 
               RowBox[{"j", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "epochs"}], "}"}]}], "]"}], ",", "j", ",", 
              " ", "\"\< \>\"", ",", " ", "task"}], "}"}], ",", "\"\< \>\""}],
            "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Utilidades", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ViewTensor", "[", "t_", "]"}], ":=", " ", 
     RowBox[{"Print", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MatrixForm", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "t"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"EvalCost", "[", "ex_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "a"}], "}"}], ",", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"ex", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"a", "=", 
         RowBox[{"ex", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"y", "=", 
         RowBox[{"FeedForward", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"Norm", "[", 
          RowBox[{"Cost", "[", 
           RowBox[{"y", ",", "a"}], "]"}], "]"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShowInfo", "[", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<Informaci\[OAcute]n del resultado:\>\"", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"costs", ",", 
         RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<Iteraci\[OAcute]n\>\"", ",", "\"\<Costo\>\""}], 
           "}"}]}], ",", 
         RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", " ", 
         RowBox[{
         "PlotLabel", "\[Rule]", 
          "\"\<Valores de la funci\[OAcute]n de costo\>\""}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShowResults", "[", "feed_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], " ", "<>", " ", 
           "\"\< \[Rule] \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"FeedForward", "[", "i", "]"}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "feed"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659896383927318*^9, 3.6598964350328608`*^9}, {
   3.659896653045203*^9, 3.659896658836915*^9}, 3.659896786427917*^9, {
   3.659897001808999*^9, 3.659897002907425*^9}, {3.6598971970661163`*^9, 
   3.659897221896283*^9}, {3.659897308467721*^9, 3.659897309842939*^9}, {
   3.659897340626255*^9, 3.659897454831624*^9}, {3.659897503919601*^9, 
   3.659897507299178*^9}, {3.6598978486615973`*^9, 3.6598978487581367`*^9}, {
   3.659897900010503*^9, 3.6598980112333603`*^9}, {3.6598982094841213`*^9, 
   3.659898216486753*^9}, {3.659898278913622*^9, 3.659898298710095*^9}, {
   3.6598985013931723`*^9, 3.659898545359284*^9}, {3.659898583277692*^9, 
   3.659898935398712*^9}, {3.659899609459655*^9, 3.659899695686791*^9}, {
   3.659899794978739*^9, 3.659899983395425*^9}, {3.659900169813932*^9, 
   3.6599002988903513`*^9}, {3.659901429526387*^9, 3.659901476906479*^9}, {
   3.659901545093731*^9, 3.6599015756441317`*^9}, {3.659901646627964*^9, 
   3.659901650307665*^9}, {3.659901685549156*^9, 3.6599016890398293`*^9}, {
   3.659901720456584*^9, 3.659902008478837*^9}, {3.6599020480517197`*^9, 
   3.659902104653366*^9}, {3.6599021464018993`*^9, 3.659902225750671*^9}, {
   3.659902269756583*^9, 3.659902270383298*^9}, {3.659902350444652*^9, 
   3.6599023653334713`*^9}, {3.659902430493525*^9, 3.659902480914654*^9}, {
   3.659902554762782*^9, 3.659902656074977*^9}, {3.659902726462132*^9, 
   3.659902861889139*^9}, {3.6599032148691673`*^9, 3.6599033472344513`*^9}, {
   3.6599033943287477`*^9, 3.659903439688114*^9}, {3.659903476900391*^9, 
   3.659903525542548*^9}, {3.659903568841693*^9, 3.659903577427335*^9}, {
   3.6599040603422422`*^9, 3.659904060905425*^9}, {3.659904111088489*^9, 
   3.6599043351764803`*^9}, {3.65990437742314*^9, 3.659904408068619*^9}, {
   3.659904443856544*^9, 3.6599044822504387`*^9}, {3.6599045163256407`*^9, 
   3.659904689585359*^9}, {3.659904766503957*^9, 3.6599048731255903`*^9}, {
   3.659904906227068*^9, 3.659904906468987*^9}, {3.6599050003970823`*^9, 
   3.659905000762969*^9}, {3.659905074168062*^9, 3.659905131737034*^9}, {
   3.659905309729014*^9, 3.659905339073715*^9}, {3.659905383706476*^9, 
   3.659905449012731*^9}, {3.659905486207942*^9, 3.659905489242876*^9}, {
   3.659905551597575*^9, 3.659905554783411*^9}, {3.659905976981668*^9, 
   3.659906061306367*^9}, {3.6599061693358307`*^9, 3.659906198538073*^9}, {
   3.65990623616013*^9, 3.659906236343533*^9}, {3.659906390915649*^9, 
   3.659906392706629*^9}, {3.6599064314377537`*^9, 3.659906432387175*^9}, {
   3.6599064675452757`*^9, 3.6599064714685287`*^9}, {3.659906565298855*^9, 
   3.6599066492552958`*^9}, {3.659906724465962*^9, 3.6599067954374037`*^9}, {
   3.659906920417573*^9, 3.659907025893556*^9}, {3.659907065582921*^9, 
   3.659907183319625*^9}, {3.659907222172114*^9, 3.659907236944751*^9}, {
   3.659907306103894*^9, 3.65990730625091*^9}, {3.659907355171426*^9, 
   3.659907383625987*^9}, {3.6599074254920473`*^9, 3.659907621882299*^9}, {
   3.6599076725526333`*^9, 3.6599076926082687`*^9}, {3.659907725400155*^9, 
   3.659907878724433*^9}, {3.6599079842758827`*^9, 3.6599079844739313`*^9}, {
   3.659908089852613*^9, 3.659908128732725*^9}, {3.659908162891986*^9, 
   3.6599082078697863`*^9}, {3.659908242632257*^9, 3.659908244222211*^9}, {
   3.659908274392631*^9, 3.65990836416031*^9}, {3.65990859003843*^9, 
   3.6599085906408*^9}, {3.659909193575098*^9, 3.65990920462528*^9}, {
   3.659909257659595*^9, 3.6599092984763727`*^9}, {3.659909641606558*^9, 
   3.659909714694977*^9}, {3.659909783295433*^9, 3.659909802664422*^9}, {
   3.6599098534047813`*^9, 3.659909860837956*^9}, {3.659910070424122*^9, 
   3.659910146436648*^9}, {3.659910256486308*^9, 3.659910306685073*^9}, {
   3.6599104082628736`*^9, 3.659910504454897*^9}, {3.659910681230981*^9, 
   3.659910686688281*^9}, {3.659910788704866*^9, 3.6599108012551517`*^9}, {
   3.659911832391803*^9, 3.6599118324868727`*^9}, {3.659911891051299*^9, 
   3.659911891298026*^9}, {3.659917587890646*^9, 3.659917593461431*^9}, {
   3.659917735271576*^9, 3.6599177804535646`*^9}, {3.659917820933105*^9, 
   3.6599178561825247`*^9}, {3.659917887584189*^9, 3.659918098912581*^9}, {
   3.659919131790474*^9, 3.659919141022876*^9}, {3.659922026656192*^9, 
   3.659922110885497*^9}, {3.659925170054744*^9, 3.659925313744814*^9}, {
   3.659926189600053*^9, 3.659926216272781*^9}, {3.659935227264112*^9, 
   3.659935227728035*^9}, {3.659971885771905*^9, 3.659971887589274*^9}, {
   3.6599719238523273`*^9, 3.6599719396294622`*^9}, {3.659972034579959*^9, 
   3.659972045371421*^9}, {3.659972102663835*^9, 3.6599721294305353`*^9}, {
   3.6599722248100853`*^9, 3.659972239431614*^9}, {3.659974708977312*^9, 
   3.659974810604075*^9}, {3.659974857537159*^9, 3.659974890303049*^9}, {
   3.659975014823937*^9, 3.6599750209965982`*^9}, {3.65997553392881*^9, 
   3.6599756332656603`*^9}, {3.659975732349619*^9, 3.659975746743086*^9}, {
   3.659975795642088*^9, 3.6599758163683567`*^9}, {3.659975868636641*^9, 
   3.6599758875675697`*^9}, {3.659975988825191*^9, 3.659976001390581*^9}, {
   3.659976234642321*^9, 3.659976283951591*^9}, {3.659976396077344*^9, 
   3.659976396330781*^9}, {3.659976476433549*^9, 3.659976509340055*^9}, {
   3.659976716718122*^9, 3.659976716966551*^9}, 3.659978326350424*^9, {
   3.659978424578006*^9, 3.6599784307591887`*^9}, {3.659978499592201*^9, 
   3.6599785010605783`*^9}, {3.6599785702018414`*^9, 3.659978601957066*^9}, {
   3.659978939666572*^9, 3.659978943147403*^9}, {3.6599798320638323`*^9, 
   3.6599799106403913`*^9}, {3.659980024750173*^9, 3.6599800983862123`*^9}, {
   3.65998017368925*^9, 3.6599802218169813`*^9}, {3.659980264657894*^9, 
   3.6599803362253017`*^9}, {3.659982197519611*^9, 3.659982236452159*^9}, {
   3.659982314432465*^9, 3.6599823905231047`*^9}, {3.659982420731741*^9, 
   3.659982427668209*^9}, {3.659982467290538*^9, 3.6599824872621326`*^9}, {
   3.659982649522026*^9, 3.6599827095526342`*^9}, {3.659982752152443*^9, 
   3.659982775872121*^9}, {3.6599829071994867`*^9, 3.6599829323374863`*^9}, {
   3.659982966613595*^9, 3.659982995599945*^9}, {3.659983359714781*^9, 
   3.659983374945204*^9}, {3.659983421627684*^9, 3.659983422264957*^9}, {
   3.659983461966023*^9, 3.65998352063102*^9}, {3.659983893058775*^9, 
   3.65998389402601*^9}, 3.659983945810254*^9, {3.659984033617601*^9, 
   3.659984071096624*^9}, 3.659984128744166*^9, 3.659984163250794*^9, {
   3.659984244772032*^9, 3.659984255457909*^9}, {3.659984410237392*^9, 
   3.65998445173864*^9}, {3.659984710782633*^9, 3.659984753507153*^9}}],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Compuertas l\[OAcute]gicas", "Subchapter",
 CellChangeTimes->{{3.6599255653106203`*^9, 3.659925573814535*^9}}],

Cell["\<\
La aplicaci\[OAcute]n m\[AAcute]s trivial de una red neuronal artificial es \
que aprenda a calcular las salidas de una compuerta l\[OAcute]gica. Primero \
se calcular\[AAcute] la compuerta AND.\
\>", "Text",
 CellChangeTimes->{{3.65992557757438*^9, 3.659925634581852*^9}, {
  3.659925987481975*^9, 3.6599259931860027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"td", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Datos", " ", "de", " ", 
    RowBox[{"entrenamiento", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Datos de entrenamiento.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"td", ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"feed", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "td"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Se", " ", "inicia", " ", "una", " ", "red", " ", "neuronal", " ", "de", 
    " ", "2", " ", "neuronas", " ", "en", " ", "la", " ", "capa", " ", "de", 
    " ", "entrada", " ", "y", " ", "1", " ", "en", " ", "la", " ", "de", " ", 
    
    RowBox[{"salida", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red sin entrenar son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SGD", "[", 
    RowBox[{"td", ",", "2000", ",", "4", ",", "3"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "entrena", " ", "la", " ", "red", " ", "con", " ", "2000", " ",
      "iteraciones"}], ",", " ", 
    RowBox[{
     RowBox[{
     "sets", " ", "de", " ", "4", " ", "elementos", " ", "y", " ", "\[Eta]"}],
      " ", "=", " ", "3."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red entrenada son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.659908408434352*^9, 3.659908683248211*^9}, {
   3.6599087876316853`*^9, 3.659908857974122*^9}, 3.6599090510580463`*^9, {
   3.659909138929482*^9, 3.659909150116515*^9}, {3.65990986787351*^9, 
   3.6599098821626587`*^9}, {3.6599101346673317`*^9, 3.659910176662353*^9}, {
   3.659910373839717*^9, 3.6599103874460173`*^9}, {3.6599118508919086`*^9, 
   3.659911851017771*^9}, {3.659917607222137*^9, 3.6599176148370247`*^9}, {
   3.659917797277699*^9, 3.659917804499463*^9}, {3.6599181067940483`*^9, 
   3.659918208054164*^9}, {3.6599256424173813`*^9, 3.659925692705991*^9}, {
   3.65992593698785*^9, 3.6599259495604362`*^9}, {3.659926009221183*^9, 
   3.659926177405992*^9}, {3.659926505514627*^9, 3.6599265060724688`*^9}}],

Cell[BoxData["\<\"Datos de entrenamiento.\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], 
     RowBox[{"{", "1", "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.659918194218508*^9, 3.6599182093146963`*^9}, 
   3.6599191447572308`*^9, 3.659925317748679*^9, {3.6599256585634336`*^9, 
   3.6599256935722446`*^9}, {3.659925937483941*^9, 3.659925949689774*^9}, 
   3.659926026443894*^9, 3.659926180015134*^9, 3.659926219371542*^9, 
   3.6599357061420383`*^9, 3.6599719445432997`*^9, 3.659972244677093*^9, {
   3.65997481770614*^9, 3.65997486177684*^9}, 3.6599756378226767`*^9, 
   3.659975751693491*^9, 3.6599758920508432`*^9, 3.6599765145689087`*^9, 
   3.65997897463553*^9, {3.6599800141711493`*^9, 3.659980104233591*^9}, {
   3.659980189488554*^9, 3.659980204787058*^9}, 3.659980272091556*^9, {
   3.659980322147729*^9, 3.6599803382063227`*^9}, 3.659982491934841*^9, 
   3.659982718403852*^9, 3.659983307121162*^9, 3.659983401054542*^9, 
   3.6599834836909103`*^9, 3.659983525042129*^9, 3.659983897625351*^9, 
   3.659984077475988*^9, 3.659984134171091*^9, 3.659984167133101*^9, 
   3.659984260119898*^9, 3.659984418386919*^9, 3.6599844558887997`*^9, 
   3.6599847569222813`*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Los resultados de la red sin entrenar son:\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756923311*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.660644}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756923938*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.75232}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756924625*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.726}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.6599847569252987`*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.805226}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756926031*^9}],

Cell[BoxData["\<\"Los resultados de la red entrenada son:\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984758026329*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.000122065}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984758027326*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.0446091}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984758028267*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.0446091}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984758029189*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.946973}}\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984758030105*^9}],

Cell[BoxData["\<\"Informaci\[OAcute]n del resultado:\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984758030992*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.0055000000000000005`], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1: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
phNV+S9oFWHcghbLYDMmXuwvoGUyzC68lHrh1yLOvwwb20THt/9OZ6nezynT
x+EznS1D0b1Km9z39B4ZYoQt9P7W0zkyGK/5Wz6/js6VQTNUumX/EzpfBv/j
aW3+PaQLVe/1skZkf48ukkFZPfnTsQq6WAaZTcr0jjdopQwJz3KCPEvoSzIk
D3feWnGRLlG912F5tsk5ukwG0XX9+IxTdLkMIdUPFgtO0JWq/LrvaLG+gK6S
weugTdqdXLpG9d4ZFzWRQ9fKcPvBkwV5u+k6GdpPjwjts4Oul8EjOSFGnEm/
k+GU46P1mul0gwy7xi4bHCihG1V5b3lx5lMi3SSD9QZnIzcR/Vum+vvzP6+X
kbQgDYKqskTnMFozDT8nRQc/C6S10uCvXzrV2Y/WTkPugKi7L7xonTTEn8sy
27CR1k2D7ey/Pg2utF4aEhtSA/1d6F5pGHp29jwNJ1o/Dfmp2p+SltMGaYgb
WurYcwltmIZOnb3kBxfQRmmoP9aQMWkubZyGV5YT1tycTZukIebZpKbVM2lT
1f41b+b/AG2WhpzY8V4SMxpp2Han66JhprR5GrJ3B/++Moa2TMOf/o5rXUbS
1mnIsy6QNB9G26ah5I17yJ5BtF0aZGkiw1n9afs0HDj6W/K2N+2gek/fC0WS
7rRTGiY+uLN1QhfaJQ3rDg6b+FyHdk1DUdBlabI27Z6G1IPb9kzSoj3TMH9F
gceb5rRvGkZE/P2Y+c+O85+GJzcjB9v8ooPT8OgcdJt9p4VpMJKPPX7iMx2l
ys/BubXHB1qUhrqH1zsMfkMnpsF+l9fVpy9ocRo+atqP3P6UlqXBqlukhcMj
WpGGlUe+t+31gM5Sfd9cToc+qqSz09A6sXJbdjm9Jw37Jlu5rimjc9KgsDF4
NKyEzlWtz3X79eUinZ+GUrHhhTPn6MI0CPXXGsedpovS0OLKiJmLT9LFaSjW
TP5ncIxWpkHaQ+z4NY++pPq+/Ju26upBuiQNjasLWm7dR5ep8jryzsZzF12u
+r5oNh83aztdmYaGiZpn+2bSVWkwqxW8+JFG16TBxbTNwbsSulY1D2ajtY8l
0XWq+ykS2kjj6HpV/bwhe7yj6XdpOCHVr7ILpxtU790meq9pCN2o6ifJvW2f
ALopDdtnvtdqsZn+nYa/bftse+9JC9JRtb7r1fvutGY6MuUfoi+60lrpGB18
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
AAFG9R+Xx12nAwWcrTlamH+NDhIwMXxgt9eFdLCAc8P/Gu5wmQ4RYHHz+riQ
AjpUwLOwoTbafDpMwNBgsfXeeTpcQJl78an+uXSkgBGPxvt8l0NHCei1Ivra
gdN0jIAeE5xs72TRser7t9WH9Mmk4wVUHHBJCDhGJ6jP53omMfUInShgum/j
umotnSzANDnabbBMp6jz8Kq9ZolApwkQjn5YcuIQLQkYM2zg9eYUOl1A/phn
Jq776QwBYbqOkVv30pkCbvR4ZX89kc4WsEwM/FSzm85R18eh4vL8XXSegF8u
NQccj6fzBTT/8PWvb+JonYBcqxhzbKcLBVxzG+KxJ4YuUuf3bonXg810iYDI
Sea2ozfRZer8PJNqtkbSFQKapPdrb62jKwUkzC+usVlLVwloWCQM3RBG16j9
jOjjeWMlXavuX3ip25AVdJ0AS9cFxpEhdIOA9NPB2aVL6CYBs+dsHDl0Md2i
zuddt61bguhWAa9GeZ6480+6TcCDnWNOjJ5HdwrI8ZdiEgJoAxH93EaMqJtD
G4l4bR12HH76/kV0G2/SLs/S9y8ipjzNpvNrff8irPYVWC6Ypu9fxLOAni8u
TdX3L8LCaWzioCn6/kX1/7iuK8ZD37+IkJwA70fu+v5FXMhODZoySd+/iIVr
bLyPu+n7F+HtmvLR1FXfv4jkmD0J4c76/kWYtJ998sdYff8ipihpZl+N1vev
3i+l4dPjDvr+RdzyRHlPe33/Iux9sDxqmL5/9XrR35c+GarvX32/t7oPs631
/Yuo/hD98eJgff8i4qxCy4YP0vcvotTCdkWKhb5/EZef+JYb9tP3LyLibFK3
iD76/kX82hhn8ESj71/EeNfy0m966vsX8Xi1eXBRD33/IppOtF/54h/6/kUY
O9k8P2ms71/E4d2ODwcb6fsX0bC+UNzfTd+/+vxXunlrPvqxfxGOrbZ1nW10
gohtM5z6vnhLJ4ooebe28t5LOllEh+BoV9ZIp4j4xSfH8EodnSbCYZP32txH
tKSufz+3lSfv0ekitkRXvEq/S2eo+7lyoaFQQWeKMNU4pKfcpLNFhJruKEm+
TueIWLb4/JY9V+k8ERWxPX9K0tH5Iv4zs2bzngu0TsQL49XFyefoQvV+IZ+n
pZymi0RoYnu/PpxJl4hIe1h8K/0oXaa+35rN408qdIWIN7u2Dso9TFeKOPZ8
6K7LKXSViKlXLm24uZeuUdcvNbW+ejddq+7nSpPqxp10nYgDaUtndcTSDSK+
ef63R88YukmET9Kg3KGb6BYRif1sjk2IoFvV+Y0LMvdfTbep+zdm6CcrQ+lO
EalPr6/esYw2kHDld22AdhFtJKFsl+EF3T9pE0n9/k9NuR9Am0l4uuvnFx1+
tEaCf/MvusEz6b4SzvhmG3v60BYSFoy/XbLck7aUcHnn94aJ7rS1hBkHRufm
utF2Eo6Z9btX40zbS2gzkjZ2H0M7SlBeWySMH0k7STDNqv9siR3tIuHbFYu7
J1vREyS8vfZgfeFA2l3CywLdN2/MaUhoOTXv6LBe9FQJznNMl883o6dL2HbD
6VByd3qWhOD9IyaWGNL+ErTfz5zR7aMv+1d/b3p/Y/J7OlDCvbnJFza10kES
/lMU1vv8KzpYwqK9zdVvn9MhElrXrvvMpZ4OldB767zsDY/pMAnTR3Wdz6+h
wyUYzy4Z+eFPOlLCq159unvdoaPU/TTG7N3ldIyEIPOcjt9v0LESKncU9Rpc
TMdLaGp9uCe0kE6QMHfFkojzBXSihFTXMwWfXKCTJRSZ2//723N0ioTJA5y3
Zpym0yQczB7b+i6TliTUpMaXz8ig09X7vU/pka6lMyTUzynOeifQmRJKIrec
8k2ls/9//Qd8lrmPzpEwxsXklmESnSehyj27ZVECnS+h89mqdbodtE6CRelp
/0Hb6UJ1fiqqkqK30EUSnDwC7B9soEsk/JG3ywrr6DJ1vYffj8gIoyvU+X30
k41pKF0pISl+x6h1y+gq9XxN1t7qRXSNhNt3D8z2mk/XSmiIzgo58x1dJyGv
W2DlwDl0g4S6AmMpYRbdJGH8dzYFf0+jW9Qefus9LtSLblV72eLzoforuk1C
Wnd7q9mT6E4JoettU6+60gYy1vY+tsRtHG0kIyppQNwZR9pERujj5rfD7Wkz
GY8W7b2YbktrZKRnrbo9yIruKyNL1zIpbSBtIQO1iX+Z96MtZZzJPWNwsBdt
LWOgffEC889oOxnOcR7Gh0xoexmTvkvqGmBEO8pwSRwyTemazf5luAcvq7Ht
oF1kGC8su5z1jp4go2JxabPzG9pdhsGh8lBdMw0ZD+NmjJ3WSE9Vj285izt1
9HQZgUbrpOBaepaMg6MNpry6T/vLKBld4bT9TzpAtXlAqOYOHShjs0/XsyPl
dJCMvuHeZ78opYNlXNon/HyzmA6R4dQe0XvpVTpUxlIfr9PvdXSYDIelsUn7
8+lwGa27tOcc8+hIGVUe/SxLztJRMkyD598IOUXHyKg1e3LR8AQdKyP2gm3z
j0foeBm9rVKXTlHoBBlf+eUMqDtMJ8ow+7Gx166DdLKMyosXZ4zaR6eo1/sh
7VpFIp0mIyTgY/SmBFpS11dZtt4qnk6XUQbPkyXb6QwZdkGaweuj6UwZdQtn
lA/ZRGer6/UxVHczgs6Rcdezvn7zGjpPxtkN7rNH/pvOl9HmXP+yejmtU+dx
4aKbPyyhC2XU21g/+WohXSQjru2489tAukSd/yNrdJkBdJmMUw5vty32pyvU
eXias7n/LLpSXd9wu+yKaXSVjI/nSs1/8KJrZGTct/7Jx4OulZG7NCPxk8l0
nTqf/7iTdvULukHGyD8d7sU6003q/g528PccQ7eox2/0azd0oFtl/H5lQFXx
MLpNRn9bk8bvbehOGU09BUe/wbSBgp0T/Y6YD6CNFNRqT3z9oC9toqjfa9uh
xzW0mYLADV6jws1ojYKNHgkhk03ovgrOtUf81t2ItlBw6pOdy+92zWL/Ct51
ejhmdNDW6vnlw2wi/6btFBQey/fyfkvbK/D4a8uB/q9oRwWlka8+f/GcdlKQ
an04/0o97aJgyKSOxINP6AkK9vscTgx7SLsrcNT8/dPUezTU58tI6zHkD3qq
guFzDXe33aanK/C+lD+u8jd6loKJWTD87w3aX8GeKVYde4rpAAWW/6setOYq
Haiu35h3y3x/poMUuPRo/33sRTpYQVH6qtDe5+kQBf+af9v2XQ4dqt7/6X+N
7mfTYQoynVJMr2bS4QrqV3e5ZGbQkQrsNdE7ktPpKAU9y/b8tVmiYxS8PPTL
7pA0OlZBj1PKFP8UOl5Bn22nLL9MphMURJWusxiVSCcqWLl7i+vABDpZ3c82
3/Wm8XSKAut9Ubc7ttNpCqSecX4vo2lJQVPYm6bHm+h0BVnP5p78Yz2doaBX
+4T4srV0pqJ+b2y3XltFZyuI1Px4oGAFnaPO4/Qvf81bRucpMN2+o//ZxXS+
gjerunZkLaB1CrI//dLsxDy6UEFybMnZjG/pIvV6/mPWHPWjSxSMG97hc3Qm
Xaag/XXBxIxpdIUCo8cfvI970ZUKri/yXXXSg65SgL6TT56eTNcoSH82p+uc
G12r4H6n9eqL4+k6BWvzvnhTOJZuULAt22bPjVF0k4Ivr4Tjzgi6RZ0Po1yT
h7Z0qwLXW5vqG63oNrWHHN/qd4PoTgXfrP+11siCNtDCyCais09f2kiL1A8P
R9lpaBMtChOUNa5mtJkWXVs9i6aZ0BotXCoDHRcY0X21iPh5w/G1BrSFFp+f
GOm8s3Mm+9fCZKLxLbGNttYiYa4ck9tK22nxxjJuUlkLba/Fljovk/om2lEL
2SPqqUEj7aRFU3vObcuntIsW7ZZxZRMf0xO02FgffXfeA9pdiyO3XZo2VtPQ
Iny/h+bQ3Zke/wft79OO
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 2000.}, {0, 0.19593117102893293`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.659918194218508*^9, 3.6599182093146963`*^9}, 
   3.6599191447572308`*^9, 3.659925317748679*^9, {3.6599256585634336`*^9, 
   3.6599256935722446`*^9}, {3.659925937483941*^9, 3.659925949689774*^9}, 
   3.659926026443894*^9, 3.659926180015134*^9, 3.659926219371542*^9, 
   3.6599357061420383`*^9, 3.6599719445432997`*^9, 3.659972244677093*^9, {
   3.65997481770614*^9, 3.65997486177684*^9}, 3.6599756378226767`*^9, 
   3.659975751693491*^9, 3.6599758920508432`*^9, 3.6599765145689087`*^9, 
   3.65997897463553*^9, {3.6599800141711493`*^9, 3.659980104233591*^9}, {
   3.659980189488554*^9, 3.659980204787058*^9}, 3.659980272091556*^9, {
   3.659980322147729*^9, 3.6599803382063227`*^9}, 3.659982491934841*^9, 
   3.659982718403852*^9, 3.659983307121162*^9, 3.659983401054542*^9, 
   3.6599834836909103`*^9, 3.659983525042129*^9, 3.659983897625351*^9, 
   3.659984077475988*^9, 3.659984134171091*^9, 3.659984167133101*^9, 
   3.659984260119898*^9, 3.659984418386919*^9, 3.6599844558887997`*^9, 
   3.6599847581087093`*^9}]
}, Open  ]],

Cell["\<\
La compuerta XOR es un poco m\[AAcute]s complicada, y necesita una red con \
una capa oculta. Si no se agrega esta capa oculta la red converge a dar 0.5 \
como resultado en todas las entradas.\
\>", "Text",
 CellChangeTimes->{{3.65992643309614*^9, 3.659926486361459*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"td", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Datos", " ", "de", " ", 
    RowBox[{"entrenamiento", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Datos de entrenamiento.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"td", ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"feed", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "td"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", "1"}], "}"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "inicia", " ", "una", " ", "red", " ", "neuronal", " ", "de", 
     " ", "2", " ", "neuronas", " ", "en", " ", "la", " ", "capa", " ", "de", 
     " ", "entrada"}], ",", " ", 
    RowBox[{
    "2", " ", "en", " ", "la", " ", "capa", " ", "oculta", " ", "y", " ", "1",
      " ", "en", " ", "la", " ", "de", " ", 
     RowBox[{"salida", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red sin entrenar son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SGD", "[", 
    RowBox[{"td", ",", "2000", ",", "4", ",", "3"}], "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "entrena", " ", "la", " ", "red", " ", "con", " ", "2000", " ",
      "iteraciones"}], ",", " ", 
    RowBox[{
     RowBox[{
     "sets", " ", "de", " ", "4", " ", "elementos", " ", "y", " ", "\[Eta]"}],
      " ", "=", " ", "3."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red entrenada son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.659926458268635*^9, 3.659926462420582*^9}, {
  3.659926494755622*^9, 3.65992651798256*^9}}],

Cell[BoxData["\<\"Datos de entrenamiento.\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], 
     RowBox[{"{", "1", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], 
     RowBox[{"{", "1", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], 
     RowBox[{"{", "0", "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.659926523336327*^9, 3.659935709809491*^9, 3.659974823960455*^9, {
   3.6599757556691027`*^9, 3.659975775590789*^9}, 3.6599758512513657`*^9, 
   3.659975898540893*^9, 3.659976517642838*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Los resultados de la red sin entrenar son:\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.6599765176441383`*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.777884}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.6599765176448727`*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.794127}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517645626*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.798989}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517646345*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.80973}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.6599765176470633`*^9}],

Cell[BoxData["\<\"Los resultados de la red entrenada son:\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.6599765190555773`*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.0406068}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976519056562*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.963866}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.6599765190575314`*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.963764}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976519058448*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.0382939}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976519059458*^9}],

Cell[BoxData["\<\"Informaci\[OAcute]n del resultado:\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.6599765190604486`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.0055000000000000005`], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1: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
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 2000.}, {0, 0.1679443652520889}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.659926523336327*^9, 3.659935709809491*^9, 3.659974823960455*^9, {
   3.6599757556691027`*^9, 3.659975775590789*^9}, 3.6599758512513657`*^9, 
   3.659975898540893*^9, 3.659976519142048*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Determinar el idioma de un texto", "Subchapter",
 CellChangeTimes->{{3.6599328279735928`*^9, 3.659932835781384*^9}}],

Cell["\<\
El objetivo de esta aplicaci\[OAcute]n es determinar el idioma de una cadena \
de texto. Cada idioma posee una distribuci\[OAcute]n caracter\[IAcute]stica \
de la frecuencia de aparici\[OAcute]n de cada uno de sus caracteres. \
Aprovechando este tipo de distribuci\[OAcute]n se puede entrenar una red \
neuronal.\
\>", "Text",
 CellChangeTimes->{{3.659937163460154*^9, 3.659937278867896*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenLangDist", "[", "lang_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "joineddict", ",", "diclen", ",", "dictcounts", ",", "dictfrec"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"joineddict", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"DictionaryLookup", "[", 
         RowBox[{"{", 
          RowBox[{"lang", ",", "All"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"diclen", "=", 
       RowBox[{"StringLength", "[", "joineddict", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dictcounts", "=", 
       RowBox[{"CharacterCounts", "[", "joineddict", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dictfrec", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"dictcounts", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/", "diclen"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"dictfrec", ",", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"CharacterRange", "[", 
                    RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], "]"}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}]}], "}"}], "]"}],
            ",", "Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Letra\>\"", ",", "\"\<Frecuencia\>\""}], "}"}]}], ",", 
        
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "13"}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "lang"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<Spanish\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<English\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<French\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.659937032971423*^9, 3.6599371215720577`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQDQEf7I/9yWXe0H/YHirgcNf3esSeL5OgfA4HI1Z2
+Wlya6B8AYdMMd8AjyVLoXwRh/mCXk1TJu2A8iUclneUCbWltkH5Mg5XWDbI
v5wyEcpXcOgS/ns9yq8ZyldyWDrRrLu4YjOUr+Kgfff/wnyPKihfzeGgVdNe
Lz9uKF/D4ZPiVQ4eoxVQvpbDImPdw6IH50P5Og7iTzhT7r1cD+XrOTz9smHf
1fVboXwDBzuzIoaNi6ZD+YYOE7+7Wa5dnwflGznozU4Wlb2wHco3dnj7PJ8/
OxHmXxOH2305ZZWFq6F8UwcOl48xEwtg9ps5sKy41tk2swXKN3fwzC48OT99
mx2Eb+GwcumDwn9NkVB5S4fV7nquO9QjoHwrh2yp/Yd276y3h8UPAypwQOVy
oPEF0PgiaHwJNL4MGl8Bja+ExldB46uh8TXQ+FpofB00vh4a3wCNb4jGN0Lj
G6PxTdD4pmh8MzS+ORrfAo1vica3QuOP5p/Bmn8APB7nyA==
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Spanish\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.1528224961038857}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 
  3.659937122825492*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnVuQFFWax49d1dXdOO4qvMzGrK47O7E7MTs6MRMxETMbMfOwD7v7shsb
sS/7tBGusQgKioiKiuAFFQVELooiiKKAgBdoVFQQBEHlfvECXhBRBGy5ty00
omz+vjxf1smszKzq6q7qCxVBU5Unz+X7/t/1nMw659+vGDHo/4ZeMWLwlVdc
+q/Drxg2aPCVN1z6L9cN94oy5xlz3iBjTPulhu9nva/2v7Pev7OD+Y+S/Pdr
5CNnPv30U3PPPfeYa665xtx+++1m+fLl5scff/yZ3M6anTt3yq0nnnjC/PDD
D/8kxRmze/duM2jQILm6wJYdP37cDBw4UD7/wzb/4osvzLBhw8ysWbNo/kd/
7Kvlo8G0t7fL3RdeeMEcPXrUfPLJJ2bEiBFm48aNRgn4/vvvzY4dO6TngwcP
dpSAtrY28/7775ubb77ZrFy5MkRAxpw4cYJSc/r0aVNny5YsWWKmTp0qVz+z
ZR4g0jPslErBf9oyAB0zZoz08Qd/+H+Uj0YpevHFF831119vbrjhBvPUU0/J
EDfddJN58skn6yxMjIRoNm/ebO644w6BbPr06UJ9vRXjN998Y6ZMmWKuvfZa
4XXp0qV0X2+72L9/v5kwYYLcRtp0efXVVwuhGdvFt99+K3KCEijyKAC+BsvH
gw8+aF577TW50lEPHz5sJk2aZK677jrz8MMPC5Z333233lbIzvpaqKPmbI+n
Tp2SKgcOHDBNtsxtkrVlX331lZR7ChRIaf78+ebWW28VydXbMr5Tj/pZh4TP
P/88IAEGFyxYoN2gGvDKVV1CEytoZQpFBX2aIah58+bBScYRFmqxbds2ETuI
o05HjhwxKo29e/ea+++/3wwdOlSkQV1VG2UaZhWMRjs08I8cOVIkB/Nce0JW
PFevXi268fTTT5ucbbJ9+3Zz2223CRnTpk0zu3btwsS0ydq1a2UUzFxHRitv
ueUWEazi9Nxzz0k9VC5ruXjjjTeEGsRICZ9cL1u2zGj/7733XsCFismDX8r4
y9j/Fy1aFOD9q7CRfPTRR1IJpwD27777rhk+fLhYhKeedbYauOOoYBam4eje
e+8VfD2OVDy4E5hDgp999pnZsmWLiGHNmjWWsUZhBCNAbB9//LFZv369tLnq
qqsQkZolOI0fP97ceeedokeMink+8sgjJs5oFDcke9dddwkJe/bskaHxepht
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
\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt080rwwEYB/BfOKwUO4zMpma01jaz99moPe0gSbJRZJai5UZqlFwYO3Cx
xVpIWS4ieX+5IMoKObjQhuTtgNRom+KCPDvs+QscPPX09HnqOT1981s6rI4U
hmGqv/tn/lbEJPAGrSNbqyZcwEOsmWvPG0WzQGo/Cx88zaDZkB3qrS/PTpgD
m8zT3RtvG50D18fdV7HPYTQfdNrz8OXeFFoA4lBehbnMjxZCrSVYd566gS6E
hsesoObehhZB+4Q34yLqQoshwJa93pzMoSXg3ilyLfgm0DKQtPofzOoVtBxm
43FLF2sRrQDfae2hLTKJVsKH98i4PG5Hq8BZkOYfcybu1fDex4p7outoDSh6
h7jF4SW0FrjpUDoenUbrIPPWzumpHETrQZr7sl8V6keXQKxpfmDt2YE2wG4H
r7G5xoM2QlvAXO9zd5oS/2GSC5LJImYTc4hziPnEAmIhcSGxiFhMLCGWEcuJ
FcRKYhWxmlhDrCXWEeuJS4gNxEbi//z81fx8Afwf8IY=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"English\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.11370771469410355`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 
  3.659937123554373*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnXmQFdV+x9u5M3eWpz6XVGUxzzIvr/LMy4t5L1Wpesl/SaWSlz+SSlX+
TFWqjBUFRVDEFUURF0AUVEYUFBBxQFBkU2QRBFcWQUAQRVQUBYZlBkZAFDX9
+fX59T3dt7tvz11m7szcKu5w+9yz/H7f33pOn9P975ePGPR/114+YvAVl1/y
r8Mvv27Q4CtuuORfhg13izJnOc5ZgxzHOX2Jw/cf3a/mz4/uvx8H84eS3Pdr
5L+s8/HHHzv33nuvc8011zh33HGHs3LlSueHH364SH6udz744AP5afr06c73
33//D1Kccfbs2eMMGjRIrs4xZceOHXOuvPJK+f8/TPPPP//cue6665ynnnqK
5n/vjX21/NfonD59Wn5dsGCB09HR4ezevdsZMWKEs3HjRkcJ+O6775xt27ZJ
zwcOHOguASdOnHDef/995+abb3ZWr14dICDjHD9+nFLn22+/depM2aJFi5xH
H31Uri4yZS4g0jPspKXgP00ZgN55553Sx++84f9K/muSohdffNG5/vrrnRtu
uMF5+umnZYibbrrJmTlzZp2BiZEQzbvvvuvcddddAtmUKVOE+gYjxkOHDjmP
PPKIM3ToUOF1yZIldN9guvjqq6+cCRMmyM9Imy6vvvpqITRjuvj6669FTlAC
RS4FwNdo+HjooYec5cuXy5WOeuTIEWfixInOsGHDnNbWVsFyzJgx+rNC9qOn
hTpq1vT4zTffSJX9+/c7zabMblJvyr788kspdxXIl9KcOXOc2267TSTXYMr4
Tj3q11skfPbZZz4JMPjcc89pN6gGvHJVF9PECFqZQlFBn2YIqq2tDU4ylrBQ
i/fee0/EDuKo09GjRx2Vxt69e51x48Y51157rUiDuqo2yjTMKhhNZmjgv+WW
W0RyMM+1K2TFc+3ataIbzzzzjJM1TbZu3eqMHDlSyJg8ebKza9cuTEybvPHG
GzIKZq4jo5W33nqrCFZxev7556UeKldvuHj11VeFGsRICf9zvWzZMkf73759
u8+FismFX8r4ZMzf+fPn+3j/KmgkH374oVTCKYD9O++84wwfPlwswlXPOlMN
3HFUMAvTcHTfffcJvi5HKh7cCcwhwU8++cTZvHmziGHdunWGsSZhBCNAbB99
9JGzfv16aXPVVVchIjVLcHrggQec0aNHix4xKub52GOPOVFGo7gh2bvvvltI
+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
oLgRELgLW8II5cqCAstMZ/0/S0UtqQ==\
\>"]],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt071LQgEQAHBr6AsHKQcHBxUxMTFLnz5F8MKCyChoCoQiJcWiGqJaM15J
oNQSoVBEU0sNfRtFvIJKaKhJMLCgpCGkL+hbqOgcur+goYPj+N103HFyd19L
Z75AIGj6yu/6E3f2QF9vYJdds2MDwsUpLs6Po4sgWiNPe4XzaBG4Xkb51edp
tBjO4pkbPraDloBvzFYSYENoKRxcG5rzHJNoGdTG2rqzDIdWgOc+rNmY2EQr
Yao3HVyUtKFVEOF6Go8bWLQahrfD55Hn3DwaYJzZda8ygtYCw4sc7vgKWgf1
H8pbrnQJrYeCVlFCUxFFV8HpQ+Zi1tOProbXypmjR3MMbYCOQ39objC3HyMs
1Pn3r1TLaAZST4Nb/GVuHhO4LsoaLb4g2gyugUKxTShBs3CyOfSWKO9CW8Dl
lHGmPS/aCu/JqLM9OWLP3UfwO+A3i4hFxGJiCbGUWEasIFYSq4jVxBpiLbGO
WE9cRVxNbCA2EjPEJmIzMUtsIbYS///PX/2fT0iG8KY=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"French\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.11611568460447279`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 
  3.659937124893029*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnWuwFNV2x9szc54+7r3yJamba8zNLWNu7jW5typVSb4lH/L4kFSq8iVf
cquMFQUFn/hEUXwCgoiCqMhD5KHgAwFFEFDwDQgCgiiioiivA+fAERBESf9W
9+rZvae7p6dn5nDOMFWcYWb37r3X+q/nXr27+98vHjrw/4ZcPHTQJRef/y/X
Xnz1wEGXXHf+P191rduUO8NxzhjoOM6x8x2+n3S/+h8n3X8nB/FBS+H7FfJf
i/Ppp58699xzj3PFFVc4t912m/Pqq686P/7448/lcN756KOP5NDUqVOdH374
4R+kOeds377dGThwoPw62287ePCgc+mll8r//+Gf/uWXXzpXX321M2XKFE7/
e2/uy+W/VufYsWNy9Pnnn3e6urqcbdu2OUOHDnXWrFnjKAHff/+9s3HjRhl5
9+7d5RJw+PBh58MPP3RuvPFGZ8WKFSECcs6hQ4dodY4fP+40+W0vvvii8/DD
D8uvn/ttLiAyMuykpeA//TYAvf3222WMv/Om/yv5r02aXnjhBeeaa65xrrvu
OufJJ5+UKW644QZn+vTpTT5MzIRo3n//feeOO+4QyCZNmiTUN/ti3Ldvn/PQ
Qw85V155pfC6cOFChm/2h/jmm2+cMWPGyGGkzZCXX365EJrzh/j2229FTlAC
RS4FwNfq8/HAAw84S5YskV866/79+51x48Y5V111lTNx4kTB8q677tLDCtlJ
Twt11hZ/xO+++0667Nq1y2n328xT8n7b119/Le2uAgVSmjNnjnPLLbeI5Jr9
Nr7Tj/55g4QvvvgiIAEGn3nmGR0G1YBXfjXFnOILWplCUUGf0xDU7Nmz4SRn
CAu1+OCDD0TsII46HThwwFFp7Nixwxk1apQzZMgQkQZ9VW2UaZhVMNr8qYH/
pptuEsnBPL9dISueK1euFN146qmnnBb/lA0bNjjDhg0TMiZMmOBs3boVE9NT
3nzzTZkFM9eZ0cqbb75ZBKs4Pfvss9IPlcv7XCxfvlyoQYy08D+/Fy9e7Oj4
mzZtCrhQMbnwSxt/Of9z3rx5Ad6/DhvJxx9/LJ1wCmD/7rvvOtdee61YhKue
TX43cMdRwSxMw9G9994r+LocqXhwJzCHBD/77DNn3bp1IoZVq1b5jLUJIxgB
Yvvkk0+c9957T8657LLLEJGaJTjdf//9zogRI0SPmBXzfOSRR5woo1HckOyd
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\
\>"]]
}, Open  ]],

Cell["\<\
El entrenamiento no se realizar\[AAcute] sobre el diccionario debido a que el \
objetivo es clasificar un texto, y en los textos la distribuci\[OAcute]n de \
frecuencia de caracteres es modificada por las palabras que se suelen repetir \
m\[AAcute]s com\[UAcute]nmente. Los datos de entrenamiento se \
generar\[AAcute]n a partir de muestras de textos. El muestreo se realiza \
seleccionando partes aleatorias del texto y contando la frecuencia de aparici\
\[OAcute]n de cada caracter. Esto genera una lista de 26 elementos, donde \
cada una corresponde a la frecuencia de aparici\[OAcute]n de cada letra en \
orden alfab\[EAcute]tico. Los textos de entrenamiento disponibles \
est\[AAcute]n en los idiomas Espa\[NTilde]ol, Ingles, Franc\[EAcute]s y Alem\
\[AAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.659937305771235*^9, 3.659937341954743*^9}, {
  3.659937379178846*^9, 3.659937623641363*^9}, {3.659937656105071*^9, 
  3.659937672065298*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"categoricalConvTable", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetTrainingData", "[", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "path", ",", " ", "files", ",", " ", "samplesize", ",", " ", "samples",
         ",", " ", "trainingdata", ",", "text", ",", "langname", ",", " ", 
        "del", ",", " ", "len", ",", " ", "samplepos", ",", " ", "textsample",
         ",", "counts", ",", "dist", ",", "languages", ",", "basearray"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
         "\"\<TrainingData/\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SetDirectory", "[", "path", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"FileNames", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"samplesize", "=", " ", "5000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"samples", " ", "=", " ", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{"trainingdata", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"langname", " ", "=", " ", 
           RowBox[{"FileBaseName", "[", "f", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", 
           RowBox[{"Import", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"ToLowerCase", "[", "text", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"text", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], 
               ",", " ", 
               RowBox[{
               "\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], ",", 
               RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], 
               ",", " ", 
               RowBox[{
               "\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"del", " ", "=", " ", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Keys", "[", 
              RowBox[{"CharacterCounts", "[", "text", "]"}], "]"}], ",", 
             RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"text", ",", 
             RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"len", " ", "=", " ", 
           RowBox[{"StringLength", "[", "text", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Genera", " ", "muestras", " ", "y", " ", "toma", " ", "la", " ", 
            "distribuci\[OAcute]n"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"samplepos", " ", "=", " ", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"len", "-", "samplesize"}]}], "}"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"textsample", " ", "=", " ", 
              RowBox[{"StringTake", "[", 
               RowBox[{"text", ",", 
                RowBox[{"{", 
                 RowBox[{"samplepos", ",", 
                  RowBox[{"samplepos", "+", "samplesize"}]}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"counts", " ", "=", " ", 
              RowBox[{"CharacterCounts", "[", "textsample", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"counts", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", 
                  RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"dist", ",", "langname"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"ReplaceAll", "[", 
               RowBox[{"dist", ",", 
                RowBox[{
                 RowBox[{"Missing", "[", 
                  RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"trainingdata", ",", "dist"}], "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", "samples", "}"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "files"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"languages", " ", "=", " ", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"trainingdata", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"basearray", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "languages", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"categoricalConvTable", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"languages", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"basearray", ",", 
              RowBox[{"i", "\[Rule]", " ", "1"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "languages", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "trainingdata", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CategoricalToNumeric", "[", "td_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", "td"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"data", " ", "=", " ", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"categoricalConvTable", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"categoricalConvTable", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "data", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericToCategorical", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "found"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", "list"}], ";", "\[IndentingNewLine]", 
       RowBox[{"found", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"found", " ", "+=", " ", 
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"{", "data", "}"}], ",", 
             RowBox[{
              RowBox[{"categoricalConvTable", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"found", " ", "\[NotEqual]", " ", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"data", " ", "=", " ", 
              RowBox[{"Replace", "[", 
               RowBox[{"data", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"categoricalConvTable", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], " ", "\[Rule]", " ", 
                 RowBox[{
                  RowBox[{"categoricalConvTable", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "data", "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Return", "[", "\"\<Clasificaci\[OAcute]n erronea\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetDistFromText", "[", "text_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "t", ",", "del", ",", "counts", ",", "dist", ",", "samplesize"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", " ", "=", " ", "text"}], ";", "\[IndentingNewLine]", 
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"ToLowerCase", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"t", "=", "  ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"t", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], 
            ",", 
            RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], 
            ",", " ", 
            RowBox[{
            "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"del", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"CharacterCounts", "[", "t", "]"}], "]"}], ",", 
          RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"t", ",", 
          RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"counts", " ", "=", " ", 
        RowBox[{"CharacterCounts", "[", "t", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"samplesize", " ", "=", " ", 
        RowBox[{"StringLength", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dist", ",", 
          RowBox[{
           RowBox[{"Missing", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "dist", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetRandomTestData", "[", "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "path", ",", " ", "files", ",", " ", "samplesize", ",", " ", "samples",
         ",", " ", "trainingdata", ",", " ", "f", ",", "langname", ",", 
        "text", ",", "del", ",", "len", ",", "samplepos", ",", "textsample", 
        ",", "counts", ",", "dist"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
         "\"\<TrainingData/\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SetDirectory", "[", "path", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"FileNames", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"samplesize", "=", " ", "5000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"samples", " ", "=", " ", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{"trainingdata", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", " ", "=", " ", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"files", ",", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"langname", " ", "=", " ", 
        RowBox[{"FileBaseName", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", 
        RowBox[{"Import", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"ToLowerCase", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"text", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], 
            ",", 
            RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], 
            ",", " ", 
            RowBox[{
            "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"del", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"CharacterCounts", "[", "text", "]"}], "]"}], ",", 
          RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"text", ",", 
          RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"StringLength", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"samplepos", " ", "=", " ", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"len", "-", "samplesize"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"textsample", " ", "=", " ", 
        RowBox[{"StringTake", "[", 
         RowBox[{"text", ",", 
          RowBox[{"{", 
           RowBox[{"samplepos", ",", 
            RowBox[{"samplepos", "+", "samplesize"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"counts", " ", "=", " ", 
        RowBox[{"CharacterCounts", "[", "textsample", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"dist", ",", 
          RowBox[{"CategoricalToNumeric", "[", "langname", "]"}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dist", ",", 
          RowBox[{
           RowBox[{"Missing", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "dist", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TestResult", "[", "td_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "sample", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sample", " ", "=", " ", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"td", ",", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Se escogi\[OAcute] una muestra aleatoria en: \>\"", " ", "<>", 
         " ", 
         RowBox[{"NumericToCategorical", "[", 
          RowBox[{"sample", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "<>", 
         "\"\<, y el resultado de la red al calcular su resultado es: \>\"", 
         " ", "<>", " ", 
         RowBox[{"NumericToCategorical", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"FeedForward", "[", 
             RowBox[{"sample", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}]}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScoreResults", "[", 
    RowBox[{"td_", ",", 
     RowBox[{"trials_:", "100"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "score"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"score", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"data", " ", "=", " ", 
          RowBox[{"GetRandomTestData", "[", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
            RowBox[{"Round", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"FeedForward", "[", 
               RowBox[{"data", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
           " ", 
           RowBox[{"score", "++"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", "trials", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Pruebas superadas: \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "score", "]"}], " ", "<>", " ", 
        "\"\< de \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "trials", "]"}], " ", "<>", " ", 
        "\"\<.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ClassifyText", "[", "text_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "dist", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"GetDistFromText", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Resultado de la clasificaci\[OAcute]n: \>\"", " ", "<>", " ", 
         RowBox[{"NumericToCategorical", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"FeedForward", "[", "dist", "]"}], "]"}], "]"}], "]"}]}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", 
   RowBox[{"CategoricalToNumeric", "[", 
    RowBox[{"GetTrainingData", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"26", ",", "26", ",", "4"}], "}"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SGD", "[", 
   RowBox[{"td", ",", "200", ",", "10", ",", "3"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Test 1.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TestResult", "[", "td", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Test 2.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScoreResults", "[", "td", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Test 3.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "ClassifyText", "[", 
   "\"\<En el principio cre\[OAcute] Dios los cielos y la tierra. Y la tierra \
estaba desordenada y vac\[IAcute]a, y las tinieblas estaban sobre la faz del \
abismo, y el Esp\[IAcute]ritu de Dios se mov\[IAcute]a sobre la faz de las \
aguas. Y dijo Dios: Sea la luz; y fue la luz. Y vio Dios que la luz era \
buena; y separ\[OAcute] Dios la luz de las tinieblas. Y llam\[OAcute] Dios a \
la luz D\[IAcute]a, y a las tinieblas llam\[OAcute] Noche. Y fue la tarde y \
la ma\[NTilde]ana un d\[IAcute]a.\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClassifyText", "[", 
  "\"\<In the beginning God created the heaven and the earth. And the earth \
was waste and void; and darkness was upon the face of the deep: and the \
spirit of God moved upon the face of the waters. And God said, Let there be \
light: and there was light. And God saw the light, that it was good: and God \
divided the light from the darkness. And God called the light Day, and the \
darkness he called Night. And there was evening and there was morning, one \
day.\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.659932867743372*^9, 3.659933034827691*^9}, {
   3.6599330886853037`*^9, 3.659933236841154*^9}, {3.659933271444338*^9, 
   3.6599333049196253`*^9}, {3.6599334543323517`*^9, 3.65993347072902*^9}, {
   3.659933534340192*^9, 3.659933538548366*^9}, 3.6599336343574057`*^9, {
   3.659933696844008*^9, 3.659933772299573*^9}, {3.659933848549431*^9, 
   3.6599339585914307`*^9}, {3.659933997615103*^9, 3.659934066057029*^9}, {
   3.659934099047036*^9, 3.6599341012959538`*^9}, {3.659934165039351*^9, 
   3.659934169364889*^9}, {3.659934260845233*^9, 3.659934261523334*^9}, {
   3.659934327164485*^9, 3.659934489920456*^9}, {3.6599345329767323`*^9, 
   3.659934545250003*^9}, {3.659934581374588*^9, 3.659934618811349*^9}, {
   3.6599346653336353`*^9, 3.659934704108684*^9}, {3.659934842650635*^9, 
   3.6599348867642813`*^9}, {3.659934927758157*^9, 3.659934998809301*^9}, {
   3.659935083304237*^9, 3.659935084762933*^9}, {3.6599351242068663`*^9, 
   3.6599351502083893`*^9}, {3.659935590158731*^9, 3.6599355934011517`*^9}, {
   3.659935665780664*^9, 3.6599356682442713`*^9}, {3.659938009494513*^9, 
   3.65993801806433*^9}, {3.659938136327649*^9, 3.6599382054696627`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Test 1.\"\>"], "Print",
 CellChangeTimes->{3.6599356805409727`*^9, 3.6599379712436*^9, 
  3.659938230314619*^9, 3.659971975012488*^9, 3.659972266334447*^9, 
  3.65997584042031*^9, 3.6599759171131363`*^9, 3.6599765343944693`*^9, 
  3.659978990504738*^9, 3.659983935056512*^9, 3.659984473440302*^9}],

Cell[BoxData["\<\"Se escogi\[OAcute] una muestra aleatoria en: English, y el \
resultado de la red al calcular su resultado es: English\"\>"], "Print",
 CellChangeTimes->{3.6599356805409727`*^9, 3.6599379712436*^9, 
  3.659938230314619*^9, 3.659971975012488*^9, 3.659972266334447*^9, 
  3.65997584042031*^9, 3.6599759171131363`*^9, 3.6599765343944693`*^9, 
  3.659978990504738*^9, 3.659983935056512*^9, 3.659984473441115*^9}],

Cell[BoxData["\<\"Test 2.\"\>"], "Print",
 CellChangeTimes->{3.6599356805409727`*^9, 3.6599379712436*^9, 
  3.659938230314619*^9, 3.659971975012488*^9, 3.659972266334447*^9, 
  3.65997584042031*^9, 3.6599759171131363`*^9, 3.6599765343944693`*^9, 
  3.659978990504738*^9, 3.659983935056512*^9, 3.659984473441752*^9}],

Cell[BoxData["\<\"Pruebas superadas: 100 de 100.\"\>"], "Print",
 CellChangeTimes->{3.6599356805409727`*^9, 3.6599379712436*^9, 
  3.659938230314619*^9, 3.659971975012488*^9, 3.659972266334447*^9, 
  3.65997584042031*^9, 3.6599759171131363`*^9, 3.6599765343944693`*^9, 
  3.659978990504738*^9, 3.659983935056512*^9, 3.6599844853320303`*^9}],

Cell[BoxData["\<\"Test 3.\"\>"], "Print",
 CellChangeTimes->{3.6599356805409727`*^9, 3.6599379712436*^9, 
  3.659938230314619*^9, 3.659971975012488*^9, 3.659972266334447*^9, 
  3.65997584042031*^9, 3.6599759171131363`*^9, 3.6599765343944693`*^9, 
  3.659978990504738*^9, 3.659983935056512*^9, 3.659984485339295*^9}],

Cell[BoxData["\<\"Resultado de la clasificaci\[OAcute]n: Spanish\"\>"], \
"Print",
 CellChangeTimes->{3.6599356805409727`*^9, 3.6599379712436*^9, 
  3.659938230314619*^9, 3.659971975012488*^9, 3.659972266334447*^9, 
  3.65997584042031*^9, 3.6599759171131363`*^9, 3.6599765343944693`*^9, 
  3.659978990504738*^9, 3.659983935056512*^9, 3.6599844853404713`*^9}],

Cell[BoxData["\<\"Resultado de la clasificaci\[OAcute]n: English\"\>"], \
"Print",
 CellChangeTimes->{3.6599356805409727`*^9, 3.6599379712436*^9, 
  3.659938230314619*^9, 3.659971975012488*^9, 3.659972266334447*^9, 
  3.65997584042031*^9, 3.6599759171131363`*^9, 3.6599765343944693`*^9, 
  3.659978990504738*^9, 3.659983935056512*^9, 3.6599844853415527`*^9}],

Cell[BoxData["\<\"Informaci\[OAcute]n del resultado:\"\>"], "Print",
 CellChangeTimes->{3.6599356805409727`*^9, 3.6599379712436*^9, 
  3.659938230314619*^9, 3.659971975012488*^9, 3.659972266334447*^9, 
  3.65997584042031*^9, 3.6599759171131363`*^9, 3.6599765343944693`*^9, 
  3.659978990504738*^9, 3.659983935056512*^9, 3.659984485342895*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1: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
L5Kyg3n/A7MyvPg=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 200.}, {0, 0.8658096875997404}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.659935694072291*^9, 3.659937983991198*^9, 
  3.659938243458496*^9, 3.659971988364161*^9, 3.659972279183835*^9, 
  3.659975843694072*^9, 3.659975929991705*^9, 3.659976547049184*^9, 
  3.6599790027042913`*^9, 3.659983937468068*^9, 3.659984485401402*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Clasificar d\[IAcute]gitos", "Subchapter",
 CellChangeTimes->{{3.65996821713584*^9, 3.659968227677921*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DigitToOutput", "[", "index_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "out", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"out", "[", 
         RowBox[{"[", 
          RowBox[{"index", "+", "1"}], "]"}], "]"}], " ", "=", " ", "1"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "out", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OutputToDigit", "[", "out_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "pos", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"out", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", "1"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Return", "[", "\"\<Clasificaci\[OAcute]n erronea\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
     "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", 
         RowBox[{
          RowBox[{"td", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"DigitToOutput", "[", 
        RowBox[{
         RowBox[{"td", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "td", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6599682415630026`*^9, 3.659968249258594*^9}, {
  3.659968357706737*^9, 3.65996836109733*^9}, {3.6599685581643324`*^9, 
  3.659968561086195*^9}, {3.6599686517652073`*^9, 3.659968653858917*^9}, {
  3.659968956842544*^9, 3.659968991205764*^9}, {3.6599691851088686`*^9, 
  3.6599691852088757`*^9}, {3.6599693089291325`*^9, 3.659969324381196*^9}, {
  3.6599694151756415`*^9, 3.659969419641859*^9}, {3.6599713547836246`*^9, 
  3.659971372895015*^9}, {3.659972343768929*^9, 3.659972344993252*^9}, {
  3.659974633773177*^9, 3.659974634003304*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampletd", "=", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"td", ",", 
     RowBox[{"{", "20", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"784", ",", "30", ",", "10"}], "}"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SGD", "[", 
   RowBox[{"td", ",", "20", ",", "10", ",", "3"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"OutputToDigit", "[", 
  RowBox[{
   RowBox[{"sampletd", "[", 
    RowBox[{"[", "10", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", 
  RowBox[{"FeedForward", "[", 
   RowBox[{
    RowBox[{"sampletd", "[", 
     RowBox[{"[", "10", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.659969802823716*^9, 3.659969887469516*^9}, {
   3.6599699207762156`*^9, 3.6599699218967204`*^9}, {3.6599701141929746`*^9, 
   3.6599701145054817`*^9}, 3.6599702793003597`*^9, {3.6599707651161485`*^9, 
   3.6599707699235024`*^9}, {3.6599713831841*^9, 3.659971396560432*^9}, 
   3.659979785499743*^9}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.659971348146784*^9, 3.659972326731813*^9, 
  3.659974626990119*^9, 3.659976698968121*^9, 3.659979822929305*^9, 
  3.659979967493353*^9, 3.6599816984626913`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}], ",", 
   RowBox[{"{", "0", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.659971348146784*^9, 3.659972326731813*^9, 
  3.659974626990119*^9, 3.659976698968121*^9, 3.659979822929305*^9, 
  3.659979967493353*^9, 3.6599816984640512`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 821},
WindowMargins->{{84, Automatic}, {85, Automatic}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 106, 1, 102, "Title"],
Cell[CellGroupData[{
Cell[711, 27, 107, 1, 73, "Chapter"],
Cell[821, 30, 66543, 1147, 626, "Text"],
Cell[CellGroupData[{
Cell[67389, 1181, 460, 11, 35, "Input"],
Cell[67852, 1194, 2819, 59, 250, "Output"]
}, Open  ]],
Cell[70686, 1256, 4722, 134, 632, "Text"],
Cell[CellGroupData[{
Cell[75433, 1394, 301, 8, 35, "ItemNumbered"],
Cell[75737, 1404, 687, 23, 37, "ItemNumbered"],
Cell[76427, 1429, 675, 22, 37, "ItemNumbered"],
Cell[77105, 1453, 761, 23, 41, "ItemNumbered"],
Cell[77869, 1478, 842, 26, 51, "ItemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78760, 1510, 106, 1, 73, "Chapter"],
Cell[78869, 1513, 202, 4, 35, "Text"],
Cell[79074, 1519, 24765, 555, 2478, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[103864, 2078, 136, 1, 69, "Subchapter"],
Cell[104003, 2081, 334, 6, 35, "Text"],
Cell[CellGroupData[{
Cell[104362, 2091, 3501, 91, 286, "Input"],
Cell[107866, 2184, 1628, 22, 25, "Print"],
Cell[109497, 2208, 1637, 37, 92, "Output"],
Cell[CellGroupData[{
Cell[111159, 2249, 1647, 22, 25, "Print"],
Cell[112809, 2273, 1632, 22, 25, "Print"],
Cell[114444, 2297, 1631, 22, 25, "Print"],
Cell[116078, 2321, 1631, 22, 25, "Print"],
Cell[117712, 2345, 1632, 22, 25, "Print"],
Cell[119347, 2369, 1644, 22, 25, "Print"],
Cell[120994, 2393, 1635, 22, 25, "Print"],
Cell[122632, 2417, 1633, 22, 25, "Print"],
Cell[124268, 2441, 1633, 22, 25, "Print"],
Cell[125904, 2465, 1632, 22, 25, "Print"],
Cell[127539, 2489, 1639, 22, 25, "Print"]
}, Open  ]],
Cell[129193, 2514, 28066, 471, 291, "Output"]
}, Open  ]],
Cell[157274, 2988, 281, 5, 35, "Text"],
Cell[CellGroupData[{
Cell[157580, 2997, 2988, 86, 286, "Input"],
Cell[160571, 3085, 267, 4, 25, "Print"],
Cell[160841, 3091, 811, 26, 92, "Output"],
Cell[CellGroupData[{
Cell[161677, 3121, 288, 4, 25, "Print"],
Cell[161968, 3127, 273, 4, 25, "Print"],
Cell[162244, 3133, 271, 4, 25, "Print"],
Cell[162518, 3139, 271, 4, 25, "Print"],
Cell[162792, 3145, 272, 4, 25, "Print"],
Cell[163067, 3151, 285, 4, 25, "Print"],
Cell[163355, 3157, 272, 4, 25, "Print"],
Cell[163630, 3163, 273, 4, 25, "Print"],
Cell[163906, 3169, 271, 4, 25, "Print"],
Cell[164180, 3175, 272, 4, 25, "Print"],
Cell[164455, 3181, 280, 4, 25, "Print"]
}, Open  ]],
Cell[164750, 3188, 27209, 459, 258, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192008, 3653, 142, 1, 69, "Subchapter"],
Cell[192153, 3656, 402, 7, 59, "Text"],
Cell[CellGroupData[{
Cell[192580, 3667, 2724, 70, 261, "Input"],
Cell[195307, 3739, 11826, 213, 264, 3585, 76, "CachedBoxData", "BoxData", \
"Output"],
Cell[207136, 3954, 12832, 229, 264, 3583, 76, "CachedBoxData", "BoxData", \
"Output"],
Cell[219971, 4185, 12668, 226, 264, 3582, 76, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[232654, 4414, 954, 15, 107, "Text"],
Cell[CellGroupData[{
Cell[233633, 4433, 25677, 585, 3611, "Input"],
Cell[CellGroupData[{
Cell[259335, 5022, 315, 4, 25, "Print"],
Cell[259653, 5028, 425, 5, 25, "Print"],
Cell[260081, 5035, 315, 4, 25, "Print"],
Cell[260399, 5041, 340, 4, 25, "Print"],
Cell[260742, 5047, 315, 4, 25, "Print"],
Cell[261060, 5053, 358, 5, 25, "Print"],
Cell[261421, 5060, 358, 5, 25, "Print"],
Cell[261782, 5067, 342, 4, 25, "Print"]
}, Open  ]],
Cell[262139, 5074, 4111, 80, 297, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266299, 5160, 133, 1, 69, "Subchapter"],
Cell[266435, 5163, 3301, 84, 411, "Input"],
Cell[CellGroupData[{
Cell[269761, 5251, 1181, 31, 136, "Input"],
Cell[270945, 5284, 210, 3, 33, "Output"],
Cell[271158, 5289, 575, 15, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
