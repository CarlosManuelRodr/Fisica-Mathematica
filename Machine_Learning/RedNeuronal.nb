(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    635619,      11638]
NotebookOptionsPosition[    631791,      11521]
NotebookOutlinePosition[    632127,      11536]
CellTagsIndexPosition[    632084,      11533]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Red neuronal artificial", "Title",
 CellChangeTimes->{{3.6599193963849*^9, 3.6599194044085608`*^9}}],

Cell[CellGroupData[{

Cell["Introducci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.6599194103045053`*^9, 3.659919413016464*^9}}],

Cell[TextData[{
 "Una red neuronal artificial (RNA) es un modelo de ajuste basado en el \
sistema nervioso donde la entrada es un vector ",
 StyleBox["x",
  FontWeight->"Bold"],
 " \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "N"], TraditionalForm]]],
 ", y se desea mapear a f(",
 StyleBox["x",
  FontWeight->"Bold"],
 ") \[Element] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "M"], TraditionalForm]]],
 ", donde N y M son enteros arbitrariamente grandes. ",
 StyleBox["x",
  FontWeight->"Bold"],
 " es el est\[IAcute]mulo de entrada que recibe la red, y f(",
 StyleBox["x",
  FontWeight->"Bold"],
 ") es el est\[IAcute]mulo de salida. Este modelo est\[AAcute] basado en una \
estructura de capas, donde el est\[IAcute]mulo se recibe en la capa de \
entrada, y el resultado se obtiene en la capa de salida. Cada neurona est\
\[AAcute] interconectada con las dem\[AAcute]s de la siguiente capa. \n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsvQl8VNeZJS68pJ1Jd+L+z0w63Zmk/e+ennZ3phNP93TiNsaQjhfsuN3E
S4wdE+MNDMQgA2YH2ZgdWQjQLrSABNr3vbSvJZXQviEhJIEAsYhVBGwD0pz7
TtXVU20q7RJ+51cUr0rvvXrv3XvP/e53v3u+///dZS8vuM/JyWnFQ3h7+Z3V
v1y+/J21rzyAD/++duUH796Pjf82zcnpCv6J7T4NGjRo0KBBgwYNGjRo0KBB
gwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBBgwYNGjRo0KBB
gwYNGjRo0KBBgwYNGjRo0KBBg4bRRb2/Uz/86yf6cjRo0DAmmIiWrvzmct2F
cfmxbzYu6JbLcu3tvZDhjE/L0s/dUePu3bu9vb0TfaUaNGgYPiaqpUsy71Vw
1wR+HN3f+mZDedL+9XzIKM2vv/761q1bf1QBH/GlRukTNX7RDBsNo4EJa+mm
CtyLM9++ffsrE7CNb77RlDK6UB60X32vLNwbN25cuXLl8uXLl4CWmMX99LUU
nbh48sYOXqf8N5BnLpi+c7rX+GcCxy+aYaNhFDDeLd1k+izX6cSWM84JAr95
s2K/PM6rAt9ofD5aYJn41d5F+aJrvnr16sWLF8+ePXv69OnOzqxd+JtrHr65
erXUUxRy8ll03OfSlzlJKqvx7Wc1Zdu35s4ds+/vAXfNRI5fNMNGw8gxvi39
nGLt+IkG01vvp5wkufPW9etl7thcGNnQ1XWuIVJ0H/vL0HBYk6cyP0wKsIhR
LDdv3kQ33dXV1dHR0dLS0qzg+PHjHR2VYR/IrnSvoafnRkfiR9j0KEfPjlpR
7oEPHyV29BA3bnQkfST39zx6b7hrJmD8YtWwqfKSx+03oMg0w0aDgxjXlt6Z
vBTf+dTQ/KjyFgfGHr/cleeKrflBpceOHcNP63aILqTk8uXr16+TH1ifpx4/
TBIonOFd9RWe57lz59ra2hobG2sVNDQkblHK6YPD1WfO5IhicPqi4Pz5842R
C5V+HPUBhzRELDB9yvtC2X9hVFN3d5Hogp32FF4QwEHo9EF9qAPsiFFeE33n
Q8C4j1/O65yd6NRRGTaVYny6KKbh3LmuhghRBO7FKDVp2GhNQIM9jGdLPx67
BPSddAodB9pLewI+LQqrPV0WPN/JHPNDq07ijN3d3eQHHEKTT6vMQ0e94BOv
ShiYJ0+eRPlWVlYePXq0pqamKWkz/rIz69SZM2dOn87ZiQ/vhZafONHCItmc
1NTUhB42+XN2ts3NyaJGbE093tra2taWvh0f3j1oOH68RQG+xPlR1mBC8M/U
KqzxHr+cTV3WT/h3jIZNrLtSApX4RTx55WFvzz17FgXHLlKzajTYxTi29KpQ
GhuXFRS4iTMG6o9VRm3E1qu747KysnJycoqLi8vLy9GboEqfOHECV4UuA+0L
rQB8PrXsvUkCmpBuBefxPKur8/a/gU9v+ObVsMjYE1cfJlV9GllRUZax/3Wx
/bpbUkFRUchqsemeWlJSemSd+Hp9BAooy/NNZf/1YWVlegUsNfwEygu2AZhn
KhXWOI9flI5gaeoZZcLoZkeiMGx27ervLUyYh5bFJqBZNRoGxTi29HylG9iZ
c+YMhq7blbrqoSvPzw8WI845nx+Kj09I2C9cMa/uTMzPLy0tRc9SX1+PloVr
mIr23iQBHtoNxXA0Yc0RvR79NQzOnF3yy+1+fvNQ9F8k5GVG75wjTMXNn73E
P33knZKSlpaWmZkZsELuv2LXrldRVNsjM9IVZGdnoyMG+8GmBfOwsCb61h3H
+I5fGjk3BAO/BxW7kIZN4OdsTHiSOp0Otk1BQYHBYMAjxYGaVaNhUIxnS6+q
iv7cuMMWFxfRa7jG5eKv4PCF8tAXNgTHxCQlJaE+5+fnl5WV1dXVgR9g0mA8
e/v2bY3MhwpRxDduoEMEJ4CgSkpK9KYiPn36NL7v7OzEOKiiogIPPDU1NS74
0xeEJbozJCQkNDT0yJEjkZGRsbGxiYmJycnJKJpEBQkJCXFxcfg+JiYmOjo6
Pj4edQDlhV+BCQrOmVJkPs7jl3LFkHcv6u6GJb/DaNhEfIL/X94ekpAQG+u+
WLFwonS6wsJCHKVZNRoGxXi2dJy8uroa1RL1GfUThkdGRgYOwW7h4eE44cGD
Bw8dOnT48GGcE2cAz+fl5WFPXMDZs2dRjafY4H1yAEUMagXBKjRVXaYARYyn
il7y1KlT7e3tDQ0NGArBGkTZRQVsnC3MzK0BCoKDg1E0KCAUU5yCGAUoVhRT
uAn4BtUDXTbMVNiQqFRTi8zHefwCo323cZ8dn30mDRvfJf1WzTp/5Znjqebm
5mpWjYZBMZ4tHeyNTgE1mT8EokblxzlJ5uBwMDn5nCdMSUlB5ceeGMlikIsx
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
JQXnVygcKkEbBRlfDwj3VfbyeOxg+63kXUUTpdglJPPZfrpDH6IdXhegIKxg
vF115mCLOOr42cus3KB8ipB/FyUonbNy8Bat12+SyRHO3fjiKzHPiz0Br1qt
1uzsbAxV+IKgggWbQ+757WKfsQvueWrZxtBMJ43bEgSf70koYgLnnt8t12TV
x/o+//Fe6hWwv8mgSIPhDLEi5zq7z2zCXpVk6/iS/zS8NMAQkl7FqWScx4Ka
Jrltlvc7OM61tbWi2QpDM10j8/PzEfMoDQQFp7g9INxXqa/loYOt/UKfYWrB
IIX7fdBsykp90YubI9PTEeogMscFgjsCEBEoyEjmzhxs6bbwwBt+CwLSSutP
U9qCYSpLUJxaOXR7fhhMTrEO/EuHI94s0JoQ1IoBEYNUvg48ASGk51gembqD
tegTfENOnG4WYryO4wu2OWlFFAfcR2cGVtc37I7KHP74Jz5jFjw7exfOTnl5
OW7zKysrwSpUjQbziBQZJ7K7adgSJaYp5zW6O5c0g+c1qeVWi2mG/Ry7kAPt
8qf3CBASdNg2y9pONlvRI5I2ZAjUccxZlIhfmgrLFQy4PSDcV1tbvWn/FD1D
MxLP6vN0BZv49ys7Mul+Tr9LhD00WKFbVtul4czBFvfCsmrWv/5p/bQNcYn5
tZzE7IqVg+cAFQgmB6szP8YcPpX52SJK3RV8tTo7EOb57oxjDpxu0U5DdESJ
97+2lXOdWw4X4LBgpAO37DyU+t1HFwx7eO7vpm/CicNxw2kCpdfrsjCc6xR1
490XLopROalZ0xJpintf/3NabOO1xhh6E0+LabSL9suTEf0zUV936qI4vH4x
RYbUiuNUssE4jKWeNHNUYbmCI3ozMm/oivuqVw62F1JmOrbzvxGcV1sLFsJ9
q8lkApnn5ORQuI8KIbbL37WDLbg0Mrv2teWRP3xujWD1e3634tVlhyMyqz+7
8UWPxoT49CfmBvPevLGl1SBnynAOx5bNQadOnRIOiay3wfIEs+WB121NrI4h
+vLgbL6EkaL25AUOEwz4MTRs3Bv9t+Pm3v3QzKemrsEBxOnDScRm8RHC0qLb
KdSgEsBifqc5QFYK0ZKv+/I83QmwN4MB8DnbZlm44moqmQqcLGGlg5hscdLf
vp1Cf0Bv5szPdsV91RsHW50EKvwkIn8rrAafi2AVH4EhI0kHnmA3sLxdQYtb
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
PFz3F3Q7qJDjeYe+04Gy1/ZWQUGhN+HGbAJhbYNuAFetA084g9asg1Ik7EWq
qTvy/Lwg8swj03bmWMoYeFPkMN9Ssmp39JPvb/rbsR9olTAPzbj7oRk/etb3
zU/3R6YXCS0X91wq96QjyGQLjFBrXB6YKMaRTWFZ2Cbo68y5S//6p/Vcbnj8
24sbqFSDjbC3iPvgcgc6nAfp4RmQlsvX3XfoC/FDg9iX6tBXUBgM8NA2iA6b
rEymtiQgepEScip+/NJG5jrmbImhVm1VVRXieQTzBQUF2dnZmZmZZh0rd4a9
MGfbD5+cz77OoWPmj3hq6WvLIsIzKj0Rb5QrqA0hOkYQjCMiRK85duqlJYek
bE/7xzjfyKRsZooadNtuCgXclt20CcTe7OcSj5EjNVYXD7aMiQf+bG/A3XV4
3qEvl5GrDn0FhcGDTtgGfaVDdJgu2ZvBmoqfvLwp3VLDknW8hcrteXl5IPDk
5GS646WkpIDVQe/g+aiUvD8vDfnJS+uHjF3EbiDhdnfp6mduWN0QorOU2mmI
LofiPmMXSo9FPuN8X1sUiH2jhShiWgS34MZ2crVlZVoRKSl6xIgOegfYNUBh
ZAbqJlPXTxBG25lbk9x06BtSK5zrVB36CgqDCp22DeLbmy9d++2c/eSZKWti
Ll3RNGlJraAUknlubm5GRgbJnGUwOTk5FosF/MmQGBs3W6ocxRvdu93JipGG
EB2EJofo4vFfr2/53Qc7v/vogqG4HRg732fsgn95bnl0dLTJZMIu4T7i9OnT
2P82N236j5DG8dxzgNUpv4YH6N21AluH8KRD35BaYYe+KiNXUBg86KJtkMly
jDf++Dex8OhtycOONnzCU4keHPhXWKqVl5eDPGtra/kRQryxrOaYU/FGV253
TkN0poaemh04xCFPHhChlccv3rT/1++s/bvHFviMWbB2+56IiAiMMlarFftM
c5Dbn31m8+ympHzn2nLB/+wLe/DBzs2Q7jGV8Qh72KGPM6U69BUUBhu6Yhsk
S/MZ+jrZP85ScObMS3RQaAX0LooYhcOdbNAjWJ3ijRMXh8rijXS7SytuuC25
3clWdILltoSZHZlcSwS9uA43CJGRkQcPHtyzZ897vpvnr9oeEhISFxcHksfg
gvdev3jx1rhx31DxzM+vS0e5oMCWdbn3Xq/aClqv3xSds44d+rL4oaFDH2dK
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
+g69GZk36IXZtbW1CL/z8vJSUlIQJyMsB5OD1ePj48G9JSUlWKdF9uWku5Cv
r4ffCMwMfj6rkzkYG7zNVLlJB58nJSU5IXMK4XpcBqmgoKDQf9CbOXOgqakJ
gwVib73OJCc5ORnUilAZUbrZbEbEDqo/deoUbhPadpGl5h73DWF4wo1Gs54z
z83NFWl52RcVT/ASVmiXZmHC3MXsp4KCgkJ/Rm9Ws1zRnZXOnTsHuj5y5Aji
8/z8fLqXFhQUlJeX05n04sWLGFnadvHmTZvzcplHoi74Ovgi5/RqFovFggg8
XUeWDvEcL2EFrGabAMW9AHMsDubOCgoKCgMCooKalkM3ddzoGXz++ecganbE
NzQ0IA4XLmwnT54EtbIuEbvRbhfp/vngg558HXwXfMpFvc4cA4TVas3XYdUh
nuMlrIDVbKWJ7P0cP75HDrGCgoJCb0F2Heo58C4A/Hn16tULFy6A0s+cOdPc
3Hz+/HlB40a9lG+l4NwD7cTbdvtObPzo0aMYKejFXKNDPMdLWAGrYeU2g1HP
gn8FBQUFBZGlZ1YHrI5YnbakpHHn3Tfs6x8xosM0iBBR4ZRuU1PTKR1NOsRz
vIQVsJo2UlBlt4cMRhUUFBTuRDCrwxCd/tRCj6WDJsrx420zoW5LB7l9luhg
sHCVvaduAFazKSXee6+qSFRQUFDwCoaUjqe98CBbMDm7+93Km4tZXU4BMF0v
zwUINRVb//7w4SrBoqCgoNB7qKvTMi1s8Jdr0R0gBovbLqANB4zJXQiYKygo
KCj0IBBCsyd05MjO9903Ntry5IjJFZMrKCgo9AlaW20iKiwm9CpDgnieVYjM
k6vsioKCgkLfwtfX1uaDx8SJWoDtfgYzKkpTBhBvmTxZzXgqKCgo9AvIYTYf
iNhB8njs2aPRO58/8UQbh3cimFdQUFBQ6AU0NmotoiLx4uoxapRG7HV1fb27
CgoKCgpu0dqqTYmC2EHakydruRc8WbFCW6gUVxQUFBQUFBQUFBQUFBQUFBQU
FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ6wv8Him7oyA==
     "], {{0, 276}, {495, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{495, 276},
   PlotRange->{{0, 495}, {0, 276}}]], "Input"],
 "\nLa ",
 StyleBox["fuerza",
  FontSlant->"Italic"],
 " de la conexi\[OAcute]n entre neuronas est\[AAcute] dada por el ",
 StyleBox["peso w",
  FontSlant->"Italic"],
 " de la conexi\[OAcute]n y el ",
 StyleBox["bias b.",
  FontSlant->"Italic"],
 " De manera que el resultado de una neurona al procesar la se\[NTilde]al es ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sum]", "i"], " ", 
      RowBox[{
       SubscriptBox["w", "ij"], " ", 
       SubscriptBox["x", "i"]}]}], " ", "+", " ", 
     SubscriptBox["b", "i"]}], ")"}], TraditionalForm]]],
 ", donde ",
 StyleBox["f",
  FontSlant->"Italic"],
 " es una funci\[OAcute]n de activaci\[OAcute]n, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "ij"], TraditionalForm]]],
 " es el peso de la conexi\[OAcute]n de la neurona ",
 StyleBox["i",
  FontSlant->"Italic"],
 " con la neurona ",
 StyleBox["j,",
  FontSlant->"Italic"],
 " donde ",
 StyleBox["i",
  FontSlant->"Italic"],
 " y ",
 StyleBox["j",
  FontSlant->"Italic"],
 " est\[AAcute]n en diferentes capas, y ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "i"], TraditionalForm]]],
 " es el ",
 StyleBox["bias",
  FontSlant->"Italic"],
 " de la neurona ",
 StyleBox["i",
  FontSlant->"Italic"],
 ". Una manera de realizar el conteo de todas las capas que existen en la red \
neuronal es agregando un tercer \[IAcute]ndice ",
 StyleBox["k,",
  FontSlant->"Italic"],
 " que indique entre qu\[EAcute] capas est\[AAcute],  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Sum]", "i"], " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["w", "ij"], "k"], " ", 
       SuperscriptBox[
        SubscriptBox["x", "i"], "k"]}]}], " ", "+", " ", 
     SuperscriptBox[
      SubscriptBox["b", "i"], "k"]}], ")"}], TraditionalForm]]],
 ".\nUn tipo muy usado de neuronas artficiciales es la neurona sigmoide, \
donde la se\[NTilde]al de salida de una neurona en funci\[OAcute]n de su \
entrada se calcula a trav\[EAcute]s de la funci\[OAcute]n sigmoide.\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJztnTuu4zYUhplHkdZd2ngLXkECrWACd9PMAFEbYBJAmB0YKTJlYKSY3kC6
C6RwkWZKAwHSuw1SXSArcA6PaMlvk5ZIiZkP372yLIsiJf0iDymS56vX378o
PzXG/PCFLF68qr5+8+bV228/ly/fvP3xu9efycpP8v/lJ8bY3XYAAAAAAABw
BTMxC4usFbo2GTpFMF5ELZV+Ls1K9DKT1cXQaYLxYqo6PxG9bGQ5FdVMm99m
Q6cOxoYp3OfmMF/Rkmll1kOnDsaJlEq7vXKabQv0Apcxc7M724Ze4IzaRmm1
0ZZK6AVOMaUsSvnc1toQu2Xe/IZe4ATRx0bKooXUi9byWbZqQS9wCbF09zWk
4rilDr1ACOgFfJHyaSEl1bMsy6HTAgAAcAl9n807bPBE9LJUywbNgCdiD6MZ
CALNQChoBkJBMxAKmoFQ0AyEgmYgFDQDoaAZCAXNQChoBkJBMxAKmoFQ0AyE
gmYgFDQDoaAZCAXNQCipNCPxlPUMJXbkry43srSzaTHHTWbE1YyZmUpHUi0l
hnk7Z4nEWsgvdpTVVn6bd4kDUhNHM3K8rXAnD5G4K8l5rKKmvkeG4elXM1L+
bEUF3qWNjpLBmsqMfjSjs06sT+fL8giHZjKkq2Yk9PZxe0RnfNxgBefFo5qR
HGIt97tj/iBl2XN47gTDEq4ZqQtt+pk9WEq0Z2amyI8QzYhaerzHEvPGLIc+
fwjHTzOyV89liJRtG/KYPLmnmTj3tn8NQjrONWPm+3qM2LhRyg4t46grZcux
ZmwLv/vcRIuxlJyL9piMaTVjZ4J1pUbEOyp5Fx5bMsdp5p35M/79lLi2vFnK
H7mPT+Zf87PZRo9pQc06d9SuWMjyQ/w6r5R8z+QwOSP1FrV57ZvFJPGRw/wv
ECsmUYua/FFLyp64NaOjmFa09eaO1KeTlEYaVzn+EqmLjfUx2GdiVVTJ4hKb
d+jzvZPC6ePtCl3C5kPadhHrKWroM76ZvnkHvQSEzdVfuW1HSxrfYtzPoB0f
Ez9svv7KJbVJ/TPJMziABaOehUodPTV135dyd9X2lq1r50fRru3ciKqpXhvd
S33nNXmAX9g76bnir9z6XTv1uDYOJI1zd55JlR1Tn+2b9pPts/3bTlnbOt+s
EztGxv1etX59zdGTrh6i9yHK/Vt2v7C3r4L7PPZXbvVc6JiM0fX/0HOepi8f
Ylq819od5Uwbi/7Ah29Teki4q/f88Ps+L/EN63EtjvyVy1FrVVdjrBXoU2fz
6cRajmkvyZVenubm9o4ejMi03+pcIlwvVVjYu6k98Vfe5F/FuR/z+skemPfm
b/lPrZcPUc/pd/PXmcfVU70UD+olMOyNa3DVX7nbfuGZUstmWH6Va/tLcr38
EfWcnuQJONZL+YheGgvjUC/zsLBXr8ANf+WHNta4qNtazSJ1e0jMsvnSmzAp
c3ftVrPYv/04uOflhXu+OP7uju7S7hf2aipv+Su3ftTGqBbbf2kyiL0bzX6R
K7+6uL3N962V77TT9hCTteY9aF1jsa1p7vuuCTttR9r4hb15FS76K997aRxl
/aguQxO3h5iY9enZ1ZEPdu6IubBun2W19+fGtq7a8sGNjJAt2/rZd3vtdA6T
QttXAsM+kP6VK1VH+5Yt5v27GF/i9p6jMz3L5+UOFYdPu26bHD7zRssY2e+B
sMEpfG5WR+vjPvUbwNTlX+f0ZtNSn4q08yjkNmuDQS8npHziU7/d7Jhaa5+s
GQlzjLXdksVVce3zJ10PmLH3fgEfTKIeduPvXQe30FaEYlePh0/Q5yK3uhGc
on1/NuY38xT/TsYeoQ0p0N45/5iX8e+lbScd+myhC6qVtWhls4s+9lDqplty
l3xxWin2LfQ6ujliS9q+xyvkR6sV/eZ62OnWSDmA7Qc/9FnDIxxrRbfMmnex
kWaYYnapPDnXytkey/6tGFMwj0d+3NeK7mVnyOy17U7bdkbX+wdu4acVt++k
zxmWzZwZvvMiRCsuxER9RfRgb9hxNHn1Xvi4CddKE3LRtY+69lvGys2Gx7XS
hO/iDadU/3yoJQu6asUdZVLP0BscrlBfoNi4WdCPVpqjTdVvVulbH9Ye+Fss
3DzoVyvNUQvNZ6SefV01kheV6u2T+ekyIY5WDo5fmNpPrJ3hpGpGn+79UatS
sFfyILZWDmKamdrf9ErHti91OcdWyYd0WoHcQSvgC1oBX9AK+IJWwBe0Ar6g
FfAFrYAvaAV8QSvgC1oBX9AK+IJWwBe0Ar6gFfAFrYAvaAV8QSvgi/p7QCvg
DVoBAD9y9T8NQ5Cv/2kYgvz8T8OQXPU/XVk/ZsyaD5e44H/a+X8cr78sGI4z
/9NTVyqtxuuPD4bguv9pKY2sr0ksGGi47n9a7d1ynB6FYShu+Z/W36ucvNBB
fC75n9Z5Jqdu247Wf7iNWC7Oz53OHYgFA3dwMzGp1/Oh0wI5ULfvDp0KAAAA
AAAAgHHwHy6PWME=
     "], {{0, 138}, {280, 0}}, {0, 255},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{280, 138},
   PlotRange->{{0, 280}, {0, 138}}]], "Input"],
 "\nLa funci\[OAcute]n sigmoide tiene la particularidad de que devuelve \
siempre un valor entre 0 y 1."
}], "Text",
 CellChangeTimes->{{3.659919421391006*^9, 3.659919685149439*^9}, {
  3.659919743156139*^9, 3.659919892162366*^9}, {3.659919997825447*^9, 
  3.65992013844009*^9}, {3.65992090687052*^9, 3.6599209442703114`*^9}, {
  3.659920978917962*^9, 3.659921197716276*^9}, {3.65992240325947*^9, 
  3.6599224089524803`*^9}, {3.659922489624625*^9, 3.659922585855557*^9}, {
  3.659922646912006*^9, 3.659922650294767*^9}, {3.659922681766717*^9, 
  3.6599227069578533`*^9}, {3.6599228086534224`*^9, 3.659922809613098*^9}, {
  3.660512882885914*^9, 3.660512883716914*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"LogisticSigmoid", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<\[Sigma](x)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.659920142227826*^9, 3.659920179611471*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], CapForm[
    "Butt"], LineBox[CompressedData["
1:eJwt1H0w1HkcB/Alj6v2N3dCzW1HqEMxJi1Lms/3SkV5bk+ytdg6RCoVV6qz
Lpq60ZXdEtamWvLM5raczfb7YYpKrbFatnAieVi7vxwRPd3ezP3xnve85v3/
eyX3cPjPhhQKJUif/9oNrCe+fsUI0ZHnIQuJfGAl/nB+fgEjvLbIqVFpfEi/
ylw9/R4jVrs0VBKZfGjTRHHfajBibexQxa18PsTkF7/s6NHv2S7Wskd8yJ1y
elpQhxH0TKanj6MAZsQbqj2iMSKZdiWr6I0AZGaxh+If0IiRG4EuvaeuQsYz
laY5dgmhnZr1QtEFMF663MaLvpiQqMIMdCIRuPztb471U4lv6mbtWpg3ocRS
PKP+zZx40dmXWuBXAq3sJxdxMCNSzrjnpfHLgF5Mt8t/bUK4B/muuCurgh2b
2SeVF4yJi/ke28d8JWD7MY7nHGBEDL1zDWh/XA+utSLeUa0hESVRVByduwuD
x2+6qcoNiBvm3Zb5exvhQFGuuCiRQjAFps+0jnKI/HW3Q7X9F7x3uNZk2QgB
ThpnNuv6R1zxuOHBtYhWSAoOzR4a/oBf4fe7FwY/gqhjIRs9PWdxXRLL4NCl
xyDAx0Lxe9N4JGeexR3tADDsjXAzmMKvRbTdMjvcCYm9LUdKpydxh/OUjJeH
u8C3IHOZ7MQoftzn3kBqazck9E+92m0zhCf7WvTYuPdAyODamnbHl3h8/KJk
yUU1eOLCnoms57h0tiTmk0cfeL/bu29gnxSX+Td66xoHYM1Zkkqk/gmVz0K7
CoWDUNemq8iIVICEd8KZOv0a5AFPmD4tahgfGFnFch0GTeWtA8GRQ5AV1dU8
lfYGRDVuwpm7o3DdvsCwumoEmmLPWbk3TIIRNe5y2f23kL604EXIt1MgXNj1
apFiFDo6u/26Cqfhe67RquimMUh56rX6kvUsrInLyaLwx6FE4WcV1/4Byu67
jSbtn4Cc6oZy08CPUDiqaLWx0oCBoDug1fgLzAgZLVaEBmwqqtpK/CkIdkyK
84ImQVXGczA+b4DCbBO0me2TwK5yOXd0yBAZpu2nF23Ugq/QdMPDVUao4t02
x6UiLQxfapx1zDJGStX7CbM5LUgdMjQr+0zQl626HsZmHQyKf1lntMIMGX1m
nq7n6aDLaQtv+oQ5UqY7266X6cC2cItdu5yKEvJiOOwxHeRV7p73/mSBQtWn
m1MwEpT4JvVfPy1BVjfr97zyICGpmWOxIp+GfL7WFc+EksAtVuc1iWjofT1j
8GAYCVFnWPZ7xDQ0z5pQvNHb33u7t7CWhqxr6+TKcBIc7zDilz+koWBGSG8N
i4S+G4tbrf6hoSBmiefOSBICebJ0WiCGIh9J5/ZFk7CZwzCpDcPQk7PhvC69
fXwluUG7MCQ9FfsAxZDg9KG0PIeLoVyVgE2PJcHoSK6KehJDgWsu2HZySZBH
J6wzvY2hY7Vhc85xJEg3DstvV2FooIOjFehd/R0nYOsdDEnYSuFnvQt7dsZk
N2Ho9u/V9p3xJKSFwB+LlBgyPejan3KAhGRX2XJxL4aYS7KFar33WzBKNw1g
yE0ltfwxkYTwNpemzHEM1azfuQ5LIiGgtHTbShJDlnfo6lS90Vk7JTGDoaUO
x3369PaKFXJiFjB0WXYuYtNBEv7/L5Sek+larve/c+dd5A==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"\[Sigma](x)\"", TraditionalForm], None}, {
     FormBox["\"x\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-4, 4}, {0., 0.982013787154201}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.659920132383233*^9, 3.659920179878311*^9}, 
   3.6605106717447567`*^9}]
}, Open  ]],

Cell[TextData[{
 "La activaci\[OAcute]n de la neurona est\[AAcute] dada por\n\[Sigma](z) = ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"exp", "(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         SubscriptBox["\[Sum]", "j"], 
         RowBox[{
          SubscriptBox["w", "ji"], 
          SubscriptBox["x", "j"]}]}]}], "-", "b"}], ")"}]}]], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". \n\nPor la estructura matem\[AAcute]tica de este modelo conviene \
representar todo en forma matricial, de manera que la notaci\[OAcute]n se \
reduce a\n\[Sigma](z) = \[Sigma](w\[CenterDot]x + b).\n\nLa \
propagaci\[OAcute]n hacia delante (",
 StyleBox["feedforward",
  FontSlant->"Italic"],
 ") consiste entonces en aplicar sucesivamente esta funci\[OAcute]n,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", "1"], "\[CenterDot]", 
       SuperscriptBox["x", "1"]}], "+", 
      SuperscriptBox["b", "1"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ",\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "3"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", "2"], "\[CenterDot]", 
       SuperscriptBox["x", "2"]}], "+", 
      SuperscriptBox["b", "2"]}], ")"}]}], TraditionalForm]]],
 ",\n\[VerticalEllipsis]\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "N"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["w", 
        RowBox[{"N", "-", "1"}]], "\[CenterDot]", 
       SuperscriptBox["x", 
        RowBox[{"N", "-", "1"}]]}], "+", 
      SuperscriptBox["b", 
       RowBox[{"N", "-", "1"}]]}], ")"}]}], TraditionalForm]]],
 ".\n\nLa red neuronal trabaja propagando hacia delante la se\[NTilde]al \
inicial mediante la funci\[OAcute]n de activaci\[OAcute]n hasta que se llega \
a la capa de salida. Si se inicia con una matriz de pesos y bias aleatorios \
la red neuronal inicialmente no producir\[AAcute] los resultados deseados. La \
manera en la que podemos determinar qu\[EAcute] tan lejos estamos de los \
resultados es mediante una funci\[OAcute]n de costo\nC(w, b) = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "n"}]], 
    RowBox[{
     UnderscriptBox["\[Sum]", "x"], 
     SuperscriptBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{
        RowBox[{"y", "(", "x", ")"}], "-", "a"}], "\[RightBracketingBar]"}], 
      "2"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", \n\ndonde w y b son los pesos y los biases.\nCon esto se puede conocer cu\
\[AAcute]nto se deben cambiar w y b para que el costo sea menor, es decir, \
estar m\[AAcute]s cerca del resultado correcto.\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["w", "k"], "\[Rule]", " ", 
      SubscriptBox[
       RowBox[{"w", "'"}], "k"]}], "=", " ", 
     RowBox[{
      SubscriptBox["w", "k"], "-", " ", 
      RowBox[{"\[Eta]", " ", 
       FractionBox[
        RowBox[{"\[PartialD]", "C"}], 
        RowBox[{"\[PartialD]", " ", 
         SubscriptBox["w", "k"]}]]}]}]}], ","}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["b", "l"], "\[Rule]", " ", 
     SubscriptBox[
      RowBox[{"b", "'"}], "l"]}], "=", " ", 
    RowBox[{
     SubscriptBox["b", "l"], "-", " ", 
     RowBox[{"\[Eta]", " ", 
      FractionBox[
       RowBox[{"\[PartialD]", "C"}], 
       RowBox[{"\[PartialD]", " ", 
        SubscriptBox["b", "l"]}]]}]}]}], TraditionalForm]]],
 ".\n\nAl aplicar sucesivamente este procedimiento se espera llegar a un \
resultado cada vez m\[AAcute]s cercano al correcto. El algoritmo para \
calcular las derivadas parciales ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "C"}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["w", "k"]}]], TraditionalForm]]],
 " y  ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", "C"}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["b", "l"]}]], TraditionalForm]]],
 " secomoce como el algoritmo de retropropagaci\[OAcute]n. Este consiste en:"
}], "Text",
 CellChangeTimes->{{3.659920463462933*^9, 3.659920513591063*^9}, {
  3.6599212111867456`*^9, 3.659921324689685*^9}, {3.6599213885932703`*^9, 
  3.659921626510948*^9}, {3.659921739014242*^9, 3.6599219418752003`*^9}, {
  3.659922824005316*^9, 3.6599229385405407`*^9}, {3.659923721650215*^9, 
  3.65992382718782*^9}, {3.659923884979227*^9, 3.65992388920325*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Entrada: Establecer la activaci\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "1"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " correspondiente para la capa de entrada."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659923874826771*^9}}],

Cell[TextData[{
 "Feedforward: Para cada l = 2,3,\[Ellipsis],L se calcula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["z", "l"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["w", "l"], " ", 
      SuperscriptBox["a", 
       RowBox[{"l", "-", "1"}]]}], "+", 
     SuperscriptBox["b", "l"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["a", "l"], " ", "=", " ", 
    RowBox[{"\[Sigma]", "(", 
     SuperscriptBox["z", "l"], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659923974675457*^9}}],

Cell[TextData[{
 "Error de salida ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Delta]", "L"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ": Se calcula el vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Delta]", "L"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[Del]", "a"], "C"}], " ", "\[CircleDot]", " ", 
      RowBox[{"\[Sigma]", "'"}]}], 
     RowBox[{"(", 
      SuperscriptBox["z", "L"], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.659924078130061*^9}}],

Cell[TextData[{
 "Retropropagar el error: Para cada l=L-1, L-2,\[Ellipsis],2 calcular ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Delta]", "l"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["w", 
           RowBox[{"l", "+", "1"}]], ")"}], "T"], 
        SuperscriptBox["\[Delta]", 
         RowBox[{"l", "+", "1"}]]}], ")"}], "\[CircleDot]", 
      RowBox[{"\[Sigma]", "'"}]}], 
     RowBox[{"(", 
      SuperscriptBox["z", "l"], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.659924164761177*^9}}],

Cell[TextData[{
 "Resultado: La derivada parcial de la funci\[OAcute]n de costo es ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "C"}], 
     RowBox[{"\[PartialD]", " ", 
      SubscriptBox[
       SuperscriptBox["w", "l"], "jk"]}]], " ", "=", " ", 
    RowBox[{
     SubsuperscriptBox["a", "k", 
      RowBox[{"l", "-", "1"}]], 
     SubsuperscriptBox["\[Delta]", "j", "l"]}]}], TraditionalForm]]],
 " y ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", "C"}], 
     RowBox[{"\[PartialD]", " ", 
      SubsuperscriptBox["b", "j", "l"]}]], " ", "=", " ", 
    SubsuperscriptBox["\[Delta]", "j", "l"]}], TraditionalForm]]],
 "."
}], "ItemNumbered",
 CellChangeTimes->{{3.659923843433752*^9, 3.659924017491897*^9}, {
  3.6599240598313713`*^9, 3.6599242796130037`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementaci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.659919417216414*^9, 3.65991941912045*^9}}],

Cell["\<\
Esta implementaci\[OAcute]n se basa en la que se ofrece en el libro: \
http://neuralnetworksanddeeplearning.com.\
\>", "Text",
 CellChangeTimes->{{3.659925355568756*^9, 3.659925396488452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Definici\[OAcute]n", " ", "de", " ", 
    RowBox[{"funciones", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sigmoid", "[", "x_", "]"}], ":=", 
     RowBox[{"LogisticSigmoid", "[", "x", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SigmoidPrime", "[", "x_", "]"}], " ", "=", " ", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"LogisticSigmoid", "[", "xt", "]"}], ",", "xt"}], "]"}], " ",
        "/.", " ", 
       RowBox[{"xt", " ", "\[Rule]", " ", "x"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "El", " ", "vector", " ", "de", " ", "entrada", " ", "debe", " ", "ser", 
     " ", 
     RowBox[{"\"\<vertical\>\"", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FormatA", "[", "array_", "]"}], " ", ":=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", "array", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]", "[", 
      RowBox[{"x_", ",", "i_"}], "]"}], " ", ":=", " ", 
     RowBox[{"LogisticSigmoid", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"weights", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", "x"}], " ", "+", " ", 
       RowBox[{"biases", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FeedForward", "[", "a_", "]"}], " ", ":=", " ", 
     RowBox[{"Fold", "[", 
      RowBox[{"\[Sigma]", ",", " ", "a", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"layers", "-", "1"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Initialize", "[", 
      RowBox[{"asizes_", ",", " ", 
       RowBox[{"costfunc_:", "\"\<Quadratic\>\""}]}], "]"}], " ", ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"layers", " ", "=", " ", 
        RowBox[{"Length", "[", "asizes", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sizes", " ", "=", " ", "asizes"}], ";", "\[IndentingNewLine]", 
       RowBox[{"bshape", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", "sizes", "]"}], "-", "1"}], "}"}]}], 
            "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"wshape", " ", "=", " ", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;"}], "]"}], "]"}], ",", 
           RowBox[{"sizes", "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"biases", " ", "=", "  ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "bshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"weights", " ", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "wshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"emptyNablaB", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.0", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "bshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"emptyNablaW", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0.0", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "wshape"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Definici\[OAcute]n", " ", "de", " ", "funciones", " ", 
         "relacionadas", " ", "con", " ", "el", " ", 
         RowBox[{"costo", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"costfunc", " ", "\[Equal]", " ", "\"\<Quadratic\>\""}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Costo", " ", 
           RowBox[{"cuadr\[AAcute]tico", "."}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Cost", "[", 
            RowBox[{"y_", ",", "a_"}], "]"}], ":=", " ", 
           RowBox[{"0.5", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"y", "-", "a"}], ")"}], "2"]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CostPrime", "[", 
            RowBox[{"y_", ",", "a_"}], "]"}], "=", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"Cost", "[", 
                RowBox[{"yt", ",", "at"}], "]"}], ",", "at"}], "]"}], " ", "/.",
              " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"yt", "\[Rule]", "y"}], ",", 
               RowBox[{"at", "\[Rule]", "a"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EvalCost", "[", "ex_", "]"}], ":=", 
           RowBox[{"Norm", "[", 
            RowBox[{"Cost", "[", 
             RowBox[{
              RowBox[{"ex", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"FeedForward", "[", 
               RowBox[{"ex", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CalcDelta", "[", 
            RowBox[{"y_", ",", "a_", ",", "z_"}], "]"}], ":=", "  ", 
           RowBox[{
            RowBox[{"CostPrime", "[", 
             RowBox[{"y", ",", "a"}], "]"}], " ", "*", " ", 
            RowBox[{"SigmoidPrime", "[", "z", "]"}]}]}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Entrop\[IAcute]a", " ", 
           RowBox[{"cruzada", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Cost", "[", 
            RowBox[{"y_", ",", "a_"}], "]"}], ":=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "y"}], " ", 
             RowBox[{"Log", "[", "a", "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "y"}], ")"}], " ", 
             RowBox[{"Log", "[", 
              RowBox[{"1", "-", "a"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EvalCost", "[", "ex_", "]"}], ":=", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"Cost", "[", 
              RowBox[{
               RowBox[{"ex", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", 
               RowBox[{"FeedForward", "[", 
                RowBox[{"ex", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ",", "2"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CalcDelta", "[", 
            RowBox[{"y_", ",", "a_", ",", "z_"}], "]"}], ":=", "  ", 
           RowBox[{"a", "-", "y"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";"}], "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Backprop", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "nablaB", ",", " ", "nablaW", ",", " ", "activation", ",", 
         "activations", ",", "z", ",", "zs", ",", "delta"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nablaB", "=", " ", "emptyNablaB"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nablaW", "=", " ", "emptyNablaW"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"activation", " ", "=", "x"}], ";", "\[IndentingNewLine]", 
        RowBox[{"activations", " ", "=", " ", 
         RowBox[{"{", "x", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"zs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Calcula", " ", "todos", " ", "los", " ", 
          RowBox[{"feedforwards", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"z", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"weights", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ".", "activation"}], " ", "+", 
             " ", 
             RowBox[{"biases", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"activation", " ", "=", 
            RowBox[{"LogisticSigmoid", "[", "z", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"zs", ",", "z"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"activations", ",", " ", "activation"}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"layers", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Calcula", " ", "los", " ", "errores", " ", "de", " ", "salida", " ",
           "y", " ", 
          RowBox[{"retropropaga", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"delta", " ", "=", " ", 
         RowBox[{"CalcDelta", "[", 
          RowBox[{"y", ",", 
           RowBox[{"activations", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], " ", ",", 
           RowBox[{"zs", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nablaB", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", "delta"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nablaW", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], " ", "=", " ", 
         RowBox[{"delta", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"activations", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"delta", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"weights", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "l"}], "+", "1"}], "]"}], "]"}], "]"}], ".", 
              "delta"}], " ", "*", " ", 
             RowBox[{"SigmoidPrime", "[", 
              RowBox[{"zs", "[", 
               RowBox[{"[", 
                RowBox[{"-", "l"}], "]"}], "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"nablaB", "[", 
             RowBox[{"[", 
              RowBox[{"-", "l"}], "]"}], "]"}], " ", "=", " ", "delta"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"nablaW", "[", 
             RowBox[{"[", 
              RowBox[{"-", "l"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{"delta", ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"activations", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "l"}], "-", "1"}], "]"}], "]"}], "]"}]}]}], 
           ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "2", ",", 
            RowBox[{"layers", "-", "1"}]}], "}"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"nablaB", ",", "nablaW"}], "}"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Realiza", " ", "el", " ", "entrenamiento", " ", "de", " ", "la", " ", 
     "red", " ", 
     RowBox[{"neuronal", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrainNetwork", "[", 
      RowBox[{
      "trainingdata_", ",", " ", "epochs_", ",", "minibatchsize_", ",", 
       "eta_"}], "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", " ", "minibatches", ",", "dbiases", ",", "dweights"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"costs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"costs", ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"EvalCost", "[", "ex", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"ex", ",", "trainingdata"}], "}"}]}], "]"}], 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"minibatches", " ", "=", " ", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"RandomSample", "[", "trainingdata", "]"}], ",", 
                "minibatchsize"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"Update", " ", "mini", " ", 
                RowBox[{"batch", ":", " ", 
                 RowBox[{
                 "Calcula", " ", "los", " ", "valores", " ", "de", " ", "las",
                   " ", "derivadas", " ", "parciales", " ", "del", " ", 
                  "costo", " ", "y", " ", "con", " ", "esto", " ", 
                  "actualiza", " ", "los", " ", "pesos", " ", "y", " ", 
                  RowBox[{"biases", "."}]}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"biases", ",", " ", "weights"}], "}"}], " ", "-=", 
                 "   ", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   FractionBox["eta", 
                    RowBox[{"Length", "[", "mb", "]"}]], "]"}], "*", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Backprop", "[", 
                    RowBox[{
                    RowBox[{"FormatA", "[", 
                    RowBox[{"i", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "mb"}], "}"}]}], "]"}], "]"}]}]}], 
                ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"mb", ",", "minibatches"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "1", ",", "epochs"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ProgressIndicator", "[", 
               RowBox[{"j", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "epochs"}], "}"}]}], "]"}], ",", "j", ",", 
              " ", "\"\< \>\""}], "}"}], ",", "\"\< \>\""}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Igual", " ", "que", " ", "TrainNetwork", " ", "pero", " ", "guarda", " ",
      "los", " ", "valores", " ", "de", " ", "los", " ", "cambios", " ", "en",
      " ", "biases", " ", "y", " ", "weights", " ", "cada", " ", 
     "\"\<every\>\"", " ", 
     RowBox[{"iteraciones", ".", " ", "Tiene"}], " ", "un", " ", "mayor", " ",
      "consumo", " ", "de", " ", 
     RowBox[{"memoria", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrainNetworkAndMonitor", "[", 
      RowBox[{
      "trainingdata_", ",", " ", "epochs_", ",", "minibatchsize_", ",", 
       "eta_", ",", " ", 
       RowBox[{"every_:", "1"}]}], "]"}], " ", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "n", ",", " ", "minibatches", ",", "dbiases", ",", "dweights", ",", 
         "ev"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"costs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"deltaws", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"deltabs", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ev", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"ClearSystemCache", "[", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"costs", ",", 
               RowBox[{"Mean", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"EvalCost", "[", "ex", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"ex", ",", "trainingdata"}], "}"}]}], "]"}], 
                "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"minibatches", " ", "=", " ", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"RandomSample", "[", "trainingdata", "]"}], ",", 
                "minibatchsize"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"Update", " ", "mini", " ", 
                RowBox[{"batch", ":", " ", 
                 RowBox[{
                 "Calcula", " ", "los", " ", "valores", " ", "de", " ", "las",
                   " ", "derivadas", " ", "parciales", " ", "del", " ", 
                  "costo", " ", "y", " ", "con", " ", "esto", " ", 
                  "actualiza", " ", "los", " ", "pesos", " ", "y", " ", 
                  RowBox[{"biases", "."}]}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"dbiases", ",", "dweights"}], "}"}], " ", "=", "  ", 
                 RowBox[{
                  RowBox[{"N", "[", 
                   FractionBox["eta", 
                    RowBox[{"Length", "[", "mb", "]"}]], "]"}], "*", 
                  RowBox[{"Total", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Backprop", "[", 
                    RowBox[{
                    RowBox[{"FormatA", "[", 
                    RowBox[{"i", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "mb"}], "}"}]}], "]"}], "]"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"biases", ",", " ", "weights"}], "}"}], " ", "-=", 
                 "  ", 
                 RowBox[{"{", 
                  RowBox[{"dbiases", ",", "dweights"}], "}"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{"ev", ",", "every"}], "]"}], " ", "\[Equal]", " ",
                    "0"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"deltaws", ",", "dweights"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"deltabs", ",", "dbiases"}], "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"ev", "++"}], ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"mb", ",", "minibatches"}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "1", ",", "epochs"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ProgressIndicator", "[", 
               RowBox[{"j", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "epochs"}], "}"}]}], "]"}], ",", "j", ",", 
              " ", "\"\< \>\""}], "}"}], ",", "\"\< \>\""}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "Utilidades", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ViewTensor", "[", "t_", "]"}], ":=", " ", 
     RowBox[{"Print", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"MatrixForm", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "t"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ShowCostFunc", "[", "]"}], " ", ":=", " ", 
     RowBox[{"Print", "[", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"costs", ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Iteraci\[OAcute]n\>\"", ",", "\"\<Costo\>\""}], 
          "}"}]}], ",", 
        RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", " ", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Valores de la funci\[OAcute]n de costo\>\""}]}], "]"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ShowInfo", "[", "]"}], " ", ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "Print", "[", "\"\<Informaci\[OAcute]n del resultado:\>\"", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Gr\[AAcute]fica", " ", "del", " ", 
         RowBox[{"costo", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ShowCostFunc", "[", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Mapa", " ", "del", " ", "cambio", " ", "del", " ", "peso", " ", 
         "entre", " ", "las", " ", 
         RowBox[{"neuronas", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"max", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"deltaws", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "deltaws", "]"}]}], "}"}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Length", "[", 
            RowBox[{"deltaws", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "\[IndentingNewLine]", 
        RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"cmax", " ", "=", " ", 
            RowBox[{"max", "[", 
             RowBox[{"[", "c", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"ArrayPlot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"deltaws", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "c", "]"}], "]"}], ",", " ", 
             RowBox[{"PlotRange", "\[Rule]", "p"}], ",", " ", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Neurona i\>\"", ",", " ", "\"\<Neurona j\>\""}], 
               "}"}]}], ",", " ", 
             RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
             RowBox[{
             "PlotLabel", "\[Rule]", 
              "\"\<Cambio de los pesos entre neuronas\>\""}]}], "]"}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "\"\<Capa\>\""}], "}"}], ",", " ", 
            "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"deltaws", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "\"\<Iteracion\>\""}], "}"}], ",", 
            "1", ",", 
            RowBox[{"Length", "[", "deltaws", "]"}], ",", "1"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "p", ",", "Automatic", ",", " ", "\"\<Rango del color\>\""}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Automatic", "\[Rule]", "\"\<Autom\[AAcute]tico\>\""}], 
              ",", " ", 
              RowBox[{
              "cmax", "\[Rule]", "\"\<Escalado al m\[AAcute]ximo\>\""}]}], 
             "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
           RowBox[{"{", 
            RowBox[{"c", ",", "i", ",", "p"}], "}"}]}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Mapa", " ", "del", " ", "cambio", " ", "total"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"totalchangemap", " ", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"deltaws", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "c", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "deltaws", "]"}]}], "}"}]}], "]"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"deltaws", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "\[IndentingNewLine]", 
        RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ArrayPlot", "[", 
           RowBox[{
            RowBox[{"totalchangemap", "[", 
             RowBox[{"[", "c", "]"}], "]"}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Neurona i\>\"", ",", " ", "\"\<Neurona j\>\""}], 
              "}"}]}], ",", " ", 
            RowBox[{"FrameTicks", "\[Rule]", "Automatic"}], ",", " ", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<Cambio total\>\""}]}], "]"}],
           "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "\"\<Capa\>\""}], "}"}], ",", " ", 
            "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"deltaws", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
           RowBox[{"{", "c", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ";"}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ShowResults", "[", "feed_", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "i", "]"}], " ", "<>", " ", 
            "\"\< \[Rule] \>\"", " ", "<>", " ", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"FeedForward", "[", "i", "]"}], ",", "StandardForm"}], 
             "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "feed"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659896383927318*^9, 3.6598964350328608`*^9}, {
   3.659896653045203*^9, 3.659896658836915*^9}, 3.659896786427917*^9, {
   3.659897001808999*^9, 3.659897002907425*^9}, {3.6598971970661163`*^9, 
   3.659897221896283*^9}, {3.659897308467721*^9, 3.659897309842939*^9}, {
   3.659897340626255*^9, 3.659897454831624*^9}, {3.659897503919601*^9, 
   3.659897507299178*^9}, {3.6598978486615973`*^9, 3.6598978487581367`*^9}, {
   3.659897900010503*^9, 3.6598980112333603`*^9}, {3.6598982094841213`*^9, 
   3.659898216486753*^9}, {3.659898278913622*^9, 3.659898298710095*^9}, {
   3.6598985013931723`*^9, 3.659898545359284*^9}, {3.659898583277692*^9, 
   3.659898935398712*^9}, {3.659899609459655*^9, 3.659899695686791*^9}, {
   3.659899794978739*^9, 3.659899983395425*^9}, {3.659900169813932*^9, 
   3.6599002988903513`*^9}, {3.659901429526387*^9, 3.659901476906479*^9}, {
   3.659901545093731*^9, 3.6599015756441317`*^9}, {3.659901646627964*^9, 
   3.659901650307665*^9}, {3.659901685549156*^9, 3.6599016890398293`*^9}, {
   3.659901720456584*^9, 3.659902008478837*^9}, {3.6599020480517197`*^9, 
   3.659902104653366*^9}, {3.6599021464018993`*^9, 3.659902225750671*^9}, {
   3.659902269756583*^9, 3.659902270383298*^9}, {3.659902350444652*^9, 
   3.6599023653334713`*^9}, {3.659902430493525*^9, 3.659902480914654*^9}, {
   3.659902554762782*^9, 3.659902656074977*^9}, {3.659902726462132*^9, 
   3.659902861889139*^9}, {3.6599032148691673`*^9, 3.6599033472344513`*^9}, {
   3.6599033943287477`*^9, 3.659903439688114*^9}, {3.659903476900391*^9, 
   3.659903525542548*^9}, {3.659903568841693*^9, 3.659903577427335*^9}, {
   3.6599040603422422`*^9, 3.659904060905425*^9}, {3.659904111088489*^9, 
   3.6599043351764803`*^9}, {3.65990437742314*^9, 3.659904408068619*^9}, {
   3.659904443856544*^9, 3.6599044822504387`*^9}, {3.6599045163256407`*^9, 
   3.659904689585359*^9}, {3.659904766503957*^9, 3.6599048731255903`*^9}, {
   3.659904906227068*^9, 3.659904906468987*^9}, {3.6599050003970823`*^9, 
   3.659905000762969*^9}, {3.659905074168062*^9, 3.659905131737034*^9}, {
   3.659905309729014*^9, 3.659905339073715*^9}, {3.659905383706476*^9, 
   3.659905449012731*^9}, {3.659905486207942*^9, 3.659905489242876*^9}, {
   3.659905551597575*^9, 3.659905554783411*^9}, {3.659905976981668*^9, 
   3.659906061306367*^9}, {3.6599061693358307`*^9, 3.659906198538073*^9}, {
   3.65990623616013*^9, 3.659906236343533*^9}, {3.659906390915649*^9, 
   3.659906392706629*^9}, {3.6599064314377537`*^9, 3.659906432387175*^9}, {
   3.6599064675452757`*^9, 3.6599064714685287`*^9}, {3.659906565298855*^9, 
   3.6599066492552958`*^9}, {3.659906724465962*^9, 3.6599067954374037`*^9}, {
   3.659906920417573*^9, 3.659907025893556*^9}, {3.659907065582921*^9, 
   3.659907183319625*^9}, {3.659907222172114*^9, 3.659907236944751*^9}, {
   3.659907306103894*^9, 3.65990730625091*^9}, {3.659907355171426*^9, 
   3.659907383625987*^9}, {3.6599074254920473`*^9, 3.659907621882299*^9}, {
   3.6599076725526333`*^9, 3.6599076926082687`*^9}, {3.659907725400155*^9, 
   3.659907878724433*^9}, {3.6599079842758827`*^9, 3.6599079844739313`*^9}, {
   3.659908089852613*^9, 3.659908128732725*^9}, {3.659908162891986*^9, 
   3.6599082078697863`*^9}, {3.659908242632257*^9, 3.659908244222211*^9}, {
   3.659908274392631*^9, 3.65990836416031*^9}, {3.65990859003843*^9, 
   3.6599085906408*^9}, {3.659909193575098*^9, 3.65990920462528*^9}, {
   3.659909257659595*^9, 3.6599092984763727`*^9}, {3.659909641606558*^9, 
   3.659909714694977*^9}, {3.659909783295433*^9, 3.659909802664422*^9}, {
   3.6599098534047813`*^9, 3.659909860837956*^9}, {3.659910070424122*^9, 
   3.659910146436648*^9}, {3.659910256486308*^9, 3.659910306685073*^9}, {
   3.6599104082628736`*^9, 3.659910504454897*^9}, {3.659910681230981*^9, 
   3.659910686688281*^9}, {3.659910788704866*^9, 3.6599108012551517`*^9}, {
   3.659911832391803*^9, 3.6599118324868727`*^9}, {3.659911891051299*^9, 
   3.659911891298026*^9}, {3.659917587890646*^9, 3.659917593461431*^9}, {
   3.659917735271576*^9, 3.6599177804535646`*^9}, {3.659917820933105*^9, 
   3.6599178561825247`*^9}, {3.659917887584189*^9, 3.659918098912581*^9}, {
   3.659919131790474*^9, 3.659919141022876*^9}, {3.659922026656192*^9, 
   3.659922110885497*^9}, {3.659925170054744*^9, 3.659925313744814*^9}, {
   3.659926189600053*^9, 3.659926216272781*^9}, {3.659935227264112*^9, 
   3.659935227728035*^9}, {3.659971885771905*^9, 3.659971887589274*^9}, {
   3.6599719238523273`*^9, 3.6599719396294622`*^9}, {3.659972034579959*^9, 
   3.659972045371421*^9}, {3.659972102663835*^9, 3.6599721294305353`*^9}, {
   3.6599722248100853`*^9, 3.659972239431614*^9}, {3.659974708977312*^9, 
   3.659974810604075*^9}, {3.659974857537159*^9, 3.659974890303049*^9}, {
   3.659975014823937*^9, 3.6599750209965982`*^9}, {3.65997553392881*^9, 
   3.6599756332656603`*^9}, {3.659975732349619*^9, 3.659975746743086*^9}, {
   3.659975795642088*^9, 3.6599758163683567`*^9}, {3.659975868636641*^9, 
   3.6599758875675697`*^9}, {3.659975988825191*^9, 3.659976001390581*^9}, {
   3.659976234642321*^9, 3.659976283951591*^9}, {3.659976396077344*^9, 
   3.659976396330781*^9}, {3.659976476433549*^9, 3.659976509340055*^9}, {
   3.659976716718122*^9, 3.659976716966551*^9}, 3.659978326350424*^9, {
   3.659978424578006*^9, 3.6599784307591887`*^9}, {3.659978499592201*^9, 
   3.6599785010605783`*^9}, {3.6599785702018414`*^9, 3.659978601957066*^9}, {
   3.659978939666572*^9, 3.659978943147403*^9}, {3.6599798320638323`*^9, 
   3.6599799106403913`*^9}, {3.659980024750173*^9, 3.6599800983862123`*^9}, {
   3.65998017368925*^9, 3.6599802218169813`*^9}, {3.659980264657894*^9, 
   3.6599803362253017`*^9}, {3.659982197519611*^9, 3.659982236452159*^9}, {
   3.659982314432465*^9, 3.6599823905231047`*^9}, {3.659982420731741*^9, 
   3.659982427668209*^9}, {3.659982467290538*^9, 3.6599824872621326`*^9}, {
   3.659982649522026*^9, 3.6599827095526342`*^9}, {3.659982752152443*^9, 
   3.659982775872121*^9}, {3.6599829071994867`*^9, 3.6599829323374863`*^9}, {
   3.659982966613595*^9, 3.659982995599945*^9}, {3.659983359714781*^9, 
   3.659983374945204*^9}, {3.659983421627684*^9, 3.659983422264957*^9}, {
   3.659983461966023*^9, 3.65998352063102*^9}, {3.659983893058775*^9, 
   3.65998389402601*^9}, 3.659983945810254*^9, {3.659984033617601*^9, 
   3.659984071096624*^9}, 3.659984128744166*^9, 3.659984163250794*^9, {
   3.659984244772032*^9, 3.659984255457909*^9}, {3.659984410237392*^9, 
   3.65998445173864*^9}, {3.659984710782633*^9, 3.659984753507153*^9}, {
   3.6599880351649237`*^9, 3.6599881311065025`*^9}, {3.659988202401369*^9, 
   3.6599882060142803`*^9}, {3.6599882478292236`*^9, 3.65998826152497*^9}, {
   3.6601797210359745`*^9, 3.6601797986269283`*^9}, 3.660179833226342*^9, {
   3.660179926923935*^9, 3.660179952729472*^9}, {3.66018005325109*^9, 
   3.6601800566058598`*^9}, {3.6601805666567698`*^9, 3.660180606162969*^9}, {
   3.6601807195185394`*^9, 3.660180747489558*^9}, {3.6601808531393414`*^9, 
   3.660180905605404*^9}, {3.660181035901365*^9, 3.660181049041565*^9}, {
   3.660181252149957*^9, 3.660181304289377*^9}, {3.660181338749565*^9, 
   3.6601815039772367`*^9}, {3.6601815704416685`*^9, 3.660181715874879*^9}, {
   3.6601817900920734`*^9, 3.6601818722387123`*^9}, {3.6601836308420286`*^9, 
   3.6601836312013535`*^9}, {3.66018367854744*^9, 3.660183764922635*^9}, {
   3.660183908453231*^9, 3.660183949338317*^9}, {3.6601840937676153`*^9, 
   3.6601840977257986`*^9}, {3.660184527927209*^9, 3.6601845308878684`*^9}, {
   3.6601846350233*^9, 3.6601846477692747`*^9}, {3.660184689476719*^9, 
   3.660184808378254*^9}, {3.6601848536014977`*^9, 3.6601849013453965`*^9}, {
   3.660185114757807*^9, 3.6601851203106694`*^9}, {3.6601853705569367`*^9, 
   3.6601854056602583`*^9}, {3.6601854500693493`*^9, 
   3.6601854661325483`*^9}, {3.6601856028600645`*^9, 3.660185605717554*^9}, {
   3.6601859287383537`*^9, 3.660185929206683*^9}, {3.6601860543612666`*^9, 
   3.6601860858936634`*^9}, {3.6601861336838074`*^9, 3.660186138123023*^9}, {
   3.6604311824339943`*^9, 3.6604312015989137`*^9}, {3.6604428091784587`*^9, 
   3.660442812772153*^9}, {3.660443112231186*^9, 3.660443132521222*^9}, {
   3.6605050327716637`*^9, 3.6605050542741632`*^9}, {3.66050652415971*^9, 
   3.660506529910754*^9}, {3.6605066931857967`*^9, 3.660506702628146*^9}, {
   3.660506735282918*^9, 3.660506749513668*^9}, {3.660507249778352*^9, 
   3.660507289218205*^9}, {3.660507620202424*^9, 3.660507621676732*^9}, {
   3.660507711862286*^9, 3.6605077376514482`*^9}, {3.6605077830897713`*^9, 
   3.660507847016452*^9}, {3.660508321880416*^9, 3.660508329207806*^9}, {
   3.6605083907075577`*^9, 3.660508419339376*^9}, {3.660508472306511*^9, 
   3.6605084800631943`*^9}, {3.660508715770041*^9, 3.660508718465939*^9}, {
   3.6605090690792103`*^9, 3.660509227377494*^9}, 3.660509784864213*^9, {
   3.6605101934328537`*^9, 3.660510196761115*^9}, {3.660510317215261*^9, 
   3.660510379007485*^9}, {3.660510425282999*^9, 3.660510442188335*^9}, 
   3.660510574022665*^9, {3.660510609893425*^9, 3.6605106188796787`*^9}, {
   3.660519127115652*^9, 3.660519127418414*^9}, {3.660519615107718*^9, 
   3.66051962317346*^9}, {3.660519685105515*^9, 3.660519817173518*^9}, {
   3.6605208948817377`*^9, 3.660520916467544*^9}, {3.660521075861773*^9, 
   3.6605212575581293`*^9}, {3.660521431384087*^9, 3.660521446714828*^9}, {
   3.6605215074423027`*^9, 3.660521523378772*^9}, {3.6605216599748*^9, 
   3.6605216882906313`*^9}, {3.660522261353629*^9, 3.660522264226037*^9}, {
   3.66052229512206*^9, 3.660522297026732*^9}, {3.660522371612499*^9, 
   3.6605223720125504`*^9}, {3.660522408187381*^9, 3.660522410492794*^9}, {
   3.660522678058096*^9, 3.6605226791572323`*^9}, {3.660523999189706*^9, 
   3.660524018109212*^9}, {3.66052425389669*^9, 3.660524284155573*^9}, {
   3.6605244486443157`*^9, 3.660524483937468*^9}, {3.660524564230885*^9, 
   3.660524565613016*^9}}],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Compuertas l\[OAcute]gicas", "Subchapter",
 CellChangeTimes->{{3.6599255653106203`*^9, 3.659925573814535*^9}}],

Cell["\<\
La aplicaci\[OAcute]n m\[AAcute]s trivial de una red neuronal artificial es \
que aprenda a calcular las salidas de una compuerta l\[OAcute]gica. Primero \
se calcular\[AAcute] la compuerta AND.\
\>", "Text",
 CellChangeTimes->{{3.65992557757438*^9, 3.659925634581852*^9}, {
  3.659925987481975*^9, 3.6599259931860027`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"td", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Datos", " ", "de", " ", 
    RowBox[{"entrenamiento", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Datos de entrenamiento.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"td", ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"feed", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "td"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Initialize", "[", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], "]"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Se", " ", "inicia", " ", "una", " ", "red", " ", "neuronal", " ", "de", 
    " ", "2", " ", "neuronas", " ", "en", " ", "la", " ", "capa", " ", "de", 
    " ", "entrada", " ", "y", " ", "1", " ", "en", " ", "la", " ", "de", " ", 
    RowBox[{"salida", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red sin entrenar son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNetwork", "[", 
   RowBox[{"td", ",", "2000", ",", "4", ",", "3"}], "]"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "entrena", " ", "la", " ", "red", " ", "con", " ", "2000", " ",
      "iteraciones"}], ",", " ", 
    RowBox[{
     RowBox[{
     "sets", " ", "de", " ", "4", " ", "elementos", " ", "y", " ", "\[Eta]"}],
      " ", "=", " ", "3."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red entrenada son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowCostFunc", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.659908408434352*^9, 3.659908683248211*^9}, {
   3.6599087876316853`*^9, 3.659908857974122*^9}, 3.6599090510580463`*^9, {
   3.659909138929482*^9, 3.659909150116515*^9}, {3.65990986787351*^9, 
   3.6599098821626587`*^9}, {3.6599101346673317`*^9, 3.659910176662353*^9}, {
   3.659910373839717*^9, 3.6599103874460173`*^9}, {3.6599118508919086`*^9, 
   3.659911851017771*^9}, {3.659917607222137*^9, 3.6599176148370247`*^9}, {
   3.659917797277699*^9, 3.659917804499463*^9}, {3.6599181067940483`*^9, 
   3.659918208054164*^9}, {3.6599256424173813`*^9, 3.659925692705991*^9}, {
   3.65992593698785*^9, 3.6599259495604362`*^9}, {3.659926009221183*^9, 
   3.659926177405992*^9}, {3.659926505514627*^9, 3.6599265060724688`*^9}, {
   3.6601849110318165`*^9, 3.660184912455841*^9}, 3.660185147113661*^9, {
   3.660521547070999*^9, 3.6605215509723988`*^9}, {3.660522551153288*^9, 
   3.660522561938704*^9}, {3.66052278311067*^9, 3.660522784738611*^9}, {
   3.660524118578944*^9, 3.6605241209927588`*^9}, 3.6605245894308453`*^9}],

Cell[BoxData["\<\"Datos de entrenamiento.\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.660524590048962*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], 
     RowBox[{"{", "1", "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.659918194218508*^9, 3.6599182093146963`*^9}, 
   3.6599191447572308`*^9, 3.659925317748679*^9, {3.6599256585634336`*^9, 
   3.6599256935722446`*^9}, {3.659925937483941*^9, 3.659925949689774*^9}, 
   3.659926026443894*^9, 3.659926180015134*^9, 3.659926219371542*^9, 
   3.6599357061420383`*^9, 3.6599719445432997`*^9, 3.659972244677093*^9, {
   3.65997481770614*^9, 3.65997486177684*^9}, 3.6599756378226767`*^9, 
   3.659975751693491*^9, 3.6599758920508432`*^9, 3.6599765145689087`*^9, 
   3.65997897463553*^9, {3.6599800141711493`*^9, 3.659980104233591*^9}, {
   3.659980189488554*^9, 3.659980204787058*^9}, 3.659980272091556*^9, {
   3.659980322147729*^9, 3.6599803382063227`*^9}, 3.659982491934841*^9, 
   3.659982718403852*^9, 3.659983307121162*^9, 3.659983401054542*^9, 
   3.6599834836909103`*^9, 3.659983525042129*^9, 3.659983897625351*^9, 
   3.659984077475988*^9, 3.659984134171091*^9, 3.659984167133101*^9, 
   3.659984260119898*^9, 3.659984418386919*^9, 3.6599844558887997`*^9, 
   3.6599847569222813`*^9, {3.6599881660824966`*^9, 3.6599882103069534`*^9}, 
   3.659988269009443*^9, {3.66018054258575*^9, 3.6601805736547995`*^9}, {
   3.6601811502337356`*^9, 3.660181155619047*^9}, {3.660181283495015*^9, 
   3.66018131006164*^9}, 3.660181887899519*^9, 3.660183736788028*^9, 
   3.660183769085243*^9, 3.660183894374544*^9, 3.6601841022596235`*^9, {
   3.6601847309036055`*^9, 3.660184750780896*^9}, 3.660184792975331*^9, 
   3.660184912829417*^9, 3.6601851482260103`*^9, 3.6601862688966646`*^9, 
   3.660431206913813*^9, 3.660438315759759*^9, 3.6605050803613987`*^9, 
   3.66050785376898*^9, {3.660509254514434*^9, 3.660509260436522*^9}, 
   3.660510671987609*^9, 3.660521285551155*^9, {3.6605215317536383`*^9, 
   3.660521564045376*^9}, 3.6605221269873743`*^9, {3.660522283332746*^9, 
   3.660522316858247*^9}, {3.66052237798545*^9, 3.660522385346603*^9}, 
   3.6605224161627417`*^9, {3.6605225463552017`*^9, 3.660522562310541*^9}, {
   3.660522685260735*^9, 3.660522702665154*^9}, 3.660522785068421*^9, {
   3.660524111413896*^9, 3.6605241213387814`*^9}, 3.660524290893236*^9, 
   3.660524403698145*^9, {3.660524452234655*^9, 3.660524486752858*^9}, {
   3.660524569030424*^9, 3.660524590050473*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Los resultados de la red sin entrenar son:\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.6605245900517178`*^9}}],

Cell[BoxData["\<\"{0, 0} \[Rule] \\!\\({\\({0.687518638805838`}\\)}\\)\"\>"], \
"Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.6605245900525293`*^9}}],

Cell[BoxData["\<\"{0, 1} \[Rule] \
\\!\\({\\({0.3917836615361381`}\\)}\\)\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.660524590053288*^9}}],

Cell[BoxData["\<\"{1, 0} \[Rule] \\!\\({\\({0.459526398236785`}\\)}\\)\"\>"], \
"Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.660524590054192*^9}}],

Cell[BoxData["\<\"{1, 1} \[Rule] \
\\!\\({\\({0.1993096963212493`}\\)}\\)\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.66052459005494*^9}}],

Cell[BoxData["\<\"Los resultados de la red entrenada son:\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.660524590965069*^9}}],

Cell[BoxData["\<\"{0, 0} \[Rule] \
\\!\\({\\({0.0001241909337516501`}\\)}\\)\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.660524590966117*^9}}],

Cell[BoxData["\<\"{0, 1} \[Rule] \
\\!\\({\\({0.04485396869130096`}\\)}\\)\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.6605245909671*^9}}],

Cell[BoxData["\<\"{1, 0} \[Rule] \
\\!\\({\\({0.04485396870006466`}\\)}\\)\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.660524590968194*^9}}],

Cell[BoxData["\<\"{1, 1} \[Rule] \
\\!\\({\\({0.9466806168929734`}\\)}\\)\"\>"], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.660524590969213*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.0055000000000000005`], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1: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
NtOS1vBBXuKz/LkTaB0fLG/+sTdQlzbwQUDrCsOrXWn4oH5hrzvT/onYvw8m
Dh04+MkHWuiDVQWKMzmPaW8fRC+/Njm8nBb5wGnftIkxx2iJD8aVdFh8MI9W
+GBPb/mwZildpDzf66KlHhF0qQ+enPSPaPaiK30g/bfY8qADXeODd6M7LIma
Rzf44JOFfFaQKS3wxcOV0y4lj6Q1fHHZODToYm9axxcRnf6o9epAG/givMnK
rO/XTezfF3Vn1e6b36GtfVFVnT5k3yFa6Ivg81nJ89Nob1/0WfFj7WgfWuSL
orJLvSwX0hJfxAyc8ldhSCt84bvraIhRN7rIF95XtzT++RLO/n0Rt9fzbst7
dKUvwtJ3inCUrvHFqQOn1hzLpBt8Yfpi0HenIFrgh34VRpst7GgNP2h/0yt3
MqV1/CDWGtBQ3J828EMrcSvx5BY0/DD+bVrbH682sn8/9CqfW1t3mRb6wTvO
Z3OHvbS3H4au+J2/OpkW+aFwjTTuvTct8cOXFgkn8m1ohR/yOj86m2FCF/lh
n0iz99G+dKkfpn53WtCmBV3ph0F+MbUxr8PYvx88TM4Ix1+jG/xwtuSeVY+D
tMAfowo0xw6R0Rr+qBg2abtjMK3jj+MdQ/vfdKAN/OE9OWDaGnMa/mijP1Y6
agRt7Y/efn0KdDRooT9u+n7TxPdQ9u+Pw/2er02spkX+WHPHYlrLi7TEH7Pm
N4zI20Mr/NF07EmZt4Qu8segkza71wTSpf64dOHVWrEDXemP+eZz992ZSdf4
w6B3VLtZo+gGf5g2H+n7UosWbIBGu7EJu5tD2P8GGNlubJDW0job4Hxm7Ofd
FbTBBqgH9hjzspjGBqBTi/nmW2nrDVCMr/tSEUMLNyDs9vWLoetp7w0Y8uny
GutltGgDbr77EWsJWrIBXttjr60dTis2wGLzturCbnTRBmT7eLj1aA5m/8p6
Pbr33vmartyACVanty2+RddsQEi/wLxhJ+iGDZCvnfe4/05aEABsHNdgkkxr
BGD2SY2sDYG0TgA+zCsQ3VtNGyh/f+OeVUusaCjXr+a9+TGetg5A8Yi2N04N
pIUBsNva45JCnfYOgFvF95jdP4LYfwCsErdcrnhJSwIwpf7WVM2btCIAt+bo
5QefoIsCcFLe/sS/PLo0AO4bdozeJaErA3A4qPbC2jC6JgCdRYmG89zohgAc
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
Bw1zHWmNdDw+tPhykj2tlQ4rPbOJlUtp7XQMTn02u8dCum86jg9e1+Awl9ZJ
R4fCMYZ7Z9K66SgJdldrmkbrpWOvg5O/xSRaPx3WR1f7bTamDdJRvfxAq8+j
aeN0FOxJHzxnOG2SjvqIlbd3DqZNleebsrxji/400mF85P4toTZtno6ccYP7
XexGW6QjKTX987BOtFU69rcKmZvajrZOh8Ry5PCfLWibdGin/RG7NC/j/Kfj
bYDF2nvfaft0/FZ3KZ/5mRam4/7dwrwT72nndEw/Gd48po52S0d6n3E3C2po
z3Sonx2jrfuE9k7H2ds3q3bcp/3T4fbJr/OgSjpImVe3yON51+iwdBzdsfLO
8Eu0KB2nHD1XHjpHR6ejKLz7ssknaXE69DedP3OlmE5Kx0Wrx6lLD9KSdNwb
df36mz20LB3XygTeoXm0PB15nd+GdN1Ob0lHD8ev7/Zk04p0TFknOWsuo/PS
UWds1PgihS5Qnq+bVUJEPL1f+R6PLNo0OJouSscA7dO3r4TTxelwTv23aX0w
XZIO/xMZ4p7+9Ol0PItqenthPV2qrKe3M9d7LV2Wjr6jux3ScabL03HB8aLm
XQe6Ih0Vz8ZdjVtOVyrfY4t3t6ba0PeU+71WD22aT1el40jXAdePzKGr07Gl
e/5pH3O6Jh2j34b/NJxG16bDcvIoUeNEuj4dvX9NXHDCmP6QjuiFo11EY+iG
dPTcKyudM4JuVM5jftOq7kPopnTs1ntj9moA3ZyOd9M/OR/pTQtkaDdz65WY
7nRrGXoeiXaz06DVZJg+a/wsw460ugzx781XdWhLa8igfcH88GsBrSVDUO/r
Uy7+Xsr5l6HVhvWCnd/pvjLUii43RX+mdWQo6O05ZO0HWlcGvbk/oxe8ofVk
MJ3VvofJS1pfhv1rTR4OekobyPBisu6VLlW0sQzh7h61f+/QJjKUXy0c1XCD
NpUhc1HSjlflNGTQGrRn6qOLtLkM9wLzW90+S1vIMPToyP+unaCtZNi84sm/
y8W0tQzfO640vnSQtpFhSIxt4qW9tK0Mn3MDWpXvou1leGe/enOFghbKYHPp
4sK7m2lnZf12lkOqM2k3GWLcdmi9SaM9ZaifHtS/MYn2VvarFm7WSkz7y3Bh
mlOYVhQdJIN71KMbw8LpMBm2itKNpwTTIhmKvpsftPGno2XA0VzT9V60WIay
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
e0Wn+SQbMlS4OLnz1gyF98z/A6Pl88s=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 2000.}, {0, 0.1848057236542172}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{{3.65990858395303*^9, 3.659908617217311*^9}, {
   3.6599086494858713`*^9, 3.659908706339695*^9}, {3.65990877884387*^9, 
   3.659908858230485*^9}, {3.6599090524935617`*^9, 3.659909056495311*^9}, {
   3.6599091394130898`*^9, 3.659909150515234*^9}, {3.6599098683393717`*^9, 
   3.659909882463585*^9}, {3.6599101380941677`*^9, 3.65991017694042*^9}, {
   3.6599103780678368`*^9, 3.6599103883425617`*^9}, 3.65991185135435*^9, 
   3.659911895073106*^9, {3.659917599801612*^9, 3.6599176152161427`*^9}, {
   3.659917792607174*^9, 3.65991780486194*^9}, {3.659918144198704*^9, 
   3.659918208595747*^9}, 3.6599191439464083`*^9, 3.659925317050255*^9, {
   3.659925658564992*^9, 3.659925693573539*^9}, {3.659925937485333*^9, 
   3.659925949691039*^9}, 3.659926026445417*^9, 3.659926180013311*^9, 
   3.659926219370357*^9, 3.659935706140829*^9, 3.659971944542194*^9, 
   3.659972244675808*^9, {3.65997481770498*^9, 3.65997486177566*^9}, 
   3.6599756378214397`*^9, 3.659975751691968*^9, 3.6599758920496883`*^9, 
   3.659976514567854*^9, 3.6599789746343927`*^9, {3.659980014169888*^9, 
   3.659980104232417*^9}, {3.659980189486946*^9, 3.659980204785942*^9}, 
   3.659980272090337*^9, {3.659980322146571*^9, 3.65998033820509*^9}, 
   3.65998249193355*^9, 3.6599827184016533`*^9, 3.6599833071200943`*^9, 
   3.659983401052518*^9, 3.659983483689519*^9, 3.6599835250409603`*^9, 
   3.659983897624008*^9, 3.6599840774749937`*^9, 3.659984134168991*^9, 
   3.659984167132101*^9, 3.659984260118638*^9, 3.6599844183856287`*^9, 
   3.659984455887287*^9, 3.659984756921274*^9, {3.6599881660824966`*^9, 
   3.6599882103069534`*^9}, 3.659988269009443*^9, {3.6601805425803843`*^9, 
   3.6601805736507955`*^9}, {3.660181150230233*^9, 3.660181155614106*^9}, {
   3.660181283491012*^9, 3.660181310059636*^9}, 3.660181887896015*^9, 
   3.660183736786047*^9, 3.660183769085243*^9, 3.660183894374544*^9, 
   3.6601841022596235`*^9, {3.6601847309036055`*^9, 3.6601847507652917`*^9}, 
   3.660184792972829*^9, 3.660184912826917*^9, 3.6601851482260103`*^9, 
   3.660186268894149*^9, 3.660431206898196*^9, 3.660438315759759*^9, 
   3.660505080360276*^9, 3.660507853767823*^9, {3.6605092545133133`*^9, 
   3.660509260435381*^9}, 3.660510671986506*^9, 3.660521285550006*^9, {
   3.660521531751985*^9, 3.660521564044141*^9}, 3.660522126986182*^9, {
   3.660522283331623*^9, 3.6605223168567123`*^9}, {3.660522377984219*^9, 
   3.66052238534529*^9}, 3.6605224161615553`*^9, {3.6605225463539457`*^9, 
   3.6605225623089867`*^9}, {3.660522685259541*^9, 3.6605227026639767`*^9}, 
   3.660522785067144*^9, {3.6605241114125843`*^9, 3.6605241213370123`*^9}, 
   3.66052429089184*^9, 3.660524403697001*^9, {3.660524452233017*^9, 
   3.660524486751692*^9}, {3.660524569029018*^9, 3.6605245910556173`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Al grafica la salida de la red neuronal respecto a los valores de entrada \
llamando al primer valor de entrada ",
 StyleBox["x",
  FontSlant->"Italic"],
 " y al segundo ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", se obtiene la gr\[AAcute]fica siguiente."
}], "Text",
 CellChangeTimes->{{3.660510987587076*^9, 3.6605110318025312`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExpectedAND", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "<", "0.5"}], ")"}], " ", "||", " ", 
         RowBox[{"(", 
          RowBox[{"y", "<", "0.5"}], ")"}]}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", ">", "0.5"}], ")"}], " ", "&&", " ", 
         RowBox[{"(", 
          RowBox[{"y", ">", "0.5"}], ")"}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FeedForward", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"ExpectedAND", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
   RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Opacity", "[", "0.8", "]"}], "]"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Red neuronal\>\"", ",", "\"\<Objetivo\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJy1nQu4HUWZrhcCOtwGB/BwHbkkEFTCRSAIIutEBjWAMaOIIAgoqNEhgHLk
7hwYCQcQPJDgRLnoEQFPJBgVDAYJl6UIEoTJRi4JCSTs3LOzExDlog8ZdvV+
u9PfXx+94pmzHx8X/eZf/6r+6q/q6uqqv3f+3Okf//xbWq3WbzdptdZ/4/MH
x9x656V7nHkIn/sde8rQM5bs2P7ynod8d9dRP2/DL53z1q9+8fO7t6csnb1m
6KhOyft/9a7TL/7Re9tD79pq3zvHzSz5XkPmtR+45OD2ow8Mu33oqJ6S3/Pq
Yecc/thh7cv3fOCRcc88WfIDjt1lw2FTxrQ/NOlzi6eNe6bkF+74yy1OvODY
9nqtgb/5Jb/+0UPnjDj35PaJdzx6xdBRz5f8quFbfme9e8e1Z4y9YdtRExaW
fOb0/Y4YfsdZ7e3/8dRbxj2zuORr9n99zNSPXdQ+d9ZB+04YuqzkP7r9tn1/
f9zl7afGb3TftHErSj7nhZGLRm54TXv/g54+8plpK0v+xJXXPXj26O+1r+6/
ZfaaNatKfu+MDc++ZNYt5TG6vjb3la8M6MkxnxM32jHpic7wjz70SNITneHj
zj0w6YnO8Ekzt0l6ojP8v/2vyUlPdIZv8OP3JT3RGf794W9JeqIz/PLfDkt6
ojP86s+8lPREZ/iWD34v6YnO8H+fOiLpic7w86denvREZ/glB7961oCe6Ay/
7ZoLzth905+VOqPfgZ/aKumJHfyr4+5OenLM53av7pH0RGf4yx/YPOmJzuX3
+q9NeqIz/Ivjhyc90Rk+dfgLkwb0RGf4hx/fLumJzvBdxi9PeqIz/MI5/zvp
ic7wT457T9ITneHbzjo36YnO8CN/1Zf0RGf4e//HmUlPdIbPfGnsj8fuNb3U
GZ2u2mJK0hOd4Q+ds1PSk+/Dj/7phklPjvn84NFXJD3RGf7wSbskPdEZPmP4
/KQnOsM3mb9Z0hOd4XdMmZ/0RGd438oLk57oDN/iPTslPdEZPv3FsUlPdIb/
/UHzk57oDL/zE19OeqIz/Jv9xyU90Rm+2YwRPz1hdNXPoscFr2yZ9ERn+F27
/HWDAT3RGf70jK8nPfELH37w1klPjvn8/fDHkp7oDH+or5X0RGf4EX94MumJ
zvBj1vtq0hOd4X9YulXSE53hn9rqmKQnOsOf+OXjSU90hr9/388mPdEZPmbp
6KQnOsO/MWN40hOd4UdfctTFb3nbw6XOnPd2334x6Vn2d4P8a7uenvREZ/ik
rTdNeqIzfN7we5Ke/B780lf/ePiAnhyX9n95JOmJzvCZW52c9ERn+MRbNkp6
ojP8z/t/OOmJzvDvHPBg0hOd4XdvcUzSE53hGz0/MumJzvAXZwxNeqIz/PYf
fCTpic6ln57x/7TDK7NKnTm/ja88KemJzvDXXmwlPdEZvnL4bUlPdIZ/6K1L
kp7oDD99yK+TnpQD/r7dj0p6lt8f/BxzyusLB/REZ/g1nxqR9ERn+LHT7kp6
ojP8Ay+OTnqiM/zXz+yX9ERn+En3bJ/0RGf4NjMOTnqiM/y4sf+a9ERn+Pnn
//Dj2658qtSZ8zjh0T/NHtATneEb7Hl90hOd4X+35ZykJzrD1ztietITneE3
vf+wpCc6wzff5Y9JT8oHP+jcXZOepd/Bz233/0nSE53h9846LOmJzvB/fWJY
0hOdy37oni2SnugMP/PpvZOe6Ay/+fWzkp7oDJ/ce23SE53h7xzf1xlyxbOl
zpR3+z2/mfREZ/hDO/4+6YnO8H//6tSkJzrDt/7YiKQnOsNnPbck6YnO8PnX
bpX0RGf4M7f/IOlJueGH/ezgpCfHfI54bLukJzrD2/dulPREZ/hjfxya9ERn
+J+vOT3pic5lOY+YkPREZ/gNx/cmPdEZfuPbJ18x++ZqfE+5xu9xX9ITneG7
X3tz0hOd4Rd/bljSsxw3DPJv3TA36YnO8AvvXj/pic7wG9777aQnOsNnXrVv
0hOd4S88tFnSk/OBT723lfTkuCz/5tsmPdEZPvI9Y5Oe6Ax/+x2XJT3RGb7V
fnOSnugM3+Xam5Ke6Aw/fcj4Bx+euajUmd+ffv91SU90hr/4tW2SnugMP/K4
WUlPdIa/89kXfzugJzrDT/nZpUlPdIZ/9Ix3Jz3RGX5rp5X0RGf4Dve9PHVA
z7IdDvLx794s6cl5wq+4/6SkJ8d8HrLDRUlPdC7tN5mV9ERn+PeG/J+kJzrD
l+52UdITneFHHHPexjtfuLTUmd85/rKNkp7oDN94298mPdG5rP81C5Ke6Azf
be8Lkp7oXI6bPrZz0hOd4afc/cfJA3qiM/xb9/UnPdEZ/txh6yU90Rn+5KeO
TXqiM3zcxeckPTl/+Aa9DyY9OeZz29uuS3qiM/xz7/560hOd4cM3Ozvpic7w
zV/65N6LJi8vdcbf7568K+mJzvDjdp6V9ERn+NKfnJ70RGf4mL22SXqiczne
n7Y46YnO8L/etyjpic7wgz/7p28M6InO8J37/znpic7w6/tOT3qiM/z8u+5J
eqIz/NsjJiU90QU+Z/i5SU+O+Xx758ykJzrD3/3FTyQ90Rk+84ZDn9viyL5S
Z773lw/el/REZ/jk4ScnPdEZ3vP3myc90Rk+b+rspCc6w//l/rlJT3SGT7pg
WdITneHjLj486YnO8JlHfTHpic7wF67+RdITneH/cN+EpCc6w8fs87WkJzrD
XzzrjKQnesEPnTMm6clxOe6YMTLpic7w2e+/Zv1Pn1fNN/HvX5hydNKznH8Z
5GP6N0x6ojN84uRHkp7oDH/i/seTnugMf2HSvKQnOsN/ut2hSU90hr929wlJ
T3SGf+lLU5Ke6Ay/ctS3kp7oDP/Nfl9JeqIzfNZ7xiU90Rl+wkdHJz3RudRv
bjvpiY7wOxZPSHpyzOewDxx4xPqj+9uLpr/1kd1G3Vh+3v/MmjRfh/7wp4ad
eN6Iu4a0T76mPXHcM9X3hn59TW2eCr7g1dNW/qHv1vKY72208viz1p4nhO8x
au/jtrm+suPzQ1dPTOXnmN9p3Xn8b/pXriz94+/lx06plbO8zu/2q+Qf+7Je
Lruxb6CcHPO9vQ/7TPI/5z8m7fOuURPKz6V/+Wzyf97IM6dNG7eq5Gfc8JY0
/8kx/37XI8em8+WYz61fL8pfzrcOfu/WWS9PPGrGzqUd//6Omd+5+ZLrbyr9
l/MoS0bvubw9uTzme18eO2qPA3fqL+3x87vjX0v+seffVx2w6V4DfrDDz+YP
/fWmgd/lmO/dMqzw3zJ/E4aOeuN/Pw//XvBO4M+80bimvdFO8/Y9gSfzN9qp
8jnFPwT++pqBv+cCvzr5fz7wIQP4jXaq/BfJ/eLAP5wKuizw2ak8KwL/l3TC
K41+q7vWleM87wSOznn7nsDRWTk6K0dn5eisHJ2Vo7NydFaOzsrROR+Pqw2P
cVrXWXkn8LrOat8TeF3njtG5Y3TuGJ07RueO0bljdO4YnTtGZ23fqw2P7R6d
87wTOMd5+57A0Vk5OitHZ+XorBydlaOzcnRWjs7K0TnfX642PPaj9XhW3gm8
Hs9q3xN4PZ57TDz3mHjuMfHcY+K5x8Rzj4nnHhPPPSae9fqz2vB4XULnPO8E
js55+57AOVaOzsrRWTk6K0dn5eisHJ2Vo7NydM5fz1cbHq/z6JznncDROW/f
EzjlUM6xcnRWjs7K0Vk5OitHZ+XorByd8+Oj1YbHcRM653kncHTO2/cEjs7K
KV+34zjKmeedwCln3r4ncMqpnHIq57jOV7epd+XUu3LqXTn1rpx6V85nnsfx
L3rmeSdw9Mzb9wSOnsrRUznlrvNKT+XoqRw9laOncvRUrr+veup9A3rmeSdw
9Mzb9wSOnsrRUzl61nl1Pso5Vo6eytFTOXoq199RPfV+Cz3zvBM4eubtewJH
T+XoqRw967zSUznnqZxj5eipHD2Vqz/VU+9T0TPPO4GjZ96+J3D0VI6eytGz
zis9laOncs5fOcfK0VO5fk/11Pt79MzzTuDombfvCRw9laOncvSs80pP5eip
HD2Vo4tyjpXrv6ueeoyeed4JHD3z9j2Bo6fy+jhpddBTz8ddJ1x/59qtiz+n
o/v8SPK/oPyEFzrcWH625E95IUO/sV8dOL93airvPNGz13ItZ2G3KNjD1b4Y
Ly4J9nC1vyqVe3mwh6v9Lql++4I9XO3RTe3h+fOdJ7zSh0/VRznnq5zzUk75
lfPpzitfnnnCq3hQ+/r9Ufxd55/zVv91Xn1fOX7QSf3UeeVHOX7QVf3UeeVH
OX6oB/VT55Uf5bRD6qclf8r5XeX8bp2vljjWfrI32GvcuHrlk++rHz3W8206
z/qfnkdVfu3XiRvlxIFy6lU59aSccirnWOMWrnEI17iCuzjReqzPC0W9lWOv
9cyxu/9Ve66Pyrk+Kuf6qJzroyuPXp/hen2G6/UZrtdnuF6fi/pbUH7W46c3
8KL+Fgde1N/SwO9I5V4e+IdSeVYGzjG/r5zfV87vK+f3lfP78OR2wvzyU+2V
c6zlL+Lv+WDP+SjHXv0U9bUo2HP+yrFXP0W/sSTYo5dy7PP1sizYo29et2Um
rlYEe+ojr9sKE4f9Rp/+YI8demv9Ksde4xCO3upHOfYat3D0Vj/Ksdc4r8fh
suBHOfbaLurnuyL4UY69a0fUg/pRXvTzE8rP1uBfcX+0yvKiP3w2cI0HLZf+
Lt/DD36VU/46X10eK+d7rvwan3C9LlBu9Y+dK08r+7c66FYvX7y/Vf96Pmqv
/14fJ+j90YJQHq5/+fuj3mDPdTF/f7Q42HO9zN8fLQ32XEfVnvaj9lxf1Z52
ovbY6fw8dvV+qbLX+Wfs6/1PZa/zq9jX+5nKXucPsa/3J5W9zo9hX+83qr98
+5oX5oXwU+83Kl4crQ5xVecxjvmsn9cCKedqex1RP9ST1i/1oRzd8/GwLHB0
VI4u+XbxrFy/VM8YD/XrS8Xr14uK1/v/qh7z7X1eeF6Gn7quGp+x/Hp/XT/f
JeZ8Y/n1frbe7vpF/+fCeVHufL3PDuWvP5+teNGe54b2jh89X/wox4/2A/hR
ferPMZcEP9o/4Ef1xI9y/Gi/gR/VHz/K8aP9CX60vurrDfqDH+1P6H+1fdPP
Kqc/VU6/qZz+UTn9nXKu78rr408d58f7C+IjP66O9wXUn3LqQzn6unLqPEp9
vBrHyTpvUB9PxvGqzhvA6/Vecb3fh+t9d71dx3G73nfD9b4brvfdxThpfvlZ
1zNyjvn3ej0uCPaF7pFzzPeU8716+Z8Pfor46w28qKeFgRf1He2L84n2RTkW
BV7U9+LAi/OJ9kU5l5jyRF5c55aa84q8KOcyU57Ii+vlCnNey005o31Rnr7A
n07lWWnOK9oX5Yz2RXvot/FDXCgnLpQTF8qJi3ycR3viQjlxkY/zaE9c5MsT
OXGRP6/IiYt8eSInLvLntdyUM9oTF8qJi/x5RXviQjlxAT8tlWNViJNC38g5
5nv5eolcx++My/Px7Pql2G8w3s23l9geGe8qp3zufOvjOj3fGJ86/1OvdxdX
Lh50viXOW2q5+aTc+fqN/S3lzvdjrp90/Zvvf3Rern6+sR/QebN6/Mf2pfNa
VqdNN7j/r9O5n6nuX+D59XvPtz8yqu+T2w/ROFwY+B2D4w/l5XMH4eVzB+Hl
cwfhlDPsLxnkt8u8ATzsLxnkYX/JINf7+otu+ME2n370uTaf8M2/sOejp+76
fPsv//bw2Vf9suI3XH72SVeftjDwfafe9+Iv7lwc+AOPbzR+TmtZ4Ee98vGt
14xa0X5N+JIdrp88ZOLKwM8duej9H5m7KnCOzxn8d3i5nkF05tiN29W+XD8g
vFwnILxcD5CNqz4TV/22nDpuh+u4Ha7jdriO2+E6bodTLvh+e/z5vF3X9Id6
5Jh/b9X+Vre/Mm7YUb+bXtmX7bDWXlutmWPamx3+kQXB/060B7H/zNcu/f5p
V/eGeCjbidiv/u6sfSbOWRT8l+1H7C+6Z7vf3DlkabAv25XYb9V78tFzT10e
7Mv2JvY3v+22pa1pfTaeC3/PB52PSe2mN9gX/hYG+2WpPS0KfESqr8WBn5/a
0ZLg/+FUP8uC/Sapn1ge7Iv6WRHsv5/6j75gX9TPymC/T+pX+gMnXuDoovpz
/so5T+Wcj3LKrZzyKa/r0BvKTzwqJ+6UE1/5eo96fiP5mR/8PJT640o3jrX8
9AMTatfNqn8YWrtOab+xOPDwfHyQh+fjg1zv0w9eeMgr+58+v73klE/sseVa
/STH/Dt8s58sGnP8L+a3l4o9x/w7/JP/feNr+2cvCP4vPuvkkQ9NjJxjvqec
78F//3eXXv7pXz4f/Hy/Z8/eC1+PfFE6Xhj4VtdNebxvbm/gJwyftcP/XG9R
ON/3vnz2127+cOTnXnb9PQecujjw/3vvnz7/D7stDv5X/fN2U394+JJg/+vt
73/bw1ctCfabJH2XBv6+VE9Lg59/S3otC/YfT/ouC/bXJ92WB/5w0nm50W1F
sC907gv2eyXdVgZ+XNJ5ZfDzo6Rbf7AvdI6cY+JCOXGhcbtkMC7UnrhQ+xMH
40I5caGcuFD/xIXaExdqT1woJy7UD3Gh9sSF2hMXyokL9UNcqD1xofbEhXLi
Qv0QF2pPXCgnLuBbp3KsCnHyQNJxVYi3QvfIOeZ7+fpa6/nbGS+tNW6s+O2M
/2TcwnhOnxuW42mx5/5Wx4HluFbsuZ9U+3K8K/bcZ6p9OQ4We+4/1b4cH4s9
96VqX46bxZ77VbVHL+Uc6/MmuD4/guvzIPhYeb4D1+c1cH3+Al9Ti4dq/MB9
odrrc1vGrzq+5TxVhx8Ojl/DOGTw/NWe8avao4vaM37V8qCX2jN+VXt0VHvG
r2qPvmpfHw8vNPUVx43cZ+frMY7nuf9We32+TLm5L1d7fe6MPffraq/Po2kn
ul69Hs+9Jq5i/Otz0roOy8359pnz0vvW+aFdM57W+sVPMR6uxtsca73D9X5/
Se36XvHi+h3Hn/VxePTD9+DFdSiOM/dJ1zM/vuV7yvkevLieRf+r0/WmN1yn
DkjX+zi+LcYN0X7jNG6I9sX4YFHgxfU+jmOPSuOGaH9dGjdE+2J8EMe9xyd9
47h0cTqO4969k15xfDs56RvHq8V1ekXg5ySdo32hW7QvxlV9Zrwdx7GFznE8
/ImkW7R/JOnsx7fEBZzvExdqf+BgXKg9caH2mwzGhXLiQjlxoZy4UE5caHmI
C+XEhfohLpQTF8qJC+XEhXLiQjlxoeUkLpQTF+qHuFB74kLtiQv4DUlHHyfv
GBz/Kud7cMar7jkU/w4vr6PCy+ul8PK6KLy8/gkvr3PCy/IJ51ifQ8H1ORRc
n0PB6+M9Hc+vCFyfQ8Hd+nktf1k+4WX5hJfly9bLClMv/VY3fd5UP6/Fgevz
Jrg+b4K7501anmJeLK6/dfxv/Sv8Ne+7rHOXtyrmAcvbOd7sl78i/mO+IccL
PzFvjuNFfMb8L467PCbrmhduXfPFrWseuXXNL7eueefWNR/duuapc1zX/zXx
4s+1M8+dnzxf13bg8pU18e7zy61bu3F5vbrP9/Xm3OWz6j7P1Ztzl8ep+/xO
b85d/qLu8xq9OY/7Q9+c///uJ/x+Wb2/hneX/6f6W7d+yOczcPbd5c+p/tat
n/N5FP5r+kWfj+G/ph/1eR3y+UDivt035y5vRuT86TxwE3d+8r8b83U4Xu/v
/vb8Ho7X+6O/PR+I426/TJ77vCIub1e3eROw/3/LY7WueZrWNQ/RuubZ6T6P
TH084vaza3w37W+q/Hf3Wf2t232Gy3PgeXdxV9m7PA06r8tft+M+ly/CcZ33
5DPP13o+9abl1nbdnNcA+3W9T/tb+03d3+R4PT7cPtjmfaZ5Xtl3Vw+Vvc6H
O+72FTpenFcsR56/8Weee+Z5Vc7ufqeyD/MYWe6fuznu1u3Y9TzEuTzXcNyt
p3LcPc913K3Lctw9/3Xcre9y3D0vdtytE3PcPV923K03c9w9j3bcrVtz3K0H
cNyt53TcrRNw3K3vynP/3C3P/TpDx93zTcfdejzH3XNGx906tDxvtdw8cJ77
9Y2ONz3nVd60TlJ50/Ni5U3rLZU3PXdW7tZtOt70/Fp50/pP5U3PwZW7dd2O
u+fpjrv12467dUGOu3WVeV6tS9HrdZ637Hpyx906Jcfdus08r9bJdPe8xq9v
d9ytm3LcrQvN82rdTnfPlfx6e8fdOi7H3brTPK/WEXX3/Muv/3fcrStz3K1r
zfNqXVN3z+laLbcfxHHuH7pdF+fWzeZ5tc6qu+eJfj+F403r9JS7dbl53mo1
Pd9068Hc/g7lTesJlbt1v3leld89h3Xr03S/ieNN6x6Vu3XFeV6V3z0v1vVy
bv+L403rM5W7dct5XpXfPdfW9XtuP47jTetIlbt10XlelT88f8/y5v1BypvW
uyp366XzvCp/mD/J8qp+dd9Knlf7cXS+Jc9bLbefJc/Xmn+W/jPPub7E9Xh5
Xo3TulufQ/8f96fkeTWO6m6dzxv36WZ/Sp5X45zu1gu1Wm5/Sp5X45Du1h21
Wm5/Sp5X44Tu1i9V8en2p9R5q4z/+nXQrXeq2pfbn1LnlX+3PkqvX25/Sp5X
/t06K72+uP0peV75d+u1tP93+1PyvCXjh7juS/vnpv0pdd6S63tcP6b9p9uv
7bjb55Lna82Td7Xuzu8Td9ztc3G8ad9NnVf6u3WPde73TTvu9l847vb7O+72
ReZ5q+XWmee53/ftuNs/4rjLY+C423eZ59z/xnXsee73rTvu9r847vIzOO72
geZ5q+XW1ee533fvuNu/47jLO+G425ea562WW+ef5z5vgONu/5HjLp+G426f
bJ63Wm7fQZ77vAeOu/1Tjrs8IY67fbt53mq5fRB53mq5/Zh5/kY/Y9bD53nL
5rFx3O3Xc9zlnXDc7VPO8+r6qPs+8rw6L5cPR7nbT+e4y5vheNO+6TrX8WHc
V1LnrcY8P8rdfsAm7vJ+KG/ax13nOl6N4+06bzXmL1Lu9jM67vKWON60r7zO
K33cPp06bzXmZVLu9mM2cc274njTPvc61/m0uA+ozls235Tjbj9pE9e8MY67
ffd5XtnrPqY89/ugHcePyx9S53q/FvvbOvf7rB13+UnynPmZaJ/nfh+34y6f
SZ5zvY7zUXnu94k77vKf5Hmr5faT5rnfh+64y5eS562W23+a536fu+Muv0qe
c38U96vmud9H77jLx5LnrZbb35rnfp++4y5/S55X7V33w+a5zwPguMv3kuf6
PCI+D6pzn2fA8fp+3rhPts6r8ut+2zz3eQwcd/lk8rwqv9ufW+c+T4Lj+NH8
M3lelV/38+a5zwPpePE3P9zHWd6Qn1O5y2PmuMvP4DjPS1x+BuUub1ieV/Wl
eRjy3OcjzXP6t3j9zXOeX8S8pnnearn8DHnO84uYHzXPmX+I18c8r+aFusu/
2mq5/Ax5Xs3DdJfHlfFAvH7leTXv0V0+WK7v8XqU562Wy4+X51V8uv34+fFb
Jp9qlrdaLm9JnlfPN8P7+LK8Kr/mIcnztd4bK+XP8zf+xeQtyfO13jPbVf5Y
6jfOl+b5Wu+l7SoPLeOxOF7N87XeY9tVPttWy+UtyfO13nvbVV5c5mNj3pI8
p/+JeXTzvNVyeUvyvIpPl49X16+6vCV5Xvl3eX11/Srlc3lL6rzy7/ID6/pV
/Li8JXVe+Xd5hnX9Kn5c3pI6r/y7fMW6fhU/mrckzyv/mvc4zyv/mp8kz5vz
qda5zlfE+/061/UhMS9rnet4O95f1LnqE/O71nnlX/Pn5Hnl3+WJ1flA/Lj8
OXVe+Xf5ZnX+rT7PGcfzdV751/2FeV71D5o/J89bLZcfMs+rfWe6/6w49nk8
9N+L447l6qd4Lj4z2MPzv9tj/Pv8AmoPV3v226p90/5/tW/K+6H2Tfv51b4p
74faN+X9UPum/e1q37RfXe3dPnbWSRT2zftVpw32sy5uXdy9edx2Qhwqr8dh
J8SV8npcdUKcKK/HSSfUu/J6vXdCPSqv12Mn1Etet+7zlnD85u1Y9ewEe46V
o79y9FeO/srRXzn6K0d/5eivHP2Vo79y9M/rFvO01OM89n95+06wr8d5j4nz
HhPnPSbOe0yc95g47zFx3mPivMfEeY+J8x4T5835atDZXTfy9p1gj87K+b5y
jpXX35P4ZNBZOTorR2fl6KwcnZWjs3J0zusW8/ags7ve5u07wR6dlaOzcvwq
r7/385mgs3J0Vo7OytFZOTorR2fl6Nxt/iJ0duOUvH0n2KOzcnRWjs7K6+8z
1edH8f2t7n217r3VzAcpd++t5v5cuXtvNffbyt17q7l/Vu7eW839sHL33mru
b7vNNzVtcBylnDhx49N8vXeCPXGSf69WT+DEiXLiRDnPy4th4/wQDzofWM5D
Cuc5nPohTtS+nA8UzvMz9UP8qH057yec517qp5zHzpZ/SeA8r1I/5Xx1tvzL
A+c5k/op56Wz5e8LvIiHVZar/+Iv5o0hPt39UD7eOsGe+FROfConPpW790S7
90oTt8XXng9xm/ezwLyfute8n3phaC9wLT9xmH9/92LzvvvFwQ9xqH6IW/UD
Vz/EofohbtUPXP0Qh+qHuFU/8O7y5lX9Z3d586q4dffl+TjsBHviVjlxq5y4
Ve7eS970HvN8/CwI+2vq12X1v8D47w2c39Pyc6ycuFJOnCin3rvLT1jxfH39
3OYJzNdXJ9hTv8qpX+XUr3L3vvim98trOalf3d9E/eb9LzD+e8376xeG8lMO
5Rwrp36VU7/d5Xus6tHNb+XtO8GeelROPSqnHpVTL/p8hHpUjr2Wk3qsv5e2
qse8/wXGf2/g1KOWn3pUTvmUc6yceuwur2ZVj27eMW/fCfbUYz5/Zk/g1KNy
6kWfQ1GPyrHXclKPul+Pesz7X2D89wZOPWr5qUfl1KNyyq2c4+7yl1bPKbje
1rnLR9p9/k/qUTn1qLw+D9Mf6lE59npe1KPui6zP26j/BcZ/b+DrlofT5dt0
eTVd/kz+Yj5MjpXzRz1zzP2A5i2cNjhuVs74QznXLeX0g8ppV8qpp7yfeeY+
hef+C8J5qT1c14Fzvso5X+Wcr3LOVznnq5zzzZen39zPzgvjYXQo/r03nK/a
w3V9LO0iP/6cF8aN/G7hZ5HROXJdB8vv5sdF88J4ht8t/Cw157UkcF3vyu/m
r+PzwvWX3y38LDfnFbmua+V3u81HTXn0OkJ5Cv995nwj13WtlCd/XZhg8o76
/LGufy6OYr7QIs5XhXKqH7iWx+VbLr7Puo64jg5/6l95fVwX57vy96ETwvNW
7X/1T+1dP178bm84L9q5lp/+TTntP9+/9Zp5wkXhd2nn6p/+UzntP99/LjLz
kEvC79LO1T/9s3Laf75/XhJ+t+DLwu/SzvNxsixw2n++/18efrfgfeF3ac/5
elwROO1cfxc/+fmr/vC7xGG+HiOnfbrrWr5+54XnFIwD8nEyL/jhOD+vHvNp
F+c7N8wT8rt6feR39fpY76/i/Ln6od9QP5RH53koj143KY9eNymP+qmPhxeH
8qgfyqPzEpRHr6eUR6+nlEf9UB71Q3nUD+XR+2vKo9dZyqPXWcqjfiiP+qE8
6ofy6H0i5dHrLOXR6yzlUT+UR/1Qnm7fN0E59T6Icur1tCnfu/qhPHk/kbt8
7+49CPX+Re83VwX/9etmtG9l/2L+duy7zevOsRufuPGGe46g9rRP5bQT5cSr
cuLGlcf1b66fce3dtTuN2yLuF5jr7EJzHVwceNFulwZetJ8VgT+dyrcycI6L
8uq4jn5e56Xpb+N9ShHXOp9J/6PzY/QDcRzeWqe/7t/PdVoqx6qgA/YaJ/w1
tSf+i/aTv1+I/UDdb9P7Oyo/+XmGXjPPsDhwrkPKuR4op19WXj/fOK5w13d3
nXXXO3fdcf286lav78iJi3w59Tnms+F+v17OeF56v1wfV/QFrnFYb4/xfk3j
mXki197ph5TruJF+IT9Ojpw4VM58Td5P7PeIm3w/GftD5mXyfuL9FPGX729j
v8r8S95PvG8ijvP99nLzu5HTb+bPN3Laaf53430W/W/+fOP9UT0O4/WC+3Xl
XN+U6/1C3U+cf+O+XDnXyfzvRq79Tz3+I+d6m//dyLUfq59v5Fy3878b5+W0
P6yfb5w34/qf/93ItV+Fc98M5/qVb3eRc5y/nsb32rj3xbj3zrj3v7j3yLj3
ubj3wrj3s7j3vLj3rbj3trj3p7j3sLj3obj3qrj3m7j3pHAd0v2M7r0nTe8f
0feYuPeJuPeSuPeDsB9J3zPi3vfR9N4Q9/4O9x4Q9z4O914PHQ80vadDxwlN
793Q/YPuPRrufRbuvRhlvy/5Tt17Ltz7Jtx7K9z7I9x7KNz7INx7Jdz7Hdx7
Itz7Gtx7H9z7F9x7HNz7FNx7Gdz7Edx7Fuhn1b97b4J7f4F7D4J7H4F7r4F7
vwB+9T0F7n0B7r0DLv8//vU9Ai6fv3svgMvP7/L8u3z7Lm+/y59fz3sT+wcd
D7i8+i6/vcuT7/LVu7z3Lv+8y2Pv8slzvpqXnvFBfpwc88a7/PMuD7zLJ+/y
urv88C5Pu8v37vKuu/ztLo+6y8fu8qJj5/KruzznLl+6ey+Gy3/u3kPh8pm7
9z64/OQat/X8dfq8Mb4X0uUPL+Nb9Hf5w10eb5cPnHJqXm6X39vl2Xb5ul2e
bZcf2+XZdvmuXd5sl+/a5al2+a5d3mmXv9rlnXb5ol3eaZf/2eWRdvmfXd5m
l//Z5WF2+ZxdHmaXP9nlYXb5kF1eZZcP2eUxdvmQXV5il9/Y5Rl2+YpdnmGX
H9jlGXb5fl3eYJfv1+Xpdfl+Xd7dpvy9mnfX5ct1eXdd/luXR9flv3V5a13+
W5eHtimfreahdfljXR5alw+2Ka+sywereVxdPtim9/O6+1/Ny+ryuzIOyL8H
Ld7HubysLp+qy4Pq8qm6PKguf6nLg+ryl7q8oy5/qcs76vKFuryjLl+oy/Pp
8oW6PJ8uP6fL8+nyc7q8mi4/p8ur6fJhuryaLh+my2Pp8mG6PJYu/6TLY1n8
zQ/XNZuXch3zSa5rfkiXv9HlgXT5GCcMXv+6y7vo8je6PIouH6PLi+jyK7o8
hy5fostb6PIfujyELp+hyyvo8hO6PIEu36DL++fyB7o8fi4foMvL5/L7uTx7
Ll+fy5vn8u+5PHgun57La+fy47k8dS7fncs75/LXuTxyLh+dywvn8su5PG8u
X5zL2+byv7k8bC6fm8ur5vKzuTxpLt+ay3vm8qe5PGYuH5rLY9aS+YT4HErv
6+f8x6R93jVqQvsHx9x656V7nHnI745/beJRM3ZuK8eeYz73O/aUoWcs2bGt
XO0XTX/rI7uNurH91LATzxtx15C2crX/8p6HfHfXUT9vvzb3la988fO7t5Vj
P2Xp7DUD+5j49/5fvev0i3/03rZy7Pk+/NI5b/3qgH/l2A+9a6t97xw3s+R7
DZnXfuCSg9vKsX/0gWG3D+yTgt/z6mHnHP7YYW3l2F++5wOPDOyfgh9w7C4b
Dpsypq0c+w9N+tziNyKh5Bfu+MstTrzg2LZy7NdL/z+/5Nc/euicEeee3FaO
/Yl3PHrFQLuCXzV8y++sd++4tnLsZ4y9YduBdgWfOX2/I4bfcVZbOfbb/+Op
twy0K/ia/V8fM/VjF7WVY3/urIP2HWhX8B/dftu+vz/u8rZy7J8av9F9A+0K
PueFkYtGbnhNWzn2+x/09JED7Qr+xJXXPXj26O+1lWN/8jXtiQP9FHz73X51
3DbX39hWjv3V/bfMHmiHtKdVB2y61/L25LZytcfPvTM2PPuSWbe0lWt7Id4P
/NRWKf6Vq3/4zJfG/njsXtPbytWe9nHbNRecsfumP2sr1/LQPq7aYkpqL8rV
P3yzGSN+esLoTlu5+qc9XfDKlql9KVf/8KMvOerit7zt4bZy9U/72+7bL24w
0B6Vq3/4Rj3j/2mHV2a1lat/2uvGV56U2q9y9Q8///wffnzblU+1lat/2vcJ
j/5p9kB7V67+4e8c39cZcsWzbeXqn/5g+z2/OWmgf1Cu/uE3vn3yFbNvfr6t
XP3Tf4zf477DB/oT5eoffvqQ8Q8+PHNRW7n6p7+Zfv91qf9Rrv7hRxxz3sY7
X7i0rVz90z8df9lGqb9Srv7hm7/0yb0XTV7eVq7+6c9+9+RdCwf6N+XqHz7z
hkOf2+LIvrZy9U//95cP3vfbgf5QufqHz37/Net/+ryVbeXYc73n36+87Ma+
P/Td2laOPf0LfEz/hqn/Ua7lP2/kmdMGnkds/tBfb7rk+pvaytUeP1+YcvRZ
A/2tcuzpH+ETJz8yeaD/VI49/Rf8ifsfnzrQvynHnv4I/sKked8Y6K+UY0//
Av/pdoem/kc59vQX8NfuPiH1J8qxp/3Dv/SlKal/UI497bms31HfSu1dOfa0
T/hv9vtKar/Ksae9wWe9Z1xqj8qxp/3AT/jo6NS+lGNPeyjjd247tRfl2BPf
8DsWT0jxr1zbC+OFvQ/7zG/6V1Z2cOyJV/79lmGj9jhwp/62cvXP57APHHjE
+qP728o1/hmH3Drr5TT+V67+aa8LXj1t5UD7Va7+Oa89Ru2dxkvKsee4LOed
xyd9Ah/84/fw9/Jjp6T7C+WqJ/wdM79z80D/oBx7zr8cjywZvefA+E256oO/
L48t6ku5ll91c/cjcHcf1HR/BKf/Ufum+xq1b7qvUfum+xq1b7qvUfum+xq1
b7qvUfum+xq1b7qvUfum+xq1b7qvUXt3X0NcNrV3OO3Rxa3eRzTdv6s9caic
eFNOXCknfpQTJ8qJB+XUu3LqVzn1qJz6Uk69NN2vKVc9OXb3TeqHY7XnWDn6
K0d/5eivHP2Vo79y9FeO/srRXzn6K0f/pvtT1dndP6o9Oqs9dso5Vo7OytFZ
OTorR2fl6KwcnZWjs3J0Vo7OTffpqrO7j1Z7dFZ7dFbO95VzrBydlaOzcnRW
js7K0Vk5OitHZ+Xo3DRfoTq7+QS1R2e1R2fl6Kwcv8o5Vo7OytFZOTorR2fl
6KwcnZWjc9O8jers5lXUHp3VHp2Vo7NydFbO7ynnWDk6K0dn5eisHJ2Vo7Ny
dG6av4Kjs5tfUnt0Vnt0Vo7OytFZOTorpxzKOVaOzsrRWTk6K0dn5ejcNI+n
Ort5NrVHZ7VHZ+XorBydlaOzcnRWTvmUc6wcnZWjs3J0Vo7OTfOZqrObb1R7
dFZ7dFaOzsrRWTk6K0dn5eV8sXDKrZxj5eisHJ2Vo3PTvK7q7OZd1R6d1R6d
laOzcnRWjs7K0Vk5OitHZ+Wcj3KOlaOzcnRumt9Wnd38s9qjs9qjs3J0Vo7O
ytFZOTorR2fl6KwcnZVznso5Vo7OTfP8qrPOw7vnBeis9uisHJ2Vo7NydFaO
zsrRWTk6K0dn5eisnPNXznHT8w448yA6n+meU3T7vEB1bpr/V52b5vNV56b5
edW5ab5ddW6aP1ed3fyw8qb1JFpfzHO550HqH3udH3PzzG7+3K0TcM+/KJ+W
082HdzuPrTqr/27X/6ifpvUM6qfpeZyeV9PzDvh/AuHY3A8=
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}, 
         Opacity[0.8]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRESEgEgIDEwMEFAQFFQUGFgYH
FwcIGAgJGQkKGgoLGwsMHAwNHQ0O7+XkIBARIRESIhITIxMUJBQVJRUWJhYX
JxcYKBgZKRkaKhobKxscMCAhLBwdLR0eRzc4MSEiMyMkNCQlNSUmNiYnLx8g
NycoOCgpOiorPCwtPi4vPy8wQDAxRjY3QTEyRTU2OyssQzM0RDQ1QjIzMiIj
SDg5bFxdSjo7Szs8TT0+Tj4/Tz9AUEBBUUFCUkJDU0NEVERFVUVGVkZHV0dI
WEhJWUlKWkpLXExNXU1OXk5PX09QYFBRYVFSYlJTY1NUZFRVZVVWaVlaZlZX
Z1dYSTk6a1tcbV1ebl5fb19gcGBhaFhZcWFicmJjc2NkdWVmdmZnd2doeGhp
f29wemprfm5vdGRlfGxtfW1ue2tsECAfgHBxgnJzuamqhXV2jn5/hHR1hnZ3
nY2OjX1+inp7h3d4kICBjHx9kYGCmoqLlISFlYWGuKipk4OEloaHmIiJm4uM
nIyNmYmKkoKDi3t8iXl6no6Po5OUpJSVg3N0oZGSpZWWp5eYq5ucopKTqpqb
rJyds6Okn4+QtqansKChoJCRj3+Ar5+g28vMrp6frZ2et6eotKSlsqKjsaGi
OSkquqqr7ejSvKytva2uvq6vv6+w1cXGwLCxxbW2xra3wrKzx7e4w7O0yLi5
yrq7y7u8zLy9zb2+zr6/z7/A0MDB0cHC0sLD5sXUybm6wbGyu6us1sbH2cnK
2srL3MzN3c3O18fI3s7P4+IQAhIR4NDRAxMSBBQTBRUUBhYVCBgXCRkY2MjJ
BxcW38/QChoZDBwbDR0cgXFy5B0OCxsao7OyEiIhqbm4FCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MgpKRg5OShJSTiZmYhZWUhpaV
nq6tipqZjJybjZ2cjp6dj5+eiJiXi5uakKCfkqKhmKinlKSjlaWkmamomqqp
na2sk6Oim6uqnKyrkaGgEyMin6+uobGwp7e2orKxpLSzoLCvqLi3qrq5q7u6
rLy7rb28pra1rr69r7++sMC/ssLBs8PCtcXEtsbFl6emt8fGu8vKscHAucnI
usrJuMjHvMzLvc3Mvs7N8OfmwNDPwdHQxdXUxtbVydnYy9vax9fWyNjXwtLR
ytrZzNzb5OUezt7dz9/e0ODf6ODRxebE7uriHeQezd3c8u7j6+QOEOIRqZma
7ObU7/MPv8/O4uoC0ujR8+/r9fHt9+8P9PDs9u4B4+7i8eno6Ong6+/k+PDT
8PTT+fHh7vIB8fXh5ufE7vbq8Pjn7PDm7fHo7/fl8fnpqJiZtyleKQ==
           "]]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}, 
         Opacity[0.8]], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
kvWGb5zb1aiDIaOMo54L+G0d/fxCybvHt89XS8bKhsbQBvrqLm2ve77rLHBe
vfQ/3GR9z+sO15vlWfTW3uL8WZ5jb8+Ld23keb1T8g5Qc2aoOYs3SsbrJsbx
xsbe3dreNCaJ57c96z6eaVvXf9380WeB+Zvp/0+9Y0fpz74LxMAWtts5/23v
NHf+B/eynnt8ueQ9xBfvl7xX5FHip5+xRPwMMGba2x5v/GytnTn9jTfOepDx
AE/fyjkfl+Tr9D8vGdPUt3+XvHvUjY4+S5zcp+07Y3IbY3Wmz31jHG7nHH4T
8RuJ30fw7u3dL9xniH6A88H9qA/7lWz/GDVi/5K5vZ0+7Odevi2ZC5p1bLBr
drJN/Dd8Fh55XMl8+3C0LylZF6mJi2qnZn4XemcxUW+oO3C1IdrhQid6XuTn
k0rmt+eifWFJjvK55wt3ol7sZftt19nLNryV3/5w1z21f6gP9nDv1OKh7ot3
DrPNnobrE96/rxiw46+XXAc/tnENnp3rOw8syafZ9z76BN7K9we4K5zuiJL8
je8QB5ccf9U+PBeOzLcIeDK8lW8UB2j7Tcm52EaUnMu3it+WnLuYfoMj8A64
3Fj1KH2IHGnMoI8qyd/eEd+R4v1VSV8uYxwSe8yD7/HbFq4Gv+L3Ixzqd577
bPv8niIWTijJk/iNwTea4fr8RP2Gr4ihOfqcs5/v2Y3xrMeX5L7s6aKSvBMs
E0pyPt55cUkeCa6FI6f+pyS3AuOxzgH7Mc4BC9+V/v97ueQ3EfbO+MXOwTcX
+S7WmOA6PHdBSZ+x70vcOz6+UD8TB3ybYt+sy/eXUeqJngv+vsL3jvU+831j
onb2O8ZnGCd2xmsn5wz0XMb5LGfKdxHyGXe5fc3fpeQ+8sTVYuN3/iTPkfPj
d+x0bZO1X2Cfta/R3oyZa2wzj28HrMfvkWt9Fn2dPjzaNvbJPos/m7+fiZPp
rtPEcr12aiS1sou2qfp/tG3mM4/f5DPU/Lbn98Lj9mlP085c9DTPi5pM/aYu
Uw+ps9QKagM1grpHXaXmUq+oY9Q46hJ1Hp7QWSzXL3AXpvkueMGtrv9jydrP
nqjb1GzqHWdDbaY2UTOpl9Q+asu9niPnSZ0iT8MRqN/UaOoeNZjaR10l75MD
4a38Toc/kKOoDeQ3ajW1m/pJDaHeUEeoadQtaha1ippFfZvimbKvH0pyozU9
k+fFgv8eL7lXaga1o5v7ftL54H2xpI95/19K+p5aRx0kltvW/E7aQ78+XVr3
8Zx+W6Tmd4eentVLJf33U0mexPrtan6n4FlqJjWXHPaWuZLvAXNL8oDmOb/i
mXSs+U1hY8/8NduNmlxhS33zYWk9nw+0c57/MF7mleRqtDvU/N7B+p1qfi/e
wvP8p21i6q2SZ/j/8y8Zaz+X5FW0F6v53bO/Z/5uyfPkDL/Sl11qfgvjbDvX
/G64tT741HatyUXwDfmAvEBu4Ry+LJlTiIVPSsZCqcljaMNDvvDZhWpyBc6c
+Jptu6UmvwEPcf13/bx4zW9/A42Rr8U527V4dtGa327ww/ySvGGIcfSDsURe
/2/JuCYufjQ2eM9c3/WiMbGuZzLPs3hTn+LP733HEM+QM95Sv/IfrjbXB+x/
K33M3rbVB/gRPxDLxG4Pn3vHcwHjHHESp+Ti9YwdzrK/509MEAPcJ+Kb2L5H
fGAb656HGiP4CP8Qm8Qr8fmKcbaBPluiJq8a6Rlzvl8bH9t5zpzHQOOCWCE2
uHPcH+4OvJTfz/A9vp/w7ZJvCc/E+NM1Odn7oUfW9MEXoY+v6fvdQt9X8xvb
h6GPrLn2A6Hvr/n3md1r9mmvGvrGmnzojtB9anLEq0Iv2pIxfWe0B9WsgVeH
7tSS8Xc7+6jJgW7lTGpyI94/UwzXhJ5c0zeLxXOTasbdf0OfWdOvw0I/WfPv
P0+xp5qcY3jNPu0TiGFr6iOhH675N6VPQ4+ueYZ7hH6o5t+dhoSeUZM7rBz6
hpoc8brQXVoyPnaJ9r01eQTPPeizp8Nhat7/50I/W5P38Htxe38znhX6B+8M
a/d1/enEck0Ot3fNM+O8JoReqCXzQpvQF9SMx9dDH1CT04B3ZzFPJa5r8rhP
Qh9T886Bd1cxb1pzHnMWjzWvlXutUhMHGC4MXVoyj4yPdqMlcxln3t9zv715
j+E85DHz5onkk5r5+rTQ39fM0fcQIzX52lhyUc2ce3foHWpyt/NCz6uZcy8J
3bYlc9/N0R5Qk09PDN2+JXPW5dFepCXz1PnR/rlm3j879I/e7bmhz615dzvE
3Ctq5ob9a/oRH44K/UHNevZV6JNq5qc1asYrsbpaTRxgeBdbzTp6OGvXrLU7
1twne5zNXamZz1avGevE+bGhP6tZFzsGnitr3vU5oc+omfOODv1xTf4xP/S4
mjlv25r3ijv1E/FVM/8tHOtcWs1z0b6oZi4cXNO/+HYE9ybkz9Fes+a95c52
jvlTauavo0J/VLMe7xf6xZp8/TBitubfHPapGd/ENuMvOIe1D3X9A7kHNf/e
uxe2mn+zRT9q++vQJ9fMhV8SmzXz7nGhP6/JD1jjNdfZs+Yd5v5y75+oefcf
B1fNvw9/F/rUmrl2aM0x7O/hs5p1aV98X/O3R7vY+2U182tLtC+umV8Zf945
/wOC1Uq+
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtlmWYVlUUhb85exgYQEJMlEba7u5WVGwx6IYBBAVFCQEBaezWx0exWxER
ERFRMehRQlKQEJBu3+W6P9acte5377nn7r3X3lOjRVGTLimXy40H+aAmf7pF
LvcDF0uxzgF3gkfRo8BseFMwGD4SzIBXAV2Tr82HnwmawMeCqvBrwb3w7uA3
+I2gD3xJXi63EN4BTEXXBbPgd4BB8BFgLvwuMAQ+GsyD3w2GwseAavDrQE94
D3Ao/HLQGd4JXAAfD+byrtbo6fCjgT5a75gIPxs0g/cFP4bPrLPqmyeE99Re
OvM58NfALPZrjm5EvJ5Bb4YfnO19JShKfkdlfn8BvRV+IPldNcPP6p1T4ReD
dvBHQB3u74/+HV42i+3VoFtyjN+D3xa+9w/OcAn8HVAMb8+18+G1w9/aCjRg
vzHov+EVWOujR7CuQpdnnRmOoWKnGF8IPwa0hbcBU8LXxAeA+vDPQe/kHDdk
vyfQG+AVWS8Cb4H5ed5D31YnfDZ946XwuqAjvAOozfO9FU94adZa6J6sP6ML
dRb0Q6zz0GVYa6CLWL9HF7BOC++pvQaCX+DVwf3JNaLc3wz6JddAPZ4fil6G
LpfdewPolfzMZeEYK7Y6o3LdHDyenPO6PD8IvRh9EOvr4KZw7czm9/3wlmAS
ejmYHM6JctEf/AuvDN6WV8B2+FHKofIJFsMbgHeTPXF9uOZV66rxf+BHKsZ6
H2gc9oi8IY9dFfaovKkabBb2nLw2HH1F2GPyljxyCPye8G+PgWsyz8vrqrm1
8CPAm4otWAo/DLwBn6YaCHteXlcMH4QfToz2wucoprofvQf+q84oP6F3w3+S
x/T9ajysf+oM8hA6j3UF+sWwh+SdbfKozoPeB18AitELwLjkHInXAMOSr/2l
86gHyNvymOLH8/vhC8Gx6HXhs30AToRXyPe7PkneSzFSbLTnKngj8H5yjyzB
vafIE8ke2ww/HnyUXLPb4CeAj5M9Xcj9p6InJHtmV/idetf/NcXvp6G/SO4p
Cd0K/ZW+RT0GfTp6InwH2A1vAb6ELwGvwm8Pe2FRnnvDrWHvqkfsg58EPk32
QB77nYz+LLknlEa3QX+tWkuuxWXgu+SabBfu2erV3+ibwzFU7OTZhsoj+Fa9
CnRU7WX365rOuhxMTz6zamklmJFcUxvgx4EPk3vCivCe2kueL8f52qKnyEvJ
uV0DZibnWLlZHa4t5WgS/FzFKLkHvAKvyB7b4SXhnZVf9K7kb6wCHxmOdcpq
cVjYy6rJquixrGvRwVqAbs06OfladfSz4bOVCNdGcG11co0o1gey2lbMVQsl
+X1dck3Ia+vl2WTPae98fl+T/A7Vggb1yuSaqAZ/Mpyr/MxLg8O1kMtqfUC4
t6jmzwjXiGqjMfq8cA9T72qZHKtaYa6YVeL5l8O1thOcBa8XfrZpstcfCPci
eV5evy/cK+R5efXhcK+TZ5W7slzblJxD1Ub7cC2pRtQbuoe9qh6h3HQK9xrl
6KXwmXQW5VBeKYPemOwZ9d69YGlyD346PKM1m/XOIeEZUC67Z2C4p6uXL0I/
r3pGVwrP7H7hmaxZXKweE555mnXr0aPDM1azVTkaFa4h1Y5yPi6rGdWKcvxc
uEZUG1vQw8MzWbNYOe0SnnEFmUe6hv8nK5V5pEd4RhZmNa9esyXcC9VzNBs2
gbnJM0Je3xPurfK8Zs/W7Fs0gzR7dmbfrhmkXrUj3BvVs9Rryuf7rOo5mu23
hGeZZrx6Ral8x0I9o1d4ppfOavipcI2qNpWjPuGZXiY7o7y+MTwr5Pn/AM+j
X/0=
           "]]}]}, {}, {}, {}, {}, {}, {
        EdgeForm[], 
        GrayLevel[0, 0.2], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
WHPttta6S41F7/DbCr/x8DvW/6LohdM=
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[0, 0.2], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwt1NdSFUEUheEpyqt5C15EEQEBkSxKMuBRQJBjxEgyIGbAgwGQJIoZVERy
FBCFd/JfNeviq+rqsKf37u5JrooXNiQFQZCJXWgNg+AO7qINx3EUx3ACVYjh
FE7iOhpxBTdwCVdxDZfdvokm9ylWBSodU2Ot/pbmZCATWdiPVKQhHfu8tgzl
jpGPXOShADnIxgEcxG6kYC/2eG6Ox/I8N8Pf0pojKMFhlKLZOSq3Fpxzjsrt
PAbwF/8wiN+YxRzWseyaqVYrWEU/XmMN89jGDhYc6yVeOaZqewEXXWPlsogl
51TvPWkvZz23AXGvUe1Oo9o1rMEZ1KHWY/VeW+21NR6Le2/TmPEey1yjUp+B
alWMQ65Zoc9EZ1GEd3iPDxjDEzzAQzxFt/vUfoZH6EQXHnvtR3xyjA7P0dh9
j33GF8/R2gR6HEO17EWfa6r2EIbdp/YI3rhP7VG8dd+ocxhzX7/PfNBn+Nw5
aO8vvJevGPeeEj7zNe9JtdedWPEZfMckfuJHGL29DuemN9iOW7iNe27rTra4
r9g1L/IZKNYUfjnmhL+h2N/C6G7qzumuzXmvEx4b91rd4XXH+BNG/wC9/S1s
hNGb0lvaDKO3uuG23qzupt6s3qru6LRrpNrM+OzbnYvuQMzfUGz9U/4DS0Oj
cQ==
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[0, 0.2], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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

           "]], 
          Polygon3DBox[CompressedData["
1:eJwtlnf0j2UYxr+hfs/9oLSUJHvPkJCoqEOnVE5pqVOiQycqDQpZifZQp2jQ
knYqMyMjMtqbiBQRKVJU6HN1ff/4nPe63+/zvu8z7uu+v9V7Xtetf6lCoTAF
ykCvKBTWpUJhM5yM3gdDSgqFEcT70S9BA/Qo7r2MPgtWE48krou+AAowgHvd
w2M09jviV8Lv0Lu2QSEXCs2Jv0Xfzpia6EkwDL2Ke8+gW4fHNoYT0J3Dvw1n
TG30RKiX/IyefR7qE48gfgE9HPYSL9Y99BXwPfpnOAl9BxwIS4hHc70MktZM
fDnXi6EMDCS+hOtIOADe1x6Ev6FvaQ8mo8+Df9H9oBv6TghYSjyG69GsuRf6
T3iW+H6oBCuIH9DcNacSr6FBeE+1t1pjPfT1sAG9FTqG16C1jIF24TPT2d0H
7cN7pL2qS1wHfRP8iP4STtdamE8d9GDG7A2fgc5C92qhG8NY4obETdAtoIf2
Alpq73h+AXoaHJR9RjqrkdAK3RTu5vlGxM3QDbUnJc6hRugOsAU9Dk5B3wtH
wnKtgWsJ71yIngEJXT5772fDwegejHkr+Rv61oNQBVZy7yHNHcrDB8R3cX0Y
piY/M05zg0NhGfE9XJ+AoSXOySfRfWB98hw11wnhvdQYjb0WfiD+BU4NIz0e
TkO3gR3aO2iLPiQ7196FCuiAReiZkNFls3N1FpRDP8IzVeFT4kfDZ6azmwxn
oLvAH+ir4EzlpXIqec5Lwmeqs5WH5eUp8De/7ZHn0G35xnvoyuh/oBHxOcTH
6JvaWyhVzHnl/tdwXHGPtddrYWfyHDSX12BfsufkvfXwF3o3nK3c03eSPSKv
NOF7Fya/8yt4LuyNXTAEPR42oatzvRmeht+It8Nt8lp47sfCDbAHjpLPoF84
Z5Q7msM6vRsOhyOgL3wWXmulohd36oygAvSGc8O1639PomvwvqHE1dAzoR3x
xuQ5Pk78etgroxn/hvyZfXY15E30F1wnpaIHlZdwWDEHlYsfQsWiB+SFljwz
N3lOO8I5o9wpQW+FVsTzkte0C+oQd5A30AuhFnFb5RZ6LjQnnkNcFr1dexnW
5eBK2BZ+t2qgauEWKB2ugaqF9Xi+U/Kcl0I14kHyPno6NCDukryGleGcVm7r
zDcQzwvPRTVRtXFReK7yqLw6K7y3ynnl/ibYn9xT1FtmhL+lmq3a3Zr3z08+
893hmqDaoDlv1tkS903O+ReVJ8T9k3P01bDH5DV9Y6Nym/jG5JyfGs5Z5W4f
6Ip+LOy9n+Ab9McwIbkmf6J94vlfk2vkQOI22bVIHpPXKkLT5DGlVS+za53O
UGepGqpaKk+tUZ4SX5qc808Rt8iuVcoJ5caJ2b1De6C9aAbT0b/DKuUW8a3h
+ah2q2eod0yETkWPyCudifsXPSFvdCS+pug5ea878S3hNeldeuegYs4od9pw
r2fYk/KmesJgeTG7Nqnnqfep5qj2qOYNkxeze4nWqLX2LnqvPfHV8kF27dSe
ae/kcXm9K/GAcI1QrVCPGIr+PLw2eUxeq5L9X0RnqrOtnN2blQPKhfMZsya5
J6k3zQ/30rE6M/Ry5WFyjV+Bfke/M3Yt8bSwx+V1veNN9NvhXqcxGjs73AtH
qeaHkdZ/kDnoi8LvUo9Vr10W7oX6pr79UbiXKMeUa5qT5qb/aAvQi8O9XjVf
tb969n8X1SjVqkrZuSsPyAs1s89KNUG1oXb2XqtmqHZUzf6vI0/L28dn907V
DNWOptn/ZZRjyrX62bkjz8v7dbNzRzVCtaJh9lmpp6i3NM7OJdV81f7V4VxV
j1Sv/A+yoFZM
           "]]}]}, {
        EdgeForm[], 
        GrayLevel[0, 0.2], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJwtmHn4V9MWh7/lnF+ZMs9C5uFe0VzSSCKiMqWQIhpUhFLG5oRUKkkiSRQR
zaUUQoZokkrFrYSUlKFB932fvf54n72effYZ9t5rrf1Zp0zLjo07FC8UCh2K
FQoZ7fV5oXAjNIUb4CHoV1Qo9IeHsb9jUMkShcL+sAr7ffoyruUwF7u99zgW
7sZuDp2w74Gbse+DHtg94X7sK+F27DvgKm14ALuLfdjXQlvsdnAd9iVwC/at
cCl2BWiM3QQqYk+HWti1YQb2e1AJuzJMwX4b/oP9X3gHeyKcin0avOk1v8lv
cQx2ddcDuylcjD0ejsU+Dl7HHgulsA+BV7F30b5BOwF2Y79EW6AtBi9jPwe/
whYYAc/At7ASBsGz8AP8CEPhBfgT/oJR0As+hI+gN3wMy9mHFbAQ+0n4Er6C
p/K0V7Np5+Rpz37jO3pg94St2HXgV9gCdaGIMVO5Ng1KYP9MXzfs7vAL9ka4
F7szbMIuzpjJ2O/CfthV6PsJNkNVOIj+erSXwcHY59P+DzZAWXgCMu7LYQD2
v/AW4ybBPuwfoC12O9cE+xHYA3vhUTgd1sF6OAO+h5aMbQVrsbfBdvgDfofj
YTWsgRPgJhjr3kEz5wY7YCd0jnvH8KxX8vSMQ+FbWAmHwZ8wjmuvuUfYy6Ex
dhNYgd0e3tbXjAf4zndyrRmscv1gMXwN+8FkeJFro11T7BYwXl+D2+BL94xr
dd1j1wqexx7pmmF3hb/hH3gQfqP/E9pPYSv2Z7TVaC+CRditYaK+D3fCN3AF
1xrAEn0ZhmEP16f1D1gKy6CEe6k/0n7knmJPpe1D21cfwr7WGND34TrXCgZz
bYhrhj0fzsU+DxZgvw8HYB8Ic7EbwgswCq52/eifR/sBrMKuH3vs3l7uWpoD
aGe4pthjaJ+mHegeurb6HPYA19i1g9kwB0ZCoUTyaX25WInkm8ZEifDRgjmF
cVOgmPFHW462PCwM39SH94WP7ggf+St8aqbXidV9MAu7nzmBdgT0z9PemUN2
xx6WCp/T18wxxqoxbOwas8aSMWksbgjfNgb0fX3c2DCGjB1j5LmY88h459Lw
2RWxp5+Hj+lbXxQlX9dn9VV93r12zgtjzxeHz+gr+vC82NMFsUezY0/nxhpP
jzWYFXuk7+nDk8IHjRVjQN83ZoY5H9ZqLQwvSr6sD+u7+rSxoY/qm8aIe6MP
Tos9Ghs+p68Z4/qiPqEvvBy+pU+MDh/z7DGGjB3PoPvgcPblCLhfX4JnYSgM
hFM8r6ALlIHT4RF4FM7I01jnMDzuOZa+1nAnHAeH5unM9aw9DE6EDtARSkMG
ReZiyOFIuAVuhaM8P3jmk/AUDAr76fg2+zy7zbHmVs/wx+B47jsBHi9KZ3Ev
6F2UzuTq0Af6wsVQknGDaYfA/tjl4hneWz7GnkT/yXm6x7PfHG1uVgN0g6O5
doxnCPbZ0ad9DvydJ5/T1/7BPinW3LU+GSrABXAhVIQjoQN0hKPCLsV9h+Sp
z7PGnGAu8My5C/7Ed/6CNkVJa5jzzHVqDrWFOdrcrMbYznNa0raCP7D35OkZ
3rsXuzntbzxrK9yM/VP0aW/Ok1bwTPEsUTNcAxsZuwkaFSWtYk40F6pZvnf/
aW+AtfHu7Yz9I0vfsDRPz/DeZTH2Z679kqV71CrmSHOjmuUK+IFrP0ID7M/y
1Ke9KE9ns2e6Z7lntNrMM8+zTo22mvvmMe4DWIP9GG0N+mu653nSVmoGtYIa
6wC4BC6FA6Fa+JC+cxF0zdMeuncPxrOqxbWasbflwpfcY7WaGkLtoGZTq6kZ
1Apqtk4841za8/zesM+Es6LvFDgRSkMZ9z9Pfdpt8qT11AxqhdPi24urXfI0
B+89KXyvdDxbnz0n3qH2U0OoHdSALbjvaNpj4LawD4cjok9bnz0q+oy1Qpwt
xpxa+yDag4uS5r4A1sF6uNC9h5kwCxp53sG/sA8uz5O2VEOoHdSYXtsFu2NM
ydgj92b/oqRV1LBqVzXLDva4Hu1lsDNLsfI3/BMxo7b3zPesV+PvipjYG+/4
GTbCJvgFfuWeSrSVYQt2lRjjtar6H33n05aFzdjboAZ2Tfg9S88ypjbHM9XC
agy1hZpYLWzOMFeoiWs5B78daudJW6t51Dpq7NV5ijFja02etLA1i7XKnFjr
1XHNNV8O38ASWJEnLa2mUEt8FdeMyWUxZh3fvAt2w/osaXk1itpETW8su8Y7
I6b3wOf0f+EaYp8d7/Rd5zhX+s6kPcs5x9hP4NO4R21ujWNtMy18YzHjvs6S
j7h3DWmvztMeGsvzYUHEtPapcFr0qd2tkayN1PBqb2ska6NJ8W5zyKL4BmsP
aw5rDWuQW3jHjdAUbnU/85RDzZ2/x95sC9s9UotZ81jrqMnUYtYs1ipqMs9S
c4a5wjPVs9QcZO7xTLV2sQay9rGGUftaI1kbqYE9azxjPVs9c9Ti1pDWjmpy
tac1lrWVGlRta01mLabGtdax5rXWteax9rCmtZa1BrG2sEa1NrXG8Kw2J5mL
PLPVzta01rJqaGsla15rXWsmtb81sbWwNYBnuTnE3OGZrnZWE6oF1dBqBXOY
uUvNYG1pzWqtao2pVrbGsrZSM6tV1AhqgyNir9UkZ8Seq/2taa1lrQHUrtbQ
1s5qWGPXmDVWjWG1uTWxtbAa3VxhDjL3mDOsjayBrX2tkYxtc5i5yxi3VrFm
t1a3ZjHWjVlj1ZjX140BfV+f3xUxsjdiSu2jBlF7qIHULmoktZEaxrNfDaV2
UgOYy9VMaiVzurWUNbi1tzWV2lsNr3ZXg6td1HBqNzWMsWPONdcaQ2ofNZba
akicvea4LXEGt4dOcA/cDRfAZHgXLoRvsnSmepYugS/NEbASvgrbfyqrom+p
/1RgLizLknYwZ24ODTE9nuG9M7JU+y+Nsf4D8Ow3h2wIDaB2Xhe5SQ39AEyF
adAFnoHPYBEMgrfNOfAFvAMfmq+hLHwU1ybCmzFmdszRuc3JUi76BD6NnHQt
fAwL4TqYD2/BJFhgfoIXYBR8AO9BY2gCU+LbnoAB8Y2+ux/0j2/wXR2gY7xz
aqzRjJjjG/FO3zUh1nZevMs1fhFegpdhdHzrNdAovvn5mKNzGwl9YCbMgr5Q
JdbItakKD8F9cD88DDfFnJxLMxgH4+F1eC1LvlIOymfJZ96KPXgn1mh8zGFC
3DMGxsKr8Eqs3Yvx7aPi2rh4tmPUqp6xnq1bY65j4l7nrO/eC52z5MPO7WkY
GHMcBs/BCBgOLeB2uANui73oBb1jT7Qfg8ejr0esmWvVM651g+4x5kkYDEPg
qbCfhaHR90g8w3sfjW/TZwfFNz4Rz/BefaRr3OPYB6EttIY7oR3claWYNVbb
ZMl32sY1fahlls40z7JWsZfGTJfY09vjGW1iDVrHPa3iHc7todj77rG2XeNb
Osda6lMjY02vh+ZwM9wA1aEaXAQXx7UWsdaO0TcbwtVZ8tEr4QpoAFfFtSvD
dkx9qAeXweVZOqv1SX2xaaz1sNjbofGs+jHWZ1aIb/TbKmYpNo1pY7lJPPsS
uDTeUS7ucaw+XSlLMWJsVI65VQrbOdaIOTvXmlAr+rRrZyn3mFPNpeYgtXLJ
0LJqZt9dB+rGN9SJZ9SOPv8V+w/Nf2f+M/4/QT0UtQ==
           "]]}]}, {}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136, 
         151, 166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 216,
          217, 218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 237, 
         210, 195, 180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 229, 247,
          15, 243, 235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 234, 
         246}]}, {
        GrayLevel[0], 
        Line3DBox[{606, 250, 597, 462, 265, 280, 295, 310, 325, 340, 355, 362,
          376, 390, 404, 418, 432, 503, 630, 446, 604, 525, 447, 448, 449, 
         450, 451, 452, 506, 633, 951}], 
        Line3DBox[{252, 251, 512, 606}], 
        Line3DBox[{252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
          513, 602, 264, 607, 464, 279, 294, 309, 324, 339, 354, 514, 603, 
         826}], 
        Line3DBox[{489, 375, 637, 484, 592, 787, 1069}], 
        Line3DBox[{403, 389, 489}], 
        Line3DBox[{403, 417, 431, 445, 527, 605, 459, 635, 511, 458, 457, 456,
          455, 454, 509, 453, 634, 508, 638, 775, 
         929}]}, {}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
EXPX6HpHwOfW2skO4BHTuv+xr8Fnz7aXSj64kS5gmj263KFz6B3ueYm3H7Xe
+B07f9bJHsX2o82WVzSe5zvY1xsDHp8bXGbnpS/Hm2qc73hOwnMTnpc8olsw
n5i9smzZ/j73eY1+4BFzU0JJiCaf+6ftjWD12XtNHGSm26kz4NM03XE3eHQ8
NyIMMi6kYzz4/ODDmawuMf/RdNsU8Fm9yYoqJqUeMR8aNW4LPr+5OrBa3Kd3
BMyZ9rX1bc/cU3SaHFUNPGIGLniscX/PeOHaFjyuLS5hz5sTYp4zn6e+sWD1
6Xor3vNNn71qdmX7kM1DS+YzbvVr5jO0/ghWl5mvm41+c3/nnZfk1mdJlBPz
GZxYOx7SYLKjRp/15220A4+YScM6TQefzluv6YNHzAKbFebg82lrT2PwiHlw
gHVJ31KfaSdsr7RadkPAND143mttz0yuT97zu/tTT7ZuDu1+3vPN53fe86aR
QzCrz96W0zze3I94PnO29PkCPDoVug6EHGvurrE+V4QNjwSPffu4sfrssmbU
afC56fJCtg9hNr/xRTT49D1twOoSMzg2cyr4DDC1YB4xq80uaAc+N/i2qgoe
z23IrQXZIOmHYvA565Djb+ARM9HovWngc8BtB8tEn9+F+UEtFZAbQ2qkNXXM
UmBdYp1ifT6KM2YeXe3mM6/6fccyn3WzM34Bj5iPZ3Udpmk/+jCsEfOIeSC6
L9vfO7Ueyc5JmEHXr7PzUpu8pDjwePjrZRGQndLaBoPPUTW9Y8HjHqu14ZBL
vht3AXxev2IWDB4xh33XNBF8Nk10ZusmpvO9GhM1+fTu29gIPGI+H3bAEOZ7
QM/Ui+ARc+qoP7zBJ3pEr+izxZK9Hz7cnCZgVn3cvaH93Cfc93VXB+24NnS4
vYA5xerkYHhf+mmHEAu4H6vaGLFzbO4Wgd2XlQYJxwOq/CZg1l5XHOPg9oT7
3iAneMT6mj8lC5hLCwPyXoRnK1JbftIHxo25pfr5MzD+eM/h1fqtuCDUtXr/
pW1pWjaYNXTwkscKfbsdV2F8mKvKxsnrnzfOwXbzsqHfIA//55A3V69zgf7b
2e24Av1i7inrf0tRbVafv+cPNH+zPvE68brxekdG3TCC8WOa23kNhv6T2nRL
PeoxUMA01DcJgP53m26pYleYKmD+4V7H9/SUbMVHg4MUMb+cE2ZXTbWGrBbm
e3Vv0hNFWPyrcZf/dl7AvPugi/Ocak+4/R9vMcQGPo9Z/Pco1s+Amdn68H3R
fi1eDypNYYAb+97sXw09oF9MPfePXaF/PWVbqJq5xIkTJ06cOHHixIkTJ06c
OHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixN9tLmrE
iRMnTpw4ceLEiRMnTrycfKFqEidOnDhx4sSJEydOnPg7y6lRo0aNGrVK0Hj7
0p/F37XxvGv9U6scTdfzhrh6XtH5pf1zp3ssGL91e4YCUxt/O62yrc8VbZWl
fv7q7a/rJfRh7L6iLJPD4u/n8YmOlpbF/hnC07Yutj13ZWjl4s9r46vMlZ//
zUHZnzZOjRq18renoW1CdyZbC++brT5VUpIjaOMrzNanbLesZa38r1yt/K/e
nKJXsesf88eASUeSrRXauLLlCo4R1RP0WkyyKh+nRq1yto/69If6FrDetXHV
xlsH3t76cLmgn9px8nj5xvn2xi/Xf72lR1I8FLXwnKaV67rJ9e9xtFlqgZ10
H+FxXbcrX6j3zON5iTkpHW2lnnlc123l0wFqx8njqu1/X/84Prve/dXuv2KO
4zs9/7MU4/ZYL9q47lpFzw8m8RveOE9p47prOM6y+SoZv5jjOAMXb0jZbIn1
ro3rruE49+eq9y/mOM6ZNQ1TOraW+lfPdddwnCX56v2LOY5Tdb3XxnXXcJxm
nPGLOY5z7vIHCXo95yZo4/h8sjPQHJ5XFNo49qP6vMLnctdP1fN9rlZulae+
Hx4f3PHbtXoTliSI++Hx8Jfq91keV11fcrVyuecT1fmfq5WvLlQ/Th5XnZ+5
Wrmuz1f4+bJ6kdS/mIs/r41jP2X3U9K/mGM/rW60P6SnJ30+FXNdrz/YT4Nn
6v2IOfajeh7k84ruX6rnNT7HfsrqRdK/mGM/emrbf3+uknveVl1Pc7VyXTfR
fZHMIx6X57/yNDz/ie8LjycHmKt9L8fjla3heV18XTwu9/1kZWty72/ZeUVy
XTxe2Rqup5z1R8IV+ervI49XtobPD+Lr4vG/+v3F/V58XTwu9/6acfrh8fEv
1PfD45WtifYp3r72b47X01i5/kmed8S8sjW5+zte15rn6q9XzCtbo/urmeN1
fVCg/nrFvLI1vC58H6yN/7/cX3z/oY1X7P2M7sfTcJf68Yi53IbP85z3RRI+
b7f6fZ/H5bbKdh6Te34om/+S7+VxuQ3fL4i/l8d1/fwl936V7X+S7+VxuQ2f
nznvxyQ8NUz99/K43CZ6ryWZ72KO3xf5TP16K+Zvazy6Os9U9LxhE6J+PGJe
0fHg+1ptvLL6ecrZr8WcmuYm8sbzLOFlz3MS/2I+t/WsBL2Oq6XvMzkc93vx
usTj2dut1+p5SH9n4XG5/ac2mKn2dxwex/nAWf8lvKa7kDJVze8UPI7zX9wP
j6s27e+55Y6/c+2MBL2ekyQeeBznJ+f9oYTjebS8vOzvGwiY2rhcP1jfnPcb
HP/l/30BP4/nF238eHdj+B1T4pnHG3M887hynqr5PYLD5daPbxshZYKaOudx
ueMvq0PJ77w8js+3nPPtWx9/2X2UjJPH5c4X/LxqvfC53P0C+1GtFz4XPYfy
nlsl/av65nPsB5+ftHHsR7Ve+Lyyjl+1XvhctI/z9n3O/V3Nub+rJfcXn6e1
8Yr2j8+j2jj2o7qf83lF+1fdz/lc7vqP/eipbfz9BZ9HtXHsR3U/53PsB58v
tXG5z7PlvU7ixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHi
xIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHixIkTJ06cOHHi
xIkTl8e1/7mK/Xunur6Ot/U9xIlXhOcqOH9Owsvmj4IzvyQcvy9u6+duu14N
6VFOrhj7rPkOm64Xxf++4p/FhRV+5i6mnl0PlZOX2w/242fUMzzkkoukfw6X
3b9MrqgT3u3WyzEXxf/eKY/L7v9Z+PTYM0ciJf1zuOz+NyY1/eaf085J7i+H
C4cWZVl9ctlZ4p/DZfuX23+PL88N/H7kecn4OVy2nwNtnZuHzPSX9M/hsvvf
vvxzq/pumyT3l8Nl999lQ6Ph0+yl95fDZfdv1/CYU+t2NyX9q+f/+f+64bmC
fXCUx7IdMyTroZiLzi0KbfztjJ/4/zfX3XwRnRO08rLPy57vMnlFz/O63rd1
dN1yx/1fj4s4ceLEiRMnTpw4ceLEiRMnTpw4ceLEiRN/J/i/APz64KQ=
      "]], {DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        TagBox["x", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["y", HoldForm], TraditionalForm], 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline],
            "CacheGraphics" -> False], 
          Spacer[0]], HoldForm], TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {{0, 1}, {0, 1}, {0., 1.}}, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Red neuronal\"", "\"Objetivo\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.8]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.8]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> T\
rue, FrameStyle -> RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.660187213874543*^9, 3.660510673498283*^9}]
}, Open  ]],

Cell["\<\
La compuerta XOR es un poco m\[AAcute]s complicada, y necesita una red con \
una capa oculta. Si no se agrega esta capa oculta la red converge a dar 0.5 \
como resultado en todas las entradas.\
\>", "Text",
 CellChangeTimes->{{3.65992643309614*^9, 3.659926486361459*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"td", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", "0", "}"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Datos", " ", "de", " ", 
    RowBox[{"entrenamiento", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Datos de entrenamiento.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"td", ",", " ", 
   RowBox[{"Frame", "\[Rule]", " ", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"feed", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "td"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Initialize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", "\"\<Quadratic\>\""}], 
   "]"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "inicia", " ", "una", " ", "red", " ", "neuronal", " ", "de", 
     " ", "2", " ", "neuronas", " ", "en", " ", "la", " ", "capa", " ", "de", 
     " ", "entrada"}], ",", " ", 
    RowBox[{
    "2", " ", "en", " ", "la", " ", "capa", " ", "oculta", " ", "y", " ", "1",
      " ", "en", " ", "la", " ", "de", " ", 
     RowBox[{"salida", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red sin entrenar son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNetwork", "[", 
   RowBox[{"td", ",", "2000", ",", "4", ",", "3"}], "]"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Se", " ", "entrena", " ", "la", " ", "red", " ", "con", " ", "2000", " ",
      "iteraciones"}], ",", " ", 
    RowBox[{
     RowBox[{
     "sets", " ", "de", " ", "4", " ", "elementos", " ", "y", " ", "\[Eta]"}],
      " ", "=", " ", "3."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "Print", "[", "\"\<Los resultados de la red entrenada son:\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowResults", "[", "feed", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ShowCostFunc", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FeedForward", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Resultado de la red neuronal\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.659926458268635*^9, 3.659926462420582*^9}, {
   3.659926494755622*^9, 3.65992651798256*^9}, {3.6601849189124985`*^9, 
   3.66018492031876*^9}, 3.660185130021467*^9, {3.660187322400281*^9, 
   3.6601873228206015`*^9}, {3.660522715314034*^9, 3.6605227191034803`*^9}, {
   3.660522766786484*^9, 3.660522769336031*^9}}],

Cell[BoxData["\<\"Datos de entrenamiento.\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.66052276973333*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], 
     RowBox[{"{", "0", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], 
     RowBox[{"{", "1", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], 
     RowBox[{"{", "1", "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], 
     RowBox[{"{", "0", "}"}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.659926523336327*^9, 3.659935709809491*^9, 3.659974823960455*^9, {
   3.6599757556691027`*^9, 3.659975775590789*^9}, 3.6599758512513657`*^9, 
   3.659975898540893*^9, 3.659976517642838*^9, 3.6601837967755013`*^9, 
   3.660184175907095*^9, 3.660184920678155*^9, {3.660185131398597*^9, 
   3.6601851369007473`*^9}, {3.6601873167266507`*^9, 3.660187323432461*^9}, {
   3.6601873602834463`*^9, 3.660187368863626*^9}, 3.660509268114694*^9, 
   3.660510673919313*^9, {3.660522707680407*^9, 3.6605227393480463`*^9}, 
   3.660522769734846*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Los resultados de la red sin entrenar son:\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.660522769736404*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.345931}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.660522769737377*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.363893}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.6605227697383747`*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.338696}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.6605227697393513`*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.308724}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.660522769740355*^9}],

Cell[BoxData["\<\"Los resultados de la red entrenada son:\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.660522771006694*^9}],

Cell[BoxData["\<\"{0, 0} \[Rule] {{0.036701}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.660522771007574*^9}],

Cell[BoxData["\<\"{0, 1} \[Rule] {{0.967671}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.660522771008316*^9}],

Cell[BoxData["\<\"{1, 0} \[Rule] {{0.967633}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.660522771009096*^9}],

Cell[BoxData["\<\"{1, 1} \[Rule] {{0.0337957}}\"\>"], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.660522771009791*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.0055000000000000005`], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJw013lYDO7XBvBBCCEKoQghhKyFcCOKQiRCGKlUQps2qWnfa7aamWzZkxBC
lhiEEEKIQvbsIb7Z33mv351/XB9nzpznnPM8oZfr2rnuTQUCQXlLgeD/f//f
r7qJTSxvZo14o57IP8Cyc6bDXvucpbVxqaA6OXT6GVoX4zPOXfpTXkzrI/vI
0zaTNjfaAL/LbY93jm60IWTjhzyZs7bRxnCNT9g+b1mjeyNO0XTCcIdGm6Co
9dj9kyY1uh/yjla52w5vtCneL7ivGtan0QNh0v/rym96jTbDBUelq1ir0UMw
2PbmXsG307Q5TgZ+em/9stHD4PBquJ7L3UYPh25SpNHUi40egXkXHnb/V9jo
kdiatmdA0s5Gj8J8j0k+z2SNHg1jA5+OrWMabYEege3n/fNrtCV6rW7nf07Y
6DEY8qj/sdmzGz0WtqMf+u8d3+hxUAptmt0Y1GgreKZ3uXa6a6PHQ3/1otHr
WjZ6AsTLPE58rz9FT0S69Gg5njUaEF1XCxxv0iLA5PP9u2anG+OTUGnU8Px6
bmN8Eipitl4aldkYn4whr7cYu0U1xidj3+vajc6rG+NTUNt72ZuOCxvjUxAy
c7Naat0Yt8Yft/NP7g9tjFujvrdlm2fdGuNTsbs6pO2h5o3xqVjbpOKYdd1J
xqeh1mfYo00PadE0GF66s/hESWPcBiLTbnrZBxrjNhg+f1LtBGVj3BYlR00u
7olqjNvCedk/RYV3Y3w6bCIHO150bIxPR828j+9DrRrjMzCnU/9lX0wa4zNw
+2e/PUPaNsbtEF/qc3HItxOM2wFt1hR/qaYF9qhbKswMK2mM2yPvn9b8S/sa
4zMheR/U+p60MT4TqU9/nd0b2hifheBVlXGThI3xWbBb2H/15mmN8dnIvlqY
WGzWGJ+NTd0evd/WsTHuAOWLtQdnNBT9z3DASxfF6+OPaJED3owu2f/mPK12
wMNZW7rX7KEFc5A/46fdxtTG/DkYu6JiUXe/xvw5sI9xcBc6NebPwftXZ5O8
xzTmz4Vief7rMUaN+XPxYPWbrTcEjflzMdRkX4Xpi+PMn4us4Tv22l6mBY5w
rO1jPSSPhiO03KZfe5BKixzx+J2pp93axnxHPPNtMS1mTmP+PPSwEEujRjTm
z8NLuXHEtE6N+fMw6Uhzq9vfjzF/Hj6b32zat5IWOGG/aJvOxBM0nFBzK11h
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
O9DOUSh1yfDd+tOH+4+C/tiSdu+e055RiC65+H7+ddo3Cq0v7Lvy7BgdEoWa
FqPc03NoURR83S5GLkymE6Ow68iKh1MCaXEURPePj565lFZGoaBMe8E6Wzon
ChPPjv17ajidG4Wn/a5/MjaiC6IQ9Lby046WdFEUpEntLlh/WcX9R2H5zMIh
zR7RpVFoGrmz4fFlujwK83fZvb5/mK6MQrvS3ec+bKZropB8YtJs4yS6Ngqu
HqOc1wbSdZp5Duy36+EyuiEK9kMn/1tuRwui8fzyRPPmFrR2NF5UL25a0pvW
jUbkfGdsaUcbRAMZYUdlP725/2i4XEsavPMVbRoNi6PXA2/eps2j0atGx7nT
WdoyGndnpexct49GNEYKWpnWKWjbaOSK1AWxsbRDNHqL3NuO8KOdo5G4uk/b
X0toYTT8O2+KrJ5Be0bjtt2rkfctaN9ozf1P/fPWhA6Jxsb9KXldOtIiTVwx
p+2Sf17cfzRafzn138n3tDga5i87Ww17SCs1/d/vvv/sZTonGpvM64w8jtK5
0TjQx8TVZAddEI3ikEMzf4rpomhsWPqz8HUErY7GsvGlPu996NJodBbPmKG9
mC6PxtKznfqMm05XRmN0k97XYy3ommj8trra42VfujYafz9f/bhYn66Lhnvv
SfpvmtIN0SiZtNcj9bMn9x+DG/0eF0+tobVjECsw+KJ/k9aNQdbsd1U/immD
GIx9ZjOvPp82joHyTvBIrU20aQwEGT3mD0ihzWNw+K6FbEUYbRmD5aWdLx32
oqH5vq9uVzovpG1j8H1Jr5AMW9ohBjWbt+43tKSdY/D4XfzUM/1pYQwyrW51
D+xCe8bAyeWqzoSWtG8Mvui0/9b9v5XcfwxC+6ceavuaFsXg5tkNPfXu04kx
KLRbY2h2mRbHwLBsVLzzcVoZg1U/GsYq99A5MTD2N+36TkHnxiDtfeQ/h0S6
QDNP7+bXr4TQRTF4uVZ7uZMXrY6BjlWvjV8X0qUx2KllvnjnDLo8Bk1GukSt
HEdXxsB/r95HKzO6JgaKX62iTYzo2hicKLbo0aMdXReD+5ce7Bjwz4P7j8HI
9b710+poQSzGG5z9vO4prR2L+U2vbTh2m9aNxeJOVWHaJbSBJv496Nqqo7Rx
LMZ6esyt2U2bxiJse8EXdyVtHotpezdm/E6iLWPRP3efzs71NGKxd9b2mS6r
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
k5vlw3SNiI72muqcdLpeRKjdvO7XU+kGEQ/N0nNqJfqViO/Gd8vQ30c3ifgh
yuxNj1/oDyJmPf07eeQuulWEMqJ+h18SrSehRQl+FPs/2lDC9fQjm6XNtJEE
Dx/zjRc30hoJ39u/L/9rLW0i4ZCFNso4lu4iYfPqeYsdV9EWElq/VXJ8l9OW
6v+DlembImkbCVuenBt5dBFtK8G/1D2maj5tJyHxTIZh2xDaXsKPR3s/HjqH
dpSwztai3fwf6CESZhg82Lh3Fu0k4YG2ZGKJF+0iIeKCs++/02lIMP457tRg
d9pVwtVz+oGL3Gg3CfpTOnqmudLu6nq5Bjvug/aQ0P+1SxfzUbS3uh83s788
nWlfCXkb6lt2DKX9JSwvMvW9PpCeK8Hl9KtWjQMdKmG756O6qd/RYRIajFws
dn5Dh0s4fjo06U4veqmEeuXMRAtrOkqd95Ld4wO70zESzo6dFXewK71GguMv
wV++/IreICHY2+zacBM6XsJPt25e36ShEyWcKnpjetOI3i5hx+xHey2/1PWv
vn/n5h8W6+v6lzD5sRh47rMr+5dgZu2o1XykJQkXtpv3mPOeTpXw87ST906+
odMlvGycf6NtI31YnWdQil7gCzpLwpWWzIhTdXS2en5RBmYda+gcCRav2rxf
8JjOlRD55muTgmo6X4J1yMFg6yr6kgR5h+afNRV0oYQxtmeO3b9FF0v4Y5gm
Y+QNukzCrZErKqQSulxCj/bezv/9Tt+V8Pmh+e3gArpSwlYvW23RRbpagt/8
Z9r++fRjCUtWFdxJzqVrJAjj7UZ8zqHrJaS+XHt7/gm6QcKgDw7SraP0K/X3
sYf2jMqkmyQcaT/9cuYh+oN6nu+Tu3c7QLeq90m/Jj1RS+vJeLbtsH+LSBvK
2OI5fdziFNpIhm3kBJ+HybRGRpPfh+QZu2gTGT0bK/SKk+guMhoC3VNGb6Ut
ZBSNLPE7nUBbypgSdWHSgDjaRkacV0rgr+tpWxnhG4oU2zW0nYyf/j3Xdn8M
bS8j1742xWol7Shj1NXTnvIyeoiMygfKwB6RtJOMqtpOTsoi2kUGjqwOtVlA
Q0aIh/fpAyG0q4wjPpr+dnNpNxkvd5sXH/Wn3WV0GF2bMGQ27SHj/KOXYfk+
tLeM7QHpERNm0L4yOr2LTb45jfaX8XFkXbXf9/RcGU42gRPrJtGh6vzrvMuj
XOkwGb0GjI01GEuHyyh9kTJ+9yh6qYxBC2/3sx1BR8nImxw66PQwOkZ9n4Sr
MycPptfIuBIZkfJgAL1BRnLGnffL7el4Gfb2S5cZ96UT1Xm6q/PvQ2+XMfh4
/zznXvROGd2mYfMdKzpZxuGY8MWR3XX9y0i43W9xOwtd/zKeeH2Iy+ii619G
jJv7qQmddf3LyJme9m9NB13/6n79V87Z3E7Xv4zNp3Dvm7a6/mUMe7t+3jUD
Xf8yVukfN47Q0/UvY67VlILOn8ezfxkD/ry+60wLfUndT9czUYHv6UIZk43j
Frd5Sxer923o8ZXHG+kyGa+X5/08u4EulxFQb33F8G/6rgyXjkEGJ57RlTL+
zfrkE/iUrpaR+CAyT/OIfqzOx2hE//z7dI2MjbXV2eGVdL0M9/X3xltV0A0y
fL/LfFZ+i36lziup4pf4G3STup7yp5dzKf1BRnDqCOvGIrpVhqZPdPPBQlpP
wVqNaXXAZdpQwar4pDLzC7SRglij8OLys7RGQc8gx5vbztAmCn5ND3g8KYfu
omDJ0OhPhidoCwVRBXo2BUdpSwUhU9ZN3ZRJ2yjYYxoVNy6DtlXgmj3/skE6
bafAy+B+m99TaXsF8cNnev1Pph0VJBcEHJoq0EMUxC2M/s90L+2kYNKwvoFV
u2kXBdEbWy6n7qShoKkh8ruFSbSrAsN5JnsHbaXdFFy0ntf2cwLtrgByU2xx
HO2hoF/GxNfJG2hvBc4efy0MXkv7KpCaZtQ4xtL+6v+drebqRdNzFeS1v1Fd
voIOVeCd9mJ22lI6TIHPar17URF0uOqAPV5ui+ilCrbOHH7TcgEdpaDX+YjJ
b0LoGHU9h8LLxXPpNQqe7rg6PDWA3qBgSrvPmTF+dLy6/6/efz1jFp2owDHY
ZYu9N71dgVXzD41tPemdCjy7PplRM5VOVtTvue+Jy1PoFAWayGntUifRkqJ+
/z0C1rvSqQpK2zT8Omcsna6gbO2xRoymDyuwrOzj0HsknaUgH49D2zjR2Qo2
fRu++/kQOke9H/DNuzmQzlWgFz/4j1MOuv5VOyT9LfXT9a9gxYWmN/F2uv4V
dG5peR3RR9e/gqwa+9pZvXT9Kxhe2uPmOGtd/woqnAOyHCx1/Svw11uztns3
Xf8KBg1sP87YXNe/AqOeUkuzqa5/dT4LLh2o66TrX8HMamNUanT9K9gltrtx
zVjXvwI/fZ+p+W10/SvIOLL6/HEDXf8K5B87W6Xr6fpXve3XyH2fx7F/BcK4
e8d++kjrabEHDg8TmmlDLWoWjGtd10QbadH0Z4ZRzGtao7r1zRfLX9ImWmxe
mvs8/AXdRYvuFkkXw+ppCy2OmLXZOO8ZbamFUWmuQ8hT2kaLa5UjioMe0bZa
yFa9pgZV03Za+J8zPB9URdtrYan5sWvIH7SjFuezzPzn3aGHaDE7etnWsHLa
SYuB8b3Twq/TLloIfQvSlpXQUPf/qW5bdNG4Mf8HBv3VhQ==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 2000.}, {0, 0.13211674560301392`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.659926523335422*^9, 3.659935709808485*^9, 3.659974823955433*^9, {
   3.659975755667941*^9, 3.6599757755897427`*^9}, 3.65997585125035*^9, 
   3.659975898539406*^9, 3.659976517641632*^9, 3.660183796759884*^9, 
   3.660184175907095*^9, 3.6601849206625185`*^9, {3.6601851313960896`*^9, 
   3.660185136898259*^9}, {3.6601873167246513`*^9, 3.66018732343048*^9}, {
   3.6601873602814455`*^9, 3.6601873688606267`*^9}, 3.660509268110463*^9, 
   3.660510673918026*^9, {3.66052270767916*^9, 3.660522739346429*^9}, 
   3.6605227711038647`*^9}]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyEvXlYjd8X958o8zxlnjKTecpwFKJMEcocypwoRIYQDeaSBkOmVGRKE4mI
BoVKpdIczXWSoULpd76/Z7/X6jnX9bke/5zrvFr22fu973vfe+17r7X7rDdd
bKyooKBg20RBoaHs84aBT5DdMPNp+OzdZK7Tvuibkq1q09z6az+WgFufaaHU
7JS35F5hap2qdhjxXh+vbfx3z1eiGtxhTJBJDPHMHIt/E3VDJB/CB/qpan8k
7vp8qOFz3yjJSbXwdyZpn4i/imhkq5SQJNFyWZ8faJJG/ELhnl+ue3MkDRT+
9y+beFu79y3DTxZI1vp/OK2qnUv8p1/M15dbSiTPN1/tou34lfi0+X23xG8o
k3Trsd3TJC2f+IYPJfv1lkgl++PVxziqFhF379XI7nC4VJJ8ounLQJMS4n/X
2488VSWVjFNPmZcWWEb87eqRS7orlUscpJ6pdXXlxPXzlTemVkrpO3S9lPzv
l4qDN+mMT3OjwR0/PvYlncEP9QsLTV0ZQjqDV+++Vdn0eRTpDL7DIe3MovQk
0hm8yuyeSfWBHNIZPFlfreDD2QLSGdyl7VrVf9tKSGfwnxXudqVGZaQz+Ear
KVVZMj2hM/jlEyudIsNZZ/DilPYGj6tYZ/DN13u2HinTEzqDq7cdqZEl0xM6
g7uuKx/tEM06Q79lW/5mej/xJTvw9d0ufT6yKYS+4/Ok98i6lVFRpDP4uncz
Bl7PSyKdweduXeGkfzSHdAZf8SpZkuxYQDqDP32XN0J9RwnpDF6WpKnUeGMZ
6Qye9e3bgO1LpaQzeMvrLyzbRLDO4OZWZttSq1hnsr/z8/kMmZ7QGbxf5Kv2
eZV8PYNPd9poZR/NOoPnh/WaY2rOOkOnXupLFquZh5DO4HrWSw74JUTR/wfX
eJi2qEKaRN/xaTiiweZAmxzSGTz37dnOmc4FpDN4xZi0xnt2lpDO4G8vbMvq
vamMdAbvf31C02qZntAZfM4TzcnLI1hn8MaLHm5VqGadwZ+sDzLUl+kJncHb
H32RUVzJ1zP4Rp/+b45Gs87gHyLMri41Z53BT5scHtcmiccX6HHmw9ntbbKi
SGfwhi0lLWZVJ5HO4F8O9S3ocDqHf0/wqJNddny5VEDf8dnxYfC9B2YlpDP4
70t7O6tvLiOdwdtKp7lbL5OSzuCSZrVJNyJYZ/B2molLB1azzuCXA7ZVbZXp
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
Cqj+4CU/dcL0TUuo/uC3Xl1XdtpYRvUHb901tM/jevWETmNLx89alxpF9QQ/
rj0k49KPJPqOzzKt2u/ZrgVUT/CzVbcVHHeVUD3BK6ofnLu/qYzqCa6/wDBj
6jKpZIOT5IJJmpS4UsPzRT9lfhDqid9Z06Ess7wmidoDfts63S7vSgH9f3DD
mEEtYsxL6Ds+2/T5sDdicxnVE7xOK3XuW1l9lLN3Kms7lhLvcjlk9gtZfVBP
8KtO2wY2fVpKuqG89rfUrxZeL6B6gk+vXZCnuLeE6gl+ffPKkMwtZVQu+CR1
A5Ml+lKJ99Cb+1W1i4mf2XDN1VZWH9QTfOC/8jPXZX4i6gnukG6Q3Dm8mPRE
PzTZkT2i2KOA6g/eaLTT6Un7Sqj+4HUf/Qwrt5ZR/cFjNJprZsnqqWORUFpX
x/eTfdcJ6bqyeqL+4O9HjMiaIKsn6g9uZWcRtupNMdUf/JO1kmaRzJ9F/XFd
Kw3YrWhqWUL1B188caxRS5nfivqDT1jZO3qLzG/F+APuduhYu66yeqL+4C0c
B3SLlfk1qD/42eOHztyQ+YmoP/jQyGdXnttxPTFOHJs1KbKfzO9DPcF9N4Ur
/ZTVB9/x6a99ZPKXBB4nwT+fTtDYKKsP6gn+vfnmifkyPwv1pN9dt+Kjgy3X
B+XNGDbo1yGZf4R6g0+dPEL/XgKPb+BvbMfo1crmz/iOz4krxr4eIvtd1Ae8
Q0hurrHMv0M/gs+8O3jYTLt46lf8v78tzxrvSeDxCjy5aMZCJ9nvoj7g2j5Z
w01l83aUCz5Uc9mHSTI/CP0Cvuuiy+j3J+KpPuBN13r3H+caTvcJ9Bt46PLG
aQk8XoHf7KI4fmgg9zf4ysmb9vm9ZN3BR60LdGop8yPwHZ9vytUPLLOOp3qC
zx6xPlPpYjjVE7z1dOWHyn7BND7g/xnMWLaicQKPY+DTDm1rHBbA9xX4P62o
m1WhfB2D29g1Gp8jm09CF3DJARXl7CPxVA/wH3sOtEl2CKfv+Fx7z7PXvIfB
VH/wD7Pv/bWf6EvjBv5+pevz6XEfedwD17M89NoggMc18J7NFe5PDuVxBDx6
sOZj/6N8/VE//xqbsOVwPLWLflda9Mz7bDi1C/zWZ5cRjj7BVG/wsr/nz24d
70v3ET7/uP7p0fYsvw8FnxHVuYdKp/v0HX8vjakynNX1Ps2H8fewMR5TGktu
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
z5l3wiS1vc79DjRJIF5Rvdtj/4ciKh+8rul7k7turAP+X+jjgPMn44voOz7n
Dtu+bMpl1gHl1dapN76UWETlgEcM81zx/gq3F+048VO3iXdyEZUD/rxHheVq
d24X9JuhNtPJ/3MRlQOe/D0sqPQa26PfPh1xaHvgBnN8jlgzq3vx1NsSSw3z
wECTcuJ+NtcyPldK6Tv+/uPKvdoBsucLvuNTbczlG/dk4yrGQfw/L+WrU6+W
3aJxAfYKU4Yf3uFyk77j//1yurvlTw3/Lv5f7cnhd5TLmcO+48eqC16lXD7+
njX3uFOelMdl/M7NBQnXd9dy/fH/bGvvPWwkq08LS9MWDRQe0Tif2Ojf5I1F
j+g+QnlzTN1a9tZjDvvYmTYngqY8lTj7ZK5VUOD4mB4R0WuW934jMZV7LxMm
3su0fx/WXUEhkeM/StYcXfE+ljjK6epQrHM/4rMkSFxPsF9i/+/a+S6pxGE/
rLRFiwcKXyQrZzo3VVBIJ3ur9CP7ek7KldT9//+yiLcU8YzgKOeiiL/7mDH2
b11dDtnvlZZsySkrJg77edv8ekwaJfMXnm2prKvj9zW/VxpOUVKVSva6uVfU
1fHz9GiFb3eTW1LJHDG/QvkKVVUKRaeZw17z4YTKkEyppOvSJoV1dRwvmaMy
fvaMFOawf/ol6OAr2XVVOnrql7o6jqN80Md8f/kf5rC/WnMz7bLsOf6ijVlm
XR3769GFAV+HNWJO8SJ/N1ktrZDS9YPnfmbPda87JAfTdQJ+aVihzz2/cLpO
wA2qveKNvsbTdUL7bXVrvAbuTqfrAbx8653dBZFfqL/AS0UcH/qF9pNuy5re
cqqU+gW8g4aDzoSH3C/g95uPaKuWx/pzXJ6f09l/rDP4Uqc+07LrWE+KH/1z
V+1DiZR0A+8YfGiiZyjrhnmR5b/4dk5zIkk38JScvnPOaCaQbvQ+KN3vyL8+
maQb+PWaSEn02a+kD8X5ifg76ANe9HbZ8R/BrA+9lxmS6O5cwvqAd1q1+80y
hXLSBzy/Qr1Xn3r6gH8f2X/3jHzWB3z6933Bgf6sA+aBp9vXnrt2I5F0oPi4
I6+vjozLIh3AK/IO/l26NI/aKx8Hh/ZS/NrK1NuVFdxe8KcpSq27yvwFtJfK
+aRxZE0NXw/gqycM1Q3I5vbSe4xrq5+E3eF2YR7rk2S3YU1oNrULfOIRq/En
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
ffR83f5pz+X6J4ryghPWLfVUZn9qtngfMa5X6pA1uexXhoxskBJokiPp1ft1
0+m7ed7lYf3e3yQtW1LmtrPFx0yer2I9fOntfqfGV3N7T39yc1DVzpZYrP3X
Zco/bu+a//Cb8NnG03f1Cut6frSo56LCsCE7+3F7g0U9H1gNVf9zuozGt5Pi
d1e8vrhNRZv9ylGODe1Utb9KRh5oHjSmJ88Hbovf8Tv4bJnVeZ4PdM2LNUoL
/CLRW9Jw2sBEng/gfWNgetDhyHzWR3HiFQ1H1S+SklGe6j2rWR+8FzhqMlnv
f3nMoE/xyc09tR1zJQO/Dnt1KJ/1CfkP/2ikqH9Ol7nvbP+yf4TPqA/Ljp+c
xc9HFVH/WWMS4tXUS2nc2y3qo/P540uXxnmkW6Goz5Hkzisi3HNIt3NaHzto
O+ZL4iet1Lp6j3VruHOitapM3wmNW2e5Z7NuFuL3v9V29n0oZd3wXndyx0+X
aqtYN8PSrR8CTWT+xvN2Dw6Us26JHeOnOKrmSVY0PlJUkcT6dBV+R6icH3RW
1LNc7Yl/g388f1AU9ZxYkj3QOIT9IHxuaRTUtMOPIho/14j6BIev7lIb/oV0
+yjqk54/e5vz8mzSp+zP9RsmaYWSlwN3PlMqY33WqTZuo+1YKBl9qt/9k5Ws
T9J8k8Oq2oWSt4dqHyZWsT7Y72A8rc+wtoWsz4vrk1amBRZIpOmJg9aEsw77
/sPfKRX1UW8xoqPZNPZ3DEV9LAc3Mmvar4janyjq8zf34fl1K/NpfMZnrqS3
3ZzjuaRPiKjPVv3Na34NyiQd5j40VXNULZEYKBofNPjHOoSmJF0xSSuWKOWv
P3yrinUYozilubZjsSTyd4PYa9msA/ZxzAn/eTisnv/7Sfgj3+X8HR3xu6bH
3UwiFhdSe1+I3x3a6XnxsJHc36PF726c16S3pWYOtdNT/G7X5DLzfPc0ated
DdOeBZqUSVQ7azfbWsXt6nHGY7CjaplkVNsFrgNT6/kRgc1cTdJKJZk5XiU9
Pbj+Y4Wf8krO3/EW5fsYudZGNvpK9e8uyh84vslPh/+tC2L+I8q/UzFfotCR
1yuUVVrOSQsslyzuGblnSxLXE+/fnncM2GF+gesp3Zqq6qhaLslN+3J7nQ7X
87yY/5vJ+SONRPmHugxX630og+q5D+/7DB8Wap76RPUsE+V/LXIe9uV6LNUn
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
H6cXufE8Evbq9zt6Ws3j9RbwynJpTY8tvN6CeMrKq/eUT83lODjKq6rZaO+h
5qW8biB40299DNud5ftCPh8mvXcWPPRkt+9NQri/5PON/Ben9yaiv2yOtgr+
Z8Yc5Sdde+3XZD33i4fceg70pLyGuvtSk7LZ36f8xyIPCY1Lwl535BinJYt5
HQP2FY+9+it1Yp1h30nB5Pan3EIqB/a6oaOO+bRg/dHepmETm6cs4/sF3H/m
Cv9uj3kcI32OFHb+tvm/dYM93msnv30fmhHJz/euYr3FIGdx30Iz5ijn8uYd
0b90WWfwAlPtTfcC+HoGbym3/gNeq9+10LtZCdlTXhSRP4T8d2FfvOTKlg87
eP0E9u/VV+f2eFREuuE9fvqXI5l/knj9B/z2JNP2Zfv5PVqSWD/pM3+3a/co
fu6XinWkhZlvrOPrva9HOQM/+J1Jl7A+4FNiYjvVOvN8lfKXWoxpufwoX1fg
P+XWi8Dn97uW4P2H/U3sZ1YT+T3QXsojelhH69NJnld4iXWM9X0HLF0Zxc/f
OWI9J/e7l/2Weu9hX8jtT4D9ebHOY6x0fZRHvee7fN4P2GP/8JeBj/vfWldP
T2F/evvQQs19PM8Et9W+dS5Oh9evwP8mbxm4diOvX4F3llunwu82Nqy8OsU1
jsb50WL958twGyNTd35urhfrPx16ND18pl578b7+mY7K6A+d2Z7OU3pa2PmE
LusA+14ivwfKgX3XTlELU/15ngn76B9m7uM6sL8DblKuUhbSlNd7wZdstXy9
oFM03Rco33yhX53xAl6non3RvzyPlm97Q+Ntd9w3fm8nbLfjcXisWP/xe3Dt
9V4zbi/e17vNbDwgWYHtaR/yvDA/QwnrBvsuvtf9TEfycxb2eUZpGZ2ceT4J
e0eRxwPlwP5sp6w5b614vYvyzZ6eZ1N3j9eBwTt2+dBm6QVeV0E57f4FxoVv
f0/6wP635bnd65RfUjmwX7DlZ4HpNF6/AlcpGFfwSv8pjavy+Tr+i0M38GYR
4z4lF/HzUT6PB3SD/fNhbzT0GvM8h/Zdd7tpq23B1xvsK/MPXXp6kddbYD9m
irleb232j2DfR+TxQDmw3z1v1zP3DTwuwV5je93GqDaRdD/C3lHk8YCesF/u
qGKZIeH1E9jrOup3XdA2jHSG/b7bGxo8n+VP5cC+Kn5b745/g8ie1mXdHlcX
Bj+k703EutASnYSjaVe9aDx8Kf5+1fCYW796+1VSxDpP4OnXk7TNmCNPQ2Q7
xX5T13H/yufpRb+AKywOsxqUyfN/8IsrX3xLmM/XObhXTH5cYhrHKYAf+Hyo
geL5ONIZ3FNunQq8h5/W0XPmIaQb5e9prpecOc2P9AE3TUvb86+HD3HsD59u
9ub73qeepBvWW2rPD4qxDPKiemJ95kTVsP7Gxjy/ks8Ti/aS3/p83+Jhm/g6
h18wpeyJy7x9fL9gXmp8JrrYwJ71l8/LgfrjOgmSDspPM3tE/XhF7A+5aNvk
dPZaXodpJdpXrtC5NuxiGN0XtXJ5ejH+PBHldApePND2It9HZXJ5X6GbC+I/
fgaN6O0RRr87Q/hfcyNeN6gJYn/HXPjFp9vc3rA7oYh4ndi/Ot1xzvh3TXm+
jf20apIQ28ir/Lshwk8xauWa9y6F5wnY/6n4dtroY9dLSU8FhdL/K78x+uuF
2NeRWmc4yMGnkPhZsW4W9nxsZUAUrz8oi3WhOyK/BHgrubwTKOeTWD/5OrJ7
4aCGvC4xTezr2L8ptJGOK68zLxPrMA8/BGzp/IHLP4w8EyLvBLiNXD4KtDdW
Lp8qyi8Q6xjaS1qrNrvM9qfk8oXifiA/Sc3b1inEi+NmBW80atOTO3f43EHw
cu2qQVExfH4S+KuctpnbKjg/FHhw9VzzAw35/Bjwd13Pf/Gs5vwMmM/+3FIT
fmMVxz+Dv7P+96rzU47vBX9VNu9Ur5Z8bhZ47ct7v5aUcP4v8EZ7DhplNeBz
g8B317p+tPjDeW3ArX6klLsncf4g8At3E8Im2HP9cV038yrdLAkJovUy8M8F
wW2O9MykdoE3HbDSM2YBxw2C32kVsFMrj/O7gR8+81x1jgKfLwXeNu7jqHk1
rD/4+3EKigPr5esBTx2j1q6pE7cL/GyZZbp5G84PjOtop8gPjHVY8CNL25w/
Y83rkuDtV7cseXeez1WlfUMiPzD6ERx5gHG9gSPfL50TKbeOBz+K9tccOjVn
ehbnMwRfZN3SN+Af6wl+v8W3un7/+DoBd+6+1/RxNusJfuJ80adMd9YTHPmB
KW4K+Zn1kuMGzOY8EbhfXwcnm2sUfqbrh/ZrG8auW6jMOhPXuP+2XwLnIwBv
d+V0lPlMjrcHt9H7NMxoEefVBT/6vF3q7o+8bgKe1SRo1C07zvsH/m6N817N
VNYZ/Hc3E+VBtawz7Qs28phcV8c6g/dcUzRBI591Blc5dLLt0zusM3i/d2X+
26ezzuBvevTzubefn/fggxwiNnys5fwdGEfdFuX6xnXk9zTgR9T9v12Zx/nQ
wTUcsvb2DS4kncHd1e3ntmjK+YHByy+ZHPjzkNcHwXt3nnLceB/nCQSvua7x
c14C6ww+61pWn2t/WWdw3ZceXzIa8PmI4C03NF2ZUMI6g3/SdA5z8Wedab9/
7KOtUxaxzrSvcHMLm1iXevMPtHe23tzkeXx+Lvj8ng3Cgio5rwqee36HvBrp
jCwkncHLTH3bJRrw+aSYd5iLc2ChP+3Xc5jUq/ErzosBXrvOzeHOGV4HB7/s
0mLJ5M2cP5D8sMh/wWvfM8fvyp8DC/s1SVsVuv1hDnv582Fh33eqV2VoQ+aw
lz83FvZttWxSNlcwh738ebKwvxrkWGwZyhz28ufMwj797VnDduu538GTdqv2
qg1gPxDcreHGmUbHOM8guE3Wv5S6zXyeL/jAp6lmj37x+WeozxO582cx39wR
dSz5eHt+nwEeNfbIXLfv3C8UVxr1cHTHRnxuLHj8s3ft0+qdgwyeMnWCfXks
6wm+XO/bvohDPG6AO/8+8M7AguNUwT2U89S6buS8SFjPmLzr5vWIxvzeC3xe
q3kzrpVyXkTaF9+1X6C9Ip/TCv7HW+FLUL3rCnyp5ZdcqyRuF7iK9ee4m3Z8
n4JHdNs5K7QZn/9H8ZorZkZ2Dc7g+GHE7bV135JRnMB5mhBXHdsyyL8tn8cH
rvvnu9X9fM4DCe6iEPFHsQGfl0r7yyYYdXet4X4Ery565ty+Xt5w8Ekj21y3
vsDXJ3jf8Wrvprrz+ZHgg1yGlPdsxfHY4N0vHJ2RoJJE7aV4vgMuJRKvaD6P
RPhzTqXf/7zO5nka+DXPXhvUHFgH8OVJt2qP1LEO4EfGPXpx4B/3O7jbWDOP
u9msA/jgbSoFm91ZB3Dk3UW/z5Fbf8P1DL5T5NHFOED79US+XIwD4H2+HlqR
OIrzBYBnh/hotR/F53qCf+thv+6qFp9bCd5e5NeFzhR/P6yJXS/LV5yPTPjx
dVujnzX8xzqDd1kbez/3M+sM7uPpHrVegc+NBX/9+EnzWfmsM7h1nKXn4jus
M/j1XlPv7ZGwzvR+qbS14TMLnjeCf3I72eVFez7HBPzJ65raTvc5Twf4z8S+
xcfCOT8FxTc3nPVGJY3PowVfcCfff/LuZNIZfL1nSJfjpu9JZ3ClbKO/Xh3r
nYsp+Mo+0xd6DwjiPNhiXeTai+KJ8xU5Xx69f26uM/pUDetM+3NNNN/llvD1
DP7ZLjRzuj/rDH6g6Y8BK3VZZ/Cadr0fNnTmeSOVv/TLrn3anI+e3qMqPp8+
rQnnSQePiEnfrb2cz5MG/zf75ZdeJzhvCPjgNwlqD27w+jXZR3uZFM2JJZ3B
u66fWfRx6mvSGbzoo9Iyz9og0hm8Q4vcFxtfPCSdsR7j1uN1nnUF6wn+eI7p
+TGhrCflDfp2v0BrHesJPmrTqahl/jw/BA9KGd9tlhX7O+AB9oEWRzbweQDg
T65t+jmwjM87B3+48qDroBF8Piy4prPDy58fUjk/i+BeLVcvkJ7nPCbgBSVt
4q4bvyE9waUzP3Qq1HtKetI+bsUJ+73NOJ8F+ErdfhL7Z56UvwD+vr+vhVbG
o6cUzw8+tPfi9V+8wym+HdxgQYuTgw8mUHw4eNzd42ZZD7MkamL9CHxO6pP1
/f/kSRLEcx08SORtQJwtuO6b5yGhKlKKIwUfqJPc66BsnEH8JPifD9E2arL7
CPGE4At1J2dOkvlBiMejuPbJ3UJ/Vkop/g3cb/jav7eSOC8u1hM0gsI9D/bj
fLLg70cdT0nYlU7x8OCjZly94bPlq8RTPO/B40TeBsTBgm/ZkPksN1NK8Z9U
juFZP6NfUoqHBL8495ORimwei3hCcB2XJf3GpHL+TPADnzZozXWSUt4BWq/4
2fGTQWquZJ94ToMjT8InEedJcboKuYtnyn4X73Uonkwn4ehJ2XMW+2spXnBj
3BYfDynFDVL8xCfdr+/n8vkp8MeRlwDvUcBX/Q3Y0D5ASnlAML/d1vmOyZL9
JZRHA3yvun3l0W1llD8C3Pa+5zlVAynlWQC3Kpr5xjJSSvkL5P2RGf/hd6z5
D38h5D/8AsQh03vRrcr7xyWWUVwu+PJGiVYNn5RS/Cp4QlTt0LrXxRQXCt7H
t+FuPfsCisMEfybm//vF/Y55tafj0LM2PaSScnG/g0vvNLEv9ZFSvglw8yb7
1+yXzauRxwF80ImlnStk9xfyJoA/HD8jdZLsOkH8ObhN06AtQX/LKO4aPMH6
kH3wv1KKQwZP36Hov3F6CcXrgq9IPjpSWb+Q4mDBw37mKLRq8ZXiTsEV1zUy
234uQxIq7mvMw/tvGx66SXbdIo8GuGf7F6nasvEB+SnAB6a1mGwpaxfyQYA7
RznNGia77xA3Dn4/9eO6qpASiqOm+E7PxOYV/xvfxX0NbjFr53uNsXkUxwte
6N092kJZNp8R9zW45vc9uWtcP0msxX2N+bbB2KHxYbJ6SsT7AHDzprOXXJa1
l/JWIM9r74gd2rL7FHHd4ItPh768vSqf4p9pnr+723S9WTkUVwyurJz0omuP
VIrjBbfo8cMq9XGsZKDY10X73CvXB7+TzXMQRw0+uY+XxoMbaRTXivHZpO8J
m86PfSnOE9wmJHW38YoQiuMCR7wt4pTAv1W1sgncVkLxPODqlyIHvzUqozgZ
cCslha0flkgpDhnj6piq139GB/lSnC3tp74x8oGzUQjFndJ+1cqs/rbhURSP
B444WcSbgVe01JjuI7v/EU8FfuvAzJ0vjcso7gh8kmp6L+2lUoqLxng7dqrD
vXc7QijuF7ysLHOwWSzHwYJHFi3zMCtJovhJcMS9Im6Q8uM2etj+mmkJxcWB
D9+bMCVoYxnFfYE7Tb56+bWsnojTxjivJs7FLpPjOC8b8cm0vi3Oy86T4zhH
G/GuFP8t4l4R/wl+RpyjPVyO43xtxEOCfxPnaxfJcZy7jThAcJy7ffs/OOIl
wHEet9F/cMSr0zrzndc/L7olSB6I94jgto4aQ8L/JlE8M/hIxR2Gvir5FN8L
Pn/m/J/W5iUU10r7SSXVa25tLqM4T/Dayy8P9+8mpThPWj9/ZJYdJGsX4nDA
Q+InPlpdU0bzBPCzi9Z1D5e1C3Eg4I9Pq86srSulOBD63edXJnZ6Wkrx51j/
vGr3/NNwt68Unww+eF6rANctZRR/S+uo9yLujNKXUjwV+D6DybMuyuqDuCDw
CBF/irggcPu+twKCZc9rxKWAhzror6h8UUJxKeAb6047a4UXUx4BrOOljF0z
Tr/rF8ojgOe4hViP3Ss3/zEV85/HcvOffWL+g/hqikPqsH+Sj6y9iIsDv7Og
h5GxrL2IBwM/3iWw71pZuxC/BD5rwoKym2+KKa4GvKeIG0X8DHiimuPF5ScL
KN8BnstD72U/0TxQQnH+4I+WrU7Zs72M4uHBDS97el2Vzd8QrwhuVtfbWklW
f+RNwPNxfUaFxhZZvZEvAPxJrKFNp+VSis8Ez66dbp2UUEZxj+Ardh5pPC+o
lPIv0P7QrIqh52TlIH4V/Opl4/23ZeUgzhN8TDfDMd8CSyl+EnxJ8slF7cOK
Kb6I8v7G5un8so2nOGE8H2vE+d3echzneiNuFjxVnOs9Wo7jvG/EnYLPE+d9
n5fjOAcccZ7go8Q54FI5jvPBEc8GfkycD95EjuPccMRTgfcW54Yby3GcJ454
cqzP7N3d7Uwb2TwT8eTg5mu/as2S6YM4avD4Jbty98r8UMRRU9768sTlE2X6
IK4Y/FvU9VM9p5VQXDG4qVnnb9Eviykul9a1Piw+sUCvkOJyKQ/393Y9xhwv
oDhJigML76B72zqe4voobj6y64KW36Morg/8WJzV620XwymuDHxGM9+QC/Ev
KK4M/Mv1L60P+wVTfgGst9hHTOnZUaYP4urBi09sXJIeUCoxFfMT8NjiDn2r
gjmeHNzi2OhLA2Q6IL4aXPNW3IbLfYoovhrcs52i7jDrAoqbBTdYOPXaoaPx
FBdK612H14bcdAyneEXwZxF2T9UfBVO8HLiN0ymv1J8BFC8HPjqlS2HbSb6U
VwLrJM4WziVfP3I+BfDZLaqmHZHpgDwC4Fv6jBh2LLRYUi7i5MGP2Klu6n+s
gOKcwWelZXgpXkuhuF/wP3XT23w+F05xrRRf8vPB56p7wRRvCW5rULhg/ARf
ivfDfPV7ZG3dsvN8TjrlyW507EJ2IccB0n5wq4m6E6t8aD2N8iLcyPPSiAmm
eC3wh196lA9WDKB1NvAlfSd4mo+OpHgnyif3+/aP5AOvaP0N/P5axU6dbTge
CXxK+rLDjtUfaJ0NPP71JSsrRd4fD27bZvG4jIm8b5vOK1h946TyKD4HEFxz
3sE2C+fyOeZ0rsjES++XT+FzLcGHnzP3sIgto/3cmG8Hmh+f8S9cSvv/yE8R
cXxYfwPfmHLv19B43r+Bck61jnFxm/mU+oX24+v3iY4o86N+Ae/Qx2XlNd9w
6hc6X+nmq3dFm/g8Blq/crXtNmNiAvUL+L5/bWzqyt/ROif4sLjVy+9cLqZ4
D8ondHFtavD9QuoX8EVTj/6x+MfnklMer3bZpzcp8no++IZOZzIPqvJ5W+At
rKrHBtzj/NrgV5aMGdHzoZTiCuBHrFK5Wjm13rnk4HYNHe5IRrwhPcFvbrzR
6MrtF8Qxrx4l/AvoDPuMN78K7IviSWfwBcnTit3yoomjnGPC78B6Mp2TELl0
+rRxfE4zeBvHqzvb9iskLu+P0DkBwt6gTYhN/3d8jjn43p6PZyU85XgeeX8E
/QX73y0vO4a04HPNKM7jb/y57ic5nkTeT0E/wt51+cWjih7cj7SvRpx7/l8c
+2JJ59L509bWOw+d8sXWdNlhsZ65vB+EfoRf0MKt7n6v23xOD+X1F+ehY5yB
vVO3uQVNm3N8GnjGBNsknXEc7wQ+UZr9Yc80KcVxUb4BNwuLgLtSiuMCP9F7
k9LzeueYoz44x/z/xVGOSfjvELMS3l8L3vtFreXNHD4vG/6Fb7Mq11KPYmov
7TNp6fOrX0OOrwN3tPg3PXqAlOL9wNt5jFtXI6s/9vdTHgUR94d1YPCfV/xn
jDbn9VvKV9F5XkB1A24XeLNOpsY5Tbld4MObjVTprldC9xfFi+hv/zJJUkzt
pfyogUtfTIznc9jBh/eL6DK5tZTiQsGXWMddnxwppTgNitsL//KsmzmvS8P+
+/HNiTYq3C7wqrXLdqiN5v3l4MYqiYdPuPE+aToXYtTUtqO+FNJ4BX/NRPhx
uJ5pvVrunG7yB4V/B33AG8md0w1uJ9a9oRt4f7lzusGPiPVwxPPQfp52Y3zO
/i8e+f+x7wX8uVjfRlwNuPw53fLr3tAf3EHunG7weLEejn4Bfy93Tjd4L7FO
jv6i+sud001+ZZqaq80kHmdo3fvT1+0m+nweNOXRd50WeGY6n9sI7lpm2W17
Eu9XoXMGYuM+mYVIKe4d/ublTbMeV//vPHSxPkl5lP0q/iTXO4+b8sYVH9n3
qpjPgwZ30Wu9s0LC/QLee+/MzHnZpdQvlI/Er+sm/30c50N5hf+N9VnfjM/j
Bp+tqfjtTEc+jxY848GrS0v/FlC/kG4N6+aOe1TvnHrRXttDOn3aD+ZzLcGn
GGxVn+TH51GBey0wNtrnK6U8C/CX65bOtJoQJaU4Q9hXZs/Sf1Xv3G3wc1az
byxtwM8pWrfXC1J6p8s6gy/U9Vzr0YR1Bpf8fFtZ5MxxYuCrHjpWp+vyudvg
e1xNdg2ay+cig69Zop+226SQdKb8/ZP07wxvXky6ob1vj61cd8pTSvkp4Bfb
iHO3kZ8CHOdxI64V5Uy5Gnnvbr1zt2lf0Jqpvyo68zwB/PYpk8x765jLr0tA
Z3pf0H5542b15uHgdzqF6AwJYI5yUsS6BPSHfZ/0USo7XPicbnD9Imv1pCOl
xFHOXLFegX6Bvc8h/fG+WYXUL+Bdj138MX1jMXHKQybWMTCe0/X27ZXGYDeO
24F9B7Eugfht8Fhx3nepHMc54JhvwE9voRrm2rqY52OU18fIUqcys5R0Ax+m
dWXDn8asD8WzTp12c0cVj3vglQMWWz3oEEn1Bz99ev7nCQdDKJ4fvEOHMM1D
Zny+Le338Lvz21eB60/xc4etdm5sXO+cd8GD/7TedWUBx99S3GETXYeXWwpp
3AD/el/D59n5KKo/+Kvr+yw6a7yg+oNvut4ntpmmH+V3AC8LVrfeaMbn8MKP
Dr06+OSqztwucJ8t/m++juB5IMU5jVi6YulF9kPBS9p3vjIine9fcNdVZ/xW
tYimdoHbrbPb+kiRz/UGf/n3oNLAmf4UbwY+dazpTd9rXpRHhvLHvKnTWlVv
3xF4ixsK4e2VyimfCHiUUmOXCf78XKB8M3eeHpsdzOcpg7cMHO7dx5b9YjqX
5srFLmF7efzEvH1a+7Gj9m787/k/dMO88cpm36FrnvH1g/nYmWuLDec94n7B
PCRyjGWvObe5H/Eclz9PmfKsfFr3tc9Jfi5Tfms1i3glS37u4L726jS7fe0W
5vLjJ643yoNlbNtwTC8fisuieBwR/4W4KfAVM9OdhkYWUdwUrT982ju/9GIp
xZVBTw2TSSuLTF5SfBfFrfz89SLvUSHFd4GXLP218Oy7IorvAj/29p9Z90al
FN8FXrPNNOKBaynFp0HPk2L+WSY3z1QS80zErUHnzkd9o/Kul1LcF/p9nfC/
YuXiTXaKeBPEX+F6mHu3qUNpfBHFTYEvSrt9dMflUooHw3XyW5zn20qO45xf
xHGBvxHn/NrIcZz/i/g0XG9D952OnfO8kOLTwKuX3V+ulVxE8WaUV+l087Ln
zUop3gx8e/CFo0PdS+l8CPT7se8uJze4FdO5OPQ+V/dCtXurIDp3gfKI23dr
YJ5RJpkizn1BP/p7VP2odXhP50xQXOB+rcYmN8voegO/2qB3YdouKZ1bAH56
2r4wr49SOpcF/TXa17q5mjbnKaB1hvH6XXLzeNwAT2pYenxflZTOv0E/hr/r
dMnALIveC4N3dLNxHpvJ6zzgdiG3K/1l5SDvP/ndU9s/nF8upXz34GqrZo+1
DpdKnoj39XQ+wMHBc+8sTqfzNsDTNXZNdPokpXMp6Jy6uW9u/f7fuSTiPRHl
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
9T9HPK+s
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1m3ngD9X3xt+zv5WkiErKUiJK2kQpO4VSiUjWtEkliaIipERpj4RCkpSv
orKUJBJaZIt20SJJi6X197w88/tjPveZM2fuez4z9557znPOrdzjxotvCAuF
QvekUIjU1ogLheZBoVBdbQ3J6kj2vC600/nfwjOFq+toIfywbjxeuLnwQ8LH
CjcUfkB4kPr4U/gcHb3TQqGuzg/PpFMsFEpL7yLhOyTbp+sNdJSUzjFqy+k3
h0s+UEdTnbfX7/6j9kXdU1o649VeoD46C58knYPUz3XCZwiXF54ARl/tITqq
CT+h9nAdU/ld3Vte+FnhtsKXqf9/pfOyzo+Q/HThGWqv1nGa+iyrPqtIryT6
wtWEDxe+WPhoHW9I/zk9c1/pnyX9CpLdLHy28FHCtwg3EK6YP+d86U+X/u3C
TSSvKnl/4XOEjxHuI3yQnum2ot/bAt5/4j6X8JzCg4SbSv9Y6d8kvFjyWYl/
6x3h2cIDhN8Xnpc/29vCLwlX0z0H6fvUVTtHx7uS/0/y6vq9Cvq/LpGshvBR
fPP82d6TzqvS+VbPVVr3blF7q+QrJJ8r+bW8Nz3PYdI/VPh4ycepLerYJjxS
7Qu6Vlf3vaH2YJ3/LPnjai9Xf5fo+FrnbdW206GuCiOk97ieYaHafpJVlKy+
7r9YuIOOT3Q+XNful85rmfu4NO+nRmi9Ujou0LXWatuoXaCO2wiXU3uO/sc9
urejnmGmzi+QvLfufSGwfmla3dNKuJXaxdItIVl/PcP5Oj9f8vPUzsj7vI7v
FFj/YPqX3o6C/4dG+q1/1HbVb12k6+3R0bWyOq+t9mm1ZRjPwkfrfXZBrj5K
q/8Tde8s3VtVssN0nCydyWrvDo2n69ponVcXfoqxo6OS8INqS+mozNxUe676
2SfdyxmP6rev+p8ifJ6e8xTpPBP5/V+mo4KOJtKPde0q6TQU/kvXrxBuxlyQ
/HrGoHAqfE3+f3XUcUXgb8F3PTL/Dp34f3W0kH456feT/hv5Oy+vdjD9qj0u
87htKFxZ+CTGoJ5tvPSu1X0jJL9CbW3JL+X/lbyP+nxNslLSH6j2Ien0VjtW
R1nhtdI9XUdP6U+V/hnCVwpP4xn1rrsLnyVZB/Vzue55jbmvNta9b0heVzrn
MqYkf1KyIs+g86aSt1F7iuSnSK+z8ET1eaXuDaUzN/JYYcy8LVyH3+BbS+dW
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
pbc6MMdHbRf89/LQtVbwlowpfC/eP9+BumfirMtzX+bDwOP7k9D1UeTnqP/c
H7emrq8mvhubOs+Er0rup0zOL8EzwT/iq5IYoI6UeId4hNoz/JCaec7qx8D3
j0mc84K3p1YNv+V+tU9n5lFLZPbP8NPIa2N7VuX25wydbwzM7eOvbQ7MqTIe
Pw48//fk/xv/O+9mQ/5+rtT5dLWb9LxPZc6v7ZXuf6nf5fVF+4yfBuZ+/8j9
OurleKe8W3JVQeacILV5zN33AvsB8Kjk6akZoAYXn5/a13GZ6+Y2ZeZheRY4
THxN/gfy9dSL4+dTN4sdxB52zX2WFYHXj9GJeV2431mx14t3Q8cKPwX+BtQG
E0c8kzqnfHJoH5ra44OZM0XXN5JLuSt1zSH+5NDU9bAThNfonm26/m3gXAVz
gzlSKrFsay4n3sfvpgbnxNy/p/abWsQtwsNS5/+bEWslriuAE8S3pP6KfFKU
uCaBmBA/mTqW5qH9SPjuqaxZkevB8Hv+jV0/hv8BIULeH24UP5M6tXqh5zv8
Mjzz67HzrIyr3ZHryYl5T2ANTDzmyaWSf2VMwndTz8//wv9EvSV8KbwHeRfW
pr2Rc0jkkuAryOXwPojpWGd2BL72q9pfAtfuM/++DDwn4eX5juRWS+Rjnrl5
cuY6ZPxN6qKoj6KuuHfoZz4zdm3MXmxJ0fPj88Djkrp8co5fxa4NrBXar8bf
ZQztr9XJPL6pgSH/AUcSSOff1PUF1+U1pxNzexBmjlWpP3kq8fgiL8A4/Ssw
t74qdlwcxfYd9gXm1qkHgIuDk1se+x0Q/5LrIm5mrwI8J3H9wtRz5bfA+QXy
SqwFK1Nz9PRH/EtOi9j34NjcI3ERPB97CcibUR8CV4n/PTf3L/YG/j32M5Ar
o8ZjfuLYlhpCeJpyoeu3yD0QHx8Te18E/xd1I+TVeC64pqhoX48c2vjE9oy8
3rrY+x2InWck/k1yi/CorItvqv2TOa77umbey8E7oY6FBOm/ge8n/g5C/z9w
uXAsS1PzRfAb76bmVFk330rNqTJmGDvUcLLmvpc6/0g98wep8zX4EqtT52JY
j1ap/TT2OymVcxVR6PNM/2NzPefV6nND7GeBx4CL3l9bnjqnwveHt6H2G976
1dR8WJnQNYXUhxOnzUvNsZUNXfc2NPJ+EPaFMF7J1VBTQx0Wtf+M43dj+xXv
xI6Lia1eSXyAqeFZEnt+oXOX+lzL/A3tN+A/sNeA67vyOUi8zHfn+6MPN0bs
Tc3y+sB5ZfaiwEexN2FCZtmfqdcL6pS/yZwLZB6Tp2b92L+OJP5feHby/9zD
veQBV4TWIT9eXfcvFT4+8zf/L//uvBPqA/eE5mNKhM43/cw7KriWgH0qvCNq
1thXw33UOFGbcHhovZ2x8+3sw6JmnT6oQT0ht3vUoFKzTr6Lmls4y/KhayKp
7d9fu566lp3vwv9EfiwLfQ9c14Ghr7EviLlJPm1z7Hd7SOx6Iv43YmH2L8Ez
s3fj89h9wDXBvx4auraSGHt/XVvmvU/8Bn1+Gfv54dbwlaYE9p9Gx44TiWHw
D/HV8dmp4YLrgLv9iPkQOa6hFoxxCV9Lv/QPbwfvRD3+5sx1YTwT3DC1ZoxX
uGFqbqmlulhzom3q+hnqaOBVsBMtJX8xcw59Xeq6RHimS4p+j7xP6v1WS6d+
5NiQXCT7CNhPQC0zNgjOmHphviX1JtSsMQ7g56iXYL1mj93yzHkd+Ld3M3OX
64UHJc5H35B5XUef+/CpqMf/IXOdNd8brvrrzDny69Quy5yvIn6kPh+fib0G
SzNzpuskvy92DR+189ThwFdTYwL/x7fgmxDbEl8TZ7M3g/iYmvBY76KB9K7M
7AsNLzgevTiy77aMtb/o79UrM09C7EzMTY05/A91BGHR77An63LRew/4f9tE
9hGpIXwpc13/OrV98tic2A05sR4xH/uoyC1Rs39v5hzaXp4rcX785sy5FWIF
attHJt7jcEtmPgTOowNzKPP/RXxKfWAf1s3UNhfbS00s3AgxX/ucZ4DPuET4
p8w1ZDH+dea6lkD4nczcN/V1xBHEOsT09ySOC/pljt+JqYnRp4eOdag5KZ3P
Vebgisz7dqjxpo6cuI+9YJ9lrnEhbvo8f3fUWjyS2De+NXP9LvlT9vQVi/5O
jJMJiX2G24SnJs7LUBM4RXhuwTXbz+T+J/scv8hc20FMPT6PZdi/+WzifA11
72Pz+II9kuwpo/4SX/FRHc9J3j/z/GI/0KrMNpl9J1sy19ext6910TmpmqFr
0akHYz8L+1rYD0gegXo0ala6FTx+Hk/M8w9kTci8nrOuP5a4RmtA5tptaqXw
u7jGWJoVukaOnAucUpvEe8p6sC5k3h9Cjf0zoX+LPWXsNyRHTC3Vt5nrJOBw
4EzwSRvo+bdmrpWEC6Kug3hpke7dlrlGCh7ju8w1W/8Kb8hcPwEH0jrxfrfu
jDXhHgXPNeIa4hTilfWZa33gtd7PnHPFD2mVmIvuxnvNXL/4X+I6GeKKN2P7
LPQ5JTQ3hJ+HvwcXhP/YWM//ZeYaHTirbqHr0/DtqVsj94TPCleD79Zc+l9l
rgeC76KGF7+H/AM1UcQ+7xHfJPaN4Zeoa8Kfez92rQjr+8bYtcD4LuRbnk5c
W8geiicyx+LE9F0T7+PDttyXOC5g3s3L/RNqpOFJyCkT43Av+8DWskbrGBR7
79izuj45MKfG/McOsEdmceacK3si8NemBc6LUT/DO6RmhzoGZOxf2545jxum
3gdBvXD7fH0h1jlL+MCic1HM95JF5+ewP4cWnddhDlJ/SDzGHsYZoe0PtWpw
UOTED0rsL+I3Uou+K/P+LmrRf8u8T5Ka/x2Za1/g3HZm3ptN/Tk1qPhG7Osi
fw+fTWzC3hf4CvbqTQ7NaxGL/Z55jyV7B9iTA39bN7ex8LfwuD9n3u/NvgDq
V4kvFsS2j9hJ9ttSEwBHzR4lYhPifeL+pbk/zH6rJZlzpewr+SXz3vLL8m/F
Nxqct8/k3wueH+4aDhvfeWLg+cmazdpNHQh7n+Cu2NfDmsTaRN3v86HXMuoD
/8q8L5T5ckjRPih5bew+75+9V/D51HIQbw9NXJeLbb87cTzLd/87855S5iz1
G+RTqANibWCNYO/wXYl5HubjAUXXj7I2UfdyVuj9KfjpQ6TzBrxg4vgd+1A1
8Z5NfAP2WLJGsIdrY+Y6P3z7PZn3oLI3qkrifW2s9f9k3leJTVuQ+/zsiRgQ
e8yzL5VxQNzB3tmDi87NYzPxE3gPf+ALF52bx4ZT+823JqbcnXlfK/sy2GfU
sOB8wR+Z97Kyx6RU0bl/1qMnQuc+iP0X5jEjezeGxP627PcsXXTdAPb8/wAB
Na50
          "]], Polygon3DBox[CompressedData["
1:eJwtnAf8T9Ufxr93nfullFlCtqhUVNLQUlZp0A6lopTQ8C+hIkK7tElFoomk
0jRCRGjRMqIho700/8+7575e7ut3PuecO773nnM+z+f5PEeD8wd07R+XSqUT
01JJ/0o3Z6XSBP39ISmV2pRLpdayT5TdXPYPeanUSEdZJ6xQ3eBQKr2rk/6J
ZKjufZWPUv8zZLZU/1/V90jZp8tuIfsX2Z/J7it7qvr31PVLsg9W+RwVH9Xf
IbIfVPks9b9I7dNlz5e9i67dQXYk+xD120n3HKm6F3R8rvJY9dmmc/6R3Urt
J8m+X3+ryT5M7RVVXqPy4Tr/VLXtq74/6Xl+UF0dte2guoNUfkz1v6l8kc65
RvWPy/5d9sWyB9NPfVqrnKq8WuWHuY7az1Pd/1RXT+/kL9mnqm1vPW8D2X/L
Pl12c9kH62839d1dffvq2F/P0Fh/f1H9UpW/0d8aPKvOuVHXfkTHzypfoHOu
Un0lPX8H/T1KdaepbzsdfdVWj3enY6Tap6qtl867RPerKLsd91FdJ/WtqHts
UP9HZZ+kZ7tC9gMqL1efiuq/Z+ZrN9b536rtC51TRW2rVDdcdfN0VND5E3Rc
rbY3ZVdUuZH6/Cy7ce53vVL9h+j6A2WPU3ml6nbU9Y/Q9U+TvR+/S21X5v7e
K3i3am8ie0eV31XdUJ2/UP120PUn6xim6w/V8ajKk3Rcp/IEtf+ovufKHqjz
hunYR/Y1sk9WewUdB6kcq/5Dlcer//e8O9VdzDfQ8wyQfazqV+ve56lOty19
yVxQ3Z6qW6Ty96rfXc/3uq7xjc6dprpL1L5OnWfLvlv176vvb9xHbZVjv68K
uv4xscfUceozUPZ1Kp+stvX8ftnX8i24luzvdb23db0xquvI91H7UOan2teq
/V9d6zPZbSOPj7t1bJF9vOxz1DZYfWbI3sjY1/N+p2vcRLv6HSR7kNqflL1G
7ZVl/0/2FNmfMLZkXy37Cdmfyd5Z9lidt5ln0fW7q+4atU+XvUHlqmr/XL+p
ksq1dHyr8u2Z73+pzjtc7T/r/nfKPkV2H9lV1OfQyGvIpypP1rGcb6s+r6hu
V+ao7GYq/8pc0NEm8phYp/JVucf3p6wBul4v/d1F9rfMd90jUfsjjAeVD1H7
Vt1/kc5/WOd+rLYf1X+p2g9R3VD1uZRxKfvsyPP/ER1vMddUt441T+ffrHJn
lVvrem+ofUvkd9CXNU3tK2XfIfsnlb/VsZj5pX6f6H6X6H30V9sx6rtK9kOy
35D9P9ltdb0v1X+O+p8ge43aQ+652VP2oWp/iGeQfab6XKJnfVD2d7xP2Rfx
DnSfg1UOKn+s8pM6PmRtVJ+v1fd1HUH2/TquUNursjOV79Nxuew1ep5L1fcJ
nX+e7veA7Kdl/6l+R8lOZLeJ7Rt66m//3O9jnsoV1L5dz/+BrnUXY0zlpmpf
wPdQe221t2C9kt2Meae2WPZhfDOdc48uup/s9mpvyu9S+6e6xizep9reZSwy
r2SPYE6qTzPZ7WXX1jW+U3mAzr+auaW2z9S/ho7v1D6LNVvXqi77W9nPs6bL
niH7KZXX6vwqer41qnuR59e13lPbPbrOVuab6s5l3qr9vchj+DiVU/VZy3iS
fYLsu9T/G/yV6lrpGnfpeSbL3q76I3X9XP3XRx6TJ+IbgtfbM9V+sNrv1N9N
+Af1OYCXnPva56i+r9ory/5Kbc9Qp3NfVZ+vZT/L71Of0To2Mj5Vt7farlP/
12Vv0bPX1Pl/8o5jj5mjGdvqv6P6TtFxA79Zz9tcbderzzydu1L2XrKvlT0H
XyH7CtnT8PmyN8q+UvZ01njZ72deb1l358vOZV+uazdWXVB5S7G+vcC6qPYJ
uudCfCVrkJ7lQrX3UflDlVuxnsi+TPbT6v+O+r+n3/x0ZMzQRuX1OgarfJT6
36j+9dW/EdhBdlPZq9TeS/YU1nHZ7wT/Vu5xtMrHqX9XlQ9Q/7d1/ZqyaxRr
RyP6Z372QTr/dbV/oHOejTxHDgfvqH1vla9T+1y1f666V8AK+JBg/NOR9U+/
82xd74PMvnek+r+p/l1knyV7se53oNqHqO4Fxrbaq8teqWs8yVxX3WEq750b
K+wmewfZZ8s+VuU7Y+OXapnXr4q63iuye+o4RfY4tf+JP8uNd8bL/kvl83P7
34dk/61yNx3tZN8V2x/3yD1f746N3/AL+IePImOKNpmvv4/Kp+t5l+uZpuJL
WeOYb2qvxLOq/VWdv6vs6rJ3Svw+z9JxhOzbYuPJVmo/Qfbeat9P15ula1yv
6x2tur1UvlFHF9n76X2+qP5n6mittjGx15MzdBwke3Ts9eN0HS1kj4iNX6pk
9ueZrj9bdjPZR8puJHsv3W/fzL9/D9ldZa8v8MBTOn+Z+n+sk2dGHvOrmb9q
v0/lZWr/Uu3367neUHs/1d2k8rJgrHIRY1TlB1U3N/IcYs5sVN3rkcdwO5Vv
0DWW4TvAjrr/t7r+DbJfld1b9v6yD2Xu6zpnyq4heyf8l+zOspfI3l325bHf
98+ybynWZ/zJT7JHy34j9vpYNftviSndqt/bQOcPk7FQ9ndqryP7Wtkv4TtY
o2UPlf2i7K9k15B9fW7/tZUxKfupzM+PL20ve2kwNrtQdUeq/IXaB6o8Q/0v
UPubmf01fpvvsVh2HdkDYo/fl2R/IvsGXa+j+g/P7a/x23XBK2q/XnYXtX+u
tibF+gXWO0Xtv8i+Vfb82Hjpk2I+Mp4X419kd5J9j+wl3D8Yy56ruiNUjnQ8
xnhX+2a1/6P+D8l+V/bXsv+WPb5kPPuV7Kdznwv2HcZ6q/Z7ZS9V+xdqezZ3
/DNB9j/gtyK+ek/2JtnXy75d9rM6/1Kdv0n3n6/nGc47V/m3on1BbLy4WXUL
Io+RDip/hD9V+Ra1v6X2X2XfJvvN2HhyFfESY1P2Qtndc/vbsbHjsa0FHn0x
LvAJmD7yN/sUfFSsx+1U/kjtq4vxeLP6L5K9rfgeL8XGzx8SzxXzc4Hs4bLv
kX0BOFX2OTo6y74X38rap98wXPdryxqg8u/qt09knz1Xz1KPwcq305//qf2w
3Hi/vdqa6H09J3u27E1gR9m784107puqG6j+LWQ3jL3mz5WdEx9G7rNC5X3U
Xl/trdS+m9oz1R2otr90LFc50XGAyn/oWKbyRzqyAkMO0bPeod83SeX+Km/T
tU6WfabsRbIP0PPsxPiLvZ6doXP76RgL9tExQOVGhb+tn/h9gqvBls0jY+gF
aq9ZcqxynK73B3EkY1F1+4OlM7+72erbQu1z9Bvu0LldVHegytuJQxmrsluw
VqnuNmIjfKDKDXLHsm/LvjoYN4Af9o+MUZ/Q9V+VvSOxJvGB7Btln554fL+t
+t8inzNQdW/K/l72jzoWqvynrrlK5adU3qD+tXO/y3msWcF4oS2+RnZH3i3r
c4FXjpS9RNesFNnHjACfq32m2lKVj9Hz/IXfUNvPOt7iW7Em6PwhjBHW38zY
6W/1O1r9a+buy2/qq/aWuWPXnrKXyP6X96j2X3Us0fXq544dl6j9KrXXyT02
5su+QnZDXX9Pleslnl+PZsaaQeceq/u1Ul1TnX+/6jqrf+vcsc17+BzWH/X7
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
v+Cac9nP6tku1/36ZcZvxAuMqSNz48UyY1d2R9mjg2NtYu5DZN8UHKuDkcBK
w+E4Y8eoxKq8j994PtYs2XMzl1nfbgD/l50nhgOGC+Yd8a7aRc6P8v7IkxFT
Elv+HRxrEnMeBP9UxFtwHPvCN5WdJyYGJBZclzk/RQ6aXDTzkbiE+ATuJCo7
L48PvF12GZ8UO193lc5tk3iNYW05Jyv9B0YeUXsPFW9T/6Fl593JCZMb/lHH
8zonwr8EY2ywNj75ptwcGlwaMTmx+e863lD/HHxHfA6GSzyHDyU+lv1gbE76
eGLTzGOVHHk7tU2TXSG2BgC+YUjZeUfyj2gZOuk4LrZ/76C+x8s+XvYTrOGZ
OWcwFRhqBN9X589NfM5xshcV85tzOst+ScctifPH83V+h9xj4wHwr+zXZN+X
GJ8tY5zJbp06//iW7LcK/9dZ55yothNyl1mPTlf7LB1VieEi82FvyN4tdg4W
PuFZ+N3YOdbLivFeKTW/8KTaBpedJyRf2FD9ry07r0p+ldw7eosdYudc4TfI
5+1E7KKjGfGZ2ndlbYuc339BdjXmQmR+5EXZ1VlbI/NJr8rehbUxsl6EfDq5
cXLkM9W2We+iceQc6luq3yK7SeSc2+LY8R36gbMT5xt3x0eXfM+vVa6PDy75
nptS/wbmxh6pf1tt/V1d8jv7SuXdUmsZ0DR8mfqdwOexJvCuvonN/bDewsfA
//DbarFmls2X8dvq4LfK1pegheGdf6LyD7HfLesL/CDv+GiV66Z+94w53kXD
1GNxgOxPIq+prK3TUueSPy3qyK/WV/k0Xetini8xN7RadU+rfXxm/o01n7Wf
2AG+jfgCPQz8GFzRD5FjOvLraCv4xmAm8utoNZgjn6Weo3zbxqnnbhP9XVvy
N9yi8heJsT452amyx2Xmr/BR+Cr4KfQWZdmXl51DgnvvWHJu7KeCE2lXshaH
nBO5p/Yla0PwN+TK8KF1g3M45HJaFv4HfENur7fs6WrrkDg3SX6lf+YYnVgd
DHFuZgwBlugl+7zMnDfcd4eStUmsR7fHXjNG5c5JwZGQI0L7RI4JLhvOC+4L
fnieytsjx6Sb1fZ7ZH8L/wm/iD6ootquKJvvZO2pik8tm1+Ee/wpcgyNnghu
MdJ1PkitV1ks+1/mQOqcFrktOBpy5fDX81X+M3KMTf4f7jaJHVPBl7M21FT5
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
+Q==
          "]], Polygon3DBox[CompressedData["
1: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
eG+cwVEzRG3FV1X8Ft7b9U7FGmFvRy1UUN+MwbdE3eZ6b4p54h5hi/RtE3/K
dx2W43501c6jkbyjsd+Nt994q7G/0yw5/eWuj/qdZzdWTnsgX1W+SuJdVDqd
1MVRH1cUH4m6Xe7Ncd5o96KGNBN7KL6t+J8w3tKCWuUxucuxauIdcXZr34+V
N1458VYqFusPK4WVFe+kklgfrAJWXvweFcH6YsWwUuIP41ri7MEqYhXEh3OS
fS/bPeis3YXepTOx+EgsyldS3Dfer3RSl0R9ki0eFe8rdho7wLeG7yQ1jXcf
G4b1F5+gO7BV2ND4bhD/GOc/lo8NwvrmJGd1nJNxXm7TNyWTnJnB4jz/IOre
WMt836eT9yPek6yCdd8wnazvWOf7Mkn9HXX493xX0ZKoSah8OrnPcb+jRhyL
rcS6ZyfvZwNxHl2FLeTr7vqaxPsSNWU8I7739U3KJPcr7luPTLKWdvitGt+n
6aTujDni2ZbAj2ofNF4qanysC1aHbz6WBzc2zjBsKPYj9gG2BOuA1Yo6DWuF
XYsdo5uxJVgf7D7xoZzkHMryLDtodyxY07G298YeZf6PohYV38K3NM59ub3F
X8d3if45ru0Tfc9mku/i+N6J754JsRdlkm+fYPHtvIPvaewcOoYdMl4hvDvP
CGyE/pNZSX0Xdd6e3OQbPL7FB0dNlEm+5eObfnY8yzjDsf25yTdpfJt+iE3F
emNnid/LTr4v4jvjT74oMeY=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1LVGEYBuBnxkxNS1dCiSNuJIncWK1sFS3CgUB0bGYYsKIPRdRaNYIr
CVu5kKi1RK0DbRW40Z27Mmv89g/oquy7rlMw91z3c+Y9c17emfZb431jqYiY
lRvpiKT385rSVC3mZrYxWZjRu/SF4xFT5sv6JdeyvMpicj8HZER/a82wXtZX
9Qf6E72iT+rP9cd8xad8wxdc4dmaiEZ7Kch78yA75bOsmb/wA4+4zq/8yG/8
xO+s8Ad/yob+i5v8zS3+4TajKmIHKe4yzT0eHIs4Y01R9s0DPC1L9vjO/JrL
nOci5/iS03zGMmc4wUe8z3syrPexwCvs5QX2sIPn2cpM8ts465LzyntuoznH
jDyUU8l382Ty+7CBo6znRXvPu++E3q3n9LpkDz6v5V3eEccct+kxcZMeG9et
HdLdFue8ZVP/jihKrnnFoWst6f//mb9FuUJi
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1296, 1661, 1663, 771, 1662, 1542, 1665, 2121, 1471, 1664, 
       1543, 1667, 2178, 1848, 1472, 1666, 1923, 1974, 1669, 1473, 1668, 1924,
        1975, 1474, 1297, 1976, 1475, 1298, 2081, 1544, 1671, 1849, 1871, 
       2179, 1670, 1545, 1673, 1850, 2122, 1476, 1672, 1546, 1675, 2123, 1477,
        1674, 1547, 1835, 2174, 1478, 1834, 1962, 1977, 1479, 1299, 1978, 
       1480, 1300, 1979, 1481, 1301, 2124, 1677, 1482, 1678}], 
      Line3DBox[{1302, 1548, 1680, 1872, 2082, 1679, 1549, 1682, 557, 1681, 
       1550, 1684, 2125, 1483, 1683, 1925, 1980, 1484, 1303, 1981, 1485, 1304,
        2083, 1551, 1686, 558, 1685, 2126, 1552, 1688, 559, 2180, 1687, 1553, 
       1690, 1873, 2084, 1689, 1554, 1836, 2175, 1486, 1691, 1676, 1982, 1487,
        1305, 1983, 1488, 1306, 1984, 1489, 1307, 1985, 1490, 1308, 1986, 
       1491, 1309}], 
      Line3DBox[{1310, 1555, 1694, 1851, 2085, 1972, 1693, 1556, 1697, 1874, 
       2086, 1696, 1557, 793, 1311, 1987, 1492, 1312, 2087, 1558, 1700, 1852, 
       1853, 1699, 2128, 1559, 1703, 1854, 1855, 1702, 2129, 1560, 1706, 1875,
        2088, 1705, 1561, 1837, 1876, 2089, 1708, 1692, 1877, 2127, 1313, 
       1988, 1493, 1314, 1989, 1494, 1315, 1990, 1495, 1316, 1991, 1496, 1317,
        2131, 1711, 1712, 1497, 1318}], 
      Line3DBox[{1332, 1574, 1713, 1573, 2094, 1331, 1722, 1721, 2136, 1330, 
       1499, 1993, 1329, 1498, 1992, 1328, 2032, 1880, 1327, 2031, 1879, 1326,
        2130, 1710, 1838, 1709, 1325, 2133, 1572, 1707, 1571, 2093, 1324, 
       1570, 1704, 1569, 2092, 1973, 1323, 1568, 1701, 1567, 2091, 1860, 1322,
        1566, 936, 1321, 2030, 1878, 1320, 2090, 1565, 1698, 1564, 1319, 2132,
        1563, 1695, 1562, 1859, 1715}], 
      Line3DBox[{1334, 1575, 1714, 1576, 2095, 1333, 1881, 2033, 1335, 1577, 
       2034, 1926, 1336, 1861, 1927, 2182, 1716, 1578, 1337, 1862, 950, 1717, 
       1579, 1338, 2096, 1580, 1718, 1581, 1339, 2135, 1719, 1839, 1720, 2134,
        1340, 1882, 2035, 1341, 1883, 2036, 1342, 1884, 2037, 1343, 1885, 
       2038, 1344, 2138, 1729, 1730, 1345, 2097, 1582, 1723, 1583, 1346, 2098,
        1584, 1724, 1585, 1347}], 
      Line3DBox[{1349, 1886, 2039, 1348, 1586, 2040, 1928, 1350, 1863, 1864, 
       1725, 2041, 1929, 1351, 1865, 1866, 2183, 1726, 1587, 1352, 1930, 2137,
        1727, 1588, 1353, 1130, 1840, 1728, 1354, 1994, 1887, 2042, 1355, 
       1888, 2043, 1356, 1889, 2044, 1357, 1890, 2045, 1358, 1965, 2046, 1738,
        1359, 1931, 2139, 1731, 1589, 1360, 2099, 1590, 1732, 1591, 1361, 
       2100, 1592, 1733, 1593, 1362}], 
      Line3DBox[{1365, 1595, 1744, 1856, 2144, 1500, 1743, 1596, 1746, 1857, 
       2145, 1501, 1745, 1597, 1748, 2146, 1502, 1747, 1936, 1995, 1842, 1503,
        1749, 1964, 1996, 1504, 1370, 1997, 1505, 1372, 1998, 828, 1374, 1999,
        1506, 1376, 2000, 1507, 1378, 1751, 1753, 2147, 1508, 1752, 1938, 
       2001, 1755, 1509, 1754, 1940, 2002, 1757, 1510, 1756, 1942, 2003, 1759,
        1511, 1758, 1943, 2004, 1512, 1384}], 
      Line3DBox[{1383, 1603, 1742, 1602, 2101, 1382, 1601, 1741, 2143, 1941, 
       1381, 1600, 1740, 2142, 1939, 1380, 1599, 1739, 2141, 1937, 1379, 1967,
        2054, 1750, 1377, 2053, 1893, 1375, 2052, 1892, 1373, 2051, 827, 1371,
        2050, 1891, 1369, 1737, 1841, 2176, 1963, 1368, 1598, 1736, 2140, 
       1935, 1367, 1934, 2049, 1735, 1870, 1869, 1366, 1933, 2048, 1734, 1868,
        1867, 1363, 1932, 2047, 1594, 1364}], 
      Line3DBox[{1385, 1604, 1761, 1858, 1894, 2181, 1760, 1605, 1763, 2148, 
       1513, 1762, 1606, 1843, 2177, 1514, 1764, 1966, 2005, 1515, 1386, 2006,
        1516, 1387, 2007, 1517, 1388, 2008, 1895, 2055, 1389, 839, 1390, 1766,
        1768, 2149, 1518, 1767, 1607, 1770, 2150, 1519, 1769, 1944, 2009, 
       1772, 1520, 1771, 1945, 2010, 1774, 1521, 1773, 1946, 2011, 1522, 1391,
        2012, 1523, 1392}], 
      Line3DBox[{1393, 1608, 1776, 1896, 2102, 1775, 1609, 1844, 1897, 2103, 
       1777, 1765, 2013, 1524, 1394, 2014, 1525, 1395, 2015, 1526, 1396, 2016,
        1527, 1397, 2017, 1898, 2056, 1398, 1779, 1781, 1899, 2152, 1780, 
       1610, 1783, 852, 1782, 1611, 1785, 2153, 1528, 1784, 1947, 2018, 1787, 
       1529, 1786, 1948, 2019, 1530, 1399, 2020, 1531, 1400, 2021, 1532, 
       1401}], Line3DBox[{1402, 1612, 1845, 1900, 2104, 1788, 1778, 1901, 
       2151, 1403, 1902, 2057, 1404, 2022, 1533, 1405, 2023, 1534, 1406, 2024,
        1535, 1407, 2156, 1791, 1793, 1903, 2155, 1792, 1613, 1796, 1904, 
       2105, 1795, 1614, 1799, 1905, 2106, 1798, 1615, 1802, 865, 1801, 1949, 
       2025, 1536, 1408, 2026, 1537, 1409, 2027, 1538, 1410, 2107, 1616, 1804,
        1539, 1411}], 
      Line3DBox[{1413, 1789, 1846, 1790, 2154, 1412, 1906, 2058, 1414, 1907, 
       2059, 1415, 1908, 2060, 1416, 2028, 1540, 1417, 2157, 1806, 1807, 1418,
        2108, 1617, 1794, 1618, 2158, 1419, 1619, 1797, 1620, 2159, 1420, 
       1621, 1800, 1622, 2160, 1421, 1623, 1803, 1624, 2109, 1422, 877, 1423, 
       2029, 1541, 1424, 2110, 1625, 1626, 1425, 2111, 1627, 1805, 1628, 
       1426}], Line3DBox[{1428, 1909, 2061, 1427, 1910, 2062, 1429, 1911, 
       2063, 1430, 1912, 2064, 1431, 1968, 2065, 1814, 1432, 2112, 1629, 1808,
        1630, 1433, 2113, 1631, 1809, 1632, 2163, 1434, 1633, 1810, 1634, 
       2164, 1435, 1635, 1811, 1636, 2114, 1436, 1913, 2066, 1437, 1914, 2067,
        1438, 1026, 1637, 1439, 2115, 1638, 1812, 1639, 1440, 2116, 1640, 
       1813, 1641, 1441}], 
      Line3DBox[{1443, 1915, 2068, 1442, 1916, 2069, 1444, 1917, 2070, 1445, 
       1969, 2071, 1822, 1446, 1950, 2161, 1815, 1642, 1447, 1951, 2162, 1816,
        1643, 1448, 2117, 1644, 1817, 1645, 2169, 1449, 1646, 1818, 1647, 
       2118, 1450, 1918, 2072, 1451, 1919, 2073, 1452, 1952, 2074, 1648, 1453,
        1953, 2165, 1819, 1649, 1454, 1044, 1820, 1650, 1455, 2119, 1651, 
       1821, 1652, 1456}], 
      Line3DBox[{1470, 1830, 1847, 1248, 1469, 1660, 1829, 2173, 1961, 1468, 
       1659, 1828, 2172, 1960, 1467, 1658, 1827, 2171, 1959, 1466, 1958, 2080,
        1657, 1465, 2079, 1922, 1464, 2078, 1921, 1463, 2120, 1656, 1826, 
       2170, 1957, 1462, 1655, 1825, 2168, 1956, 1461, 1654, 1824, 2167, 1955,
        1460, 1653, 1823, 2166, 1954, 1459, 1971, 2077, 1833, 1458, 2076, 
       1920, 1457, 1970, 2075, 1831, 1832}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{605, 902, 1066, 772, 2121, 606, 915, 1084, 557, 629, 926, 
       1095, 2086, 792, 642, 935, 2090, 803, 653, 2033, 812, 662, 2040, 958, 
       1139, 567, 671, 2048, 971, 1157, 570, 2145, 680, 984, 1173, 833, 2148, 
       691, 994, 1186, 2103, 844, 704, 1187, 2151, 857, 718, 2058, 869, 731, 
       2062, 880, 742, 2069, 889, 751, 2076, 896, 758}], 
      Line3DBox[{608, 1283, 904, 1069, 905, 1974, 1071, 917, 1086, 918, 1980, 
       631, 794, 1987, 644, 936, 937, 1109, 1293, 2182, 948, 1124, 949, 1126, 
       1295, 2183, 960, 1141, 961, 1143, 2140, 973, 1159, 974, 1995, 1269, 
       1161, 1175, 1162, 2005, 693, 846, 2014, 706, 859, 2022, 720, 2060, 871,
        733, 2064, 882, 744, 2071, 1232, 1233, 1235, 2166, 1048, 1253, 1049, 
       760}], Line3DBox[{609, 906, 1070, 907, 1975, 610, 782, 1981, 632, 928, 
       2087, 929, 1097, 1290, 938, 2091, 1108, 939, 1111, 1294, 950, 1125, 
       951, 1128, 2137, 962, 1142, 963, 1268, 2176, 1145, 1160, 1146, 1996, 
       682, 835, 2006, 694, 847, 2015, 707, 860, 2023, 721, 872, 2028, 734, 
       2065, 1218, 1219, 1221, 2161, 1032, 1234, 1033, 1237, 2167, 1050, 1254,
        1051, 761}], 
      Line3DBox[{611, 773, 1976, 612, 919, 2083, 920, 1088, 1286, 1287, 1096, 
       2128, 930, 1099, 1291, 1292, 2092, 1110, 940, 1113, 952, 2096, 1127, 
       953, 1267, 1130, 1144, 1131, 673, 2050, 826, 1997, 683, 836, 2007, 695,
        848, 2016, 708, 861, 2024, 722, 1207, 2157, 1208, 1210, 1019, 2112, 
       1220, 1020, 1223, 2162, 1034, 1236, 1035, 1239, 2168, 1052, 1255, 1053,
        762}], Line3DBox[{613, 908, 2081, 910, 1073, 1284, 1285, 1087, 2126, 
       922, 1090, 1288, 1289, 1098, 2129, 932, 1101, 941, 2093, 1112, 943, 
       1266, 1115, 2135, 1129, 1117, 664, 819, 1994, 674, 827, 1998, 684, 837,
        2008, 696, 849, 2017, 709, 1197, 2156, 1199, 1201, 1009, 2108, 1209, 
       1011, 1212, 1021, 2113, 1222, 1023, 1225, 1036, 2117, 1238, 1038, 1241,
        2170, 1054, 1256, 1056, 763}], 
      Line3DBox[{616, 911, 1074, 1274, 775, 2122, 617, 923, 1091, 2084, 784, 
       634, 933, 1102, 2089, 796, 646, 1103, 2130, 806, 656, 2035, 814, 666, 
       2043, 821, 676, 2052, 829, 1999, 686, 839, 698, 1188, 1189, 2152, 851, 
       711, 1002, 1202, 2105, 863, 724, 1012, 2159, 1213, 874, 736, 1024, 
       2164, 1226, 884, 746, 1039, 2118, 892, 754, 2078, 899, 765}], 
      Line3DBox[{620, 1078, 1265, 1079, 1977, 621, 787, 1983, 637, 799, 1989, 
       649, 809, 1992, 659, 2038, 817, 669, 2046, 1147, 1148, 1150, 2141, 975,
        1165, 976, 2001, 1167, 987, 1180, 988, 2009, 1182, 997, 1192, 998, 
       2018, 1194, 1005, 1205, 1006, 2025, 727, 877, 739, 2067, 887, 749, 
       2074, 1040, 1041, 1243, 2171, 1058, 1258, 1059, 768}], 
      Line3DBox[{622, 778, 1978, 623, 788, 1984, 638, 800, 1990, 650, 810, 
       1993, 660, 1132, 2138, 1133, 1135, 2139, 964, 1149, 965, 1152, 2142, 
       977, 1166, 978, 2002, 1169, 989, 1181, 990, 2010, 1184, 999, 1193, 
       1000, 2019, 714, 866, 2026, 728, 878, 2029, 740, 1026, 1027, 1228, 
       2165, 1042, 1242, 1043, 1245, 2172, 1060, 1259, 1061, 769}], 
      Line3DBox[{624, 779, 1979, 625, 789, 1985, 639, 801, 1991, 651, 1118, 
       2136, 1119, 1121, 954, 2097, 1134, 955, 1137, 966, 2099, 1151, 967, 
       1154, 2143, 979, 1168, 980, 2003, 1171, 991, 1183, 992, 2011, 701, 854,
        2020, 715, 867, 2027, 729, 1015, 2110, 1016, 1216, 1028, 2115, 1227, 
       1029, 1230, 1044, 1244, 1045, 1247, 2173, 1062, 1260, 1063, 770}], 
      Line3DBox[{626, 1081, 2124, 1082, 627, 790, 1986, 640, 1104, 2131, 1105,
        1106, 944, 2094, 1120, 945, 1122, 956, 2098, 1136, 957, 1138, 968, 
       2100, 1153, 969, 1155, 981, 2101, 1170, 982, 2004, 689, 842, 2012, 702,
        855, 2021, 716, 1007, 2107, 1008, 1206, 1017, 2111, 1215, 1018, 1217, 
       1030, 2116, 1229, 1031, 1231, 1046, 2119, 1246, 1047, 1270, 1248, 1261,
        1249, 1262}], 
      Line3DBox[{757, 895, 1250, 2075, 750, 888, 2068, 741, 879, 2061, 730, 
       868, 2154, 1196, 717, 856, 2104, 1195, 1001, 703, 843, 2102, 1185, 993,
        690, 832, 2181, 1282, 1172, 983, 679, 2144, 824, 1281, 1156, 970, 
       2047, 670, 818, 2039, 661, 811, 2095, 946, 652, 802, 1107, 2132, 934, 
       641, 791, 1276, 2085, 1094, 925, 628, 780, 2082, 1083, 914, 604, 771, 
       1065, 1064, 1263}], 
      Line3DBox[{759, 897, 1252, 1251, 2077, 752, 890, 2070, 743, 881, 2063, 
       732, 870, 2059, 719, 858, 2057, 705, 2013, 845, 1176, 692, 2177, 834, 
       1174, 985, 681, 2146, 825, 1158, 972, 2049, 672, 1280, 1279, 1140, 959,
        2041, 663, 1278, 1277, 1123, 947, 2034, 654, 804, 2030, 643, 793, 927,
        630, 2125, 781, 1085, 916, 607, 1272, 2178, 1271, 1068, 903, 1067}], 
      Line3DBox[{764, 898, 2120, 1055, 753, 891, 1240, 2169, 1037, 745, 883, 
       1224, 2163, 1022, 735, 873, 1211, 2158, 1010, 723, 862, 2155, 1200, 
       1198, 710, 850, 2056, 697, 838, 2055, 685, 828, 2051, 675, 820, 2042, 
       665, 813, 2134, 1116, 655, 805, 1114, 2133, 942, 645, 795, 2088, 1100, 
       931, 633, 783, 2180, 1275, 1089, 921, 615, 774, 2179, 1273, 1072, 909, 
       614}], Line3DBox[{766, 900, 2079, 755, 893, 2072, 747, 885, 2114, 1025,
        737, 875, 1214, 2160, 1013, 725, 864, 2106, 1203, 1003, 712, 852, 
       1190, 995, 699, 2149, 840, 1178, 1177, 687, 2000, 830, 2053, 677, 822, 
       2044, 667, 815, 2036, 657, 807, 2031, 647, 797, 2127, 1093, 635, 2175, 
       785, 1092, 924, 618, 2123, 776, 1076, 912, 1075}], 
      Line3DBox[{767, 901, 1257, 1057, 2080, 756, 894, 2073, 748, 886, 2066, 
       738, 876, 2109, 1014, 726, 865, 1204, 1004, 713, 2153, 853, 1191, 996, 
       700, 2150, 841, 1179, 986, 688, 2147, 831, 1164, 1163, 2054, 678, 823, 
       2045, 668, 816, 2037, 658, 808, 2032, 648, 1988, 798, 636, 1982, 786, 
       1080, 619, 2174, 777, 1264, 913, 1077}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
X6s37mv9/wDdL6vd
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[0]], HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotLabel->FormBox["\"Resultado de la red neuronal\"", TraditionalForm],
  PlotRange->{{0, 1}, {0, 1}, {0., 0.96949441799984}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.659926523336327*^9, 3.659935709809491*^9, 3.659974823960455*^9, {
   3.6599757556691027`*^9, 3.659975775590789*^9}, 3.6599758512513657`*^9, 
   3.659975898540893*^9, 3.659976517642838*^9, 3.6601837967755013`*^9, 
   3.660184175907095*^9, 3.660184920678155*^9, {3.660185131398597*^9, 
   3.6601851369007473`*^9}, {3.6601873167266507`*^9, 3.660187323432461*^9}, {
   3.6601873602834463`*^9, 3.660187368863626*^9}, 3.660509268114694*^9, 
   3.660510673919313*^9, {3.660522707680407*^9, 3.6605227393480463`*^9}, 
   3.66052277124533*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNvQe8XVWVP37mnNvefb0kgAKC6ChgGX2Oo3QYBcuIXcfe6ek9JBCSkJCQ
RgqEBEIdHbvDIIJibwgDikqRKl2KQEgl9XdW3Wvvs899L/j5fz7/++GR9+49
59xz9uprfdfa7/vCxFO+MuoLE0/90hcOOGH8F8aecuqXJhxw/Jjx+VvZPyXJ
P52S/7z1gAR+350k8r/d+X+7T4X/wTtD//4Y/tORbNq0KRkzZgz+BT87d+5M
TjrppOSJJ57Av2+99dbknHPOSWbNmpVce+21U+zZmXd2iv9v4Jnbt29PNmzY
kEycODF57rnn8O958+Yld9555+TyK1Tw/7Xkt7/9bXLJJZfoPd14443J1Vdf
PYwzf/CDHyTf/va39czbbrstWb58+TDOvP766wtnrlq1is98lM+8++67k5tv
vhnPrvKZN910U7JmzRo980c/+pG5WzkT3p0zZ4535saNG3GFnnrqqWTr1q3J
7Nmzk7vuuiu4282bNyfTp0/Hv6p8z3B3M2fOTKZNm5Zcc801U4r03YX/dIb0
Gw6Nk8/QJXbiP91lhMRPhyB28ml7qVLKZq0/Di5SQuSs9cfBRUronbX+mC+y
Gf5JYQ2HYIKs9cd8uY16uYROgN8sc5YwStb6Y776evgng2tmwW0X+KjkbeaH
58puM+P/y9/w72g65xn98gpfWw7iH/yMD35Kv6ABv+GxaXBt+DmdDn9Cz+9k
4QiujX+fYeQQD+4Z+uCH9Ub6I18fuyWWugf1W0ZEDgrXCX5OoRPv12/ce89O
vEe/8WWRgyqR906mE+8uo2bsOtXIe/RbcofewAHDvAE+8U96AwcN8xu/Qif+
Qb/x1ZGDapH3vkwn3qonvnbPThzFB/z6179OLrjgAlSgoOUmT56cPPnkk/+p
T3Jo5Br1yHtfouuO5jX6/ve/D+og+c1vfpNcdNFFH9P7fP2eXW8Mf3TVVVcl
o0ePTu6///7kI3pz/xI5sRF574v+xW6//fbktNNOQ+X8Qb2zN0dObIu89wV7
sUpy/vnno3ZZvHhx8uc///nEMiaMXb6uX+4tXy158MEHk7PPPjvZtWsXGiKw
s/l779Hj/y1ytWbkvc/TdW/UuzosclB75L3P0Yk36DcesWcnXqcnHh05qCPy
3mfpxGv1Vo+LHNQZeY+V+f/oN75jz078rn7jCZGDuiLvsR36ln7juyMHdUfe
+xSdOJ7pNRxX5rrrrkuTM888M78SmG/4GN4+WG86przfNcwH4fsZxzc8HL/o
j3/8I94vmGj4O5fu5Gc/+1nyGl2M9w9zMT5pv3xIT+qhhx5KHn30Uf0Y7ivX
XK/Sr/1Q5Ct6Iu99wv/aEudKdBI8Log2/HWgftdHXtp3DeGi3Xfffbic69ev
Rx8ZvveGG254hX7txyNf0Rt57z/9rx3ClQPKAtWB2uCWf/Ob3wTK7qcc9snI
V/RF3vu4/7Utfbws2bFjRzJhwgT8az99xE/v2XeRJJW4fVXUoaDp5QfM3d76
XJ8ro2JMf/MXroJ/0I/7fOTsgch7H6UTV+iFY77PZ/fsYst0vU6KHBTz1Ihj
k8V64ql7duL5evtnRA4aGXnvw3TiefqNoyMH7RV5jwQ5maffOG7PTpyj3zgh
clDMG/0gnXiOnjh5mCd+gE48S0+MKeOJe3axGfrcMf8t9kj7RN4jJZxM0zs7
K3JQzDE+kU6crCees2cnTtTbnxs56OWR995HJ47Tb5xX9o34Fn/PGP2eBaVL
4sdm7twz9GLnR87dL/Lee+nE0/RLY4SO3cj+kffeQxc7We9i2Z6d+BW9ixWR
g14ReY/8E/KD8ZNVkYNi0Q45EuTU4Ser9+zEz+itro0cdGDkPfLByDnATy6N
HPTKyHvH04kudLl8z078qH5jjLbrhnmxd9LFPqx38dVhnrgvvwfR2JIlS9B6
/jNd7AN6Z/8dOTEWa8rFwMHMnRn8i0LLxAUo34yc+KoWF4MgBC7ojiOxwKO/
XfaY+JYwM4SXZ511VrJlyxa5xLv0oO9FLhGLh0n5VJJt27Yl48aNQ3cm91n4
esfr8/1v5Nx/jrxHuqKaPP744/iM4JjAv4888ggvLkcPLy33iJ46aqJr9+iG
ahin5u4h/nXPPfckCxYsgIiQuIdjqH8smfnPulgxp+SayHuviby3N98veOxf
+9rXnMysW5f86le/8u73pWZMD1I2+WHkDmLZD/Lg//Egy935S0vTHqhr/ONh
3nltDyhbFo4d4t/6S0sO76+L/tPIbR4ceU+yxy8tmAtu+qWloF+uN/2LyA0e
EnlviFpLLBQMOOOlpbP30Tv91R7e6UsLJA+xymy4qfK99CZ/G7mhWHpwCPoM
EXbyTb5RpSZmjX8dee91kffS4dDHD0UpQUlXw4vdukePvUehKD/rIfqsfxjm
c1EWz+RcUFLboW769TJJpbf8oJav82q9ARSeGlwnaU8enN6d3Du1O7lrcnfy
pwldyW1ju5KbR3cmvz69M/nZqR3JjSd1JIODg8k1n2/PHzB/XT1MBRcj6dvp
VpzPgNJRwVsZmaw/tzd5bk5v8szs3uTJWb34tQ/P6EkeyG/xnindyZ2TupLb
x3clt+a3eNOozuRXp3UmPz2lI/nhVzqS677Yjsd/6zPtyX9/splc9Z/NZN1H
25I1H27L4OqX69PH8slvo/tySZi93X29InlxYW+y+bzeZOP83uQFuMe5vcnf
83t8+pye5G9n9+D3/vXMnuT+ad3JX/L7/PPEruQP+X3eMqYr+e0Znckv8vv8
yckdyQ1f7kiu5fv85qebyVfz+7zy483k0o+0JRd/qC258ANtycr3tyXLT2zg
N8Nxa8uo+sbyx3CJlpHuMXLburQv2b2kL9m1uC/Zvqgv2Zo/1qb8sV6Y15s8
D480hx7pyVk9yeNn9SSPzKBHuy/njruFO8Yxd+SP9XPmjuvzx/rfL7Qn3/ks
Pdp/faKZXP6xtuSSD7clqz/Ylqz6QCNZkT/SBe9rJEv/o5Esem8jQZqs0vuM
lU3eEHmPMuIUYFL+puItSv5vr3vkXOSW9ye7L+CfZf14e7AEO2EJzu/LKdun
S/DsXOA8evwncqo+NrOHuC+nKpwH3PfHCYb7Tifu+1G+BNd9qR0F5NufoSW4
Oue+y3LuW5svwUUfBKrS4y/Lf5bkj3/+exp43PwTGsnc4+sp3O0F+lCisQgh
YRXP0Cv0VrNCWZnP13RrlH+8ciD/yddnRT/IbL5ih+p64U/ONnCvsmZb8zXb
zGsGkvB0vmZ/y9fsMWYZkQQ4546JJLH/N6Yz+e0oIwm5xH4/l4Tvfa4dJfZr
uSTA8etySVjDkrDi/bxeOcsshjV7dyM57120bnPeWU/OeUc9Oevf6wku3iL/
efG9/GG+OjLGWbHyFK8bFZZeWgxQ1Xvoot/glfPnRfn6Xsg/qwZSXOwqLnfI
niku9sHJriW05NtguRfQcm/g5QblKMstylEkFM75PUvob1BCO5MbT3YS+t18
ub8BiucTtNyXGMUDSkekE9hzYb7c83m5Z+fLPStf6pnH1ZMzj60nU4+u0bLP
10eu6LLDs/3XSFh7/eGFGBYD/ysRgvyxfyzwidXu89/b9VZzXlk9kN8vqgUl
UT9SKEUKvTmgUZ+nRXcsIjoBjTYxjZ6fKwbM0Uht7CSiEdjY36mN7WQV0kEq
JNeiX/9UE1UIaFE4HrVoLg5AIxAHoM8CFod5JzCNcnE4O6fRjJw+04+pJ1Ny
Gk06spZMPBIt/RxfQCpMkv8amSGFfGUTM90xWr3F0uqlBn0lCAsH+KiwMF8M
srMa/pdLVIWItkoJRvR6i6MX0MrQaydbvW0LiWab5jsV9oxRYQ+dSSofHI47
Jnaj+oLjfzeqy3M4UH193qmvqz5ODgcca1U+qPuF7wFa1XNa1ZNzj6+j+oLj
zjqO6DUtp9Xko4hWExzN4BiXdXYS1gZ0SyN0i+n6mLIL6PbSQt6YQIc3QJQj
SVszkAU0rKLAER37Axv0Bl/ghIiLnN2G88AjA6/xWXZdwG4/OhNsUDfaIFCK
6I2NAxtEhPxFLnA/LijFdlSKVxhvDI4VGwT2Z8G7fQKCwMExqBSPIaU46aha
hhTMUPbGH0F0nO4TEYnW8Y8ScdAn4ksL/mNEtO/hja0ZAKKsGagA/Uhn1gOz
xq5VKxIanQnk2wI6cz45+eJ9PpWT8PGchI/M7C6JS4iEPz8lt2u5DP4gqjOb
6HaBziySsIEkFPcBbNrZxxEZRWfmspciCavJhCOcCoVD4DU5Qsr8ca8eifSs
/APK9M0+PV9aXiRGT4n5LT1FGjOVxpSEUUUR6en5KH1FWqIo9iZbODiCc54r
2L9uE8B1+wFcbv/gHArgOpL/+VxRn65RF5rouYx9FKEl+ibsCs5kWk7LaQn6
lAhZQ0KCLAIh4X04ZvzhNdRMriLlDGMNCNoOBK0Ok6AxAQ0I+tLSRzGQooVS
4Y1dPED2seJ0a0P8TU+3IlGJoClS89CIanX0BNUKpzx9Ti8GumgfZ3SbQLcb
A93/40D3l6cRPTHQ/UIHuvffjKhWdO9PJHqiz/ken55nIy1rua9Zy+WS6DVJ
6dmm9BQBhc/h93GH15Kxh5POHeXTNaNsR07Xzj1RvIfqVVjdNliYhpdXq6gn
0xYKYU4zkb8MKdbnKGYiMkMxT/x2LyaSgTuzdQHnJ3J3Zv3cXjKp3cnqD0Hs
TZ49vAMaEFc69xrPjaw0eCFwHEgJrnSGi1z3xCZcZlcsdf5JNyxzN0YBL00V
UoomWvJui/B+qMTa3Squ6FclhisZMUj0XAPJ33Mn8KlZlPJ4xDjtoLQk7v8d
K62fQdz/FZcY+7aXdWpCDJvhh+3or8NvEE/hyh9PrsNZ6KsTf0/llcdVr+Cq
NzzmRsfQX/mTIvydP/5VI5HJxT/Of+MfoYcYsj1xNVrQoxnyde4cCEsTNWqe
BjImheKu/UjrcJQLLPyCpAHPcVYEjhStc8ekotaBpMIPv0xeOaUBm2hFNL32
Qad1wIKkTB2gCCRhLFVQFnKqTCGHjqwF+nRAmGYyzlgT+Ew89/FMoDFEoC/6
BDJLz0HyVeAzxEjFrmH+bjpMIYoR7Y3lRGsPhWg1GhChWCW0G0SpV0YVD/hw
EvdSUrRX3XDMHoIbzklRyk10aW7ix5w9vBbccJM9vCL34TR7CAlRyRyS9iLi
NZK57IVDGDU9J9rUY1wYlR9B9GpHegFd4McK1eQji3RD/fWZiGiBrFw1kiiV
/1trQb6Gkq/2D5DvDeXkk4IUXhbccPkh+0E3dLDvvbHSw1sVz81klnKzgUGU
yJzkf0EJwjnWC4fMBSnBTlSC6oUHyU9I5F30AUfBJZzEm39CXZN4RMqaIyHL
3ASiUQrESYGCKZKo6QnelKOImBMsEQ+rJaMPI9fuP+Mq8sqRRMtMqQk/FUfR
zKMoOoN4n00kZ9Ujp/hksXR8CxIKUllISNof/s/Ct1KFj4KpgwsOOBwsZNw0
36lNEMKnbA5bEhpTiZR/ZAcc8rG/9PKx5LB969N+PtY5bC6hYcmogdS/O3JK
8kkcNVShTMl8AcWMiUTS0wM5G95pY5mgo4Cob0eG/0iEpjWgaRqhabWMphix
Zaxhrx7Z/AfklEuJMaxfN8upn15U/44yVpkno5QBfq1qWTjVElgSHeCNPx4k
3ME2wvGScFcta5Mdn3XJDswAB1oWbCNmrJjAc4NM1ZmUXaTVrFraqprNkGwd
nqROtQmugLi5tBIh8tf7lbqpBmP5Al0xsj4MEjtFDP+S+v3HaPs6Q1v8pIe9
HbzYKqEmU/KNpbliS0101o24CjUfZVF9cHqP5vP/PIHyHbeYXDFU3KJ5j5Lc
4+L3OGqGeUfxPTlWBgGFjzPPZBI9m56wgqiGNB1HNE2RqBkePp6DhPf6ZFWD
evmInLb0k8L/kdS1lhq6XSW3oUH6MKgbq6+/rlxyey2dXRxBqvjNpjzm0xjU
sZdfVhpz/DzT5ZfvnUL1gD9yfvlmU1L8Iavj/ynLL7M6XialMY6fhcagjuG4
M4+hqE4NJYse0AUdpHFALyBvD1INfhORnswknhInczL2MM2jEOckDMsL6Jwi
mZmSQHD8S4hdb0nsuq+mY4a5Yw9t8qHlRKcOBL6UH6rAUyzrJ+X8LxQ5LhIn
itIlcGOCDXgmIDco53smczkhd4FvHUNpkl8GuIDv2nTJx1zgAsdqec4r/fjk
tuI8MSD3OCI5/Js5Me0tSLWyiw1qjnDno1ZnJxq+B17HlYj3ZSOU4sQFFY8L
8p+AEUoVfKY+WL2MEYarCWJ6/pBypui3TLHcOtRSrj3EU/HbmSdAxUMwC/f5
7BwTFoHBDlQ8hEW3cFgEx/9YQRUdCKr4+qfak/+KpLaXv69N0QRheWkWlwLV
+mJa+wjQzBONcheFLxINTEGs0RfVBmXswVoA3xPWgOPz19GwgrbZRl4px8GX
jai01BGNMtaoEGuQZ17giqpTDy/NPrTgigHLFYHBT5EfDvUCZdAQGChzQlVy
TU9omNWjBkHDLJNrgnOgQPw/kmvKOeIqDLOaXpgFx3nu2/Gu2HG24YjQIBBr
sGPOih1+4PcKskObagA4D4yC1TbCDhivJe44+Ix8hTok5ZHihxkPnvTEuhE1
4ILqS7MUGZkyzXz5XFCB/7dRoZtYHRhC2GG4CoKRoLF+pJHsMOAlIz7B7kWu
TqJJWvYL4IaeBE+efT/yyfelvDna/fYIQKxRILOtZ4lvZzNT1hDI32OZnGMO
Y69vL/XGR5e4AkRxKK3UNUgX26HUPpqOgXIaBAtwK/B6q7ER8GJTcOkI+XF8
UIvwQRrRBhnbgxaEryrhqy38hNerhjq0nM70XpMusNSnMTgD2xey4qeMCq1K
W3K/6Pnc9pOe7yRMoAnM6NiRLhA7MU5iIe/MYx0MB7PDR/gkFkXMUVaGhN0L
D4UoejTr+ZhAU96TSWzQCHiM2IBjDHmPo1tCor4poHG+5mtz8l3ifijQz6md
ArXrUWpfYaWegwGWXJOAK6V7lVwFScG1taD7oezlB/igQ4ZigopjAmIAWscR
mgN90isj9BTq2IAlgXju57lqlzo2HC/G/mpW7WtzmSfh7FT0JPxFTNFApjjb
4LKmmVrChCNYHadU6pxIGWym+Wi088ANe3t8IVphorHhdOW68oXwgwsE6fPp
LO5wN2dxQijXSrhahxTEH6vQaweIRdYCtS9RNgCNsA6FnlVCwzLJFYZJQC+A
VWAmyfY4E5RpiNEqkogVqV5j2CRVLDNdfT9U+zshHFwA1r8v2WQLGwbCB0cX
yuNjupKbzmB8Mxc2ruNwEI7XcNCiJU9s8JN1cHYuYA9GqEw+yhGP9QWlVgnu
APQVlU7GHzjjZWIplD+czqBLTzu67ukN5A30F31dIbwBFfvZnI2AcAYq+kvf
10CPwHX7i+NGtVICEaXINbWCagGmIQ5YNwKdyjbnQCjfVOT/V2qSiI1ICw+z
M5pApO/icrKoBMcyQ3FM8BHliA+kq4jXsJCSu1s4lHhhrp9NeBTDS8r5/YXR
agB0Uth5bmJ+kocSN3yJqvEQXsKxYXjpoT/fI2zUzNmn4SEKyfRT+Fdgn7rm
+yYdWdda5RhO3KbJqLezm/FyrLN4OuaYmuQV8TuEj0rtDesW4KE5hocW5/d/
wYm5h5Q/z0UfAvB1kxhoXxJRdDYpSKUi10UDVK4k9koZFLMWGc1wV4a8xQ7L
uhHyU1EmS1kf+dop/6u9JV91+KksLhvtvnrEHiihfy5nKeqgPAgvtet8dlBy
TbSZ4xAwVs9KrUDikDMJTAz3+qcJ3VqwI2PlQFf/+/l2NVZwrI1MAahzgcG5
Q2QKxwBQVSp31qRMMl4ks1TGxR7RSMBSnLxQlhoFP2+rOcbaF8+edJRTTDMC
pppylIMHnRkaq5yZznknRUzzGPYMpfvlJxKIAtzvSz6Sm+WPUZX/q59sR5nH
jHBdeQsoC2mjlZQbpswVwlWV0wh9VVGjJ+wFbGVYLGAvcWKvgPfKAqH8/20t
U2YYJ9f3kMe4pzg2/oG6hl+Fl9pmVNX6uVLCd+0kAgSzQGivk+fkTg8IJnEu
HLfOxLnAXwLoE+8Ysh5wHENaiCGqqEFs/EPuJ/GWZDyQaY4kjSMsONbxWZqc
8TaIaIHlxGI4xZV/EzDSy5ClhM0oFefbvLONzQPszXzLYu8nhBsg3S79KCGl
rs519Nfyh/9GvgjfyRfjfz6PHmIPO08b5xOAcgvkFs7vI6I0ku1L+5MdF/Qn
O5f3J7tWcAVx1YDAbBF6m2SWDUnVOT5E8ylMA4x4GbLmZeCrXz5CHXFjUpEn
my15sqrZu1qEJxtcpSnlyVhA3oIn9+MD4CWFluexLupyLmI6FVIykfjx/6zp
lMwsANk+y5nZTxJ54NjVbDpXnhgHmMIxszjvQtFaXdNtRYbsUoYcd7gAFevK
beMP95gSeXLU27nSDQe90Vd8Gg/UnXfOHDkztKDHU+LwvHe7tqQVzJFrcw9h
Xa7wrswV3n/ljw7iCPWI736uI7nmC9SzAKVjCGR/fhp1hd08phO7xP44sQtj
HhD3B/Klhj6Ix3Kv5cnce3mGcx8vzIO+iT4mYEfy4qL+5MXF/cm2Jf0eL+/M
eXmXz8sM+WKznSoXVwpcfJnh4orHxWH5KTDhFQ4wrhxRmoFE9nbF5LayeBTZ
W7QScHrgLUb17qvKeXx/zkrBi6KKHi0kQtXhkVzX/lUbg7oUfAM38JvTuTHo
pKItp9Y94m8B3UpZeDFDB+cxVEqqDhJ8xmy54++Ryt9jFYbj1OWEI4o8jvzN
WneczUQZ1ZqHnCly96vx4zKDDtpWogzL39D/dLkz6FgZh5rq9z4PBZl8eXLx
/2G+TFCT++Xp1MJ2S26yfp8HaX+e1IW4JsA3QbvBIzMJcvHUOVSlp0dnvs7V
NPRybYN0sOHv7cvyn5zHd1gev5ARvMxGHPvE2LwSYfMU/p8qm2NOtRL1T/P/
V4G5S9ETKTF3/lY8AvL4OmMFvvuq4TH3QUMx92sKzI2KO2dsUNxUQc01TE4F
h0siBhdckoTMFpwpCXPkAlbcSw1zCw7wbKmgBt1ULmFOOkSQLGO1btLPCtx5
FDYgkhqLzcOJAFDMXFcNDtyc4l+vJO4u8SWgFAgdRmCA4HnQOH2IuZt9CdDc
32RfAjT393PBvz5fI+gOhOPBwQdcFzhkt+freUeuNAAwdH+uRB7KNfejZ2GH
FBGKbCX4H1DbgKaq7dBcJUp7GSluYOodK4ixd+b+8K4LCaVGXkjFcTd5IjEV
jswcMLgo2uGzdYV9n6tGdpW4HyMyZeEMOXj4jojlYxT3Awz3Piuci9E6qWRI
CN+Tc+6d3BqLyZ5RVPj7CbjAX3ZQLHE5pAaw+kN+MVhr/xZXbPpZyorBklO0
Vb8xgWqm7F4dOdlyb8b4DlHxVPaBvw5S/0KkJvQ3zlF/g/Qx3Dt4wCHXgosF
pujr+fN/67PUZ/e/7G9AiPCTU6iV+Dfob5Bp+5P4G9PI3yAytaOv8fy5fcmG
+eRrwPdAkRb6kHYAZiNn2Z05y+7EKj94G1X0nUEX71pVZFtgWeSfkG0zVcnI
tsJSHMRVI8yKTgfwKXIs8WmjmNceIaqVVS1UNuC0q0YML+30ynJVewAfAC9i
1G5lVPAd/sK+A6WVOnWaAdyYBykzvsMlJg8gIY40FJ8XMKrWI0m9SoXaghaI
t97i8emYwwSB7bSsZKbHB5pWMpbaL3JUTd0O0aiSDID3xHeYbXyHhZKh5AxT
Ga+CGwUWR3wH6OsFzJb0Of3fWBoMkfsO4vI+kivWx2eR2wAtcOtzVpXoDk6B
0iG0ru6EFp2l/Wmy6wLk0EiEJwhujfFEwzrfIfUDPckTFJRsqkn3GrvClm/z
H8iYIk/6iVT8O+ZL1NhRvmoE1uUg/zWCcl0+l6e+Q9HG2hi+bDhexYHlrH6g
ybCCPgYXmVo8cj+OvQjtned0F9yZxdr9N2Pt0IvgvrQV73fdNcTiDoghbH5m
UHYnPnc8LpW4sQKFJADG6MMEIutSYFNNEcayOl6GnYgJBoSBVXd482XI6TPY
Otj86bknkGCeb3wISXvBsZd+hIJeiADBQyYfoh19CBv9sTamZd8L3YcHfPch
eXo2IaQk8IPGeXCM4WugF2cX1NSWMZ5iOUOwkMUdm6syzrgoYLRx4rg8JXU8
yCWBrIzLsf5YL9POUFAaIQ7Elehf5BwOv8FPqdfchXxLPrGwt/MxmvApXrmo
wGM+BnN1bHAruh9URepJLv2oQWu/Hwsq+IlkJc41aBAE3Jty4URo95ogOPtu
Cw9QJxWcVqt6BzmXSpFfHQsD5BzDNV6hESBWBY6SgiIXCo9z0aN1DyT/KuHa
ElS5DQzZLmTcE2QDwSX6qmFIsEQuXOvkZSLOgto71OAhVIMM98Mzqc1YUhHP
50EGuAebF1BrMrgHAtfdTRxJyM/MMCTy2oWoaqWOoIoXC1V0+toRxJPCQ5cC
w5V5tgKCaXBmLVC6zHODiHe6ckTKTEbcNwJ/uom1xEtoV04Dbh4ospubSpX4
44WG4rmEUpGaRMsdhTuso2CbC75MMYadPpLrE6lWepzK/kEIaDGcanWnpwQP
N7rzYEGVGx3qmrmQZ7msEOImBPDgsCw1rRec9e/ORYB/ZxvlKQHYUlaeWITi
FBocC8Hn13LzAemz77GLQMv6ckybQfB6K6TNJlB0BfVgWFjAjz7KqQXQnjCl
aH2uPTeeR/y6hVML4MrK2JiC9uRqhO8kuOyZaEkOvUoZNFUGbQN2rHBqIM6J
HWTiOfTylKF8Siqwzuw9oE6E8GiZlX9FOW9SzqwPL6HJL7TsnWZulU1+EW8i
iv4TVN5xQ5vayHT2YVkUfjvX5L4EiYPpAdMdG0XhWMO+F4Gs3u5svm2VmMbV
9MkBg04wx0xmXDbgPWyc5VpwOkvirDZSpFzQupSZU/xXYcgbghjrFo2xiDkh
pwu+E+Z0z+rBYW3PsGnfwKYdHNgXOee1fXF/smNJ7rEuMw3NzJwpsmampt3F
WjV1YtW7XDuCGYpjrirwa9XZ94rHr8KtdeVWjMLay1i2Tv7pINYp4p9W2WpL
BQQPuBzE6LKBJPM4N2bJW3AuVTT68RKQ1YK+gNvGdhIMFOfOmPIYc+1/f7Jd
B905w9+GdF76H4IdaiLbCgQUwWPHEFbINEsqUigxUH+DBkWY4GiptY7wcOOC
95vqsW1ddalEeFMZYDb9WB8MgrZfmwFtuNVGutQUyHLbT+v2CrQnYvYh0vop
R1qQTZFIC3qFpS8qzNJSuNWL4Rao0q2sSoVb83AryrGh7Rc+EGUnGJVM+BVR
BOiU1lS/xvzRmoHEk0YuOKVaAeZElc+iFdW57ZFPq8rAcqfCuCBBueSt6/cY
GAEECOGO7auyv2XlAoaO9PAAXu9OOwSuMA7RZbrgXq8wmS6aXdBmp5LRA0nz
fN1Pcmm9YTziUWy7r3CzeAQEfdvHqzGESthyNHi71osVbp7O0BXk5n/3U7Nw
HfAMpK1TlC881uoPtpHTtT9aHThA8lzQCAKplSCqoppabskAJHYvQzSgpP4Y
h1bPBKHVFuHoRTk35xy9E/Tv0n4Jr+rMAtYPIPBLxWNbj2krEaataq0hFkS1
5lf8qyvyQeqzKpecc37FH2RaAAfC/y7tD/QuA/LgVUsem9yePDWtI3luZkey
aRZF9NvndeHHsf2J9jNcjZ8QwIYQ439g/O5vrBPxZSqFxtAwFwVomIWmdweO
y1WyNMxOYyfCK6AJtso5uxPNx04jj0KIXlhKAN5VnM1Rjo+Fh4nPa9h2HYVW
HW/geehAtJFWgvXaD6X0cs0KEA9DVsDmaCEC+O2oLpf3MoHYXxm5Rtq4B7Wx
BGLWf9i+iHh399J+jogylxIocWhTYeRLBiz0GBm5XmBk26IUqw03ymrDLgrD
D/tCRiZPwalbrCazzjXsC/eZP8ta0r4n8SZ8xMHN5K8Tian+NrU9+fuMjmTD
2cTFL57blew8L4/3zs9/FvekdHQpR1Onwz80KD3TWJHaIfbCO9Q5hjoK1fYt
tiNQFe53jeefOLjEfDPDEHwUAauK2gzwOxlLBEHDnIetEgHCkCEyDBT7WM0g
91N7G3vL0452ISBiDY/2BcJzT4JKMnEIhcyrJMzLxb3K3/O/X2wvZH9teHcn
+yQY3rEGhzMlOaY+SS4FdM1qISlGhg5kIOI5DykI6DY3rCAAv3t+DCIl2svS
Yk3S6Ca489V6/mmn/cDly4xGv9KDXxTloqZysXtN/nNxn8hHn5OPanLP2Gby
4ASSkcentCfPnNmhjuTWuV3Jjvm5gVmYy8iinmT3kvzngl4JMmPiQog2xvX9
I8P5Y5PYXssSCa+bSsYv+POySHYsQpcglTTBae7xdU9urDtkw1Gi6jjs83WY
N9e2hXHo4VSRNrhK7RJxJqVGgLcOArsd5YRnCG9IqnFLOL+8gvPLWqf+mNSp
XYqkn20jpDgwkoRqHfvlNMBseb/iLdlNZ/BEpmIgnQZrRoSdBgwYx38zFYiM
YEKDDJ3ojJc/GsrIWSGYZF6vcRHaxYzyKctZZkJJyH6wd+OkAMQ+FwMUAhGE
i/sVesDCgCxFkya68D349C9jmskDLBTkAtHvG3IXaMucLnCBkl0L2Hgs6VGR
XNGb65TepEw4Xs7CQalCmeea8pE8zxX/ovdK94CICcfBRjj8GZ0dhRojqFu4
ZZmWLoIx/10kFLM5fwjHiGBE3Cv8l4qMIBadBN0Q0PFRDnQ8VjBJbyPsnZgW
BwVpR9My4ziDOD6KMuPTeICdLYbTk79WEzSSXwJPcSVnujna9TPdn6U543As
OFmQFCBgknGyJnUrMOnBM3sw5H2cQ144bz06WTT6fcuC3mQrNCcuIvHaTlVG
LDLm0pXKhBL2t9jqsL+VReB3qcXKu+a+hlYbY62+6Hl1xaMHNjMNrr5YCeux
vhVluCnNHVgTGHcVytEa1hcX5bZkVf6zsleHYXWZ0BWOuTuXpfvH05o/Mqkd
HTH4/YXcEds8uzPZJo7YQnTE6LrL8ptb3ovX3X1h/rO6D+1VbN9aX6hk2K4I
FQ/bZXGi9+weJVnkitTAtg8+gTcu5DN+e5kgqoXznBThVHpFr6IUmUyndck4
UwEC0qV2ZUoJZv+MwK7A57mtkiDI4vUFtqoRx+s0sJ7L+GlJucPJUq9cbVB9
8JiCWAXLCkDe67kW4fwyg3ma1B3DPGnaHc7byIKzGcY+wHR2mGbLgoNIklxw
dpGPlqLYVHzQqg1VqEpUcV1w5KBV2CJZEaqq/Lgi0XCFyDldHREh6rCe3JUx
Zw/u83LMZl02wHki9DNzkWqqQInv6ASqjwTggl5t+mtzblunShb8e984kqiH
cukCFw611FmdyaZzOpMXxYXLrZW4dbuXkhuH5gqkC740dw93r+nT7wlE4mWe
kMkwZCtksgeXWK6S7XVilusQ9hzhpaNbzCjbK7FXr0nNVu93Y08FvmXlzaJi
ppmGq8gsj9TgsQQ0nqLposjaG4n2dgWMR3v4xEDBV9LDvTmaEDjXIMWxNMuF
O60ocP8CVhQ+RagJiAZhSQQrAMeXIremU3mWkOI9Wp6Fc8hgadMDyt7WXPa2
5bInwEPX+aAlLw9Ny2XaIOeVai3Bmi7qwxHZ4FippDldPEUnPhpJdUekrk1l
sqKmy/MyB3w7hu1BA2TGyJRJah88QuT/C1noVpDQ7V7Wi+EO8un5PQRoJCng
6AdfED2hw8j/3jvOZRzAcYR/n5vZmWy0juN5xF9g7DxRXKWimKIsZprUgK+N
bQDvi6XMtBax5JnWnliWbCgVE0tq7ybg0LXsRH7zU268jp19dsH7SCwRqMYi
OYdFcqaH4Knj3EhFqh0ezlLpc8izw4pAd9OWr3IpxxqLCKYv4x5120ILH8e6
1RYYgNryE90gMPCTwdJj9TnXRBBcUtmEvIIfMVoCjo+VTYrg9h5TNiGx3Mrh
GfiQKRrDBorkNga479hTkYwlLRzkXaSxUSaNmMxoahUFZas3IoPOuawwBNPI
YDEc64fa8qXG0nE4lrt2JHyrWPjY6qFkQL7hfBLCHfO7MR+xMTdqz+fG7ZkZ
HciZj03pQIkTI3jPOJJEm9cAtxP+hfwfuJ2bZneBYSSGa6PURiiIcEurnV3U
EO/S1hK5D0skfVYylFy9TrunWi1yNayB0pr2J5fzRANs4juxTW2HAEOtzEkg
RTJXnF6WmtF0QhGqrjc0WT75KNNg4uROBtTJAEq4XyrGvE2h93JJ6SIVuQtb
+BZGIHPFlEa7h/rQ4s6plDiFa2txZ3J3CW6uh4s7NEdI0KHbtMAex99TU0lB
7kDekIcvHpbcDTJyqdgD3VbmjVYU8yzgkjhUvysimM5hRRGt69F807YCxHbw
dYVUobOJvU4sl7FILqIoDWi+NY/eNubi9HwuVn/PDd1T08lBeTgXSYn67mXR
BCMpWZWHWCSfzo8HcYbMytY51IACvuruRd2absTvX8kyKQYSDqzSLV/CVp3r
r1XNsweYrH1sKn+P9iDMtJ71ej4ZXjDp9b9plgRRtpt2V+BkBEIGT6gXZHKq
2LIjYjLZZSED+K8kSwiC5c7HEUIOZkCa43A1k5NNut56xTP4b7+BsVFwSwXo
AudE8yhBsQrK0r/lCWzglgLu3eVRDGqQi61YrJpH4aDFse7gNKVtLEC3FO3g
gJVHH7ItEqmQbfRNtSJ1iWZTzAidPRXJALoyiJmVeHUrjBbVoa17Unl5QSrh
z0NdysUK5WoWgFW9TjAvYOPFqZMduXcJtS1ghvW5UD0HtvLMDrWDYhPvY+G0
6RnxXKHi++yMTrSVW6xQns9CadMzq/oSXePcUIpESmkZpBI88ESNom/iaDwc
zwmMzX+m+Vc6dMM4nZAEFxQkTmrjzOXZLGw4jOko0yEpAieF4Q5P1saY38cf
Hu2OIK3yVnU35YoijhIOzjzWB65LU5EgdMOmCIt4hONkSgL6nEH65UZTFhOf
E86x6Ze/znCoR/A5nzU+JwzYEqgOnCfAhl3LuDuiwlWyAXE5EayTOVEr9J5J
ZoWDwGxIyYoMshzE/EpLAMQgTQShngoM7ujYTg7uBoIcpRGYC9mrQ0tGDCwm
ZGfO2C/mYdmm3LnckDuX5M/QdR+b3KFCAUIiGZf7x9O/D0ygf/82tQOFDAQm
ZY7cpcXlbvYue9SSkePuvMv8flO88ZpaMswWXUZ+dIno7DWU6LSh6ODoy48y
pIJ9R9wRgNMn4gafY3YCmnGs3/02yPkQitsqmtT3gJlVb8qDmCuZ62HBxjg3
d4KOOpQxh9OOVnOVQtgovfnoMh5fd10W3POmcCAeLgJHX90icwJlEcycjCY8
EByvPfbsMjo8UNFlVHD7Yk5/OzxQa8AwuoxVdgTXDpCPmBHLWptUGUpyXA2g
VFhcXJZFnMMGNWQ4l9CBgliULmODdKkRKREntUG9zgYtF1HqRadt58JcnOZ3
JVtyG7RpNjl24iw+nsdqD7PjB46gZE3uG+fEqsbis3M+lwQWhTanLyI+fSQ+
lVB8Us69whkStsUCLRKvjmTTpk3JmDFj9P0h9izNyiXwjUYCIXlpB42Bl7hU
tmQ9QSZG9ercCdnFwU6Kkgxl2J8nFksylHQXVTV82FzijRftYCx0fNIYmK6z
GZ4Ne7udI+NgDsXugkXvcT0lttIGiUs46qufaDceop8lIThTJ04JETgTkp89
xEeMhwhjAJ+f6zxEFb9FJH67l7AIRrudWgNMo11PJJQok1kLI9bU+QBhkTsi
igRfst5iPSKSNYb30cjGAblLqb69nA6OuoK9xrJx5Qxdwe5kV255tp/XhZZt
y5xOTJvA52ClgEEemexcwXtM8rLCVlFAf/DXVk5c0m03VBTludDCrg4sWdWJ
4jpnyRwccWAY8ph58khxW2OobWvTcpn8F1PY8/bG4Tn/Io9wj5K5hN9lLmQ4
nkOwHTpixsikNFD5tTrb9OV2anF7sbmyORbwZJoBjOkAgaygaMrOmfNP4K18
Xo0axdbwJHF5JaPH1ImMJFAQW8U1PMBW3cN4b2mdgaEoT7MT+YJxIh3CkEWS
rSGyxHLZAThTcImKYBLr+aqYni+cbFkbljw2tFe8ZAh2XDwzciHFowwksqIS
mapEcqwmbhnJZpuaSLrxIExj2ZT5apTSJJO2c0EuU7mZ3DqXquBwxLMzOpIn
c7mDlCYwj8iklVFMa473IY3we6SSLmBvP53JKsSL0qoqoyrSVLG8wjZlUHqk
KFW1iKxW+JOSPYuHlFHK7dpMp2ybs/BdJKNz30lyOlPG2JBuEhNp0SmCTM/N
KX0Xzw95ezW3mOS0MqqLlmwAZ+RMNgLvxrIb4eTRnTNM8xD0Nc15p5unhvmU
97KUHqBVPlthh0/EV5V0ihpLr3fIzYOCc6B36PGzxFj2OGM5n9Ip4qvucNIp
iinoBC7Af7mmbmSxCrJYGUoWHfYrbTGPvFhlV8WQaXuRNG+yQErzpmvuCDEq
b2KHtd8rqYdJE1JNPSaTmVvKXFp25JYSpGfrHJJEKNlBZvLxqc5hFYkUpxVi
wQfG+8BJ+B0srQ+cJAcWv3sF34NXdQ/FMcMnElGsUKA7PFmstpDFkn2oWRb7
IlejHVgJNyo7/8mkH5DB+UYOZ3Cbqbfrny+IMv3GTjeFj8h1zYXxbVVXjD/C
Sdv0Y93wVBrE3KvSWBgYaLKb53CDvsCjwXfFbMv7qK+AeGwv9FfhN2mGggxL
wTiaqp70laIONsZRMiywWwEMngXxIyGpqZ9KXKB+ahqBXJpiQuaEkAJGtoi1
6KxB+aveUvo6VIbqCkUmwVKBdNYxhgdDJiUnL1ObR5oF/r8fl/B61BeFLAja
u3lYdsOj1nNa8m+5vXtkcgeHf+3IIZJluWt0M7l/nEVh0nEvzAKbSdeTtKTa
aE1Lit1teBLmigWs4NbRk5F1rzJ0wGkceMUc1FaCVrJX+JCC1o3fZlMz5/G8
uHPf6bYSm8GDymWklgCU6YpdiqucdGSxd2uUkTSvrHBkTaZcTDe+qbRsTTFV
BynpzTSCNlvSmidQWhNLev/BKOX3F1FlX/tks411G0zJNSmYJpMMxgfs4jAv
zLIQW65CM2Wg+0VYZWZl6BKSIeDbgbbCBJcWef9MJwq4engs2DOZFTd5QP0p
AYMVMSnr+gWX4skUx3nqxAkuZWlguXIrI+4FZB8hbf8U+5Dwrk2zAH/cmcuU
lMotGhNqcJvYh9x9HlkujSfDGhw7kurzXsK3z+ZqnXOTRbKkgGkH0cTESgrj
d999d3LzzTejaFX56JIt261Y4cUG8Y12/B672SII0Jx3+MMXZctTwdePM/Vw
3WGRTY1tleGh3LkYkQ859rCaVzcnsh2okmS39ig4jsc5x3He8W6WDFxBsP7g
OUIGyRbivs7TFqEQB8fK6A7EZY5yZkvwAwJCgb+0W8ykV7ZqdhNGIRTlzjYK
BCUBJ3MVLoJbmct/GpjjrOmQZpUL+rsytARWVAJrZRW3uuJQvI6xOKDZOItB
agWvK1W2Fb2a0EexE3PGGC6ojgG263njMML7D05op9NGosTdMaqp/uNDEx1K
EzIsGxmluWu+kTqb8LTQsNXqL0qGd50+GIVs4VBWgaUO5Tla0NicOXM8ySuB
sbQwaIOcq/FlkLZUOIcDpZzv6aQPeTvQBl3zOO5e7JmgOXUbDuwpqCZnoOdY
LWxRbHFfshGf3WFH7Kn1GOeyxyjZTjjmAvYYISD1MWE0FhIxYV8k0t94MnW3
/uaMLi00SNua1udkKgljU9AjYu9xU5BagebjocSRI7o9EMiqosGqETdyGBbR
uIzw0ywTyoqaxYj5HOCwpti348dywPMkT91+Adx4mnjFXDShLwd+B5kCBDR4
mn9nT5OWoR09S4zlxhBIDLhQ4JrP5jIpaJSd87qcFylwTa83QVFi6oBKMuhS
ThKlPNuCCi20glVdj0AyYzhMsYmAogbIppPgAoYlG0oiqyqRdg8cqRmgRZS8
pDeM6ngPKaZ9bUfK/gJeWzX3KlQxw2ItI3wukJTpssfW0f4uFfBe6FueG/iW
so8P+JYACscJax8roqav5dofHKu91GP8XupwFovMAsBAYx5nO9k6eiJJ4pii
PNYK9QeK8k1oF0okBnMqleiWJhVtquMfN0+opBIRF89BnCtUkMc2NY3eVMLL
Y71zlVAGFSypyc0+H4NiUiptbPrE0ZSAzqZMxBwKJnNL7nzuOJexJrbfdFlv
KG7S7+KBvy7VeC4LBc6LaGOeqIN39ZcL0Fvw/zS2CxgRPoOfWToUxpsG5+38
aQbF0s2/05m1o1xrHXziOg7IsywzaxbhOfVoMxhG2uSOs+lI51UuMVOOxau8
7CPsVX7CTijsSK7jLmw4tlUy5K/cJhfOIoDzNsLWjdDtk8vPVgO33MHTYaw5
S+MtP05+MgPrwozkIAKwREZ8I9buT6yPph41enMJEfKkjGxoJXmdq9lLug4O
ej25ZEPJxeJude8k1UieYwd6jvA+pBpFPv5ikyD83kMTneyAWducm7ftc4eS
GXId8ZgQnyX2Fj80gBOzZSBpoSsK8xaZ/WP9c9T7zZtAR4SI3mrz9tiy22lb
CSLzM8IbtYye32Fusr0EXRas4gaFkwiNzX9CM0S92G/VDlP4saNsCx4hd5ri
GNv3uQm90AgBABtsmPukaZjjYtuNPIoGjtV0Puc9ytDKzzL0RLoENuUmaLNp
3KGmnT5ESO6KT/uUEjgS19baKipFAknhlEhBii5jKdKU+550zbHC5Vl3Doch
fXDEfK9TaRqUdALGYf2mM6DXtOX4aUU4h9KKJA3i7MH7j+YO3V+DEjelP5oS
o+G/UuoGpnyRCwCUVuxhp6/XtgZomsNht6ihSOUpcyAaqhRePuCsbiUSj8W8
vhZCZPeJhL9pU815njTVvBwh3Mt4GU76H0Vh4s42PkxRxjIHQWvbRphiNsnu
ozidhcpOzJ0dwB8lT7j8RLf9rvhyaIs+5Vq2w7k4N40ivae+nGnZLkCNRZh4
o3GxRdIB9yK22+Q2aVkfwo0DYUrNhmdGmJxFkjjqkjDb2NCJOcr7OqrsMh2V
10KqKipBVdNFalhrHWMg9y0RnT4/TjJOGrA4ZA8hToLq8XpA8M8g9ofsoRib
e1l0IIchv+dGKmN/kHw3whvvMm3cNnGoDpvFbLmkfCpjfMLEIUdUl7uUvISZ
1gpVdKZJXFzeoOJSZXGB60KmTcSFOjcj8/xoZz5pNpPQRkSGNvumqBT3R7PS
pgBJEJWqN9HShkEzcfNXGJlzsNod+IkNlwbXDeyOTQjCsTAiCDMRtjstMkBH
II/ouk11rlsMKbzBZCLgHJlwkKLlqaLt2Z6Li2wxJKMoMRa6sN/LzLPMpGR7
yKFgvFWK/pQ0axPisFRoUjVF1WFWuBqcFrycggKFC1tco4jN6v7yppelgnHM
H5ZLxSgyuf/27EwSmSdMqRgsTAjckFgIUn/U9NKhmUWJhfBJTOoP/5ZSscoO
yMvafk41SC0LQzepvV8+0BnIic0jWNnoLhebQ1VsaOpCJ15MbtPtylWcIzXB
RD2EDN7Hkxtpop5wpJu0ZifAUgaw6iHsJ+qxNTU1M3AfZzdsSnqZ5h5PqQ3r
r0nNV8BRcKQMOIC5DtBvjlBhBEdJBo+gwr83UOF7olDhXoUKEzjKpQvgvNKO
Ftomg8SmEopNRf0Mt9ucZA+qcdnBIatOdkBmhF7iir3kGpfs5nU5yZPpVdnP
FVML2fT+pFXPCp7D2fRtuRe3eQ5B8KEYBZ9Byu5RA1QUzw1iI7E/8PmTEbAi
mDdk59wW0bFVP42ujZ1wtxVPmDBrx6doRDSgvTooYe0RCYv5cVbC3PA3PIYG
KBJEWKbtwE+4WRJ9J/zWXWqLZCyIncI59RjZQKnG21lT0wvKk2TUeWNycNkk
E36mSSHkck6r9xpvf4MVZltPmGR4BW965jw2mmT3o6/Eob93TLLQXzdk50k7
yZA9Np0ty5k3OI8bVjT0sVhDmWxYEf+BsYZMOvbZqj7mNyZHVZpaMIidKS+5
NFXjVk4p+3KFhweBSDohGvxcFARAy8WV6qL6b87i2wBqD23Rs6ldCwOa6R2e
ByfdKnePbsqwJckyPAEQwjMFQkiWzXpx1ETJiogG8ZRboX5FcYEpMgEfr0Sd
1qmkm6WFKXq1ikw3yxm8ZrmtuemxejTnBn9ZwLyOCzBSI+M8TCKbbrepeF7r
tEn5yRihDL++qp3NdjNluqMDC5WjdRaUy/6a7ewKcUcysha97uk08BDyBFg5
KvhrfQVQLjP9MlRxfmgjqt7r7TJtlGt4IwZncUolxWy/yz9p2RD8FmnrIapK
rnZy+YiKdn8RWK6vCP2LZRE4FFI/i0EUCMQFn25OJ9Ft7+TpXCisS/fgBJeO
w3/HOBzFY+zSwe8O/detKTl4H9nZpeTUvAR4XHgKrSSZcCgtk6mKylRs4BzL
VE/ko4OCnDcltsMxVSJI3i5QR5KQjfUFSuboKv6IN4riKVRoaaR2K4kDafzC
iMjsOn2W2apPeibhGN0l4j94lPUB2Pdlpx/Cu9L3hfmCk11r8i2jXfJN5ujC
8Q/P7FbrY/u+rDMnfV/SLolEWNYvLjdPEu0vA9YK2VzHCZugElcOx/dfqtUa
z5/TtFx8fMegSWTrVLd4jqGiuanM5bibkVZKfl4vx90nkDFpPwZXDpG08wjX
Dp++gFmFDnXl4D1JykFGAf/NZeoeliVx5/BcwPk5d05H9nB2G7nZ8+g8SJKd
2CHWtqKAJG9JtCkgic9qbyFGB6gYjWSwBLxmHFvX6VOMbcjYcItZsiBYa5Ko
5uNvY5wHSIImUUR6IEFaAjLAIhk+NTtEpMtWFi6PoLN3uWXrxpM6MXXg7Wtp
qz5sitBLj0BgoT+kwaKxHBsMvNx0P4pKFowazVwLiNie1iKSEo5P6KylUZr3
FrM+bSo2+H5viR0a0CSvafmw+FcEKdhIhytAMgdC4a9iZTjZto0rnBswc9DB
rpqr7kDWQJoQ/jKW3gcT9ATD9Naf7WB6OkcqHF/DwxiNr6YFXEy1YaatIhaF
rEeMt1uw/f4azuxjPDLZpnsSzCQEG9DnoXkM2tQbrqasL5ABcxxbEKLHPviW
sL6y/dFuQKhl/VkK/66jSwbHhFtirP1wU5vtZdCMTKiGHe3uYterjXWPdFXI
pq07ZOAnxyJID5ldmCmnw08M5R2zCjWf5WX+i52vG2PqVJk6pu17vPckFhqK
x+ucyA4yZexViUazWTJMLOduz67cDOyYR7y+iSN6camYp2UnFPGoBCQA7P6Y
wcdtYHwcNAQru9si5woaQgFmAFn04v7EDf3oV2WRKTYg5b1uYEnMq3/PRODl
qvn3NVUYiN1j1X/hc+x8hwPeoIGJVF6A/UX7OyxpTZHXtjQ6+Uhf7Vv+Pytw
nGCo78J3+3hSF7vLvMF23YFT8KQSu+OgCWcDhG6wPRTMNnu0BFaKnRALenOR
6cVdOHXDWBQZv3KJdJUMMoQk/akPZcsi0lL3cQAMWTH2IdNkWA9JyGC83NJB
oiNqH9M7FV8UUq5T5CJQ94QAr7PKpYwVJsMFSkhDAbIT3oUyyQtcZXFotKYX
U4ghEF8JtywgNJr6P1qXZJ2/3AeIcjbZxeeulyhTzc/upLz2ijB4Vznv7628
/woD9DTeTsj7dO8n0LYDR9bsPDFV/4gYCyqLrr3HQQOsy4Mj0wU1ZlAvs8PS
CSPGVvJQIxkOHSudXP8l0lEYip/hSid/NP2x0gIkKWBUVuL/zHPDoWGDb+rA
ky1oaZNOsRc865b1cTQP7ISgYoWAGvMQBTUgKA3xkipWCtR0VK0QuJr+ZZjQ
DWWiXc0JV+AMC6ELXcSIsYCklByCY2tlI8RkIxIAwDzHU8NEr8hMlTtH2ZK9
c4XgX5m1AhIFf2vKqgQ0Zmv2yMd6v2IY6OElRMApu/vsmUyMUJk4yNiD8UeU
24IxMjwFOL3L32SJ5aHYW+DsAY03YtF6E8fPNcU7h/FziGCBY1xzTrM48tkM
T4FjJYWLCJbxPN9LAZQ9riH1HJregBHcPDNzCMSB7cAu3m2RRKFPM1Np0DIO
AhEzByIJtk01pYTuIFb94vFCZywsIE4UqYjZhzYKpEnG3GZ1dAHTDp5pEw/p
3nZ/TnqQyQ2hLBKvCm7ZuWiZFkGgmCi5TqzHj/OBYZCFEmAY/L1zXrcPZXFy
UazJk4eHLH1pv1i9dfZJ4YWi8fIhRCPVvJLZBCpTgRinxYh3FATCTnGNtq9F
oP5TNAKgaECsA1kOM4LyOD8g9nAo6BmRWGCnTYiJ5IEm1/FAk5/x2NdYdHxf
BBMp0TF6xMY1ko6b3bk47F4Kc2yW4eTfAiyyphIhEcXui/ojYpGqRUD5aMQT
twNAr3U6VCvO+DVlfM7Omh3E2EXSLSMHpJst9aVA6uauDthXgO5bNJdAUrZw
QeNZTh7BZzCK614VgQqKgNTXc/GQgGTjLOF+6GXTLZ4IyLXcTOBy8yTDggZJ
gWDUMuV+eO1fzvzdyvy9yvyHGOYXK5C6QarkQsquMsL5wbZMPKeAYYxHOFsg
fn+u+FNk+TdrOCChMPw+y3RCL3iXP+dRUIyt+lrsyBA4FraCDWeu3j9EVRzO
2xq4RLuI6ZHnd1/QZ7neYYFla5r+SK90puPnYtagTccWBLzfVN6PxdOlJYrU
d4qcPKBdqFq74M35f2Vxzr9FDEeaWZBdFzmJgHwPjPHZgA4TSQP0moHiv2+8
jzQR5PAD/L7U+HJp0pKoSRlpKUKkwRgEWxwXkcCQKH8dMIQYBB91qkC8vrVA
jPRMwcQSoRjNcETBV9n9qUXlgzdkvCKizCEuLj6hOIRRHCI4sthR0qEOEVQV
CIVIAlHsKGGHKFLT3sTCsM2b0EHxwS4VBt6fqW6GyvVraZsEolhkqGoG1TGa
jPPw4wY0C7V42WGdBhTxfFMHhQ/+IEf+QocQqSVua1S9Gw843+TUaZ+ZOBwR
BdlfqdMrLlBWqYM5vAObmWW48L1mRAfdekOLdIIt2QYpJXGPFvWoVK902aQU
ZaHhF+mwuEDG4CTa8eaVeyYITRWEf7GCcHhBEHo1EnCT8N3OEwKeIjBI1RtJ
OvFIV1YjkPubisWB48wm7KY/hHyhIsiQuo7boyPwvV36zDhS2x+im7Cf0+sV
rTfz+F+kifZXFaQhjvLg8EC9EDdVSiC5rt1Kuf8STmzW4xUF5n78rVYmAp0a
QQeWoKGWwMXI3tD7FBl+ryLL234Ri41awPVphukKyAOKZI9OceNJBRsFyaRS
bBQMzTjXd4pItur+4HtTUVMzkJL3X1ICGz7/15X/32JKB2OlS0q43+VFbT40
5+qM4x+pHowNgBqTjRUQQPqZxxRKAylbg1hTh936AY4KR9ArSDDYXxjXX4dZ
9Kg7VMChM99LNQHO2+6lRwu9UdYd0vlNFw6oQQeu59nX9QLXMxq9Ko0eNkPE
rIlqv1rG7k3H7rTjpbD8IEbbrOwzB5xrDzo6zOxQGVho1Ly29ppxTC8SHkPn
hz7F3fUyOF5ATdLRITbCVsvgB1FN2F7vAzJsG6+mh+yEtDXE8TFM3x5yfEU5
/t+CQHjs4bIBUUPZHRS+BLeQKp16tEnz9OpUCg+bZLYjFjaPVQPgmPm6pfZr
vamBdi4ZfBrGvHa7vJvMdnllSD671ckGnaHb680lwyBNygEBok94XgAW/oYn
svFCo4zXK6rhdf8F+BOz3/GNuOuaHq2If6MXtWFvw1QGWPhMkYzee2VxDqBJ
guIl7TCJBeTW4DAJM6fzCZyNxONyx/uYibtNrUCqZc/Lnl9z1LXR5nXk9h7P
vdHyxcXE6TFQXozTO8s5PdX49zDD6cCi4wQLniKj74vfbLObtqKrfUdHGJ/G
AB4mm4qvAMHD7D98bhonaCFeVRykwtvHa/L/ywb84CX/uzHSRdUDqt0bjtnr
Jf83mx0NJNsJ50Uyng4+lLbcYKShYIiAzzNN70hnRayfAqtYXAHw2J6RZazV
TeAgh1r8cxqKxGV48YiXP8BANpCKhgeSIAnusyOkNRNp4l7j9cjHUAl7cjo5
PfAO5EPvHcc7b9STByc2tWiGZWMuD4C/o1IAwzdFEor+Tuke4K8ol4KuyEf4
15HGuTFYH2L/BrN/jVOZVZ53R/EqbhMMBwxgfCwevcJ9jva1vYDlzpKRd8dH
Rt5RbEuLtTc6NPCbHZCuQLlcubscPwPleOjkI97QyVKHRpA/rMLTkr4g5vJK
S0XODD6I3QsF3m6TguaIMCtPsc8gT8OTun88e191zUE8ClU2itN4lVODZvoy
rWVX4u+Mw4DS8xzUR2pcdjzQXyco/EGyNbQ5TlMVPmRsZBPHbbbHO7KdgPXZ
yzBssayl5WH85BgGPcCXWew0lGWly4B8FMq8aAKeh/cDa9KD7eX88SPDhHwt
7DBwQz54e3jbZqAa2yTk6xzg3BQZXRxOZ2ywgtgR5BtxQW1gmSmvBiUn4ZaL
Q8cji0zykODxkoH2CL92uBqj1bb4BqrctnhxSXptKibTHmTbZSCGsKjzt9OQ
U725jN2Ir4QjZFqOzGVETp3YLhn8uwOYwsNmCyfZ4/BFbxpBd+kgK1S1Md3Z
gk1jDsfR+P83amuauBpjzQQNVLVcNRqvo0VJ1U4z+wrKvyGkEt6PDfmdd4I/
q82PHpvRkQBw3PVBi1kbRz+aMD+XlKpC+u3kGS8rwkwsDOyULUGRa1Ih0vZ/
YN9BTHpfPODCRKl+xlm2TVMiWYQ3e4IiEDN06uDEmR1xyD5B1fgEjlV1CwoD
08frLnYdyzsVS+PKQ+AV0B30YTg4yGEh+sfMpJAGQSzN2WafMa82FFRHk3gr
yn7l/BkDBRB/nqD8aVG/ljeBVzWNfWRN2xzhc9uVLPX/aXaAWQQsb3PbcIzk
thXzZXLbtsMejrUd9tqvNdGvbGI27ywD+jLTpzfhxBc3rgJah7cL9sVk85AE
Ut7MPL3b76GCrfJFrk2qWutRHlkrQ5QicWCBrdexy6p57oEYb3epW5AyWNYb
flvhhHCfMLE6smGrI3kHglIT9kPdeWaHJEwkkWdR8ayB8V9Iavh7DNUiuBdU
tci9AxF23Lece12DIvFsn3quwreCVVS+fbs/VkWcAMu3kyRxcbA34GuGtf2R
AUVwjLX9l4VQrc+6aA2O/ZnpmroNuqbGdyN0l/wBitYey1n2SY7W4Bwbrcn4
yxTHQjSQZXFbcsYp2mo8sYNVtMixKWWdi60e3oQI2is5ZNJaITGnBn5A+tjj
LNr0WTTAMqUtYFpAd6N/8ZTCTllBQTLXlTJBD3GM3DiIepa5VPSucPGD+ft1
kQsPiUJOQQn2MAYwYUbtj3x0BP6fqjKSTIDvHC9tSuy34pzIt1cL+TWBEMq4
VjL/nCN+c2EL0zklA4HgGIRTfdjBqb7+yaDBnEMtOPY3ON+/k7ZLnBCpHuYa
9ikOtcAzQCfNDBjfxtu4WTT6Dpxj0u/NMUHiFnQsTzRR34BBJEnmFRFl3gKn
H2LsW7e1RJsIkA02HObU8m5d3dpM1avlf2Ja1LUZcuxI5FbV+NHG8l6v7QKO
28mAEtj0d4N4DNPcwK37xzclkQfMK8OSRcVGe8vP69bc39IeBYbsPUyNS33f
UQV9OP6/V0uCE45w2TDbLuGwgVUdjgpMKwoW/NYU2TnzNsCWEQk+Prw4tRuO
ujhEQZne7h9wb/fP7ObXOSffLr5Czsn3A0A852RIGmDlbxZV/qQOjisqgBBA
QQV1cFMBKeACi1jxij9ipKGtFDGOrcoIVFPrC5AbTS6IxKMx3eVioGHPtYkv
g37aO7otjAMC9nI6mPypnbyDp5st7CbEUZXbpYCh2pf/K0XuJyI7wjgfobsU
uxd7j7l0RCmX9mgZQwYJwNdaPJ+dX+iirrqoW0IsvUk9A4tYUs/ghHph/o30
U8NxgljCIOvT/k6ZPz7JBVlw7G3cT33XpC70DB4QEDfncZ+xeVwGaby4ACB6
vcicux1MjwIw4xm4AEzG6ZlGNx+qIbwT7wGqKuNmEcZ16V7X9ubyAVlrPi5E
aaiV21y/j1QFjacAb/QGm/8VG6pV7xoWRqDGHJnB26EKlbCsPlQpZ2OpWYfN
1NL6I5tClyHwXlbOwiMjH1F94lhVtBL4i+cwNmBhC8GwipY2dHY7LdsqM3xO
yVhqQBsW0OgzBDS6DtqXcx7+aRRoBMjrLm90bSEre26vugpwHijYXQUeJv5N
VcUKA/ugu34HscjUy43xLnoOdbvDpeXdVDO5qHmrEWbVdK5JOLQLtHqAd0cV
BwBPpOpyitz5ymKzv4nA8PDzXSumgEw3yNQM2DUh503xZO8Z63u0Aq+zHcpQ
nAY1vcMgTfNXrF7Qgj/3Cqpm1EMcctxE2aOjm4ePVRX6YHUrhlfH1lWphnVg
WvDXaCt9bIcBOEK2+pZQi7qCyeJjqJUz5G2M9bkzV6h/mdLFWJ9ug/Vh3DNk
B5ght55HFh/O8xmyP8KQAdhHeJDNfTXSNlxRHqy61jCu0ZrO+nL2K6a6AuYs
MKIbOcGMWCubeqRbCXCbpEA7YRjsJgY6gPJ7wmyUeu84nbUnvqnFOEAgJpNb
gAXRxh8YYbZYOwszYOyjtxlWtBE+j+AXyxAicCh55SL9M4+tF2BnkkCFzxe8
S5zSV+ueogK/ESiCwm/YtgP8BqtVbNtvGd2pO87jivGMrodndHvwm+dkA0OI
+uf3UY12OKwI/LMi2MQQPU+xmA6MXwW+rJW1swctixXZGiPKjTXFGNTLPq1Y
F5ZbrxhAOywAwqIenb+1nc21tI7gyPypbmjDfcKGzVLsgTXX+etVEa6KhUjM
hDEFSXiZuiLEJByyQ+qJe/p07oidLSIK0QJionNFnHWmh9wPsTBimOGdb8tU
qy92+J2xXuRDDHgf68FHZna7mdieYe7LDXMfxvA7FlLkQ4wF7JdpeWpQ4u8w
s8+swNl9x3Mpq0BrlB3bCcfF7LLhwkIKCt9oRngwUx7U6pTfL55yX8XFfeIV
B86jIr9Miska6K3c4Oe2NXKbsbPjmF8DGJIICY7lo7qRQ6caaNSK/xzhsFjy
iRkyFhS91TDkGNOLMeUoN2xXKrvCkLZ2P9UwpOTtY4lQOEat8/sdQotos5fX
q3rjScVxhX+SMEd3i+x2jRnWKosqzLlxO8fh0pypSc/lhfqSSSIZUNZqtL7M
irGObVdtSnWH1xgzthGeRYxxd4T1UtOabQIhZj+jDSuE6BNtKLsH9LsuoKB+
D3YZhnwCcORFTtXL9j5PyK5a493GBlAOFRAttFw8Yjq317Nxhtdrh6kO24n7
9lWn0CrBcYESlDlNtDgjC7wmw5csRiRsBoLPC+jXj9BcDK5fEks0NBKBstDt
JhJhhdfOIZ4YUnWQTEdDjJOAeqzL4HDUZ/VYx7MqxFoZ/2SK+0tVdfVGVdcg
owJTPU/VVmL0VuZZ0Uye0ORsVGfN06zgC7LnTG5A6RTahU1iCVJhTa+ELug9
eB0yTE3FvBKLh99icjRelpAnpliMnVR5TOpbHLgU2aY/mjCEU0IIKewDLwMl
FEL6eZIaaZtsstKXVoDnvfAg98kWkCLaHcm5IA0jMWsBGV2A0q3mvzBoqGrf
WHtLTnI5wkqEibo9FOg6F2EoY3HmOuh0MVkUvJzLomjChXnKlrshUH0uVypg
B2UDsbBoaMveEvrAS7gixlix9AgzViyQHcT/H60m0GZPpvHeWgJItpN7pxzt
lweLE6oiNUAY1/BBGNfQLPQmSjQAx/2YJyeSCex0JtDLknRjlgSOxyFvnIq2
g94EnBzN9sl4H88cZj52M6Us9KDNlAQFFfk01pK1dqBeZhPZwnlXCdJ/sSCi
I2RR/NCwqNexXvX51MNl1KLZvtxiUhLLjRuVwQ3Ck8Kjsl35C2fj7t5viPBW
LNnMrBhDIg9ypGrDA4uemGLQPXZ+p+2FQuvYoq4Hn+Pg6A+5MQlhsk5mDcKx
sm83xAR/4JjgL2AipxZjAnQtPMRPXwHxs3MxJBWWAt4w4MKYJXW5EeuYCWjN
1fJi/FfXdvEC/5HFZQR9LC0iuPl1xeEjtoJnEJQXC1/t64aE+F1/nnGFI7fx
ZITnGaP2pBsmpcGAZTwZG40pZYRTIuO9cc8Y70B1xIjdqgXNNwX3pQZXi/yk
SUfaKrIEBK8v7isTFN+Wvi8ovulmn+3RVBwc9ytOxeGs2PFdmIq7Z0oX1zZy
pz9nN6ptgNNPLOeAOn04XNkD6iwmoE6Y/0Caruh3gJ2o9wY/IfeptkoVdVbK
fXVNEQcpu9IkSRHGYyOCftOX4Y+maStuL+OhIykWEGyODvyXHXankwl+ZJK/
wdmd2nxXoTzxdCoe5683RTgsVgFmrjso8hH1i1I04c3JYz6T8Xvw/QIUl6mq
+Wf0MIe6+UjH+/OR7JZGMhfPGwjzuQ5vRP4veBjALdbgTgKD22UMbjcjGGCq
ak+u6YgFLejmRWY92F5i2xJ/Z7Aw/RZhvwqHocJrym/VAk7X8lvNzP8eZMRu
oPe6IuOBUp/fpIdUu91kA+do4dfMCdPNjDgNB0fv4jQczDx9gVHjz+hmRvQv
RBFc9HXzvCuaEebXYIR7YrgZZrZYps4ym5fpCPZqlEg06C+WfpuYScUBjB8g
kwpHFQbQBcPjf2XqX7eHJjVntEdzRnvirG4qN+SM9nzOaBvm0Zpu4XIDw2RS
hIFXuOtMO86GwWas5TwO81QdAxSzobnO4W2jDFfozUQd16YhRcLoVTtOwqY4
yuuzOuqBQd/ScLZeIYUVHBwvHpuWZSverOv89a/D1GbUTUMD3IOPyAxTQVfH
vh3pUhtu3966MlhYzJJGRh/CYprXP2x3yGm2nLgOcQMcq6mzwIo+yVb0udyK
rs85bGPOYZu5urp9YW+yk+OGXV6fQb8mPjJy19g0cVGL/iJWYi3Wr8m0tIy9
TIdvxWMvmYCVRl056j9wBQPOkQg61u6HrepLRh0WmKuvALrC7+EEGvRuvchG
0+vgNdsSKG6lorVWsJn569+Gqb6Yu2J53TeY9IfsN2NTIHZnaFsqDWpUtLyv
LnaGf4wY6+ufahaiAJkNolEAd4bfzSoLbOMjxjaiyppDtnHTPEH3EWPtKjBU
rGyvGVszHKoqoFTCUhPjKCs5LeVysnH/X5wvKYvGZulwIIlDRfyyqLb80bjM
FBmowuzTJ36XK4v2cPq1WxtiN9mGWJ7zgYbQcY8ti+avt0fYoa+ce16j/v0b
mdHgWlpal8xGyC9DVZPY1tGjHYTbFEv4CO9Ibiwsrcf8eTj+ftZEjxp//rnZ
pIk2GKzHNpy2ypntErySVNF1RDEefCGP2qsI/r4chJ8aJcScZ0YvNcr4yFUr
Y6M3GnqMB/Ewqfz9dMQ7nhexc/i+KSWFe9zB5+C/P2mm0QuuI5xDDEYQXodH
WCfWGcLsdHDko9dxjCldIOMjuQp4X/EaQ1WFjIkj2d9HNxzV4vhpQXF8AqXq
4WjrnSNoiM2aK447nMYOnk8BzCTbhaqvJHOJMrMBgjBT1eejrIyP3AivNDqu
xc9MhNmFAcEYR/dP0IG+djap7N25Wk2aZl1XmqajpWFJqBtLQlt5h1Bt6Zzi
z1/BaqSYechASPp1D/kolqnFLdlyWkslSO51klFSkmSIT0J3FR8LpiTMepsZ
AdrU9lZPKZk6t+B90GxjTstFerkDLkPULdYsRe2TuT1oPC+7WNlmn9vxEKVT
Kx4PSVqr1pJ56oq56FK2qJQxSErNPDTjXNWMV/3p8QY4oJqZ1yVUlx7KJ7T6
U0Ok412m+vMAccZRESrH+siYKQ4tZYp9FYyr+XbexFV7biLWStrE4PNlPBof
kImFAZg5Q0D2CY7jHY272GZviOiLnWa8H8mS7woHmcssiK8ilK8qndN4t/gw
onrWC93xICuLKImgbgysUEVGwHMNvlAHDOjEbxIM16WINkeYAUyOZMnRuNMs
m2Mi1C2dIJaQVUHHhVjgLdqxZccgTQ1LLsNou5LNqqDkcvXHoQLcTL716aZ2
sNIsmA4NzG2uO/Ry0fOXDFBgYxBcDfiXSOhE1CswTLGHxeoLj2eMy0uKmTXS
xcFsjbaWzFQM1t0w4SCU4iy36pB+0iFtuv+6xzYB7KDBzqxuu5vbkztGqSUR
8wKEPnaYfNJGfBIrtLyWQ3DhGDdbwvdE4PehqiPYV/pB01cKXU+5wvjOZ6iv
9Adfoif6+akdGmjfNrbTS1c75Gi3biagqRzr3hrEVIr8Uo029duIu1AgiViZ
1f2yGXPBSWmWsUeq7MEOsNcPFXBLWxBDMd/KJkuseqg+knmqR+BEXshtmcf4
unCkzI8WKwTvQdAkVRIpEf95VFNlwpaIh6uFmLti1RTirjfhZWNoFFsIie8J
3qaFEDFFmML5BKRwmlwIaU+uzznrJyfTI/6Wfd0/sK+LmWhO4TwMKRz2daH0
C8c/P5d1kYwuEV0UjCdPdSCz67bP/HERmTKWOMirqR20HmkHbdNWOtcT2hZh
GOe+amddMccM3PIy5ZZiZNRXyi1wHFgpqWy8YHb/fjRS2bhjdDPGLMdFqB8b
68DM8i+RjzD+ZqCxqKCprmVN5vQJaDi2IfZK5hX0YXXqQtP0XbZzMwXZLDjW
82VNMvkRTiYbXxaPdxMZzOzu4hjjFBklVxfLmV3Iz83UdoXOjpomtGcV5Z0Y
hrhN08rIK21lvOOqYDwBjViGlFe/jHSUUtiIYmavpByGTMNxEEwjhiKFMA1k
9iSkdvvzZgiVE455Z4T8sVk1zC1vUgeHeKTu8UiYtZM+8zns14a7P4uZgqOu
/JjzazELw2bqRmxp7Eh+c7rfMRZWVSUL8zRXVdczk2w0IxA250yydSHsedBb
mD1jucSMQkhp4F3OJdroENqqKmaIM2/gY1aGt6yZ8b/Ca4Nx8EldeanKfIPg
JwGGvIyva0sOJRnh5UFxazFv20QxEub0pLgF7z+BGHPS4blfLGxzv2Gb4/eM
bWLFr1cbBhJLFKbwpDPm/MAKXWSm4F4VeMPX5lbohi+3IwDpF7l/89vTyRtG
AzsxBkDijAt7wzKEAIMF3iQDmObFnGm2LeqlcnzIOJSBYQ9CJkOvVJ65sL9a
xjilyFyXhKmXMUdNQ2iZnsv+rrQFBEkV2SXS73OVIlS75uZgsO3Gc7rQX4FP
npzm715MEG/xgh1XvCtC5o5yrnhL5KNXcThluULzb+Gmvu9qiIYppE24ZUqK
AThMJTc5WL9Ek9OR3HQGpU/QlnK7lF+/hAZpZ3KwTWCe69+zrf46HjkYBmSn
VGhi1uueynmjFvLGavxgtXM7jVKpkLNCfLVmoEH91IPYXs2d1aVtBVWeCiDe
irF2oEde7sZOtCpaLvPrStBaQnWlLm3ce5rrSg8bl0WSujAJHF7vjVC/vZxZ
YuXNg5jD4GVb6oVZwgoAqxBimgNRg/g7pft+LJYiT+EIKY+pf59HSFCKxKfQ
ZuUioKest05zMKYIgL6sbpZm8rdEYDA7oj1SZgkiUL9aHQpsXQeoKIQ1A20R
xVFVhonhGlmj2L1azaRIgl/X3ZjSsJ1Od0NvkoOC2w66Ribpp9PC0eR2qXFz
bI1/5a/3leZYoszxVnVLXsWmCF7hxquFTVeNr3qRydtb/xRimV+CFYHKIccy
5J+SDf2rVg574jkVngsiORVctsW2o6NPXY6M1YStRHscUIlwgNQTL+6PJVdK
XZC2eKnadYLwjk0UD2GDO/OEiYpLsvZtyAzqlQTFH8BPA2xQGEyGfwCMQVwN
CYjhdeIw9USDWOFtkY+o95JGeHg9Z+8gpvC3I/V9U1IQbQgwhXEbRLhOkzbh
quDELlQK8KlVCoKAAaUgCSW/AtgXup42QBHauf152V604AXmrIu12Yw3oShj
A8Ggrh1oloDu+xUhbVJpuFd6EeAizRW4tY90NIoi4AGcoAhw/1EewCll47vd
8AGg1fuHqQWY9LEqM2GURyrpbf0l1jghNby13ogrgqlIrvUG1QudnaztJH26
+bxgG6lFru1GtpJyDmNqyWyrvo7MVU2EYfa7UUbImqr1xC/9YqjR4dFV9jbk
g02TTebnSTW/vorz6yYI1U0KQKxz0u6cZ6cAdmCvjaDUBfUrqIA7ibwfLFXo
UfIeVkreQ5G8M20a/YRiGh3UvC2rYVJUUhLsH8JxP+M0OpXXuryUBAzQeWg6
RZvo6Ih/GIBFtjIPYNAgsPEl2lJqmSBIiSZ+yTZVTmBTP8jZLE2J9qvu78dk
hNh2u+1YLFeaGS2f84D6IHZrYU/cM0/bp07f18xoMjvsiSuONTO/waP/h0tp
HaV/rFpL3TCvV/rbQaCxpHhYRQtTl3Ac9rAb7f6nYD4NpC4fn8ldKybbsAHo
zy7fiwsI9wFzanYs6vW2T0EiaMYh89R+GsmP2452+qmQARBWEOtf4Idmy7Cy
UcYUdTX9aTxWYPuvbIHmx6bGG5yz6jNRg2cNJOKUKQt2oJKbsuC5hMlH9oxd
jlCf0DIJ1NooLGgEew26/LbW2Thn+a1IzhKOu8mgyQTLYetsT7BPCMcK0hoh
ihoXOAbZubi3sP0arzbpib4sXqG1rKERJgeRGkgOm0PUMFQ0uIxxSEU5BBVG
VTUFfdE+GiHQ3fWF6DKfHWSbwXmMCjqnU7s14X1JRUG97S7jGH4sQvvYhgnM
D7G6Po2OPRgvRwOvi/j7VYy/tzNaJUl5jUlSQqQIx91sd580ZuOv032omLZ+
BBjD7QwXI64Iqx5VU/UIIgdXjDU2xBL0InAfWjCDg4+VRo+pVknQcxgw6FS0
IQKztwVXOLg7SEr2GcR9kRMgpbDNzAKyQGj4DRLYAun5zwhZa+VccHTkI+7r
hiu/JrAchL8IN90ih7DJuOXccth0I08281r+jeVA3LIBeK2XIZLGcxDE4M5F
vlIgFqhoZonYoN/VvsRRLKB2sJLRpsmCGPVd7qCibgTGDc0gVGS2SjXlWDWN
ZKRIzHZyEh2EtQxL+sU9cvguhXS5PUOfdtkC8iKZ8p8YpvzTe9EiKo2CfK2i
AOHHWgNBXcD7gsISdxGtAacTfxmmEyOoCy+daDIEcPxm4zLKaDuDvPDovrxf
6hOpyRfI3Q/atFEaSTqHnFDxOCH/wcNLPYeGKoAuo/TZE8FN1GJFK1N8wCs6
gJa3t/LfeWPZEAcKYSG8PjlMWWeKH6segIz8hJfod4EBu7Rx02UCPx0UoU6i
IpRkAu2ULbfBQSwT6NxCSRvbKbE7AoSNrWxLESqWNnYkjhWkHIk5gRwaghae
ocOe80RvEwvgux2J60pWC8/VbuKBemD1/cnFuvPB+S59LBVv+ORZ3ntedL2g
bP5CPPDpCLmr5Szw75GP9uGT4BVqenry/THsh98k7L/2i+3cZOe0/C3i+pkZ
V7ar3U8H9jiIlXao+JuN5kxQkyBsuWaBWLZW9leV5pU4zKphA8SCjq9wkniN
KHpK4Im+1v3Vgs17hfSi48kI0HsN11VXM20p/S4gkAgx81hBbYPB8u4y4ynh
U8wOkeKX27mHCwdAvc9E6BrbFo7Z4B2lbED1R9X53E8i06Lpq0dSeuBL7QWU
3a2CmZpIegCOtpgp2/5m0wPbyM8TbIrdY9w5dWlkwm5NXf9KmeBXNAlYLTP1
7YxpssRXQuGuqkT4tgjRq76Pl0km0JFcRZ9O7PExC9oC0K07k6CzH1H9EADm
r8/tGa1jiIa9ObcEL+vXy94Lmg74VHtuwkgGJVvP+jkt5u/6XLRu07Sefq7G
ZdVtEumkphYhV6rkUkR1P1Gl4lFFa74Vr2CjQXrNJ5ArBWvpd5nJ2BuZlIyt
7HINQXoIgITXFyKrnpUT6Xg1zSSGr8KLaPL1wy75SqV9CsDhyzT5elqHtnPd
HgBdIdSCY58wWhjM8XMBwAx9bfazd/HAN87NZz6lsTjXZwt0NSUxZ+cGC6E3
JmfayqiKtKyoIAXiiPq5qXR1SRfx1dF/uwj3Qr7QxNqFJBzPAqno3uPsTH0x
Qpy0nGCx0v5IQzr1ogzi9BsGcQrf/KOvOC/qdya5FvOi4HjxokB7rjdjYSze
y0bJuAAFIYXoqC8Nk+yreFp5Vf1kTYAayLuo02YZEZ3/W4/qVBFXW00VWlWS
3SbZjrs/BPJJWj8O4BFFKiW3TWb3HXgnnOkMry8Pk+bkUyfvLqX5QXg5m0wl
HGjuLH3WIXDgqwFh/BuLAy0MSmZniRHGz5kpeJtMQQUROADdCvB95NYWtHKf
S4aIrdLZBKRHzZw8klYoa0MKJGIyOSCKkrcWkdHicZE8qTpH/UUMsewGxooY
jtpmWndl8wNodLK5dXh9Zc9o/J7IRzR55dV4OX/XLIffFDDNz05xuVAfv9kd
BdM8y1hfBdNEE+YFDCetp0VbobdkVLKDczrQVa0MNlEX5JWaVSqtRSmcqQCj
71PwnCn4ydwgw4FIANyTeAMNOdG13RvILug7B/VlD+hkjlgskeAH/ua81nvV
oJKEvgKpd8XH/GYhiGehzCHJKjuGP0xWkSbu0SZ7oRwgWzSDXZKvND4tDxm9
oK/o27qUVaCZ0azWWxIvVeIFMW5NCmGek0oKem1/1RJP5mnJNlFtJchJ34MV
j0k8WH8H+HYznbcpha7kFHZaLQHz35l2MbBLv6Gi1KBlM4Xvf6Hdc4N0EL3U
ISYRFOHBAJtCoxJyO8opxy0cjG43VJTM026fipmXdk5bTGBmtGxQmUDV21CK
ijSZHo/S8oSj8hqXiTDEdKg1dYIKGNgg57jUpKKktx3w07Nd0vEp00eK6Wam
5KktKRnDqhAl98ezZULZNTkVfyAa9GRXboYeHPjGO225OQA3a/5wLmlQOF6o
uGMhU9ANy4sSkRaUl9WAzlL1bItFxzYtQht5VMrjB40yN6lu04SxvEPNCqfX
OCFKtR6vI6Gva7aLX0hoBFas8jZun8nT2R/kjV5PD2hllGkMd9LHCWN4yX5n
14bq9HTn6DigYFfy4DQfalwACuZk3Mq7m+zIybjr/F4ZM5HK/Omlbk1E1JbL
jrdkB9EWVhwFI0CCNnV0qy3d2qylW9vwk74Uh/T6cUggcvieBYHNM+G/7gDl
AGCS54Gf09W0MXk+UEoemrMu/onrL3HZ+dvHuZngFswB0hXD77GOlO2T2c/M
2AGhxe+Xcae88mmkNGuCxKoXJIoUGYKUp+T7FdxhE32VMLhPkRaZSosT906P
CtBttN3bE7mj0EAPrzFKAY4GP6hv9JnMugts4P/N5PfgVYyXvi839fpxM7on
9yqq/PxggvDBc0cCfxajpVH2Z7Rc4lEA2J4YzlIgi+EmHOcX9ZhiaZu63ri2
nWVOoZcuc6KzGm6Me5JZWxl8rGyMLlpqR2SXX7mwbdIprP+HIxLQw249vNA7
OMlDrjbZxcGShNcgToZ/l04o6aVVz8oAa8U2h7opRxCnxlc41RAr9Nw0/9UM
7APzlKsnJ1EYEqx2Q9datZCZ5pavuQxA+KsZATEa/p8Z5RJDmVCv5cvwpNBk
A0JMU8CTuwpJDDHZUuuVwNau/U7kdtkEglY+C2q9XPcLa34+BXhRL3QZjKZp
YWOFjVBxkyEW+20TjQFnZ2wURNn3K9pTl9oOCV3UU2i7hygHQtdnQcUwsOMh
Gg6UnAHLiy4VD7/7aCkNaNDGL05xtvb3JnRBp3eaG+UEXyKhS7j+CLfQciut
/26H0LMZwMRgtNTv9fPyFdI6g1x9jxVeMZ6ph1Jh8gu+KfbsbKYqp+KDM+kE
f1cl1x7Yo5oGnUTZvO6sDt2RDmrqomlOVVGgtSaADaqdHrau8Aoj/buDSP9v
HOnD5Z8zTs5Gk9HZusCrc5OWZ6Ff5uOiM0m/wuqv0B8uiQ1q7ChqvrQ4UtP1
x/c7NH0Xy7wKKdf0VzwQiy1usb0lG9Mb9MkUqx6CjJOCN7g9ksgB7DtrpZNU
GMi0JjGAS5ehx21sZUkBdWvMIAPyng5i902s/Ld4mANXi5aYQZaFO5kcMdDo
SgfSKljS+II7Q2urHcL5ztqWhAQKQOGknPGK7K4RDX/xMS7oMQmXbokBdvlR
nthZSLc8xHOlvqRrT0mUJAYxoTZH2tjWRdzdqnwEHqoR92wH8tk8r5jtsjIg
C+/mJtiMlxQLVpans0uJUVH/s1ZmmB0xBB66pr+q6oZOGEi87TLju2rTpY2P
I6g+eJ8KfZTiyl+f1yWnzYaiGI9ODqThdScnFxVSN6PH1XnOgdCYEhwbTWi8
zUtw9CKbp35wLPxMmeO+zOGxK7rC/FPXup7qH+PPFzT8ajTCF9vw1ygc8nt0
oclxtqqloF5cSlEPt+48w+bgE7C1CKWgEY6f0aWmzSmST6l+J31CDTL3BjBn
q0NkcSVzC9/iLSzOAMkdd9vehE/AWSNSHtlQS9wo68ivGvTSICeOXHdEEmLQ
BPJQsX4OQlTsDCn6cqe9tSa6xDeiO+32M7kRBXf9cRq+SmuJXPtKWtwYQoHc
G+pXLOPf5+aYCYKUF6izBou2DWVursFyjDuGsbwVLYSUoghaIEXFW5FY9GIX
DDnlTI45ZnI9fUEXq/m7tfD67pqnCRuafUFJm4RtILIudY0nny1b3Xa+wDbO
hsFfuxb1IlPaJaRlzGw1YdBkUpwmqLZYR/GhW6Ax3Drio3W3CPBlvpXzL2yF
F9cw0AMc4+Azf1SXiMYdRmET7exKw0uqbs9ogxph1Tabisx2fxVdSJ76wWEW
WUIsw9V19Wye3yRFSsf/XNRf81wHEyh265JVhsh/mPXSgaZDeMiymwHkQfLX
h3RZX0/L+vnSZaXB3E/b4Y1zvSSSMuVOzO/pRNAsyNPWTKmEfyjLwZ6XVE1S
m2jnZW3TJXWo71Sd3qxMqjuUQ63F16Xs8WM9uymEXUazKYSMWQMdmXBGFZfx
TbSMX1DbU1g8k9+2U8kwWObFk/QQLUI0V0Fl4DBBulILDoUEaTMmx8R85A2t
NoD2NmVBJ9sqv32e/OIKKurRFgTt8plpUdvZSRUdmHCFCHmO2uDJUw24sM0I
97O8m876ueH4UJNx4EXU/kSv5JOpXKdkUwZ5QK1JsPkpzqoPhqkO3XDgiq+C
ILPDZMWIaOYyFmAt8VkQjtzBRVVIN+Amg+9R5qPm4CgOoo3/D68wZHUr1+dc
HC9odVY5M3ESfFRlxpM0JTJh4jJmIqYstaVTZrLS5VTnCFeyyowqHnvTDXEI
PUjRhBaCX6F5DhyjJgz8wcU7ghYvBjCgxWvg4m008SXJbZ8snFk3V9HQlK76
jMv7fCOCuRa3frh2tXhnnMiqVX8N6YMyzCWeS119dn9WF12WMrgprlrFR+GY
yf0Lu3Vs1xbeWPCdumjUdUBRPaq7plkqzy6YgYtiE4pDAtiLRqaCJGCfWwzN
2+nOt5z9CxjJwYRjclmTTB9F6LZcCOvSHVR5bDxiR4P0ePEfSCO8jtNlIUAu
18XjLX3wEoPJ+94Vg+MqxcXi9MrDWCkzal4lJVYb64hgghyWtuLrf7WSdIxX
r8ySQgmml2WLrYSfH0UddYxqeELacaE5gsUTOosTIQn7XpM2znSBlGVqukjh
hgeaPBB1HBOs0uqvs47OEqYGozjIVcLM2EIaE2C9WHXzmGvgdZRyC42KSU4r
5ZYKnrBLjVovLkiYxq1omMQ/NRWjIJ0rJC/VM3VdDjy00+plWRnltiz0BfLn
J6VSd268D9p0GcPDdRWoKm3KoaR1qZFht6awe50hz0yMU9StFRPjkEvDcMji
41ataSqkNzrCHJ+4QEYSKmHSSKv6XqpUcI2kL96mz/5hevZRZULBHIArQKsQ
82RiEYqEwcQDqxzpGgYeOsiAMuELW1Jp+sUVZHZZQecKmqVoR6WgCqOQuec1
WEhr8K+6Bh+nNRg9nDVYUroGSif2SuCnygkDP5pYhV4Z57ucYa1GOCDQk5mm
ZytoNZotrIb31KgKB1UVfoqeeEzpEzNQwHVP2ccVfqUotK+p9GxdJytUhclX
wLIZUlb9A0ohKXasmKBjiSYgJ7zepMSkBEYyVoXZKjKToajyKi53IhwSrhoh
XKo4BJejMPk0+LdNiSkRzWr80z4i/8DV+nw3SN1vJNkb9Lm+SM81PkKymrVe
bkCaen9hQd88Xl+qSF4qtdm7a2jFLVUmdSFvWsauNWVSEsu6H+PaYgKOO0l4
vDc+Jj1VMqHsMYUzuZhV0ScUh9a5Keze4mNKQ9Cq/rayrJKLEhztqsqe6pRq
etOhEJCAMYDNwSpwZGGTiUM9liVcTdO6scfSREVUvzRci4wfc7tkb2m5IrX0
gygRnrXqoJveTLKEN/tG4pEVSSaVPmXFe8r8px57Rs+bXCnrzPdQyM2s0gzD
IG6OYU1I4EOS2uJHwrXDgr97noQ3WMKnGUdPM1k1SZ0+8jhOGGYlkCtOCxdE
pGUlbAfs0Oc2HQu+h4O+Zi+u/EF6r7TkydTIyldC/uKqr1HjJg5kLgf+yr+q
Ej6O+PTOo409TpvmKvjW3W/sslj8Dj/Mgfow0+hhppU9DB5u5g470nIAlxZC
Fsz9sUavsHNhdVvNu+P+KufYjTXS5cdvP0Aleybd7PTIzUr7rHWO8SbrZTeZ
mZUPTKnkgZKM78ZQI67O5GHalAZ8rrz21xWfRQ9xprK6J67Or69bvz648VWa
ylrFOkOyWH1iBjh33J94OlfZAyPFvuAm99WbnEs3OXMoHmcntCY53T5VBSs9
fqnrnYqdvtAtu6mPddD65a+X6b2cR/dy1jDvpRGRspiGq5OtKi4e3qbqkL4q
L5Ty50VcesPb3FtvcxHd5tnDvM1KwW8nwaeba8RuTp+kVnZfrHHz114qNMvo
vmYpv1U9uV4ROknsaQY3VGcVxSvT1DvQpb3I8dFIXZQV9OWzWyzKoAlm8H5q
jsv11uoqpzF2bxA7ybMP6NdfRF8/Z5g0cX62GCy7BCJ1FV0Kx8t4nX793rX0
vXP35HtrEr/0SZjCHCBuxIXEcX36LZfRt5zrUza4dqqi6YpXbl3B4++rmSWV
F35VrzLRVfRV8yMPlCk7hXlO5deKPlqMqzJdwF59tK/S9503xALKtzQdzfwv
YEchf/Xotb9B114wFHFY3ZZeO9Vrd+u1v0PXXjjMa9dNbIDSl7+69GLX0MXO
j9M3DHv7Kno2fvF1dPbiliTjs72vvYFOXDKMZ1BO6dSzf0xnLy37Wn5PXPd2
PfHndOIyfdoscom6Hv5rOnw531fQylLTZfgdHbciuBj8m+rF/o8OWqlv/IHe
wOudWvxdai8LFixIvv/975un60m+8Y1vJGeffXayc+dOfOfhhx9Ozj///GTU
qFHJlClT9PgdO3YkV111VTJu3Ljk9NNPT84999zkzjvvxJvKHbQf/vCHyfjx
45OJEycmX//615Orr746+clPfpKsX78eb37btm145Le//W289E033ZRs3749
ufTSS5PRo0cnM2fOxK/63ve+l4wdOzZ57rnnkt///vd4a3D88uXLkx/84Ad4
XbjO/fffn5x33nnJGWeckcyYMSP5xS9+wYFER8vzIo9XZcraWx3q1oSzNmzY
gOds3bqVOz6r0RWkz2pltyaX27RpU3C5RnLFFVcoESKXpsPaSglQvMO26OLB
J8Wv79Cvb7UicFu8cp8diuPeklxwwQXJd7/7Xfxry5YtyYQJE/DuN27cmDzw
wAPJ5MmT8Y5+9atf4dM89thjeGc33HADPjjcCRwL3wjHwN+//vWvk9NOOy3K
cmeeeWbypz/9CX//3e9+h9d84YUXkOPhe+DYW265JXn88ceTU089Fa8F1wcW
hWvCSsLxY8aMSW688Ua857vuugv//uMf/0i062p5eovHpNOb3l23uEti1j6P
rEMtZIs7K2e8/ZXyrS7dig7hLbZYQ/v9IeO1IplZtCEZr4qS8/Ofk+K+9dZb
kfUz/jYQ6qeffhp/gOHgXSDFT3/6U3wguOEnn3wS13HXrl1yk7Nnzy7luXvv
vRd/v+OOO1BK8tNTVv8gQLfffjsK0KpVqzJ+e+XKlcgusIpz5swRiwI6c+3a
tZ5R4jPxrzQ4nZ9NDpVHc6fXvPst3F+m9+eMaK1ATu9bKvot3iNlek/23ovM
VlFqe1et6lXN0qtilLUPb8xbvaquXvFbq/qtZgn0M1kDu1Qek7Ujk4H9fOaZ
Z/AH7hQeABjmoYcewqOA28FeZsm0adPycyZNmpQsWULeym233ZYsW7YMdSos
1D333IPvw23ANTJ+UiB0Cy6TBYFD4Jbmz5+fXHbZZSi08ASXX345rIJQCu4Y
SAIPvnr1aqEKyNXChQs9SvGZHpfJ6fxg9FyZ91xZRKfBOyU3WA04DChllo6+
oaLf4D1OpvcT4zCQ2pDDSq7Kax4ueXhP3qJVddGKX9jhGe4y0pQpsDoeDTwA
GhJ+gIfgSCCHiCl4E6DEHHmqyXXXXZesWbMGtSucA8ekSIEKqlDDXxnbkiHY
S90/OA1+ByEEHQmu4P93WowfTg6V5yrjrxY3GPIXGDB4x/uGin7DHmgw+BK5
73Xr1iG5S646BH/JPQ2hvNwXdugXtiJNGX/t4xlI+AHTCn4cSMUf/kABxYsv
vohu5jXXXIN3cN9996EpBmsP/AX+I9w48BU8I3h2Rf21/7AYDNSyeA7yXcC/
8C88UejAnHzyyUgWWECQjx/96EfJ5s2b8b5Alf/5z38Wz6zV6S0eMeaZtbhL
65mdcsopyaJFi9CuwOKULWKLO6Nv78FT4C1YX/j9b3/7G2oPcGRa0cfjt/09
frN39/e//71s+Vp+dSty7YlX1oZXv/LKK5URn3jiiWTp0qVoFKdOnYp3JhYO
zoUHhm+CAEY8Ne9h94vyG0Rb8OCwPjfffDMeCVFBLmx4OXiwb37zmyhB8BnI
wKxZs9Q2Q+wbBp8QjYCbYIPPVudFHq1aYipLbk0OBzLCtwOZQGLh38jVJews
uSnLY3A1ID58KfwOaygeVYwkhWX3eSy8udiSwVlDfXUZicp4rIE89p3vfAfv
An6effZZdMqAq6+//vqREQ/Y6CLZUA+MgJCtO/KebIliL7Nv5Lg3RY6LCAV8
RDke+H+GXPrVr34VY6r//9xxWX5pT39P/un/AdF9eKU=\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Ajuste de una funci\[OAcute]n", "Subchapter",
 CellChangeTimes->{{3.6605126940694113`*^9, 3.660512698469203*^9}}],

Cell["\<\
Se puede ajustar una funci\[OAcute]n simple utilizando una RNA de una capa de \
entrada de tama\[NTilde]o 1, una capa intermedia de tama\[NTilde]o \
indeterminado y otra capa de salida de tama\[NTilde]o 1. El tipo de funci\
\[OAcute]n y el rango que se puede ajustar es limitado, pero es ilustrativo. \
A continuaci\[OAcute]n se muestra un ajuste de una funci\[OAcute]n \
sin(2\[Pi]x) en un rango [0, 0.5].\
\>", "Text",
 CellChangeTimes->{{3.660512710093131*^9, 3.660512803460742*^9}, {
  3.6605128751795883`*^9, 3.660512875668006*^9}, {3.6605129139471188`*^9, 
  3.660512949716868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", "[", "x", "]"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.5", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "30", ",", "1"}], "}"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNetwork", "[", 
   RowBox[{"td", ",", "540", ",", "2", ",", "5"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"FeedForward", "[", 
        RowBox[{"{", "x", "}"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", " ", "\"\<f(x)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Funci\[OAcute]n original\>\"", ",", "\"\<RNA\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowCostFunc", "[", "]"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.9, 0.36, 0.054], 
        CapForm["Butt"], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
/wMOeX0m
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.365248, 0.427802, 0.758297], 
        CapForm["Butt"], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"f(x)\"", TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 0.5}, {6.411413578754675*^-8, 0.9999999707837952}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Funci\[OAcute]n original\"", "\"RNA\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9, 0.36, 0.054]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.365248, 0.427802, 0.758297]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.660512958911446*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], CapForm["Butt"], PointBox[CompressedData["
1:eJw9WAlYjun3jrKLKFtC1GRpWkTJkm6iUBSlfd/3vupr315GIVsZSxE1EiXS
SLYmvrHOWCplV0qR0CSkRqR//2vO+em6dJ3Oc8597nPOc57neae6h6zz6i8l
JaXU99////7vX7vhFvs1Mnczyw3pD8hsWiFObysjeTAUQ5YtDhWxXg7vZ0m7
nTW9TLICApZpXV624xzJ43F9YObphFX3SFbCeBXT+d0n2J8y9I98bNn870mS
p2HG0+6ZD9zOk6wKzW8aJ+cMKiJZDfVrzqm0GBaSPAN7dm5xeZHK9rPw+XbL
w6MmrP8Zpks8H2u8Y70mrh/JXDC1qJhkbZR2psh0St8geTaeDXhgFPfkNMk6
aD2f5TNu558kz8HO3nfKrtnsfy5kl76Y7vi2gGRdvPVzH9N44ATJetAb1Bzs
IMv5mocjdzpvS8xZrw+tfAwt38zxzMcYxfPKlnpnSF6AFNehT+bvZbyFqFxp
cL9xCudjEebFfDzz2PR3kg1wbal4sIoWr1+Mx5O3vmr/wPwNMadQ86JmEOMD
1QM97LsiSBYAp8NN5epTTpF+CSb9GXFCM4/8CUtwJ32Rafwe9r8Ue9I3TM+1
Zv1SLFPS2Ff1kPVG2JrRf9ZSb9YbYfLH8ke9dxh/GUK/XE+q3kL5E5bht59c
3httZH7LcXTZy+WPjCk/wnJkyUy/efUF58sYQx16Dh7z5/iNcWhH3dZjPWdJ
b4IpdR7J7cepnoIJFnzc6Vi1k+u1AtMLvmllpbP9Cti8zjx3x4rjW4ks9WUR
SntZvxJjLo8apbiD+a3CzGbRzYPJHP8quMvtHaOwgO1N8XlNv6dtMpRPwRQt
GTeWWD/iepihyXLin5JtbG8Gz3Gbqw/s5fhWI+WWt/fXLOa/Gn+3fxl3bwf7
X4OXp9S+/ryK7ddg6te55ibDuH7m+P7xjf+5V6w3R1Xw2U2V29jeAinV2jO2
u5MMC/yhcqC4Qp3XW6BkddzC5M8kSyzQOFvV6HcL9r8Wz+Zeq4oeTXqsRc/T
G47TB7H9Wmgsm3DeoZj4StYiMmFxkGYg81uH6Wd/0nMZS/nEOlzyfna7tyWf
7NehcvvIX6TeEn/JOsRnj5eVvkp6KUuc6h/+t3wM+Yclqi4FatfwfBAsMcQp
5kKtCcdvCdPepo/Wq7h/rHA+XbMrUY7jt0LSp/R9Rh7kT7DC990JI/f9Q3gS
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
mwllS/h8F2Bp/2WmztpVhv8HcO3xHQ==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo\"", TraditionalForm], None}, {
     FormBox["\"Iteraci\[OAcute]n\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotLabel->FormBox[
   "\"Valores de la funci\[OAcute]n de costo\"", TraditionalForm],
  PlotRange->{{0, 540.}, {0, 0.22883578371152258`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.660512958968677*^9}]
}, Open  ]],

Cell["\<\
Cabe preguntarse cu\[AAcute]l ha de ser el tama\[NTilde]o de la capa \
intermedia para obtener un ajuste \[OAcute]ptimo. Al graficar el costo final \
respecto al tama\[NTilde]o de la capa intermedia se puede observar que \
alrededor de 15 es seguro obtener un buen resultado.\
\>", "Text",
 CellChangeTimes->{{3.66051298129065*^9, 3.6605129977067327`*^9}, {
  3.660513308498114*^9, 3.660513345287052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrainFunc", "[", 
     RowBox[{"middlelayer_", ",", " ", "iter_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Initialize", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "middlelayer", ",", "1"}], "}"}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"TrainNetwork", "[", 
        RowBox[{"td", ",", "iter", ",", "2", ",", "5"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"costs", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "x", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"f", "[", "x", "]"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.5", ",", "0.01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rescost", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TrainFunc", "[", 
      RowBox[{"i", ",", "500"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"rescost", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Tama\[NTilde]o capa intermedia\>\"", ",", " ", 
      "\"\<Costo final\>\""}], "}"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.9, 0.36, 0.054], PointSize[0.019444444444444445`], 
     AbsoluteThickness[1.6], CapForm["Butt"], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7DNfNh1oTVhoDxVwsG6aOl/mbTqUz+FQPnvq
jaW/Y6B8AYeoI8+zojQCoHwRh4rnVx38tT2hfAmHX0veP9i6zQvKl3HgDN/Y
OCMGZr6Cg8YW5k7LLm8oX8lh0/6tb2v2BEP5Kg6GCRy3N7bAzFNzOH3Z/tDH
Qg8oX8Ph68XbT2pWwPRrOfjeqlvydI0/lK/jENBWPWFXJcx+PYeWkJBbs/19
oHwDhx+/Pxpx/IW539DhediCPxLMMPVGDr92sTxpuRUE5Rs7HDbJy6hgg9lv
4hAUuvTLnTXe9gBETlqH
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.703125, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Costo final\"", TraditionalForm], None}, {
     FormBox["\"Tama\[NTilde]o capa intermedia\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  Method->{},
  PlotRange->{{1., 20.}, {0, 0.03393953299515113}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6605131319337893`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Determinar el idioma de un texto", "Subchapter",
 CellChangeTimes->{{3.6599328279735928`*^9, 3.659932835781384*^9}}],

Cell["\<\
El objetivo de esta aplicaci\[OAcute]n es determinar el idioma de una cadena \
de texto. Cada idioma posee una distribuci\[OAcute]n caracter\[IAcute]stica \
de la frecuencia de aparici\[OAcute]n de cada uno de sus caracteres. \
Aprovechando este tipo de distribuci\[OAcute]n se puede entrenar una red \
neuronal.\
\>", "Text",
 CellChangeTimes->{{3.659937163460154*^9, 3.659937278867896*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenLangDist", "[", "lang_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "joineddict", ",", "diclen", ",", "dictcounts", ",", "dictfrec"}], 
      "}"}], ",", 
     RowBox[{
      RowBox[{"joineddict", "=", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"DictionaryLookup", "[", 
         RowBox[{"{", 
          RowBox[{"lang", ",", "All"}], "}"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"diclen", "=", 
       RowBox[{"StringLength", "[", "joineddict", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dictcounts", "=", 
       RowBox[{"CharacterCounts", "[", "joineddict", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dictfrec", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"dictcounts", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/", "diclen"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"dictfrec", ",", 
        RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"CharacterRange", "[", 
                    RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], "]"}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}]}], "}"}], "]"}],
            ",", "Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Letra\>\"", ",", "\"\<Frecuencia\>\""}], "}"}]}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"FontSize", "\[Rule]", "13"}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "lang"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<Spanish\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<English\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"GenLangDist", "[", "\"\<French\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.659937032971423*^9, 3.6599371215720577`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDwA2IQDQEf7I/9yWXe0H/YHirgcNf3esSeL5OgfA4HI1Z2
+Wlya6B8AYdMMd8AjyVLoXwRh/mCXk1TJu2A8iUclneUCbWltkH5Mg5XWDbI
v5wyEcpXcOgS/ns9yq8ZyldyWDrRrLu4YjOUr+Kgfff/wnyPKihfzeGgVdNe
Lz9uKF/D4ZPiVQ4eoxVQvpbDImPdw6IH50P5Og7iTzhT7r1cD+XrOTz9smHf
1fVboXwDBzuzIoaNi6ZD+YYOE7+7Wa5dnwflGznozU4Wlb2wHco3dnj7PJ8/
OxHmXxOH2305ZZWFq6F8UwcOl48xEwtg9ps5sKy41tk2swXKN3fwzC48OT99
mx2Eb+GwcumDwn9NkVB5S4fV7nquO9QjoHwrh2yp/Yd276y3h8UPAypwQOVy
oPEF0PgiaHwJNL4MGl8Bja+ExldB46uh8TXQ+FpofB00vh4a3wCNb4jGN0Lj
G6PxTdD4pmh8MzS+ORrfAo1vica3QuOP5p/Bmn8APB7nyA==
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Spanish\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.1528224961038857}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 3.659937122825492*^9}, 
   3.660510676767747*^9}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt080rwwEYB/BfOKwUO4zMpma01jaz99moPe0gSbJRZJai5UZqlFwYO3Cx
xVpIWS4ieX+5IMoKObjQhuTtgNRom+KCPDvs+QscPPX09HnqOT1981s6rI4U
hmGqv/tn/lbEJPAGrSNbqyZcwEOsmWvPG0WzQGo/Cx88zaDZkB3qrS/PTpgD
m8zT3RtvG50D18fdV7HPYTQfdNrz8OXeFFoA4lBehbnMjxZCrSVYd566gS6E
hsesoObehhZB+4Q34yLqQoshwJa93pzMoSXg3ilyLfgm0DKQtPofzOoVtBxm
43FLF2sRrQDfae2hLTKJVsKH98i4PG5Hq8BZkOYfcybu1fDex4p7outoDSh6
h7jF4SW0FrjpUDoenUbrIPPWzumpHETrQZr7sl8V6keXQKxpfmDt2YE2wG4H
r7G5xoM2QlvAXO9zd5oS/2GSC5LJImYTc4hziPnEAmIhcSGxiFhMLCGWEcuJ
FcRKYhWxmlhDrCXWEeuJS4gNxEbi//z81fx8Afwf8IY=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"English\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.11370771469410355`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 3.659937122825492*^9}, 
   3.66051067747614*^9}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt071LQgEQAHBr6AsHKQcHBxUxMTFLnz5F8MKCyChoCoQiJcWiGqJaM15J
oNQSoVBEU0sNfRtFvIJKaKhJMLCgpCGkL+hbqOgcur+goYPj+N103HFyd19L
Z75AIGj6yu/6E3f2QF9vYJdds2MDwsUpLs6Po4sgWiNPe4XzaBG4Xkb51edp
tBjO4pkbPraDloBvzFYSYENoKRxcG5rzHJNoGdTG2rqzDIdWgOc+rNmY2EQr
Yao3HVyUtKFVEOF6Go8bWLQahrfD55Hn3DwaYJzZda8ygtYCw4sc7vgKWgf1
H8pbrnQJrYeCVlFCUxFFV8HpQ+Zi1tOProbXypmjR3MMbYCOQ39objC3HyMs
1Pn3r1TLaAZST4Nb/GVuHhO4LsoaLb4g2gyugUKxTShBs3CyOfSWKO9CW8Dl
lHGmPS/aCu/JqLM9OWLP3UfwO+A3i4hFxGJiCbGUWEasIFYSq4jVxBpiLbGO
WE9cRVxNbCA2EjPEJmIzMUtsIbYS///PX/2fT0iG8KY=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{27, 1}],
        LineBox[{28, 2}], LineBox[{29, 3}], LineBox[{30, 4}], 
       LineBox[{31, 5}], LineBox[{32, 6}], LineBox[{33, 7}], LineBox[{34, 8}],
        LineBox[{35, 9}], LineBox[{36, 10}], LineBox[{37, 11}], 
       LineBox[{38, 12}], LineBox[{39, 13}], LineBox[{40, 14}], 
       LineBox[{41, 15}], LineBox[{42, 16}], LineBox[{43, 17}], 
       LineBox[{44, 18}], LineBox[{45, 19}], LineBox[{46, 20}], 
       LineBox[{47, 21}], LineBox[{48, 22}], LineBox[{49, 23}], 
       LineBox[{50, 24}], LineBox[{51, 25}], LineBox[{52, 26}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       StyleBox[
        PointBox[{53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
         68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78}],
        FontSize->13]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Letra\"", TraditionalForm], 
    FormBox["\"Frecuencia\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 13},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"French\"", TraditionalForm],
  PlotRange->{{0., 26.}, {0, 0.11611568460447279`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["\"a\"", TraditionalForm]}, {2, 
      FormBox["\"b\"", TraditionalForm]}, {3, 
      FormBox["\"c\"", TraditionalForm]}, {4, 
      FormBox["\"d\"", TraditionalForm]}, {5, 
      FormBox["\"e\"", TraditionalForm]}, {6, 
      FormBox["\"f\"", TraditionalForm]}, {7, 
      FormBox["\"g\"", TraditionalForm]}, {8, 
      FormBox["\"h\"", TraditionalForm]}, {9, 
      FormBox["\"i\"", TraditionalForm]}, {10, 
      FormBox["\"j\"", TraditionalForm]}, {11, 
      FormBox["\"k\"", TraditionalForm]}, {12, 
      FormBox["\"l\"", TraditionalForm]}, {13, 
      FormBox["\"m\"", TraditionalForm]}, {14, 
      FormBox["\"n\"", TraditionalForm]}, {15, 
      FormBox["\"o\"", TraditionalForm]}, {16, 
      FormBox["\"p\"", TraditionalForm]}, {17, 
      FormBox["\"q\"", TraditionalForm]}, {18, 
      FormBox["\"r\"", TraditionalForm]}, {19, 
      FormBox["\"s\"", TraditionalForm]}, {20, 
      FormBox["\"t\"", TraditionalForm]}, {21, 
      FormBox["\"u\"", TraditionalForm]}, {22, 
      FormBox["\"v\"", TraditionalForm]}, {23, 
      FormBox["\"w\"", TraditionalForm]}, {24, 
      FormBox["\"x\"", TraditionalForm]}, {25, 
      FormBox["\"y\"", TraditionalForm]}, {26, 
      FormBox["\"z\"", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6599371063075666`*^9, 3.659937122825492*^9}, 
   3.660510679104156*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnWuwFNV2x9szc54+7r3yJamba8zNLWNu7jW5typVSb4lH/L4kFSq8iVf
cquMFQUFn/hEUXwCgoiCqMhD5KHgAwFFEFDwDQgCgiiioiivA+fAERBESf9W
9+rZvae7p6dn5nDOMFWcYWb37r3X+q/nXr27+98vHjrw/4ZcPHTQJRef/y/X
Xnz1wEGXXHf+P191rduUO8NxzhjoOM6x8x2+n3S/+h8n3X8nB/FBS+H7FfJf
i/Ppp58699xzj3PFFVc4t912m/Pqq686P/7448/lcN756KOP5NDUqVOdH374
4R+kOeds377dGThwoPw62287ePCgc+mll8r//+Gf/uWXXzpXX321M2XKFE7/
e2/uy+W/VufYsWNy9Pnnn3e6urqcbdu2OUOHDnXWrFnjKAHff/+9s3HjRhl5
9+7d5RJw+PBh58MPP3RuvPFGZ8WKFSECcs6hQ4dodY4fP+40+W0vvvii8/DD
D8uvn/ttLiAyMuykpeA//TYAvf3222WMv/Om/yv5r02aXnjhBeeaa65xrrvu
OufJJ5+UKW644QZn+vTpTT5MzIRo3n//feeOO+4QyCZNmiTUN/ti3Ldvn/PQ
Qw85V155pfC6cOFChm/2h/jmm2+cMWPGyGGkzZCXX365EJrzh/j2229FTlAC
RS4FwNfq8/HAAw84S5YskV866/79+51x48Y5V111lTNx4kTB8q677tLDCtlJ
Twt11hZ/xO+++0667Nq1y2n328xT8n7b119/Le2uAgVSmjNnjnPLLbeI5Jr9
Nr7Tj/55g4QvvvgiIAEGn3nmGR0G1YBXfjXFnOILWplCUUGf0xDU7Nmz4SRn
CAu1+OCDD0TsII46HThwwFFp7Nixwxk1apQzZMgQkQZ9VW2UaZhVMNr8qYH/
pptuEsnBPL9dISueK1euFN146qmnnBb/lA0bNjjDhg0TMiZMmOBs3boVE9NT
3nzzTZkFM9eZ0cqbb75ZBKs4Pfvss9IPlcv7XCxfvlyoQYy08D+/Fy9e7Oj4
mzZtCrhQMbnwSxt/Of9z3rx5Ad6/DhvJxx9/LJ1wCmD/7rvvOtdee61YhKue
TX43cMdRwSxMw9G9994r+LocqXhwJzCHBD/77DNn3bp1IoZVq1b5jLUJIxgB
Yvvkk0+c9957T8657LLLEJGaJTjdf//9zogRI0SPmBXzfOSRR5woo1HckOyd
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\
\>"]]
}, Open  ]],

Cell["\<\
El entrenamiento no se realizar\[AAcute] sobre el diccionario debido a que el \
objetivo es clasificar un texto, y en los textos la distribuci\[OAcute]n de \
frecuencia de caracteres es modificada por las palabras que se suelen repetir \
m\[AAcute]s com\[UAcute]nmente. Los datos de entrenamiento se \
generar\[AAcute]n a partir de muestras de textos. El muestreo se realiza \
seleccionando partes aleatorias del texto y contando la frecuencia de aparici\
\[OAcute]n de cada caracter. Esto genera una lista de 26 elementos, donde \
cada una corresponde a la frecuencia de aparici\[OAcute]n de cada letra en \
orden alfab\[EAcute]tico. Los textos de entrenamiento disponibles \
est\[AAcute]n en los idiomas Espa\[NTilde]ol, Ingles, Franc\[EAcute]s y Alem\
\[AAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.659937305771235*^9, 3.659937341954743*^9}, {
  3.659937379178846*^9, 3.659937623641363*^9}, {3.659937656105071*^9, 
  3.659937672065298*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"categoricalConvTable", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetTrainingData", "[", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "path", ",", " ", "files", ",", " ", "samplesize", ",", " ", "samples",
         ",", " ", "trainingdata", ",", "text", ",", "langname", ",", " ", 
        "del", ",", " ", "len", ",", " ", "samplepos", ",", " ", "textsample",
         ",", "counts", ",", "dist", ",", "languages", ",", "basearray"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
         "\"\<TrainingData/\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SetDirectory", "[", "path", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"FileNames", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"samplesize", "=", " ", "5000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"samples", " ", "=", " ", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{"trainingdata", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"langname", " ", "=", " ", 
           RowBox[{"FileBaseName", "[", "f", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", 
           RowBox[{"Import", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"ToLowerCase", "[", "text", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"text", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], 
               ",", " ", 
               RowBox[{
               "\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], ",", 
               RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], 
               ",", " ", 
               RowBox[{
               "\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], ",", 
               " ", 
               RowBox[{
               "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"del", " ", "=", " ", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"Keys", "[", 
              RowBox[{"CharacterCounts", "[", "text", "]"}], "]"}], ",", 
             RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"text", " ", "=", " ", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"text", ",", 
             RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"len", " ", "=", " ", 
           RowBox[{"StringLength", "[", "text", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Genera", " ", "muestras", " ", "y", " ", "toma", " ", "la", " ", 
            "distribuci\[OAcute]n"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"samplepos", " ", "=", " ", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"len", "-", "samplesize"}]}], "}"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"textsample", " ", "=", " ", 
              RowBox[{"StringTake", "[", 
               RowBox[{"text", ",", 
                RowBox[{"{", 
                 RowBox[{"samplepos", ",", 
                  RowBox[{"samplepos", "+", "samplesize"}]}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"counts", " ", "=", " ", 
              RowBox[{"CharacterCounts", "[", "textsample", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"counts", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", " ", 
                  RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"dist", ",", "langname"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"dist", " ", "=", " ", 
              RowBox[{"ReplaceAll", "[", 
               RowBox[{"dist", ",", 
                RowBox[{
                 RowBox[{"Missing", "[", 
                  RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"trainingdata", ",", "dist"}], "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", "samples", "}"}]}], "\[IndentingNewLine]", "]"}], 
          ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "files"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"languages", " ", "=", " ", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"trainingdata", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"basearray", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"Length", "[", "languages", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"categoricalConvTable", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"languages", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"basearray", ",", 
              RowBox[{"i", "\[Rule]", " ", "1"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "languages", "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "trainingdata", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CategoricalToNumeric", "[", "td_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", "td"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"data", " ", "=", " ", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"data", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"categoricalConvTable", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"categoricalConvTable", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "data", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NumericToCategorical", "[", "list_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "found"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", "list"}], ";", "\[IndentingNewLine]", 
       RowBox[{"found", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"found", " ", "+=", " ", 
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{"{", "data", "}"}], ",", 
             RowBox[{
              RowBox[{"categoricalConvTable", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"found", " ", "\[NotEqual]", " ", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"data", " ", "=", " ", 
              RowBox[{"Replace", "[", 
               RowBox[{"data", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"categoricalConvTable", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], " ", "\[Rule]", " ", 
                 RowBox[{
                  RowBox[{"categoricalConvTable", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "categoricalConvTable", "]"}]}], "}"}]}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "data", "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Return", "[", "\"\<Clasificaci\[OAcute]n erronea\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetDistFromText", "[", "text_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "t", ",", "del", ",", "counts", ",", "dist", ",", "samplesize"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", " ", "=", " ", "text"}], ";", "\[IndentingNewLine]", 
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"ToLowerCase", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", "  ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"t", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], 
            ",", 
            RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], 
            ",", " ", 
            RowBox[{
            "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"del", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"CharacterCounts", "[", "t", "]"}], "]"}], ",", 
          RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"t", ",", 
          RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"counts", " ", "=", " ", 
        RowBox[{"CharacterCounts", "[", "t", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"samplesize", " ", "=", " ", 
        RowBox[{"StringLength", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dist", ",", 
          RowBox[{
           RowBox[{"Missing", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "dist", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetRandomTestData", "[", "]"}], " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "path", ",", " ", "files", ",", " ", "samplesize", ",", " ", "samples",
         ",", " ", "trainingdata", ",", " ", "f", ",", "langname", ",", 
        "text", ",", "del", ",", "len", ",", "samplepos", ",", "textsample", 
        ",", "counts", ",", "dist"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"path", " ", "=", " ", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
         "\"\<TrainingData/\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"SetDirectory", "[", "path", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"FileNames", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"samplesize", "=", " ", "5000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"samples", " ", "=", " ", "50"}], ";", "\[IndentingNewLine]", 
       RowBox[{"trainingdata", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", " ", "=", " ", 
        RowBox[{
         RowBox[{"RandomSample", "[", 
          RowBox[{"files", ",", "1"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"langname", " ", "=", " ", 
        RowBox[{"FileBaseName", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", 
        RowBox[{"Import", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"ToLowerCase", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"text", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<\[AAcute]\>\"", "\[Rule]", " ", "\"\<a\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[EAcute]\>\"", " ", "\[Rule]", " ", "\"\<e\>\""}], 
            ",", 
            RowBox[{"\"\<\[IAcute]\>\"", "\[Rule]", " ", "\"\<i\>\""}], ",", 
            " ", 
            RowBox[{"\"\<\[OAcute]\>\"", " ", "\[Rule]", " ", "\"\<o\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[UAcute]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}], 
            ",", " ", 
            RowBox[{"\"\<\[NTilde]\>\"", " ", "\[Rule]", " ", "\"\<n\>\""}], 
            ",", " ", 
            RowBox[{
            "\"\<\[UDoubleDot]\>\"", " ", "\[Rule]", " ", "\"\<u\>\""}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"del", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Keys", "[", 
           RowBox[{"CharacterCounts", "[", "text", "]"}], "]"}], ",", 
          RowBox[{"Alphabet", "[", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"text", " ", "=", " ", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"text", ",", 
          RowBox[{"del", "\[Rule]", " ", "\"\<\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"len", " ", "=", " ", 
        RowBox[{"StringLength", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"samplepos", " ", "=", " ", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"len", "-", "samplesize"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"textsample", " ", "=", " ", 
        RowBox[{"StringTake", "[", 
         RowBox[{"text", ",", 
          RowBox[{"{", 
           RowBox[{"samplepos", ",", 
            RowBox[{"samplepos", "+", "samplesize"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"counts", " ", "=", " ", 
        RowBox[{"CharacterCounts", "[", "textsample", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"counts", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/", "samplesize"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Alphabet", "[", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"dist", ",", 
          RowBox[{"CategoricalToNumeric", "[", "langname", "]"}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"dist", ",", 
          RowBox[{
           RowBox[{"Missing", "[", 
            RowBox[{"_", ",", "_"}], "]"}], "\[Rule]", "0"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "dist", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScoreResults", "[", 
    RowBox[{"td_", ",", 
     RowBox[{"trials_:", "100"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"data", ",", "score"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"score", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"data", " ", "=", " ", 
          RowBox[{"GetRandomTestData", "[", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
            RowBox[{"Round", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"FeedForward", "[", 
               RowBox[{"data", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], ",", 
           " ", 
           RowBox[{"score", "++"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", "trials", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Pruebas superadas: \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "score", "]"}], " ", "<>", " ", 
        "\"\< de \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "trials", "]"}], " ", "<>", " ", 
        "\"\<.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ClassifyText", "[", "text_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "dist", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dist", " ", "=", " ", 
        RowBox[{"GetDistFromText", "[", "text", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Resultado de la clasificaci\[OAcute]n: \>\"", " ", "<>", " ", 
         RowBox[{"NumericToCategorical", "[", 
          RowBox[{"Round", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"FeedForward", "[", "dist", "]"}], "]"}], "]"}], "]"}]}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", 
   RowBox[{"CategoricalToNumeric", "[", 
    RowBox[{"GetTrainingData", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"26", ",", "26", ",", "4"}], "}"}], ",", 
     "\"\<CrossEntropy\>\""}], "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNetworkAndMonitor", "[", 
   RowBox[{"td", ",", "200", ",", "10", ",", "3"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Test 1.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ScoreResults", "[", "td", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", "\"\<Test 2.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "ClassifyText", "[", 
   "\"\<En el principio cre\[OAcute] Dios los cielos y la tierra. Y la tierra \
estaba desordenada y vac\[IAcute]a, y las tinieblas estaban sobre la faz del \
abismo, y el Esp\[IAcute]ritu de Dios se mov\[IAcute]a sobre la faz de las \
aguas. Y dijo Dios: Sea la luz; y fue la luz. Y vio Dios que la luz era \
buena; y separ\[OAcute] Dios la luz de las tinieblas. Y llam\[OAcute] Dios a \
la luz D\[IAcute]a, y a las tinieblas llam\[OAcute] Noche. Y fue la tarde y \
la ma\[NTilde]ana un d\[IAcute]a.\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ClassifyText", "[", 
  "\"\<In the beginning God created the heaven and the earth. And the earth \
was waste and void; and darkness was upon the face of the deep: and the \
spirit of God moved upon the face of the waters. And God said, Let there be \
light: and there was light. And God saw the light, that it was good: and God \
divided the light from the darkness. And God called the light Day, and the \
darkness he called Night. And there was evening and there was morning, one \
day.\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.659932867743372*^9, 3.659933034827691*^9}, {
   3.6599330886853037`*^9, 3.659933236841154*^9}, {3.659933271444338*^9, 
   3.6599333049196253`*^9}, {3.6599334543323517`*^9, 3.65993347072902*^9}, {
   3.659933534340192*^9, 3.659933538548366*^9}, 3.6599336343574057`*^9, {
   3.659933696844008*^9, 3.659933772299573*^9}, {3.659933848549431*^9, 
   3.6599339585914307`*^9}, {3.659933997615103*^9, 3.659934066057029*^9}, {
   3.659934099047036*^9, 3.6599341012959538`*^9}, {3.659934165039351*^9, 
   3.659934169364889*^9}, {3.659934260845233*^9, 3.659934261523334*^9}, {
   3.659934327164485*^9, 3.659934489920456*^9}, {3.6599345329767323`*^9, 
   3.659934545250003*^9}, {3.659934581374588*^9, 3.659934618811349*^9}, {
   3.6599346653336353`*^9, 3.659934704108684*^9}, {3.659934842650635*^9, 
   3.6599348867642813`*^9}, {3.659934927758157*^9, 3.659934998809301*^9}, {
   3.659935083304237*^9, 3.659935084762933*^9}, {3.6599351242068663`*^9, 
   3.6599351502083893`*^9}, {3.659935590158731*^9, 3.6599355934011517`*^9}, {
   3.659935665780664*^9, 3.6599356682442713`*^9}, {3.659938009494513*^9, 
   3.65993801806433*^9}, {3.659938136327649*^9, 3.6599382054696627`*^9}, {
   3.6601850041937447`*^9, 3.6601850184731827`*^9}, 3.660185157194158*^9, 
   3.660509245706875*^9, {3.660522845565193*^9, 3.660522850122835*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Aplicaci\[OAcute]n: Clasificar d\[IAcute]gitos", "Subchapter",
 CellChangeTimes->{{3.65996821713584*^9, 3.659968227677921*^9}}],

Cell[TextData[{
 "Utilizando una RNA se puede obtener un buen nivel de precisi\[OAcute]n a la \
hora de clasificar d\[IAcute]gitos. Para esto se usar\[AAcute] la base de \
datos MNIST que consiste de 60000 ejemplos de d\[IAcute]gitos en \
im\[AAcute]genes de bloques de 28x28 pixeles.  \n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3Qe4LVlRBWBnQMWImLOCmHMERUEQMCdGjKgMCgbUURgFFBWdUUyMIMmM
EUwYwYgBxSyYc86YIxix5W++BXt6+r7X7845nU7V9+158+476Z6urlq1au3a
t7zXVXe7z+Uv9EIvdP+bPfc/d7vyAXe83/2ufNAVN33uX+70oKvvfa+bPPd/
Hvfc9eDnPsYPu66rVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atU6ynqudbVqXWiVD9ZacpX/1Vp6lQ/WWnKV
n9Waa1Wsq7XkKv+rtfQqH6y15Co/qzXXqlhXa8lV/ldr6VU+WGvJdQw/KyuL
HcPXzlrlg2VDK/8rW9rKB8uWtMJ7ZXNZxbqyJa38r2xpKx8sW9IK75XNZRXr
ypa08r+ypa18sGxJK7xXNpdVrCtb0sr/ypa28sGyJa3wXtlcVrGubEkr/ytb
2soHy5a0wntlc1nFurIlrfyvbGkrHyxb0grvlc1lFevKlrTyv7KlrXywbEkr
vFc2l1WsK1vSyv/KlrbywbIlrfBe2VxWsa5sSSv/K1vaygfLlrTCe2VzWcW6
siWt/K9saSsfLFvSCu+VzWUV68qWtPK/sqWtfLBsSSu8VzaXVawrW9LK/8qW
tvLBsiWt8F7ZXFaxrmxJK/8rW9rKB8uWtMJ7ZXNZxbqyJa38r2xpKx8sW9IK
75XNZRXrypa08r+ypa18sGxJK7xXNpdVrCtb0sr/ypa28sGyJa3wXtlcVrGu
bEkr/ytb2soHy5a0wntlc1nFunXY//zP/3T/9V//1f3Hf/xH9+///u/dP//z
P3d/+7d/2/3lX/5l90d/9Efd7/7u73a//uu/3j3jGc/ofuEXfqF72tOe1v3E
T/xE99M//dP933/lV36l+43f+I3u937v97o/+ZM/6Z/3d3/3d92//Mu/dM96
1rP61/3v//7v7n//93+X/lWvZ+V/ZUtb+WDZklZ4r2wuq1i3DoP14DL4DE77
q7/6qx67/eqv/mqP6Z7ylKd03/u939t927d9W/cN3/AN3Zd/+Zd3D3/4w7uv
+qqv6v/+xCc+sXvSk57U/fiP/3j3cz/3c/3z/vAP/7B/nX/4h3/oX/fZz352
j/nWZOV/ZUtb+WDZklZ4r2wuq1i3DoPF/umf/qn7m7/5m56f++3f/u0e5/3A
D/xA903f9E3dYx/72O7zP//zu0//9E/vPumTPqn78A//8O793//9uyuvvLL/
+2d91md1X/RFX9Tjv2/91m/tn4f3+53f+Z3uz//8z/vX/dd//dfuP//zP5f+
Va9n5X9lS1v5YNmSVnivbC6rWLcO08PF68FmMNrTn/707slPfnKP9b7kS76k
x3n3vve9u7vf/e7dXe961+4t3/Itu1vd6lbdbW5zm/7vH/ZhH9Z9/Md/fPeQ
hzyk+7Iv+7L+eThB/d8/+IM/6P7iL/6i+8d//MceV67Jyv/KlrbywbIlrfDe
+ez//u//zlzPec5z+kW/NGXpe0VLpReGe7HkzCx9sr//+7/v8zStFQ7F32mv
PA+XQpeV1/F8/+5x+mxy8J/92Z91f/zHf3y9hd+x/LvHeW3vldf1el7X73Vj
rWLd/Oa68THXkJ/p5T7zmc/sfv/3f7/HZz/2Yz/Wfdd3fVfP6X3e531e94mf
+Ik9nrvLXe7Svd3bvV33+q//+t3LvuzLdje5yU26V3qlV+r/frvb3a57z/d8
z57vu//9799zgV/7tV/bffd3f3ev9dPfhSX58pqs/O80LP4ejSrtgngmHv71
X/9175tinVgqTvp394bneK7YfYh4N2blg9s2PiLXJlfLlXJm/EouHcuxNM5y
MX9LvuafXo+/zWWF985nZ+G8YW6dsv7t3/6t9xuYi15ef836rd/6re43f/M3
+0U/L4/K0b/4i7/Y/fzP/3z/d7orvgQTim1imtehuaer97if/Mmf7H70R3+0
+/7v//7ue77ne/q8bPl/i1brR37kR/rHee1f+7Vf61+X/4qJ4uEhtPcV6+Y3
PsnHcG38TN7D6f3sz/5sz+nBaQ972MO6Bz3oQd1973vf7oM+6IO6d3u3d+u5
vDd+4zfuXuu1Xqu7+c1v3uO9l3u5l+v//uZv/uY95nvv937v7h73uEf/vM/+
7M/urrvuuu4JT3hC70t8Vxxck5X/nYZFn9piPPFMPPypn/qp7od/+If7WIfX
di/4d/eGeyR187FycPngto1fybVyLM2yvCxnqnP5lVya/KqOtr7v+76vr6vl
Yv6W/scSOufCe+ezMbw3rCtdyylLTMK92fNIB2UvJC08H4HT9Mp+6Id+qM/P
8Nl3fMd39Lopfxe/5FY+RDP1p3/6p70Pimf+3ePk9Mc85jHdF3/xF3ef+7mf
2/fhPudzPqf//2uuuaa79tpru0c+8pH942jxf/AHf7B/Xa+jPlGT+L1urFWs
m9/4JB/L3gy5TdwRg776q7+61+LBa3Abjd4d73jHntd7wzd8w+61X/u1u1d+
5VfuXvIlX7LHe3Cfv7/O67xO9yZv8ibdO7zDO/Q8YLR9n/AJn9D72Dd/8zf3
78En12Tlf6dh/B3Ww2OLq3KsfGyP0dd93df1e4++5mu+ps/FT33qU/vauO2V
iN/H2ltePrhtkwvFNblajJOX5cyv//qv7x7xiEf0PRL5tV36H/a82f8mL3tu
dM7iMqwwlxXeO5+N9W+D9cQbcQP+mrJce9gKxlMXiEmPe9zj+pgkJ3/lV35l
j9fEKfkURpOn+dfjH//43ofwgWIWbg5OpKnyeLwLjb18LC/f+c537nP6ne50
p+5d3uVd+nxNk0WTr5cH+z360Y/uX9fr/PIv/3KPEfxeN9Yq1s1vasdgPblP
H1cdoH9Lp/cBH/AB3e1vf/vubd/2bbs3e7M3625961t3r/Ear9G94iu+Yt/H
femXfunuZje7WY/3XuzFXqz/O54P7oMH9Xc977a3vW13hzvcodf9fcEXfEFf
M3ivNVn532mYmCqX0pKKq/YiiWdf+qVf2n3yJ39y9yEf8iF9bcJPv/Ebv7Hn
ut0bnhPd6SHq2zErH9y2yYX4Fbn6O7/zO/u8LGfe73736z70Qz+0743Ir1nv
/M7v3L37u79799Ef/dF9LuZv8qrXwKXogeCW57LCe+ezIdazztLhXWyJS2oF
9SZ894Vf+IXdQx/60L5WgO1wcZ/xGZ/RfeqnfmqP3eTUj/iIj+g+7dM+rcd0
uBq9Cb74Mz/zM70f6tFdffXV3Ud+5Ed27/Ee79FzMa/7uq/7/DwuZ7/CK7xC
/3e5+23e5m16v/TacIDXVbfg+XCGh6hBKtbNb3C6HEavBH+pB/Bv/EoN4Lq/
+qu/eq/N4xPw3Eu8xEv0GO9FX/RFuxd5kRfpXviFX7jHe/70dz+H/fB+L/My
L9O9/Mu/fPcqr/IqPU4U78Q+taw6dk1W/ncaJqaqofmfeUH2j4tntKY0CG/x
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
ZWoX94tZKuKZWWc+H3/lm3QK6iO8tuf5HGKie4JWVs1Mt+o94US+Ple9uxX/
G/qDxQ/c/75b/Xe6XjFGDXrKeE+9rOYQY/m0vCtG662IxZlvT3/FJ2mgxfmc
68d/9fPmsq344N4Nt6dWcJ+YZUqzJ9/L/7Ce+0v8y3kMibFDTTNtv9oCb4w3
4lfuP5yS+O191mSnhPfkFbgKpnedaSlxbnqs5uzQ+eLU6OvETTgd5//4xz++
9wWxQr6SO2mmMi8vc/vkYPyIXn7m79CSeC17avmXXD48p8zf1Rs0nXoLeD9x
CEb03j6XXoXPqQ7xOnPO7DmUVawbt8wQc01x0MF6YobYoV8qn8FJMBn/EoMy
7yRzlK3MzbMvg39m1jE9Apyn36pfITbBXGoZNQUc599hQrkR7sNPwxaea94K
rIEP54f8U92kNg7uEzfxLHrOMAgOSnwUM90X6mWv577wGL7tHszcs7YOOoZt
xf+iO46WXGzA/+uZ40bth3FdXSPfJ4wj35wq3lO3i8/uDzU2v8XLBO/RXMHG
OYuS7kBcF/v5Lp5nLtuKD+7dXHN51n2lz0AnRV9vr0X6HOKWONrOqs+Mqux7
U1eIj+plcdT55eKg+gy3t7Z9laeE99LTzRlr8hV+gTYKX+G641HkMzHTz3AX
+qy0vfgVfV7XF+bDWcB9rj28px6gGVFHir94QtgRT+ccM3XkkNeF9zI3hm/I
9Xg+ccxngxPFM7FJTtXb8/mPdd7PMa1i3bhlTqRaxLW1F5dP8kU5Hg+nR6rW
gN3UnkPdcGrP6EfVnfwz51rIhea40IjiidShsJmaJmdDwnx6vLCa/q7/9zzv
r0/heWZSwaE4Zn7qPvJ5+av7yb+rmXDh7oV8ppylC6P4PXAx9hrz7cwq4P/u
z1M/y0pswN/DwfoR4oaZ/DC/mhNu1svHueJM7es/VbzHD/HKahffjTpbn5vv
Z7aVfG0On/tAr4S/i/VqDTPr5+RgtuKDezdYDNaXV3E94YfFLfdX5pcOZ9Xn
bHD3n5or50Tao0Gzh48RB3FKcvna+nCnhPdyZkpmc9Jq4srkKngcJnO94Kqc
P+ba+VMMxYXYQ+v66qNkfh8eBd7jA7gXPsN37AGTT8UjPIjYnf5M27/P3nC+
MTwjVQ0SzR/Ox2dW7x+LAzmmVawbNz4J66k5xSHXWo8K1hNH7H/QY+BbOLPs
qWi1JJkFpBcL63mcx8MCMBs9AJ5QfOOP+hfqGphSLWOfEExnbhRsqa/hveVR
+VHNgm+GQ/kkP+SnYhqsxl/9zGO8ln289gDnjJnMqHK/qJ/1pcVY+NDMK7jR
/eHe9H0cw7bif+o/97jvFt8PT8PFmfOPf1Vbwv24vsyxPkW8xxdhN2dl8Ftx
OXNxxeWcZyov45U9jtZUDW+mLt+bc5bpVnxw70Y3pW6lQ5bX9Rty9p46Kvt8
2rPA5Xi1q3uPRkY9696z31ucpNlz34mDOYt+zlnKU+yU8N7Y2dqZx+yeF19z
zphclj4TbGi2kzme+Dp9LXsanc0j9sJ5fEEuo62iaZdf5VGxiF+J2V6v1WgO
1/CztWdCjun+tmYV68bNtQ3njK/AO6gV9V3N5dEz4GPyFy5ZzTk2D1lsgqmC
9fDMODrcnX5FtEreA3es7wBHwFz+3R4hvS6+qzfhZzROtK5qjZwnH0zGT7P4
paU/gjuES9RDmVOUvOvz+330pfVP1NY+i7rK6x+zJt6K/7nvxR95I/u5XCPf
FxyNu8psT71LtYCfnyrek2ejs89+Svvl1D78To6GA+FB+lL1zjOe8Yzn+9zW
zy89a20pBs5trr3+Xfq4cra+hvrJPjM16th8ejjQ/g0+5rE5X1LvQ3wVv5aa
rTfFTgnvjVnO227nMg+1RP7OP3AielB4D/t16WbUkvgUvqDnj7ugAeBD+mU0
6ThD9cRZeO9UrGLdeM0ht0dTClupEXB7eDnaAXsmotfL/gwYanjOssfIc5nL
pn+Fp5PjcHm0AHwZjsBrqGH4Jk5OnYvDw0fDfbR16Xl5rDiWfuuFzhfFmXgN
9wDMmZnPwXw+v88Ii+IS1db2HsOJcGj462PYVvxP7MH1qhFdI/Wi2pE+xL5q
3ALcLC+ZMXcqeG9YF1v6sXyXHlVM1rfFz0R/lRlZ7gcaK9+PPJ9+ifqHT89l
W/HBPVnrN/EdPTO1LG08TaxYmZlUNFqZb9XW0+KYf1NPqyvk/3B79KBec+1z
MwrvPecGZxkMzzoRD1JHihf2d+lHqQf0+uH9tp8rJmcPYvq50YkU3jvtWBct
fnvOn749nESjpT6wN4eP6dGpH3IWLV6vXdmXkfl4/A/WwzuLXzQFbR9XfuPb
/DB7weU9XAdcZ74K7MfPg8H4rceG6/a5L3QG0BjeS6xs97Tpr+Fj6KnCI3o/
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
AvlAHQ8TyJE5Uws+WKOP7j3Wwdp6AGpOmid1Il2VOOLaudauqZozewvhHz+T
v+RE89TUmfK13j2t8JbmuE/Zn5v+td85tQzNgroIb40XPYZtxf+C93Bt+LTM
GKZ5w43lDCh+BP/BfGYBwFfyHawDP4s1U5bvHo6CK2EufBy81i64jn/iE9Ul
ODQ5Nbq7aO+iufM4nwlPN1xeXx/aZ/We8J1eGo6S5s/c+syg15+zD0SvWgzV
4/B9eI/2nPL0dOVzWFKM9Vw115CnWbLvsRUfXKPJZ8F62VsEz4sb6gKYzbUX
d+RN9YCaemzeHm4YHuS/ag6+iJPhY/KpHN6eY7827uS8VnjvcNbOEZWjxZng
Pn4pl9mzhncW39TJehfp78r7alU+yUdznp+Yhhei/Uq/T70tLsIT9AbZQwRv
ZA9H4b15fdD37nqb86VGpGuHy+Ve100MGvafxB69e5yHGgC3hw/Eu9gbRhvg
Wm7Fpszfo1/Qi4QZ4Aj5W7xWv8A5+PFj2Fb8T67Rh8ThwzfwG9/gIzm3R+6S
y2A+PJ9egB6nGAEXqg/lsSlLDPLaeqs5s6JdXt+SP+nqxCn50vL/fpa9Zq6r
z+ja4yNxenAijKfXK3aFv4M14Tt9Yr1X/Wu4zlwZdTIdIf5Gf18N5WfuCz07
r+m91Mi+j2iifS/eE9dJayj2thqXpfdVbsUH12iuIayHq8XZ6tPrB+Cz1Q18
jk/yidQAwXjBeVl81v0iBukviEHyKS2EfRpi+dbm206xwnvHs5ynJX6nxyuf
8Sk+CgeoSdTC4Z/54ZgGOWfxiuf6JTnXr53RJ7bpI7oX8Ixr05juPdapOV1n
mAe2h18yg0X/Hh8RHUlbc8LyeC66Ez0suU8fmHYPb7uW+SvDMwlyLlb2p8Ol
Zq/RwKiXM0+a/7YzTvWvYYKcZa/2EWv1r+V0+waOYVvxPzWba2/OK+yvtuMb
qQ1hLDEitSDtuf4UzCVGiCP0cR47ZdEShA+RK9s5tOIQLOX92n0V7fuKWfAg
//beXk884/NwGW5Sbes+8LvoT9jHi8O2xzc4zxlq7p1okodnBqp93BcwsDoB
xvUZon/2WX1235P34U/H4orPa1vxwTWaOMMXso9cD8U9oh/Cx/TIxvY/ji21
CT2J2gCnLRfTSekN87MtaWguxQrvHc/kQzkQzxdNl9pBXBPj9Hf1+nA66l59
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
148pvLc9HxQPcTg4kcymF7/wJvgb+TZz0uA+vEzhvcPYFvAevZF7l/YJH0Kf
ZN+hPq77HF7jG/ygrQsyizYzki34r53XSNuXPRf2NuJXLHEly15HOM/sdlyM
Pbd4FGdO4aLVJ/CoHEsfBZ/K7XL9UJ93ynZqsa7V84lx6lrYi3/QJ+Df1Ld4
a3N6YL/sNZ+yPNZzPNfMbj5ohqm4B+uJqXiSVit6ynZq/rdl47P4Hzy1WKuf
41wiNTdttpgvltc8lu35oFgkDtK35LxTud2eS7oUGE4/zV60cDc5l77w3o2z
LeA9dYCchkdzL+uh2oeop0W7yweC64bn0Lcadz9XKwTrZS4yDk9vzGvSENBT
WbSBll4CXzRXJecw89NnPvOZfe6WV9Wj8nl7NvMezsQ4pJ1arGuve/Zft+c7
85ecByP+6fnS2eHkpiyP9RzP9RqtD47t+y7/Oy3/27LxY3EfVw0L6Pc5g9IM
Sxov/Rw1feG97fmg+CfuiV8wn9oXj2t2gVyLXzHfTM/NWUSucXT2hfdunG0B
78FV6jx7tdR5zsqj38W9wXzufbXAxRb/oAXVt7XXwvkXYgf/yrm29oDgDy09
BMvcNOcww3pma/DP5Njgu7KLW8W6siWt/G87Jq7q69ijBwvopdCn2tNOxyN2
44DU63KAszHtm6MBgxue9KQn9Xw3Xc2arHzwBWdh5dyE9O/MVtM/w7XozTsL
S9/NNdaHMw8DBvR3s0bxNGYSmLWr10GrXHZh2wLe4xPue31TmM/eXFon/X4Y
zf1/5ZVXXnTxDfUfzhhvZ3YFHRRs95jHPKbvFePwLPVClrMYYT17iegN1Izh
UqpPNt0q1pUtaeV/2zE1NP5HbU3rqt6X02n51N9it1ieOh335wxVe949jo5V
PximWJOVD75gH1s0za4zLRRtlN49XH/ttdf2s3TptswTlbtp+2B6f3dmLh29
vhvtH/84pbMhz2tbwHvDeSzm9bin1QPub/j+4Q9/+EWX/RWPfvSje427ecj2
WsCO+sRwpFllzuvIUlda9mHg9eitcI16aKdyBtohrWJd2ZJW/rcdE1fb/U1i
f/Y3ye9iN3yn7pcD1Og4PXuWzGe1txdvBFOsycoHu+tpmvV1XWfcHJ0U3ZZz
FPTjYXt52jWG8S28jL/jcPEzuBjYngZwbdh+jbYFvDc8XyNn5dKou9ZmW8CA
U5YaAoYzg9ZzxRB6ea9nljO9e7vweWbpwZtiD6yXvY617/bSrGJd2ZJW/rcd
y+xKWEBPFnYL7qPpE7vFcnW5/9cPzHx7j5Mr5H81+ZqsfPCGc+mH+3XxuXI7
bkeedo3lbnnejA5/hwvDw5ziWUHntS3gvbJ9WMW6siWt/K9saSsfLFvSCu+V
zWUV68qWtPK/sqWtfLBsSSu8VzaXVawrW9LK/8qWtvLBsiWt8F7ZXFaxrmxJ
K/8rW9rKB8uWtMJ7ZXNZxbqyJa38r2xpKx8sW9IK75XNZRXrypa08r+ypa18
sGxJK7xXNpdVrCtb0sr/ypa28sGyJa3wXtlcVrGubEkr/ytb2soHy5a0wntl
c1nFurIlrfyvbGkrHyxb0grvlc1lFevKlrTyv7KlrXywbEkrvFc2l1WsK1vS
yv/KlrbywbIlrfBe2VxWsa5sSSv/K1vaygfLlrRj471atcbWoXytfLDWeVb5
X62lV/lgrSVX+VmtuVbFulpLrvK/Wkuv8sFaS67ys1pzrYp1tZZc5X+1ll7l
g7WWXMf2v1q1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1
atWqVatWrVq1atWqVatWrVq1atWqVatWrVq1jrn+H5VA95I=
     "], {{0, 159}, {636, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSizeRaw->{636, 159},
   PlotRange->{{0, 636}, {0, 159}}]], "Input"],
 "\n\nCada imagen se transforma en un vector de entrada de 784 neuronas, y el \
resultado es un vector de 10 neuronas donde la activaci\[OAcute]n en la \
neurona N representa que el d\[IAcute]gito N fue encontrado. Por ejemplo, si \
se encuentra un 5 el resultado en la capa de salida ser\[AAcute] (0, 0, 0, 0, \
1, 0, 0, 0, 0). Para fines pr\[AAcute]cticos se reducir\[AAcute] el tiempo de \
c\[OAcute]mputo tratando de clasificar s\[OAcute]lo dos d\[IAcute]gitos: 0 y \
1."
}], "Text",
 CellChangeTimes->{{3.660513958893536*^9, 3.660513985477292*^9}, {
  3.6605140622842007`*^9, 3.66051412801152*^9}, {3.660514310688868*^9, 
  3.6605143166810493`*^9}, {3.660514526078466*^9, 3.660514695708764*^9}, {
  3.660514741524631*^9, 3.66051475894036*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DigitToOutput", "[", "index_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "out", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"out", "[", 
         RowBox[{"[", 
          RowBox[{"index", "+", "1"}], "]"}], "]"}], " ", "=", " ", "1"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "out", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OutputToDigit", "[", "out_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "pos", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pos", " ", "=", " ", 
        RowBox[{"Position", "[", 
         RowBox[{"out", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "pos", "]"}], " ", "\[Equal]", " ", "1"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "Return", "[", "\"\<Clasificaci\[OAcute]n erronea\>\"", "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ScoreResults", "[", "td_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "score"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"score", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"d", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", "\[Equal]", " ", 
             RowBox[{"Round", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"FeedForward", "[", 
                 RowBox[{"d", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "1"}], "]"}], 
              "]"}]}], ",", " ", 
            RowBox[{"score", "++"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "td"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Pruebas superadas: \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "score", "]"}], " ", "<>", " ", 
         "\"\< de \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "td", "]"}], "]"}], " ", "<>", " ", 
         "\"\<.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Conjunto", " ", "de", " ", 
    RowBox[{"entrenamiento", ".", " ", "Para"}], " ", "disminuir", " ", "el", 
    " ", "tiempo", " ", "de", " ", "evaluaci\[OAcute]n", " ", "la", " ", 
    "red", " ", "s\[OAcute]lo", " ", "se", " ", "entrenar\[AAcute]", " ", 
    "para", " ", "reconocer", " ", "unos", " ", "y", " ", 
    RowBox[{"ceros", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"0", ":", " ", 
     RowBox[{"1", "-", "5923"}]}], ",", " ", 
    RowBox[{"1", ":", " ", 
     RowBox[{"5924", "-", "12665"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", "=", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
      "\"\<TrainingData\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "12665"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"td", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", 
         RowBox[{
          RowBox[{"td", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"DigitToOutput", "[", 
        RowBox[{
         RowBox[{"td", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "td", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"td", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
    RowBox[{"1", "-", 
     RowBox[{"td", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Conjunto", " ", "de", " ", 
    RowBox[{"prueba", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"0", ":", " ", 
     RowBox[{"1", "-", "980"}]}], ",", " ", 
    RowBox[{"1", ":", " ", 
     RowBox[{"981", "-", "2115"}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", " ", "=", " ", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MNIST\>\""}], "}"}], ",", 
      "\"\<TestData\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2115"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testdata", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"ImageData", "[", 
         RowBox[{
          RowBox[{"testdata", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"DigitToOutput", "[", 
        RowBox[{
         RowBox[{"testdata", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "testdata", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"testdata", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
    RowBox[{"1", "-", 
     RowBox[{"testdata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Inicio", " ", "del", " ", "entrenamiento", " ", "y", " ", 
    RowBox[{"pruebas", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Initialize", "[", 
    RowBox[{"{", 
     RowBox[{"784", ",", "30", ",", "2"}], "}"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNetworkAndMonitor", "[", 
   RowBox[{"td", ",", "10", ",", "2", ",", "10", ",", "500"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ScoreResults", "[", "testdata", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ShowInfo", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6599682415630026`*^9, 3.659968249258594*^9}, {
   3.659968357706737*^9, 3.65996836109733*^9}, {3.6599685581643324`*^9, 
   3.659968561086195*^9}, {3.6599686517652073`*^9, 3.659968653858917*^9}, {
   3.659968956842544*^9, 3.659968991205764*^9}, {3.6599691851088686`*^9, 
   3.6599691852088757`*^9}, {3.6599693089291325`*^9, 3.659969324381196*^9}, {
   3.6599694151756415`*^9, 3.659969419641859*^9}, {3.6599713547836246`*^9, 
   3.659971372895015*^9}, {3.659972343768929*^9, 3.659972344993252*^9}, {
   3.659974633773177*^9, 3.659974634003304*^9}, {3.6601766760338707`*^9, 
   3.6601766901854935`*^9}, {3.660176793716239*^9, 3.660176863561284*^9}, {
   3.6601784092872643`*^9, 3.660178410084091*^9}, {3.6604356519716024`*^9, 
   3.6604356578013153`*^9}, 3.660438536985819*^9, {3.6604993835844*^9, 
   3.660499389344206*^9}, {3.660499453073731*^9, 3.6604994614679937`*^9}, {
   3.660505818824648*^9, 3.660505838636465*^9}, {3.66050799587599*^9, 
   3.660507999539378*^9}, {3.660510251882229*^9, 3.66051026826342*^9}, {
   3.660510472900786*^9, 3.66051052704708*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1574, 863},
WindowMargins->{{86, Automatic}, {Automatic, 50}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 106, 1, 102, "Title"],
Cell[CellGroupData[{
Cell[711, 27, 107, 1, 73, "Chapter"],
Cell[821, 30, 66587, 1146, 626, "Text"],
Cell[CellGroupData[{
Cell[67433, 1180, 460, 11, 35, "Input"],
Cell[67896, 1193, 2847, 60, 250, "Output"]
}, Open  ]],
Cell[70758, 1256, 4722, 134, 632, "Text"],
Cell[CellGroupData[{
Cell[75505, 1394, 301, 8, 35, "ItemNumbered"],
Cell[75809, 1404, 687, 23, 37, "ItemNumbered"],
Cell[76499, 1429, 675, 22, 37, "ItemNumbered"],
Cell[77177, 1453, 761, 23, 41, "ItemNumbered"],
Cell[77941, 1478, 842, 26, 51, "ItemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78832, 1510, 106, 1, 73, "Chapter"],
Cell[78941, 1513, 202, 4, 35, "Text"],
Cell[79146, 1519, 40941, 876, 4097, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[120112, 2399, 136, 1, 69, "Subchapter"],
Cell[120251, 2402, 334, 6, 35, "Text"],
Cell[CellGroupData[{
Cell[120610, 2412, 3751, 90, 286, "Input"],
Cell[124364, 2504, 2828, 38, 25, "Print"],
Cell[127195, 2544, 2831, 53, 125, "Output"],
Cell[CellGroupData[{
Cell[130051, 2601, 2849, 38, 25, "Print"],
Cell[132903, 2641, 2861, 39, 25, "Print"],
Cell[135767, 2682, 2860, 39, 25, "Print"],
Cell[138630, 2723, 2859, 39, 25, "Print"],
Cell[141492, 2764, 2859, 39, 25, "Print"],
Cell[144354, 2805, 2844, 38, 25, "Print"],
Cell[147201, 2845, 2863, 39, 25, "Print"],
Cell[150067, 2886, 2859, 39, 25, "Print"],
Cell[152929, 2927, 2861, 39, 25, "Print"],
Cell[155793, 2968, 2860, 39, 25, "Print"],
Cell[158656, 3009, 29809, 494, 251, "Print"]
}, Open  ]]
}, Open  ]],
Cell[188492, 3507, 355, 10, 35, "Text"],
Cell[CellGroupData[{
Cell[188872, 3521, 1714, 50, 86, "Input"],
Cell[190589, 3573, 88837, 1601, 306, "Output"]
}, Open  ]],
Cell[279441, 5177, 281, 5, 35, "Text"],
Cell[CellGroupData[{
Cell[279747, 5186, 3840, 105, 311, "Input"],
Cell[283590, 5293, 610, 9, 25, "Print"],
Cell[284203, 5304, 1157, 31, 92, "Output"],
Cell[CellGroupData[{
Cell[285385, 5339, 630, 9, 25, "Print"],
Cell[286018, 5350, 615, 9, 25, "Print"],
Cell[286636, 5361, 617, 9, 25, "Print"],
Cell[287256, 5372, 617, 9, 25, "Print"],
Cell[287876, 5383, 615, 9, 25, "Print"],
Cell[288494, 5394, 627, 9, 25, "Print"],
Cell[289124, 5405, 615, 9, 25, "Print"],
Cell[289742, 5416, 615, 9, 25, "Print"],
Cell[290360, 5427, 615, 9, 25, "Print"],
Cell[290978, 5438, 616, 9, 25, "Print"],
Cell[291597, 5449, 27549, 464, 251, "Print"]
}, Open  ]],
Cell[319161, 5916, 177153, 2894, 325, 134892, 2201, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[496363, 8816, 139, 1, 69, "Subchapter"],
Cell[496505, 8819, 598, 10, 59, "Text"],
Cell[CellGroupData[{
Cell[497128, 8833, 1715, 51, 186, "Input"],
Cell[498846, 8886, 25284, 467, 252, "Output"],
Cell[524133, 9355, 8533, 153, 254, "Print"]
}, Open  ]],
Cell[532681, 9511, 415, 7, 59, "Text"],
Cell[CellGroupData[{
Cell[533121, 9522, 1977, 58, 261, "Input"],
Cell[535101, 9582, 1384, 35, 247, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[536534, 9623, 142, 1, 69, "Subchapter"],
Cell[536679, 9626, 402, 7, 59, "Text"],
Cell[CellGroupData[{
Cell[537106, 9637, 2709, 67, 261, "Input"],
Cell[539818, 9706, 3679, 78, 264, "Output"],
Cell[543500, 9786, 3676, 78, 264, "Output"],
Cell[547179, 9866, 12691, 226, 264, 3582, 76, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[559885, 10095, 954, 15, 107, "Text"],
Cell[560842, 10112, 24501, 552, 3411, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585380, 10669, 133, 1, 69, "Subchapter"],
Cell[585516, 10672, 37487, 618, 314, "Text"],
Cell[623006, 11292, 8745, 224, 1011, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
