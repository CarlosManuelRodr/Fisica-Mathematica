(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    571675,      10912]
NotebookOptionsPosition[    562460,      10753]
NotebookOutlinePosition[    562794,      10768]
CellTagsIndexPosition[    562751,      10765]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Implementaci\[OAcute]n del algoritmo CAIM", "Title",
 CellChangeTimes->{{3.760194758403126*^9, 3.760194758894359*^9}, {
  3.76151003564357*^9, 
  3.761510039963852*^9}},ExpressionUUID->"be685bdb-1f1f-4c79-a12d-\
5fe400b74f15"],

Cell[CellGroupData[{

Cell["Autor: Carlos Manuel Rodr\[IAcute]guez Mart\[IAcute]nez", "Subsection",
 CellChangeTimes->{{3.76151002720716*^9, 
  3.761510033609449*^9}},ExpressionUUID->"23213e5f-0ea1-404e-aaac-\
3394d71060d9"],

Cell["\<\
Referencia: CAIM discretization algorithm, L.A. Kurgan ; K.J. Cios
DOI: 10.1109/TKDE.2004.1269594

El objetivo del algoritmo CAIM es encontrar el m\[IAcute]nimo n\[UAcute]mero \
de intervalos discretos que minimiza la p\[EAcute]rdida de interdependencia \
entre atributo y clase.\
\>", "Text",
 CellChangeTimes->{{3.761509981387197*^9, 3.761510020814966*^9}, {
  3.761510102463891*^9, 
  3.761510134487897*^9}},ExpressionUUID->"08dca9f4-81dc-4c48-a1af-\
5fe56187d51b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importar base de datos", "Subchapter",
 CellChangeTimes->{{3.760881814969824*^9, 
  3.760881820541356*^9}},ExpressionUUID->"2e700662-c47e-4335-ade0-\
f14fe57efaad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"SemanticImport", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<iris.csv\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.760190296316847*^9, 3.760190308042815*^9}, {
  3.760190344862956*^9, 3.760190362545817*^9}, {3.7601904970498877`*^9, 
  3.760190501730982*^9}, {3.761658575115655*^9, 3.7616585754495087`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0a27381d-33a1-4073-a16b-29d3728120dd"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 150, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Sepal length", "Sepal width", "Petal length", "Petal width", 
            "Class"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Iris-setosa", "Iris-versicolor", "Iris-virginica"]]}], 150], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Sepal length"} -> 1, {All, "Sepal width"} -> 
           1, {All, "Petal length"} -> 1, {All, "Petal width"} -> 
           1, {All, "Class"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Sepal length" -> TypeSystem`PackageScope`AtomShape[60], 
              "Sepal width" -> TypeSystem`PackageScope`AtomShape[60], 
              "Petal length" -> TypeSystem`PackageScope`AtomShape[60], 
              "Petal width" -> TypeSystem`PackageScope`AtomShape[60], "Class" -> 
              TypeSystem`PackageScope`AtomShape[135.]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[2022322153], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Sepal length", "Sepal width", "Petal length", "Petal width", 
            "Class"}, {
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Iris-setosa", "Iris-versicolor", "Iris-virginica"]]}], 150], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[2022322153]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sepal length\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sepal length\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1933690747][{All, "Sepal length"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[All, "Sepal length"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sepal width\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sepal width\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1933690747][{All, "Sepal width"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[All, "Sepal width"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Petal length\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Petal length\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1933690747][{All, "Petal length"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[All, "Petal length"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Petal width\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Petal width\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1933690747][{All, "Petal width"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[All, "Petal width"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Class\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Class\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1933690747][{All, "Class"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[All, "Class"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[1, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[1, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[1, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[1, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[1, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[2, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[2, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[2, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[2, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[2, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[3, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[3, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[3, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[3, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[3, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[4, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[4, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[4, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[4, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[4, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[5, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[5, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[5, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[5, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[5, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[6, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[6, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[6, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[6, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[6, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[7, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[7, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[7, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[7, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[7, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[8, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[8, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[8, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[8, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[8, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[9, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[9, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[9, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[9, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[9, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[10, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[10, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[10, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[10, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[10, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[11, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[11, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[11, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[11, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[11, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[12, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747]
                 [
                  GeneralUtilities`Slice[12, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.6"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[12, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[12, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[12, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[13, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[13, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[13, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[13, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[13, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["4.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[14, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[14, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[14, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[14, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[14, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[15, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[15, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[15, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[15, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[15, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[16, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["4.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[16, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[16, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[16, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[16, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[17, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.9"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[17, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[17, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[17, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[17, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[18, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[18, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.4"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[18, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[18, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[18, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[19, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[19, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.7"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[19, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[19, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[19, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["5.1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[20, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["3.8"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747]
                 [
                  GeneralUtilities`Slice[20, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1.5"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[20, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0.3"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[20, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
                  GeneralUtilities`Slice[20, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    150 (-20), {1, 150 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 150 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    150, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 150 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    150 20, {1, 150 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    150 (-20), {1, 150 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 150 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    150, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 150 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    150 20, {1, 150 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1933690747},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1933690747},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1933690747},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1933690747},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1933690747},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1933690747][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1933690747]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1933690747][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {507., {291., 298.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.7601905021741657`*^9, 3.760190564042327*^9}, 
   3.7602304774954033`*^9, 3.760395806331423*^9, 3.7604463038429213`*^9, 
   3.7604512485727663`*^9, 3.760879684510954*^9, 3.7615104568422422`*^9, {
   3.7616553627561207`*^9, 3.761655363437662*^9}, {3.761658579298408*^9, 
   3.7616585797992*^9}, {3.762087214828971*^9, 3.7620872151785803`*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"5640e947-4972-4268-95fe-42649946efeb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["C\[AAcute]lculo de matriz quanta", "Subchapter",
 CellChangeTimes->{{3.7608818813415403`*^9, 
  3.760881891598*^9}},ExpressionUUID->"74658926-3095-4944-86f3-0713684202c0"],

Cell["\<\
El algoritmo hace uso de un esquema de discretizaci\[OAcute]n D, con el cual \
se calcular la matriz Quanta, que es necesaria para obtener el valor CAIM que \
es la m\[EAcute]trica que usa el algoritmo para determinar la \
interdependencia entre los atributos y la clase.\
\>", "Text",
 CellChangeTimes->{{3.761606698210952*^9, 
  3.761606791612776*^9}},ExpressionUUID->"40530c0d-7595-4abc-b19c-\
7dc004cfe309"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/HqarTTRRBNNNNFEE3/T/wPG7+oU
    "], {{0, 81}, {471, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{389., Automatic},
  ImageSizeRaw->{471, 81},
  PlotRange->{{0, 471}, {0, 81}}]], "Input",ExpressionUUID->"009e2ed6-46e5-\
4fad-b648-eb5990b3eccd"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
kyZNmgojaRysSZMmTZo0adKkqTCSxsGaNGnSpEmTJk2aCiNpHKxJkyZNmjRp
0qSpMJLGwZo0adKkSZMmTZoKI2kcrEmTJk2aNGnSpKkwksbBmjRp0qRJkyZN
mgojaRysSZMmTZo0adKkqTCSxsGaNGnSpEmTJk2aCiNpHKxJkyZNmjRp0qSp
MFI4OPh///d/4fP5An7yCZbe7vdQ6dXvus1nl94pb7j1stbRC4Vbr1B9HCx9
uG3zWk5O1SucdvybeCcS9dK8E/l2hCrn38472ZFTXsqxS1/QeScv5VRB5x0v
9XJTRzflaN4JD+fkxBh54R15L48TXg0HB/Nb6enpAT/V7wcrO1g6axr1u27z
2aV3yhtuvax1DJXPa5lO5eR032V3jHJzTAsT70SiXpp3It+Ows472ZFThZ13
8lJOFXTe8VKv/DRG+bVekZJTuTVGXnhH3stDvCp/yy4OtmuntTxr2Xa/h0rP
n3Z4O1g+u/ROecOtl7WOofJ5LdOpnJzuu+yOUW6OaWHinUjUS/NO5NtR2Hkn
O3KqsPNOXsqpgs47XuqVn8Yov9YrUnIqt8bIK+84YehI2IPle9Zy/s3rHbv0
bvLl5Honkn2X3THKzTEtTLwTiXpp3ol8Owo772RHThV23slLOVXQecdLvfLT
GOXXekVKTuXWGEWCd/hkFwefP38e//M//xPwMzU1FWlpabaP+rdg6axp+FP9
3U0+u/ROecOtl7WOofJ5LdOpnJzuu+yOUW6OaWHinUjUS/NO5NtR2HknO3Kq
sPNOXsqpgs47XuqVn8Yov9YrUnIqt8bIC+8IPpWH/6fdOBI4+J9//sEjjzyC
Zs2aoXHjxrjqqqvQtGlTx6dJkya2v4dKz5/q727y2aV3yhtuvax1DJXPa5lO
5eR032V3jMKpF/nH+pCfrrjiCvMnH3knv/NxKvffyDuRqNe/kXfCHdNItaOw
80525FRh5528lFMFnXes6UWPyE9JR33RvHlz8z1/l3xuMIvmnfDloVfe8Vqm
W56W9jZq1Mh8unbtioMHD5p4OBI4+OzZs+jcuTNKly6Nli1bokWLFubPVq1a
2T7q34Kls6bhT/V3N/ns0jvlDbde1jqGyue1TKdycrrvsjtG4dSLcsr6tG7d
2nzi4+NRpUoVMy3XXHz4d+E3u3L/jbwTiXr9G3kn3DGNVDsKO+9kR04Vdt7J
SzlV0HknVL2oO9q2bYv69esjOjra/Mm/U2/Io3kn8nIqXN7xWqYT7xAbCE64
+uqrTSzMn9dddx0qVqyIBg0aYO/evaadWPwjsmsP7t69O5KSknDo0CFbfK2S
+rdg6axpVD8Ot/ns0jvlDbde1jp6oXDrZefTEixvOH0Xql6hygmnXuLXoz7k
p127dqFWrVp48skn8ffffwf4/4RTjpv65VfeiUS9/o284yZfTrYjVDn/dt7J
jpzyUo5d+oLOO3kppwo670gaVWfIGSnqjpSUFPP/M2fOxMUXX4zly5eb/1f9
OPl/t+Vo3gkf50RC1rlJY4clOMbEvLTb9u3b19wD2L9/vzn+kkYoXBzcpUsX
c8115MiRAN6ye9S/BUtnTSM+HV7y2aV3yhtuvax1DJXPa5lO5eR032V3jCJR
L/n7vn37TBk2dOhQ/L//9/8C8ql8Xhh4JxL1Kgy843ZMI9WOws472ZFThZ13
8lJOFXTeUdMItlPPSxGP8Jk+fTrKlCmDZcuWZb5TH8074Y1ppHnHa5lOvGPF
BXwnY33vvfeiYcOG+O2338y/Sbrs4OBz586ZvhaJiYn4v//3/4Y8q/dvOQ+Z
nbO3XsqM1Fna3D6zGk697Pica7hff/3VxMHDhg0z13PCzzKX+RQW3snJc9sF
mXfCHdNItaOw80525FRh5528lFMFnXeC1Ut0Cn9/8803UbZsWXz00UeZukX+
7qQ/NO+EX69wecdrmcF4R8UUghOIJ3r37o3LL7/ctK+pPJAdHEz73K233mra
g4mDpU5OpP4tWDprGvW7bvPZpXfKG269rHX0QuHWK1QfB0sfbtu8lhNOvaz8
Les6+vFcdNFFGDJkiLn/kJ16FXTeiUS9/o284yZfdtohj9gVZI0mspX7r/I3
9b3Kx6HqIrpZ8kte0eVOefOSd/h/dd3K/8uejVU/ua2f2zYVFN7J7Xp51SVu
KCflTiR1nMpvKh6iX0RCQoJpD1bTaN75d/pF2PGFyG/iYNqD/8//+T8B6wGh
7OJg+kWEat+/ZZyzI1O8lBlJGeG2jnmlj9S8ggH4TnAw/SI0Ds45feRUTkHg
HTf5stMOq22BeJd7YdyfEOzKh/KQ7wQHq5g2VF3UPT3G/eH/rbF97PLmJe9I
30g7jx8/rnFwAdJx+UHuRErHOX2D/Ddr1iwTB3/88ccBPKl5J2d0nFMdvXwj
0rzDd5Sld999d6ZfhJ1s0jjYe72sdfRCuSkjcnsuhlMvNa/GwcHz5oQ+ciqn
IPCOm3zZaYdgUsHDPK85Y8YMDB48GPfddx8GDBiAhx56CAMHDsQrr7yCAwcO
mDhZxbah6sK0EvfS6vMWrN15yTus359//onPP/8cTz31lHn+/t1339U42Ob3
3KqXV13ihnJS7kRKxzl9Q+Ng9/WKlI5zqqOXb0Sad0SOaxycP7CMlzIjJSNy
ey6GUy81r8bBwfPmhD5yKqcg8I6bfNlph/UcBv0gyJfz5883ZWpsbCyqV6+O
xYsXY/fu3fjv//5vEzcT1wp+DlUX+T55XPWvyM84mP///fffMWbMGBMDR0VF
mX2icXDW33OrXl51iRvKSbkTKR3n9A2Ng93XK1I6zqmOXr4Rad4ROa5xcP7A
Ml7KjJSMyO25GE691LwaBwfPmxP6yKmcgsA7bvJlpx3yqP7B/P3kyZPo0aMH
YmJizLiVf/zxR8D9RV7swfydfgXff/99pr9xfsfBMk/Z1tdff91cD8ybN0/j
YJvfc6teXnWJG8pJuRMpHef0DY2D3dcrUjrOqY5evhFp3uE7jYODlxmJMQqX
P7zWKzfmbqh6hSonnHqpeTUODp43J/SRUzkFgXfc5MtuO1S9Kc+pU6fQq1cv
Ewdfc801Jo5V7cbWM2+Ul+LzIPd/EkPyPX9/6623TD4nDmZe+lao35F0qj+y
nNlTfzKNlCn+GUzLR/XXUP2YObfUs35WXxDxA1b9gVX/jcmTJ5s4+J133slM
Hw7W8DpGBYF3crNeXnWJG8pJuRMpHef0DY2D3dcrUjrOqY5evhFp3uE7jYOD
l5mbWMZLmZGSEQUBy6h5NQ4Onjcn9JFTOQWBd9zki3Q7+P706dOZOPjaa6/N
jKEuMSTkzBsf4k/+JHYWWzHP1PEd5Sh1dL169cx76sWngg+/I/iX3/jrr7/M
h/OD7wS78ltMxzkiZfGhLzP9NFie3Cug/s70goUFW/ORdghO/6//+i/T/i31
VdvI54033kBcXJyJg+3OYUeiz+3SF0Teycl6edUlbign5U6kdJzTNzQOdl+v
SOk4pzp6+UakeYfvNA4OXmZuYhkvZUZKRhQELKPm1Tg4eN6c0EdO5RQE3nGT
L9Lt4HsrDiZOJDbkzx9++AHvv/8+JkyYgAMHDuCLL74w70Ts0KGD+Y5+tWLb
XbdunXkHaJEiRXD99debtlXGOiV+FRz8n//5n1iwYIF5Jo+ynOfSvvvuO3NO
MB3xLmX7119/jZEjR+LHH380fXVZv/Hjx5v/X7hwIUaPHo1Ro0Zh7ty5SE5O
zrQ7s34vvviiec5v+/bt5neJ2VetWoWXX37ZPBPYv39/jB07Fjt37jRxt9h9
NQ7OWo7X9Hkhp/KD3ImUjnP6hsbB7usVKR3nVEcv34g07/CdxsHBy8xNLOOl
zEjJiIKAZdS8GgcHz5sT+sipnILAO27yRbodfG/FwSdOnDD59ttvv8XDDz9s
3v9Cv+EXXnjB/P+jjz5qpitfvjyeeeaZTLvqtm3bTHwbHx9v+hsTyxL38vv8
3pIlS8z7iohViWfffvtt03bMs2nr1683sTLvjL3ttttQu3Zt1KlTB0888QTa
tWtnzh3Gjec3P/nkE1StWtXEBLNnzzbxuvhG0C+5VatW6NevnxkDgnNt4sSJ
aN++vZmPdVyzZg2uvvpqU+Yz/qa2BzuX4zV9Xsip/CB3IqXjnL6hcbD7ekVK
xznV0cs3Is07fKdxcPAycxPLeCkzUjKiIGAZNa/GwcHz5oQ+ciqnIPCOm3yR
bgffW3HwsWPHTJnIv/3000+45JJLTFzKWGJMS7y5du1aEx9XqVLFlJnip0Ac
ye8w9pr45fJbjD9xyy234L333sv02+V7xmhg+rvuusu059J2S6xbuXJlVKhQ
wTy3Rjy7detWfPbZZ+bv9G248847Tbw9YsQIs07EssyfnJyMvn374ptvvjHL
p726efPmaNOmjXn+T/wyHn/8cVSsWNG0J4u/sMbBWcvxmj4v5FR+kDuR0nFO
39A42H29IqXjnOro5RuR5h2+0zg4eJm5iWW8lBkpGVEQsIyaV+Pg4HlzQh85
lVMQeMdNvki3g++tOJjn5MRXgPiVWJf20wMHDmSeNyO+rF+/vukDQf8COa9G
Xwl+Z9CgQZln64hR6atAuU0czDi9K1euNB/6PvCuWJ7P4zdZH/6sUaMGatWq
ZeJZFQvwIb5l3mrVqqFp06b45ZdfMn0zPv30U9P+S99jlsu2EPM+++yzme2i
L8Rjjz1mlsvy3diDpfxI9Lld+oLIOzlZL6+6xA3lpNyJlI5z+obGwe7rFSkd
51RHL98INqbq2Fq/7zSmfKdxcPAycxPLeCkzUjKiIGAZNa/GwcHz5oQ+ciqn
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
N3Wvgu3hWoXrGMaPpx+3xD8Rnx/pO/XsnOSXcRV7MO9ElVh5cr5b/H/pB841
E8eU/MZyiYOFxxi7k/OHGIF2ZPpKCP/LT8bPI19xzycxMdFcb0m8YjnHLljY
a59nZ4y8pg9mD5Z7ubhWpD8V/SMYO4IP5wkf/s736iPvJK36LtjjlN4pr5s0
odK7yeeU3mu9gqVX+1X9f3ba5qav+fDcMuPUc13In6Han90xlXZKubSdcK8x
nHZo3glMY52b2eUd+h/ykXGi3LTrc7ft99J3vM+aZfIn7Yrkl3DbkdM87XVM
8xvvCL8Ek+tO9WJ66gc+/J3vRZ4wfin1qJdzcsRmjK1LLEc8TJ0s+lS9k0Z8
L1QMIP8nZiAOpk/s4MGDA+K0SHraa2n3lHND1Of0jRXcQFsZ/QhYD2J8YmVi
ODVeDDEzfS6JDYn3iTuIBQSzSOwZiR1jZw+WOpPknBxjxVlxsNSbWJt+D4wp
R3uulCN9QDxIOx3t8Ox35mVccfYF2ylYSeLoiK1b7l+g/zNxD3EwbYEqfqeN
mThdcLC1HRoHX8jnFgerPvUcR+4tcE0mMUPE/ir7FNY1oayxuB8gMVToy0sc
LPdoCG/Qp4HfZ+x68hrXa5wnXO8RB8t9hXKmjnZe7heQd4jLObfF/4c4mHia
azf64rDOvLeG+y+0DUu9Zb567fPsjJHX9MFwMOcY1/aUaerelDqWdk9e+t25
qZfd3PXSpnDrldN957Ucq30iGN9Eekwj1Y7CzjtO9fLad07lBGu323IixTuh
8uTmXMvumBZ03glWL/kG9SB1rpM92Cp7RPdQd3LtQzxIvbp+/XpTNzOt6gus
xuZWbaKCO8U/mDZe9bwa8RL9H4jh6VdAbMBzQxKnSuJGMC1xAnU//SBpo+PZ
IaYl5hAcSH9a4mneR8lv0A5OzEwcrcZmdMM7jPsg8SLs7MEk7m3Tn5eYkrZb
1WeC6ekLQdsc97o//PBDsx2MRc668Syc1EHwM+sp613ahrkOYZwP2sCIg9U6
Mh4A8ZXGwaHz2aVX55D8X/X95hjSJ/uyyy4z+U3sueqZM6tfufjFqD7CEi+C
Z+7El4E8yz0L4lria8HN9OHnHOWaj7wsa07uebBs+lgwbgSxMvdwyVOsD//G
ucO0XGfxjkfOV9qGebeHnJ0Lp++yO0Ze01vzqusL4mCugykvrHHTgj3qvovT
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
xMMqRmQ67qvSzkfe4XqJfjT0i5Cz11b9b9du4SmrTnPia6e2WddGUmfWa/36
9SaP0T+SMcxpDybWUe27ah1UvS72YPpDWuVlOH1uTWMnR6yPXXo7WR9sjMOp
l50uIIblONOvUdXdMgeFT7iepT8kfWQ4p+nvxHNL9MHk/619btUJVlJ5Q+SB
0xyxPqockG/JuUmxX1L2cB+D+2bc86avO/3Cucdu/YbKs9b+Im7mGoE+Qpwf
1ro59bUTX4SLg1V5rcoONQaTk01D0trNQ2vb7XjROuflpyrH1b+p+tLuW071
taa1fsNO/tvJHXkna1trn0kd5f8qdrWTX3aPtUwrL1l52m5MNQ4OXma49bLW
0QuFW69gMtsub7hy3Gv67NZLzZvfcDD5mzhY5re6Tic+YIx0nlOk/W/KlCnm
WQfaQnjegz5dVl8K+YZ6FtxpHavWU9VlLJu+XDxrTN8Nxs7huTiWTX8MxnVk
/HE7eSxlWdfsrCf3axnDht8rKLxjTWM3prmBg/kwPgwxAGP+qLEWVfsS10rk
K/I07aS8t5fnS3hemvqfODiY3rf2hcpTbvSs+g11vSzrOjkXR19xnsVl3Bqe
1eE84Plt+gcTB9vZq619zfNPKg520lWR0g12j116a58Ek8HhzAG777O/KCMY
H4hrVHXeyb4MH55v4nk43i9LXxSuTekXzLUtcTBt8Wrfu8XB6lyX36173qGw
knUdTn9exj/ineSUNzzj1K1bNzM+KP18iedVPnMad/k27cHEwdwXySt7cLAx
9coLuS0/s1OvYHPAS72c6ujlG+HWy2lMhQc1DtY4OLfmYjj1UvPmVxxs3dOS
mOacAxK/hX77Y8aMMTEN8SjtwSoOVvc/1bLUfU6n9qg6jD4bxCa0OxOzsK60
JTHWImNFMK6M6For1rHzcSuIONhOp9k9uYWDObbELowByhic6p6q7OPRvsp1
C2PKyH06XM/wbDlxDnEwYwnJ/qZdW619Id+3YhynflLrL+lVHwf6ZdIXiP6r
lOvkLZ4TJm+Qr+j3acVi1m/Kz/yKg72UE84csONNnrHiuFM20Haqrj2YlmPO
uJj0feC9SVxrUMdSthAHk69UHGy1Cwaro4pfVVlg3atymk9qm0SGcY1PHyz6
UpFPWH++Y8wBxgqjPVj8IjQO1jjYyzfCrZfTmAoPahyscXBuzcVw6qXmzY84
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
m3kUfcZ8hfVl9lBBF/wGz4Ah2JOm2B28i/cvWbIk8IfO+pb9kngOjBXZgymX
+sF7rA/Ap/CDr0vLHuhYiXh76AowL/M3cBO4DDvl8ssvHy7kPhiGCxqJeSwb
tNvhGbfwExgktq+25Z0YI4mfwVjMNcDn4HrvX77ByPAPdWT+IfyreCvEw/Vx
6FixKk/rPq4v+1qRDd/4xjdm/SLUf+Bx9srRh8xFwcxXX311mGswxqkTednj
xjoTYxTbPHNwymDvLetE9DnjgHUjLuqgmB9c9CfnHjsOpnx4Ax7UOpPi5bkM
0kVbwLesG5CHdQt4mX3A8AbrBmBk7uEN1rxoTzA2+ZFf+Imx/8/nYtjBGT91
z1V2foi/Bxxcja6u8FEejXXe0RYf5en1AQcPOHhUY7EpXbFu42LvO7gOu9Ko
cLBso5QHpt1kk02CDcbxltbYkfHsmUamc3GOGLoLex82PNa2waGkAbcpXhHv
Yg0dGzG2Hfb7Y/fDhoI9Dv0sWkSnflM2Y4+1SfwtKBefw5122inIesriYh8M
+lI2U3QReB1bpdub3X/2wAMPzJ7//OcHHbeQcLDkGDRCG3MAbOK0nXS1/CXY
w4NMOvnkk+fsk+N/dDu2S/4/++yz58S0q4qD8z5qU+ZC7CXDl4a2F938D73w
DLgBPAy+gQ/wLwCvgkWw38IP4GBibIF3oJP+A1eCfTjrmzma5me8H58G+UW4
j6tshfAJ8xz3g/V6i07KwbbMmQ+sabC3EnwGfoTHwFvwHlgL/oYe8KbmKb63
jnFLHLZR4GDVmTkldlPmFop36P2Kry1zRM57AEOSj7Gs/qO94S9wKJjS54qx
D00eT+fVA/6DLvqOd4v/5EfO3AmcyjoPvgVgQuQI7Uc+aKPtkSH4RdD2zIeo
A/0C3fwGb3IPLma+RV+JT3iH7ME+t8dvh/6lzznHQ3IqJYNoL+ZlrF2Ay3WO
MusOzI2I6wg92IEpm4s9E+BraOA55cCbzi/wPLyNzK9zrvKAgxcOPsqjsc47
+sTByF3kQqr/u8LBRZfzXwrL5KXPW58typdKn5e3KV2pcVf1akqX162vtmvb
R03SOw83wcFd8w7yH9sQ4wZdhA3OfRpkR1PMIHALthfu0Q/gXa21kgcMgU7i
PeRDB6KfsE2CO9AFlLd48eKAWaTbvG0cBwuna38281t0DeVhU3H/V/mF8n7O
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
f5aXN+bjuuPb3+Flch+/V3sa4BXJWObtcSz1uI9T+sN1g9qKeT/2b/yL4jR9
69ImuqcKDszj+1Q5eVgzXuerq0uqXE14p2r6PN2Y4gvNMz/2sY91bg+GV8HB
vJcYhuwPZa6Zd/n/ZWk9Dd9+XyVfKn1e3qZ0xTR6GuLi+MUz5sK6WKtJ3XOV
ldN327XtoyZ0ef3VJjznzAfWetljge1Ebel5UuW2qX/cXzyDHvUr96KvKn/F
9cN2g52C2AZc3PMsTlfGa0VlqtyYv5SHMtERqh/3fEMPvobQ43nL+rgJ79Ce
xFfgO9VOqbK7kgfOS+rTovFYpRzlF3/QhiqfdnXZ4PdK45fTFMsUp9/L1EXf
0ofiW9Xb27Js7MQ8J37QJX4VL4uf+VbfQgPfixYtCs/E53G5RbwT183p7lse
6nK+qFJO6v3ep7RDzNs+3vLerbZWG9K26gO++a2+J94a3/z2/uISb3jfxe0a
y4sq49vlt/OL00DZTodoVL24JBdT4yLVp7Eu1fi76KKLQtwT7MHESqnb7214
p6nuTcmGPL2gtEU8lydP8+pWh6frtF2dd1TVcXnlxLJRv/FdAK92GTeNdROd
XYXNDrwyXMPV1YVfLnxFvFLiefIbHwnia3I/Khr8m/PAmpYN3dSHi3rwHt7H
5WX0fUEHZUIH39Ci55zjoHtigPolOvtoY12j7tv4avtO2sjbSjxc5d0peqq0
h9L5lXpf3rM6dUvV1esrHhdfcYmn8t5Tp794N/6jo+CPvH5pwxsadxpz+q5T
hv+v/GpTf59kjJ7rGZfkGP2lZ12OO9VVMg4e4V7f4lONDdHhtCp/lXZReX5J
nmELJpYxZUt/qM4aK9N4xbpt0q6Yz7jgA+Lb4HPDpwscjK2ZGE/sWWVfDX7o
xGrJu/z/srSehm+/r5IvlT4vb1O6Yho9DWswRZenidOXldN327Xtoy7o4hn+
XNgKkFfwGb5kRe3VZf09H36aXKJJZcZ11n2qr/kvptf/899VaKvK0yleoy74
Fqo+PGMPOc/xVVR6/uNSuj7Gt9OJ/zLl860218X/XcsD3qn3U6bK9edlfeIX
bcpFW+lbdOt9ee3lZebRlMcLqbx67vUXPV63VP2K+tH5mv9UT6eHZxqr0F/E
81XK9LbkfcSczRtLdcZ1Fd5ROd4XTccAv2kXtT910r3GY9xe8SW+8HEdl6V3
eX84T6kO4gXVLU+m1pE7qXwua7h32inXZYDLyRRfp/Sj+tTllOQa7yeGIfZg
zspLycOq9ehK7pSVk9JxRRgij/9SY9bzuaxz+VqHp+u0XRPeKUpfBR+pftJr
xOSTf3BXOBjfSe2Tw/c9ta/XP/FemLKPx2vx+yr5Uunz8jalK0VjvHfD/XtS
fkzyYfJ4r0W0p3xaimhs0nap+zrlNKErzxdU8SI4P0DxKFPrGVXLqUJf7Dsl
H6S8/VtxmUXv1XtSvuJV39+Gp33fT2qfkejjE/uX9TG+UzQUXZ6vbjmePrUH
L+73qjwdlxPv2aK9dZ/XRkV+fM4nZfWI+zGWQym/w1Q94nu9M+VjWCb3vC3c
H7yszLx2zeOFsr6J01fh57hOqfaqW4+4jeQ36z68ee92X8j4fSneTfFx2VhL
1b2sbqk6uv9q3H5VZGveOIhpiPPoXrpW8SLAQSl/27JPl3KnLH3Ma+5rHfuF
p/ZRpNow5Svu+2Wdn4rqX7UeqbxNdENZ+jw5leJhXZxVxHlyfcdNa1u3VPqu
+K+rfi5q/1j+ex8oHqPzt8e6Eo8W0d6n3M8rs245TeiK5bTawc9Vpv3a0LWQ
eCeWeVXarwu6JpF3quTrsx5l5YxC7qSuVN4+eKeNnKpTTir9uPPOfMqpKnwT
p29STlO6yj5V9CSydZzOk4vnNPGeQo8r4/sOfb6hvG5P4t5jzUu/OpbuSk6l
8nYh66qkKeJh2mE4V7l/faTveO+l5l/85zFlxbceX6ts/j2KsZu6r1NOE7o8
74CDy/M2pWsSeadKvj7rUVZO33In70rl7YN32sipOuWk0o8778ynnKrCN3H6
JuU0pavsU0VPjhsOjvPG9Aor6DmfOLad/ott8dzziW31etaVnErl7ULWVUlT
xMMDDi4us0t95Pznvg9+1pT4VrHK3TY84OABB1fJ25SuSeSdKvn6rEdZOaOQ
O6krlbcP3mkjp+qUk0o/7rwzn3KqCt/E6ZuU05Susk8VPTkJOJhLfgzCDrFP
RJze7cEeX89j2ckfM6a1jK46nzq8U7fMOrzDswEHF5fZto/c987j1c3MzAR/
fc55AsdxfgJ7PIitSawNzlzV2ZHy1Rlw8ICDq+RtStck8k6VfH3Wo6ycvuSO
l5m6Unn74J02cqpOOan048478ymnqvBNnL5JOU3pKvtU0ZPjhoNj2tCDxFVe
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
5tiThIPL5GzZuCi66tLVth5V8uXVQzpF/Y3/DPNv5tn4h7qPMNiKOTjr7U88
8cQcP2LJGLAUH8WazVtXiPu8b94pGmve7+OOg0Wv7MG//e1vw36kXXfdNeBg
1oWICUy/MO6/+c1vBhyMnqGP83Cw+pn+je0ubvNvKg89fdNxUZS+Du/wbMDB
xWU2octxMDxJ+8JrxDPBN6dMrnp++fdovx0xsnXOXDw/G8XYrdsWXdDleScN
B9N/+G9Sj89//vNhD4NsLfwHtmEdYZNNNskeffTRWVux1hoefPDBYKtx/1Bh
G2JI4t8X+3tNAw5O6bQ8GTiO9uDYl4p+P/nkk0McpOOPP37O/jjSfPvb386e
85znhLkW66HiF/iJsYPs5z5uj6p0daGP8j5d8E68zpvyHSqKS1l01aWrTT3a
yinFDxDeveyyy0L82MMOO2xWz+gb3ywwIvZg8Yx8uNBB8Az42Hklr43jPu+b
d4rGmsuHScLB2IPxg+AZPnXoFPyE8YPQmRvEGb7wwgtD/9KXMQ7Wux1zoGPk
x5nCHCkaq3za6qCi9HV4h2cDDi4uswldLl+RF1/84hfDHk7imlx77bVLyVHn
Lb+XnzDvwGeL/Z277bZbsAvKPpzXFmU0FrVFWb666dvS5XknDQdTl0WLFmWr
rLJKdtppp83GCNaebeHgTTfdNMQRkSyCB5Bvb3/727Nbb711zpmajD3iSeLz
deihh87KN+e3tjJoofNOPKbchhHni3FQ3rpuk3p42i7ljvMPF/yPLzl+gayF
6j9hZNa4hYM114Jn0JucZcmaFXMm0ekx+arQ1QeWqVNOKr2XUxUHp3ihDBPX
patNPdrKKV87ov/PPffcEM8eWaI1KK0T4GuKfH33u9+dPfXUU7Pzb9avTjjh
hOw973lP0Esew3HAwfOPg+lD9ANjnTUgcBhjHv8XnmEfkS9UCgdrPYC1AjAH
e+nQPbLB+NpRU3no6ZuOi6L0dXhH8m7Awe1xcIwzpIfgG8YY8oR4Efh/pmSv
73vyNQgwMBdnbjBnZ318ZmZmDj+2xQxldavbFkXlNKHL804aDqaPsd+xhsV+
Surh693g4Fe96lXBHsw4kh8o9pkf/OAH2TrrrBNwsPsDs77JWhhzJsY262Eu
MycNB3udvF3jvYSpWBpqa7edxmnb1MPTdil3YhmDnkPesh8XHCx7sObL4GB8
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
g0c1FpvQ5XmnAQerjnl7c/LGclu6JpF3quTrsx5l5XQpd1J8NODg8eWd+ZRT
Aw4eeKcPOZVHY513dM07PBtwcHGZXfRRU/6oS9coxm4ZXWXlNKHL804LDnb/
OvfFGnBw93T1WY+ycrqUOyk+GnDw+PLOfMqpAQcPvNOHnMqjsc47uuYdng04
uLjMLvqoSt3z9FLfMmLUY7EJXZ53GnCw7otw8Cj1USrvuPBOlXx91qOsnC7l
TsxHVfd6DTh4YfLOfMqpVNpRy502vFNEl/P9tODg1DgvkglVy2wqD2Mam9St
Ll15fcqzAQcXl9lFH1Wpex6/9i0jRi3Hm9DleScNB5elL5JZKZ/hPvRRKu+4
8E6VfH3Wo6ycvnmnSM+l0jelqw85VaecVPpx5535lFOptEW8tNB4p4gul5/T
goN9jbGqfOhDTuXR2KRudenK61OeDTi4uMyu9FGdzyhlxKjleBO6PO+04uAi
evrWR6m848I7VfL1WY+ychaC3OmTd9rIqTrlpNKPO+/Mp5yKZUteWy5U3imi
S++YZhxc1J9560ld0JVHY5O6FaWvwzs8G3BwcZmj1Ed1yuxKRoxajjehy/MO
OLg4bx/6KK+cceCdKvn6rEdZOZPOO23kVJ1yUunHnXfmU07pHfFVRGOTcprS
VfYpokvvmCYcnKpbXn8OOHjAwV3RFdNYlsfXuON5W51y+m671H2dcprQ5Xmn
FQen9qzE57+2pWsSeadKvj7rUVZO37yTt98plbcP3mkjp+qUk0o/7rwzn3Iq
T96k9s21Kadu+iZ9mveOacXB6stUf+adm9OVnMqjsUnditLX4R2eDTi4uMyu
9FFZHt8P5WeB9S0jRi3Hm9DleacZBzuP6LxtxhlnWqb4pSt9lMo7LrxTJV+f
9Sgrp2/e8bOffL9lKm8fvNNGTtUpJ5V+3HlnPuVUCgfHfCSZ06acuumb9Gne
O6YJB/u921BS14CDBxzcFV0xjany+Ui+gONuv/327Pvf/344y3vAwem804SD
JbNUZ8Yq9bzzzjsDn3DGcnwmdx/6KJV3XHinSr4+61FWTt9yx/Wd5kuPPvpo
dvHFF2d333337P/xWd1l8fna1KNqn9YpJ5V+3HlnPuUUc+z/+7//y/71r39l
N954Y/bDH/4wnLfsWCnvbOSu5E5XOi7vHdOOg7nQIX//+99D/W+55ZZkzPqi
tmgqD2Mam9StKH0d3pGcHHDw/OPgP//5z9m73/3u7CUveUl27rnnBjlUl/9G
MXZT93XKaUJXqr14No04eGZmJnvve9+brb766gELwyfCwm3pmkTeqZKvz3qU
ldO33JEuA+dK7x111FGBfzbffPNsyZIl4b8BBy883plPOQU/MG+64447ste9
7nUBH9x2223hOTKHy31s+pA7Xem4vHdMMw6WTGCuA9546UtfGvTKY489Ngcn
l9HYVB7GNDapW1268vpUcnLAwfOPgx9++OGgl1ZZZZUwNgd78ICDY5mFXoJP
Ntlkk2yllVbKrrrqqiDH+l6fTOUdF96pkq/PepSV07fckU6TrxU4+JBDDsmW
X375bOONNw4yf8DBC5N35lNOCe+CfV/96ldna6211iwO1n+DPXj8eMd1Cn34
73//O/va176WrbjiitlGG22UPfHEEwMOHnBwZ3TFNKbK5yNcR3uxLnH55ZcH
XhQP9i0jRj0Wm9CVai+eTRMOllxCdi1evDi77LLLsmeeeSZg48EevHD1UVk5
o5A7WkuAV8AwS5YsCX4R+GEJ08hv2PkuT2fUobGNnKpTTir9uPPOfMop5tfc
s2Z+9dVXZ9dcc82sX4RksOZObcqpm75Jn+a9Y9pxMDIB3AHeuOSSS7Kbbrpp
tk8HHDzg4C7oimlMlc/H17z1rXWnorHYlYwY9VhsQleqvXg2TTjY96m4z2c8
X+pDH6XyjgvvVMnXZz3KyhmF3In3+/teXMfAAw5eWLwzn3LKYwuIX6SbUvun
+pA7Xem4vHcMOPi/++HUx/p/wMEDDu6CrpjGVPn6HWMd9UvRWOxKRox6LDah
y/NOIw4WP/jlMUXiOjWla1x5J9Zd+i25LhsHOlz281T8J5d9vm+6rr7Pq898
yZ3Y58HbJG6LuA2r0tWHnKpTTiq9lxPr/lR/xLLY83jbefvo3n0E+qzHqOSU
+2NJ3sTtN+Dg8cTBKT52PJzH913QlUdjk7oVpa/DO9KvAw4eHQ4uokn9Ea9R
1imn77ZL3dcppwldnneacLB/u16K4xZ1Rde48o7kuHS22z35T99uU4+xjvLK
Rur2L8c3TeX+fPGOZEp8X+YH0RXvtJFTdcpJpfdyZMeMY0LFWMB5xZ95XBbx
if/Omzd0XY9RyanYH4uP2wxjnllovFNEl9M/bTg4/sQyMGUXKGqLpvIwprHO
O7rmHcnFAQfPLw5WmlgG16VrFGM3dV+nnCZ0ed5pxsGO7+LYRX366aXyLiTe
cb0W41rJOLeJuo1d8wq1r94X20mb1iOmseo7+pA7cTs5tpt0HKx6xmPG+cGf
eRrHB/H/kkXuK9t3Parka8trXq+4veKrTTl10zfRJXnvGHDw3PmO+0VUbYum
8jCmsc47uuYdjecBB88vDuZ/xfek3Ybz5AYcnCpHdij2sFDfGA+3pWuceUdy
nDFEzFPaSL4QGkvyu2eM0X7SAfKV4JuLPdTaP+Y6oUk9PO188Y7kvOqhOtJG
snnH7dwV77SRU3XKSaX3chwDq+4+/3E7L7yhfWKOB7VOoLNrxF9KN4p6jEpO
+RyR+kov6d15viV1y6mbvokuyXvHtONg32fCmBBPDzh4wMFd0RXTWJbn8ccf
z84444zsoIMOCuckDHHTBhzs35JPf/vb37KTTz458MlvfvOb2X1OAw7+D5a5
/vrrs/333z/oN/a6K84T/7Pf/corr8w+/vGPZxdeeOFSe9/hofPPPz/bb7/9
QjrHh+OKgyXjZethjkC8vQMOOCA78cQTQ8wRX/dvSlcfcqpOOan0Xo744777
7gtj5wtf+ELQSzEOvuuuu8L/yOInn3xyTqwNLuImfOITn8jOPvvs7B//+Mcs
D4lX+q7HqOSUeOZPf/pTduSRR4ZrZmYmtIGPiS54um8dl/eOacfB8gG79dZb
g0w855xzAk8POHjAwV3RFdOYKp+P9PBDDz2UbbjhhtkKK6yQnXDCCUEG1aVr
FGM3dV+nnCZ0pdqLZ5OOgyWLtDaLjer3v/999oY3vCHwCVhOsbDc37MpXePM
O7JzHnvssSE27mabbRZ0OG0m31Bw8Yc+9KFsmWWWyXbeeedZW5fshOiAHXfc
MVt22WWD7CLWLu/kkxqPdeT+fMkd4TjoZx5AGxx44IHZcsstl73+9a8P/OQ+
Ek3p6kNO1Sknld7LUR2//OUvZ8973vOyV77ylbP2BsfCxI9S2/zud7+bXSuQ
HRkMzNjbZpttskceeWSOn1KZTXicdJzWVq677rpsjTXWyFZbbbXshhtumD2T
0P1F2pRTN30TXZL3jmnCwXF99Buexq7CmCB+cOocjaK2aCoPYxqb1K0ofR3e
4dmAg4vL7EofpcrnIzn69NNPZ4ceemjQw8T1HPwiBhwsuaw6g+fAapyDsOWW
W2YPPPBAcu7elK5x5R3Vn/b53ve+l73zne/MTjvttMAT7ttIG1566aXZe97z
niD74/+QWaeffnpo2wsuuGDOPrtxtwdLt4FjaKNtt902O+KII0IbTZNfBLL1
Ax/4QLbvvvuGMzzjmHH33HNPtsUWW2Rf/OIXQ9vIB0J8QCzd7bbbLjvuuONm
+Ss+U6LPeoxKTmn+hH1ml112yfbYY49who/G2SjOsexKx+W9Y1pxsPsAcXFm
4A477JAddthhYa4c4+CiMpvKw5jGJnWrS1den0pGDjh4/nEw3/Agl2x8RWOx
KxmxULBMEV2p9uLZtOFgYWHm8Kxv+9mm04yD3WaO3MGOKz3t9mDGleYS8ofz
OHSKK6/zSbj3+GlN6uFp50PucFEP+YdoXUFtxCU/4YWGZeqUk0rv5fh5wNjE
8S9ynxilpd/hD/cH5rmfo0Z+xp/4Rr5Jk6Tj5DPKN3VlTLiuimOpLDTeKaq/
y9ZpxMF+RoHWEuFp35s04OABB3dBV0xjqnw+jnG0FqW1p6Kx2JWMWChYpoiu
VHvxbJpwsOSV8Jz2y0mW9amPUnkXEu/wv9pG+5+050PPfN+P7xGLY2I53vEx
qDXvpnJ/PuVOvJ/S93qJd2Ic1xXvtJFTdcpJpY91v2z+2ivp7aG0wgdu4/Vz
R1w++/xp0uJFxDEEVU/tPx1FnJqudFzeO6YZB7uM0z1963JzwMEDDm5LV0xj
qnw+krMe4ynWwXXKGVcsU0RXqr14Nk042OWzPxvFvu1U3oXEO/FeJ9mpYt/P
VDtqzEnP632e1/9rKvfnS+54HUWDx2dcyHud6pSTSh+3uePavLHjl6/FqN34
wF98UjGIR1GPKvna9mk8ppx3RiV3utJxee+YVhys5z6Pic8XGnDwgIO7oCum
MS4/JW91nzofoWo5fbdd6r5OOU3o8rzTiINT7ZGSa23pGlfeSY0nPrFOK7vc
tpW6mtQjprHqO7qSO1WvtnT1IafqlJNKXzRuUvWuyh8xn9Slq209quRr26dF
Y6fLcuqmr8o7RXR5f44TDna664zpvPr4u1Ix8fLmyKn6V61HKm8Xsq5Kmrw+
Vf0HHDw6HFzlM0oZMWo53oQuzztNOLhqvrz0XemjvHLGgXeq5OuzHmXlTDrv
tJFTdcpJpR933plPOTXuvFNEl94xKTh4FHR1JafyaKzzjq55h2cDDi4uc5T6
KJUvNfcrKqfvtkvd1ymnCV2ed8DBxXn70Ed55YwD71TJ12c9ysqZdN5pI6fq
lJNKP+68M59yatx5p4qenFQc7Gny9lDXpasrOZXK24Wsq5KmqL0GHFxcZtf6
yPk373IeTvk2FpXTd9ul7uuU04Quzzvg4OK8feijvHLGgXeq5OuzHmXlTDrv
tJFTdcpJpR933plPOTXuvFNFT04CDk7ZyWLfbvdjz3tn/L68tsurf9V6pPJ2
IeuqpMnrU54NOLi4zK71Efcedz11eWyAAQcPOLjKp099lFfOOPBOlXx91qOs
nEnnnTZyqk45qfTjzjvzKafGnXeq6MlJwMEeBziOC1OGgz1WleftU06l8nYh
66qkyetTteOAg0eLg8W7cfzSODYjl9J4LLWicvpuu9R9nXKa0OV5pwEHu6wr
2xORytuUrknknSr5+qxHWTld8k6sJ6vup0mtm3bFO23kVJ1yUunHnXdGKaeq
8k4RjVXKKbsvS9+kT/PeMSk4WDhBGMLjoSkWZKo+/OdxJhVL0mNGNIlbVfVT
h3fqllmHd9SOAw4eLQ52vtO3zkcQnyvevfhbsaCqjO+qNM6HHG9Cl+edBhwc
0+hl5+mlPvVRKu+48E6VfH3Wo6ycLnkn1pN5sbxiHhpw8MLknfmUU2XyJpW+
STlN6Sr7FNHlfD/uONjxahzzWWdykS4+J0fvdMzLb9nd/JzworZoKg89fdNx
UZS+Du+ofQYc3B+WiflWschpH/iUM+wZg5x7f/zxx2fnnntuduONN2aPPvpo
aLef//zn4ewnzdWK6BrF2E3d1ymnCV2ed8DBAw7umq4+61FWTpe8E8ubAQeP
N+/Mp5wqkzep9E3KaUpX2aeILuf7ccfB2M64Hnvssezmm2/OfvrTn2aLFy/O
brrppvDM/SPiuuk8nb/+9a/ZXXfdFfL97Gc/C+948MEH55yd3ZWcSuVtOi6K
0tfhHZ4NOLi4zLZ9FO914x7Mxjn34LcNNtgge/vb3559/vOfz44++ujss5/9
bLbVVltl73nPe7Ltt98++8AHPpD94Q9/qHSe+yjGbpO2aEuX550GHOyybvCL
WHj6KHXftJwueSfWk4NfxHjzzijlVFXeKaKxSjll92Xpm/Rp3jsmAQdrbfm3
v/1tduyxx2ZbbLFF9sIXvjB75StfmX3lK18p3GvEBa44++yzs7XXXjtbbbXV
Ag78zGc+k919992FtuS4/lXrkcrbdFwUpa/DO6rjgINHh4Phu8svvzxbb731
sjXXXDM777zzsieeeGLOmsbf/va37Mwzz8zWWGONkG7JkiWzZ1pVGd9VaZwP
Od6ELs87DThYfjHxnskivdSnPkrlHRfeqZKvz3qUldMl78R60tdMU3thUnq1
KV1d6KOiupWVk0o/7rwzKjmV2qM94OCFxzup8ep74eg31pOf97znZc9+9rOz
tdZaK/vVr341a0OLcTB9/ac//SnbcMMNs+WXXz5bZpllsn322Sf7xz/+MYtV
KGPAwf/5DDi4nK4Uj+qSLzvf+DmAf5mzgYFpJz+rUnoKP4gjjjgie+Mb3xjs
wfJ1z5uvx3Ura4OitijLVzd9W7o876Th4JhPtLdB+yT9LPh//etfs/IrjgvZ
J5ZJ5R0X3qmSr896lJXTlX4hjfjEffz8W/tn+N/1p+vJKjqjDo119FFR3crK
SaUfd97pQ06JF1yPCP/6/mz9Fi8JExXRWFa3UfJOEV0uM8cdB3ufcv+tb30r
e+lLX5qttNJK2QorrJBddNFFs/uOpDfU//z+/ve/n22yySbZa1/72oCdDz30
0KBLff06z78qpr3OmPb0TcdFUfo6vCPdO+Dg/nCwY9yHH34423bbbbNnPetZ
2Qc/+MFgB4YXfT+nv4P+2HfffYPvjp//nTdeRzF2q7RFUTlN6PK8k4aDfc2K
MSPfcb6RX9yDf+l/11HiqVSdmtI1ibxTJV+f9Sgrpyv9IlkjHKx9tcK9jA/f
D87eBI0jfku+VNEZdWiso4+K6lZWTir9uPNOH3LKdZJ+S67AH8gW5I7HH4h5
I4/GsrqNkneK6HI9O044OHXPx2m+4oorArbges5znpPtuOOOYT3Zsa90CH7B
H/vYx7ILL7ww23zzzYM9GBxM/7tfcVFbNJWHnr7puChKX4d3eDbg4OIyq9Ll
Y8vvPd7DD3/4w+xlL3tZ9vznPz87/fTTl4qHFr8DXYXvO/3icVDyxusoxm6V
tigqpwldnnfScLD0ksfSY+zgn8Vc/utf/3qQ1awj3H///dm11147axfOG+tN
6ZpE3qmSr896lJXTlX6RTJCO4/vpp58Oe18uuOCC7Jxzzgnfv/zlLwMv3XDD
DQH3KG5Sav9Bns6oQ2MdfVRUt7JyUunHnXf6kFPx2ji/2YcNn5x11lnhQuaw
nv6b3/wm+8lPfhLkDXxSxA99yJ02vFNEl+vZScDBjlXBwXvvvXd26aWXhjXn
VVddNfQp+pFxDsZV33/nO9/JNt5444CT3/WudwX73GGHHTa7Rh3vratLV9U6
NR0XRenr8I7GxYCD+8PBmoNxHX744dlzn/vc7OUvf3l2xx13zOqtPH89txPG
8bAHHDwZODj2ifn73/8e5ufskzzqqKOy7373uyGOyGabbZZttNFG2S677BL8
x+O5+uAXMf/6qEk5XekXlzdgFvjoS1/6Uva2t70tO+OMM7LLLrssO+SQQ7J3
vvOd2TrrrBP8AJlny1ciFUM/T2fUobGOPiqqW1k5qfTjzjt9yCm3C/ItPmGd
8tRTT82+973vBSwELnrzm98ceIY06CBff0rRWFa3UfJOEV0uM8cdB3Pv5wpc
eeWV2Uc+8pHsvvvuy9761rcGX4eddtopzHWkM4RHsP3Sv0899VSQC8LBmhsP
8YMHHFyXrhQeEd9h48P3nPgPrD3g87vk/+19kw7ysRf7bmmdc8DBk4eDXTaB
S7R3F78trWPT/+z9XW655cJ615NPPjn7X7y/RTEfm9A1ibxTJV+f9Sgrpyv9
4vIGf6sDDzwwrHWyj1wxyp955pnwnPXSvfbaa3b9E57RXLuKzqhDYxssU6ec
VPpx550+5JT0Bn0OP4CBiVfEGoHWLuGFD33oQ0FXfe5znwuydfCLKC9nPniH
+9gejK8DMgB7ysorr5y95CUvya677rrZMwlID04mLhXf6B1wMP0NDtb+AV9f
6kpOpfI2HRdF6evwjtpwwMH94GDhG77BLsyxmZ9ho5mZmZljB/Sx5/Zg8vPx
vd86d8P9vOK6lbVBUVuU5aubvi1dnnfScLB0Ev2MTGLPwnbbbZf95S9/mbPH
6Wtf+1rYB8xcivm7fPo0P5K9xte4va2q0DWuvONjxvcPpvaspvL2WY+ycrrS
L3o//U38z1e84hUB68r2o7234B7sPuhK1rvFX6SR/lPb+Rzd1y3q0NgGy7Rp
i7icmA9S/ZGSwUW0zscYaCunZAvm/pprrgkxBYiThX5yn/KDDjoozJfYqy1f
cuEtrU3GPhb6ry5P98E7RWPN+3iccHAeb/pv1n0++tGPhjkOZxBgE1522WXD
OiJ6g35k3LPWiAwgHf2+6aabBmzCmrV8YOJzbiULYt3iz/PGWFnbxc/K2qIs
fR3eEe0DDu4HB7suYV0CfMOca/311w/2YPgt1i1x3WTf4/uPf/xj2DMn2008
VxvF2K3SFkXlNKHL804aDtb8hs8XvvCF7AUveEFYx9aeFdUVnz32AL///e8P
fp/0PTKMM1f4LRxDen7//ve/n933W5WuceUdH3dxHI0q5fRZj7Jy2sqd+P3w
wP777x90O2ukvg8TnuG8HnAwdmHswfzPnOvHP/5x4BffHxVjYumLOjTW0UdF
davbFnXKidOnsEZevlGPgbZyinqhP5AdzJOQKT/60Y/mnMdLH4ONwcFHHnnk
rBz585//HM5ZkK+p42Fh6CIa68qdNrxTNNa8jycFB+vCHgwOxpeFfgHX0scv
fvGLw94S+gm/b3Dv1VdfHX7Tn8LB+ErIzoYcIFYV9hnxgMdv1eX2Gn9e1oZ1
5GEqX1H6OryjOgw4uB8czOXr1vivw2uvetWrsnvuuWcODk7xuTCSfP5YM99z
zz3DPE/6arAHjzcO1hjkG78u/Me//e1vz7H58x9xIdlfyf5fcC7/I8/wG5Ye
42IvHbIPu/HMzEzhPKsqjam8C4l34jGTh4NTMjrPftxVPeKyq76jSXtxcYYU
fp0rrrhiwCxuu4Gf8K9BBiFHmJvzP/pw6623zh555JE5sUg9zpJ4NM/vpgt9
VFS3um1RpZyUvC1aS6jCO33Xo62c0trRkiVLsne84x1Bft55551z7P2kQ6Yi
izjfSf4z7LN873vfG2LOSj45v8Sx96rWvw/eKRpr3n+ThoOJm6YYwPQPMuBN
b3pTsL/hC4wtmDo7ViYtOJj5MWm0lw6detxxx4W0jz/++BybjXhJfKN5UGqc
VGm7+FlZW5Slr8M7qsuAg/vDwW5bAccy5rjANdIrzseOfXXpHdj4kFmyB/te
qbhuZW1Q1BZl+eqmb0uX5500HOx9jrxhDYu1LekY1ZVY02AbzhdEfsET4Bjk
HPFv5CMBDiYWCb43Dz300FTj4CJ94e3uYynVXm3q4Wn7kDueBrrpf/zLV1ll
lYBvfQ8cPHPSSSfN+kUwZuAZMNH1118fdKTjZm8nzdlHiWXatEVcTko/x/I2
b/9Fim/yeGcU9aiSL4/XtN8EXY9fMGeI3XbbbUvtn8MuiCwCB+MXwf/YX265
5Zagf9xfT+U1jTXbB+8UjTXv13HHwRqr+oCD99hjj1kcDKbFx5s5zbrrrhts
Ju973/uCbFA/8o09BbmADUX2fvgEzPGLX/xijo1YMkV+VanYr1XasI48TOUr
Sl+Hd8S7Aw7uDwf7HiZi0bzlLW8J8mW33XYLOEbzqBQOFo9qzRv/HvQcPO7v
bSMjFgqWKaLL804aDnY9C0/AG5yt7X0sWwz2YPwiwMHwA9+sW8EXSif/UPzC
hIOls8roGlfe8XHnYyheu82bc04KDuZC1iJj8CVnPiQdpXjUJ554YtB3xCXn
N8/hNWS//CKwC7MGjh8WOpDn4q9x9YtwPoj9W6cJB2s+xNyHvVGsDbCfSj5V
8sfCLgh2AkOhp3jGOhR8Av5Bb+FT/MADD4T/0W3E5NM+rDr174N3isaa9+uk
4GA9wxeKOa76jIvYd+wXwI7CWhFrPzMzM7Px0ZADipuGP7gwr2LX0+fuL8V/
nIXAnFqxpuUb43SWtWEdeZjKV5S+Du9oXAw4uBscHMfbE49KDxHvivkWfle0
NzE8fa+Tx7UXfiGOLDKGtSj2coKV0FOxP05ct7I2KGqLsnx107ely/NOGg7m
I5yKXyfnW7JeSZ9rnz//n3/++SEWJDgY3ItOIkYk8dXw7XSdjNzDHqy403HZ
dfVRKu9C4h2NF9qLSzpAMt7toYw1/pcOkK6QzZP8yH5fx3F8U7cenrYP3vE0
stFor/+HP/zh2T1O0lcnnHBCwDf77bdfGDPos9NOOy340SBXwDL4DmMHxEcU
GX7vvffOWQOvQ2MbLNOmLeJyFHdFuh3/WLd9p2wPqq94RDxDm2pNzrHBOOg4
0QqG3WGHHQKfwC/oaJ2lwfcnP/nJoKfQObQX8QeYQ2255ZbZgw8+GPgGzHTA
AQcEHM3eF2LRsl7pa+dVZE0fvFM01lw/jzsOjuf4ixYtCuOeua3mNugL+hg/
YWIOYVPRfIULOYC/C3OiT3/607M8wFyJ/XT4c8Iv2kcLzzM/hhe0z07P4zlm
GWaK69+VLqnDO2rHAQd3g4Nj/nQfO33TFvAVY+8Nb3hDWMeAx6SrZPuFB9FF
8CVrE+DgL37xiyGeADJIfJ/XFmVtUNQWZfnqpm9Ll+edRBysOrHm+PrXvz6c
h3nwwQeH8Yhf1q9//eugb3iO7oJf4BXWsuEh4qFLBvGum266aRYH5437ujTG
aRYS78g/jTYk/ilzBeQ3cwW1iXQ8mA/fEvaLaX6qtgMfE6sZH+yvfvWrs/Jd
725SD0/bB+94GmiFL4i5Rwx94iWdcsopYR8cuhAfGmIloe/YI4WuhJeoKzGF
wcHIFuxF22yzTeAjYgqQVxhwXP2D1cfUib3z+FCyXuJ7LLhuv/32MCfALwA/
AN+vilz+5je/GfgHWQwGkBwu8ovtsh5t5ZRjf+rCuU6rr756sO3BJ/ADWBZb
MZiJfXKaN3CuD/IGucszeIu1dtoM/bTzzjsHbBzbc8r4vg/eKSrT8eS442Bh
C2Fe5Nq73/3uWVuZ5j34vnB2MjYWdIr8xPlGTrJ+qP2zOqcJXkCOKg9laA0J
HExcYsWW1tq2+2ENOHj6cHD8frc/yZ4gHmG9kdgA6623XtA/4GLWMLH5ERcA
XQzuOfroo4MtRvnxKYYn0VXxvs24bmU0FrVFWb666dvS5XknDQdLltGX6Bpi
2bO3F9svc3R44+Mf/3gYS+gldI3ips3MzIQYsWA/t2tOGw7mI8x67LHHBnsn
63zoZrWLYngj6/A9QYb7ebJ88798U8A68JTr8yb18LR9yx3xEbY77HlgYS5s
QdSLtSjiT4ODZQ8mD+dcIofAfbQV66rso3NbqWxB42oPhn7u2SeIz8iaa64Z
8JvsuOrjiy++OPAPspl9qJLbYAMu7BKsLzNXUGzDmEf6rEdbOeX+QuwrwO+B
GDX4CTN/RN5gA0ZvYw+GZ7S+cuutt4bY98Sk5jc2nA022CCsc9KO5CO/80q8
f6VOW7ThnaIyHUOOOw7WmRfIOniX+Ss6kfnL4sWLZ88CZA0DOYC/i/Av/zEG
sPMzH8LOsuGGG4b5DrpF/njIUnQOa9PEMjr55JPD+7HZMBdiHo19AV8qtwUP
OHjAwcLB8RqBbMS0D+tL8BU6inbC1ostCt4C/8oWIX3N2ajM0+E3f3dXeLNq
vrrp29LleScNB7s/jPY1gGux17HWiN6GT5BH6F9wDHiZ+i5ZsiScMYcM97WH
acPBPsawqWPrY32QMaYxx3+0GT4jYLzLL7981laidkNXXHLJJeF/fJY8Pibp
mtTD0/Ytd2S7Vkw99Bn8gv5jfg1uIw41dh9wsGJOg4Nf85rXBBxM3t133z3g
Gdl3tAcmtnn2jWXatEVcjnAZ/qzYeo855pgwX5Bcljxl/wXzAGSt4mm4jQss
CH9wVq2f8yke6rsebeWU2wi5aAPsL8wLuag3+po9Csy7WZPUfihwEP6l2nfA
GMIXAl7jNxiLsec28gEH5+drkj6mUbyHDR+bPvHBsalxz5jHjqu5HP3HfhL1
CbFlkHfY3UgPlsVvCp2D/Zj5DLyBPYY5E7ITe/+nPvWpIB+IPc3ch7VL+ISx
VQX/ptouflYlX1H6OryjdhxwcHt9FPOn4zWtXbiPneQrvIYcgV+5mFtLvhbh
4FScmlGM3SptUVROE7o876ThYI1B90OUfkJOUS8ujx8sHDwzMxP4Ab8Ij18z
bTjY98UxZhhHivXkPg2yC8uvRGPTfZh4rvP64n1RTerhafuQO57GsQf1QY5Q
F2QK9YZnsOWAg9FjOlcZDAAOZi2V38zBwMm+3uTyrQ6NbbBMm7aIy+Hb1wW0
9qv/1Me0G+OLtvM9zMrP/7Sn8vv4HQcc7Pv6pEOoJ3Xigu/5fOITn5i1Byv2
wB133BHswWAp8oKDsQezNs7/+JMTq0D6S5jb9WKdtmjDO0Vjzfl53HGwdKF8
37m0T0I+wFrz0FzP97xp34D2VehevI/eAcO5XwQXmBo7DTyDXNE+hKoYOG67
+FmVfEXp6/COxsWAg7vFwf47XkuM6fB0/ttxjXj5zDPPDLFulixZMgdTt5ER
CwXLFNHleScNB/NxfSx5pWfCxsRNIxaWcDAyDrsMfjLsl4MfJAuxJ2O3oX2k
6/J8tkY57tqWU/SJ9W1Kl2lsOW6JfRkd28R6p0k9PG0fvJOqm997m8Af+A+C
b7DbwSt8WN8m1hrza/iKONbYPDUPj2VUHRrr6KOiutVti1Q5sYzN21/hZ4bE
vBSP1Txe66sebeVUzCe+bunxr5CpzLux/4GPyHPzzTcHH1POVUDesEYFLgYj
wSucQYdNGUxEej/7PTUWy9qiDe8UjTVvh3HHwc6zfOI9ip4+jofCxzGKx5YR
5mC9GlsLGE5xIbjwGUIXKXZIjGGqfJrK1K55R20z4OBu9VGKxio0pfhW9kEw
Df7CzMGIi6W4Wr5PeRRjN3Vfp5wmdMW6bNJwcB5dftYtcyDFTWMOju757ne/
G/ZE4FPMmjdpsdXgI8u44zwO1rN8r0+Tte0iGuvma1NOX3T1WY+ycvqWO1zy
/eCbfQnYg4WD8bnBRrzFFluE86bwKcQ3i4vYEfItmQQcXCf9QuCdUckpyRnf
M8h6APMlfB2Qrcgb1s3xw2LejQ8NPqLEq2G9HH8S8uy6667B51R2RcmxuC/6
5p2i+rueHSccnLrvgi6ex7Fz+J6ZmQn+Mfgcs1/W8TFyA58I+Q7peZ1PHR5N
5SurU6qcVHqeDTi4uMyu9FEVmnx8qm9k92WdHF94cA7YRut2Aw6ePBzstknq
hcxhHy/7GPB3wAeWeRDr2MQSwY6nWF/s/cVOzHwdXaWzEibdHrxQ9VFZOX3L
Hek41q45wxKZTKws9nlh12NtYcmSJWEsgXXgGfz8+K1YSbF8qkNjGyxTp5xU
+nHnnVHJKcfAyBX6Hp9Q9gsSO4MYjugb9meDd9E/yBvkDLKJPVT8Rj+BIdBV
vh4vO+Ioeaeo/q5nBxz8XxzofizyDwJvIA+ws2g+DS/gG6GYFOKdMr+gIhqb
1K2sTqlyUulV/wEHL0wc7N8pv654vI5i7Kbu65TThC7POw042PscnYKNjv0K
xAthD8RVV10VfId9z6XWBrR/2H3B4jX/uvooj8Zx4J0q+fqsR1k5fcsd8RGy
HZsOZ1qyzwBeYi+gn9cinlHM5Tg2YxPeqaOP6tStSvpx551RySn3iwDr3njj
jYFP2AtILAB+y+4X+xW5/ZCP+EbYogotffBOUZmuZwccPLc9HF/E3x5HUnrF
z00ZcPDSnwEHt8fBzn8ug4QFXebEdatC47hgGc87TThYvgzUTfFvkD/43/n5
ccIr/iyOW12FrknknSr5+qxHWTl9yx3JEsUikY8M3zo/Tjzie+xSvrFxX3St
j+rUrUr6ceedUckpj3OlvaJcOlMMeePnansMUOEi5yH3g/BYGqPknaL6u54d
cPDS+aRj43hXqcvXpAccvPRnwMHtcXD8O97b4f/FdatC43yMxSZ0ed5pwsHO
B/F+SP8/Pi9Y6fL27tbVR3k0jgPvVMnXZz3Kyulb7qT21MS85Hvr9DuFg4vo
6kIf1alblfTjzjujklMuO5wX4v3/cXuKV1LlpGT4KHmnqP56x4CD8+nyfZR5
csDnzXXHdExjk7oVpa/DO6rLgIPnFwc3KbMrGTHqsdiELs87DTg4prHKpwu6
JpF3quTrsx5l5Uw677SRU3XKSaUfd96ZTzk17rxTRJfeMeDg6nR1JafyaKzz
jq55h2cDDi4uc5T6qE6ZXcmIUY/FJnR53gEHF+ftQx/llTMOvFMlX5/1KCtn
0nmnjZyqU04q/bjzznzKqXHnnSK69I4BB1enqys5lUdjnXd0zTs8G3BwcZmj
1Ed1yuxKRox6LDahy/MOOLg4bx/6KK+cceCdKvn6rEdZOZPOO23kVJ1yUunH
nXfmU06NO+8U0aV3DDi4Ol1dyak8Guu8o2ve4dmAg4vLHKU+qlNmVzJi1GOx
CV2ed8DBxXn70Ed55YwD71TJ12c9ysqZdN5pI6fqlJNKP+68M59yatx5p4gu
vWPAwdXp6kpO5dFY5x1d8w7PBhxcXOYo9FE87kYpI0Y9FpvQ5XmnAQe7PI7l
cuqc0jh9U7omkXeq5OuzHmXljELuOP+k9nR3QVcfcqpOOan048478ymnnGdS
/JSSQU3KaUpX2aeILh8L04KDU3WL35m3P7+oLZrKw5jGJnUrSl+Hd3g24ODi
MrvUR2U0xbHR6vLfKMZu6r5OOU3o8rzTioM9Xh7fik2fSt+UrknknSr5+qxH
WTmjkDuxbuPj8QHy9vzXoasPOVWnnFT6ceed+ZRTrodc7ijNgIPz6VqIvJOq
m8dES6UZcPCAg9vSFdNYhaYY69SlaxRjN3Vfp5wmdHneacXBcWwjP0cwztuU
rknknSr5+qxHWTmjkDupNuS3x9trS1cfcqpOOan048478ymnJGPj+XXcpn3K
na50XN47ph0H+5V3LldZmU3lYUxjk7rVpSuvT1X/AQePRh8V5fGzXOLYsXXK
6bvtUvd1ymlCl+eddhysmPXx2kGfWCaPxnHgnSr5+qxHWTl9yx2XLXycZ2QP
is/9akJXH3KqTjmp9OPOO/Mpp3Smhs7L8LMxXC51wdN967i8d0w7DlYfcy/c
EZ+bUVZmU3kY09ikbnXpyutTng04uLjMrvRRWR7a64477siuv/767G9/+9sc
uVOnnL7bLnVfp5wmdHneacXBmiNxrtOtt94azjrlTFzHxXFbdaWP8mgcB96p
kq/PepSV07fcEQ9pzOBPs2TJkuzqq6/O7rrrrvBc53L3wTtt5FSdclLpx513
5lNOSd5wltxNN92U/fSnPw334if5ZXXB033ruLx3DDj4P7j3mWeeyX74wx9m
99xzT+jzlE7pSk7l0dikbkXp6/CO9OuAg0ePg52/uP70pz9l73rXu7JVV101
jE2d1963jBi1HG9Cl+edRhwseQVPzMzMBD550YteFGQ3+gi5FZ/91ISuSeSd
Kvni9PHYrNvvVcspekdXckc8JN32z3/+MzvqqKOylVZaKdtkk02yRx99dM4Z
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
g2N+LaIx5vG43qn1r7IxUFT/qvVI5e1C1lVJU8TDAw4uLrNrfZSni/L4fMDB
Aw6u8ulTH+WVMw68UyVfn/UoK2fSeaeNnKpTTir9uPPOfMqpceedKnpyGnFw
URq9e8DBAw7uii4vq83YGnDwgIOrfPrUR3nljAPvVMnXZz3Kypl03mkjp+qU
k0o/7rwzn3Jq3Hmnip6cFBycd6XWCsveM+DgAQd3SZfu4z0XVXh4sAcPOHgh
6aO8csaBd6rk67MeZeVMOu+0kVN1ykmlH3femU85Ne68U0VPTgIOdlwRY1jf
zxnXO+Vn5++r2hZN5aGn70LWVUmTVw+eDTi4uMy2fZTae5ziXb/KcHMeXaMY
u03aoi1dnnfAwcV5+9BHeeWMA+9UyddnPcrKmXTeaSOn6pSTSj/uvDOfcmrc
eaeKnpxUHOw4N47v5/utU/7yAw4ecHCXdOlePOmxIIhDE8du0qW9yKm9m2X7
oUYxdpu0RVu6PO844+CyK28doMqnT32UV8448E6VfH3Wo6ycpnInj3c8fdG7
8/iuKV1d6KO8z7Tyzijl1EKUO13puLx3TAoOTtnZHFPE++8VN9xjnsT4OX5v
UzlVVqcm7+iad9Q2Aw7uDwcrHrvjXjAb51Vxlvcdd9yR3XrrrdlDDz00e8Yp
37///e/DubDOv2X71kcxdpu0RVu6PO804OCyPdpldapLV1n6vHLGgXeq5Ouz
HmXlNJU7ebzj6YvenadXm9LVhT7K+0wr74xSThXxQlUaq5RTdl+Wvkmf5r1j
3HCw30sPggnACZyNqTPkhTniswg81ib/g9HAITzjm/d4DOEBBw84uC1duoff
OKNF51RyXvuZZ54Z2uYtb3lL+N5tt93C+d7ve9/7skMPPTRc22yzTfbAAw/M
vsPjW+fRNYqx26Qt2tLleScRB6foivVRnbx16SpLn8o7LrxTJV+f9Sgrp6nc
ifkgtZaQp7+K8jalqwt9lPeZVt7pQ07VkSNF6VLpy+o2St4posv5fpxwcDzG
wRPYy84666yA4TbYYIPsve99b3beeecFfajzAOMzcxQr+JJLLsk222yz7K1v
fWv27ne/OzvllFPC+wYcPODgrujio3mX+O6Xv/xltssuu2Srr756tsMOO2Q3
3XRT9tRTT4V52F/+8pfs+9//fvae97wnW2mllbJXvepV2e9+97ulzksoomsU
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
T5W4CD4ifj3z68Jx+DrNYZDGNWsEWC8Ln6l+5zFesbQcS+t0rSym3pO81nVD
Wr1Z/Rb5XrGQste15HoYOWY59tVT7foQKVdOvkRzWOgO5bM2p3nafDH4DYzh
xeIp+IzhJP7gxEWIsYg/uM77HSv/MbBT09f6qRz3MvLgWh7fWz0WjNby1vqu
Za/fq/+NvbjzzjsHH5z2wu6Y94gH22cwcwgyn5ZP2LhkjYWobWWJ7Nprc7KY
Sz+FnfbcePBxeXDlOq2trba5xp1X/MKT/pX+lrU+9d31ua1nwvdX+9tt2eZk
MCWLufvWpt83X/Xeq8iDq81Nfz3zuM1PEo8ovivzcoyDiaERW07/SIPn8HXG
NrNX3/72t4c5xJmTWdcl3pXXXUTsVM7ajnP3+G71A8c+1LbXrhkb3rNLOWra
Y+idNk2vLOyY8VL+YPNf2C++YGvq0SPGH9g8ae66664BZ/AnFtacXjoosRRt
P3+qnY2VY6k+2FcW9T21znt+wfpZ1++puEqcTJ6RtSTCrS+DP7i2fUfKljJY
Nw0PxnGlu3HjxuCHgQ19J/rmPe95z/Db/jxkgBvx/7JNZCReWNzJzf/f/+5h
ZF8us0Z2V4UH97hrPaP3ajmrjqvparuoaRMnZV6AOtYnNl4gLk+sHjzUZ4nz
FENk7Ynoh5bnLJFde21OFnPpp7DTnsfkwfoMfAk4HB5c7W/vrP9NpWvT1Ocu
va+XfuzeXfPV5nHJe9r0dIpTv1rMsLg98X3G5OLvGXvGsWS3bx0dIl/pb+LB
1g8TM5B1si47djJ2pd61m5e85CWDPxgnybwTY1r64Xx5bI++euZmJ4ZTOrxY
X6mu/drWxVm2u2Nhp83LLveOyWcq70vKcdbYqTYfFnDgzIti78XKuMa3R484
9ZP0semY9L9gBnZwnVzbRRZj+nCt7I6FnSlMz+nXKcwcqxyH0FPtMzJmQN/g
NOYJmq9tPQ04wGf9J56EvoGXuo+YcXLj6omvgZns8z4lu2NiZ6788RdUHhxZ
1LGks66js8ZO/k8/N5/qXv838VOpc/fUOCGf6j57PNWxhbr/8to62lcWc7iv
5c7v173udQMPFhfS6wftwoPZ5fDg+BOmynhRdMSh8jUm/zVtq2KpV2/B7aH0
/lm0xUPkK/8bs8ODzQWq62BeduzQN/SPfeKMXZvLwAfDBmXMO/EPiRGO/spz
2rlQS/J1HbCztE4PVY6zxE7VE+qdbdJH+uIXvzjsictHh98kxsp9sWnVB5o4
iVyvzz1LLnPdsXNWeor+wHHF9YoJ1/emb4wRZB+Fiq+KieiXugZo0vfOs8LO
XPmTRzzYWsrWWQz+e/m9ythp6yh+GP/VGLPohBojVTEwV+dr62gfWcxhp82j
spk3Kt4H5z+kP9jaQ+aimmNofbupEw573+fS+6zfl9zXSz927675avM4d9/Y
M8xdMS/Xmo3iP13Td3XNvEzfnW3ZjiW7fevoUPmyrtw999wzzFs2bkc+0pJF
7h9770XHjrLZC856D8ojNs+6NH77nvQw4AwGyCDPCT48q333WL6uC3aW1Omh
ynGW2FHXqXPX6A5z9+ECHlzznU8498ANvZL2U7E19tw1eRzTh2tldx2xc1Z6
yvrjcEC/wIzfMAITtc5ji6JzgpPomPzvP9+ji6Of1uqdfbAzV/7k2xoJD3rQ
g4Y5567tis3Lip3azusZrpH/goPoAf8nXf7Ls3aR3S5l2wU7wW8tc8pgzQtr
RxpnxZUPwYONvfEHW6PQ2pTWZ9nO9af9L81BsC4WOfruM+d55++8TnLwKXbW
vpHkc955OuSpPMrotH5j+3+t++DCPcGJ9SOuMz628/+c6gr4cfpdcRG8+O5a
/Z2z6poNT1fzjC6FkeiS6JypOg9mgg22yvWqh/Lsi3hmTW3rjT/mMY+5lvhe
2q573CP1nzpv/7uo8uzli14UH2M9fvFhfMSH4MGZJ2f+sfmj/Ft8E2Pnj3/8
4+73ufQ+6/cl9/XSj927a77aPM7d13uGPrlTP92Z/10jT5/t+44tu33r6FD5
4qswt5kes3+ReR2RVeTmvIzY8Snv4iJ8V9ZcrzjwPXkKRnJv/d7KYSxf1wU7
S+r0UOU4a+wE/1U/BBsZYzC2kDT1v+Sxvdfveq7J45g+XCu764ids9JTVdf4
DIaCjYqdiq2Knzyr/q52LProrLAzVf7kj1417wL/sY9e1ac13VXFTrWVvXqr
9Zn/Uu/1P+nplGpv6nN3qaN9ZTGGnRav9Zp1L6wdjwcfKj4YD+YPtl6E+OA6
J7Gdn9hb46MX71HnP7bzxHrzJ+tZ54/U9L25pPVckmYu/dx9U7EtvTia3nt6
Za3yrM9sY7VrnExdd7D3nDZPS2Qxlr5dv6DGPo/Vbf1PPLv1TsWyZb3XHnam
8rW0jg6BnbmYp3bdrra+5+6feucSTK/B9y6y2/c9x8rXMctxKOwED722OKY/
2vaae+tc7vb5c+17LXbG9OFa2V1H7Oybr/a+MTsyhp2arsb89jCyKxaOhZ1e
+Xptxpo62Vf5POpoX+zM2YR2zZPKo8bek7rOZ67XvTfX1PsS2e0i832wUzGe
NUqtwWQfyfPYV3lsPZC2PfbWumjXYxlbF6O9r95b8zGWv7k0c+nn7hsrW12H
pM1zfWaVHVnl2hzu8lnbSvYN6OWx5qHNU6+M7do1NV1b573fvbqtbTLrpllj
15ygHi7m8nWo9YjG0rf3tmfaZi1fz/70ylXlVOeq9GQ5la+5cvTu3UV2+77n
WPk6Zjnm3rNW7wQzwUk+634FrS5t222Lt/a++n1NvpaWY2mdrnlPL/1lx86+
+erpw7b+x2xP7776va4jvbRsZ4mdNv1Ymep6EWlbVd+ufc9Uedr7DoGdqXrs
2fqpe1qdEd7V4yBr6n2uTLu2i6n0c9ip5QrPsvZoeHAPZ8fkwdX/2Po8al7r
f6633KCWc66eLwsPru2y2rP2meFStb9W09X/I1dHlW3ll2N57PHgNl89WYzp
15aDT9VR206d/MHiIviDL+v6wa2eac+Kgykst33dNt1UvubK0bv3UHp8zXuO
la9jlmPuPbtip1fvPR5c22n1J1R7X3Vt+/yl5V+jP5fW6Zr39NJfduzsm6/U
c7UL1a9U7UEPV3UNkXpv9Tnug+ld0u9apz3b0OPBWWenFx+65D1T5WnvOwR2
puyKo/pVgoH4TKZsUYuf3jpVU/lacqzBzhJZzKVpZZ6ypmzWTbM/2Xnw4HDx
+OPTvrKuT8Vl5W1t+63lHKvbyqFaPb+27Y4dY/Kfu2dMF8XXE99975ntGEbP
/9PqQ0f9r9evaPPYe27l6GOyqHVQdWj0a9ZpcvbaYpVR/c+8TnERYrs8o6fr
xspSn7mkjqbSL8VO76zrnbVjWtmbsvUZ55SmXdu/to3WVo3la64cvXsPpcfX
vOdY+TpmOebesxQ7lb+03DX6sv5fP4OT3npWPX9yvXdp+Xe1R0uO64qdffM1
Ffs2NtaY7/7nW6j4qM/p6ee5sp0ldtr0PdvQ48GV618G7PRsypgvuNZh1trs
+V6iT+IrrXap6papfC051mBniSzm0rQyb22mfTTw4PPYT676I8neuu72irB2
obXd7WdiD1lrxf7nP/8ZjZWo5RzDxWXjwfyd9qoUly5+ydr3vWcG39Yu/8c/
/jHsM/bnP//55N577x3kSIaeQ46uO32Xjoyj77JO9pj9a/Vl9GPl1j1Z1HtS
f9ZetweN/P3whz8c9rmqe0LO+YM9g3wSFyE+uKfrpmz5oXTXUuyMYVNMh/U7
1RF5qBtrGOIurSzaU5rsp5G24t7U6caD5+87Zjnm3rMUO7WNaTvmcsCKNgw3
2R+5toF8po/pN1zAB7y4z/3ZP2PjwRcLO/vmi05Ut/ZBVs/sqr2Y0r+uPKit
dziRll6OnaCjPDO2Ovp6adnOEjtt+p5t6PHgOdsx956p8rT3HQI7vTxXfmMv
JdwpuiL75Yxx4GrXYQBm3MeuuDd7Za+p97ky7douptLPYSf1X3mh/fPOa1/l
2qbYdD5p8/ie/exnD+tZPPaxjz35+Mc/PuzthwdGn1cff+sbaWO5s/dArfs2
XqY3rugIz6ttp/aPgokxPE7Fpaf81W+X/9g662zYQ+FhD3vYyate9aphH7Fe
m04+fve73w3r3zmtha5/I+blyU9+8uA3fc5znjPEgvP/+/+JT3ziEA/jXWN7
LlTfdNsfTF+xjadP2dr7I//sW/+hD31oyOvDH/7wYS/O+LTaOTqt7sq7Eh+c
eXI9XTdlyw+lu5a2xd4pv3B948aNYb8DdWL9oWc+85mDDaryyGf2DCFHe/lo
K9rJIx7xiGGPZfwm+/scgsv07j0PDnCsfB2zHHPvWYKdtj/DPtkf4wtf+MKw
9tPjHve4kxe84AXDtdbPFx0ZH6A2Y285GLMHjWdoixsPvnjY2TdfdAC7+ZnP
fGawpXBi7joMjM2/iX7Fne27bT0xWLF3vT2V2YrooLHxyTVYWJt+1zrt2YbK
g/mZemnWvmeqPO19h8DOmE3xqc3jwfwj73jHO4b61+Zf//rXDz6z1i+YceXg
4o9//OPgH7XOmPusJaIvdFV4cJVXeHDiInr675g8uI1x8F3dveUtbxn2k8WT
ss9dO56X/mjaY+WT4VyxAcrWix+ofaBWH9Q20XKR+ow2vrXen75V8ldtU57b
xu2EK+I41iN54AMfOOzzE67XttfkwdrQ5GW/dzKz9y7dZa/w+973vidvfvOb
B76lPvz/iU98YsC3Pl6P21f7m88q63C4ytVih3tzU3N/9vGUPzxf+b785S+f
7tXZ8u2WEyQP4cF0NG4w1S56beRQumtpW+yd0TvKRcfY9+s+97nPyf3vf/+T
j3zkI7f46CP3lN+9X//614c1lO2Fer/73W/Q55F7jTmaytdcOXr3ngcHOFa+
jlmOufcsxU7lLOmbGzuzLqW6f8hDHjLsVxQ9kvvquB8saWf2DYAxfWM+nl5c
1MaDzx87++RL/SUWhg14ylOeMtT5gx/84JNPf/rTt8VT1XE9/ogPf/jDJw94
wAOGtXUf/ehHD7y4jq/35qHMle0ssTOVr4rxy86Dp55d43l/+9vfDmv84gHW
ytXu4x9s46NwN/0dPjS6xeleey1XDrM2X2Nl2rVdTKVfg53IKnER58GDaztM
nbj3ox/96GDfn/WsZ51ygXbf0HDJug5Ytf1JKz5ADKl9z9tY/5Zft7GYvfVi
6jvzvspre/7pmu8as1U/K35z769//euThz70ocPefPoHrZ1yxj8ofoJPsfL9
f//734MPAJbf9a533RKHDet33nnnEEtRY01T7p5/PWX3/W9/+9vJN77xjYHT
Vl9u9bvXmKTKiZM/a//aa+Vb3/rW6V6OvX5FxctV4sG1v6Tf89rXvnbom7A/
sK/fEqxXX7hr2pV9y/XXcWD7g4o1acc+3DOVr7ly9O49Dw5wrHwdsxxz71mC
ndqHTNtNLP0dd9wx+OvYN31KGGrjxaNTYMmYEJvGx2AMAV42HnwxsbNPvlL3
bAO798IXvnCYU0xP0Ct8H218RPSudU6tpfqiF71o6I8//vGPP/nXv/51y7hq
tbVLy3aW2JlqaxXjV5EHx+6mTtUZG6/twwBexT/MZrbzBTJuZH81Y8XS0y32
G64YiW9lV31Y0+/aLqbSr8FO9ON58mBH9Rf6dK99DvEj+zKrr9Rn4iJ8Soc7
hUP77lrt54iFsW+0vBgLiC2p+6D7dJ+z7qVd91FP3zp2CPfLeyp/rBw040fJ
X+Xy+c6fys9b5+bmWcoJj/w3r3jFKwYb1/pJnSm3uF/ctPpU6UA+xvDgyC91
j2ezjylj7pPuv//972n+6xlftTXI8fPIJWNl4bKJdVE+z0ua6mMOD7aOYx3T
HcPuVePB1b8Ln/rg4kVwGzaIbz/YCS7znf9ffIuxE7qNT/Dvf//7bbEobf7W
2qPevefBAY6Vr2OWY+49S7ATrlH7QU6YN9Zj3EBf2Wnt+rS11H/0pH4yvBhb
0ubwYL7CXgzSxoPPHzv75iv1yv6++tWvHvQkjNh/0x4SwUmdN+cabih+7qtf
/erAm/Wz8eaKjbrOz9KynSV2ptpaLcdV5MGOdoxWjB1d8da3vnVo+/HxV44T
3UJXvPOd7xzsipg73CE8eJf18ubKtGu7mEq/BjtpKxeBB1cfafUHP+1pTzv1
BztxKn2b733ve8O4urHB73znO8MYvz1B8MrwMnNB6HxtX31+97vfHXglH2n6
PvicNmAcSJyp/UXE4Vb/qBOfFLcslk4cHr8r7safYi91esXpWYnjkAdpXRNb
I04nz6RXjGN6L/30ox/96OSf//znLf5a5y9/+cshbuDlL3/5kK8eD44+IpvM
rQofV1ZcMzw4mHf4TrY1HsE9f/3rX0/uvvvuk/e///0nn/zkJ4f9uMk1fB5v
1k7E9dqT+/vf//4ge9dTPvXiuv7M+973vpN77rlnuNZyZT4s7VIsdBtr3cPu
VePBVSerX/5gda7fo87EcpIbuStj7A9fvv4NW6WecGZjntpG7Uv1YoTX2qPe
vefBAY6Vr2OWY+49a7DTxmlpSzDw85//fIgrN4bgd439Cw+mW+hjbZIviI9H
vCD91Hv+xoPPHzv75is6lq2hT37/+98PceRwwtfLLkefpn/Nb/S85z1vsE32
6GSD8WA+4uoLrOOXS8t2ltiZylfF+FXkwfXZ4ba4EB5AV4j51v7vuuuugTPU
MW3p2VXjjPBivEk8jX3Wav96i4tYdqzhwY76XvLm49AGn/70p5+uq4VfGj8X
E4cfwzBuJ+5bf8V4H/5sXQn34J2vec1rhjFAPv6Pfexjw/03b948nQ+LP5sr
8vnPf37ga+aUiZcWIy6Nedhf+9rXBr1hfMicPX1l/joczFoH+LB5COaz4THu
ib9aP4wOetnLXjb0v+AOFsn8gx/84MB58OvnP//5gy9QnmqcxBIeXOMNql/H
M/D3Ni4iGK5xIfKrnsjCXCs8+Kc//ekQS4aLyS954sx8SO9973sHP7W4s899
7nND3CGbqi2Zp0Xu3sdnieObm/fKV75yKF/VpS996UuHODTxFTUu+brEB9cT
bsn5D3/4w9BnE+fwyEc+cvDj1fga32Eoc+m0FX4bPNh4wJwez/WKlxofX9O1
8t9HdnPy6qW/zPZoyXt2wY4DBuIP/tWvfjW0QX4+fp6f/exnpzYt6yPBEB2p
jfLz0AfsoX59jeOqOmUMp2tksQ+XWfOeXvrLjp198xUdqw+EA5nzz97R2+qe
DqnjkOwV/kuv4ALGouiVzCFpMTEVH3ze2JlqazX/V5kHVwzwbbG17O8b3vCG
07g7frw6JuDzAx/4wJBGnwh/oyvwovDlyGltvsbKtGu7mEq/BjuR00XgwfX/
Hg/OmDqdbzxPWzbWYz0Q/JA/UiyL9o0LJCYBR8WzcEF+tcyj9x/+zK/Jf8K/
5r/41t70pjcN+RAbzq7gI97Jf/mLX/xi8KuIodJnci/el7ib6s/1TPwWz0sc
BE5rfQ6x6vEbm9OL03luMEkm4cG4dOKDe/UcbLa2TNmUXf/v3e9+9y08uHJg
Jx87Pk//ybf/fGbvSVzdmktsq3nIeL86SEyJ9PL4xje+cagLPDr22Hw/dto7
agyx/oH6+eY3v3nlefDUM51kFx7M7uh/6MOREY6s3PH5i3fP/iH6U+wVnIiL
GCtna7/amNDe3JeNB/ffszT93Ht2xU54sLik3/zmN4OPQAwZvNBr9FaNS7K2
IP+P6+bLsm04s/Y8ZtPOm8useU8v/WXHzr75ih6tPJjexn/oi7e//e2n+9HT
32wTe8gWhROzacYNejz4UJg+Bnam8lXlcxV5cH1+fE7WP2NHcDx8xhxZfOaz
n/3sLTGbuBqdYlxcTDj+xh/M31V58Jp6nyvTru1iKv0a7Lh2WXhw6kn/xRgg
3yyO6Jq2jO+ZC6CfI04hccM4HT+Z8UIxEOFl5k+yG2IZ2BBz9W/evDnwaeP9
3sF34jn0g/Ek8Zeelzha7wxHx8dxcOMJN27cOB1D8J0fFD9xDWcnb+VigxKH
jB/SN9plYhvI5Ng8OLySDJ7xjGcMfnb1lfzLC9spz+JLxIN4Bj9S5JrYadfJ
mB0mP3wu9UaudC/uVmPLNh7c58Hk/4Mf/GBYC007gNP0NfTzjE+kL6/8ZAuf
1R9cZZh+WZ2XmTpI+6rxp23eDiG7OVn00l92ezT3nl2xkzg+OtaYi++4bp0P
nrrGk+kPbVZbxn9aHtxygDHOM5VmaTmW1ulSWYylv+zY2TdfPR5MXxgTpbvZ
q8ST059sIg4EJ+5j6+gea/N5xhQe5rAwhp2pMu2Dnam2VvNwXXiwsWg8wFh1
uC4dIF406wdICxvGbukJMZV8MRsP/t/jIvDgxGfrz8qruAR1G9+iOV3qWZ2J
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
FdmQkev8OPw2eBQ8ebZnie9yLbLjM+GfqvHFc2XaBzu9vny+1zThwezX2jZ9
iDpai4Ve+srl2rgVvFWd4z4woI7wYvwifThrD7Al0YUwoL/ElsBBeA8M0Itp
87tgekx2u7SLQ2EnMoNReD4PHlx9m7FXmZNRz9iAjBMn1q+O42SvLWmio/G6
PC+cosbS+Z1nh4/Ll/SJF85eGXlGHZvMeFnklutZa6JXJ/F3xj6l/5ZyVR9W
9nWTx/h62vjOXtuKHJM27wr/r7q7crI2djhlbmOha90kXcpS70mbiT5UR5FZ
6jX3Zqw/ea/rd9Uy5nlsNz+9taI88zLw4NM29T+37pOcuZSRad2bJHjLnKRg
pGK6fsaPmTU/XMNtjJ9EztF5OeMPrn2Q4HlOp5w3D66cPXKqeqW29eC/xgoE
p7VN19jpPHcfvb8Pdqp9q7qixhDV2KvkOT6fWsboqoq56NHoGuNCxoD0lfKe
3Eefs6VVVxzKHh0TO2kvaRftnNyaPjrW9/gHYpsi/6qfapzaWZRjKdYS0xd9
H9tY7WD1Haauo5/zX8YTcp//YxvNN9e3ih6Jjmf7xTZGn4UHV7tzXjw4R3iw
+e94cJtmDTYvCg+uei62I37e1E9ifaLj8p9r0ZtZHyD1Hfz4jOx2wfSY7HZp
F4fEDlkZB+MPNubeYufYPDh5i57J7/ZsbUHt99TYpGrb23iF6v+pei2YiJ6s
c5CqHa16rvXxJj+VF2f+emvT8n/FY2xNdHRbxuQ/8kie2vaU71VHt/HteVct
f81jq9eTh8pBq5+tyjbXW19Rq3erXOuZstV3L+XBa9vRefHgthz5HvxFvvWd
6UdUOeaZPRnXfg3Z8M1YV6L2n9JXw5v57Y2F40DB7VKdchF4cIub1pcbGde2
XdtRb1yntq99/R/7Yif5qzqsHbNv5+9WGdQ2FpyF99Tn+C/7R1o3q44Z8I/e
cccdw/h2XVeyXVd0H3t0LOy0urznj2wxUmVX66DGpLX26NjlWKOnejak9rer
3qhnvVbLlbquvhsxfXffffct9sl8O7Y/e3TAjXT5XZ+9pg2swc6Stua3MVj+
YPN+zqOO1r6nl761KdWuhMfWcdzoidRp1X0V3/6v+rH6ZK6SPzhlrzy4pj0L
HjyFqXqO/Z96Sp22PKDWa8tjqwyk6R0VJxVn1ca0n3n+WD23Oqq1s/V3zWPL
f3rtqX5vsd7LZ21Hbbnrc9r767VWruFw4bB1XNH9dc5yLV9b38nHUh7ce84Y
7g+pu9a0xfZZvedV+VR73MqhYqX9bDmQsTBnW3e4jNgfY+J8gGLKjX06eljZ
R3a76Loldi9pKtZ69/XactpItSX13irLXcpxCOy0XDN1Gt2WPlS9Xv9rdVXV
C7U/kE/9InOaxD1VP6D4LXMyjZeKSarrfR/CHh0TO3Xd04r/Nn2vT1l5YB0n
aMdOzqIca/RUa0vGrtXP1Gfta7V8ucpQvKL4q/St3Cs+JzgxR0+cnDk+xtgz
r6aOZR4DO2361jakrFlDFw8es0PHrKO1WJiTV237lcO2tqPlQ61uafVCxXv0
7C6YHpPdLu3iUNiJLIxZ8AVljeVqd4/Ngytv7ck2Z9VFvXbe453VV5y0rf+n
Hf+s72v9wPX5ua/qwnCW6nOYqreap7YfVz9bPVXz0Po1Wp1ev7f+gTGuXm1l
T8Ytnlr70vPFTenjWraWsweHvXddNh7cy88Ylnt1V/19vXK0Mk3ajG0mxqem
zdhp/HsZRx2zU/vIbhddt8QetXLr2b2Kv6pHqn+01fetHHcpxyGx07bHWqY2
r20fvrav1ndQbV/GcTIWWn2jGS/NmnKVzxzCHh0TO2276Om+qlva9tprWy0n
PqtyLMVaW4YxexHfcO1b1TQ9+1Tjw9NXSr86vuHoGzole3xXXM2VaR/s9HRj
y4OVxbz77BPb0xnHrqO1WJjSDb367+nE6IyKhZ7dHGsrFe+76sNWdru0i0Nh
J2Wq/uBD8WDtwh4J5tWa+5R4E+2kd9b/eulyLc9pT+3M2abNtfq7fVZii8fe
W89cb9/Vpp9LM3Xv0mckz73ytPKMfFo5jeVlrl5aWfTy0Tvnytp7VpsnaczJ
48c0X9l4v7G4qXJMYWnNfWPy3QXTvWf26r2VydjzW3xX+1P/q9ekqf/Xeji0
7OZkMfeeqbNiu4e3sXbW6oP2/1Yea8txKOyM5bHWWa6nT1PlMYaliolgAc/N
c1ocJF3FVu5bWu9L6/TQ2GnbxVj6HoaqnKosajs6i3LsoqdanTKWl15bmJNn
ZEkf9/CWT5hqbdBcmfbBzlw55EfezZfkSzFv9jzr6JDY6emuHqbH9EKrW5a0
qaXlWFpH+8piDXZcwx+sd8IfnHlyh+DBcGZtIuuVebZ1Ls3DGTuf9KQndb/P
pfdZvy+5r5d+7N5d89Xmce6+te8ce8+xZbdvHR0yX+Z2WsPIurpj+erdfxWx
M5Uvn9pgTnLzeag6vYzYmavTQ5XjMmFnibz9Bz/8JhVPx9BT1x0756mn1tSP
dWby6cz761nTJv2u+Voru941+LWOnLVWrZPnc225N+zsrg/n6mhfWazBDizg
p9aeCg+uvvJ9eLC+hPkU1muyh4VP61H67J31v6l0bRqf9fuS+3rpx+7dNV9t
HufuW/vOsfccW3b71tEu+bJufXsaZ3D6bu6O+Bvf85mz996riJ2kiwwih/xn
v5Oc1tT32ZPXVcPOrnV6qHJcJuwkj1MyD5ZgKDjze005ltbpdcfOofO1to7G
ntue9LD/q04ONnLmeUmzBKf7YCdpqm6rNsL/1vH33XqSwTMs13xv2FmPnaXn
mvesfeca7MAEjmodfmul20utt5ftLjw4czcSR9Wu09SedR50/T6Xvl27a8l9
vfRj9+6arzaPc/etfefYe44tu33raJd8tfOZ69wdYxp1rbzErbXzY686dsbS
1zUC6ppsNfazle1Vws6udXqoclw27NRz6p7EhSZG9Bh66rpj5zz11Jje7J29
Z7Rnb13IuTIdwsYFo1XX5X960bh4sHwR6ugqYGfpueY9a9+5BjsVm3Wt2UPw
4N4cjqkY6LOeQ7BPvPXaGO5d48cPFQd+SNntW0eHSt/Oe+/N579O2BmL/z9E
vi4rds5yvspVwc4Sedd5NHP37KOnrjt2zlNPjaXt2fkxDPXONbI4hI0bk+fY
HNrzrqOrgJ2l55r3rH3nGuzU9Xh81vmgFfO7+oPrGnRzR31fr72NpU9Z1tzX
Sz927675avO45tg1X7VsS56/i+zm8jX3nl3y1TtztLju4Xzpe5bk76Jip01f
2/2UjNr/1rznMmBnyX3HLMfcey4aduawsKadTeVrrex635eWZ5f0FwE756mn
1mCnp1PG+O/UO5fmaxfZjWE2/HdNvqbes+a+q4qdpcea96x95xrsVBz01gvJ
sQsP3o7t2I7t2I7t2I7t2I7tuOzHxoO3Yzu2Yzu2Yzu2Yzu24zoeGw/eju3Y
ju3Yju3Yju3Yjut4bDx4O7ZjO7ZjO7ZjO7ZjO67jsfHg7diO7diO7diO7diO
7biOx8aDt2M7tmM7tmM7tmM7tuM6HhsP3o7t2I7t2I7t2I7t2I7reIQHb+d2
bud2bud2bud2bud2Xrfz/wLaMhI+
    "], {{0, 295}, {706, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{555., Automatic},
  ImageSizeRaw->{706, 295},
  PlotRange->{{0, 706}, {0, 295}}]], "Input",ExpressionUUID->"3f7bbb7e-1184-\
415c-b4c7-711fbd344bc8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DiscretizationCount", "[", 
     RowBox[{"values_", ",", "discretizationScheme_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "intervals", ",", "firstInterval", ",", "firstIntervalCount", ",", 
        "restIntervals", ",", "restIntervalsCount"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"intervals", " ", "=", " ", 
        RowBox[{"Partition", "[", 
         RowBox[{"discretizationScheme", ",", "2", ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"firstInterval", " ", "=", " ", 
        RowBox[{"First", "[", "intervals", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"firstIntervalCount", " ", "=", " ", 
        RowBox[{"Count", "[", 
         RowBox[{"values", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{
            RowBox[{"First", "[", "firstInterval", "]"}], "\[LessEqual]", "x",
             "\[LessEqual]", 
            RowBox[{"Last", "[", "firstInterval", "]"}]}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"restIntervals", " ", "=", " ", 
        RowBox[{"Rest", "[", "intervals", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"restIntervalsCount", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"values", ",", 
             RowBox[{"x_", "/;", 
              RowBox[{
               RowBox[{"First", "[", "#", "]"}], "<", "x", "\[LessEqual]", 
               RowBox[{"Last", "[", "#", "]"}]}]}]}], "]"}], "&"}], ",", 
          "restIntervals"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Prepend", "[", 
         RowBox[{"restIntervalsCount", ",", "firstIntervalCount"}], "]"}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"QuantaMatrix", "[", 
    RowBox[{"values_", ",", "class_", ",", "discretizationScheme_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grouped", ",", "quantaMatrix"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"grouped", " ", "=", " ", 
       RowBox[{"GroupBy", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"values", ",", "class"}], "}"}], "]"}], ",", 
         RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"quantaMatrix", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DiscretizationCount", "[", 
           RowBox[{"#", ",", "discretizationScheme"}], "]"}], "&"}], ",", 
         "grouped"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<QuantaMatrix\>\"", "\[Rule]", "quantaMatrix"}], ",", " ",
         "\[IndentingNewLine]", 
        RowBox[{"\"\<Values\>\"", "\[Rule]", 
         RowBox[{"Values", "[", "quantaMatrix", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ClassTotals\>\"", "->", 
         RowBox[{"Map", "[", 
          RowBox[{"Total", ",", 
           RowBox[{"Values", "[", "quantaMatrix", "]"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<IntervalTotals\>\"", "\[Rule]", 
         RowBox[{"Map", "[", 
          RowBox[{"Total", ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Values", "[", "quantaMatrix", "]"}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.760194525668515*^9, 3.7601946888018913`*^9}, {
   3.760194733635207*^9, 3.760194745713604*^9}, {3.760195136371607*^9, 
   3.760195136677463*^9}, {3.760195327691486*^9, 3.7601953343595667`*^9}, {
   3.760195373504966*^9, 3.7601954056863737`*^9}, {3.760195471387947*^9, 
   3.7601955294967413`*^9}, {3.760195850652851*^9, 3.760195850912105*^9}, {
   3.760196154991727*^9, 3.760196155271052*^9}, {3.760196893759357*^9, 
   3.760196894128714*^9}, {3.7601969935302057`*^9, 3.760196995606772*^9}, {
   3.7604513455223923`*^9, 3.760451368450329*^9}, {3.760451515847024*^9, 
   3.760451545496522*^9}, 3.760451588089137*^9, {3.761509884530527*^9, 
   3.761509885578031*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"026175b0-253a-4890-bd94-a32a4da54e63"],

Cell[TextData[{
 "El puntaje CAIM se determina a partir del m\[AAcute]ximo valor de la \
columna r de la matriz Quanta dividido por el n\[UAcute]mero total de casos \
que pertenecen al intervalo de discretizaci\[OAcute]n entre ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["d", 
       RowBox[{"r", "-", "1"}]], ",", " ", 
      SubscriptBox["d", "r"]}]}], "]"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "478e4c51-38fa-48b7-a22c-e41b7f7b199a"],
 "."
}], "Text",
 CellChangeTimes->{{3.761606804167459*^9, 
  3.761606882984459*^9}},ExpressionUUID->"b0bca2f2-4201-4d9a-90a9-\
fdb84e239876"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ORm0Xvy80L9qmxGy+cPSdj8ub2zcluDcpUu4JD0unsXx/WFY6NUBVc0YtJz/
RKd21pwzY+DAF6L+rFs6PJr7ni6vx4wJPvDx9ob3dx8+GDspEAeeGu+VQfRD
Hxkhvc9ry5go2pmG5d87GwaL1NNeaNhhGZ5+84eZiyuTa8raBkyYVlhczP5O
RX1td7bB3/u1nTknRkzg174IGckrLPudUd33LInDDi9v7C6wZojk3Sq0l/VF
VMZotY3wLD5scIWpiSlcN3wovt2Iey9L28rvh6XtTMMMe8K0lIWT+X0Ro7Tq
i5C193U2k7enCRzhfa5wRVLbjJDNH5ZdE+ao0qQdXFxc5Mcfzmhcyx4WfJ7s
HmmijvdI4ofz0IzhodyAwzo8WoL3x/0xqE8v9OrZEz2/++iFv9xHYe1NY742
iD7oIyNyTniivGK9CqbDKmg7jeC7ZF3HzOYtMeeGssLj63giE0FNTLqs6d9u
gXZnMy3XepJi47G2y9e+CMUbxZGB5bjySl4GFP7L48r3/WMxZmvhPk3ZOEJp
X0TZ3tipthFejIfBzcFw5Ve/vWr+rnNOwLO8vC/fhOmAVQY9YVr6jr4I9mMY
3Moo+sgqDkNEkT4C7TJCPn84r39q7TcDIESI294PFcsPxGEd1wiUjo914e61
TF036PYEhJQAfWRE6j89YGYib/O18zyh9RhR3YnwaPHvqNxhDg5GRiJSyXHY
t7U8I3hW6H9Iw5vQgu3OzebhgbYNB2n74VGgL0LxpLjr10jW7sH8vhSvChTL
7KdjmDhyA14Weh3pnIoqXJnEA9MuVIN1a0W4ObMehDxrDDyi5nOm/oMeZop6
n50nThjuhGlN974IFolbuyvWVRKg+rhv+8i0ygjp/OG8a6KJsr4Iaf/4dDTp
thEfdByuwX7ciC6m3PP/sVy3JyhlsnsOOn6oQxl9ZETyVjdFRghQa8pVte3m
yknwcuMo+Knsz1XyiLeb4FazHly6dEEXFYerczX5Gj8mpui8LkGjsTvyeXzy
vohqXNmibctBznkf1C3YF6GQsq07zLn3IpCuZZP3pGwKTk/zxMonRb418V34
NZL3RUjbp9V/p4q2d54NBqkbXJu8FW6KjBDUmgJdpx1JXm7EKD/tvx/NFemL
0GZdRkkcNnQtK5+rY9MNm5XM1dEmI6Tzh/OuCUfv80rvg1J29EP7Bbr1RUix
nzbjT2lGtF2q4zOUrtIu7+gw3oyQtjXZ8eUZUXPyFd3KDNEd+LXqirWazrtj
E3FwUAP02FL8vC/x/QA0Vsyhaux/T6O/X2m7s7WiL6L/Qe37Iu4HtCzcF6GQ
e3G8bG0Qntn/sEUx/io9ahaGLYn55juTr2kg7YuohFGnNKn/SPtAmoDhWcJ9
v7oJGCfgaSdvaxLUnIwrup0w3PFrha5rdZl3pynd+yJybsxCA+l6MDxztAy+
r/Sa1CYj8tr9pPMi3PcqnyuT+egCrqlaC1gD0vU6OppK25rW6fwchHwvfWQE
G583H1k6Bv2IDvsCsfi4fyBaeB5FMdshFJJ+bhyadliKorff3zxzAvfeTKUZ
wUfl0ZEatIPl4JyXot3Z3BUbErTti4jDGteGRfoi5PLam/PH52Regf/Q+bit
5AvLyyle2b+wQ6PlCCV4t7I9GK6+9OfmT8XXl9h4rHc1l4/3KjcI6pqmlD7F
x/0Y2MITRzU9Yboo0heh8aqM4udY2dFKtv6UTbtFuKNi4rLmGZHX7lfMvIgS
IJ8TzoNln906PT7jUQTWLQ9ByOLFWPzdRwiWrNiKS9quzUJ+eHoZ+yp5gxUu
8vEjwnozcVPLtgs28QiGNe+DbZr+7WXf4uoczph7U4PCLfsIBpaT55d5rx2q
16LMI8pr4+Hq/M2DtV9jLW0f/q5VtC8i771EYIgtX3Yv6nHwM24GD0XANWUF
2Nf+UWnbtKZ7aWYfHQwbnnTs5WM19SUJ3qxwkc+JF9bDTO1PGI4Ma44+24qO
NS5Z+ePltOmLYJMR5dsMZXg8MDU9cbiY8QYaZwR3TeTNxdRp3S4N5UZPRHWB
vC6uPe6c7hiN9s4t0Lx58xI4WqBlm24Iukg73P5q9DOHjkVyhCccZfv51MXk
aC1WnMmKwQq3tvA6ruleaTl4sNgFTced12wvB9FVTKklkP99t1kCdcuN5483
la3Rqv06gNnS/SJ6hH3TFyEjXQ+uCSNr92o+ZAwGzbqo/DPk948K4TTzpsb9
O/J2NT4qjjqltr7EJkfAUzpfg3uNupOjtVgjKAsxK9zQ1uu4+nliuR8Rc/Ey
HiXp0uGhQ18Em4qbIa6owOfuxesNw85nxd9DaJoRBa8JbdZo0lb67j7c5zVF
xzXxenoFQtTT23pNkjjsHVgNDHf/ZukcgBsatPGySZcx360NPLY81rB9isui
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
    "], {{0, 145}, {393, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{312., Automatic},
  ImageSizeRaw->{393, 145},
  PlotRange->{{0, 393}, {0, 145}}]], "Input",ExpressionUUID->"e93902a5-a53b-\
43e2-a675-f0f09c9e425a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxR", "[", 
     RowBox[{"m_", ",", "r_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "m", "]"}], ",", "r"}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CAIMCriterion", "[", "quantaMatrix_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"Transpose", "[", 
          RowBox[{"quantaMatrix", "[", "\"\<Values\>\"", "]"}], "]"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{
         FractionBox["1", "n"], "*", 
         RowBox[{"Sum", "[", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"MaxR", "[", 
              RowBox[{
               RowBox[{"quantaMatrix", "[", "\"\<Values\>\"", "]"}], ",", 
               "r"}], "]"}], "2"], 
            RowBox[{"Part", "[", 
             RowBox[{
              RowBox[{"quantaMatrix", "[", "\"\<IntervalTotals\>\"", "]"}], 
              ",", "r"}], "]"}]], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "n"}], "}"}]}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAIMStep", "[", 
    RowBox[{"values_", ",", "class_", ",", "discretizationScheme_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "valuesAndMidpoints", ",", "BList", ",", "mutations", ",", 
       "candidateDiscretizations"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"valuesAndMidpoints", " ", "=", " ", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"Sort", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"values", ",", 
           RowBox[{"Map", "[", 
            RowBox[{"Mean", ",", 
             RowBox[{"Partition", "[", 
              RowBox[{"values", ",", "2", ",", "1"}], "]"}]}], "]"}]}], "]"}],
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"BList", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"DeleteDuplicates", "[", "valuesAndMidpoints", "]"}], ",", 
         RowBox[{"Apply", "[", 
          RowBox[{"Alternatives", ",", "discretizationScheme"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mutations", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sort", "[", 
           RowBox[{"Append", "[", 
            RowBox[{"discretizationScheme", ",", "#"}], "]"}], "]"}], "&"}], 
         ",", "BList"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"candidateDiscretizations", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"Quiet", "@", 
             RowBox[{"CAIMCriterion", "[", 
              RowBox[{"QuantaMatrix", "[", 
               RowBox[{"values", ",", "class", ",", "#"}], "]"}], "]"}]}]}], 
           "}"}], "&"}], ",", "mutations"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"candidateDiscretizations", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"candidateDiscretizations", ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", "Indeterminate"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"First", "[", 
       RowBox[{"MaximalBy", "[", 
        RowBox[{"candidateDiscretizations", ",", "Last"}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761607284738703*^9, 3.761607305930736*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ddc971fb-fec0-4418-912c-96c60c8c1434"],

Cell[CellGroupData[{

Cell["Ejemplo:", "Subsection",
 CellChangeTimes->{{3.7616069452796087`*^9, 
  3.7616069464992523`*^9}},ExpressionUUID->"0a1098cb-78a1-4f53-87c5-\
5379c8054ec1"],

Cell["\<\
A continuaci\[OAcute]n se seleccionan como valores todas las entradas de la \
base de datos correspondientes a la longitud del s\[EAcute]palo.\
\>", "Text",
 CellChangeTimes->{{3.761606949333788*^9, 
  3.7616069781618357`*^9}},ExpressionUUID->"d353e0b5-8e95-4391-92d3-\
b95e163a31e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"values", " ", "=", " ", 
  RowBox[{"Normal", "@", 
   RowBox[{"data", "[", 
    RowBox[{"All", ",", "\"\<Sepal length\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.760195160664201*^9, 3.761655464112447*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"4196c346-a7d5-416b-ac67-eedb17f96b49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.1`", ",", "4.9`", ",", "4.7`", ",", "4.6`", ",", "5.`", ",", "5.4`", ",",
    "4.6`", ",", "5.`", ",", "4.4`", ",", "4.9`", ",", "5.4`", ",", "4.8`", 
   ",", "4.8`", ",", "4.3`", ",", "5.8`", ",", "5.7`", ",", "5.4`", ",", 
   "5.1`", ",", "5.7`", ",", "5.1`", ",", "5.4`", ",", "5.1`", ",", "4.6`", 
   ",", "5.1`", ",", "4.8`", ",", "5.`", ",", "5.`", ",", "5.2`", ",", "5.2`",
    ",", "4.7`", ",", "4.8`", ",", "5.4`", ",", "5.2`", ",", "5.5`", ",", 
   "4.9`", ",", "5.`", ",", "5.5`", ",", "4.9`", ",", "4.4`", ",", "5.1`", 
   ",", "5.`", ",", "4.5`", ",", "4.4`", ",", "5.`", ",", "5.1`", ",", "4.8`",
    ",", "5.1`", ",", "4.6`", ",", "5.3`", ",", "5.`", ",", "7.`", ",", 
   "6.4`", ",", "6.9`", ",", "5.5`", ",", "6.5`", ",", "5.7`", ",", "6.3`", 
   ",", "4.9`", ",", "6.6`", ",", "5.2`", ",", "5.`", ",", "5.9`", ",", "6.`",
    ",", "6.1`", ",", "5.6`", ",", "6.7`", ",", "5.6`", ",", "5.8`", ",", 
   "6.2`", ",", "5.6`", ",", "5.9`", ",", "6.1`", ",", "6.3`", ",", "6.1`", 
   ",", "6.4`", ",", "6.6`", ",", "6.8`", ",", "6.7`", ",", "6.`", ",", 
   "5.7`", ",", "5.5`", ",", "5.5`", ",", "5.8`", ",", "6.`", ",", "5.4`", 
   ",", "6.`", ",", "6.7`", ",", "6.3`", ",", "5.6`", ",", "5.5`", ",", 
   "5.5`", ",", "6.1`", ",", "5.8`", ",", "5.`", ",", "5.6`", ",", "5.7`", 
   ",", "5.7`", ",", "6.2`", ",", "5.1`", ",", "5.7`", ",", "6.3`", ",", 
   "5.8`", ",", "7.1`", ",", "6.3`", ",", "6.5`", ",", "7.6`", ",", "4.9`", 
   ",", "7.3`", ",", "6.7`", ",", "7.2`", ",", "6.5`", ",", "6.4`", ",", 
   "6.8`", ",", "5.7`", ",", "5.8`", ",", "6.4`", ",", "6.5`", ",", "7.7`", 
   ",", "7.7`", ",", "6.`", ",", "6.9`", ",", "5.6`", ",", "7.7`", ",", 
   "6.3`", ",", "6.7`", ",", "7.2`", ",", "6.2`", ",", "6.1`", ",", "6.4`", 
   ",", "7.2`", ",", "7.4`", ",", "7.9`", ",", "6.4`", ",", "6.3`", ",", 
   "6.1`", ",", "7.7`", ",", "6.3`", ",", "6.4`", ",", "6.`", ",", "6.9`", 
   ",", "6.7`", ",", "6.9`", ",", "5.8`", ",", "6.8`", ",", "6.7`", ",", 
   "6.7`", ",", "6.3`", ",", "6.5`", ",", "6.2`", ",", "5.9`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7616554643530693`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"d225f8fe-e151-47a8-ba98-13a2e3a86038"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"class", " ", "=", " ", 
  RowBox[{"Normal", "@", 
   RowBox[{"data", "[", 
    RowBox[{"All", ",", "\"\<Class\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.761655467875929*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"82e3babe-4047-4e3b-8030-e3db71d67401"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-setosa\"\>", ",", "\<\"Iris-setosa\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-versicolor\"\>", ",", "\<\"Iris-versicolor\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>", 
   ",", "\<\"Iris-virginica\"\>", ",", "\<\"Iris-virginica\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.761655468400868*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e91fda74-e8e0-488d-b001-5c226f15d03d"]
}, Open  ]],

Cell["\<\
Se comienza con un esquema de discretizaci\[OAcute]n en el intervalo entre el \
m\[IAcute]nimo y m\[AAcute]ximo valor del atributo a discretizar. Esto es un \
esq\tuema de discretizaci\[OAcute]n donde todos los valores caen dentro del \
mismo intervalo.\
\>", "Text",
 CellChangeTimes->{{3.761606982993877*^9, 
  3.761607052128029*^9}},ExpressionUUID->"b4a57f83-1c2e-42ef-bfd3-\
88dc3257eee8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scheme", " ", "=", " ", 
  RowBox[{"MinMax", "[", "values", "]"}]}]], "Input",
 CellChangeTimes->{3.7601951755121202`*^9, 3.7601969050327997`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"64b207ab-16a2-4309-ad32-fd296f50167e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.3`", ",", "7.9`"}], "}"}]], "Output",
 CellChangeTimes->{3.760196912405512*^9, 3.760230497160535*^9, 
  3.760395818115844*^9, 3.760446321165061*^9, 3.7604473080117683`*^9, 
  3.760451249048038*^9, 3.7608797003061857`*^9, 3.761510457265328*^9, 
  3.761655502999865*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c77153d6-1607-402d-b540-ab442cd9bbda"]
}, Open  ]],

Cell["\<\
Visualizaci\[OAcute]n del esquema de discretizaci\[OAcute]n. Las \
l\[IAcute]neas verticales representan el m\[IAcute]nimo y m\[AAcute]ximo \
valor del atributo.\
\>", "Text",
 CellChangeTimes->{{3.761607057528411*^9, 
  3.761607081066615*^9}},ExpressionUUID->"184cad6b-5b7b-4444-a900-\
17d73990bd2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "\[IndentingNewLine]", 
  RowBox[{"values", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Monochrome\>\""}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Value\>\"", ",", "15"}], "]"}], ",", " ", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<PDF\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"FontSize", "\[Rule]", "13"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "500"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ChartStyle", "\[Rule]", "LightBlue"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"scheme", ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7604463503047132`*^9, 3.7604463520281963`*^9}, {
  3.761512167325571*^9, 3.761512272943551*^9}, {3.7616070833437157`*^9, 
  3.761607139780904*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"41c9b673-1036-403d-9c90-2fa42fc057fb"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.87, 0.94, 1], EdgeForm[{Opacity[0.63], Thickness[
    Small]}], {}, 
    {RGBColor[0.87, 0.94, 1], EdgeForm[{Opacity[0.63], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {4.5, 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{54.80000000000001, 109.59999999999997`}, {
          80.70070979509475, 114.41037990932739`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5., 18.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{109.09999999999997`, 
          163.89999999999992`}, {-35.53313560471943, 114.41037990932739`}}],
        StatusArea[#, 18]& ,
        TagBoxNote->"18"],
       StyleBox["18", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[18, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {5.5, 30.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{163.39999999999992`, 218.2}, {-135.16214594741734`,
           114.41037990932739`}}],
        StatusArea[#, 30]& ,
        TagBoxNote->"30"],
       StyleBox["30", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[30, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6., 31.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{217.7, 272.49999999999994`}, {-143.46456347597547`,
           114.41037990932739`}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {6.5, 32.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{271.99999999999994`, 
          326.7999999999999}, {-151.76698100453365`, 114.41037990932739`}}],
        StatusArea[#, 32]& ,
        TagBoxNote->"32"],
       StyleBox["32", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[32, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7., 22.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{326.2999999999999, 
          381.09999999999997`}, {-68.74280571895207, 114.41037990932739`}}],
        StatusArea[#, 22]& ,
        TagBoxNote->"22"],
       StyleBox["22", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[22, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {7.5, 7.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{380.59999999999997`, 435.3999999999999}, {
          55.79345720942029, 114.41037990932739`}}],
        StatusArea[#, 7]& ,
        TagBoxNote->"7"],
       StyleBox["7", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[7, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8., 6.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{434.8999999999999, 489.6999999999999}, {
          64.09587473797845, 114.41037990932739`}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {FontFamily -> "Helvetica", 
         GrayLevel[0]}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {FontFamily -> "Helvetica", 
         GrayLevel[0]}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{3.92, 0},
  AxesStyle->GrayLevel[0],
  BaseStyle->(FontSize -> 13),
  Frame->True,
  FrameLabel->{{
     FormBox[
      StyleBox["\"PDF\"", 15, StripOnInput -> False], TraditionalForm], 
     None}, {
     FormBox[
      StyleBox["\"Value\"", 15, StripOnInput -> False], TraditionalForm], 
     None}},
  FrameStyle->GrayLevel[0],
  FrameTicks->{{True, True}, {True, True}},
  FrameTicksStyle->GrayLevel[0],
  GridLines->{{4.3, 7.9}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->500,
  LabelStyle->{FontFamily -> "Helvetica", 
    GrayLevel[0]},
  PlotRange->{{4., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic},
  TicksStyle->GrayLevel[0]]], "Output",
 CellChangeTimes->{
  3.760446352615452*^9, 3.760451249407885*^9, 3.7615121689087954`*^9, {
   3.761512240103733*^9, 3.761512273215612*^9}, {3.7616071110803413`*^9, 
   3.761607140099533*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"08c3069a-dd05-40fe-ab41-df1423c76661"]
}, Open  ]],

Cell["\<\
Inicialmente todos los valores caen dentro del mismo intervalo\
\>", "Text",
 CellChangeTimes->{{3.761607181256431*^9, 
  3.761607188754405*^9}},ExpressionUUID->"4b7c1e95-9911-4984-a530-\
3a8b9decd06e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretizationCount", "[", 
  RowBox[{"values", ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.9`"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76044633070583*^9, 3.760446340831502*^9}, {
   3.760447326273366*^9, 3.760447327980932*^9}, 3.7616071638437777`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"2a150213-98e5-468e-8d4d-2bd774e9b292"],

Cell[BoxData[
 RowBox[{"{", "150", "}"}]], "Output",
 CellChangeTimes->{3.760446341161097*^9, 3.760447328315589*^9, 
  3.7604512494567757`*^9, 3.761607168044429*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"41ff432e-da02-46da-b043-ce9b46d696a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Sort", "[", "values", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761655569363694*^9, 3.76165558241803*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4b15b4fb-8156-4d23-a43c-25f3b35ee935"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.3`", ",", "4.4`", ",", "4.5`", ",", "4.6`", ",", "4.7`", ",", "4.8`", 
   ",", "4.9`", ",", "5.`", ",", "5.1`", ",", "5.2`", ",", "5.3`", ",", 
   "5.4`", ",", "5.5`", ",", "5.6`", ",", "5.7`", ",", "5.8`", ",", "5.9`", 
   ",", "6.`", ",", "6.1`", ",", "6.2`", ",", "6.3`", ",", "6.4`", ",", 
   "6.5`", ",", "6.6`", ",", "6.7`", ",", "6.8`", ",", "6.9`", ",", "7.`", 
   ",", "7.1`", ",", "7.2`", ",", "7.3`", ",", "7.4`", ",", "7.6`", ",", 
   "7.7`", ",", "7.9`"}], "}"}]], "Output",
 CellChangeTimes->{{3.76165557145575*^9, 3.761655582618025*^9}},
 CellLabel->"Out[17]=",ExpressionUUID->"7ae6c17a-adb7-4c5e-92ff-5c18279372c0"]
}, Open  ]],

Cell["\<\
El algoritmo CAIM selecciona de entre la lista de posibles particiones del \
esquema de discretizaci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.7616073185337753`*^9, 
  3.761607343594653*^9}},ExpressionUUID->"6fd35f3d-5955-42da-8920-\
7819119d9a54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", " ", "=", " ", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Sort", "[", 
      RowBox[{"Join", "[", 
       RowBox[{"values", ",", 
        RowBox[{"Map", "[", 
         RowBox[{"Mean", ",", 
          RowBox[{"Partition", "[", 
           RowBox[{"values", ",", "2", ",", "1"}], "]"}]}], "]"}]}], "]"}], 
      "]"}], "]"}], ",", 
    RowBox[{"Apply", "[", 
     RowBox[{"Alternatives", ",", "scheme"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.761607380960835*^9, {3.7616074166671133`*^9, 3.761607418014308*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"61335098-e9ec-411a-ba86-9d5b930ba4f2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.4`", ",", "4.45`", ",", "4.5`", ",", "4.55`", ",", "4.6`", ",", "4.65`", 
   ",", "4.7`", ",", "4.75`", ",", "4.8`", ",", "4.800000000000001`", ",", 
   "4.85`", ",", "4.9`", ",", "4.949999999999999`", ",", "4.95`", ",", "5.`", 
   ",", "5.05`", ",", "5.1`", ",", "5.15`", ",", "5.2`", ",", "5.25`", ",", 
   "5.3`", ",", "5.300000000000001`", ",", "5.35`", ",", "5.4`", ",", "5.45`",
    ",", "5.5`", ",", "5.55`", ",", "5.550000000000001`", ",", "5.6`", ",", 
   "5.65`", ",", "5.699999999999999`", ",", "5.7`", ",", "5.75`", ",", "5.8`",
    ",", "5.85`", ",", "5.9`", ",", "5.949999999999999`", ",", "5.95`", ",", 
   "6.`", ",", "6.05`", ",", "6.050000000000001`", ",", "6.1`", ",", "6.15`", 
   ",", "6.199999999999999`", ",", "6.2`", ",", "6.25`", ",", "6.3`", ",", 
   "6.35`", ",", "6.4`", ",", "6.449999999999999`", ",", "6.45`", ",", "6.5`",
    ",", "6.6`", ",", "6.65`", ",", "6.699999999999999`", ",", "6.7`", ",", 
   "6.75`", ",", "6.8`", ",", "6.800000000000001`", ",", "6.85`", ",", "6.9`",
    ",", "6.95`", ",", "7.`", ",", "7.05`", ",", "7.1`", ",", "7.15`", ",", 
   "7.2`", ",", "7.3`", ",", "7.300000000000001`", ",", "7.4`", ",", "7.6`", 
   ",", "7.65`", ",", "7.7`"}], "}"}]], "Output",
 CellChangeTimes->{3.761607381612031*^9, 3.761607419851137*^9, 
  3.761655620158955*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"8525b4c4-2f45-4b52-a159-20fba570aec4"]
}, Open  ]],

Cell["\<\
Con esto es capaz de construir una tabla de posibles valores del esquema de \
discretizaci\[OAcute]n\
\>", "Text",
 CellChangeTimes->{{3.761607392876815*^9, 
  3.761607413096816*^9}},ExpressionUUID->"ffc6ab21-fcbe-41bd-9ede-\
11a44b3dfb64"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"Append", "[", 
      RowBox[{"scheme", ",", "#"}], "]"}], "]"}], "&"}], ",", "B"}], 
  "]"}]], "Input",
 CellLabel->"In[27]:=",ExpressionUUID->"37e3c534-21b6-46a5-97d2-3a27ee8dca68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.4`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.45`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.5`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.55`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.6`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.65`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.7`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.75`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.8`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.800000000000001`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.85`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.9`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.949999999999999`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "4.95`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.05`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.1`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.15`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.2`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.25`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.3`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.300000000000001`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.35`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.4`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.45`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.55`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.550000000000001`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.6`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.65`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.699999999999999`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.7`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.75`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.8`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.85`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.9`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.949999999999999`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.95`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.05`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.050000000000001`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.1`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.15`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.199999999999999`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.2`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.25`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.3`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.35`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.4`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.449999999999999`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.45`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.5`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.6`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.65`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.699999999999999`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.7`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.75`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.8`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.800000000000001`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.85`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.9`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "6.95`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.05`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.1`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.15`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.2`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.3`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.300000000000001`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.4`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.6`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.65`", ",", "7.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "7.7`", ",", "7.9`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7616074413228827`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"9014e011-8352-4d26-8dd3-c720c62af5da"]
}, Open  ]],

Cell["\<\
De esta lista selecciona el valor que maximiza el puntaje de CAIM\
\>", "Text",
 CellChangeTimes->{{3.7616074459475718`*^9, 
  3.7616074574457893`*^9}},ExpressionUUID->"ca212350-a66c-4a8e-8927-\
eb815fd5e565"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CAIMStep", "[", 
  RowBox[{"values", ",", "class", ",", "scheme"}], "]"}]], "Input",
 CellChangeTimes->{{3.760195177019133*^9, 3.7601951812156153`*^9}, 
   3.760196913882421*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"90a64fed-8f22-4d47-8440-3b888f153b80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "7.9`"}], "}"}], ",", 
   "31.91264667535854`"}], "}"}]], "Output",
 CellChangeTimes->{3.7601951814026003`*^9, 3.760195408441618*^9, 
  3.7601955326242857`*^9, 3.760196914637906*^9, 3.7601969993253603`*^9, 
  3.760395823188014*^9, 3.7604512494942207`*^9, 3.7604513773974333`*^9, 
  3.761607459047578*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"a88135a3-b50d-487f-b641-33ff6a606955"]
}, Open  ]],

Cell["\<\
Esto da como resultado un esquema donde 59 ejemplos caen en el intervalo \
[4.3, 5.5], y 91 en el intervalo (5.5,7.9].\
\>", "Text",
 CellChangeTimes->{{3.7616074624831676`*^9, 
  3.761607542345587*^9}},ExpressionUUID->"5dab6eb2-ae54-4c38-87f5-\
cc18f79c591d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretizationCount", "[", 
  RowBox[{"values", ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "7.9`"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.761607176584338*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"64ef1e32-cab6-4535-8ebf-4dfcfe3f40be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"59", ",", "91"}], "}"}]], "Output",
 CellChangeTimes->{3.761607177018009*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"067f396f-8d53-4f32-aa5c-933b9bc91fc9"]
}, Open  ]],

Cell["y que da la siguiente matriz Quanta", "Text",
 CellChangeTimes->{{3.761607650294341*^9, 
  3.7616076582061462`*^9}},ExpressionUUID->"321fc543-bb61-4074-b4bd-\
c9594cbd1748"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantaMatrix", "[", 
  RowBox[{"values", ",", "class", ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "7.9`"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7616076307619677`*^9, 3.7616076423006372`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"4d15fd06-d6d4-4aa3-8775-47da5eae7cb9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"QuantaMatrix\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Iris-setosa\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"47", ",", "3"}], "}"}]}], ",", 
      RowBox[{"\<\"Iris-versicolor\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"11", ",", "39"}], "}"}]}], ",", 
      RowBox[{"\<\"Iris-virginica\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "49"}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Values\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"47", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11", ",", "39"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "49"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ClassTotals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"50", ",", "50", ",", "50"}], "}"}]}], ",", 
   RowBox[{"\<\"IntervalTotals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"59", ",", "91"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",\

 CellChangeTimes->{3.761607642611731*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"5061cb25-2b26-4c0b-aa84-e498a7281a39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"QuantaMatrix", "[", 
    RowBox[{"values", ",", "class", ",", 
     RowBox[{"{", 
      RowBox[{"4.3`", ",", "5.5`", ",", "7.9`"}], "}"}]}], "]"}], "[", 
   "\"\<Values\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.761607663726633*^9, 3.761607673522843*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"002fc099-5e62-4d83-bf07-c9a0045f5744"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"47", "3"},
     {"11", "39"},
     {"1", "49"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.761607667345743*^9, 3.761607673714427*^9}},
 CellLabel->
  "Out[31]//MatrixForm=",ExpressionUUID->"192fb164-2810-4bb7-868e-\
bb54849bd2e8"]
}, Open  ]],

Cell["Este proceso se puede repetir varias veces.", "Text",
 CellChangeTimes->{{3.761607545928381*^9, 
  3.761607553562449*^9}},ExpressionUUID->"8e589f94-3eda-4a14-90cc-\
de2fb784877e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CAIMStep", "[", 
  RowBox[{"values", ",", "class", ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "7.9`"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7601969856119823`*^9, 3.7604513883961*^9},
 CellLabel->
  "(Debug) In[53]:=",ExpressionUUID->"4f017426-d843-4c2d-83cb-0657691c0e04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "6.199999999999999`", ",", "7.9`"}], 
    "}"}], ",", "26.636271740334553`"}], "}"}]], "Output",
 CellChangeTimes->{{3.760196986320682*^9, 3.760197000662076*^9}, 
   3.760395824467022*^9, 3.760451249539896*^9, {3.760451379075355*^9, 
   3.7604513890961723`*^9}, {3.7604515061990757`*^9, 3.7604515487197657`*^9}},
 
 CellLabel->
  "(Debug) Out[53]=",ExpressionUUID->"3b172f71-2f96-4719-b1d7-0da714bbbabb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CAIMStep", "[", 
  RowBox[{"values", ",", "class", ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "6.2`", ",", "7.9`"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.760197027369362*^9},
 CellLabel->
  "(Debug) In[64]:=",ExpressionUUID->"93064671-e59d-455e-b533-3a59251f7f35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.4`", ",", "5.5`", ",", "6.2`", ",", "7.9`"}], 
    "}"}], ",", "21.245468379659556`"}], "}"}]], "Output",
 CellChangeTimes->{3.760197028032093*^9, 3.760395825881003*^9, 
  3.760451249591442*^9, 3.760451551794716*^9, 3.760451622814663*^9},
 CellLabel->
  "(Debug) Out[64]=",ExpressionUUID->"a1b3b4fb-1b17-431f-8d81-051b8f2cfaa3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Algoritmo principal", "Subchapter",
 CellChangeTimes->{{3.76088189681271*^9, 
  3.7608818999099703`*^9}},ExpressionUUID->"c293a061-7809-457c-98ce-\
a7e2a986e53b"],

Cell["\<\
A continuaci\[OAcute]n se implementa el algoritmo principal tal como se \
describe en el art\[IAcute]culo. Asimismo se implementa una funci\[OAcute]n \
que aplica la discretizaci\[OAcute]n a toda la base de datos.\
\>", "Text",
 CellChangeTimes->{{3.7616075666457253`*^9, 3.761607587147606*^9}, {
  3.761607683372991*^9, 
  3.761607706954732*^9}},ExpressionUUID->"c94c9b2a-4996-43f6-91a7-\
cd9196e07373"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdUVNcW95kGKhbsBWtELGDv5amoiYoVu7GLmGjs0WhULFFjYhcxxgIW
FAUVO7oUxILdhbHrJzaWorAsLGAewzcz3++7M4DOwCCDJdGX83trkhfm3jPn
7Hvu3v97zj7nVho+vsdIuY2NzY95pH/0GDbVbdKkYT/3dJD+o/e4H0d9N85r
RMdxk72+85rUZLhC+uNp6VNLOl4p/Vv///4f4iM+4iM+4iM+4iM+f9fnQ/jQ
8wUCgUAgEAisRegWgUAgEAgEXwpCtwgEAoFAIPhSELpFIBAIBALBl4LQLQKB
QCAQCL4UhG4RCAQCgUDwpSB0i0AgEAgEgi+Fv1e3pPL68S0unjjEzu3B7A87
w5X7L9Bkd/STU+zYdYkX+g+q4t+DTkNycjLqFA2pWh3GKut1aDUpqJOTSNZ8
CY0QfNnoeXHWl9Hd2/HNkDVc1WZzmNRXUzRaYx/VpUr/P1VndfmpKSkYD9dr
0Uh93doz/y3ok59w5eg2VnqP4tvxW3jwWRkoicdREezdup51W0I4dv4Wz9Qf
q2w9yU+ucHTbSrxHfcv4LQ9E3/ik6Eh4eIGDm5bws1d/Zux7+U9X6G/lb9Et
+pdc8ptIp5qOlKxQg/qNG1G3WiVKO+RBIVPh8FUz+q28KKkaE3S3+LWJHbIC
PQlM/qAq/i3o7m5n6rftqFZYicxGhiJfUcpWrkat+g2pX9OZCo6lKVO+CrWa
tKHX2CXsvfEaoWTeD/2zvUxoWo36w7YQ/bGco/4Zeyc0pVr9YWz5aIX+neiJ
P/ojbZt1Z/DAztR19eJgiuUjNed8GdnbDWeHtL6ap/ECrmencUzQRa/ALb8M
G5mcgpVb0cvLl3PZPXT8K9Fxb8cMvPo1pYxShqrOLK5YYddPj5ZHh39lYOPq
1O/iyaTpM5g8qi+tKhdCVciJrxecMfe974PuHjtmeNGvaRmUkk+vM+sKn0XT
/1fRXmHDBE886hVFbmOLm8+Tf1U8+eS6JfEiyzpXwbnjDHZciTO/P/SvubV/
KV5NHGk876a5PpfiyKFZgxjpc4ZXX8wF0XH3t6aobBRU/CE8yziSPvEBkQHe
eFQrgDxvJTr/fvq925b8IIw/l+/i7pcYYj8Q7ZVZ1LOVoaz4A+G5jpvJPAj7
k+W77pr3N8kPzKpni0xZkR9yX+g/jva2L+3LteePp2kdSmcYF3n3GVyZVUfq
qzbYKMrheSAhh19I4eR4Z5SG45XVmHL2gyPd/y6aI4wsq/hMdIue53s8qZLf
iWG7nphrCc1d1nd3pMq4kx+uWzKKPDKSsgqhW/4ukrf1wF4mdMtHPT8hkl9a
lqHq0GAeZRtf9cSu7ovn3mweDr8w4tZ8g202uiUD/YvjTKlvj0xejK99bub+
/n69mW720vNcrRlc/lc6Bx0vb13gelzuG/96czfpPldRa8blLHbXvbzFhetx
X6C/VXPI0xFV+e85ZrXk0nF/cUtKOTqSTyYjv9vKd45d6WM30t2xIhVLKrBR
NWTezX+hYLYWTRijKnwmuiX1PD9VV1Gw60biLQS2xM09cVtw66PN6WjCRlFB
6Ja/DfWO3hQQuuUjnp/IiYk1yOc8mmM5PMolRR0m4sn/htXj17bHLgfdYiD5
xHiclTbIi3qw+Vku264OpKekW2xbryDmf8NsfxvqwJ7G55PWK2L+d+5z3Q1+
aaBCWWUCp6x+cNbzcKkbrqMW4FlR0iLKKow7kV2yg5aoWfWp6rWSKXVUkm5p
xIJbQrdky2ekW3R3FtJEpeCrsREW/ZH+6UUi73y8iXihW/5ehG75uOdro2ZT
P08eWiy6+x5aPpnbO7351uNHQowxXcutgEkM6N2XQZ7fMXq0F9/2ncPRJMNQ
5w4me3RmxIbrme5LNfdClzK219e06z6S30Ifv6mH9ulxlo3sLp1z783f9PHn
2OjtSfduP3PopUkP0L/gRuRlnlg5HGStbiH1FBOqKLGRFaDThucmv5fI3SP+
LJo1He9ffdgcHk2WaKIOok8hGXYd1/PKQtH6xLsc8V/ErOne/OqzmfDo90u+
0yc95uKhTSyZPYuFqwM5cT+zf9MQ+1cYOzcsY673PHy2HOTy06yt1r2+zVF/
f44ZtGnSHQ74zmXGzPn4bA7jriWXmXSf4wErWeA9jelzF/Nn8CmiX5v2Ih2v
bh3Bb2M4sfrMpx4nYOUCvKdNZ+7iPwk+FY3pqeqgPhSS2dFxfVbL6V7d4ojf
RsJNC9W95vZRf/yPGfxCEncO+DJ3xkzmS3YNs1j5NLRxUexdv5S5Mw22C+bi
8/eL85rYvwjbuYFlc72Z57OFg5efZu1XxmdqJUrniZzOrW758RTXfmtGXpmc
wl39eGrJ+b3azaAqbiy7FcWsuu+pW1JiiNy+kl8keyz6M5izMSYVTXrIhdDt
rF38GwGXEjOdmMyto9sICAznnknDrevjGp5H7WFN4HnpymmIOeHPQu+fmbnQ
j/AHGcfriL+0g2Wzpfvtt/UcvWuhHOmejI4IYEOoIddUx4sru1g1fyYz569i
67HbvM5ssxx0S0pMJNtX/sLMWYukvn2WmCzXLIn7xwNYucCbadPnsliy16no
1+81JqK9PJNaKslX1J3O+Y8kT97lF96lW6y7Zla0PUf/kEbOds7ZX+QePYl3
j+C/aBbTvX+VfFw4lpqZa5+YjsGv7Fo521i2745I7m7uJXTLRzs/lVPjnVCq
GrPgdu46gS42gpUTBtK6kh2y/F3wf2Eo7jST/+OG16yFLFm6jAUjvqbr4qto
dA/ZNrErjcvaoijjSWi6X9O/OIfvWE9+3hDB1b8OMKlBnvRn0QT+2jITz86u
OMhV1J97Xbq3tDzYN4sBXTrTrKItMttWLH+U0QN03F3aivwy6dg516yqv9W6
hdf4dcqDzEZJ1clnDLXm5blVDHFrTbchngzv15G6paT6yB1oMD2CDG+edGc/
i72aUVopQ17UmcaN6lPHtRYD/J+i17/k3KohuLXuxhDP4fTrWJdSttJxDg2Y
HpE5HrwDbSynfDxxa9SaHkNHMMTjPzg5KJAX6c/O9HtKH38Gn8GNadznFzYd
PElEiC8T2zpiW7guw9dHYRhi093byg9tqlJY8ps2ShcmhwQxprkzLg0a4FLG
HrkUKwu4fMduk2CZHLUMd9dWjF8fSmTkEQKWTKB9JXtcpl2QrpR0PQJG41a1
MCqZTaa4kEzUMndcW41nfWgkkUcCWDKhPZXsXZh2wXCQpDn2L8arWWmU0u8W
dW5Mo/p1cK01gA2nNjPaLb2eqjrMMhSqu8fWH9pQtbDKeI1cJocQNKY5zi4N
aOBSBnu5ZNcCLny3+6m5v9DHc3xOZ5p3n8GWYyc5um0ePZyk/lekBm7uHWn/
dVvaeCzkTE7zOVI5Z3wG07hxH37ZdJCTESH4TmyLo21h6g5fT1RCxmHn2fBj
R5zyyZDZFaNSVWecKlWm04o7OcS5DN1yBs2LnXxbSo5MVYsZlzI7dx13Frei
ytA9vE796z10SwrRe6bTqVE7xq3ey4lTh1jjVR+HwrXx2vHQWEfdkzCWj2nP
V3llqMr1YtP9t2W/OvIDNcq6McX/NI8Nl9GqPp7K+RV9aVIhPwqpn9i2Wcie
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
L6SFQ2UGB5v4KcO8bDkFiko/cNxqrWTY578e5T1Dzfup/jlbexVHLi9MN/9M
42mpJxhXWZm2z7+lQess6Ihe604xuQy7yh4sjYx/W542ltPrNxCeccGM6wDL
0XTelTf1eR02lmqGvUdqjOXoy7Q5x1z18fg/+cbQv1ot55FZv0jvP1V/NI/n
6bpF5tCfnSapdWm6RXoOL96UcdtvvXmOUd8J5LsWTRj45xXznFkL/dMwn73W
PS0vqbLHUiJNOqo29jTrN4RLfVeKZ2ObM3R3PObdeA4NizZkztsbgKOSxlZK
ZTWaf+Pd+7upd9KvSCX6+N3I9PylJTZsOs1KVWNYUM7zIlb5BWPTPSkj9f+M
507rr5kVbbfGP1hlZ+v9heaopMOUUh+UNPyNdxlacxgvQ76MfQMm7rtHYsoz
zvtNZXj/llRQSv5mVJjJfZYLnyiRdHIyroZnCbvK9F4Rwf0ELSmxF9g4piu9
ejaX/JlK6gcfb8/jL4FPus+/NoYjC/rTsHQelPnLUL1RW7oP9MRzUC86NnXF
pWl3vpv1B0eiTa6oIX6rCuLcdTahj02vaSpXV7lL38nJU7wSrv8ZypormUZC
Uq+zulsF8ijyU7ZmPeo382Bq0G2TfduS2TOoJPbVfuSEmX9bj3s+W4o3GMYf
F9LXXErPtQGS/1YV+4ZVVu1Boydmz1jqF5anz7nakr9wScp+5YRTpfKULV0C
x+ot6T1mAdsuvciqjSWf6d/PiXwy6VxlPsq2msCO2wlcnllLes5RUe4/A5ka
eDvNR+nj2TvSmbzG+V05xdos4nKyoQh/+jnlM74rT5mvLK0m7OB2wmVm1pJ8
saoc/xk4lcDbOedYJF3fyvhWjsb1nfZlatCkbXvaNHahZreVXM/QCQ/2Ms3N
EbtCNegx3Zetgf4smtAT90FLiIhN+w3d3SCmD+5IjcKG/Dclxep0YdicvTx+
s4VC2j0qy1ue5r3H4X92Cz0Lying5MaAsbNZtmoZ3p7uuHl4E/o0bf/BmwGT
GdShBg6G/D1Vcep0GcbsPY9I2NaTgvICOLkNYOzsZaxa5o2nuxse3qFme6np
4/cy0jl9TaikSdssukzCzQAmD+pADYe0fS6KG+rp7YvvtMF0rFHYmAeoLFaH
LsPmsPdt5dN0iywv5Zv3Zpx/2rpF7V8r6VLJsA9DxprTtx+Zwh4nj1VcsWYb
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
fgev8SJX61B0vLx1nB2+c5k4vDfdvq4l2V9JlQmnTLTn++kWY9tVrvx80dIc
Ssb3lueJLOXlasJ/oKJCjkP/XW+Pt9pe76hv3Fo65JGhcGzHuPmLWLZqDevW
r2WN70rm9HBCaWNLq+WP0cfvZICjAplMTp7SdXEf/hO/+x3kWq4MbnmeSP/c
nwGeWeeJtFd/o1X5liy8KhbBCQQCywjd8r7ouPtbU1RSnO+YJXnTBPVWPPLJ
kJcYwr6UrF9ro2ZSW2WDrdvKtPUe79AVyZu7flLdYrH8XOkWNVsNYzPyEgyx
3Fhm1lZhY+vGypjc6hZj5XkYuoABLapQxFaGjY0NNjIFhVxHsONRzrFUHx/O
3E7OlKruwfTVwUTcjEN9fzEtVJlzdD5Et5jrkpy+f5du0f41izqqNE315viP
oFt0txbQSOpzyqoDWb4lgICAALZu3c6u/Uc5cS6Km9FPeJUxf/gwlAUDWlCl
iC0yg71tJL1TyJUROx5ZmQudTX5L6kV8fcS+QgKBIPcI3fK+6HlqzDWQ4srE
02RdhZFOyn6GlpQb475vbObIlDZPUV0pp4znQYyR/rPVLW1Y9TTTPNHZyVQ1
0y0p7B9aErkhrvrGZl3Xm3qOKdWVyMt4cjBd1mTE4Tarnmaa9zjL5KoW4nA6
utfRnN65knFty2InM4/tFtE/Yl2nIiiKdWdjzNuIq/uMdUvKQU9Kq8ridfjt
qESu7WWhvvqYFbS2tTEeeyrbjpsJ3WuiT+9k5bi2lLWTWZhjyg5r1kG/PTb+
7mXORERy+5VY1C8QCCwjdMv7kzZWIj1/VvDkQHZDLvrn+HUphEzuQFf/TM/I
0n/FbexKIWVFRh5On2sy5J9k6IpMceGtrjDJHcmISx3X8dL8cKNuMeS31PbO
lN+Sm/Il3bKzvwMyVW1mRpnGYw1XZtc37sdbeVxGzNfz3K8LhQxrdLr6k2l4
Bn3cRroWUlJx5GEyZtbUO/vjYMjvmGme36G5Mpv6tlJ8rDwuPQ5ruTh/HKvv
Z3rKTwyibxEVTjnpFvUOeheQoWqy0Gzf2NdhY3BWZqdbOrIus1GztbdBlxjy
V2rjna1uyfp94kbD3JwF3aKPJ/hbR4q0WcEtk/pab6931FfSOFOqKbFROjP+
RPaJKtqL8xm3+n6mcZVEY36xyukT6Bb9a64EzaRD+RpMPmutoBIIBP82hG75
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
byE+Lvr7JWWKUlRvNY7IW4lcmN5QtAVKavyvH5MirnEpxI/mVcrSNCDGdPzh
5WHGNywptFhpXDvM5vD/d4PwCf1pX99RXy/Kyrp6mcGO2FMs/74PrWqLvnQx
GSWqe9Jj+B+cT71FxCRRj27lTZ83zPNmxPtiyMu60s53JH9eMHBAc4+IQW6i
b5ExPyyzc6TBN0GcjT/ECGc78f/LU7/DQGbt2FO4+eYK0Y+a4o6yfA82WDgb
XXVnJ5M7taXX5CAitoYTPDeA2SFz6Cr0up2jC57eARxM0lFzLi0/HJF1F45u
vrrpx2Z9aD3S9PMmSqfB7LbmaA5r7Lx+PxEF4LQgNYcCO+JSVqmvY2XxklRu
/iO7HiTp5w90Ot2peXeGzIvieR6OqTq7nO/7tKK2g843SlDdswfD/zhP6q0I
Jg3ogFt5YVdR1sofd2LQjB2GeyUNukX4f1nXdviO/J3NoYXhrxe4YsnvN+9g
2b/B4713C8/n86GKTiu7K8vTwzKR2Tm5E217TSYoYivhwXMJmB3CnK7l9GV3
8fQmYO8+RrtUY9Buo0ih23/jVoE+m8wERppufkaJ0+Dduc+H5oKMPdFKXMdb
WhOu+/QQfHRnlwg7KUpVp9W4SG4lXmB6Q8FTZQ3+128SEbfSLMf3rPqz1j6P
M8r0PIYVg5vobaEoXRVXj9Z4NXejnmc/Fh6L1591uKFHWeRlXPDqO5oZi5ax
yN8Pb69u+O/PeS6SZai4u3MyXk7FKVe/O1OD1xMRMo9xPbzpv+AITwyxQhO3
mWkDO9Kggs5vFFRs4M2AKZHE5tmFELp1YT+6femJ63tlKFOmLJVdPPDy7s43
EyPyuFtUp1tam+kW0XYu86Za6cq0nJXdf33bdQvqVJJTUklTqdHotptr1KSr
0khJTkFluggKdY64rSZVPJeapkKd8TLqdBVpKcmkqPKzvgZVium7GfmmWua/
KoUU3bNarb6MqlTxbvr/06eRUXYtGrWKVPEt6UZZq1WpqNS6v6WRqjI1uCbl
CTfOn+f6/RdZZw+qUlX6tHTvpeWzKFudpit/uiiTrvjppIky6d7JKqvGuKzZ
5xekp4kyir9p0nVlysxERcLti5y/+pAkQzE16aIM6Rq0uu9S5d1X1j2jUov6
V4l8DXWrqxetSb2ohW10aYrfMeSfkmbyvMV61Oq+LV38TaMvu8qsXjRJj7h+
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
    "], {{0, 195}, {558, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{558, 195},
  PlotRange->{{0, 558}, {0, 195}}]], "Input",ExpressionUUID->"adb95b1d-2fae-\
42de-9bc1-9c9a75cc0108"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ytF70R9wjYKwU9tYNHUynrNWsv30nyiM23TvGD6rDmjXsFUvrrBryXQmTZrO
kk2B3H6VtK+ifTuSWZSWJqtfWf/u0dvpkFmMXZM1vDT4zsjfRd7Ff+lUJgrP
X+wdyN3IZO4X8yenti5m6iQvZq3YwekwpfVt0UHx5CqBO9Yyf4onPy/2Yf/F
J0ayEaB6ze1D61l3+LEwpqO447+MKRMnM23xRg7fjUr23jFhp9m66Gcmec5m
xfYzhFmcN73n2UV/fHf4sXuvP3t3+7Fjux+nwhLnJ69PeLP16rvEvg+/wN7t
u4Tr97HHbyfbA28TqftO9fIOh9Z5E6wfn03tPjCJt/h2cEBk15TVL43kbeCP
rZWlJf01AyPOEXlnP0unTGLStCV4H/5fgqwSoeblbWF8bjjCExN+IfbZFfau
mS+02ZMZS3dwzkQM/cPe0Rp9ieJe8CYWzfBk/ISpzBF0/njIa715cPJyN2lb
nv3OPt+d7Nq9j31797Brxw72X/pL67c03/nH69WunfgJMjewFxZtWPKcQ/H0
MruXb+WssU6pIwk54sOqA/dNzO0/QgdSMtaV5xhTUobU6SdOWMU51NyZWRO5
SEKOrrtN6FNK8J4Hy5pQoqc/b1SPWdVU6EtxTjy2vzTzG0ucYxTHb8yjrjDP
EDu2Yu1jU373Fbu7Fcdl/h2uTa1i4xzfENQvzrK0ewPqt+pOr54eNKmUW6ur
DpUnEPza6PrYcI4v7o1LVRfadO9DN7e6FHWQCnqjtxZoxTUxIXuY0KwaDYf+
yp6jJziwvB+VHRwp13sboar3PPIbS+MyOYR2iJHkH8C+i6toXyIn+YoWIWdG
mTafKG2BxngFPtPps2BD982lT83cSIW2Z3WqTtXKFSlTrgvrTOpzHCLv+DOn
Ty1ySQXdz1qcalWdqVCmPJ3XaeKBif5ulN92BtcqTmnnKpTOnRGx8Az7Uv3Y
aXBvBSG7J9KsaiOGLtvL0eMBLO/rjINDeXpvfWBdfon6L04t7ia0oyNTNhzg
2JHdLB3RkDxyRyr2WM1FTX+oQtg0qAHFHeWCHAQfMmo3voNr41S6Cs6l85BB
rMm1Kk3fnYYxzX9i7rF7QnOqNhzGsj3HOH5gBX0rO+JQrg9bQ82ts7/nxXV/
5ncuTTqRCGmhNszcHMDl+HwzYY60uIEDBQcEEhOvU8+vE7BmFHWzS8lYtidL
gu7z5u4mBrqUwFEmJo2ezU/dPkgGAlfZN6cvNXMJuiPOhlO1alSuUJZyndfz
WK3nj62UpXn9taKfEzjHaPx8h1DLqQzOzmXInUEitC8Tpfru0rZLm5PnMwiX
4lmQCbKXVfDisn5cRNCXYK/m1Gw1Ee9Dxzi0ZTrtnNIjdSxF/aZN+aFRQ1zd
fuGUIuXvaJW+RF9hQbNy1Bu2hoCTpzm0aT4jGhchQ3z8xoLcTdujm/y2vCel
hfl0Gmlxui7bzZFbr+I4x4tbBG0dS51MaSnsNpMdl56m0IYl5RzKs4voWL0g
GSXC8+QNWRYfE1D/ya7RjSmTzQ6RSErBQcEGXOCjdcCasa55t4hzrBnZlKLp
xQJvy06h4sUpWqgozRbeTd6mqMNZ1jCdYB+Srm2kGLG/M0mwpePOxs0pXu/p
Tm5BVhkbLDXznpY5xynFK/x+zItEuxZ+MUmehuqucJ1TD3a/UnHDxjm+KSiP
j6R6u42J8yd1BP69iyEVO9J2k168QPWQLZ2LkrPBPK7qzR9i7iyhabXRnFJa
d436qR/dC6WjYJ+DevlDam5Mq4ZcnJ2Wa8PiPov6P/oVELhKxoI4d5zBkSe6
eXRsBCcXtKGwYJPEOdrg/ei9Nqf64oE9bB9dU6ubNcbuIzAwiKAj13maXLxQ
8KVPLwawe/sYasgEe15jHHuF3wQGHeWa1p/q/J0oA3lcx+H/QBevUNzDx6Og
wG3kVPC8ohsDwr129aBQ2kL0CfhbT2Y3mVbVDnE2gcs/tKRbKq7NqY+DvSsL
DdY4o7k0sx4OYil5PHwT+unNdg+yCv4ifZ4GjPV/qLOHSkJ8OlFA8N8G/kmQ
z67uhUlbsC8BejZYdWM6VeUSsrVcx8Nk5aTD8210yC4R5lojOak311JemEQ5
gUdIcvdg7xu965XHGOpUkqFH3+rd5298O2ZFnGDzU7MPkof66e8c2L2D0TXk
At+pydi9wjMCgzlyLY6zxvlj62Rptf6ag45ziNLnxXXsfh7oYgeKkE14FDCx
r+L1djpmkRhxDhXX57ngmKkxyx8l6pby3HjKaPbEOHVm3sbN+B5/qJVPSt7R
On1REzKvHhnyDzTMMYg+zJC2M7ihsiz3ZOWj3SMh6ImkIP0PvTX4Tv1sLS2L
92CPXszEahuWXJxD/ZjFLnaGnEOH6EMDKCAx5BwfrwPWj3V1xE2OBa6mayGp
MP/qytpT5zh79gK3zeX2xF5gfBlB5iJ72m19a6Et5vHGvzdOLgsS90spzjC6
hEZHKzD5UnJtsIJzKDW50VO0udHinJ3wfa4v92iCB5eiipdmbKttnONbQ2Qo
fzx6Z/CZ8swYSkrllJ90OaGPX+7sQk5ZKcacMbz2H9UdvOf68kBlzTWCnZzi
jFzqxPDjhtfEXpys9V3pm6+L+yz2IhPKCnN5h9asT7KH6zX+vQTbIUpL3Xmh
CZ+/XtcCuzRpabb2tfXv/3o9ze1E2DVbxyuD73T+TpKf/ocN10dUt2ZQVdPW
1pvi4paxN5hS2c7EequKi5PKC3PUDDRfay4WqWnHbrrmlJK28SqeGft/wY73
F/iXSFYZzytx41wRNEhrC/P1DzSMxapuM72qILf0bvjo4sSx16dSWS6j2PAT
hvMJzRymnObaFqx9YUlW0ezvJcxLZOX0cgEjhX6oSJ365QRbmwU374gE+6I4
OpzyjRZzz2gfyuEBBZLa/NToA4v4m3XN05LGrjlrXxl+F+ePrZFlCvTXHHSc
Q5LPOCdQza3p1bT60tpHb71DEciA/FJDXhB7Fc+K8iQcMCGGYqSL1r+jtfqi
FPxCYaQZajDp5F+JvkD9N3eu3iPKCrmbQ9Sh/kJ7JWTv6MuLhM/f82RNW1ym
XDP0PVbasOTXVt6y2S0DIhOcI/aihlPrc45U0IEUjvV/lGcZnZK1FeU5xpaS
CZwjhevMxlD/ycpmRWi/+S893qDmzuw6pBNJyS9wLtNjzzrOockR9XbLhliU
nhp6eanqsDU0L9JWl4di4xzfJtS8uH0U36VTGdGrI60alSebWN/mRAnzU0fE
aVux4U1y97DmmghWNk6HSJKXhkOnM3v+UpavWsPK5ctYNLU9TlIR8rrz464V
7NtEgXNIksnVjtnfi1ziOFsQ/9kn4Rym8hcjvWmh+U3j1XH28NkqGqcV5vp5
GjF02hzmL1nBqtWrWL50MVPbFUcqjL268x6YbYcicKCWQ+TpfdDEmvBb/Lpk
F8ZmWhot15+bm8oJjGJDC42Nb8IqHY94trIJaQUbkafhMKbNXsCS5atZvXIF
Sxf9TDsnwTbJ6zEv1LLuR+7uxnfixLGvfrSaVrUmcPrecr63l5ChwRJCtTZU
weGB1ei6w5hnJWPzU6MPLMIS57BGlinQX3Mwk0MauaGlVocbr9KTnSKIAQWM
OIcybr4pztaJHa8N7z2woAyHlusNcgJTX19UROzoQh6JGJE4HbkqNqPnmNms
3X+d5wY888M4h3ZfdUU7RBkbsfRB/DrefRa4ebDe5F5NSzbMjP5pOEebjKY5
x6XJlDfgHB+vAykd6ynmHAJXWOhip117LT7qzAfvL9XkcFbOVJb2E6bg5ZUI
z+FNhPaLEDu6scFkfqqVnEP4O+bESIpLNWvofTig9RvvODehEmVGnNCt1do4
x7cGdUQwU5sXJ2fJNkxYtoMjNyOIvjeX2jIZRYcdj9NX1f/4RRMfNZcHZtU1
cXOqNMIcwWOeDz4+m/DZtJmtO/05dPQsl27e49FL3XkvFjiH8uhQCgvzmJqz
QhI++2ycI2ojLfX8XdycWyTMLTsxb+Mm7Xtt2rSNnfsOc/TMZW6GPOZljHnd
it7UhvQiCVm67E7Ii0iEikuTKgjjzg6XRX9a4BzReLfU9yG6ubMmR9xjPhs1
MvfZzKatu9h36BhnLt0i5NErYiytrWjwypeOWSXIa87mrkrFtZ9dabk8TGjP
C7a0F+Yr8qr8fEOQVdQB+jYYq80j+MdIpqnGOYz6wHJffwjnMJJlSvTXHMxw
jijvVtZxDsE3nRhTlrTijFQZe4wIHde7s7oNBYq44/2HtfuBP0ZflIQGzKBz
bSeyyDVnKIiEubWUzGX6sO2B2qLczeM9D3/9AXuRHZW94uIasZen0nZEcJJ9
DlbZMHP6lxLOkQo6kNKxnmLOIdzjsmdF4R4iZGUmcN7KvS6GiCKgTzHKdlvI
uvUbWG+AdUxtlV+7b7bWrDsm8kqs5xyafLAlDTMhEmWiweJQYiN88Sj6PYsT
zom1cY5vCuqHrGqWFUk2N9br7UNQGY9X9ZO49U5hnI048S6Ze1lzjcC/6wvX
SAozONjCfg6znOM9T1c3I0O62sy+o7d/4gtxDnXYIurLRUgKDSH4A89sitnX
g+/EwhzJxXi/qAbvODOmFFJxbnruj7Nn1vuQ94QtdEGeRkqhwUdSnFdviBd4
u2liWa4svPV/DKrZk906PxJ5oDd5hfaUGHWap77daTXbVI7bv5xzpER/zSFV
OIfm8xD8JnWgcm4HcpdvRBt3d7qP28C5Z0lzgj+1vqhe3ePEjsUMbZAPO1Fc
fMGS3C3ilR9dckqQFh3KkehIAoZ2Ys4to3ez1oaZ078EztGAJUY5ybHnxlNa
qsc5UkEHUjrWU845NGd4zaeevcADxTloufZhis+7Vz9ZR8s837PkgWmfGHt+
QlzeUPFRnDQxt7Cacwh4c6AP+SWaHKShrPWqjVOvA4Z5MjbO8e0g2pf2gl7K
qv9icP7j66ChOEn1x6uOewtzmAK99hvtZ4yHNde84/ToknH7sgV7ZnYd3hzn
iL3G1CqZKNrvoIGPiuccTVZZyJ3QR7y/a2LsuwR/NzDe3xlxKD1/91zzty7O
reFbg4OT33doDuqn62iRWYwoc3NWJ9mL8RcbWjkgLdCPg7p1K00+R7wPMYyd
6vmQ53GfKU+PoYRUE4cROFGK9pca4z3hAtfLKM5AlUau1BhzJtEnKU8zqrgM
Sd42/NiyTWI83Eimgdp8jgpMNsU5PqYPLCLe9zVNWEOIh/WyTIH+moN2/UPH
OYx8SCLneKF3fVBcPkd5T0POIcxFr63rTZMeG7hrgeumvr6oOD9tGMvuGXGA
N5p8VzlFk3COpHK3DM1ZVCUE/5sTj2UL6d7HVxfP0YPVNsyM/gmcY4eHozYv
cpJBXqSSq1OradeZCg6MX1v5eB1I6VjXco4SKeMcmnc6N7UmDgK3ETvUZHyQ
hbxdo769/nM1crr5JJV3PFR3mVUzHSJxLjptf2H0vfkzweqXNnoP1U1mVBfu
JbLDzr4a0wzORI/Ln5GZPBMsmoe3H/DGmhjtV4j/JOdQ/EafPFJEGaowYm8I
b2Kecnb9RHp1qk8BgdsXGBCUmKv9eBseeWWIpHlp6HmQB3o6Ex0ezku1ddeo
QlbRNJtEmFMUofW8U3o6reLJybWsDfor7m8d5xBJslNt8FZuxtu+6Lts6VeH
6l1WctnorN7oXV3IIhba3WEVF+7f43TQRTP7VuLv50fnLBIkBTqy8kIoIaeD
uaDbM3Gwd17B3xXnp5Om/Z2szjzua+2cmpCVzcgmFiMv7Ma8k3o5V7HhnFyz
jqAIS7oVzbHR5QT7Jsep/0Ge66/F35hNHYcidPFNPOtMcbAPeQQf4vTTKdM+
RFaXufHxSdU9VjbVrBHbUbj1fE7qtSX2ySnWrA1O3rYYQR22jAbpBHuZro5B
jElrG4T5iGZ/s32zNcmcL6TkQK88gkyLGebfpUofWMJbdnWO2wvRYeVF7oec
IeiCLjcmBbK0Wn8tjLvewrhLkv/5TzznkFNnbmji3FQRQK/cwvVFDfNCY3Tn
mRftvILD565x8+atONy6Q+hzwzl46uuLwAeH1Kb7rr8MfIri6hSqZK2K17n4
5ycvd2v0TXPmdu10EuQZSjDwsIk9GCmwYcnqnyaHYFwZpCIZBdyWcOz+S95E
3ObA7N64t3clr1HuxcfrQMrGevxZ+ZKUnn2vDidgXB1ySIXxmrYwP4xaz4kw
YxmqeHZhK57dB7NWt4dG/XwvPQo40Hydufd4z8PFrsI7iElXYybXDbiwgr3d
4s8+v53k7PPK+XpzIMbwXhHb3PlOLNHmIRmeQfOOkz8V13I8J4Ozz4U+m1he
K8NCAw8ne67Y14z/JOfQ1Jxa56Hd+51GGG/p89Zn+LY7vNblX8vy1aXL2K3c
1ulT5PXNDKuXV7v3PUPu0lRv0BjXamUo02Ih15TWXvOeF+dW0LNSFiTCMzPm
Ko5zfVeqlS5JjS7zORZftzCec9hlJYeDHLEsM7mKFKNQ6WZM8PufSR1TR+yl
r1N6RJp1ZXF2XGf/rpc/nwzUf7Gnb3Ht2RNp0kjI5jqHc5e3M+HHppRyFGyZ
0MZs5VvSw2svD+N9m87fidLmp2b7IazRzJnULzm3vBeVNL+R2pPLqQr1XapT
ukRNusw7njQ/3RSUoewd34A8dg6UajOBpZu2sW7OCNo26crsI+FxHF/1P3wn
dKNJKY38xEizVaBFjynseRjv/3U+RJSOfDU7MHhN3F5S9YvzLO9ZGUdNDDNj
bpycXXAR+qVEja7MOxZh/RxIdZ+5ddKRxW1jEj6nDl1Kg4wOtFiX1KfE3tzE
qK5NKOWgkamc7BU0Mt2j3e+Uan1gtu2CXdvTD6d0cXkH4mwNmH3uygfI0kr9
TWa83fWdyI9NSmv7QSTNTvkWPfHaE5Zgl+M4h5i0+WrRfvAqdm4YTdfGpXHQ
XC/LQQXN9bvjYuWxVxbTopDmrBJRXC6FHkTiDAJfWMylvz+VvkSxuW1mxPbF
cOk8FK/5S5k/uTdNXdowOUB/bmtC7heTniGY/PiM2zcrcxqVhJ+lxIZdv2pG
/4T7qEK30qO0g7b+mKY2mcShDB0XnOHpkWEU0Zwd41Caxt2msV8bl/gYHUjB
WNfMZbZPoluzcmTR9L8kC2WadmP8tpTUk3pHWPASBjcuRRaZ5h4ZyFncmZou
DalftTT5s2WnUM2OjFl/kVfqaE4s7EnjUo7Ce0nJUvoHOvZbkTQf5M0JFvbr
QtOyWYXrNDk8gq65dGPhyUhtjbfurWuSP4OuxluWUjRy76et8basb0calMiC
VJyRArXa0GtaQCK/UJ5nfPki9NofmfAcVcgOxnVwoWhmSVyNt8zFqN+uN1P3
PUbDlW4uaUbujDmo9fO5f2Udlv8m54iDIiKESxeuExZf01j1jmhNrWG1CkW0
0lC/1VGEXTnKHp/1eO84yIlrT5L6f2uuUf3Nw6vH2bfZmy0BFwh9bRSj1Vtb
OfQ6gruXznHhdoSJnCsjRIdz4/zv3A6PTsG4fMuTGxe4ePspURobpFISFaVA
EatGrVYTq3hLVPQ7PTsaJ5dY3Xf6tZVVr8O4esyfzRu2EnD+Aa9TXHf5PW8e
XiF4tw/rN+/nxI0nRBrcQ40iKpoY4aEqQV9VsUqio96i1PP/2jbF6r5TqA1+
+/rhNY7t28KGLQc5H/r3B9U1j376gEevTPl4Jc8fhvHC1FwsQabvk5Fp6vWB
2bY/ucn5i3cIj1J/nCwt6W8yUCmiidLU9FYJclCptHW+o5V6dkf7HJXuOyXK
+OvVSa+PuruPnz1c+b7PL6wRfNb2XXvw8/Vh5S/DaVxU4N4iYa665hFvP5W+
qN/y7O4FAv18WOu9k4CT/+NlMv1gKPeU6Vvsqz+598T8mqVFG2ZR/+Le982j
m1y49D+exrdT+F3cfdQooxUGcvtQHbB+rJvQlxjhb0XKZRhnmx5w/vAetnmv
ZeWaLew+fIbrjyINZBAr3D86XleUGl1RmMihUBEj6FCMUtBTnU7FaOvV69ob
rRu3/8TdIyYqStDZuN8olMmN5/e8/ON/hOu/v7bPdL/5J/45UcL768XdYv9F
Z9gb6/V/mHN8lbCwb8UGG/7LUN1fSZMs6ag0+aJJHh5zbDjFpHLKjL/wTeXd
2WDDtwIb5/jKYOMcNtiQLKK3dSSTtDCDj5jeOxFXMzwr7bakIJ/aBhts+Gyw
cY6vDLrzeyV5+/GbjXPYYIMBlGfHUlKWgXrzQpKuj6n/IqB/CRyqTuG82fqf
Nthgw5eCjXN8XYgN34p7Tgki+yYse/ARZyHYYMM3idecmlqf7I5VGOB9gafa
s6QVRNz6jfk961Gt5RQCHn3Yur8NNtjw6WHjHF8L1IRsGYV727a0a+9Oxw7t
adOmI/1XXbWtS9tggwHUPL+8g1k/9aZT23Z07NKbIRNmsTYw1HKutQ022PBF
YeMcNthggw022GDD54CNc9hggw022GCDDZ8DNs5hgw022GCDDTZ8Dtg4hw02
2GCDDTbY8DnwrXCOWIXx2XrJQHO+nua8OO0Zb8LfahVKzdlwMUnPdVM/P8uy
QW40aNSN5VetP/dN/SyYhStOJH9N9BOuHv8Nv517OXw2hBcJZ9CpePLHfd6Y
u786nMPLfbgQZV1bvnVEP77G8YO72bkniLMhLxP3T6qeEXLvddKzyKNe8+ZD
9yCr3xH5OjrVc3qtatNH6Iz6SSDLN160fB7+fwmfqC8/Hu+JfnqLk/t3szfw
dx7qxrn61QPuP4+z07HXfZi380Eqtf09UY+vcnjzYjwHdmHwehN7kP/D0Jxh
em6/N3PH98V93G6r6zPZkDy+COdQ/8WZlcNxq12OglnsyZSzGJVcujIt4EHK
a46/PMK01hXIXXEcZ62oPai668v4bq2pljeDtj6JSOpIcdeO9Jl/TK+OsKaG
yWFGNqhF6x+70rxiWfrE11e2AHVEMOPqVGXA/qR1gmLDT/HrgAY45a9A6yFT
WbByNQu9htOjY29mBj8j5uov1HMew2kz76G6O5uaabPj7pt83Xr1swN4dWpN
o5qVKVOqDKVLlaVSre9p3ckL/z8vs7JPa1yrlqZwgQIUKNqAaeffmX+v6KNM
rluc/PkKUKRMDRq6DWPjnS+5H1FF+MnlDHB1In/ZlgzyWsDKVYvwGtaT9t2m
8ttjBbcWfI/ziBO6egRKjno1pHSuDEjEOenhb11fJsjz6W6G1S5ONjsxMhN1
2D8M1rXp43VGzd1ZtUibzQPfZGuqv+fZ/il0avU9NSuVpVTpMpQqU5lajdzo
5LmfcOXVb0BnPmVfphJi7rJtRDMadvHk18278F03n3G9ezFp21m2dq9Cr3gd
iTqHVz3h7+0pr9WeBKoQfCcJ/rRmHmSiuPq7Xx8P+1JQcXnNCHq1cSarWIS8
7gIefE2cQ3mORT+2xMW5FIXz5ydf/hJU+b4N7h6d8PBoT7P61alatzV9p27h
4vOvJ67w+TmHiivTa2Ivz0Jh5+9p19mdplXyk14k+H9JTpqvTAnPjuL4yDLa
mp4y55+5kYIaHzF7upFd0CNZlencNP5d7B2WNc7PD7/qajapFMRYU0tZdZcl
3+el8oQzSWo9v76wiJYFMlG0wzLOPDOyvcoH7BvfgWpFMyIrPtqs/7g1vbq2
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
Uacsazvt3YW42efC0z881fqmOT2a4nK9lhT0WKo2JKlpDi1/TKlC5qL92W9l
vxp9fhYNy7Xil5C01uFUPLz5gFc6Y905Nbo5Px6z8I42lNm1M5G5+gz+SMv+
9tVawz5ocs0RT+S2zuRzqMfskASbcj+aZ5UiydqMVcnOpP3F2pYOyAv240DC
XqLKuI6fzFZELdTXKhkN51YGJLXnSNAcSbT8O83x/D3r52s2t8uCRFGdGeY+
MKOCGeyssKg5Cgiao5x3anbwbzg7ppTBvrzprDm0rTeJi1bYO79XfNLRTp6t
b4ODVIpNpSlcSZSPwhix0Ys8MqPv8/tWaI6489MZsvRekjlqtMEeXFFUv/+T
nn435X7+n8rXrTn0c9il1Bc0rCRj7UTzXYOdz5TKhrOWmZtamhfo0bCvVz5B
QyT1ffiaXztnRyqMr+1XXORe6BmCLhjPrRzo7SQ8b2Hf0KQ5FLXncs+K86kp
f0Noawf6kE9mad/W1NYUdZhzz5hWbehKmuTQn5H7llZzT5ndYaTlyUlffIP+
Sj0e6t/oo9+7tKvM8F2hvIp9ytk1E+jVqR4F5YJ2+CHIpOPiebypE05yQevn
a8ik/Q/N4vaa8CcvDXHXPd5MRycFErkTDSYd4IFZ+1eFh/NCl444mzSHRJgX
VR20iesJY6LqNhv71aZalxVcTuIXRPVrF4PtfcH2K7lw7y6ngy4K44qO0BVN
yaE/L1fEk7kn/3o3F4oL5+RqP4IMvjxjODayDDZCnbEp0o75wXd5Gafmyfm1
DGrehja1ciJV1OBnq30YW65f6SnflFHza6dcFG7vR0gSrRAXfoSJtfLg/L35
WekU6pv2Liua6G0SbCjSah4nzXyaxj05xWrfYFP5mDSHoCdzVB3Mxusxb8O9
tbE/tap1Zflla/yEQGzIMprns6NQvS707P49nb060MazFc2betCovjt163Xl
l+v6Mf8N5yaUw1aipPCAQ4azUurf+uPs+iOHEvle1RC6tj3fFvNiza1UfJgm
9BkRy2moX/fK3RCfPTd5Hmes3y/OLqJdTQ8mHTKfK6s4NqqsIQ7O/Q/wzKwf
UYfMorbDt3TZYuZ/TnOesaX09b8QnouOc+95NJE39jOrV0faueVHJnOi935z
zfEbvYX2l/T8nR6j5lBSe8590/iX3vop9Fd9hP5KYk+l4bu580pN+Nm1jO/V
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
pr5Y5kTv/Rb2SlU76ZJDhsSmEcv0+zmp2ZAKffjAQnIkWTok/l37gptHtrJk
8gh6tW9Fw7I5kSYdJyzsrYQtEOZuEglyl1GpnL1IA70Np2tWSrebgI/P5HdM
Gk5j4XsZpNlotdayfap1mkP4f+xJRrgokMgK0ntftOE3zbkJVCg9guMmm0zL
miOdCFphgZsNkgwKXEaeee/zpXobTtcsZWg3fnKiPJk0zEPQlxKkjp6stWif
aqXmEP4fe+JHXOR6TdeHfYa1sDecG1+R0sNPmPySfAzNEcmKxhkN9k0Nhkxn
1rwlLFu5mhXLlrJwSjuc5ULZ1Zn3Nu7JNIfuL7Z11u8DSZHa5qVCk16MnunH
3qvP347bESs8sBXG7HwNhjJt1nwWL1vFqhXLWbJwKm2dBf2nrMvc+2n1Q5Y1
R3rCVh8eIJSNktLjLljMK9WGNgZbzPpLE9dldbC+Dgvvjb+Y6D29rVQ1hYyc
3+9K5Ccm4TvJNIf+vJK8NGPPJbWF8ae5jQSbxquS2UZpn9/iyJalTB7em/Yt
G1FW6EeS6giLmiNiJY1thbqTryFDps1m3uLlrFy1kmVLFjGlrYswD7GhztwH
79eGRETek69Rc+jX8b3LKQ12E5WnXk9hT1PFkxu/c/LgRoZXy4JEkpE6M67z
KmHMTDa2vybA0w6JNDtddliwS427zET9N5XuLAxLQ3Po/VaUVyIrPNj0WzyR
QVNp5pyHEp4TWLr1KNcjXnN3dm0U+r3oY6lpDv0avQ/l9es6ijKMO5/yGdjU
iN7fl6JlujPfby1r1iTGd0or8uvPzdacxU0LNgxWaw79mZnFDcksjF2Z6y/m
XtxfbO5YjIaL7r8to4+iOQz+EyoI47QQTunxnH8vHRbD/j7FKNNtAX5rkuaJ
H1NaFjCcm60585aF+mW95tCfmVncQF//slBfyIe4yC10LNqIRW99gH4EzaG9
yfQqQt0U9GvHuetZvz6A9QEb2LR9DwePnuXS9bs8eqF+G3eLNqTqB+yf3oVa
xbIb9K3e54pE5kDp3lt4oNVxY3pVIY4KinWcxzp9+Os3ELDpV3YfPMaZSzcI
ffSS2DRtjSxpjvSFbVkLvCMlzaE5OoQiljTHnVnU+BiaI2YdLZJqDkHLBU1p
jnPukniO/4WtR24QobrH7FpK5EWHcSwNzWFcO9GfB+vE3HUBhnINCNjM9t2H
OHrmMtdDH/Mi9ivr+0U+O1+l5hD6qeszawl9i0QY1/uyL9X9FVMfK3Gg/Raz
vf9kY7ua3d1zI9XbJVo6r6Y5y+gSCqR5erFXP2dPTXPE7qNXHiX5eu41/F/3
YBVNs8nJ0WqtmR8JndWaQ+/Da25dYdzKIPSNLfyEMSCd+aULx7eFEw0XP7Rs
b2myj5DIi/PjyeRrPNZrDoFX++ldQC6E5cJg38nUdO7N3kR79JbtOXb1cyFf
3nzkTRUnygw9ZAzn1jzqZpaSQZqLFr4P021Lp3viR4t8jVj8wHLbMe7fSZG7
jORksnMZ6dAcAq/29THsB8idh+DrUwvnXvsS21x8qObQr/vUsyGDrAiDgtM6
z5DWWVkdL0NPsm3hUOo7mc5SH1cTtsANZQY5hQcd+QAfWZY0R3y6wv7naI54
HqxsRjZZTlqt+fNd/dRarzl0YQupp5QY5i7BVp8NEhH53/J1ag4B1Wm8XfXz
RyVFughzsRTnzKloDmFsVJSb9HYP46lvC7IKc/SsTVcnPx8S6U/LrAoK9v3N
6Bv71VrDWmpyzRFP5LbO5HOox+wQY7+k2txemPsrqTbD3Mfg3wQNdkFuSXMk
ipcR1bmpVHeQCWOsI9XHBafLJ0jctWlUyd2adZEp1RMdt2bWxFYiI3enbTxL
8vdUfYLVK83wE28ShRXyU3UhLEGP2WShyrTE46hh716R1CeYkPfXjhF0OMhg
P5cywRy//tz0zmvOTamBg1SC1KEG44JS8/WeFC3XplYlt+f6RLYtiRB03swa
GQ02sZ22Pk/y99R9gtUrlcTHqvY6P1UTwhLGQpvMVZmWyCe60RZDkYJPMF30
A05tW8Wvf6R2JvyN0RZYv1YgjNupnx3Wt4eCguYoj3eC5hA057Qhv3A3iZZ9
pbejVBQz7P1pTo+muMEHizD+vfd57QTN0YSVZrYf6QlbrwX0dhblvNPQHEsS
a0H1EZPmSLInk5rmSP4dvT1HguZIst5opjmemern5nZC/6Sozgxzn6tRwQx2
VqSoOTxWmtlnaIz2zPr1q0HBMWnkrYqHNx+8W8cVEfkf8dVqDgHt4z2MqJoD
ucSWws2msPuOJX/ff7O9Uy6kyTTHfnrllQtt32xfNeY4o8oIY4PChf77zc9e
aAiZWQeHIl3ZYvJlpItYTkP9HCR3Q3z23OS5Sbe8OLuIdjU9mHTo3TxLfaCv
4RypXaUR7LoTTWz4OdaM702nuoWQywrxw2FN6vH6rzHsJ/vHUSuXwrBPVPi7
Ufid+DPZOZa4iItsnNSDgb4mn6C65wT2KETWZmuITCUvdQ8X42YrRZKxBj8l
uSckdlf3t77PbyT1fe5agF77ktyhF7mFDt/IBC3QEr8kfsQ1J3802Bfo7Ws/
2Pe5Lpz9Y2uTSy7E27YI341cw4mwpOdYtERc2MSk7oPwNZ3X0T3bRY+CDjTz
+yuV8ON5uMjdoJ30NrGJ94HU7OqW4Pv8ZjLf5675e7MvNnFYkZu9+EYqw6HF
msRrRYJeODnCxaAXnJP6PlcfEvSnUN42gk4JSd1/lzZ0JU309kbKb2k195SZ
ltLy5KQvvkEJadWwr1c+Ydws9s6OSC2MgzV78GsiTarhD58qZK88mXP6Obb2
Liua5BTakQ1FWs3jpNmzcU9Osdo3OGX99pbX/No5O1KhzrdfcZF7oWcIuiBo
xXSErd7Xm7wyBUWT2puaiFz+nTB221B3fuI1PfXB/uSXJV9LMWoOoW16bkik
1Sx/R8OB3k5C3rkw4qRlzaGoPdd0N6PwbB8nw5mYSsN3c+eVmvCzaxnfqzN1
CyqQFRzAYbO1C9WvXQzncQq2X8mFe3c5HXRRmFfoCF3RlBxSQb8X8WTuSTNb
57hwTq72I8iQV284N6GcUFeVFB5w6MPOtomIpMHXrDkMaMI4NK8/jYpnR2GT
A5d67eg1ZAwTJ01gRP8etBHm4UVK1sGzjw/bb+n7bS3X14+ia+NSOAg6QKLI
RfnmPfHZaVyf19zbzTh3J2yylqL1uKUEbFrD7GFt8egymyNP3vX72tA51C/u
TvMa+ckojEvyzE4UKVyQ0q2mc/hJEl8F2lD8vIqRSX/3l9wOp7rD2Xzzb5Pt
uZL8tbsyZmMIf6QSr4SwNGFHWDTIgxLZlIL2kJMpd3Fca7hTv15VShbISY7C
NWk/ei0XXsYTc2IhPUzhybKVplGH/ixLZg8SzfEF/encpCzZZMZ7yzIVcef7
Bad4pb/jrbsn1QvYm+54y06Jhh3pq7/jbWk/2tcvgaNchl3BWnj2ms6+t/pC
6APHlaeI+X1pwriydWwH6hXVnyPW3/HmQFF9WU3Z8/b8wfvxhrDgxQxqXFKY
kwv5JrMjt0slarg1oF6VUhTIkZPCNTowes1FXupUnFjQk8YlHYWxQE62Ut/R
od/y5PYgr06woF8XmpTJLjwnIYPEjiJu3VhwMtpwx1v3VjUoYGe64y1bSRp6
9TPc8ba0bwehTmRDLrWnYM3W9Jq2/52+0JxnXLlv6bU32qwObWNsezeKZpUZ
73jLWox6bXszZfdj499v6vfz5eTtuNWKda14np9bTs+K2YQ4K7DP40Kleu5U
LVWC6l3mcSxC6CeuBzCyqwclHeSG9cGc5VvQwyeQB1EbaZNFRuai7nQePJl5
i+fj3aspbp6T2G/mb0L3/DzLerriqN8nss+LcyU33KqWpnj1rsw9lsYdxaY4
Rgb2wzmj1GAvIs1Rn1kXVdaFHXeD9SO/N5WdMd8bdOiDT2CYsX2oz7G0nxd1
C9sb8tLWqQZt+i3jnOoWG8d0w6NUNuN7OcrTrPsktpvsaYyaQ4hLZmfcOw5g
2akrib6jyFmB5j0msz14M+O/b0JJR33eKchRTp93u3iYoMFNmkNiW4Aa7Qaz
+rJWCHsNXkXtDPGRZ8pP3WFbuBllOoujKEDtLmPZeNPYp+gid9HXOZOhnWWQ
5sR91u/E6MPVveDcsl5U1H9Xnpk8zpWp51aNUsVr0GXucSIM9ULo0xY3Ja99
LmpOPfcJ7uwR+Zr56jWHGZqXYVw/G8TOAD98A3Zy8NRV7j5LviatVauIMdw7
Hi/MsbSGu8hVGnNfPtE8vHyEnevWsmHPSUIexyS3F1BH8tTg80tL1KObXDx9
hkv3olKxK9AQeecyF67+yStTP6XVvDbcYa6/012l1qUdL3O0f3P//GF2bl7H
6hW+bNh5mNPXHideW41TE6MSwtPqw0u4c91CHYoVvhP75t13Y4331evvso+J
EeKoFvpPIVxDGMKz0ao3xnfUb4Tf49Hq4y88pzH7tu5FKLfDzbWXDnVMwju8
/U50jOaj+XrWRj3g/KFANvv7smL1RnYeOsO1R9GJwjfGW2uMt0Yfb7WFNXot
sfp0a7ToTOmLNeWdoYxUatRxQrn91xhGbEyMUE7Gd9T68hTmp3FqIQ+FfHr3
7Xhe3PkP4ebrRKb8Nbzz34TvxBCjNp2hnVoFmxxNWHYnHfehCfXi4R/H2b3B
n437L3A/Spfke/q4xyeLo04Vye3zQexY54f/tgOcvP0yhbqsI+rhVY7t3sja
jQc4f//vdNvSqJ5c5/zFW4THJE1XamEb64++LhrL5I2hTN61D7MyM5SL2lS2
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
m4y4Lzbu10TfCGR6TzcK2UmR2uWhSJGCOFXzFp79myvrJtLDozQOUiXlJ/2B
5mkQP/XqTO9R3vSq4ogsaxsCotL3vf9G32Tn9F7UK6Tf67And5FvKeBUnYln
hD5Nc5rRJW2QKJwZZo3W+m86NMd/o/BrlhFJBgUuI09we/1A3FyyoZBIUJT3
4fLb+exrLs9vRpm6w1i1/xSnDm5g7nAPitiVZuw5s32FuHCOL+qNWxU3Wnfv
QzfPOhR1kCN1FNL/939YP8AdF0el8D0h7yYeYd/ISmSVSshg1n/HhgYyvmlV
Ggz5hcCjJ9i3rB+uDo6U7b2Z+3p9I4y/u2f3pUYehZBXOXCuWhXX8mUo29mX
4/4pxV9FQJuCVO/hzbRZC1i0eAmLBWb1qUoW4fvSXC1YdVc/Bsfz/MxSuru7
0bJbb3p6NaFiHiHvpY64jjtCVEI6U4pDxxks+sEsjZOuJLIF1kWeZtH31ajS
fgpr9x7nyI6lDK/vhNKhIj1W/m4IX3tnAwPdi+OokAr5UpqRO7YyqKYLpSpV
plRee6QSGZlL9mP7Y+vWVlSXF9C0TD2GrjrAyVOHCJg7gsZF7Ck19rxZ3LQ8
Ob6YXm5Vqde6B727taZ2UaEuS7PhtdWkF99qjlHs2DKYms6lqVSpNHntZEIe
ZKFk3195bK5RY++yc3wzqjQYytLAYxzft5y+ro44lO3Dpvs6g93mgg7VKWgv
F/LKBvcZu5j+nTOFylairFNmZEI6s9X6ibPPrrLi/9s78/CYzvaPmz3W2IWE
WGMtWmqtklAlRW211FJLaKmgC962CJW+FLFXrbXEvi+NXohdraViTRuEBpHK
QjKZGZmJz3vOzCSZmYzMpO3v+tHr/PH5IzPnnGe7c+7vcz/380yvelSq3ZhX
q4ljq6BYo4kcc9BdLu3GnXeOW5rDGv8UxveVr87/pVxvCQmJFxNbzWG6M482
GjkeHZaR4M792o30LCpH1XIm4jv1xpGD3Eh9THh3T9TNZxBt8x5K3dqPUqpX
mfyrxX9mpCYSf3cnQb4e1B9/lLgH8cQnpmN6dI4DP8ej//1bWqhL0Wf5PmZ+
NpPIBxZ/dW9BW9SqFkyPNuSrvGcZaTyK/4MdQZXR1J8gzPnjeRCfhFa8J+My
Ye28KFS2DdNz5S44x33NoWfHgNLIhWt9R0ZaPkvZTO+SCjufbYwJ483Cvow4
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
AQuz4//ZmGKZ/aYHpd/fZhdXfbJrCN5FWjL9qukvlAfJa7pTVNOWBXF/f9+l
e5ojhUNj65rXuzstvZ3TT67iBMYUYo5vZd7odvhoBL1S4xOO6e4z319jfu87
7rlx5Lmaw/QHc9sIz1BUZdQhV7rrr2mOjOildPZSIi/ZltlRucswxS7jnZJK
Snddxd1sGzP9A5pDz+5BXsgLaPCf6+RcGcNpxtdWIS8/lL1mW/kHNceznHYk
x5xgy7wxtPXxQGaO2+i5Z86nEPTBJyfyjh+6rTkyuTvX3xwHqDLK9Vl6f1tz
5MtuXOCO5tCf5LOaKpTVRhH53P0zEhISLyN2msN0n6WBnshUdfnseO4ci2x0
UYS19cZvsEMevUmMwRZC3Xoud0wm7u0JIXjeac6LeWaePVgn5roJ8z6z7zUc
Z2wNDVWDjwjvzEySb1wnLssH6SIYWt7DPk5hjCbMvzwNxx3JyWHLT3li7uJY
P9RVR5vfdabkaK7F2azppN7hemya2/3mWnOkc/2HPlRWeVBz2G4e2PaT6LPF
fIgGk7N9dsbZUEYvuuWw5pPKpt6lUFUXNIfByIWJDVHJlPgO3UtSHnUT/bGY
69BgkmMO5FN+Hlcbpej/BF+V9zp5lr8PZGmiw3dO6m8m+Sj/aVQUuaoqAzbf
s/dvJ6Yxbs19Ujf2oqhMTbP/2q5vPSYyuCbK52qO3HXI3cZM4ld0wVMmx/Od
5fZ2KZKwmnc9VfgO/8m6z1rM58jSHA4azkZzPHJlCxnnmDb6O246aPQnYo6r
qoZ5rSjjwiQaqOQofIPYk1eMStAcI7M0h0NuUY7msKwhWmKSMkGPBnPIxb7e
bM2x0H5fsf6wVXM4rMHl0hz5shsXuNQcBq7ObU9JdXUGb4+XziKVkPiX4Xgm
mO7c1zQrpkDj158VUbnXn3Wx+wjpUI+mH2/jdq4z0YV3pjD/1bT4nOUzghn+
zSEeGsWzJIuiqNCdqfMnMeaLcITpryUPQ62i1rDFfDc+iFELfuaR1U+Yc1PV
Jei5PsX67BROz+hGwMgdNnPj/JUnztXm+WtQ1hrOd99NYOiohZzM+l0Hw89M
qGvZX/GJW3tlTVyZ+rrzs8+F8n8/sp6pvevhqa5AqzGbuJHrvARBU1UQfItZ
S1g+00eOpuWg7STYaZMoQl4vzeshZ81lmO5tpK+PSpg/+9Bu8j5ibfyS9sGD
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
    "], {{0, 418}, {
    541, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{541, 418},
  PlotRange->{{0, 541}, {0, 418}}]], "Input",ExpressionUUID->"b063998d-66de-\
47a7-bb11-0cd2f27cfca2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CAIMAlgorithm", "[", 
     RowBox[{"values_", ",", "class_", ",", 
      RowBox[{"maxIterations_", " ", ":", "100"}]}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "scheme", ",", "F", ",", "GlobalCAIM", ",", "k", ",", "CAIMScore", ",",
         "classes", ",", "caimResults"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"scheme", " ", "=", " ", 
        RowBox[{"MinMax", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"classes", " ", "=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"DeleteDuplicates", "[", "class", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"F", " ", "=", " ", 
        RowBox[{"Sort", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"GlobalCAIM", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"CAIMScore", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"caimResults", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"k", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"k", "<", "maxIterations"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"scheme", ",", "CAIMScore"}], "}"}], "=", " ", 
           RowBox[{"CAIMStep", "[", 
            RowBox[{"values", ",", "class", ",", "scheme"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"CAIMScore", ">", "GlobalCAIM"}], "||", " ", 
             RowBox[{"k", "<", "classes"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"caimResults", ",", 
               RowBox[{"{", 
                RowBox[{"scheme", ",", "CAIMScore"}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"GlobalCAIM", " ", "=", " ", "CAIMScore"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Return", "[", "caimResults", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"k", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CAIMDiscretize", "[", 
     RowBox[{"values_", ",", "class_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"caimScheme", ",", "parts", ",", "discretizationRule"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"caimScheme", " ", "=", " ", 
        RowBox[{"First", "[", 
         RowBox[{"Last", "[", 
          RowBox[{"CAIMAlgorithm", "[", 
           RowBox[{"values", ",", "class"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parts", " ", "=", " ", 
        RowBox[{"Partition", "[", 
         RowBox[{"caimScheme", ",", "2", ",", "1"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"discretizationRule", " ", "=", " ", 
        RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"First", "[", "#2", "]"}], " ", "\[Equal]", " ", "1"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"x_", " ", "/;", " ", 
               RowBox[{
                RowBox[{"First", "[", "#1", "]"}], "\[LessEqual]", "x", 
                "\[LessEqual]", 
                RowBox[{"Last", "[", "#1", "]"}]}]}], "\[Rule]", 
              RowBox[{
               RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"x_", " ", "/;", " ", 
               RowBox[{
                RowBox[{"First", "[", "#1", "]"}], "<", "x", "\[LessEqual]", 
                RowBox[{"Last", "[", "#1", "]"}]}]}], "\[Rule]", 
              RowBox[{
               RowBox[{"First", "[", "#2", "]"}], "-", "1"}]}]}], 
            "\[IndentingNewLine]", "]"}], "&"}], ",", "\[IndentingNewLine]", 
          "parts"}], "\[IndentingNewLine]", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ReplaceAll", "[", 
        RowBox[{"values", ",", " ", "discretizationRule"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAIMDatabaseDiscretize", "[", "database_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "class", ",", "keys", ",", "discretized", ",", 
       "discretizedRawDatabase"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"class", " ", "=", " ", 
       RowBox[{"Normal", "@", 
        RowBox[{"database", "[", 
         RowBox[{"All", ",", "\"\<Class\>\""}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"keys", " ", "=", " ", 
       RowBox[{"Keys", "[", 
        RowBox[{"First", "[", 
         RowBox[{"Normal", "[", "database", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"discretized", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"CAIMDiscretize", "[", 
           RowBox[{
            RowBox[{"Normal", "@", 
             RowBox[{"database", "[", 
              RowBox[{"All", ",", "#"}], "]"}]}], ",", "class"}], "]"}], 
          "&"}], ",", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"keys", ",", "\"\<Class\>\""}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"discretizedRawDatabase", " ", "=", " ", 
       RowBox[{"Transpose", "@", 
        RowBox[{"Join", "[", 
         RowBox[{"discretized", ",", 
          RowBox[{"{", 
           RowBox[{"Normal", "@", 
            RowBox[{"database", "[", 
             RowBox[{"All", ",", "\"\<Class\>\""}], "]"}]}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Dataset", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Association", "[", 
           RowBox[{"Thread", "[", 
            RowBox[{"keys", "\[Rule]", "#"}], "]"}], "]"}], "&"}], ",", 
         "discretizedRawDatabase"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.760197196335595*^9, 3.760197239439109*^9}, {
  3.760197291913314*^9, 3.7601973662619*^9}, {3.7601974341496687`*^9, 
  3.760197465827134*^9}, {3.76019754325834*^9, 3.7601976054460278`*^9}, {
  3.760197637532243*^9, 3.760197759825673*^9}, {3.760197871675029*^9, 
  3.760197882099177*^9}, {3.760231017526154*^9, 3.7602310439076157`*^9}, {
  3.760231116310206*^9, 3.760231185693392*^9}, {3.7602312468733273`*^9, 
  3.760231346373892*^9}, {3.760231499078429*^9, 3.760231512234563*^9}, {
  3.7603955830594883`*^9, 3.760395595080039*^9}, {3.7603957099771223`*^9, 
  3.760395718514382*^9}, {3.7603957902968597`*^9, 3.7603957916973057`*^9}, {
  3.760447848858698*^9, 3.76044785224424*^9}, {3.760448076846663*^9, 
  3.760448088969956*^9}, {3.7608807931011553`*^9, 3.7608808710051928`*^9}, {
  3.760881582642002*^9, 3.7608816300198107`*^9}, {3.760881674696254*^9, 
  3.760881709718622*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"72e8a4e0-d4a1-4bab-82a2-cff1a2847e4a"],

Cell[CellGroupData[{

Cell["Ejemplo:", "Subsection",
 CellChangeTimes->{{3.7616077125095882`*^9, 
  3.7616077149894047`*^9}},ExpressionUUID->"61801898-fe8d-4795-b42f-\
8a17d0c19502"],

Cell["\<\
CAIMAlgorithm ejecuta el algoritmo CAIM mostrando el puntaje en cada iteraci\
\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.761607719783141*^9, 
  3.761607736902872*^9}},ExpressionUUID->"4afd560a-c83b-4929-a81f-\
41b213116911"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CAIMAlgorithm", "[", 
  RowBox[{"values", ",", "class"}], "]"}]], "Input",
 CellChangeTimes->{{3.760197767391733*^9, 3.760197770822362*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8f643a0f-e328-4c7b-9648-723e698f731e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4.3`", ",", "5.5`", ",", "7.9`"}], "}"}], ",", 
     "31.91264667535854`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4.3`", ",", "5.5`", ",", "6.199999999999999`", ",", "7.9`"}], 
      "}"}], ",", "26.636271740334553`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7602314723238487`*^9, {3.7602315084967337`*^9, 3.7602315138874197`*^9}, 
   3.7603958282751913`*^9, {3.760447859021558*^9, 3.760447885359771*^9}, 
   3.760451249725028*^9, {3.760451554809388*^9, 3.760451580022768*^9}, 
   3.760879738924882*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"0a4a127e-3f76-4de1-a5dc-83950f5a947d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CAIMStep", "[", 
  RowBox[{"values", ",", "class", ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "6.2`", ",", "7.9`"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->
  "(Debug) In[57]:=",ExpressionUUID->"8ad2059b-103d-473e-a748-2c4c21d2f00e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.4`", ",", "5.5`", ",", "6.2`", ",", "7.9`"}], 
    "}"}], ",", "21.245468379659556`"}], "}"}]], "Output",
 CellChangeTimes->{3.7604464116222057`*^9, 3.7604478875539227`*^9, 
  3.760451249859866*^9, 3.7604515573099623`*^9},
 CellLabel->
  "(Debug) Out[57]=",ExpressionUUID->"9e707284-58a5-47dd-a92a-a439ed79fe8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantaMatrix", "[", 
  RowBox[{"values", ",", "class", ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "7.9`"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.76039584515547*^9, 3.760395854432374*^9}},
 CellLabel->
  "(Debug) In[26]:=",ExpressionUUID->"36c880f3-e03e-48e7-96b3-aec9919976f9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"QuantaMatrix\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Iris-setosa\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"47", ",", "3"}], "}"}]}], ",", 
      RowBox[{"\<\"Iris-versicolor\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"11", ",", "39"}], "}"}]}], ",", 
      RowBox[{"\<\"Iris-virginica\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "49"}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Values\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"47", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11", ",", "39"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "49"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ClassTotals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"50", ",", "50", ",", "50"}], "}"}]}], ",", 
   RowBox[{"\<\"IntervalTotals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"59", ",", "91"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",\

 CellChangeTimes->{3.7603958546727743`*^9, 3.760451249881082*^9},
 CellLabel->
  "(Debug) Out[26]=",ExpressionUUID->"c144aaab-b3d2-4d15-ac55-2cc51a4cdb9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantaMatrix", "[", 
  RowBox[{"values", ",", "class", ",", 
   RowBox[{"{", 
    RowBox[{"4.3`", ",", "5.5`", ",", "6.2`", ",", "7.9`"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.7603958676994457`*^9},
 CellLabel->
  "(Debug) In[27]:=",ExpressionUUID->"dead36ca-b861-46de-afe1-f30653491522"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"QuantaMatrix\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Iris-setosa\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"47", ",", "3", ",", "0"}], "}"}]}], ",", 
      RowBox[{"\<\"Iris-versicolor\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"11", ",", "25", ",", "14"}], "}"}]}], ",", 
      RowBox[{"\<\"Iris-virginica\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "12", ",", "37"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Values\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"47", ",", "3", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11", ",", "25", ",", "14"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "12", ",", "37"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ClassTotals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"50", ",", "50", ",", "50"}], "}"}]}], ",", 
   RowBox[{"\<\"IntervalTotals\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"59", ",", "40", ",", "51"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.7603958687094707`*^9, 3.7604512499052687`*^9},
 CellLabel->
  "(Debug) Out[27]=",ExpressionUUID->"28e9753b-f69d-409f-b5e4-bcfff8bbdc5c"]
}, Open  ]],

Cell["CAIMDiscretize discretiza un solo atributo.", "Text",
 CellChangeTimes->{{3.761607746002274*^9, 
  3.761607756081955*^9}},ExpressionUUID->"c0ef403c-6a66-4603-89ca-\
5f2e621534cc"],

Cell[CellGroupData[{

Cell[BoxData["values"], "Input",
 CellChangeTimes->{{3.7616559511469097`*^9, 3.761655951816189*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"d1d8a8af-3dd8-4832-ab53-e89cca749627"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.1`", ",", "4.9`", ",", "4.7`", ",", "4.6`", ",", "5.`", ",", "5.4`", ",",
    "4.6`", ",", "5.`", ",", "4.4`", ",", "4.9`", ",", "5.4`", ",", "4.8`", 
   ",", "4.8`", ",", "4.3`", ",", "5.8`", ",", "5.7`", ",", "5.4`", ",", 
   "5.1`", ",", "5.7`", ",", "5.1`", ",", "5.4`", ",", "5.1`", ",", "4.6`", 
   ",", "5.1`", ",", "4.8`", ",", "5.`", ",", "5.`", ",", "5.2`", ",", "5.2`",
    ",", "4.7`", ",", "4.8`", ",", "5.4`", ",", "5.2`", ",", "5.5`", ",", 
   "4.9`", ",", "5.`", ",", "5.5`", ",", "4.9`", ",", "4.4`", ",", "5.1`", 
   ",", "5.`", ",", "4.5`", ",", "4.4`", ",", "5.`", ",", "5.1`", ",", "4.8`",
    ",", "5.1`", ",", "4.6`", ",", "5.3`", ",", "5.`", ",", "7.`", ",", 
   "6.4`", ",", "6.9`", ",", "5.5`", ",", "6.5`", ",", "5.7`", ",", "6.3`", 
   ",", "4.9`", ",", "6.6`", ",", "5.2`", ",", "5.`", ",", "5.9`", ",", "6.`",
    ",", "6.1`", ",", "5.6`", ",", "6.7`", ",", "5.6`", ",", "5.8`", ",", 
   "6.2`", ",", "5.6`", ",", "5.9`", ",", "6.1`", ",", "6.3`", ",", "6.1`", 
   ",", "6.4`", ",", "6.6`", ",", "6.8`", ",", "6.7`", ",", "6.`", ",", 
   "5.7`", ",", "5.5`", ",", "5.5`", ",", "5.8`", ",", "6.`", ",", "5.4`", 
   ",", "6.`", ",", "6.7`", ",", "6.3`", ",", "5.6`", ",", "5.5`", ",", 
   "5.5`", ",", "6.1`", ",", "5.8`", ",", "5.`", ",", "5.6`", ",", "5.7`", 
   ",", "5.7`", ",", "6.2`", ",", "5.1`", ",", "5.7`", ",", "6.3`", ",", 
   "5.8`", ",", "7.1`", ",", "6.3`", ",", "6.5`", ",", "7.6`", ",", "4.9`", 
   ",", "7.3`", ",", "6.7`", ",", "7.2`", ",", "6.5`", ",", "6.4`", ",", 
   "6.8`", ",", "5.7`", ",", "5.8`", ",", "6.4`", ",", "6.5`", ",", "7.7`", 
   ",", "7.7`", ",", "6.`", ",", "6.9`", ",", "5.6`", ",", "7.7`", ",", 
   "6.3`", ",", "6.7`", ",", "7.2`", ",", "6.2`", ",", "6.1`", ",", "6.4`", 
   ",", "7.2`", ",", "7.4`", ",", "7.9`", ",", "6.4`", ",", "6.3`", ",", 
   "6.1`", ",", "7.7`", ",", "6.3`", ",", "6.4`", ",", "6.`", ",", "6.9`", 
   ",", "6.7`", ",", "6.9`", ",", "5.8`", ",", "6.8`", ",", "6.7`", ",", 
   "6.7`", ",", "6.3`", ",", "6.5`", ",", "6.2`", ",", "5.9`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.761655952148629*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"ee50d739-b04b-45e3-83ae-41761eb45ee9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CAIMDiscretize", "[", 
  RowBox[{"values", ",", "class"}], "]"}]], "Input",
 CellChangeTimes->{{3.760881775925108*^9, 3.760881783091558*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"7ece168d-ab4d-4782-ac5b-f76a1fab361b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", ",", "2", ",", "2", 
   ",", "0", ",", "2", ",", "1", ",", "2", ",", "0", ",", "2", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "1", ",", "2", ",", 
   "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
   ",", "1", ",", "0", ",", "1", ",", "2", ",", "2", ",", "1", ",", "0", ",", 
   "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "0", ",", "1", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", 
   "2", ",", "0", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
   "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
   "2", ",", "2", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", ",", "1", 
   ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.760881783339231*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"b41dc6ed-71d7-4a23-9506-f4a89f872c94"]
}, Open  ]],

Cell["CAIMDatabaseDiscretize discretiza toda la base de datos.", "Text",
 CellChangeTimes->{{3.761607759041444*^9, 
  3.761607769348722*^9}},ExpressionUUID->"524adf3b-087a-4283-9fe7-\
81eda975eedb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CAIMDatabaseDiscretize", "[", "data", "]"}]], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"c0022745-795c-4538-90ee-cc6d54c6f363"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 20, "Length" -> 150, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Sepal length", "Sepal width", "Petal length", "Petal width", 
            "Class"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Iris-setosa", "Iris-versicolor", "Iris-virginica"]]}], 150], 
        "Shape" -> TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Sepal length"} -> 1, {All, "Sepal width"} -> 
           1, {All, "Petal length"} -> 1, {All, "Petal width"} -> 
           1, {All, "Class"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Sepal length" -> TypeSystem`PackageScope`AtomShape[34], 
              "Sepal width" -> TypeSystem`PackageScope`AtomShape[34], 
              "Petal length" -> TypeSystem`PackageScope`AtomShape[34], 
              "Petal width" -> TypeSystem`PackageScope`AtomShape[34], "Class" -> 
              TypeSystem`PackageScope`AtomShape[135.]]]], 20, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1699561658], 
        "Type" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Sepal length", "Sepal width", "Petal length", "Petal width", 
            "Class"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Iris-setosa", "Iris-versicolor", "Iris-virginica"]]}], 150], 
        "HandleQ" -> True, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1699561658]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sepal length\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sepal length\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1942289832][{All, "Sepal length"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[All, "Sepal length"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sepal width\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Sepal width\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1942289832][{All, "Sepal width"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[All, "Sepal width"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Petal length\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Petal length\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1942289832][{All, "Petal length"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[All, "Petal length"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Petal width\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Petal width\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1942289832][{All, "Petal width"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[All, "Petal width"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Class\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Class\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1942289832][{All, "Class"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[All, "Class"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[1, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[1, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[1, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[1, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[1, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[2, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[2, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[2, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[2, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[2, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[3, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[3, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[3, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[3, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[3, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[4, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[4, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[4, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[4, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[4, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[5, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[5, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[5, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[5, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[5, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[6, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[6, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[6, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[6, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[6, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[7, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[7, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[7, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[7, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[7, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[8, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[8, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[8, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[8, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[8, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[9, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[9, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[9, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[9, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[9, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[10, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[10, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[10, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[10, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[10, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[11, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[11, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[11, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[11, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[11, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[12, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[12, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[12, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[12, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[12, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[13, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[13, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[13, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[13, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[13, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[14, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[14, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[14, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[14, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[14, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[15, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[15, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[15, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[15, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[15, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[16, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[16, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[16, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[16, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[16, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[17, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[17, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[17, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[17, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[17, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[18, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[18, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[18, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[18, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[18, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[19, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[19, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[19, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[19, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[19, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[20, 
                   Key["Sepal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["2"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[20, 
                   Key["Sepal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[20, 
                   Key["Petal length"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["0"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[20, 
                   Key["Petal width"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Iris-setosa", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
                  GeneralUtilities`Slice[20, 
                   Key["Class"]]], "Mouse"], 
                ImageSize -> {{135., Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    150 (-20), {1, 150 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 150 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    150, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 150 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    150 20, {1, 150 - 20 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    150 (-20), {1, 150 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 150 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    150, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 150 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    150 20, {1, 150 - 20 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1942289832},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1942289832},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1942289832},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1942289832},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1942289832},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1942289832][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1942289832]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1942289832][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {507., {291., 298.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.761656157182023*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"59ee44b7-0c86-49ef-9888-aec941b442d1"]
}, Open  ]],

Cell["Exportaci\[OAcute]n de base de datos discretizada", "Text",
 CellChangeTimes->{{3.762087245146243*^9, 
  3.7620872562489357`*^9}},ExpressionUUID->"a276b56e-4816-4654-a39b-\
df3fba043b20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "@", 
  RowBox[{"Normal", "[", 
   RowBox[{"CAIMDatabaseDiscretize", "[", "data", "]"}], "]"}]}]], "Input",
 CellLabel->"In[28]:=",ExpressionUUID->"7d7b957d-e054-4f61-87b6-014947a1c372"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0", ",", "0", ",", "\<\"Iris-setosa\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-versicolor\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "1", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "1", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "1", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "1", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "0", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "2", ",", "2", ",", "\<\"Iris-virginica\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.761656421152629*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"31c7778f-26bb-4257-90da-3396717fb3d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<discretizada.csv\>\""}], "}"}], "]"}], ",", 
   RowBox[{"Values", "@", 
    RowBox[{"Normal", "[", 
     RowBox[{"CAIMDatabaseDiscretize", "[", "data", "]"}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7608817191751757`*^9, 3.760881722094055*^9}, {
  3.7616560088750896`*^9, 3.761656023540963*^9}, {3.761656142228726*^9, 
  3.761656149900185*^9}, {3.761656182429583*^9, 3.7616561862757683`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"933618d5-679e-4c6d-8068-39cc5fac2f46"],

Cell[BoxData["\<\"/home/carlos/Documentos/Programacion/Fisica-Mathematica/\
Machine_Learning/CAIM/discretizada.csv\"\>"], "Output",
 CellChangeTimes->{
  3.760880906174593*^9, 3.760881722876992*^9, 3.7616559755902233`*^9, 
   3.761656012330864*^9, {3.76165614406423*^9, 3.7616561508505363`*^9}, 
   3.7616561880383673`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"28748499-e8ad-403d-95d8-b3ae431d68de"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1019},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 232, 4, 99, "Title",ExpressionUUID->"be685bdb-1f1f-4c79-a12d-5fe400b74f15"],
Cell[CellGroupData[{
Cell[837, 30, 202, 3, 55, "Subsection",ExpressionUUID->"23213e5f-0ea1-404e-aaac-3394d71060d9"],
Cell[1042, 35, 478, 11, 108, "Text",ExpressionUUID->"08dca9f4-81dc-4c48-a1af-5fe56187d51b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1557, 51, 170, 3, 65, "Subchapter",ExpressionUUID->"2e700662-c47e-4335-ade0-f14fe57efaad"],
Cell[CellGroupData[{
Cell[1752, 58, 578, 12, 47, "Input",ExpressionUUID->"0a27381d-33a1-4073-a16b-29d3728120dd",
 InitializationCell->True],
Cell[2333, 72, 78537, 1606, 608, "Output",ExpressionUUID->"5640e947-4972-4268-95fe-42649946efeb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[80919, 1684, 177, 2, 65, "Subchapter",ExpressionUUID->"74658926-3095-4944-86f3-0713684202c0"],
Cell[81099, 1688, 421, 8, 36, "Text",ExpressionUUID->"40530c0d-7595-4abc-b19c-7dc004cfe309"],
Cell[81523, 1698, 9606, 162, 80, "Input",ExpressionUUID->"009e2ed6-46e5-4fad-b648-eb5990b3eccd"],
Cell[91132, 1862, 99279, 1632, 245, "Input",ExpressionUUID->"3f7bbb7e-1184-415c-b4c7-711fbd344bc8"],
Cell[190414, 3496, 4636, 105, 554, "Input",ExpressionUUID->"026175b0-253a-4890-bd94-a32a4da54e63",
 InitializationCell->True],
Cell[195053, 3603, 663, 18, 36, "Text",ExpressionUUID->"b0bca2f2-4201-4d9a-90a9-fdb84e239876"],
Cell[195719, 3623, 15494, 259, 128, "Input",ExpressionUUID->"e93902a5-a53b-43e2-a675-f0f09c9e425a"],
Cell[211216, 3884, 4068, 104, 493, "Input",ExpressionUUID->"ddc971fb-fec0-4418-912c-96c60c8c1434",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[215309, 3992, 160, 3, 55, "Subsection",ExpressionUUID->"0a1098cb-78a1-4f53-87c5-5379c8054ec1"],
Cell[215472, 3997, 294, 6, 36, "Text",ExpressionUUID->"d353e0b5-8e95-4391-92d3-b95e163a31e2"],
Cell[CellGroupData[{
Cell[215791, 4007, 313, 6, 31, "Input",ExpressionUUID->"4196c346-a7d5-416b-ac67-eedb17f96b49"],
Cell[216107, 4015, 2219, 32, 105, "Output",ExpressionUUID->"d225f8fe-e151-47a8-ba98-13a2e3a86038"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218363, 4052, 283, 6, 31, "Input",ExpressionUUID->"82e3babe-4047-4e3b-8030-e3db71d67401"],
Cell[218649, 4060, 5023, 79, 289, "Output",ExpressionUUID->"e91fda74-e8e0-488d-b001-5c226f15d03d"]
}, Open  ]],
Cell[223687, 4142, 403, 8, 36, "Text",ExpressionUUID->"b4a57f83-1c2e-42ef-bfd3-88dc3257eee8"],
Cell[CellGroupData[{
Cell[224115, 4154, 249, 4, 31, "Input",ExpressionUUID->"64b207ab-16a2-4309-ad32-fd296f50167e"],
Cell[224367, 4160, 389, 7, 35, "Output",ExpressionUUID->"c77153d6-1607-402d-b540-ab442cd9bbda"]
}, Open  ]],
Cell[224771, 4170, 311, 7, 36, "Text",ExpressionUUID->"184cad6b-5b7b-4444-a900-17d73990bd2e"],
Cell[CellGroupData[{
Cell[225107, 4181, 1316, 27, 262, "Input",ExpressionUUID->"41c9b673-1036-403d-9c90-2fa42fc057fb"],
Cell[226426, 4210, 7163, 202, 343, "Output",ExpressionUUID->"08c3069a-dd05-40fe-ab41-df1423c76661"]
}, Open  ]],
Cell[233604, 4415, 212, 5, 36, "Text",ExpressionUUID->"4b7c1e95-9911-4984-a530-3a8b9decd06e"],
Cell[CellGroupData[{
Cell[233841, 4424, 373, 7, 34, "Input",ExpressionUUID->"2a150213-98e5-468e-8d4d-2bd774e9b292"],
Cell[234217, 4433, 244, 4, 35, "Output",ExpressionUUID->"41ff432e-da02-46da-b043-ce9b46d696a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234498, 4442, 249, 4, 31, "Input",ExpressionUUID->"4b15b4fb-8156-4d23-a43c-25f3b35ee935"],
Cell[234750, 4448, 676, 11, 35, "Output",ExpressionUUID->"7ae6c17a-adb7-4c5e-92ff-5c18279372c0"]
}, Open  ]],
Cell[235441, 4462, 263, 6, 36, "Text",ExpressionUUID->"6fd35f3d-5955-42da-8920-7819119d9a54"],
Cell[CellGroupData[{
Cell[235729, 4472, 683, 17, 31, "Input",ExpressionUUID->"61335098-e9ec-411a-ba86-9d5b930ba4f2"],
Cell[236415, 4491, 1426, 21, 59, "Output",ExpressionUUID->"8525b4c4-2f45-4b52-a159-20fba570aec4"]
}, Open  ]],
Cell[237856, 4515, 250, 6, 36, "Text",ExpressionUUID->"ffc6ab21-fcbe-41bd-9ede-11a44b3dfb64"],
Cell[CellGroupData[{
Cell[238131, 4525, 281, 8, 31, "Input",ExpressionUUID->"37e3c534-21b6-46a5-97d2-3a27ee8dca68"],
Cell[238415, 4535, 6063, 150, 151, "Output",ExpressionUUID->"9014e011-8352-4d26-8dd3-c720c62af5da"]
}, Open  ]],
Cell[244493, 4688, 219, 5, 36, "Text",ExpressionUUID->"ca212350-a66c-4a8e-8927-eb815fd5e565"],
Cell[CellGroupData[{
Cell[244737, 4697, 281, 5, 31, "Input",ExpressionUUID->"90a64fed-8f22-4d47-8440-3b888f153b80"],
Cell[245021, 4704, 478, 10, 35, "Output",ExpressionUUID->"a88135a3-b50d-487f-b641-33ff6a606955"]
}, Open  ]],
Cell[245514, 4717, 270, 6, 36, "Text",ExpressionUUID->"5dab6eb2-ae54-4c38-87f5-cc18f79c591d"],
Cell[CellGroupData[{
Cell[245809, 4727, 289, 6, 34, "Input",ExpressionUUID->"64ef1e32-cab6-4535-8ebf-4dfcfe3f40be"],
Cell[246101, 4735, 196, 4, 35, "Output",ExpressionUUID->"067f396f-8d53-4f32-aa5c-933b9bc91fc9"]
}, Open  ]],
Cell[246312, 4742, 179, 3, 36, "Text",ExpressionUUID->"321fc543-bb61-4074-b4bd-c9594cbd1748"],
Cell[CellGroupData[{
Cell[246516, 4749, 324, 6, 34, "Input",ExpressionUUID->"4d15fd06-d6d4-4aa3-8775-47da5eae7cb9"],
Cell[246843, 4757, 1220, 32, 35, "Output",ExpressionUUID->"5061cb25-2b26-4c0b-aa84-e498a7281a39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248100, 4794, 409, 9, 34, "Input",ExpressionUUID->"002fc099-5e62-4d83-bf07-c9a0045f5744"],
Cell[248512, 4805, 768, 22, 68, "Output",ExpressionUUID->"192fb164-2810-4bb7-868e-bb54849bd2e8"]
}, Open  ]],
Cell[249295, 4830, 185, 3, 36, "Text",ExpressionUUID->"8e589f94-3eda-4a14-90cc-de2fb784877e"],
Cell[CellGroupData[{
Cell[249505, 4837, 325, 7, 171, "Input",ExpressionUUID->"4f017426-d843-4c2d-83cb-0657691c0e04"],
Cell[249833, 4846, 499, 11, 178, "Output",ExpressionUUID->"3b172f71-2f96-4719-b1d7-0da714bbbabb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250369, 4862, 319, 8, 171, "Input",ExpressionUUID->"93064671-e59d-455e-b533-3a59251f7f35"],
Cell[250691, 4872, 413, 9, 178, "Output",ExpressionUUID->"a1b3b4fb-1b17-431f-8d81-051b8f2cfaa3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[251165, 4888, 168, 3, 327, "Subchapter",ExpressionUUID->"c293a061-7809-457c-98ce-a7e2a986e53b"],
Cell[251336, 4893, 414, 8, 303, "Text",ExpressionUUID->"c94c9b2a-4996-43f6-91a7-cd9196e07373"],
Cell[251753, 4903, 58182, 959, 1056, "Input",ExpressionUUID->"adb95b1d-2fae-42de-9bc1-9c9a75cc0108"],
Cell[309938, 5864, 136819, 2248, 431, "Input",ExpressionUUID->"b063998d-66de-47a7-bb11-0cd2f27cfca2"],
Cell[446760, 8114, 7723, 177, 1037, "Input",ExpressionUUID->"72e8a4e0-d4a1-4bab-82a2-cff1a2847e4a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[454508, 8295, 160, 3, 55, "Subsection",ExpressionUUID->"61801898-fe8d-4795-b42f-8a17d0c19502"],
Cell[454671, 8300, 239, 6, 36, "Text",ExpressionUUID->"4afd560a-c83b-4929-a81f-41b213116911"],
Cell[CellGroupData[{
Cell[454935, 8310, 243, 4, 31, "Input",ExpressionUUID->"8f643a0f-e328-4c7b-9648-723e698f731e"],
Cell[455181, 8316, 738, 18, 35, "Output",ExpressionUUID->"0a4a127e-3f76-4de1-a5dc-83950f5a947d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455956, 8339, 277, 7, 34, "Input",ExpressionUUID->"8ad2059b-103d-473e-a748-2c4c21d2f00e"],
Cell[456236, 8348, 397, 9, 35, "Output",ExpressionUUID->"9e707284-58a5-47dd-a92a-a439ed79fe8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456670, 8362, 330, 7, 34, "Input",ExpressionUUID->"36c880f3-e03e-48e7-96b3-aec9919976f9"],
Cell[457003, 8371, 1255, 33, 35, "Output",ExpressionUUID->"c144aaab-b3d2-4d15-ac55-2cc51a4cdb9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458295, 8409, 325, 8, 34, "Input",ExpressionUUID->"dead36ca-b861-46de-afe1-f30653491522"],
Cell[458623, 8419, 1339, 34, 35, "Output",ExpressionUUID->"28e9753b-f69d-409f-b5e4-bcfff8bbdc5c"]
}, Open  ]],
Cell[459977, 8456, 185, 3, 36, "Text",ExpressionUUID->"c0ef403c-6a66-4603-89ca-5f2e621534cc"],
Cell[CellGroupData[{
Cell[460187, 8463, 179, 2, 31, "Input",ExpressionUUID->"d1d8a8af-3dd8-4832-ab53-e89cca749627"],
Cell[460369, 8467, 2217, 32, 105, "Output",ExpressionUUID->"ee50d739-b04b-45e3-83ae-41761eb45ee9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462623, 8504, 244, 4, 31, "Input",ExpressionUUID->"7ece168d-ab4d-4782-ac5b-f76a1fab361b"],
Cell[462870, 8510, 1756, 25, 59, "Output",ExpressionUUID->"b41dc6ed-71d7-4a23-9506-f4a89f872c94"]
}, Open  ]],
Cell[464641, 8538, 198, 3, 36, "Text",ExpressionUUID->"524adf3b-087a-4283-9fe7-81eda975eedb"],
Cell[CellGroupData[{
Cell[464864, 8545, 157, 2, 31, "Input",ExpressionUUID->"c0022745-795c-4538-90ee-cc6d54c6f363"],
Cell[465024, 8549, 78049, 1600, 608, "Output",ExpressionUUID->"59ee44b7-0c86-49ef-9888-aec941b442d1"]
}, Open  ]],
Cell[543088, 10152, 193, 3, 36, "Text",ExpressionUUID->"a276b56e-4816-4654-a39b-df3fba043b20"],
Cell[CellGroupData[{
Cell[543306, 10159, 219, 4, 31, "Input",ExpressionUUID->"7d7b957d-e054-4f61-87b6-014947a1c372"],
Cell[543528, 10165, 17775, 554, 496, "Output",ExpressionUUID->"31c7778f-26bb-4257-90da-3396717fb3d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[561340, 10724, 663, 15, 31, "Input",ExpressionUUID->"933618d5-679e-4c6d-8068-39cc5fac2f46"],
Cell[562006, 10741, 402, 6, 35, "Output",ExpressionUUID->"28748499-e8ad-403d-95d8-b3ae431d68de"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

