(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2350600,      45052]
NotebookOptionsPosition[   2258729,      43610]
NotebookOutlinePosition[   2259475,      43634]
CellTagsIndexPosition[   2259384,      43629]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["D\[IAcute]a 1 - Introducci\[OAcute]n al lenguaje", "Title",
 CellChangeTimes->{{3.7161564046486683`*^9, 
  3.716156414905035*^9}},ExpressionUUID->"bdff2f26-a159-4dca-82a8-\
f9ffc4e6d163"],

Cell["\<\
Autor: Carlos Manuel Rodr\[IAcute]guez Mart\[IAcute]nez
Email: fis.carlosmanuel@gmail.com\
\>", "Subsection",
 CellChangeTimes->{{3.727307813087194*^9, 
  3.7273078351593657`*^9}},ExpressionUUID->"debb2b2c-ed10-4907-93cc-\
70685854f19f"],

Cell[CellGroupData[{

Cell["Introducci\[OAcute]n", "Chapter",
 CellChangeTimes->{{3.716156506111926*^9, 
  3.7161565082721*^9}},ExpressionUUID->"f205be8a-e2b4-4387-8757-cacf562f9c17"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"googleCS", "=", 
   RowBox[{"ServiceConnect", "[", "\"\<GoogleCustomSearch\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"results", "=", 
   RowBox[{"googleCS", "[", 
    RowBox[{"\"\<Search\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Query\>\"", "\[Rule]", "\"\<Wolfram language\>\""}], ",", 
       
       RowBox[{"MaxItems", "\[Rule]", "200"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"WordCloud", "[", 
  RowBox[{"DeleteStopwords", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"Map", "[", 
      RowBox[{"TextWords", ",", 
       RowBox[{"Normal", "[", 
        RowBox[{"results", "[", 
         RowBox[{"All", ",", "\"\<Snippet\>\""}], "]"}], "]"}]}], "]"}], 
     "]"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.716154770061214*^9, 3.7161547736759*^9}, {
  3.716156358555408*^9, 3.716156388153757*^9}, {3.7161564222734413`*^9, 
  3.7161564263319187`*^9}},ExpressionUUID->"72dc9dd3-d17d-43df-8714-\
dd83419e2e9a"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Wolfram\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.20527859237536658`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"language\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15762463343108504`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {3., -40.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"programming\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0714809384164223],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-11., 41.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Mathematica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06964809384164222],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., 63.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Computational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036656891495601175`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {0., -78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Wolfram|Alpha\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03848973607038123],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {0., 81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"knowledge-based\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {0., 93.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Development\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {0., -92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"technology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03848973607038123],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {0., -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"engineering\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-21., 106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"programmers\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-94., -68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Raspberry\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036656891495601175`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {0., 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Stephen\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.042155425219941346`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {111., 27.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"computation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-91., 79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"symbolic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04032258064516129],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {87., 79.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Science\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04582111436950147],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {111., 42.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Language\[LongDash]\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {88., -78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"platform\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04032258064516129],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-76., -91.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Introduction\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-3., -120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sophisticated\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {83., -93.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Launching\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {66., 105.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Research\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03848973607038123],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-114., 54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"deployment\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-89., 92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"software\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036656891495601175`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {113., 57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"including\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-71., -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Wolfram's\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {72., -108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mathematical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {0., 131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Collection\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-68., 115.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"program\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {62., 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"provides\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {64., -122.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"computing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {0., -132.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"project\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-123., 38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"knowledge\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-73., -119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"available\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-67., 127.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interface\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {65., 129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"students\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-62., -132.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Enterprise\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {118., 114.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Computer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {119., -120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"automated\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {73., -134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"problems\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-101., 103.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"engine\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {119., 92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cloud\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04032258064516129],
     FontColor->RGBColor[1, 0.75, 0]], {-120., 115.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"introduces\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {0., 142.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"functional\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {7., -143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"tutorial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-52., 140.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Thinking\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-129., 65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"powerful\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {63., 143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Open\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-140., -29.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"resources\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-52., -144.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2017\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04398826979472141],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-129., -85.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"projects\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {136., -67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Image\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-118., -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"learning\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {126., -104.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Building\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-98., 138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Products\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {118., 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"neural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-112., -131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"range\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-140., -43.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"released\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {35., 22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"online\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-124., -120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {138., 67.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"making\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {108., 138.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Code\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03848973607038123],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {124., -134.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Finance\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-105., -143.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"created\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {0., 153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"make\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {146., -30.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"basic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {145., -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"started\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {0., -154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nearly\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {53., -145.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"book\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {38., 153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"natural\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-43., 153.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"learn\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-147., -57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"access\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {143., 79.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Alpha\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {142., -80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03848973607038123],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-142., 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MXNet\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {74., 154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"uses\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036656891495601175`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {88., -145.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"used\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03482404692082111],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-79., 152.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2016\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-152., -70.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2015\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {110., 149.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2014\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {-111., 149.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"just\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {-154., -13.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Start\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-96., -154.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"free\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03482404692082111],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-142., 101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"latest\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {142., 101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036656891495601175`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {151., -92.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"post\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {68., 91.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2013\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-152., -98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"GIFs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-136., 129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"use\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04032258064516129],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {119., -147.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"math\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-153., -109.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"like\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {156., 8.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"1988\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {-147., -132.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Dec\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031158357771260997`],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {157., 20.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Fast\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {-157., 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mar\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-67., 22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"APL\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {158., -3.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"net\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032991202346041054`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {157., -14.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Pi\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.036656891495601175`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {30., -6.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"19\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {105., 101.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\:0432\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02932551319648094],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {3., 0.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic},
  PlotRange->{{-170.5, 170.5}, {-161., 161.}}]], "Output",
 CellChangeTimes->{
  3.727217707929652*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvQV8XMfVPryvJVOgKTOkjGlTbvIW0rRNmrRpm6YNk+04ZmZmZo6ZZSYZ
ZRAzMzPvarWCZTzfOefemXtlrWXJTt7/d/2T5D137syZmTPPHJq7LwyZOnL4
uCFTRw0b8uizk4dMHDlq2JRHn5kwGUkh/2Mw9HsKfx591ED/B4NB/NKup+mX
ntJrwvv85wEAjw185ZfAc2sKuI79CZy7fwiObV/Bv98H1+kXwJuxlcqEcvFP
QKCjGtyX3uHbji1fxJ8vgK/wuFp3ALz5R8AV9jQ4dnwdnHseA/e1ERBorwJP
1HQu6zdmG/pxXSHgNxcxzX19jGEA0/C31wGe6Fng3PdTcGz9snL/xgSu/ZSe
8wfBV3yabxO3rpPPY7Hx3At3+Bvg2P4o33Me/l8IOFuxMYV91+l/KFUiW96U
teBN3YBsFHL13uw9yjN7fgSemDngSVoBrhN/VUbi/Cu9Yt+TtJJpNHKe5FVc
v6/y+mi+PYhHKLdkJtxK/g2cv/UpOH19AFyK/gok57wOHdZ8hcv+0NaZDVEp
v4ezNx6Ek9cMcDH6S2qrg6CmMQwiEh6DM9cHwYXIz0Bq7jvgchu5bFL2K4I5
p6uJH80tmYEVqmOLreeVzuEWT0WE8P3Kut2iZrenFXJKpsHVuO8gYwPh3M1H
ICL+R5BVNB6ZKwhRi5nbEiAy5bcqA5+GtLyhYHNUcm1ZRcpM9dPPFI5UXRx4
c/biTLQZFEEKpVnB0X2WR8sTO1/wDR47y5Xr+DMq39iXg79meQp01qsTGYry
NFOZfGVS7jwnISwbVCW4Ow3jmDYYAgEvdyAp+2UoqlwJ1Q0HoahiOQ8NjaTV
XqaO+CNwI/EXPBYlVWuhtvEYNBgvcCeN5pvc6WvxP4Symi1QXrMNYtP/ymOm
1P2K4c7T8SA0mi4xLT7zH9w+1W1zVHDdDmc9XI55FKepHwkH1lNWsxnroQG+
FPM1yC9boNY9GFrbU3i+wiM/B4XlS5iPqNSn4HrC42JSDPpZGa/y5Ku4osjq
iWclnwFrgzJ+l4eoM4UDHvArU3LsT3L2wG3FdfGD3gy/8+BvwLnru/xJNO32
WAQcqU0PhBZLHLNL00GXP+Dh7qfkviVZySwcw2VweFRJCIGMglFM63m4Q3DI
5jENh1jWF5/5T6bhlKq0gSgafnC6mwV/LOs0vCjjav0ovAEfxKT9OZjMy9Et
u6CM7snntdHtqFWG58p7mnAf+CU4PvgWo5Rgy33h9V6gjfIszQJ9mqKyT1JK
bFXU7WS2PN52KQWi/ozC0UzDbsphtDtrezWMWUUTmebxtslnaTppqnBIGOQU
mpnLJee8IdttarkaVCLHqcPqN+aA89ATCiYkrbzzsD3A+4wC8E+CN30zDvdF
8FXfAl9NpH74uo1exOigozdBXZM0WoSw6fnD4Urst5jbG4k/A6/Ppo5m222j
2R8BMQl7HwrXE38KlfV7wdgaiSOIVJyN0xH9aUSlMAUf0QndRtTSkc40Ev4B
XBfuCh2ZXIelI43vFVYslSNrd1QHHdlRYmSx/96cfeC+OZGGrB8NBrLnOvMv
Rlxx6UdaDBMpB7xtbv8qMkHPDZBbJq9TdWhdZ18KNrLjVblsNt/ALe8TzCUh
G/YM6ppO0lKS8qYfXTE6LZZYRtVzNz+O/cC72HxyzmvdRhTlsucBzWCaUgH9
7o9sfKPPAzpCClQhAudzPB7KaIZyl90X30bF5AwOpU80rR/UQepo4G3aDSFg
N/IPqVRUhnZIATJiYEn/QA1MDxhdBzeEoZ62rrbOLDlv+sEcpIoqbXs+vxPv
dbAGgEDQbbEjJvYoml5vJz9LC7s/1YYt0pZHOg1duoWvrfsrQQdT0Q8GQMDd
Ac79P1NG6dK7LHIBa+PAO67/ENrM+TH1k1IO9Uznru/xhiZUKTGIDClRM2jg
5RwHG8nLMV+HuIznVcbuLJY0CuolR7C26TiXw81cTqIYVVIIcNcSTesHVtAS
sv4NZ28+jLpHqexSa3sqDzZuXrKZyJTf8YZktZd32ZCiU5/uSQlDNVSsU1Qa
1Mcspaj27lLVgOdCSKdGFCQln5d2Ywou+6+B68KrPHiehKXgvjpC0a63fxX8
9Qkqpw/qYYA1aNK83dfH0qSh/hfP2jrbFh98y6C0g4uoKV0OooJUD0F28WTu
RWreEFJOcR/bRWjJWhZdNBmNpotcJjHrpX5gao3C5s1tiRISwqO+QNIHxZWr
oKL2A0gvGMGa9tW474LP51AH7UE5N7RyCAuqGw5zPabWaFpJVD3fx+YMoh2n
q5HbcDjrSC1nxTCneCpvt6TZ0wRSXbglSgWN8EXRlj8LBeWLUZXbigraH+6o
oMkZKwhTt/yx6oyh3GVuF/KM80e/H5D2V8DVweaa6+y/0X56HA2jryo22OUh
uBdmKXI2SK9J4EzXoC00kmeMdDxfwdEBXGuItLq0yVHUZlKTr8X/AM7ceAB7
/zG4Fvd91MFGckEao/6Mrg/w6IirtHojiyfNDG2JdC8tfxgpIMKs0O2MPOcR
CT+WGjoOlqiVREJc9AipMjR/VGt41OdFraKvtDfTejlzY7BirOBtnbGyQ5UE
VnGvnADL1Deg5fXfQss7T0PbwpHgSo3hljo2zAHTf38FnbtWqAI/GDyleWA/
tQfaFo2G1jH/gpY3f8/Pto7+J3RsmgeewiyDgmA4Q/VVYN27BiyTX4WWt58C
06tPgHnoX6Bt9hCwHtgAnoIM5CHQxTTH1dlawpPi3Pld8JtypT6OG7av5FwX
6NFD5BdVmh7eZqg0PZR9hmn9JZTpMekzQcrvUMt3bl/MgyF/Xn2Clsd/f4Us
28K26QdLGasBOCb/0Iq//Bvs+zM0xiH8VAjYTuyUoqY8MpCHloqKx2hoachM
rz5pEM+5M+Llc08pYzdCHTtP4jJ1nXyRtJx+pPmQLXj6n4xciGqGYPtzb8fu
cyrtbmP2gsrOsvj3YOy1P8OKhPehpr34L0x+iOdddJBkxmdq4t7428w8KDxW
w57tOpyhYJn+FlgPbgRPUTZugq5+6sT42y1gPbRJ1ogSqnbyIbCf3S/p7csm
4L18lnoFOPzgra0A+/mD0Dr23+BOj1MlcaS6jHxVN1izce79sXQOOY/+ASFk
HPiKTvR1JEkFQQuW7AE5kmQbEI0UijuPZH8obEmF2NpwmBX5H5gb/Sp4/R7D
n9VxwSHiDlInsFPCWHVcCpN9l6OIv31eKT1iW2+d+DIXw8E3iGH1mRpJ6pRJ
Wj+LFqpUDcDvh4CDbQPDH5Ux4wp/F6QH/xQy0xwLo6/+ERLqLquchyAQDFXa
PbxZ5SWU+aOForL9gCBjk4QxRLafPSA0ABYXdZ3421v/pmNmg5ieQABmR70M
qxNHGR5mGiKTxwd5x1PgysQwOPv2brg09jBk7o0FVwdO0clUOP3GTigOzxJb
mavdASUXsyF+zVW4io+cG7IXLgzfD9dnnIScI0lgb7Gq/A8Gn9sL5dfzIXpJ
OIS/f0CpfvRhuDX3DOQcTQJzSZOhL/WKLbB1wn+5pwjYch7al46XAD1IBR0S
a09xDnSsnqYCz6/BU5IrILN98RhlNSwdb/i7brTeUe+nN97iaSpoSZEq2pa0
6TiC/xWTz0CVb0pB+jSYevMfMD7iLzzCVA6F1CA2tzSsa2n8MJgQ8SxMv/Ui
HMpdCZ3uNph4/TnYm71YSOSi2LdhddJoMdFMO1+yi9mwutul98WH2/CMW/9m
ekNnxUPqXCasvcrzdfbdPRC9+ALELA3nQbwy/iik747pOpcPQGNmDZPOD93L
c5S6PRJStt7kMWf6sH3QWm4MUYvbzVZ5i6YncsE5Lp608TrST8HpN3dC+IiD
faxduAtoydJsOG+el5Oq33XFovA11jCWtS8dRzupshMMBNtxuYPwRRstr6dD
m8Tk7harIOX3EECtDaSGjzzYSiCAqkEAtf/AddRzIj8PgaRfQaB0LoC9XLio
oGYLBDJeUIrdQD056ksQSEMw17mPyLKD6g0QSPiJUubWJyGA9itYYtROYHNo
CweSfo33H8A6vgiBwnG42q0QiP0mPvfjkDtyitWjXhrIfgUf+4LyOJrSAVSR
oD1FlbZPKiygnhRI+S02/wks9xBW/S0IZP0HoDFMw31rHjcdSPwplvs0tvUx
CKBmF0B9FlxNo3q5EIT/+Gr5YS43P+Z1uFS2H/HtElwuOwgfZMyhvU8s9WJz
BhdbEjcEomvOQUzNediaNgOWxg3l9YHrwdDXBZHZHMM0+jlVuPVBlWwubZay
1l7bKgDdY3ez1NItdU1IRaq9xgx1yRWEi7LF4gtZXC5m2UW5KQT8Abg5+zTT
E9dHgNNilyLgbLMz8InrbnX2dg3IjQtxvHPncgI0qQq1jn0RrLtWgreiSLZh
mfq62Pdw3JVypOGql1CZgi0MgeEsqSQWqF4H0p/HBTGbxSOQ9gwulEEQKJkm
55+eDcR9DwK5b/PCCRRNQrH7Nj6LDFVvFFgYyHmNSYGEx/DxGRBA24EXCZq0
0HxaqNfQmassRfpBY46LoQHHXEZ/ldaJIdhCkWsMbUReIPRDTZbOwSU+XKmj
dJbC9KdxLL3KkiaOqFq0J5j5vKHKMifmcWnyVbVOWUs0EEXjIVA2H9fef5nz
APmSvG0j77hmBunXDF+1HaUw5urTsDZpLHj87lB1nbe7zLLIiYJNXE2bs0X0
9VjBBib1fZn0522K9KZNqZNh2s1/su70gFq+6HwmC2TWgXi5rLxOD+/Y6iIR
GzDJM5GuTjomHRAk30S7NvkYbfwfD1K0b2I+gO5ryjHu4a746+C3tAivEGmx
dMv8/vO45toWjFRXAdHa5gwzqCrsC2px8+r3oP6t74Hf3mkQVXScWKvQOi0S
ANr2LWBawOOSY9kw5Mdg2TGNPwlpdyReAuPsf0DD0J9A4+gnwbJzJvg7zNDw
3k+hdeskUZ2vvYWrw6ZkdZ0XdzHN21wjtQifpZmbbprwFDS8+yNoHPO/zLKr
MFlqEd76cmRjOjSN/70sY1r0CnSe3w5+W7uYSf1qkPEabwduap/ldQymS0Ig
wFUP0Bop5Q3aErSwD21ItMHFPCpnGZrPKiuFNr2AR5LtpcrqxxbAZ5NGacEI
Zf00aXICqPoHMv+pIkDQrU7juU3dlpDemSNGgaKYoHph+KpYrtSW+jQ1LqSH
N7nm09igSylmK0LL2SJ7V7VW4a1+n1wCxaU2mDqvBDKyO+SibbV4YO/hepi1
uBTmLi2DA2EN0NbuhTVbqmDjjhrB/6pNVbB5Z42onH9X1zq5uuT0djnN7R1e
OB3eDEvXVsCMhaWwcGU57D5YD+WVdoPQnBDd4erNFi4zfUGJqIM7cfl6C3+2
2X2iysZmF3M1b3k5V7lqYxXcjG4Fny8gWaEm6TGvNyDnd+aiUgg71dRFqDNz
O2Hd1mq+twBZO36mCaw2H8xeUgaHTzSKicVquLqzl4xyLXVHvIHdEO900TYu
U2HJk2hwvGAj0zrdFsmuxWnsM8aJeTc7mhhVL5TsRp4i+T7yJuY4c38cA1LF
jQJp9KVsvSX1gEFqAzZTp9SnEzdEiJ6n7YxiEppGho8HL9rX3VyYJ0QTXNrP
7FNwbPZQOcDWPasVKNw458PDtof12MaXKz+Jyxhn/h1s14+A7WYYmNcMB+Os
FxjrENsMvQU3IVa+lnpoGvtbqH/3h2DZM4frtF7dD61bJkLHqQ3SCMxPhIZh
j0PD8J9D+5HlYIs8DtbLe8CyaxY0vP8LxMIUw51BDsezbpeCBLlvGz4maBRo
Id038nOasyzrJWXttyfLZ1lZYaw6qZVL/AUrPwglmu5lrxDYFVT96MZL2Twp
6oHoL7PSBLZijb/6A0q7NduC4pBQhwgUNmyvZkA4e9EIsYkWOHKyEZatq4Ql
ayoIiwy9BSMxLZY2DyxaRSBTCifPNUNiShvEJFjg0PFGuHKjReBRYYnCzv6j
DZCe1QFZCBJmhMXb8EjMYn2ji/Fi7rIyqgUSkttgz6F6WQX2RI5wd1x6WI9L
fJVW2LkMIW481pWAXO7G+tZuUXAKcclwv8C0PX02g0Zpazau1cq2AixjRfuc
LvwkXXeJdVegpJWsBSoTAuOu/YVAimsVPPQWqMJL93KbJns9KWKokP0DNqdO
FUIgDPaa+FIJVHknUiRQiV2SjJnq2BJI3xUNEVNP9KMCyP3lcbh0jR2yh7HL
L/GjaPfgzBecScffbdWapklX0KpC9FXJQe0tuJFzXHFU7TcIB5bfbFT8aS//
Btw5KcKy93e2ky6nVBt18UODuIHdIK7t4GIugzqXxuiBRUzrO7whb+tGMg3x
yyC0eF6weAXcToa+xpG/QhhskHCD5IDDqi4ZuCOMBPLfU+DBFG5Q3Dz9FeUH
zXhSwhhi8oZokEVQd4PsX22jh+YzSrnSuV3LxX2na1u3PkWw1kWYg/P0vsKT
JVZOBThrlTYSf6HySUPgIbeEYiZR3WiJga3kzigXAlU1DqZdu2WWtOh4C9P6
jnAhsPeIgjul5XY5M+rE8IXt8H2EM9E7HaLJarbvrWXgbWhyyebCTjdxufwi
aw9wNrAbnCE0cRnUBGVdZy4qtN5CWb5JQFl/FcpelvXvyJiNSxtLYVdTGq5L
epkll90sU26+EKre3pe9BPQXIdfyhOECbfSgJfNocDslC3JDykRJO1m4hYEM
NS8py8HQS+dOliZNU1YNuyiFK+biqEOQsO4aVEYWkRkpBihu5WVRBB+i3/2p
asm5Wo1BgazQ26uRnuNeoVZ/sB3boZiWw54Fd2YCudx1GXId4Eq8AdYD69U5
eAjsp/cqvve3/8hBFArE8OXzUhiQ4zUclxj/H7RqPB8ltKkw5m/XFpCvtakX
0DZQD21cF/ID9W//AFpWDZN8OTNucZnOCzsMnxAjwhihKDQSI8hFyebVARpp
8036bYnRCRuuwtoPyEvajwrSIzceZosRTVVtsCM/xx5OfdXQFq9ATdF4HZx9
kz2XXVhQnKn8qV9vWLWXa3BmLVDt3D8RTWEfIU5epAWSU+rmxyX7CY8BtFzh
CnqCuNTMDqYh1Ema3x9gnOgZ4gbqIY65cDj9MG1+Cew6WCeVzAtXTFwG78mZ
1WGawr3Dx8/tO1Ivh8HY4uYyaPL1Dc9U7Oq0+rTNFA3kvuBZXO1FWf+apDEc
LRXXueKdXKbZVkPajt/Nzyl2XWFLqoou/RmZ8C44vXZU1/5EdqXkh4CNwjMB
3a4YDN2ym+OYhrgpafWdFUxDda3X6CYDsl4/hI84wKER0t2sTe2y75n7FEO0
6HymikWD2ZFMtKZsRdSCPf+w+nzvsGwgBGyd0DrpFV20/kkwD3+O0hXUqL0S
UVMv2W/aJ21KMFktNwCf+QOnLoi6KKzvq6/6Ez/yIeDZ4G545i7LZqvROPdF
sMecZndYP6IS9r37I8I0WbY3mOapyufP7cfXaIb1lX1Ms147iH2kulFajTVy
RKT5RuBBQOHt1MCDvNIEFIgBA/j3YMULJq7Klcp98oNTMMl8Exm160Cqt/pa
HwDudh7J6327voY6pOB7IP/GXtZsVXgmvxtFpcitnY2SUb+XwFEIXjBQEzoa
gohslgAMAa0Le70BtboG5fOliJY+gZp4Dula13GXIZ/Ytj21PYDa4G6gRjyR
VUwWd2pGu+qeQyq2S/UhsMmyPQHb+pQJcozcPidMufF32J21UAcu5aw6Hctf
L3mmcNmk688TkGm5mV6ZoytpAgST6yO6AB3RMptjegS6bekzmBePT1NoVyaO
ZEUyEAjIce8d0KFV1NDGtKhFF2RuYWNGNdMo3B/wB4RD1evywsXRh+DMm7s4
yYAu3eOPqDXeDd7EzAVcDrCfOwCWWUM4a4szq1BtI8jr3LoIXClRMspLOS+d
Wxdy9gRneb39FKtmlGqEMKnkYtw7jLmdtwUMpneZL3dxOjvSGkf8EsvhE5QX
tX2KlCMBXwhN3dDLKNCrQClyTIdeV/czTamQfoeAZfccKS7d0AuVGYk09fuk
gx6n19NCWKChCl/sBIv5OjnuZZvSgdaWpHOgTejuQOsraul5q93Z3YFGAbnE
nzOnoSq/rEXSs+Trp8sUrnyu3W4QUajeQpbq1O/CG0HWpjtAVkqGAlnk8lIg
y/SRQpbHc5v7/nRTF14rqx3sGpu3rAzL4RMoEUdPBoWqger6EUg1L/p12JU5
H4rM6eSeh52Z85he1pojjbVLZQeYtjFlEtysOglR1Wf5/0SLrD4tipF9uD9n
GVyvPIaaXTiE5a/nxBgCJwQcpdjH+CPlwlAgkmqjVnOMSkKfDrP4c6vTCGOu
MU6K/lMOmGILJ/cRrkIZdwh/wkccBIfZKrCEYIhi95rsA9yad5Yfz9gbS+FQ
WQUlN4m4QcrWmz3WHKKv2TCZf3eDGXvceUpVS71Gxys6NMecDnJuRxxvU5UU
54DXjcba98lvruIdDoDPR8oVO5rq3/khGYfdDEBEICmeHSfXC8TjpjUDUItC
OHNiuIwt8gRlqHpo//BZjKritU46+cSSDtCpAE+ryFzkoCIl1yQ/STqK9Kqr
izZQMqOr9z36Kzp1aSCHMeUlY5F/IleTFmG0FSspC7cFI3uFRXdmPFgwcqAS
ZdQHIytXKTHWphNy2VAEMpDyOzZwEbOUcgKlqjdKwNP6Jg2N+wWuxasrRO3M
bkmZ4kvPK1QyGqQBeaCPBiT+pc9dDEjTnQ1Ik9kt+ScQojaxHSmpZAAT3eny
iwhHD4bjIIlaOcYEuIyoNC/6NfbFL4h5k3z04sBrZlM0rEsez+rUhOt/hVWo
4qDaJHqFmMWpEARY9DRFBI7kreFQpFLmY9KbT+6zDYh1k2/8jVPv6LodpSjp
iT5XtxeLQXF4bdwywmmvUUqEfLIOxCvJdu/uYQdY6o5Izo+MmHaC6cY8cQhS
Sc4TdLIYY5Zd5LKkaRGN7rk6nX2pWjlQ2A2nSMMQ6gsF7MTVA051nN6kacGl
GQp+3DiqYZfTJiVfPOtIviJhUWKuilmoQYHf2iYeb1k5BBpHP9HlceGSd+bG
6VzyStobQWXTuN+xTYkAJqoRipSrIElFsU9IfxFn/FAuBCUS5bzJaVF8mSOU
jCDyU1H+YMlMCGT+S0mXivsuAYiMtpF5xcAS931Km4JA+SLFlY6mIVRv6pYe
Ff8jNT1qhJLEp0+P6i2cffzuPeA0qQeVNKnsV5UEL8p9IsNUpEkNVtKk0v8q
Ey04B6xwrNIkhy+3aB312TgdSsncek3pKJWnNKuoLz74IWEblSursMtnKeeB
aM1Gdzf/f3GZLaj/X4d1d/P/E2Shnqc7cQVw9FSjiAHcjnj6CIaIaiQka6fo
XC5/N5nPzuvkculZHUHRT5nZ/tIa1Ft2n1LL9xZcSLehnC0CCsr5puTsi6MO
wo1ZpyHrYAI4LGLEBnEaGD7LlhylUhJqEFIUnEoDj8Md2ocq7wAqnupCSjdr
ruHDgE45P91AZbAEleZpz7LC4i7LAmd2DDTP+BsH2chck9EFXOXkTbJe2sPJ
BPRsw5DHoHn6c9SMqFLgStPkP3NKlyPtOrgrcgm3FGf3uW2ySl9LA+dfkT5l
2T1bSWW4vAdaN40jdsQaQNxhI7B56jPkKyd1idMYSJ1q3ThWWQMDtfCa34GL
fbqaf4xQZTwnz8VzIiQtI3bJDFaWVtF4YQQpZZqOK9m+hEOER5QVjEYatKca
NFWFEpM3IkI8rpShkFz6c+wW6oIgd0WVvvD9JutwjC7RX1MykNuTdTx5lGTp
xJ8p/v+biFipT3VNqHbWKVmZ5EIjpKI0NjQCyTAU2mZtvROi4pT1z5kL5LBR
1qgOUu6MKIMYURatKuekq6TUdqjDGsnzQzlfO/bVKQw/zCkTpFSRknLibBMn
I0TFWeDgsQZOdqCrocnFn6nVwmKbQeGmP3R0KudNuiPMIC1pApuj+5TosFtL
mhCrVqDLyo1V3BwZokUlNli9uYrzv5xOv5RUYpN8WjQu1CN6lvPDsKdoSAYD
mMdVmh5YrgRfsT17RQbJZUrrhQSfNmhaEJSviEtWTK712kFoWfEur1Ty5zaN
/wNnCGnxq8F6v66SdTnnX1xV49j/hfajK1GuvVJYqGzboSW8lGmlU4okmi+8
qQuhIy8KrkFoHPUbBQ0QSXCJcz0TdCJCo0I2dAj/DmUltQ/SRH5OMvBRt+ap
nYNTS2KBYiANTqsXzl0ywvL1lTIbkIrjtsaSgvsOyg213j9YBqDsUZNRkbj5
K8rlFHdNARwkRYck+DhK7gIsSz6ELbtqSIzEAFJe0Qf761h6qCrKLaLcIH14
5z5E5rxKE4YIbf7fUml6w+MH99dUx6mNOGGd57dTMBehV16KRWw4ppan3Emq
HpdbUDbEHAv7hD59MwhrxuBs6HVlyqcTl27BhPEjA7g2wp4VKArkVsrJ7ySr
6etqjaQsRUSauyRw6iWhB6ZeCbJKlf73Z5Qj5YZghx5D8TZ8r2/Vc4dKVIFu
7fBCeIwZVh6ogSkby2HUilIYv7YMluyphuPXjVDb7JLe2DYU/hPXTTB3eyWM
Xonl1pTB8n01cCPZAl5fQBydzSqxwupDtTAOb1NVa/D/mcWK+bpwVxW8vwyl
qKhTvBcEJwqS8jpg8/F65mAkcjBudRks2FkF+8KbIL2wk2r/qY75z4vOtbVB
wWuvgTEszPAjdTm4GxuhdvVqKBk1CgrfeguKhg6F6iVLwJqVZfiq2mlvRzM0
Hh4KZXO+CiVTPwFVa34DnRknofXWBiieMBjczcVyFdpLIqF67ZNQMvljUD73
a2A8Ow3breNypvMzRQJCZ+YpqFrxMyz2CN9qPDRE21f9Pqx6PVQu/ynfL535
eajf9W/cJrO0FYoscZXhc6W41G57nptUPqkykRbG5ewlt+RRvN50p58qtbTD
tlxaCOULvg3Fkx7i++1J+2Xep90CpguzoXLpj6FkysehdMbnoGrlz8F4Zgq4
mwrFoDgqk6Bm05+4tbLZX4amsJHgMVdxbcazU4XBQMvvAgoXCgs+hPOOtA/O
NILdyaq0ZKq8zgETUFJIMuiHpAaf6ac+QrLYqfgx1LF5kGVWFCeJmbIBJWe5
8vlyfKte0ORW047yu3x/jXxuBP5MXFdO0oatKG1djJWOPMNPeiVyg3DuM6Fi
9mxoOX8e2mNjoeXcOSgdOxYKXn8dOpKSvqJOU82mP0PxxAfBeHoSalS4i15e
BGWzvsDS1XWaaEqbcHA/iYP7JWi5uhRab66Dmo1/xJ+nheTJ0aM5I7GqRPFr
T9zHU++oShFT2njoXX6kbvvfwRKzHVquLMZmv8hzh/MotYr7EMDe9+xBsBVc
ZVr97v9AR+oR5tZjruRB9rY3QMWi73FdyDY+gwyTo+rsVKR/l0ZCtumsSWMJ
Jf7MESugLW4n1G55FqpW/1qIoUGRw4dh74UmOemLd1dDfHY7GC0edl512LxQ
WuuAM7dapAxW1DslvyR4JFxEX7a3hgCReaUNJg2hSTyz6ZhwrD0EBZV22R4B
pirv+NcHYdeMMAIFldBRFVCRX+qhHWVvNZMJASPT2ugRYb+S+BJQEp6Gx5p7
B4i4CD0eKdHSL2O3M0CWjhtHiPAltajPZuaxazo+2iDcqDQ3pdM+LeZRumuu
r1TEoDRK8+MG/FC/579CQEVRLKLATPIBmQNrL41mWsP+N4gBGXFrLmKgxUk0
9E0wB+oFkzvbh87QkiAS3pZNiI5Y8y5phg0du+80iuFUIBBlEKFPd1zGh+z9
TcigYu/057kUIkH7KuVUiygpicXu8406sQuFc1EtEgptDp8Yt7xym6ymtMYh
I8EHFFTbda5RnrvdcbpBFpVCFgo3UywKaC7nGgbqeBBSouLeBhVA2rLyoGLb
fsiZvBDSh0yCjOFTIX/OCmi+FoXCJTP+bJU1ULR0I6QPpaS11DfG0GtpfNJn
Ah15RVAwdxWkvTMeskbNhOoDJ8DvdEH2hHmQN0O8x2kQWEsroWjJBkh/dyJk
jpgOFTsOogxYsfkFkDt1sXRx2OxQfzIc8qYv4aIZw6ZA7rTFULUnDDqLymQQ
ATlAXqB0zQ7NPha09TsNIrZFLZRv2cstpr45lu935BWD14rNnLoIhYvWQdbo
mcx99vi5XNZeXfebIAvvZyrNdPIk01wNDQa5wqwmlozmk+MlO7R5dkVJVHOP
vMeYTm8uEAPsqEy8DftDwJp7UZHS3HDNrY97NdFIvZBZhwfeUiS8VXlP0D0v
ql7yT1oS0fyOdsm/z97GyI6rQ3rWfbZWqS6J+myF1yWCD1aXj8vjh0nrFRTe
EFZHmoV6bwAph1LI5u1Qtv3Tt0xidZGGSiQEXrm6SJMVa6PO6BJLpqrR2X3J
hPCWQSTcRgxPKmvjk+qt4ho7DF1ZQj/IJf1+ADJLraC/DlxthlmozI5YWwpj
UcFdf6IeCqrs4nx4UkEHLD9cC6PWl8F7q0thGmrXhyOM0GH3yemzdHq5mqnb
K7jMaCy78kgtpBV3Gl5SFwRKOGSOnAFlG3dDbdhZqDt+HgoXrlMkfd0HGkgH
IGfifF4z1fuO9YOGc1cNITL73V5Tj6OU9vZ4Usu27oOqvWG88Fn+x86mlSqs
fGtpBaS9O4ExgVZd3YlwyJ+9AvJmLoPscXNosUqPgLu1DXImLWBm8mcth9oj
Z5hBYjbjvSkEDIa+LVnUdz44xDSqo+HMZeoIuExmBiJawgXz10DV7qO4fC/h
3yOMW7R8rWWV6vwN5M2R1LXyqVOh8O23oWjYMKicOxcsN2/KNeCqrYXa9euh
+L332KIomzyZnwn4NAO7cc8eXutYn6TZi4uZZrlxQ+3Hw1A2cSJULVggZUOH
G6QqQsWMGcxHyZgxYDxxgtsQiGfLy2M1s/DNN6Fk5EhoOnQIdx4zP9985IgY
amd1NVQtWgRF777Lt6gquqir9Llp/35tb9XBlhjqlgsXmOZuFmctBlEXuNvU
dOn48azptsXEcDlrTs6X1abrdr7IRoUpfA5Y8y8zYqEmSmjRDSHIALpdt5So
1AXhwrshHD1bPPEB7JJTLhHSAVWFpA8IF1yf7Us/SDe9HemctZkKqh0ZhssI
nyQEq8tmvpy1GXwPFSjJl6e15jbEC4Wk3A6JRagYPKSSXW6/JKMyIEDuTKSi
LqAiIDnLKVN0hYnrylRVI5QtMlItVYSTSRAIryPUWtFU7wJyA8Dc4YGLCa38
swP1FAK8zacb+hEBN/nmVncXvCOM2xneCGdjWuAIqjqTt1bwI9dSRJB2MFxM
bGUaAdr5ODNcT7PAljMNTJu+o5LUETkbHaSBb6uAYXiPmr+BZc/GtsCkLUq9
+Fk6Nhtrt0D8DQM01++Wo+vzWZmWl/4H2b7H3QxVpdMhM/EHkHhrMCRFPgjp
Cd+CopyXwNR4mF6bJrHL6zFDacG7kBL9aSw7ELKSfgzGxgNgt+ZxvaX578iZ
T47+FKTGKru9fKuOz4ZtTYP0+K/z82nxj+LnKcxXRsJ3qW35fEvzMa6zvnqN
PHBoK68mHNBJ7UAGe8I+V7PiwXYZW/hz5c7DMohEmEw0c2Ka3Pj8CAKla5Vn
JZSHMGSnvTWOoFMLl/n9ULJqKxdFKBf6Y/GKzUyqDTtHm4ZgyO92gyU1SwpB
70A8hHUp2o66woAVnE2mLjRbRTU/W7H9gHqMYRAEvF5GOkKhmhUrwHz5Mliu
X4fGvXvps7QUq6oYDAnbjcePQ2tEBNSsWsWP1a5dyzqW1LvuE8crZs6EoiFD
GLsJNEU79du3G4SriMoWvvMOFA8fDqbTp8EcHo7tY21YQsVyLin4r5wzh3k3
X7oEHYmJ0JmuvIPxXgBd1Gm+eJFptNe1Xr3Kn6lPtL8QHdswfFnIjNvOFn3l
sp8QKoYSVGE33CbtNA8BJgKrtuRU2+tDBXKsSw/k5BrRS4gG5JGauAdjfUAX
1nX4LeG7LotJSmGltxWL2cHdS/gOgQMXFZfDtE0V6gGAUDC3eyR2N5jcAruF
aTh3e6UcrIQcBf0X7KyS2DYHFUPh0uoXpErEYRW4xdvYUgo7GSGjMtukE1ev
LdNF0L8CVclhq0qgvN4pdwTcZ0aiwjpxSznYnPLNuITpVOOlpFbJK2Ex0RDT
paHdYfPB+E3lrKhii6Krd4NnkRxj68yClJjPMp3gtrIEldWyWVCS9wbC6xeZ
7nY39VOLUyA7J/XXTM5M/CFUFI9BJP8PJEY+wI+oKN0TSBflvKg8nvQj3hio
xbS4r0B2yq8YsO8E0p9WpbZyh6KMOuoaeFgFXqHtqEX10WgmZVlv1BGAq2As
BxR1cEWx3bRHM4rU+kipFnPkbGxmGinWAa9P5tz2EnqJlcLF69UBUNlB/VnV
qeVpMcIdxpQTJ3SZOZoUMQS/8QYpnqLq+m3bJIz0DVr7B4NWrANL0Ssmsby8
kIW6jRv5eUdpqWyHVHOi2fLzDXqjh6BehVfN0vCxk5bQWY5Ur1B1kB5VmRty
qRGqE4LixiQ9bTYblIwYoYxGWtqjaicDXheBHpguzmPo8FlbZGsqmKqfoE+A
ajwzOYjt/2ZQ279h76vyOQoZMAq6OmWblphtTHPV58i0v574DqYJY32sSZN9
359hfgDHE2o2/EEZNc3+18z/iG5oukL12m8+Xh8UTU0WT1/RdG43NA3hYJha
JaIK/lZ9rMHwVMQ4Gs1uoRDLeioanExDk13bhZFdoqGWK8uRJ4BobVavLLfn
UhPTao0uQ29hU1PZ3KxlEr2mYoHMUw34wWw8Az55TjMU2i3RXCwn9Tf0mCA7
7KUIvJ/pCTGFK9LlrFHwOfknpC5LgUe+slN+ybcQNINhpgIsD4DP6YT2nAKo
3HWEDXbyM6iKLhnpCn6euSzgk9REcgJqTAxkmx6hU2KCOS6FH2u+GmnQuh9g
P4UGnSGyXM2RM9pp/l7iJtVFjk4A4cJV8NDZ0AzNEdGQO2UhP9MSkyQglECB
VDjCPvmWfquVwad2zRrZnKuhgZGiYceOPuLmwDuqpKRYyuTW8nIFAxHIpCG+
fTu7NfS7kr2kRGClLOdHgGNgPHiwj2A5sBtYdiQn8+e26GgNuo4dEyipqp4E
H9KVpnMPuaFq1S9RI/u+5PfeIVMXitj7qj4U4WoqhJJJD+tCEaESOcnnjzqk
FHlrC0fTSJM1X1suGKAKqQa/U0sO7G2H9FgaqquvdPpnseUyWc5Zk8742nJF
k22KxnFUoqWia1Ri63MCWIXICxAkz6bAVb2HobTG0RsPw4S1t3kY1nTzMFBs
S8Rnl+2tGQBrD9diDctU5+yYVaWGHsBWAe2HOOhW3eyCoho7+0Tpmr+3mjVV
ukdXdZMCvocjjGLkqCiRtp/XTjdvOqVgr+ZmDWEXK9EaWtx9xl6z8ZQKh48T
4IoRrq9erT6+S5vImnU9Og5EuXZLFJerLNG+CKazPVFAa1B99BF1xXXkFzNI
kVVPYET4WrJyK+mM2mrQMFbqqBSNQaDU8TFQRGiE4ILxerTiWIgXh7kHCoev
rkyMArCHThE3ecV0ZsCphE7vBWjl0OOeQd7trLGz1ShTCEeTmi5xdrRUWskI
J+MWQIuzOSsrFWQ6dqzL5kDoh0rsh4a4jbs1UfG7XExDTVXWz+kpI8WLJ6EL
auoR1/chIq4w+BHZZV3Cg6sh7iCwRG9hBY0UvLaEvZx4ULXyF2oA9+CdAXeQ
HnC5SdI3hTGPf/uBvSwG1SaK8YpL5CaQPc+5CWirU3aMmpug9vARCbzV637L
dr8pfC5ntwjOKJEA4ZPDXNQDyobh2O/R4ZK9u/RMGr71OdCw7zVlm8i/Irim
hAxljuuhfP43OTHGdGEW10Q1EjCTj8BnF18HM5h9BZwhM+ertC9AW9wHULvl
mS4pCsGQWDj+RDDrYqzZcA/RrOrg0SwBuUm5HbJWAeTYYk8wrBT/GKQXW6X3
lX7IM7v7YhNsP6c4h01tSsoBgT45ECik5fL4BQcRqRZZZb/baLcyRMY92re4
E5Hjl5zEPn+vnQiiSvKxEq2uarl8vwc5EYhmMV+Vz3a0xfUCjlEyHFWqyvwE
Ibw8CYdbHjkaenbjDgBrSQWjMKms1fuOsbfU2yEPHN4rGPda401MUzYChMyB
/Ls/OGoVZ4UA38LF2qF28hQLT8CdAXkAbyr87MJ1CMI3OfoW8PvF6YYPA4f9
Tmc3HG6NiOiKwwsXyiEReEgYqe0viqmvx+GaIDjs6+y8bxxuvm8cHsjqZ/OJ
MVC5/HHOWCmd9imoXv97yjOUz3UH4f7dQJhSpvqzD/MBMrLlGCk5iRs4aYyU
RUrXqt/1EoWpRHxVF0HjKFj1micYzghoCfZ4qNsb2b9Aj5dO/ww0HnyH9d2Q
XnRDDDlBonC3hqistift16YT+Wg+NYFTFjkLc96j0HRsFGXiCGcMBedY7eWU
uS/zbV0+YjA3gnilkEi0odTTPiTanL1roo1wRFDSGAKhWNMfnGmQAN4D1Irs
WHIlvLdKCZRllFgZWrORt5k7cb9YU8rla4wuseXkVthg5LpSVoqjs9ohragT
jt4wctLAZuQTYVTLMfQFYMPJehiO947dNFEyATUNc/dUcTJCYbW913E1sQTK
Ct9jWm3FQnrFc+sNeiu0+g2ZdFWXzeD7eEdUc+cw2hdVmVZ+l+S9rjb3R2Rn
M5hNdHKFgDyEy1IIj0pKP2CQUBqa+6qXtlF7HcM9Aq/w0pZv7slLq3l4qw+c
oOBPpxXltWL7AabhJ65LAHDmiGkEvJpz2KRE9XYdCYrBErQcTukwFt/Owi6H
oUMh4HZ3dTlQ1Evvcqivv6PLwVVbK9ugqBOD2+HDckgoI4IjaGKlqgBYs2qV
rJ/ysW93OXxUwFu/ZYvkjSJ9RKM66OpISVFcDlFRQV0OImtL7yIQKZR6a1ws
Vvz/HYM+UzdWqCJ3//mjJ2+YwOES+aN+OBah5o+uvi1/9CFe0CJXiZJEy2od
MtxDJvDhy818bywueJPFc1f0CeEwPtFKasWrz0KhBjsgFL/mVreYv4IqO0d8
KAeqH/8OYZ3Qox7CEOXcnoCoVpabuLmcTXpl5qAL4tDyFfPl9bYpEJDxtJx7
gSj4g8/S7wFQW6kZon1AnISb/LV8EtgDAQ82vwoyEr8P8Tf7haptJEd/EvRX
T0Bjr6qTmhKtUnEFcW92x5wQPebIDotYvb2qVloAQWP1IUyihEZHQ5PsKEV4
CGYK5q1WH+8v4Yfj+kfOdImI1x07x3TjjdieMcjuYPW2dN0H2lr1+liPpE/i
zS4ymiSVvyDRJFTUnFVV+uhN/datIqJ0O0oRcgnhRHRSkp4QXRDtJAbX1irg
cvSo5sxTQYNymjxms/S8hYUpIaWyso8Ir7Smi4cNIy6FhVq9bBkUv/++HAqq
jhIXKmbNomo0d6MVirWQ0v0DV7dkI2Gy0LmMiet05zLWdDmXQbnqPZ3LoLNE
CIV8PoM+X4ozBzmXMQAsHV6kV2vnMpT0eNHMmFWl4vzQ3TWmEFiwr5pVGsRX
OQmUkkRGKoKPVH8o75I0K3L61RpdHKBJRXWJDNalh2oIOWVZArGF+6s5lYm0
MCpLOEjBGmqL8jBvB67i3Jc1vcCaw7SinJe0YJPpvKIqVS6mb7jxtBjIM7he
UbMa9nQDOFKm7oZgROtsT5RfqOX3u8DjNlGsnH8ohSkz6bE7m6kPs/2W9vZ4
xoiqvcc4s5JStQsXrIGy9cp3NqH6xHTWOTbsolUdn6ouVLpUKNMjW1cUU5JH
KQU1fegktobrT1+C/DkrsVyQ5FGzhfOEKHmTkj0Jkij5M33YZEgfMhFs5SL9
/hEJZZT8Sc9Qxnn1/hMIhduYTjncBFV0kfaFjHN3c6ctVruBc9GuvNeF2qJn
EOqw/roT9O1g5Vv3Q+b70yj3W8tDQtuSjpjJPCS08SjJqHH3bqhevryfWkzm
IaFWRpoH5yGtXCnykITZJWCtct48mdXUuG8fgyIpda1XrvC5DdOpU9ASHs7/
p/C7Pr1HAEzJ6NGckmQrKGALlOoivNMgMxi4DdKDm0QiOuXEnswNG/pRheQ/
KFXyaLpjnMYCpYuWT58OHampHH4yqlnxpjNn5ASLPYEynSgbibrVJRtJp5+5
m4v5RBTlYAqYo4xxolF8+c4w1591j+BZ5CH6vBh5KLhdPfBIjjhCITqMQQfI
bqR0O/C4Rj3wOOFuBx6VDJxbqW2w6mAtHz+jo5Qzt1Sw9tjY4v753SGO4EnA
mZhGWnqUYY6Wn6RR1jlBlja1IRCJFh7Vl6aLeycXKG2gxajVh39IL0NrUIW2
UAltqAyh4XVFFC0vHKHCyCpNIwl4IT3+m2iZfZkMQLE/+3ydHDBOuDUA3K76
vmFcqMQ4ilp7PWZpYyC0kbKm7ycFvKloVekUQzC8e0SVPcquRJ2Fk9v5aAoC
BB0/IWCgqzE8AoGU/GWh8jhLD/gmVhApeHyKBfGJsvIpP6jbKZaBTKo5dIpj
29S6SOB31DbI1aELl4Db0sZp+QRBlL9TvGILG7O3h3QUfun3A3yMhS6/2wON
FyKYVYJdPjEzZSGH35EPmRLv9VJKopKK/s47Sko8LkyKfOhT4usoJX748Duk
xH9M4pi3vZ2RkFQW8gZS9MPb2sostUVHy9R7qgNBQmbd6jLjKalTFCsdM4ZP
1uiz77tDWP9uEKYgFqUR9e8hJb5ru+0JCQyfnJGP9ZN2qc/It9y6paTF0xBM
mMDDRjinYtasIFAkzoNFpWvnwcik63oezA971PNg4ktZ9XqT+i1wIj2bcu0o
i48uHVoI6TwV1XKbZz0EEvI6ZEq2oJGnfcyGMjI2Je10tPIslpciFpPdzrTz
cdr7cmxOH7udpu+oNAhU1OlBaFn1h/zMZ6CieCzkpv+e6ZRmglqPPE3SmaEY
YYgMlIVNSXhlhcNlGiCqRrK53sHFJxQ3UsznITftd9wcJfnhffJi8WjVVi5h
a64o598UZMWfyWhb/gnr+R8GLo/bGBQ7xHFLvetI0NQFzp/E5OntpddVmt5W
OMq0h/m4++3nVCm7nux/2ovonOrpWyapk/dSQCjBnjRdcuzR1tFFQHDkHT7O
uacM0L2Xmzi/npRiemTJQUURFrN0Id7Mj8/G1iiH/yaKMVn59CztNDZd3j7V
SzsI+R6pXiobnmBm1yXVcTmp1SBeaqnzL0JHWzxZ+JAU+RD+PAwFWc+Dw1Yo
Q81uVx1neFKmE0lLctTHedYsLZelNPROQj4u4zwiR59SPckNQJJBl8NezPTs
5J9J6aQy5UUjkY9Gmdz1EQqHWMcEVuIYwF5Bwz8X47oesN92soEc2VziC3cX
jspGJ3uIlx2u4TQKVTjE6TSy7+g0GqEDWTrkhz5+i11SckJIfaDTaBNwsqkK
UjvCsEpLp/aaF0qto8MgNPmcV4xlVx6tZTXk6Y9oFGnEKMHemp0d1BwX6qOj
MBaq3vsytF/7wDBJFUjyl9G7AEhJIxuWbFnS7WhZEl5XNzllllKQ0Z0fpEs/
D8L+/F6ytb1vTdUFqaLknorzKhiuDoruPjjyIqFx2d+hetS3oHbS42A+Ogc3
OqvES31dQpj8Vgu0HpsPddN/DdUjHoXayY9Dy94J4G2plflD7po8fo6fvbxF
SH/Hjd1Mwmo1xcjjAsvZlVA79RdQPfIb0LDwL2BLvQDWpDNcFv+vzvsnmB3j
5nehduKPlabxmaY1/+V6/XbF3vPb2qDt3GpoXPkis1Y98uvMqmnnKHDX5ssJ
dBuPgSXKAJ7Wq+q7WvTD9IDsevPGN7mOlj3jud6m1S8xvXHFvyDg9/YLMlIC
k4ml+jm/V6pZ9xp307RjBFQN/yp3wWOslG7K1pOLuRx1q2HBn3oaMeOWIQoH
S/8GlnOroOXAFJzAbyKnb8kRU8p+Cgd/s1Lt6G+DafdYLm8+MhsaFj3LdHuO
8j5CV1UOsvUVFIYXwHxwGrSdX4P1ToWa8T/g3rsqMjTjrfvIRauy4Wg0QeHa
fZA6ZgkkvDMTkt5DpXrpB2DJLlLhLlSOFDefFSFV/YPTmdQZddBw50ENgdaw
eUxDDjXNJfmsMsgbXte5I/0oHz+Huhm/4R7RfXddYWiQgRXmjj3jCtOM24dr
SYSh4CxL5bFRx7YLGUm1U34KXlO1yHynkfQ0Kia1r9PMkyzDNFXZ/AjK0t1H
cxC0ZhZC9pyNUHchEoxxGVB3/iakjV8G8W9Oh5bk7D23jVLj0ue1sF5bM4tS
44p/Bh1NESEllbVmwo/4J+B2yOS2Rc9wUV9HizrIA8BZFM80y5kV4CxOVP5/
evmdBzQEjNveY5qnQYuTN296W0qpKGfaOVqZ+9gw6XxHOFEn4/2exuoXApVa
SsBx4X2wbvkRdK79Gth2PQmu2JXYKZsUE191LHSu/hK4U7WUNUlL363ldxrz
meaKXSWftW76HtiP/os/ySMe+Nm64dtiKDXaJvEyJ2UeA852qgtse/8Ineu/
AdaN3wXbnj+A89o08NUlvyya9Si5kFoToeAlh/zoxZA2YTnNlYgL1u96Csrn
oAlXny45rFr2Bahe9fUu3JivzuByjsoYDdPLbkL9zt9D5aJPYjN4lwKaFuVU
QXvSdi7fkbZP1eoGgjXnBLdXuehTULHgY1C76XGchOUI3A6JdPbS61jnH6Bi
4cehcunnoenoy+Axl0Hz8Te5Po+5XMKXz94KxjMoGMu+qNS35RfQmXkY3M35
XNZ4epi0zfxuG7a1gstw3chD7cafQMulyeCzNgszsT1xC9Rs/DFUzH+Yq6he
823N7b/hMeqqbkLIOnaCJRr3nE0/RRYe4WqJfWu2duBOsNN88l2JPXXbnmAa
fRLfyyFWVeuxBVKXqp/9O0ZccXVfeSjfrfUKZq1/TYdtc5U1VBAreSV0Z+yq
L2JMq5v2S97P9JnewdZe3awnoWbc97uIg9gN9GuPyhHN7+hUj0MooRxPUxl0
3NrHfaH71vgTD6ozGPA7UPI246z9DtriPoFDGQptCZ8Fa+7fcIke131x5wDw
tJzHcv8LbbEPQFvMYOjM+DWWOSFRI+W7TNJmJwSc1Ut4lfvsRZLmR3OBaI7K
OdKxJ9HAfAmcVYtQeL8Klhg0pVN/gLN3RHjqXHWb8NajyCUKSvK3wdWwA9ym
U+qjF/uJPqMejrWjLH0Fi4bwbVfjbtFYwNMKjvJpyPB3sJGB2O9HsKEfgb1s
PPhsBWI09QilvLtTVThQ7huzGC0InZyXxoIrZjnYj/yDkcZ++G+4W2gv0P2/
Riph7QU6GxE5n+A6bfv/DK7IRcjnMnCcfw9RC+s9+JzhTbGwTkVA/BvTwNFg
NNwPLgmo8zvbeKHSYmwJH9+PQIbzjdu7QZP44ibztdlMq1r+ZXoEP8+C2s0/
Yxqt54BXfM/KAwxj5XMHcfWmc6Og9cZCZPePzB7BoQpT8jQihSt3/JbJBBMt
4ROgOew1RKFPECQIpBKg5ndYGKSITEjUcmkKc9d87HWoXPwZFB3xYoIB9H8F
pdZ+h8sQmGLvggGWnBefm5kV3FBHiSPqONHMV6bL8e4rcLVf2iyBqwmVZqJR
YllX4NLk0F1fLJUYUX/bpU2KPpdxWTsR4XUzAKE2q4XLVC3XWZrSI3jVTHwM
gee3XWTGGnesG3iRFl0z/of87AD1Nyp5IC6/0wqWU0tIEexHD9MjaOZgd8Q0
82+/s4pRg1ZuR9rj4KiYDs7a1fh3BqLTbxTkKZ8ssMDVsFMpmvI9cNas5KId
qT9kmrNuvezYPWPbYIkjHWk/RdD6FjfhrF0nm3E17pEbKkEsl019DMusAUfV
fJSnrzHsqiCn1vsgYyXRrHn/AHfTQW7Hr6Z2+V31ClBG9QNb4ev4DII8AUXZ
BK7PUbXAcFecC2HcIPzwVcdp3UZNh7Eracv/Y4xDLf/Eq0p90eTsD8hQiccB
3pLLOrkIgYypqyFn/hbd44NYSyMTh5Tw5mglvNCSmMVQaMmR30CQv2o3pI7V
hxMGQGt6PuQu2gaJQ2bzD1WNerxYRGgkcS2o4htk9rSplWkJb88An1O+NB8b
YrI5JVeOCaWPNF5PgOx5m5FZrB9p6ZNXQsm2MGjLLZHiQh2oOnaZbbTEd2dB
FloY5rQ8qDx0getElVNqrk03kyBjympsfiakTVyuWCKx6VwO6+xt0w+p5e59
e6DTbNck1IkR0+8JwpB21iRJdPXZWvRnp5qO/IdvWW4tkZuOqxMql3yOlUu3
sVAMO2ErleyyKaDpWhmr7C0f/I4gWR6LQk23avmXuu4JoQjA7zDJdGGslmo+
kHVa2uvEJTYxW9El2bHue0AoK6xUjnqBvZGJJHYz91UZr1i5QD8C9bX1xKJe
q69y2jIuCy+QBh41uUwzH575oaiwwsdCAD+Afw9WbHj1at7wunTZkNeLTHQc
QVXdDeVviiFdzhL1Pwisu8QweNtiEK+XcRUBbweqsA+hxH2d/q9FSH02xnlS
CQNuo+Do3qE/VEJre8LnSOvUWurk1tviPo7/t8tYYfafkfQxZKpNY8rbhmrs
l7tquPTquXlMQrzXNtW8fyrFWnRvfkcrw+9ulsMXBOuFQe43FjCWOk69LqsM
2EzQue7raO0+9X+I9YP0WM+Xv7Vc0WNRnwWfR+R56DBdKYZwSGBNeG6Mk3lp
Okg3BMN0sR003UrmchnT1kBdeBTUX4qGzBlrmdZwJVb4WarCLjGJfpzNZjFT
zVEpkmzJKgwG75oK6IeC1XuZnrt4OzfWdCsJqk9cgez5m8nNJiG+aMNBLle0
8SAzWH3iKiQNmwtZs9ZLiBf1EsNEQ+yGxmtx/JmwmxxPRMdNq088fBhY35l1
lGlo1/eA9SFgOjtCoaVrZ0QQrlHPHwzVq7+pqy+MyyGsS8+X39HKENsF4lGT
jV2nNrNXO9oRv1F6JiTs2lq4maqVXyNEF6/tMJ59n4u6m3J6AHOkrfs+WyO4
dchmOtMPKM2c0r5Yvq8w3rj0b73yATaufLGrDxCVaPYBuuzSB7jwL9IH2MWh
N/wr4DXXyUmtn/sU6+v0Hn+Jfz06A0t7dAaSo73q/a+B11TDeZIUXySdnneM
o8o3LPodVv5s2jHCIL66Umjl9pJRMh/I03JW0cpr12lOWLT/ieZu0nLP7x2v
NVWYaKINUtcVyLwiy5F7wpr9l9vaWHqbik7q9kSmEaJLBctrYbUc0V72rQdY
9uSfUtVtzbSz7XsaaV8mKOQh/OgheWA3SPbkn1bqilwoX96ox2NKbslbvhMS
3poBpkTtverdwXiQHoyV/jiciHFzIH3iCvq/XKcuNzdBmq6nwyp0M0I3QjkK
UjRHJovSJVuPMpLTZlB55OKd8RiXx9VYpmExg/jiM3eb9j15bfllfL9872kB
yx1FFRLtvSJ9Ef+SLUAMBbw+iS9emwNSRi1Smk3Pv3OrIfpWpeVyX+ibcUhB
36TtPaJv3bbfKOjZWiGlrHrNt5hGWildqK3zZ2vuKfmccKuQU1g6Bq7PY5q9
NEJbRNUJt8EunRy8ouDh8TflQsD7CuY250s+dJirSBbq+WwVrPqG5MNjqRIO
lT7ibR+CWF2LWpPOiN6JOJblrG5dJZ6ScSy5/uwdHBdF5VXbkMI3KC1nX+8B
cvsa0HKVpzGZ1HidvYJav1JxrvL2YGKIihm3aG/7DXg9HMhVlqbamZxnFPy0
5cqpctauVTHrmmZJtMep+DnvQ8Vjd/NRnVKguD1c9VsN2k7/ENgKXunShuZS
1uPxhG547OtMZ5qt8C16d3FHEp0MsWZKcdNh823Q7M7YxxDoyQ2Twmo/8QrT
Ag4LP/3/BJoz9yt13ZpP3+dTTQGIgFv7gkCRjC7g2ud0o7q3gx0TLck5Moem
G1IP7IbU5GxQ1GPt27LJ0UA0Y4x4zWV/hkAC4oqD51Hb3AbFW7VzHxQTI602
a/YG+ukJqMm/QRsDKvpSNqlKVRWXbFKv9MiMdUiWZEbS8SsCkYPWL8JMHx38
7tXUSlIh57A/QbPcBbS2Ki49oSA7KmPlc8ILoodfc8QcpVz5rW4BMD38WrPD
pBOmL/Dr7ajnMnXbn9RSobxOCcl9g19dcsaGNxgcW/ZNQlBcD01rX+6enNFf
FjduHYqq5aOs/fajyJqyX3ZJ1Gha9yqHuAkzCebURA05O7FhCsJHHtDQxVil
aKM7RweF426JG8tegLYL63i3UBI33rwtcWMQ94ZopF2bj8xiFKZMHRXO5UEn
4pK4Xv0fOkfLe4lp1xjW5ynbRUxSe+IX2UeBwH5PYNyRLty70BWMbXlBwHhu
dzA2ndaGy3IjCBg/2B2MtSDdXcA4g2n4Q+eQ+Hd78jek8Ekwbjl/H3qyK261
NkqVUcpzGfvuCYw719D3K3sMImfEfvjvYN38Q8mxp/AcfU3Z6i9RvSb5phUV
vvozCJOTgZzJ5JpFRJXLpTcIXH85RnHh5mh5GR3FVUyrORWh8vqQRGpyXNec
uc4KKV32umamtxeUoSYazijttUqfVDAUJoQkljvL6Msm6Xd/mfBQsGYfK+IU
0hYsl+480QWNhZuis7Rasiw80Xo07t5O18QK+UqnOyA0hQdBh9AUyKNyzqr4
XiG05daSXirISvJ8bxXk3iL0R6Igb/5ZN4RuPPQvWa52yy/ZFwISoXvIMpz8
OCuYWpbhwC5lKbMIwQxqxnyXPBBquwM5ra/12AJO56KENMq6atk7sYsnglIB
Cd59nWbZT2539Lexf4ouEzQF0evm3DxKrSA8puyn4CmIA0nZ512G/NK089TP
f1oJJ/rFSYZB/G7N9stb+F71mO9AzdjvsU+dUjmQNzEtpIC2xX+qi1h6TGeC
OCy2B3VYKM/qvlqkbJKKl+EaNlpzFKyt29ANk521q3Vt7OzmsLgfTCZvNWVR
2ArfoKPJfie9Pyz1RxxNFZfgg3i7k1/5pN6vbITOdY8G9Ss7Tr2pbS85YYqG
nX/63sCZYpeN2ptXrdt/rviQxUppq+YyzhtzqGsOel8y5XMoGnyrPBxCIE1o
ROCYt2wnOU+7g3R2UVeQHtd3kK44cI4dJj67U3oY7HVN0BgRz14PQj/KJGSk
TM3tGaTnCgcFgif97g8usxKq+nBB+vZ2QmQ7+tVwJ5BmMDMVadbD0ZclwPUG
pBv3/03zIZ8bKT0bUoRaSu/Hh9w7rCYfsimoD7kbXN/Bh7z+B4oPuUVzqHak
77/NhxwqmybjI+CT7yUht2/l0i/QgBqEV1KPeF8Tg9ZNdQzVhcMexf+362NU
IkHK727Wg5UCYAcMwgFHCiXF29gjGvCLopRWpuZ0dQuIdaR8X//KLvIPUPZZ
wO+4L8iSobD8f+PzD+OklspnvZ2pDGOaOqxjJ+0nxM5jTO6W/eCtitaU5atT
bst+CJXIxWXLrmlhaq8EIb+5tG/4FSoftYf9m6x38bi3MlKByQsjtd3i1Ouc
LIutaBp8ey3rofZDz8tcQGHwtyRnM5wUrNpDTtXbDf6mW8maJb1wK4eaxGVO
DWLw30i8zeB/CDKnr4XsuZv4GXrrBPlFKSRVtP4AIyhd5OYltKvYf7YnJKNo
FKVKk1Eeyr8H0iMMxuRlpiuYE4Ce6+IESFWcAM3RqT06Abq3F6JvT75oujui
hUpEa9j3HJa1yqwC1L44OXXJZ2nZ3hnXQiWusSKZfUzAk7MmWaTDEtbIVYoy
1njoRUVdjVx6L6kQd8c4mQRx4u3gSRDWLkkQvcM8SoJYpaqfL2oGvoKk1Evm
qCpO2P2CIfohD7P+lSicD0g1HfyH4QmVRhEzco5SLqzYg4JBot61qWz3+qSw
7+DAL8efVTKnTCaFPcJYSMZpe8LnUVcfRsoP6v5/VwxnVOCseS/iFD/Bj1P6
WVvMICz/TXq7VLfkMEJmW8GrqORlEStY31CpKIol3R0RB+kRUVlT+Lwt/yUt
X8DbFoUS63c38m2y69sTv8Qpr47yqdxTR8VMBkvqSsBrkWq6xtpXeJQ8LRfY
p0B+AuXLpbvmw278jpIPe3GMmg/7QpB82MGannduGOcWOE69QfoX2A48I/MP
JIj1CisHq17Rb4Hj9Ntg++BXjNKsx63/BhvovvpUaSH4O+q5DOmfjvPDwRW9
DJxXJir8r/8m9iVTXeJdA1rtheWQNHweo5qnQztXJVAzd4n2CgeKVFHZok2H
tF1CDWpR7hXqdyLpwOd0cVoWB7XalXcU0F+qsurYZfF0/opdnKqWPHw+1F24
JeaIsIqCXOIKhp+kPBKtJSlbYxAVTFJQcxdv14KaBUqUq2z3KTlY7QXldwxz
kbOU0FGGuax2SBm18PYw192av3OSwWCG06oVX4WGvc+SAsfQYjwzXMIsWegy
NlMZA6bzo1XUGspaHk236vgWuNoU9iorapT3RRF+0h+FGInIFSWAmS6MA/PV
mZyiy3liu/7YNQc59yTX06sc5N5i7MfU5ONfKsnHCJotFycxG01HX+GmKOGY
Lmq+fvfTXK4tZnU/7m1/tNEuSFlQMVczjX1uaNjzZzVO9jhXS5nWMvH42izZ
O8Faw56/sEpbt/XXDPuUNl0+7wHuuaMiWoCt3hLvCWxdjbvUuP5IqZQQrCin
Ch7kkwV8qsB0MlQdEBE+8tmLEIX+qlran+ZkfaBXTPjdDK6EaqSrdmb+FhEq
X+Kj5rSktF+12AA2YN3GMBmF6wat/btBa2fWH5BKPskH6DSBHGe/uwnspaPV
0wb95XaAWrPYIjW35VlOSKYUXDpp4WrYLqC0++GnxxQTeff/KoefPHY5k7qg
EkEbq4gEf6QDOq9OhoDuS0N6B6GDtMASSgnBt3XHL5TUL1SCUakVPpiA3Uxx
JbDtfILZIzYJRf1owj2kVnV7Wpa9toldlhSklwlTgyVwUpSfspva8kqho6SK
VUSiowEstzmZmoVISYmr9RejWMVUU7PEKjOpVZKdLXChLjySVTc2ZstrBHIK
zU9E3O+UpyVyGEp3HGdFl/KkqCOE11idnBOEeiVPC7nnPCqsn+A+aJ6W6g6g
raQBlWJRp8jTMt+Wp3U3Hu4GoWwtep2Ib/NZtaKzVRRyaotZ0/XL1g79S+hY
OHD0e3Cw42QowlEIyc/waYiKeeIty+z4ZFBiOqq7hJ2U6optBzle9gk2WZXj
ZeVdjpf1FjRDVbTCtYEreC2Hl/hoG9atgOdE8HUq7wlHJOzPXerPQ3A7SAqj
gb5PB/GUj57wKbXFn2ZYRxVTLTNYH9niaBj9pWGmE3DEgr34svq1tL1FRpG3
+piSt9qwXejN3vZYkbeqIkRXg/fTArECfsok5U9Kkq3h+SAAIM4ydk+Gf5id
NrSkKDBgrazj0RFLtDWjAGrPXGfdhYIUJHxkRolkGbpPAYykoXN02fA5Am9Q
o+DHyHoSy9JaUctV07HigN8vliWBAJFN8ZndlqV25M/Hq5piA7QESNMqWLOX
uJZzRJ4yWoKpY3uRGY/gQiNCLrH0SSsYXISdi0uxN82K3D39ChTJbHor7+sq
TS/t4o0JertppSrZXU+z/JiPrWmnWX6tbKZlE38ZRDSeurMYSDWsIUPEpAzf
CCIa4sUH+kkQEqcfyG98yL0X0u9qyGTDlz4tEnjodyoHFrN+j3rAJ3UHFp+n
NBE+sCiGw9N6lU66sM+6F8Oh3xb//zgceiOaF0fI/12fXg3C6zfuwte0+2iP
61mi1APyelpHeI7/Pwhim7JgefZ+GBKzGP59Yzr87dpEeDVyDizM2AWppgLx
RWlbC07Cs1fHwb9uTIUZqVugrKPW0NCtugHwftxyLkc/r9yaDa9HzoW/Xh3f
jwjI47aCU4IZgzgLdKjsMrwVNR/+FjGRHyMuTE5LvVK7eA2lLSEKql95BhzZ
uhyU1/4KLRuX6WrDTe+D9VwOfD6pnLkrSqB58TSoffdf/NO8dCa4K8vAuHIu
1L3/ijRtbVZo2bQcaoe9BNWvPsvVeJuUrxRomDQUmuZoXxLvKi3k+9ZbVwyK
3xN157CN0DLt39A89EloevNnYBrzDLTvWgQ+c5NhiFqmqs4JH4TVw5x1FTBx
aSlMXVEG6/fWQGpOh2GmWvee4guQ3lIILmn294cOjw0OlF6Cv14bz4MU1Zgu
XzFixf17YtJ6pq/PC7ungeuvHzjusa+jHVvHsaAcgjNHwRp5Fcy7NkLt0H/z
aOgGznJ4Fz9Kf23xkdxkwOno5cANAuOIp8CydgJ0Ht/CP63L3oem134CxlF/
An9by7tqsahkCyzeUgknLxvhWmwrHL/UDLPWlMO4RSVwJdos3gSzrySch2JM
wmr5pr+itmqm/T1iEg3lx1Wy1+2Dw+9fhYNDL0PSoTyBFFeWJjDpwrxY+a4X
l9UNqWEFcHpqJBwefgVOTLwJcbuzwdpil32L3JLOzwX8mlLYVt/JtLQThVJG
8T7Tbm1Mkwd4LXWdcGNdChwbex3CxkTAjfWp0FrdDhmnirlsa432yrLMsyVM
M1dp36Z1GXk+hs/p14Lb7uFyMR9kyncYFN6ogpsbU7Eft+AIdp36EbEmGWoz
mw2z7kVyBnaTHHtyLH9GUZCs2BKjmYZSI2lNCyZD/eg31LlQaKq4dOlGd5FB
sLZqMTIZyog4xmLTsW+Z4V1Bc/og0KVcKL9NasnWKpiwBC0mq3eeSm5zd0ro
QhkRozA6YSWTzlZFGYTcNBaaeWDp5/zcGJG8wuKEssG3hl0mmdG0XpyLc7Oi
+d71tSmQeboYordnwKFhV+D4+BvQ0ay9neNe5Eh8wYKzw8UydOi9KxC7Mwuy
zpVwe0dGXoObG1KFLN2/KA2Co6OucZfidmVB5pliXh5nZ0RxuYKIypkfkjQl
xfBne6IWMqkf9w5JUpfZb5wxChqnj+yTNIkgOwUATZNeIMQ2vK/SUnM7GFkS
M9vll2sgIsPekgswLHYJQYnY1W41pHYTxtzWMliVcxDeiqajwlgYH8f/wwLc
V8NrYknChE3n9ntIumASYvhLN6czSL2NReekbYeI+iRw+zS93+FzSSFtccqX
Iha1VYm9U3Z+bMJqpiF38lWMVDXRyjvqZV5ISXsNawC0VdPu/9+bM2F22jaI
b87u4blBYHa1w47CM6w50H1SDcYlroEzVZHg8XvFexNjmjK5Z/+8PgVevDEN
JidvgLhm5ZvV34iax9XmWcqFmOwsOsukkfEr1OXWH7JUIb0wN0auK7FtNalL
ke/h3+r0JjkCKUcLmIZrQE5/RVID0xBrP4T1FgKF1yuZVhIlnBmhkHupXMLD
h7LWUKEts3QTMa/Lx/B9asotwz0ttoe7LTa/ww51I1+DuuH/hY5Lp8GRkw6u
kgJeNLSQJHz3o7UmxuBuy0yE832mBgbo1sVDNQ37xBameSoKtFzgeW9C87D/
7VKf397J5do2i/c7DAZvbSlYVowE47DfstJlWTEKPJWFrIhxndXFsqyvpQna
Nk3jepuHPME6BpVtWzeRywbcLlkW/H6w3zoN5vlvYdknofntX4Fp/PPQtn4S
OOOvsJEk+lTf5GKYuBipnQ2j78IgGip6sk+Ctut4g/SW1OGze081shJDyuC8
DRWw92QDVNc7ZV2k9NBzxRWaA5Pe+0xKED03eVkprN1TA4XlNkjOViArq6BT
lqVXvYffaoG56ytgErax4oNqyMjvlPCG/5dt3XtfBkFCRjss3VbF/Zi/sYIU
MqhtdHK5CzdaBIKuyjkk8QvRoB/jY39IaM4R4g3egI/UWGxHQVfCFbIJ0Iww
CMSdlrL5tuUwEJocZngvdqms/rlrExjL0K5QnwtlnBQXQqmorkWLv0qBuxdI
VcoNgPPVMcQu0+nvSzdnEDuiubW5h3HH6fo9IsGqybdUcM91A6bfdkYnrIJ2
t1UdWfr9IOwqOieLE5i/hqYc/aXPYeURMDxuGf8/yZinfQk2/ns3ZpF8DjcE
1eDuD1dXJjEWVSYrsFmTIb56oz9kny9l9UVAKsKthEBSuo6Pu84/qBaJAQxf
EMdFUUuREnY/6EsqB9E6mmyyaSp3Znrkh4G+D+maPjM9ihQ1w19VcWuNXgXV
mx6HsoWfhFKKZK3+JpguTqJYvvAhdkPjjOQuaGxav7hL0xKN/X4N5FuMYN6+
llAZn8W75JMf8Srorm5Y3DhrTJd6JRZHXv3QsVjh8wHwt5vB+N7v2PBt2zoT
rCe3QevyEdD8zq/AsmqMwGNZvKOV7eOm1x9HWJ0M1lPb2QRkaF40lItjGVGc
9idRi3H0n6Fj71K2FNt3zAPT2GcVBHfa7weUhTszr8TGIEY/+xCcCTzDwpvZ
8rxws6UnXKbiRFu2vQpOXjFStVzNXpWux+Wdx+qZtmZ3DbEJRy80M5bvOFr/
oeCymKvrca1MQ0zGZ89dN2Fp2gt2hCntnLhslN+UjNqtwIpbDWkCHraorh/6
2V54inBWU0e9LvISwYrsA+QWClFRCDVWiTTkTIpqzGAaXf6An83xdblHEezq
PgrNVrCR3VoqYZg2nlaXEqwiro+WX5X3TlRob1UOVg+B7Mu3ZjGd2sZ7XI8P
u0LqrcBoVNjVeh5CgM2V3SGPBHWPLrvXCbuLz7Mj51/Xp/L92KYsMdhZ5hL5
GP1sKTghv3HTh+YlmezkgvD7AnAUTbrUYwUCjsmKv7gongGMYDl8vvYNR7ZW
h7A8JXamHMlnWmNBy4eCxWjyMa0iUZNIskA/DO+FyCR2tLt4K6K+0r34Pdkq
IA+C2l1/hOZzI6E9ZTf+7ILG429CySzEzC2/oOC9ErzphsmdV89ruIbaL9Ea
Z46WnJnWLoLaIS+q7au/ce/m11d73NA0byI0THnvDloxuRL1ryd0ZKYoxmxq
wkeExNizK0eYZr9xUu6JtvN7mNYFhUMYRrloxDGt6MUDsqi/Tb41yHput+AS
Ai75BZIUOXMmX6ehuC+VWKKA0w/TV5XBlOVlUN/sksEj/NNhlWdXuqCveLS9
0wvjkbZiRzW9412Qy6odMGFxiQBgQc4utDJpD+rbAZo5hVxR4+BKVAi+HwQW
VbZ1eGHiklJYtLmSXjMuE1QdPpiPCj8VP36pWYBwRWc9L/wXIiaTYibyGgly
BCYcq4gQLhhy/eovsr2pCBnb9TajSFL+0LE1lE16ok1J3kh8ikRLgjahqmKr
wbRbUcP+kouyaKfHLmqg7UTwmttaFnIbX6g7y2TPldkHZVGJoQN4MyISeRro
L/lU3H7Pw+rtpiLFY0DeW7rIO4a4KY/XqMiadlx5ed7FhXHS6XA7JGIVEv5y
LpZJB8S9wunNjanSkUcOZ7LuycuGZRn26nNMUJ9nYsfhh+hcoAVQHFnD/u5+
dBdp5C9MPJALHodXRVjlnKp6aa8rQDWYULY9bb+hC8SGSohtmPwemddyiacn
MZlCLM5CeQqDvqeFFNvGWWN1gOzo1qDX2AQ1b78A5h1r7wC6QtUVtbTu3840
T131Rwa6HQdXM83bWCVVPFJaTeOfE6Cr9AO3DnJXmMb8hUNU0mjBrYTCIF1Q
N4QjIKRRexsqZQz03rEoBOLT2+WzYii6Y2kI5BYr6HgjvlXWd+hsk9RiRbnd
JxqY1mhyy3JCs7xfDfZ2TTsuTTuhEJlkEcApkwfyLOUi7ChDY+SfJBp5XlHx
FLnno+L/P+a+A77K8vo/P0JY2tZOtXvb2t+vdto6uuzQTrtbbbXurbhFQEEF
RBAFB4jsvWcYARIICdkJZO+99143uTfnf77nfc9z3zsSEkX7j58E73Of95nn
fM98ntfy6bO1bKsW5xQjldKhb2qTDGsKWwBtDXYybA2PkaF0W8wLUsawanqC
jxVlb+RsNz3BgaE9lXfVBpMa3JN6fBltpTfov9U9jRJ9tZV+ezU/JMY9cKIo
plLoFvAGrZLxQD43lrTJ95WnrevR1BKHg8BoIu+R1slobVajs7GHsewMcI77
AHZNoPbaLoUNg4t1ueb1WgdYSUZ4BN0ZE5nRVhHdwq8Jxo2LmAbiGzxk+DKu
19EwGsLwr91yoy/yfcggH5yirBxS++7N1L5jg8ROK27+A/WkxMv/t6xdRh0H
d0kkTFAr+oixQ6F4Nsx9Wp7rijxEbVvXiFu24qbfA8l0nfpyMqj6of/g1/qE
hC6XZWsADCVUcs8N1PTmAuo8tNvyMTDy1j//hCZUnXMF9OB6KeuNCTeuTrgE
nDjobqqVz2zzm0AEXLk2/ll1muvkc/PT/zCvW303QAIrHmWsEY4IfkkZlms0
ObPDtKf1nOA3mxW6J+cX2bxmlR2xze1zBX4b91qgy22YeqVVfQHgl8Gmrljb
BvxC6aH4l22jfae54BE2vuYQsK35HoJfUmO2aZJtf606NeFltYlDgiFfMHeA
yUMJlegbih5OeMWsUWJjlq3nPWWAHz5Nh3mtJLan/IQUPZ4kr9ahdYUH5fNT
ya8b5It4yXJ5djZYunVDQYt8hvKFn6xDJZZC2G05NBjx5HtGQDN6aFSIwor7
s9/r/nw25h26P8cb8IM+yEqcxvPRk4sxGXFfWMfQalGNqwRY3DkR3hdw7Hg0
SspaKzvMPiAHAWWpO/KMbgj1F7kC7gGPeSFFU8TTovO5u/WdGJPI3dtCjYee
orJFX6fCZ86jouc+SuWLL6OG8IdxhkrzcQc7mae3/YeK536Sq50vxnlnxlZq
jVkkTboa882w6/fcK2XIfzX3TfDzKOMhmDJVQZ25rxVLr6SyxdZZai0rW3Sp
lDvxq68y0VJfk1eZqeC4Wc2mv1PR7A9T0awLqGr1r8lVn0OlC79KFcuuHgbr
Ydp37N/OgHszVfz7d9BjqT8vS0gEIbT62Y8J9iNu3bZjvcMtMFGehTO4+v5/
87O/FdmA5CRXiX0icYJ4fif4pyPRYH0tNSx4dhxV3nI912xc9By5W5vtedB7
gO4fJE9nGzXccw3V3/JD6ty4SAJi/WdiqT/9FLUtftwH5Qcri+Rz+9vPKQe2
vzndB+QHq4qt4b1wOzL9sxIx5GYr6ZjI+xLBdwOi6n9tbBkYEfg1fgbwHu9X
5gT+aQuKxR1MDuCPP91+ToEfcUCUtZuXjjHftQ6MCvih7aLsYGWcAf4G5k/F
09qepvcM+EPpaHWilP0tappBkRdOr5KyVyWuN9yz46neMUrWY7WbfRUnpejW
k88HdHNn7BzTDVIRbMQ3zrq77YzEo9VJQlG1PXBfI5gYKt0poRltaNBDG+8+
DIC0+5pgypCMhZ+oJSnAch2KKI8sEZweV809YMXRlBXHVb/D3IMwA/+SqrYu
S+rrzvS0BtrlkAXAeFZ2jQhRObD9kUjqbu7V3MK6fMshImlni5IE6rUZTT+D
U9eZdwC1H6lvWgYxgWZZPzbDUlPBYnwKEB266TgEgOhZwfQJVLv1pnHUFv8G
wCz8ESp96UvUHPmcOc5RufynUq1h/0PUkbqWmo4+S8XPf5wq3rj8vy4+dIyQ
hCXzP8+2wRRqPPAYvqP6nXeIyEN5+WvfVXvhy/hn2FQKFbcjIbgrO8mL4NNv
EGcBwocGwRmtBYHfnG7K3A1VjOhPAe2x+zdchtS1aoGzIHp5WIBezv/yNPEc
k17EZrPHo4HqV9dUeuljcEhdsGPW0UcL1edCRz/bmN+Njv6f6NkKeLymVlwf
9fDDkG0SHhiyzTpPsmfjxO7GvtbRYHfkKLH7XyeeeVfYzcN9N9itvmCdClJA
+vQtA6GsvS+R4vVFB811AvX5lpYes1wvyw2jIy8l0qG58ZJrAW3cm6AQCl+n
avGGc31yNBcmUtrOfDrxRprU883RnOTEbdmV6sxGyjpYrG7ccYKYHwFGGuiG
OxaQvHfGSQSuEDyTLvGD4SA54tSqDOn21MoMwWP4KWpz7LcKX2AQHKPCjBBf
i1vNVe87It4ZQPmhefEyC0iJ469Zo4QG7xk0d4vAQYLivKhykySfF1kmZXgU
/mY4gOAAhvcj92ipisdAAGfQ2vBnKevK3W9yVxAYcndZviHcEI7v63ffraJo
oKWUdesPKWj/dzEbs5ouZZ1ZO029luPzrPjha985d3jdfWCdmQQSGcRnXO5N
T0RKG8o6N79q4+/5Vrixp0tSLIDB7UtnWHjM2rn8wKd8x4/Up3wWlzLSJZqn
/R2SgSvhL6P4sW1SrS/x6AhRvPEGEZ9iBZiRUAfNerUUb9pXb1Y0NrVtVJ7m
0QK5eprrxuxpHtOwR+tsDoblGhK75eRzjGoMUjzx30RMlbL8duscqNP/kt5S
GEwNz2srV+pKt3uBKu0P5UhaUD8vciq0VVab/V0wcDYPDrnfjQsms6VodC6Y
J4dzwej4X8naLEWvGHEyXnRzcdOfeBZgrVd3Z+yzfNAF0ZpbayWdIcde/c8I
t+kkEm3fMs4yqGkNL42c23jiuBz1gJIK8O1q6g3RvH1/LIfObPmSPwwYd2Y7
QG+mk8tOizyw/SzyDBRilCNNDEkaQGec4Wgo0AjKh5wxOso/Xk57pkeLWbF3
5knMQ9qBcg3bAePEd0jAY3vAzNEJ3TrHsqQakXMYk5guj0XJnJpK22yzZqIT
t6Ufd2+raNJVq671ugq6GqROw977DblBc/3/Q7MOledgETgzKnB9TuGMSUFQ
uvPogbGh9HiD0gi7sSasBpIrJ0WKrRzje3C/txmT5hr3xh7wKtgt5pUxXmWS
gRuAz0q6qdexeq6dfrHVDCFo+kUode9bJblyffERIU6Ab551s6TYMY4PD9xh
BgHxu/tII5yGZmT7jjUZyDtbGsbQ2dIwRgvo7z4BY+yTkkSMOaNLxAiO8Cvy
rezaRZmbDMwhmUwTyVr6TTxeQ4z8SNAQ48HKOKVOVsqNhuyP8i+mrzUozzq+
eby5z1w154wyMky/iyjjhqJD5yDKGOpYGOShoDinrVSLWY8XfR7FqU15ivVH
FlgZXYxvBus1U0Pxua/TZcZcnlJrvO7K0sF8Ke01XcaX8nUtc2DoR23S9sfH
vuo0+Vy3/Ra88bkykRWx/pozhvSr1/6BCnAJ4uFp1J0XTr3lcYJZjJ3/vyi1
0K+rVl1nr7tVBj8LQ6V8ukT+hnzD/mp0IHmBAUmk7ULtRGiv/a1n5aRE3Y3f
FrQELOFAVceK5yWtF/WheA4NDqgB1fTkX6hp2t8khbdzyxL+d6Y5OevKTLCq
IVG4lRofvNZKFF78OHXtekt6thKFb/XFSSvnAmnHmqrWueFlgdnGB6+zoPbw
Ju+dmgGYMsVgCo5U4BjDgrcr5KjFUjstd/rLxQBHZ7LwI85k4cgm2rC3jmYv
GTZZeLQ4qVkkSCLWEeFQxZZwK1F46agShcc4o8l0LM5yjsyyZiBACnTU6iMr
weOprKtWvQ9U09OoGKdegLti5xn5FTRZLcwHJeEeGfB4PeA4lY5y/tc4CRQq
oWpXdNVrVZyoU5VUq6qG/nTym+8yaQ1n28+etKYgOkLSmlY9VBknRbfHeG/N
VlV5XvoaQ7QeuKLviUBqmJmWW48x3+44jhoqIUHA3P5ZsSNCpKaEIfdheIgM
C4DI/prTzAJcwvBZ6rgUBvfJwDELnCqQu3BQZwK5mgpNHcVET197ACQenhYI
iS0lZ4fEN/U+LT9ITFk9Vki8elj4+5AzdkY9R7dR06PXywGxpsf/RH1Jx6wV
6OuhjrXzRY/EdwCqwUp9vxkbJakn5DAaDpXV3/x9yQjD4TVXXpq56QdBsLbX
nrQOtzkOrLUvn62gZwwAcg9K1gXwFNqggiP3430PUgA2THYGoyR9ds3OWnrq
pWJW+wrpzQ1Vktalgbua+n5au6vW3FyAQwQwysuqgh9WGyvODbqtg2o4BAd8
mz+mg2pjmcskCdbhkAage9biUsHVlraBkVRAy015Hr2WvU3KcEAXxxqcef0A
tN8ffVS+xwUNzuMQGoayjkOk+hyHwAlc3IzhNb7P90FBNv/lxFthR6VY1cjf
cp5fiKpJ1vNfCoZ4BGHAhIYsGvS4pTtc9aFHFWB96zO+xyTW+RyT2Fjk7WZr
yVGzg6M7JlEl7Yx0TEIdB7Y/QvrU5YS27XdMQnlbU1ucThCclkMZhsbKr7lD
urBVkCx6aZoB1sMvxuudD6YMXll1CCsBONFSlVJ4cQG2iRuyxeFbFFsV8tVh
UTNQscTlslAc67bdjLAe64ShkihRsfQquwfrL67SQoqZuibd3Y0BBnh/bXqA
Rlm71XsBfNORGTbKtp0VPkvmfcYHPnHTmDh1c/aaehjnKAzwYPD5ryAQ8XG7
zMni+o7bBRnrjQ3124iHx4s/LYzSms07QKAY0Nwzq0Osg6JhIr6VlvC7Mn+f
Qa8Gtp3udtxNg8Ohf418Ck2HjHg41JLtOEdq6xh6LBUpRL6HOCca7guviJXT
mfh/cA9TsYnkMJjoeVPjLHeeF7V1Ft/zohtHfV4Uj2ozMLMc50Xv59H5nxdV
Z569zHJeVH2Wm4sjzH0+iMqoGVjaWWPWkLFCLUa1IlnVMzelBWMghEQQv0By
u6onSjFBowsb/yapOK7mIq9sr0oRJmo+5n0Ru8dlsj5NGS7tLF/ybZbxXzbP
KvM07H/IaFDKPEXPfQwv7NOqVauupeI5F/k0ORz/4PGeYu+NJxo+cNXnmHrK
j52Z20295qgX/MMMwfjnJ3aZa8AjPpLW9sGQi0fJU+OCPPtlu+x2e9csFrp2
mPssJlJ8QybNSlsu5AtCAdA/m7ocFxXZsnGyMGR4RYzE5+yT1yKEpqcspYiq
eMdFFuf5J55IfgqOBMotFPzcLSdni0Doc6vYnuLMQBGBhuy92+zbJzAuCK/6
3hZNjYO4xFmQG09YTUIm4k6NuPqMES+2gPxD4jgIGsdwgCsQOH4XW0Cc4ogJ
xBNEG07C6MUWDrbRxcfRSRQ9k/qWiXmyRJUyxoqQqcOyAOtG7VVU8uLnJKmu
8dCTcsQNcgFsAc3b3av3Tk+i1lNLBKfxPeq1nFwo55TRZkfqWrXilQtKXvqi
ZFMw6VJ3wWERU8oNzDXyaFf2buE4KPUoZ5JV6g3khknCDcVzP0Ul878gB/H6
qlNxPEROSlet+IUqfPBAo3fkUDceeJTak1dS3Y7bHHkSo2IIpy44VoZwPvsV
u8yp9H3Rhgc/Yr00CPGsDLJ9Khawng37HpAFwWxL5n2a6nfdifioqYMEQ5xe
LHvlG2KlFD77QVncTnNzpnfPYEjhdCOgqWB6GLka8pwOJepM34IsE8nDxEY0
Hnzc+bqL4fYM5XB7wUDCEEBdAN/BjhqVMINtFVS7+Z+ylfi6es1v0fs4bJa9
V+b9PcfY/nj74/jFu1P4r1XmCywTaKirigaO30Ou9V+l/lWfIteun5G7cLt5
81L49aaZ8fKX9eldPyXzM9hLg8lzyLXnWm7iEupfebE0NXDwr+Qp2Rvy2///
yUT1Lmh7Q5ZZEPI738UcTHpOVsG19XJeTPfpRaw6e0rDyfkz1NtIrk2XUf/q
z3H958md9TYN7Pu1POfOWq7BLl5bNCC/smBrPs8TtZp0523wNtddQ/0rLqSB
A3+mwVNP0mDKizQY/SD1r/uqNDkYN23HuV8LcUaOg9z+iXMFxks+wWD0A9Zs
0l5W7R4jQ5Gn4ojRT/DmENfuX8hCDPW1KNS7tl1Brg2XaiVLl8KSd1bqJ+ub
gS5+/OfS7FDjme32l0hv2VB0iHaURp2TSfox4o+t6U5xTvfkVHu6C3QOKMYG
uLb9wMzBXbjNqpa3PiTYXDVDxl20w6qX/lrImfdsAppvisT0wZjHdALmVZcd
pRb1nPCGGIfaS6yymEdHnICn/LDV3JnFjkstLVvNvqrD7jf2caUTk2JbG2f1
kTzXsfm9UjZw+J8j9jtw7DaLxuoSQ/RFvMdfjqBNt6yi01uTrLFcZH8RPu0I
RTx/XD4dtob2AefQTtxvb9YGY0BVRtqjXegdGvYZQwu/PujQ9IiSpzqGPGUH
yZ2zyiDlYPzMHwYZ5QFd7c5scu+bRJ60W8wteUEGrRf24IJ44G3/6s8AEoyy
/Q7W0xp0mJTZkM4Ic5FM/Ip3P2I9H8mob9P561474B2Qna7xUHetYMRQcyZI
jyXMJ/mZR87BGpsR156yd266GTEoAHLMh9MLto6K05XIeNRBCTbYMK1bcCfJ
eZIzO7LoyAvHaecD+2nLHbtpz6MHKe6tJGqv7lBFoOp0DR2de4K23bWHtvIv
ZlaRVDXebkUn21rZTpEvnaRtd++lHffto7jlydTX3meSpNee5kHtJPeAZg1P
lA5RTX/4O6mTsuGMMUZKYst5QrG0++EDUn/XQ+EUtSCGajI0GWSKTCR9V7YM
fvNtu6SN4pNWluuZ7Vnyub/LhLZ7WntlOKi+5XarSXRRn9tolKSWslaZzfZ7
98lv1MIYailvoxOvnkL9UHttXN0uOrUsiXbcv5823bpTeups6NJW8PXpbZm0
f1qEDB4tHZxxlFI3pVN7TYeJjxU18wpH09Y79/BGhFPiqlTqauyW1rjql+wl
7Cp/gWpPhFBn2SzjyuqpXSFl7QV3G3dyX9Neas36A9XHXUy10WFUf+oj1Jj8
DWrL+w9/t5vJzWWsYbzTrDZ6vLTRUfyoFneWPC1FtSf+hzwDzTbwmsBEdTSz
SrV8MpKYNwG6nUW060yS26mnLEAtP+wQ2gOMM9eo0DZp753lhhJsUveKGH5k
YO+1Fqm3l/zA3ngHpeNqdMo9nEWHntnDNLiOtt+zniLnH2LyrVAG2vvYNqle
EqvvjjuPFQg3Ze07Q+FP7+QtWsNbtIEinttH+UdzpMm8I9nyDDdr3I9tlS0U
++ZxpsktTG9rxqECYubFDWYCdTk1Uqy3N8CnU3qqiEn3MBPLRqa7NUxHm+nk
kmNUm1mlI3SyrlqOOQcypOzw7H0GChJXx0pZ3PJoU3Z07gEpy9yjr+WZQp68
WcL23l82xg5+jNxHv0KehOtpqOgVor46M8q6cPIk/pHchz9N7vAPkDvis+Q5
eZU0Q135Ov+hwoWmxaHqHebpjgzynL5dGneHf5Dchy4iz/HvkCf9fhpqOmFS
ZqK+Se4DH1Xws+DXw8pZ4UtS3R1+gYzRE/tTGqraYu/UZCeEYTDkSford3Eh
t/VhrvszVuC87z4YKl1qja7c+37DoertVlmhV/gONZ202sx+yvRD/Q3kyZlO
7uPflrYxVnfkN8iT/E8ez2a8pc3riOIyPE/dxd426w9abea/EKI4QT2l1ngP
X2ztAcZRuV7fG4usMzB/7NJEyjmYz5RSTtkH8gWhgKcMKQaZik6UCjCEP31E
6uYeKqADjCkoyztSqCY3YHnvY4cEmYAnRdGllLzuNG2+dZc8OtjvncU7w+ZJ
dGxeNB178SRl7s1lniqjgshiESaoV55YqWHpmvQ6KTq5JE5mxl8JvPnBs1bv
buqhXVMPCJInrk6lwuMllBdRyByXSOk7s+Wx/k6uzlPjpc3an8dgX8aTSBO5
g4kbhD6POSlTOsC/ZQmV0jnPXVqBINj7+CFZExZ6PK+CY8W8HoBnrF3mnhzj
l2kuaTHyB10WRhUzvJykQ89GKk6HjBaodWwMxNSa/ReDtE0pl8nn1py/U1Pa
D6nu5CT5brA7ywB2X/N+u34I1/+mFjelft8U9zXu8AHsyRYKw8AL/wMNJs4S
G1PtHhjh5NYbMZkse5vYtvwWo/NnpZ7Ylnuvs4A9e6XalqLRrYPx/RfqX/sl
QesJdhOw/aUrVs4HU+ezsjPDaIIDh2/4oV1NwS51UyLLV+v/AcE7H9zEW7La
gtVQJpEUJULjSXUiuVV2vqA1AB/l8nvrKpam3NRtq+XzsRcPMsNkKJrrRPo6
egX0zSMPbuJN5w54VVvLmwMQXW8JH+wfEDTX7tANkJ3bCNGhJ609FeDNP7cQ
H2og3hPzY+7Xk/EAbAVGYU/8by14BFAzpA4VL1YFAYAsxQc+Qp7Um8iT+yx5
sh4nz6lfkHv/edKIYr076jJLFKCLhOv1DvOhyg128WTpyZMzg3+ftkAOAibq
myHBAN8k7zDpe2KvsZqFjMCzmQ+zxPmMDch69+sUL/AzyGNGnrhf8axn8zTu
lSm493Odmt3m6oh3gP2mq/YM7xBOfN9aldxnROa4j3zBwvr++rHCv4wcZan/
pqH8OTRU8CJLy0zN1ICaqBSu2NpY2CS4AojHz0DvgIiCfU8cxv+bA3UMZUA8
QFNfR785o8dFeDp7f57ZBqCzlB3If5fIH2zEVroKbITji2JNWcbuHHmW4d4s
kAPyTb3oV+OkrC6nwaRq62XuFSnV8h2jt5lLeVKVlDEamzJIIwhMIq/T5+SS
eKlXdbrWzA8MiXwZ/YHmjTljjLqsEMiwMsaogatfqaPwASlrTPo6DXSmGNJw
d1Nv3TpG22ozy46iqVLVwnpo22qEhPGKtnHZOCMH2gvuCfFB9kmiNMO9B++f
5eL7gtjw7jNLYKTra4fg4Rs8fq9VZdWnRf12F+3QADRsXYC2a8t3LJngAHNY
ogzalkzAo7BU9/xK/BDMxT+0GVphbfu960W5LYzKFcrBDyA2YWWMgcWKlLIA
6gmG6CWnCg28ZuxKM3J7oG9A9HL0s/OBjb6IPl5UdxRBjnQ2mKAlA7i2ZiYX
91a0JXa4pfyj2aaH/q4+iCUdMPDZf8DvFY4PFb/qZQFGyaGKtYyoH7e/e83Q
GMObBeKsbVNvhfHM9NXQUMNR/WTtfmuyBT8p/xJ1HhjPWr+uF3XmWVi+n4Vo
Y6RpiakVuOmcdCCUjxe9XVpP+hte2GqsPFczuY9dYo27OcbUtsHcRl4zm45M
YzPQYJdx5rwDLPeamS4ewNcUjJ3+tqHavdxLx6jV+HGOJRGJF/3DkAttOMk9
XCgwAb0cP5WpNZYuHuF9QTlUWJSVxJaHOCEasANF3PgHGUKhw0Y8f/wdQ7TS
IhRWKLanliV5j3hvTpd6uDFE23LAsbSFFEE8d/zlWNNWRbIFtxVJVWZOEERQ
hp3kAWX40DPHHMRniQq0x3BqTp/gFD3a4zmY9moz68esSOtWu/trLC9GdBiU
5fNt9oHTw3JsPCb/9jZsMdgKR4j13eMWVCd+RbH1AbtV5XD8FkSaO72iXz0q
Rfun7YSMGl4lDeW1PyFlkS8dMgoVvADaqgEtL0zEvnncLLsTsfTx1ooW8zhj
rBYnrTklRdvuXs/qgeu9VjYBUubwV+MxW5tkXHCZRGgx5VG1dp95g6kn40Gr
rP6Ql7WLXjGeeyiAYLmsx0wuYyDicFnkpcKG1F3kZVfApHgHbgsJwJqDnwC7
m27O3GP1XLUl5FwADeueVln05UAX4yUbLaj0Vil+2plk54m2B0s1aU0a7X8y
Qhjj8KxII58UdGqz6k3bqjGyzuUDMvufirAHajH84dlR4mXUn7ECjPpsPG4P
+hfLGg5g+D/Rbltlu+kflvTZAAeuVnw+sz3Tm17C84fHd+eD4WL7ox94SZuK
W6Qvo/eNA96YFGK7pfi3cfSd6+JGg/I2n16gEWv97uaedwg5oazHrZWy5tNX
2QGpCfJ+W5Q1xH+S3H3l1jP5d2j4u73wfsuc78lluPmy/L+7v/L84KgD7YVN
WmXw5tImw/dslo6EOideOWKYXpn5wIzdxo2p049delzK2EodEXLObE+Wsl1T
N0Mx1uKe1h6Y6fJVWXzx+wE56mn0nPqlza2rLPoc7LIh6MPgwCk2peFVoWIC
R3wWXjtGpxZRMhiazCJ4Tl5hNdWaGKLPOTDHbr7TVrW+ZGiCesrUePWCiBqq
p35u6omh7AMY7wZsQvH/dr0FBiNHjTQ95VZZ8j9DPmLPlS0uK3rBfABfGPOO
iHvnqYGxoA3CG060QeQoGNpA7RlLHAi+uvDpllWL8UYvjhO1itULQ/ijQhvG
A/EHbss06ghwIGFlChCHn+Nv+S/Qx/HjizN2G6g5Qf6GiTok7Z9jnNF6Tanf
4fGi9hTWXfY4x0a99ZukTlvuTfK5IfFL1JDwecWdxqRLGJI+JV9x05YqVLfG
B3e8fBvzeqQR7TDBEUdBeVF0/kigA1cXyqIXHzPsnLY5MQB0Yt6IskEnbgTQ
CYXKJGWsQpl6CmKpmxJC3j+4mUhDBfMsvjlzj7XgbGMJHhz7OkzwxijjeqrZ
abxXXtvi71aDbafNoBFOkLK6/Wi+MQrTHjAvplEAcqgI1Va7J6/0ApCnz4BS
AACl3OAFoIYjVln6vecGgOB1Q738OfbYrfCG/jjAaGxYZJkP8OC0VrSZPapM
rR61ObX9nr2Oy7ImCg/bcXj5UeyBhmIClKxRKW8a/TIAf8aL6QQzpjKlGh4k
Hd5oIEctqqiFMTaZhYkTCtYeujoy5wQdmH40iEIz0DcoYRDYSWGioE0QgEWQ
BT8OO0ofqcmoGx5rSp8ZGWsq5mkQIUQ8Trwz7fm3k/OnPe9WG0DWWp8L7rIU
md4S+LUsHMq72WKTxu02Lv17GLBJ2ZDgvX5y2k4py96fHjI80oRRfV4tqbM+
52AmHPGGMnIPZ75jxFF0Ob012dTTcQKF3j/EmcDWzDrbJvirjQg9sHjEbQIF
Zf8Un01BKFea6Mj08njdfquJzEfN0D0xP1LnC1rhv0yJzadMOwG4M6Li8913
rvgUL/ZiTNVmq17uTG9ZY5QpM7iTM8Nv7BMEmM0a2Lgz1JZmmrGXgKuNiDuQ
3SdeOWWvPQm/q78dOpHD3w6O1GyOIP52ttnMYqtDIyeIvx0MrfXUYVQQWTwC
AoWyhpIqCSRAOKW7QPgZ2b/u1eDGa2BKfnha+jgis3Djc3cORNJdjXk9QWC2
s77LTKC5tFVQyqkKwhkvTvUGX6c6cmqGcaozahji6a582fLOFD3ktbgatkpZ
S/ovDD91Vy22kK1Ew0UfZM3ns7ZpJRkq1NewTT731Cw3Vltv/XqLaAaaxOte
H3fxaBDq6ZERSjOm4Kv2hgXXsAW+g0E+fBxCkCC3J7dbIPXsew9SqZsS3yOQ
Aoevt0HqL14ujb5cTC7qb8CYXc3g1YjPAUEMsVFfnRVmjL48xGTiegbIffhT
/PtJOG5Nc1mPW902nbCbc1o73oPCwb1E37C8RF1ezWGoYs258BJ5Ur0H74aK
XrbK4n/jLbOxb6h0WQAeA4x0KkPFr1llFWsCfNFDZcu97ZW8Ybe3dERjLm1L
hnAXoAIJcEj6ABwcmGFrF478EaAYckxyDhZA+6Ag+SOw26BDScJGQ7foYviM
6rj9U4O5impQZMDgSElBpgaAArYa4+cIyPYBqj5TK2XIp0CUEjl/yLEAiMDr
gx/WCZlJEqRedXotP1uf14grBNqsC1EDUW+S2F0YL8AJS4KcDYwNIJa+I0ur
xbweL/l/SGPBiiGVEI4nJDu2V5trXrg/Zt3D+LU+MXPgOD5+YJ3ueeSg4DP8
YVhkpFZiBSBdYKXqasFCRLKPZJLsy5UZI4smMJNkvMFGeJSG3N1KD6qEdVXM
N2TsGWikupNs0MdMgT9cAaMl83d2UsgusweDvUV2ePISczZDkbA1+2/Q1+R7
j6vWHGdL+Zb6rmxMOLvheO+IhqPGHpuKGhAcZON+l3ivkT8xnqy4G5DI/jGD
f68MyFNLjwcg5f4ndxhUTFgRE2DgRjy/3wiEEZGy4EXbgPTGLAx65s3mAnNT
3VDVJqs4Y6oXOopesZosed3rt8p6zLjXTcSrq1ACeQxF0BhNk505VgTx+LfN
rIMH8hZYXSf+Ge4y02p/I8P3V+1AXuxZA3kZViDv8MXeQN54g5ySq9EYqVEY
SQM5cbn1FYsNNqC9sxnykCfu11a/LfHe4kErAACJ0mPuGoKqKi1x32yfG66w
0RTJG1zbGxvss0SVeP5SRsJUaC3ASYAe9CKwOBxRyetOG4FfdbrWSpFmhXGb
pkgnB6RI1+c2mkxq4CJ8baxEKjIrjMJuZHgUgIAOBWuPYdBsXYAvfrLkSAB9
0SpgC9lrSCbsabHeqsT4wqtteaqCZEaHqE+/r71PugZmmWzrhTGO1OiJks4H
JEYfqIM+kRbNuGa1Y7nEpiBrUblXGk5e78i5nnpAkvt4+rpK8O0D8TF+yYJe
HSQLOsxAIn4BVkMmjsvaeWeqSZYY6Ew26Rh2/K857Qr45bVYlceGhM8hFU+J
oKdmmWUZF95v1BNk5tWf+qikVDcmX6pboQ13V7+uqKiHxioPvUxxD30Sv7w/
+BtK8Q9/xsCZppE1pe6m7Df/QcnT/48SHv08pc76PhVueIi6KjOMfzLlme+Y
tibZbdVELTNtqUc+7fkrpV7yjMt4QoN6TuadRxT0pbjZB9INRo5NYx1Pp7cN
Ez3oNtGD0riiUL+x7nlki9fNMt4AMp7o7+oL86uNRGyuHeY3hcKo3BFhGYlk
lqq1wnCS58xdFmAc/5aEKz3Z0wRPpYxhB4qbT4hz//lASK+q1n7GRPO0TYlN
ssILBddz+k4rWS7134xVH5KQxVBLwgjAbCfL2SEPZCXLmDKmejPVcp4OCZ4s
d5E8J8lyUGc1Wa52j54NNhotcBKiI/FPEoZl697Wan+H7A3JIJQ8P3x38kq7
i2tMbjZmzaq7RFe4KeRPe9LvMyP0Jq5MNpDsSfuPleedcgPP5iFr5iiPu9Yr
AzrzIPVs5+dV4i0QnDb+xpD/tRfOGca80C5zmsefRZnYsp+wv4VfzlfhmmLQ
pT3/Dla6PkN1sR+i5jM/oebTVzKyTLBQJ+tP4+3qNDTAH6+3M7gmCsK0Zv2R
NauvWmX8uKsjXje3NfuvljLWtDvEC06PGjxjc1er9rccsjv741ihxagIgy7K
XX6z1Ahz1Ks58bYDgkYPL1VHlmg9ask66g8vPmkSoSZNInzaTjMiJ7aYox1D
ZCxOfnys8IIUXdP7MZOkkbjKsmuhUbp6XP7wIuhwPM8fXvCbtjlR068Gel1y
lES/Kj5ZYLwn7dWtpryxsH7kBIlIOzr5EdjFJg+xepuFQIhQQmNidPFkP4lA
gFfza0tTlcxsl7Amsyq5vMfOkeElfBXxWfvgxucYYW5m/sk1ix/83EW/nOaQ
NnHWgdVEpOUOVW8PGf7cxd8EWSR7GHXNuYsLnIEFceJJii/OTwD50u+FfS00
NdSWSp6E31tzR58pNyKvVq9wQbxDkkGQviVZYReKKjhUf9gMyxFnEHcp0nXl
6AhDDqCHBrxpCLwbxnc4Xv5a3ouRMMS8JITVLfu2YCNMgrndUMdOeLTwZ9RY
01k2S6y39oJ7JU4HnGlI+IIcwhry9OtdFeAURPpa0n8hR7qQ7ASIas+/jdy9
xUYR5mpQVWqjgQBtWtzffNB7QKB5v1HX3d3WGbHYC5C8N8WJNGGMTYmU8NgX
hOMTHv8yI+EBvFOwLI1n1Fl+2g9xJlHRpkcMQuSvvotrpjKQVbIRGkFn5v1s
nA0uzekH/B4NY2UsCw2bX9aBQsbZ0MVg4/Odq6PBvHnU1VZLcVM/LV3mrbz9
fJs6TDrqPXY66vE8OeqFHyR3Mj6YdNTK1DIznGDpqHpULG1LEhCKOuvajfMU
uw4IYuNX6uMEAOPNqLUk/0RUuAvzIrLkdIGMtZMV8o0Jwyeifs6r3j2wUR7P
2nuGupu7JLyEoSJPAz8Kcjvu2yCHFRCd7W3rEQDurO8wBjMQL3PvaVk2HKhz
dffLdFt4mgem75I6WB4uO3vyKpJUTfLqq+ayICcWXauI5DC+vhOEIc3V1Q77
RxVU+Noz9+Q4cph8/eA2QxYeLwnGkDdYVP9Ve+CtOVEU/8jnhKTSXrhKyE2F
XVf5GUPhhesf1Lm6ezspdfblUgwNnkWvuc6gfP9c8whTq7aUs/QGKYp/5LM0
0NV8nk0IPodi7OMlW+9cK+oz75oSQvrOVEMII7minSdUsKGgT0cz2OvarGoH
PYVBmslZGZydsZVrbg6ua5Z6NW04UCnfH3xmjzQTKt+FUfouMyTrcMzCCMNi
wQ/HxPkdjvHKZ9DmySXHLD/QZKrJqPIh4cOz91kHM281TnZuwmq2INJ6mXPi
auXwMGELr0N+NZuwlYZ0gp6fSbvNUvqd52eKXtEbM88V9aosdlLqZcPT5yX2
BgEOQTWgntNzf8KWbpPRpmA6GqrqbFR1qCFpu6HB5jPhZyHNprS9prj2xNt6
mHTE07b3bhAAqT4zwmnbydTd1CUx2+OLjkhUBI9uu2udxH6T18UhXd/wb1Va
uQMmrc3FEVtAubfsfDlC6/yRo7Zx1lFb0LActWXuOflaJGjdGt7HfGfDj6DZ
Iy+ECzyivDYzkObwA3bBs4BbaJfwAbIE0Vz7svhiUWdB7ZjdsXkHAPgfsNcw
+IHcj4uDDSdvh4oWEfXV6u0cZ6O0CosyvqaUkXGINXyLMs68eA0NdLcYGBry
uClp2tflu5ylN6py6nb1GGIqWHf/WSjDM9BPSU99zepg/s8/FWSrlajPJvke
CzJFWWBLGbNvBwyDzmHmlP7SL2mwp937WqSGEjPKysOLtJuMl39tMcecq4dD
Yb2oo2T7NFPcXZX5yTFNaLw4rxVYVGSvs8Z/qT3+ptP7xOpCDxgYiwrzeEvW
EdN7Y8ouLS5Yc7fFxPzYkHtw0shT6KrwiqTSHTPGOgXWVswRSZyccUzhG/YU
eGhGx8p89Q+gGWPcNCRsMb2358doq6U7Z5pilm7DTEFvHmHdUIqSpl0K0Xnx
CFOoSCpFYJKqGcK1VSCH7sL2e9dbpzdDqT63VjHBoqw77DbiHl9GSc+ukU/f
s6b6v/ZU6+M2mAEyl0DBM6ZmbfRK811nSfLEIHPqa644y1Rrjr/lROJgU/2s
4VjG2EOZFsbetU7lJs981NP6P7upsj3PmV6rIhYHm1FHSZKZ0b45Y5gRixnD
oLlv/XutPZql9+fQm/fKce0Qy98wkXorEqhi9W+p4IWLKPfpCZQ383wqffMK
ak9bb1+NNZHaU9dR2ZtXUv7sj1LutPHyb+Wa31Fvebx98dAIMw0TmMtc9Ftb
CH4O4zc2+7ui1Q/ZxXlv32KY09Vev2bY6U6ilthXqeilL1PtnvuoKZKNvV13
U/5zH6ecJ0Oo8djsT9tDrlz3RypbehXVhz/Kxc9R9eYbWBPJfTqMm+0uNMIt
5KrhZ/9Ne3CdpSlmzGV7ZuvEoTGMiDOfHQFndOItmYdNcfWx14efeKjc90e2
amfO6PQ0U9HCS2RPBztrVXSgWCeoxhdupgN5FC+6NEQlYVVUGh391xwqP6QJ
DUw+aw5LWWueyEFZlPinlms8Rdeps6KeUudupKjbXqLjd75MWUv38s51qdpc
F58jrTRneLOn015ifeGBJY5RTeJ62RQ/7W2KvGU+Rd/7CmW/tZ9Ng25pNvP1
3datUEZ/S5n5LQvyF15n6K+vsTSouFp4nS2ufjScuNI94F2SSIEt3YLtgfJf
++kNQmhtyStDvmCX1ey4XcpczcXm+vfB3n6KuvUlSn5+nXExwSQ8ef9iOvWY
N9/AXlzHkkyWFY6Z+jqduOtlynk7nKqPn6Zc3pRj/+bRP7GM3P3ewH/gMn/A
uczy05JdJnXQT+XRFKo8lsp1tshnLDsvc4jfOqvoSHvuCrPOvqrODT6qzsNn
U3UusIvLds/yon1pylR7ymWZnXR0dRVtmFlIy6fm0lsP5tC66QV0eHklFSa3
s/jyvqx1oM9DKQcbaesLyOxa/hBe8cr/TymHGmmg32Pq1Rb3yPbteaXMhK/P
HGuSsrhddabsyMoqKSs+rS/ynuzcesqOaaFtc4vRE618NI8OLqugpsq+ED20
j372LS6jtx/OlbHvXFCCtuQ+dbTBczFryPOgpP2s3cwqpGUP5oxDBd6xrrYB
s1sNZb0U/no5rX4yX7rc/FyRTNfNj6IbNFldoO9RHKbJMNNka12/PMIzMHc5
Y8SH3qqQLpbxTPEvVprLzao4u9KyY2uslSpM0UzfKTQ4YO0GhvnWQ9zWE/l0
cGkF1Zf2OnfA+Oodw9GD+nhdOPiHf3lR8fc8ajw6S4aP21RrdtzGsu1iyp0x
mUqWfJc60rdSV/5heYaFgdcf6RmUMpaFDv+hVVa59nrjT2tNXE7FC78mYFg4
77PSF65YRb36g09qtZbYxVQ0/4sQGSxvviRyB29dRLW6PfcrqfTXZVLFyl9R
/qwLKA93jq68VqC24dBTUrWvxhtQ9gz0cA9PUMEcFurTJ1LJq9/k2WyRrlC3
K/+QGSVkFCR0/nMfkyEUzP0Ulb/1UxmGu7fts/YEs5btE2Bg6DX71FZQJQxf
tj9uBKCxRB7qle7VVxyHCkBI2b64EUBmYgDI5K2NkDr9rd5XreXaksQBMCpS
2d4w3qCsxX9U1clpaLs6GoyhnbhtFIa2YkxPTZ4pLt7y+IP2gva0D9Lul0uF
/PALXt7xUomUbXim0GKcSbTx2ULqbve+oqu3c5A2P19kPfJ43jhwCney8rE8
KdryQhH1dblNeuo7Bp0pBnRit9fJ/4MFI9dW09Y5xQokVJnbpVGyupIeMLx8
tX5mAYW/US5ciM/gSPsRhR4twrQj3q4cR8c31DD09PdY7tvq/G4zAMwJvA4Y
QqdYod2LSgOgJ2iTYaZJJ6+rqyLzRAu9eZ+1ATt58QH62AR8XsrlWSdbDO+e
DYIs8jxP5OreV626AGDAD+phJzGl+N31Zk9Gg0MFz1/IOFSz7T/cdmf2HtG5
ypZeLd+VL7+GGiJmUPXWmwQ/qjb8Zcw4pGjQdHyelAGD6g88zr+PCZdXrP6N
lNfuvtfUbU1YKmVQdGt23kHVW/7FOvxHqGrTPxSQ7P4ZkrvqGY0+LDph9eYb
qfHIM1S+4peCnxWrfq2opNUxPYAWikvf+AE1HJkpXeTNmGKqd2RsM6OOmitF
+BqtYzWgipcs/paUd+aGhyg4QYUEAOSvPwIrMAmiOuO1XXTsprnU39Z1VnCK
vOVFcvd5j6Ih1gBdM+nZ1WMDJxuIXO3dpq2+5g5/cNJQMJwjwBa2wbxvk2Ad
kdUbr713dIkxYZ2+Aq6j7uvB3g5xW4v7evbl4r5WekCApS33uPiSVJf3g7MP
28WqyCY+8VXyuHrvl+IJ1N/tBmwJFW+aXUTlWV3YSeXNzpYBOrWzTvi3qapP
+4DYxxPgF1evuVaiv9dtOJw5+d2j2XgDJm8zRzJUafHpo9bja57Kh7amxftf
K5diRhBEf3RcFdldtOKRXF8sC6Vt8yxEdCose220iN+jd4KHUUezS1BAId8L
XsHbcKKCjqyxsk/mgt+SMx1aXJzWIYAF/YnXV1sdHWaNp9oia2WhLnW1DJjM
PYay1MONZsCjhayyt35i3IHM2lLG0GAm0VMWSzlPjVOoGi1SmQyw9iqjBnm8
L05097QweH3GAqtdd+tAixZ8RbQbVpZMC4Pt1VT44ucUq3QAUGZQ1JqwzIxV
YdEHpsaL1ifT2vBXQJYW91YmmZmxKjXOOWFg+QsXwS7TyfVWpVB/g4QyDEix
OSZAwL+8A/g7gc68vI2cPz42sIVNeMzqy8KcxJmr6MQ9r5hHAnFpcgAutRdV
07Gb51HCjJVUHZ1OLTk4eseloBouZ2ySJ63MGxufJht1CGZX7vKbqDZ6hYBJ
e34M1cWsQfgiRKPCqbN/wAZjt9KXCEyfgPKqO8W/0ddcIb6IM/N+an039VPU
nH4wRO86Qtv6DNrMX30nZb7ye+0GeGb/GHu3p65Ag8tchr/jqWTHdK/PJHnH
/fYSHl1VZYCM1Qc9ItpY0UtdrZYh09HkEs0BfNje4L1rFWwBRsR3zO9KWe8c
uryGPysOphtwpipiOadaTSYsG3kwe9B7b5c57qMo57X9QoXVUcZYa3qHjYsy
RmvTE0OHE7BCR3g8EK9CRWNEGf9r6unyRq3zvrN0dEjFSnxcq3lW6/GivmN4
gkYlLJ/4llkaaDNj1aICIWSpqdcc84qCkjetsK/Dam/VdaZeW/JKP+2J9Yn9
Uy1vTmO+gST0W/ji530hKRTDkCJGFNNk5do/KBaZJqs2/dNyGiWtMG+6YvtK
4KHpDF7K01OPLN+KiGQpa0jNN8s6nGqkZQo/yc+tDQo/jae953QAPzEPvubT
Vmt+pTiDWK0CHzL6hVLmG+YkfMgnnNATKlH8hMe+KFw/0eb9M/Ovob6mch/e
P1uWnFKSA1ZMvWBYkrn4elNPs/OyX/+rqXePvRjtjS4LDUDZ+d2aSZGX0GYR
7KJS0+SuhZa+k5/gzQw7F6jB2oCpd/qI9SwzlvfEHRuUIvqfzPda7A2uALxY
8ahlYcKnpfW2v2iZSjVFXqUFmpS/chPs2WBgsX5GQQAIsImpNuWYwQJ+PFu9
NPWyY1rfuS5TnSZlNTtuM+vSmvT2OwaLmu23GKeM0QnK4wPAYqCtwu73dlNP
9SonWDTHLJIyhFoMmLFRpH1oPYBH3rPqb7bKVM9xIgX8TShjJcvkNnQVHBF3
F//i5cH5OCdF3lOm3uu/WjvFsCrcHGnWGXpM9H2vsvXiOSuiHL99gc85fygq
bGhpPwZRGKXMHKD0JDy9wsHSsJQ85BkYFBc4xsPGlxpYFvhNYZuuU1L04e6B
qznxia+INwju/dy3/s0Kzla8yEVvjmlK3WNl88/4ppXNz8ZU0capks1vznZ7
3NRdnU318ZuoeOuTlL7gV/AijaSfBMMUZO1qvXvsehnHmy2GmFFg8ltUSYdU
1PaUIfi7cwooLofEL0ptNwxmLhhoG5AytnRMPXiFzw4oEyx/jO1AgtMabbkH
h7TpQK/P6LFlmT186DYG7hstnFv2QM4YseU8GnR5aN3TFl6d3FoLHzyWxrAC
PFhjxRmLdyZT+ds/lzLwblvyKjgxhOcaI59/x1ijriE2fbxmf3NxINbY40HZ
eL8yp1sHrvCC5y+kvJnniauo/cwm6so7KOOEUeSnnCDCizCpE3JU33FCDvzL
8BZ1F+IEHv4y1NVaCZE500JDPiIeeWuKyhmTbcZ0wIt84YQg7XMkxzNDitkq
tpP8nNbjDeTA1nK7BvTx/rYucQ1lLNllHh/sC7w7ty7Berw2NlMRKN3+SrXk
iBWVATwdOUqeZuYI4OlTO8bO00zko+PpgIBScGaEqZIU3iD1JopXeyLVFHaT
82fMTNw8SibOHylcxNp6bb8E0zCqCfbY4Ity/oyOaa33VSKaUjj309ynFT2C
n1R/lCnLll5t+HSwz3IirP/z2HWCs/CpTtHVUiIaP8t7e1hh6nOQH1sXMMsU
VA9Y8FW/kFgoxizPA08+ApfM+TYXNqTkW2ZDinWpdem+U/K5u6Z5BC604sww
GRCTRhi+t76VGpLz5HPck2+B40xd5cTk2WuFG0t2xTCnxhvnSWteRYhmCOB5
ZAOUhcdLgkHuqkMU+Z8XpT+Pa9CPExFksCHdcKKq67sd6jrCqsOp65DMupyg
fJQdfrvSlCE0gjJWTwM40amup0Woul79rjhRU0HgVi3N6KT0yGYES8ZR8oEG
h9aNKPI71tgdjFaRM7zGnhffZuohMIKykjMdXupjKZpzqhVTD9HxMQBKvYPL
KkJGK0nNZaSubglA4HWKrQnLrJBA9h7vbSUWTyJ2wcxoeKa5yOj5YzXsz8aX
5vgLLofqazejQwgHddy9XoIarUVfveXfEI7g9RB9VSWEpvb5eXs1IBij732V
Ti/cKrAc++ibYCFDqwFc6c2vackpF6MeWSTIBEGg19XRrUymDNmUXix+g1Pc
MpgM/1ZHp6sSXxGRJFk64El4FKHU56w4IJGQi8/GiON9nG5so5rMJ0bxN/19
buMNO6K4ubpPa6v3CR4sV59H11Ud840OLlCmjNvl63lDRBLluXGt74Yvz3c0
uWZavngKBvo8Y+VBVR4AE1qPFYlhXWyHllX4zEZnXl/Wq5dNqpEMl+PYlNdQ
vF5UjvV7qcjiM2QlwA/v7mnW+IKyn6Q6hD8q7yE3N3EcfNLwm6/jf8JZHP9j
lZBo1f7x3p6B16/O+SQSPELMIc6M7WNx+ZfHcfH/UN3eB7Ac2hmmKbkVeQft
jK0wKtgcKXpq7aksYSJmmJBgPKmvsXf68r/uyzVORVJzh5FLY4sveLN1gH3d
biPFTJAtzMs12Op5xQgHmftDWDhJBA8cteX5IjwG6tQWGdwNZ3ncQ/6hNwTD
uXUtVukGyh9wec6Fqol6LJClzJmQxKat1D3wZvlIj58t3sbWrhYXJLXJKvjE
28IMi+ErON0Z4w3xZkVbti1SNdimVYKAKox1tT7ZgFbTL8uC6g1lvWPjwEkg
bmihyDEVjbR2973GldN4dJY5RW5zH6LsCPojmQmh84pV12niAaSRRtqbo1+y
8gNYYUQ2ERgUXKfVx66cTqLiV/6XSl69TJTehkPTkOUgWUvIFeguPKojlZwA
Ow0BqcRIkUKerZUTcJ2ynrbaeGy2FCGrCnMHz5W+frmq2l+0N4sVUmEj5HZG
3b5AQvvvkO2cPhllOzhWt9iZOkxt46DvcLHGj5EjaDJ1PuS14l4uFQsEuXZw
Ce9hppWIjgXmEn+C2wFUhHo75uOCLFguoUJhvkDml8XDVIm4NAsK6V5Yittm
5U1J7GzcZ86PMVuwdmahAX+XsBeCAvra+RCqMgb3wJDh++2MJAj2Q6qrhxgw
wcbb2ZsMM02eLYcH3UD0aTTdN4dnouHPxH0Nkqy0llcSsX4redNaReyl7ypO
RhTf+KWw6qzNW3lCdr+ws41DeFRcOlGcyWC34kWXSo48iBks2Ja8yszN4dyR
mDUMOXhHUBc5NP312SF6dLgtaYW0BRmL2DaYxMGHY2PNidSZs5eqNv6dCud/
QZpEQiHycnpKY+wueXgDvQIFSBPKnT5JWBkJhJqWDB11vKO98uU/E78z2ite
9A2GlAXEksLcYQpzDhyW83a4MbTGxIkBERd9gmFeMnK3zpEs3alI/YHhDycL
Cx97lB92OkglxRXmG/QjECU2HwTqsQ6KU0/HIJ3cUivsiO+R7caKk1kdZ9Yu
bBoQJXgBrMs6GHRSswOj47tQaceWzlwPf8/zpuvysOCQhQ6AsQBpwN4Yf8y2
WupuGzA6T2A7Z8/RhR4B3l32QI78i891JT1mvg7PqUg0zHHl43kyBqw1m9GG
WLFN2A/oJGBCtIm6gCeeQzCJHIyX5oyNSDJsIlFXkE98P1QQyI7vh/zULnPq
CR8NUva9UY402hrBNfZXyxNvptlHL5dPeijmdPV+eivhJpoT+SOaGfEt+Xd9
6gNU0ZZuO/8niAmv+jpSrCXNymNULb80q5+NchK63EiVTI9qZu2m3VyXMMqJ
qfbfuOURKrr/AvzycPGXm63w3iKgF0wNttVS/fp7qfSpL1PxQ5+gihcup7YT
y+QsljJFR8Im01aY3Rba92/Lg/jNrhlUNvN/ua2PU+nTX6WGjQ/QYGu1oYbA
BQ+jjaenSvnBvIUUVbSMtqbjRu9nInCDWnFzgunnLptoIdE110A0OaTszrdT
dmcWqgDBqYHutrGRUTCCD7YDGb6r3bzvOVmhksc/y6vN68nid6C5gpw/g+31
VDbjUip6gOFt+Y3UtGMaVTz/fXmOV1MPkfcVJ8iG4Ld6ye/l64o5PxwnrX6A
OhM3+7Tq6euiinlXSbWqRb+ixu1PmMdKp32VBlu8nuzAtQ+lHu9N6F7XZ0cu
PXPkO7Q49o8h90nZZCFw6Csg+rf1KMYM6ygGlHAGafNK7jEtHs7ZuKh22T9k
yLyQehdI/fp7pKj95Eqv/TrYT1Uv/1LKeaHMzbQZB6SoafdMI6+a9822Wtw7
22s6H3lVyupW3BR0UVT+7c6aRdMP/x+19FRap/6etr/4+8GjdPuxE/LpYntM
N0VE0u/2HaQlZzJpwOP5kTW5yc7JvfVP6bYlfI66AD393VQ89UIqe+b/oFXr
AHvyjktN7HWwyWlqKQtri2MfvoiFf58zIUUZmYv1mgOdYv9gN+3LeYHmRf2U
nj3yXVoafwMVNJ1SNj9a+JrMuro929yY1tBVTJvPPCoYyAxJL5/8DR0tWEIu
d49RjgbcfXQ4fxHNP36NNPvaqb9QRu1hiivfKO0VNHrfUQh2RllM6RpzHUdO
fSS9Efc3mnX0ezK0XZnPULerlZYl3EjPH7tC18a5USa84+mX5jakPWTQKqc+
SsqSKrcF7VbrRRS8KmW1Hd6XR7x+6q8yBG8fjDYDHbI0zA08ve/Rc8d+SK/G
/IH2ZM+mspZUk0g05Jbm1qV6fYvxvALrUu+jl078UlYGTa9Mvp1yG45bdPXl
EegqtqaW5qecph9u3UWb8gttupriQ1c3WHR1cL4SS29+tBQ1bLjfG4XkqqCI
8mcvG4GoQslVk2OhzQuXm7KqV66TsoHmctuXO1k2YtbR79OKpNtkIY4ULKb9
OXPp+cgraUbEZZTXEG02yElTqp9UtWfJRoKetmVMk+ffSvi31ANJDnpcxmwa
4v/WpNwt34EejhW+LtyJ/tem3ivlmXURwfZZuytsipOyFyKv5mHOk+6wl6/E
/F7+ZRIL+W/RmNo17X31zFq/lrpgH0hCPLvp9CNMb1fQm3H/CBme0CbJmBed
/K0sJ9jzQO58096pMuvuJQU3J63pwVDg10PRsfLpaovQ9JILJ4C1HnnFRPti
V1tFEYsMsZTP/o5IN4YhUxaM0LrO7JOysulf8wYr5l4hZe6OBtM1dkM3ftBj
/MnNPRWy/8Abt16dGozUQmUtUVbcnGj2E3yLsuiSFUauZDJcoQxQxySnxaBU
UDS+YkQbnspCQR004/A3AZjeW4J5p8D+qPtfBDIdzqrkO6UesHpIL8GdKPCd
Xe+91iOQvnhnW/01x1CIAOnipRO/CDkrgd1yJEoEpYPA1OsOAqt54y+WrI9e
bsz3Y4vtore9OWjzfyJlnp62EQhsPHXEb1CFlfor042DubGYih/8GNPdJT7i
H7PNbzxpFm9fzhwpY+QICUZd5ihpZ76UMUB5DUhXs0D9q7HelA/QBuo1dpWY
ehvSHlSyCrq5Oj1s5IvH1YCw/oIBQGvvL3JNchKV/DR1l0kdII3bM2AC8A4C
Mm/NGvLQwujroEc4iWWSIZbCtnZ64EQM/WznPvrFrv00KyGZmvtMJPBoRZUI
woTaeluGTaCT1bV0V2Q0/XTHXvoJ/6KZyMoqnQE+3njY+X7MSVTa0UGzE1IE
767evod+vfcA3cH1VmXnUYfLpSyR09JKT8bG07W7w+lHXO36/YdkQLXdPfai
fVAGfE/USRkwRvb7fYdkYulNzTQzPon+HB4ho8Jk/sPUv6OwmNFqyM7ZV+ck
9EBR3x/8KPWVJhtF9R0T/xSvtcZNls/+LvUWnpJu+kpTGGWvtFD72GJ/Bugb
6DSbn1570BDESAwASxllJxhKNXVsSeyfhDiZIGQ9FkZfC0I1N1WWrBgV3a9P
e0CaaeutMd0B8Lkp+TTOMfz3lu4nBtD96Rpr2gfzFpibC51EbzFCGHX2N8pS
QuXDdzsyp9vXvHyU1fMe6qtNoK7cjdSWNJ+aoh6kur1/opptP6PqTVdQ1fpv
U+Xqr1HFqq9S5dr/o6oN36Oa7b+ghkM3UfPJJ6kzazX11yWxRdRr3wTxUfw/
l6VQV95makteQE3Hp1Ldvj9bbW7WNr9OFSu/4mjzGmo4+C9qjn6cOjJXUF9N
PHkGukJ+IG1OFv78Y/hh+uXu/TQnKY32lpTRgtQzdOW23fSPQ0epd3DQSyIO
JlXNZE9xqZSh7vrcAtqYVyBcibIt+UW6ZU5mVaUoub5BOOga5rBXT2dIU3j8
haRU+vmufZTWoMlXk0RZBkP/ijn2jfQsGebanHzh0FM1dcq0tx49LgzJ+rSM
Nqbayv98KzNHZopH0c0+fvyZ+GQZJevgNtOaV8hXZ4ueU7XoWkNz71wfGk/d
WRG20n4f9KDxtoulYdNDJoCrGesgd+jN1oNKxolCXqwbB3ArazCmXkLFZilL
qdpluHVV8h1Spm4A2HmsSOpoueoouHUylbQk0UxWlBYwszMYUFbdUZh9sC5Z
z/7d+yypAjk2oWKL1GG9mL/lVhDLcFtXNXo59z6zSzA7Eiu2Acy4b/6Wy2Ce
QnfsH+wyt8OB43rKj1DLqZlUt/t34NaQDzN/fZlHUrnmUmqMuJ268reh3uv6
CKtbvRXHqSVuFtXtuZ4fucT7CDN8w6GbBRQ8rk71aYIyQYlrcvLMikGcoGxd
bn5Q/tPEgu6BARFREEf8/yZYPjgozUK6tfb1Kxs52FB++t1u+u3eg8L9dd09
5m4VLkbDdpVxdN2eA9x/U2+fPmgCVJqQPujxCGY8l5hidq7TZe63MPN64ESs
MD0+2YdMPmR/VTnvaksA9npfJh7U3h3sH4W9O0kcciireePP8kzX6T1sSr9I
bVFvUH91lnL7WAUkzN/3SECyWWhmVNKcJBY4K5vcHUh0Is2N+gk5fzB02C9s
JZkFBtmjrZVJ3jMMYFdFBv8+jxW+YeodyntZyspaUkP0ODNMaDYBTJ8ZtYcY
EDCeMKrvLPRhsTfi/m6WQecJ5REmK/pjU+QSuyvIxsZj9zIXfSPkImGPUJFf
kJWe/vaQV+16/Q1nRHayPDP1INta458jd2+TuR5SiR3yytgDTJOQBrcdPT4C
D/GWVNVI2eZ876Gp3bZcO1Cqr0WcGMA9kC7Kt6ocQ1Ap32q8o4tZCWUs5Iw+
0dbfLzzLmqqe81Q+KJ/1LctU7mrymprwJz58objeHVkuPblRKlmCsoKWwXMM
y2igucK8qM1rGcWMyjLif0e0jKANwav8biwjHpO9khPEpIDY6uxvkl+4Jhn3
Q/2GX92h6ciW5wBl4BPmCa0aX75pWEfl+tQHzMi2pT8lZXHlG42kgVcJTiv9
aemplDr7c+Yyqfe42ni88MqIkHW1+bADpCCjijYPHyg8hSwMzU1crfGzQdRC
2J9UNtjwXVbxtnCFoZBFSi6prwTWW3eZqIkI5XzLwQZ/O3jEXg9rClCKrtvj
fWtwMBaAwoSyxDpvGSwdlL2dlTMsC+hzWwuKeMuymvGW8Oqubp/v4rmfYKyg
dl5+axtYiKZGn6Ifs2iAnnewrNzmCiGHcdSZvA1Xsw8YCSQ/iGSB1suf+54Z
NgIraluZuAI/V7XwF1ZcoSQx1O65vzyNXHUFooU52EbvuOotiBH9rnLBNRAm
Sk6QJUMueRdMUFcWA3+AK+vEz72urPGGpeBRZQzVkas3C9ynne3KejbAm5VV
d2TU3qzxhtLxe6YmXDvj4YgzgxzCubQlWVpgOWB4SmcGTXLA3a+tRhYtlWJ4
LyOL3vS6xDwSW0UrbX21/mOAXOTZqfIA1/sLkVcxo/xAOKO9r84wKFRLPLI7
a5YZHzzF0GABJ8aU7q1RJjVKiTIgfvdkP4dRmfrgwhfZ0GRZZEiGVT6lKBMj
cnLmp22Oa4p6iI0n61T9wiCcqfUaj9wBISY1vungTLWAlDPh3QjGmSera8fI
mWEBnAlhNgm1+DsYdnaZPBdXWxeUI3VcnqEhejI2QcohVGFlwYVS1dWlJ2r0
CBUUKomMPvopqnntj1S36jbjhYCS1pN/wviXJEI68xtWhPStf1LTjqeCRUjr
195pmoSDw+ZKfV891Ddp/eGLqOb1P1H9mtupevHvqOSRT1JvYaxeWu+NYtwq
Ogx4Ljx3vtDbTJ8oxocNP8IdDzMAkQcwHqt/sm5WROMHVkSDhQRCDMsS/jVs
REOdwoh6gFH2Zj9vRTRS7vHlzjDDGZCUSEaABByHzi3XmsgUDJfVOWkmIv8V
u+5l4jdkyaipbTpj9AJhCcpH6B1MNzfqx1TfVSTcA/5EPAcjR9dbzjxur8QF
juE8KG5OuGkQUoQSa8OQDAEcB7G3M3OmiDnwO7evOYzM+rTgxK9EH8Ci4pGd
mTNkEbHAlW36bt0LDLMCOuEBQshpR+Z0eFogPY30hp0JBRULihARFMu4sg3m
iLqDXz9j82H9/r/BzpIaC4Lwq9aDaefpk6Q+++5Ti1/hmWBeMHwBtyIrkwH8
CumnvHkiiDK5q6jkrMokS0mps6e4lJ9zud04AcsGF8qWZljZTapcrs0Jrlyq
/XbSVkzfzMiCLfcpJ8tOYvuqnToSNkpMvnTaV0QxRCoHWJftIg0ND7bXiccC
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
W9GBq6ZQX/U5bs/ahHDDwCXTeTaHhvv77XN817ulY693x1zr7nhsk762YmEl
JZ9spfycTirK79L/ni+7sWXY0TZo6VqaBoLYLSWxVV+L3tOgZLDqHYakf9gO
J+/0H3Vbpg7JmbC9U6Bjso5ZoHQedEoIS8AQ1csQCm5Jen6S+vVC2NvnjfEL
h8HDwHQfYkg6ybEBdBeSG/l9odJxQjUPKbiRTxxCBgx0CtyLfXhiSJGKPh6u
9BVIKz8XNAQQpuPiSmUnj82Vo9h+4cb2uxW2n/XkYxEa6u7RLtTB1jaqXLhU
3zrU3W3RW/jEMzpCMDIwYMv2+ht+R8cy/GLUesNgV4oiLXy1nJ57rEB1R32r
vtm6vobfxjLcyoWV/AaDg86lzWsnvuSdzejQ1/CgSfq3MjFq++zgjcqDNlWw
LMZu+fnkRWQkk7UeyEjrvhmEIpOGc9EYyd0KVa9TjeS4+HEDNoT4c81IIDc4
Kd9jcoO0VcfDDV53pdID2V1pbf5m1yS2+/MVV+Te+wAVPuke1Kw54p4HxBIV
BeXQQldwx5t3UaoFyx4qMqQYoLtrCMFjqqvp40XFHl9gWOaVZ4vBK1ajNEvS
7q11EzTX3OVs/856NRvq2era9o0Oy+GvUV0j0q7ggn2f8IHRhWIbX7iJ2ldW
G/SpdnEh2cZq1T2NTh1hMS5+bIPddkGq3aDFmqvaOftQx2QbWZPGsk3OGksX
YahtDO5JE4ObNpPqtu9SK8QSGYPjyBgWF6UFUuXi5ToqVrlomQ4/w9nYeSab
yRoPHtat5j/8J22N1W3bqR0XUPwao8eOvd3oxN4U09qnwCfpjb1FWO7BJyu9
3SqS3UPwNDL36d8Iv4GsILfLPYLDcJJZtMCmliUQG2DWkS7HF8bpcgyndcur
NY821vfbXrS2DOhrS+eF8PKzHwzOBJ3yt+IztkTJuJkKu63Ok6lkmqlrZ7jH
qrHxDzPmYjKV3aaBk3AKt8PBYcfFj6lgtnr7h+KK3veADeWl8/XKa5Py0wFM
hUhHIFN5Ejlq65xEjtuQyHEXlc2ai2tWNWtPS9cxZuAbuMfqgWSOrvwC61ts
TTxFRc+8CJ+81vaQiFH26jzqLi7x9VRw22oF0sF0LGI6gePeB6n81fnUXVQc
FsBIkZaRlN2j85awHF2mlxLnhI+cMx06kozv1VIEl4JOwcQ9q5dUgXM4Ts9M
tWxBhQ6ILZlbobPt1q9wgmEzny+GW5LjYSePObEzRAcQBwPfgZmYHMsU07a1
DuomwYOwykC7c3OtTgh98clCqq7oHZ2rbCVlZfUCaSg68FEzi+Cy8XAV6lyc
L1f5olGJaS8a/VxlF5Kr3E0tndpBcW7z9+24IHDt5SqZEGpje8625YD3QOQh
FFe56WX/FKz5KqsXQXj1UTCs2/dbvS/lMiQd49ev9akpl2F/vR7/SOyEvwxJ
NTr7ZJR1EjpKIKuGS1YN+1fJEldLZx6VlXTTqsWVGmgI2uIH2hlyMJQo1yId
oJw3o4xioxux+DBmhZcBHgR44mn6M8X0ksIrglINdf1hfBgkPPPI20DKyBzF
D2geK4bhA+Zr6IZgwteml+qncvhaGToWbUHw5y2o+rTQkn3avFXDzKdBOdWK
xuYA/8SlnwTRtftwgNyG5Zf4ZQu51iZfVA54v4XEiK7Soux/pKfz0GC3phe0
0mXHXXTq4Qe+Sr9wsYXMmfIRInD7MB3v9vTLiZS5jn64/qi5hmhwV34hDTQ1
mRrRo+/E+Bs7cSO6KgTeFyczI7sF9QhQoYJL1CoGvlyvxf5shwT38SDLSXkN
nDmzcTmADjWOvcjy2xwsy7HwdMj6yBcDWY4smaI37qHUBKYe6MKmGHj0YBpg
mlFVg8fQZCmPCgW7CbUpJ+hdZO1zfueuoh3jgiBORvE+F/PJe/bZctd14M1m
IDe3o2RcEJRaylgQ5NMidYlhr8kjcl1CYQp+OKO5umnFG4L9cHJTFmMKm4u8
44aUT+/4+qX3XkhM8dlffqE8bN70zivClFy+yK2d8HDQe0g/ZiicYOO0l05G
3dlUddJKRw8hvtU4kRvmrWdM1Cvzw4nN1alNtXSyHCrXdLDzWhYTNB7GK+aZ
B3dzFI+v32a7i4GTruI9QXQ4OYPpODvDFCvyyJ3/DnoPmQgZCie6eICHTvIZ
4wRy0ftcueT+cJzz76eFmHI/Y86/k8ETOP/Y9Oilk0u8Te/HAUY+Hk/OauH5
crJLHOsx1I6bt3r+UXzaSyfTu+3mzSSfohAdVZbO7szBpktPYQ/fTX7KSufC
Hn6bJHn+UQzc2z/I/PHO/1fF89gFKV2BvPPJ5k76zL/c3sHz75fThyC49z39
5KGs8s/jBvWJ6S7m/Mt59VvveP6lnLB84VPAXSZW+80/t2fqxQU8V+/MMgVW
eP79ii7I8Rvv/MtcUtda+altx2/+/SrK2qIWoqBhoD7RH/CevptjlSz1jlut
2H50Mef/nE9oWOprtpiG3qz+6YD3cDaXByb+y2IPoebfL1tSnrPF76HlrIl6
Wz4TxQXGO/9tp+cEvacsQhFq/qW3VBaD4IiXlRPimBe7id6n1Jw8honxJMcj
VNGAt2r++XhJmXMs/Su8Hcev+Am/Byr0ed9DHrURqhiALqbgOZsJ/iTvuiiL
Edn1f8M/Wrvjv8eYfz67Gjs+uYSz1TeKdoacf+6/PAHNFj9qyg4aD9hI3vmS
G7Pd1LYf29PKGE/Qww0vhiwu8lbPvx+d9GPagmJiwzW/Bzbps/1k+ULNS2CN
W//iMrKIhzt+T1o6qWd59WykWzKdmX9Ovu2M3klVv/4+dR3ZZ6+Nigl50KiV
4au/bNcgm37qgwmksaB4GihkgShz6pwr+4Qtaks1K52DSzS6xbtWBmFMRlou
Bia+aOj8Tu+TOoFbpnKQ81bse2Bd9L6H9G2HwgSwZPy9YvzczUySV0xxU9s/
JPmx7PjReWDCHvCi2uCibH9t+x+sw8mYgB9O+D3RTy5Cx3QoQuVtT+s+pv8s
i/wKsUFnNa5qT9Xxz2gKv0JnFyrrA4VOeJ2Qe1i4CJmV64pXuNahWxB6TvC7
Kf3C2OSB5ZWNPeFX1Iyx6LehD3qDWaPC5LEyZmuuW/xM2Dvnj50Irf/rI1EO
34N18APikSZj2ooPU6tuVPjwq2JJMGaWfVWost56QPowA8/0AE5s8thCvYpN
jPoRJjeucJ00vxqLFwY+Edp9gMxEnNGh1GYZgeMSiLaQrKi0ysMFDxKqkEo6
yR0SpZy6HKqkIpBsSp6Jskif0ckXOIDHLdo9yF49d1hR/9gU5/3xeSNokkHQ
p+wHRROwgqiVxiIYKyIXDbclocWKzZzj6/EUub/hzJ1KK4JnWFb0BmSxaQCH
ErIkkwEyHgtpFboQ+4IeM5yd5+7t6XM4fuVnXevbsSYC+nfhYTdJFnDQqw0K
bJgz89xTC9QKAy1DzasdY8yxOXLLzoX0skoMos8YT/v+CjOwbtTYCC/QZ4L6
61ekGAd9srYgS4CbElABJVUZv0wntQrO0sqsaqefLEymnRnupp81SZX6Wmlj
t732h81n6cZVzjFpfIRIe+8gzT9aSjetTqdfLU2lh7Zm04miZjpd0abv35NV
a3MOhoZH9LUX9hfYPLwNyVV8jQaHR3g3fnVrL81Tzd66NoN+vjiFrl95Wje9
7lQV1bT1Omgzx1NOpv7ifGp+fTrV3ncNVV/7X1R9/X9T3UM3U9vahTTUVM/J
3oLxqPd0EtU/ea8i/SGdu+l/qOnVZ2mwttomhg+1tVDb+iWqmZuo+rof6iZr
f38dNc1+hrrjDxHZk9rD9TW0i/vtRqrTifpa+5bVo8dYbV1Sl8kNE0ZqZgCz
Y8IQscNeisvNoOkDCqqOO8V7VnyW+RFFE4xn3eJxtFwfY72Za86hhuBRx5Ie
4bxX/SS1GihxYlcg7eQ1xkqAohuwi8Gpn4IUdaXcWqhBRENEKEPZVZzi/2RX
r4vh6GY2knVbeNRhgKIqHdjYOZNtxEyfE+4FS7WmvAJH5VQfjnqv7YJ7Hi5z
HhZuZP+oIbDDoYPrpQfg6wnYt+u1g6UUsDtzEFI2Oh4POaQ+9iq7zzBRaiUZ
dHkPFyzOgTjDBu4TEQRXSUGgf+Dw+dPOXE335915tF4x9ZzYEvqF4tzpB4tY
EPjJAd5vuym1Wl97bl8+DQyNsHjJqGqjXyux8lP11bN782mt6s3KhAr68548
LRfU/5sBMSHvy3XybNv6xZr7qn7zb1T/xD3UsmgGNS+YRrUP3KCvQ0h0Jxyx
aY0sGRqnP07Vv/sBNc99gdo3r6SmGU/pNs7d+hMarKkKN+QDZUV07vaf6Vvq
/ngrta5eQG1vLKPmeS9RzZ2/1NeHWpsviHxw4HSF3qUAHQ/uWphYgCFcCzDL
UDEJqTnOUSA/xUJlq6+L0hchZYS6hmwjnEI12TwYlh3WGXjbEZUGo+CAAFyr
XPMVt4D6Z5zzVgVDwFnImiefKAEjHmBHTzvzN2kHOsAL9QYltFBFRC2PbjHw
b2s7fLRDOC6GmJhkBh+vgrfGALemztQxCXQb/iPYtrDTsRMY/Ki0KR58J4zm
uEdt0qbSyflkAjsyyrzB22MU0CxMFowORgmjhVFTo2fLhit9TZdtH+WsDVvq
XFjd/ChMFixSVJnH41DBAG+Bf6GfYUR0woaZhA3fNrvR3MD3+KTGpCCpob7T
NDMPFVkxkFvTQT9dlBxKYnAW7dbT5/S1Z/bkU/+QTa7t7h+ia1ec1hIjtdye
3djU1U9Z1e1iZo3AiKD2rWs0K9bc9SvqL8plzaT7xGEtJ8D/vVlp3EMWFfgo
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
Hcf/eCCw7Rd8FYji\
\>"],ExpressionUUID->"64a04c4a-febf-4557-a9c1-726b3a59453c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Posiblemente el lenguaje de m\[AAcute]s alto nivel", "Subchapter",
 CellChangeTimes->{{3.716234408855359*^9, 3.7162344185906057`*^9}, {
  3.7162344561658983`*^9, 
  3.716234463341735*^9}},ExpressionUUID->"e640789f-b38d-4725-9ebf-\
d837129c923d"],

Cell["\<\
Fuente: http://blog.wolfram.com/2016/11/09/the-2016-wolfram-one-liner-\
competition-winners/\
\>", "Text",
 CellChangeTimes->{{3.716237877030685*^9, 
  3.7162378840998487`*^9}},ExpressionUUID->"409080a8-81a5-4cc5-8403-\
27eeed43f783"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", 
   RowBox[{"RandomImage", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", 
  RowBox[{"Magnify", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", 
     RowBox[{
      RowBox[{"NetInitialize", "[", 
       RowBox[{"NetChain", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ConvolutionLayer", "[", 
            RowBox[{"3", ",", "3"}], "]"}], ",", "Tanh"}], "}"}], ",", 
         RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Image\>\""}], ",", 
         RowBox[{"\"\<Output\>\"", "\[Rule]", "\"\<Image\>\""}]}], "]"}], 
       "]"}], "[", "i", "]"}]}], ",", "3"}], "]"}], "]"}]}], "Input",Expressio\
nUUID->"7cef6025-ad26-4cb0-b259-fae131b025a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Todo es una expresi\[OAcute]n simb\[OAcute]lica", "Subchapter",
 CellChangeTimes->{
  3.716234449410939*^9},ExpressionUUID->"fc85992d-c33e-4d7d-8155-\
7d3112a20cf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imagen", " ", "=", " ", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
jng9ZM0+v1v7eoqgfTpm8nUm9uS1yuxRWSR+VonEKe1NbT17gp028ayVceD1
kuO1jfGBxLYHutr0Mc4pFYtvlpnn0P4mO8MisX1fOHZHxmjfoNh00aKsHN1r
grfj5XZKfiEyipxqacJvXKbEPWkJSMnLRXxmNjaFRmLgiBD88v6ncdMdf8C3
L7kJ5194PX521b247Ipf4uHfvYjX+w3DpBmLsFd45dihb8eYnfNIrF3QWh/O
B7VbenNMxuypg204KWP5qPB0pFXGubDVzf6N3AOM+xZxz1tXNaLiUzFp+mK8
2X8M+g2ejDc/GC82Fh8Mn4hRE6YjdG+EzpVyTR71hKzSdzNzvKbfvskvGB3i
Y8cOtvv78JtYiXlx1tGyJwrrBbkHIWsbsvPzVPu1N1dUtPZgZb/As0BP/tv3
FVF/yD/jXPtcktGkc8VKQb/vf8+RWT+eL3FNqaNErt/tPXXF5mgliCQ2aNb5
d147jxzuQle3tVcdY4hAjraJz7UrPAr75ZoelZKGpNx8teS8At23JUP0h3sf
JeZLPJWVhbDEaOEsCcm5OVi3fTeGjJ6O3z31Nn50+b340nlX45sX3o7/+u+r
8H++cBn+80s/wYXfuxFX3Xg/HnzsOfQbOBI7Q3ehuChf52U6fXM0pu5NfSrR
huPC1cnuVhxnrloeJ0vHOffDnEJdte4Fkyvnt3Hbbrw7cAwe+v3LuP3+Z3H9
nX/EpVfeh59c9wC+c9kt+Nl1d+GJZ17HynVbkF9UomOXOmjfJ8n01u+LI/t+
FqYmgms42lus3kKsV3fpHoOFyC0s0Dk6+nTcg4z97hpaWnGS+9j6aoRMHpy6
Qx2ij256OwU5+vtyZPrfm33HyVF5aQW6Ort71+n7fk6ePG7lrMQOH5b49Wi3
+HVtmsNifU6hL8fA3NyO/RG61wSP3H+PLFGDyBH1h3sf5Yj/n1pUjOjMLOxJ
SEA0ewylpGJ/XDJGTpiF2+/5A37w01/ia9+8Hv/xf3+KL5/3c3zhy9fhmxfd
iu/96C589ZtX4hsXX4Wb7/yNaNZjmDI1BPv2h+r+xuzxTV1q4/yN+EzHD3X4
1kK0WHM9MuYPttSrf3e0zerPUFtdqb2v1qzdiKEjJqje3XbPE7jxzifxo6se
xLcuvQPf+P6t+MoF1+KSH9+Kb11yNX5x728xbeYilJW70dZU79+PgiwZjgL7
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
NGriXIydxhqKpRgxYQHeGzINT784UPXpd0+/i/seeRGPPdUPf3j2fTz7yhAM
H7cAy9bvx64IiS9SCnQPDO5vli1xBtcfpRc6dK/NPGGH87DMMRSWOpUlziGZ
fJ3Vh1XiHObAfcbaBmP6OzFT/8C/CzSu1eMet+6qGlRUWSwxT0eWrFydS7nm
kXV25CgxNUP3MOs84KtVDdzExadNzNExPqJvZ/w6O0fBuqCPssR9IbifOGvp
yRF9Oi/7dpSVo7uj07+vHn05y587o6bxkLxGleiXw12t+3xxHXkxr5F1jcqS
p6VN+21VNbXAJTxRl1irmiWvzRrwhNwiRGcUYH9SFkJjU7EtIkF9O9YJcV6W
NXezlqxV/27avOXKEfWIfRtmLliltXPjhQvm7JjnfvnFd/D6K++Jb9dfj3r7
tfc1d9d/wEgMGTEBo8WnGzd1DsZPX4CJM5ZiXMhSjJq0SFmaPGstRk9eigEj
ZuOD4bPwzsCpGDpmnvAmvM5YiYWrQrFxVxy270/RuSLWYyTm5Onao+TcfD2S
pYwCxkm5On/E/WmUI1eFaojFkZWnZqxj58diyOXXIXLE+SbuRe5yV6CislyP
vG/0iBwZPerJd7vUWJ9kOMrKd2ieLluO1CPmh/rSIua/7XvG2vXIXvMSZKnH
uKc4Geo+dFCNHNWL/1VeWqa9Uttb20SGfL0XbDVA3Nuo/eBBzRUkFBQgIS8f
ueKfOz01KBBfnXXPte2dyhI5cjc2qyYxb8da77Rip/xNISLT8kSHMrEzOkUt
NDYN2yOTxGeKEI52Yv7KzaJJ6zF9/iqEzFupxxkLVutx+rwVmDJdxv+4mcLR
WGFlCN5+czD6vzsC7783Eu/1Gy46NBRvvDFQGPsAr785CO9+MMrac5m5CdGj
6fPXiN+4UlmaPHsV5i3fIVq3DZNmrsH4kJW6dnz6/E2Yu3SH6tCGnfFisdiy
J1HrUyPTchCbnae5ybjMbOEqU/ezTczORRL3S/H1baCPxzwa82nao6vGa7Hk
7e2/2c34cfThyA3nn8gijfk/y9zKT6mrSvv42326/PIKFMp3kivfJXlS307O
lb4dWaqRa5rdr7P3aTB+HVkiR2ZdrOl3wpxEkKMeO3XmtMZFZEh7AQk3zC+Q
oTwZB4yVrL3i4WfohPwN9zVKy89DaFw89iYnIzZXxox8X9QaslQu3xHZYb8t
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
tuyN1fo/sk+GuG4qtaBYfbm0IhmnpS6ty82vqFJ+2IfZUVnln581LLAno99P
Ky/z5wwsn61cfTa79rCmlAyqltAvKyzSfpOcr8rzrc/TdXryHhob+fhhHpXG
a1puucUR/44csQ7d6BH7B9EXOdvHRBJrLJmvY22QqVUlS6af3b+TXxfYv8+Y
6ad1oLsTbR2t2kOL+4pQ4+31IcafM/XcZIhzr9QVjjvOm+5OSEVSvhMOj1fY
aoa7mTmGergaarQnIo/UIn6vrLljDBGRmqt5Ofp0q7aFqw6RoWnic02ZvxrT
6X9JPDLN3BZ25i8X/VixFfOWbVY/L2TOKmVntOgQj5xLWi7xFPnYIuxslCN7
epEjrmWgPxbqs73iT7LHT3iClWsLjU7ErqgEXePO59J/27wnRnni3/PxsMR0
ZYh7PHP+Na1Qru/i/9KPI0fMQ9JySss1l0Id0Do3l8UG52OpM/TXjBmm6OPR
7AxRd8hNlqNYjbc5N0XT+iNhibpElqhNn8QR9YivwfWFcclp2oeL8ZHpl2//
oW9nejWY9XzkyMRI/255ho/jyNpbr13YkbHvdilH/Kx6tF24OXnW33eBdLV2
H9MeBNwPkr1+kgvKkOGU76+yRvPdzMlx/0q3cEQtqqj3orzOo1rE75NaxHkj
5ru3c0/KvfFYsSVcfLntmL54o649mCh8MM5nHtoc5yzmHkjb1eYu2YLp8+R3
M5dr3nvytHmYJXHO0pWbsG7r/2/vPOCjuq7EbZoBt7glduw0J5veNt272Wzi
OIlTnV5c4t7BFNN77yCKChJCEkUSKqgLhJDooncwxRXb2AZssHGj2XD+9ztv
zpurx4C9+WfjbKT5/Q4zTNG8ee9+95R7zrkVum+f7pNZNk9y3X3BvDrdH6Zy
0QqZt3il1CxdrXvDLlq1UfNpa5Y3uNeWqcAKgv2GHYfQDwhdRC8J9Ch7ZQQc
bVMfaC3jeedulfU7Al9Ec3HICdq9W3s0hLFq9lLZsU22bNvsdM2mgKudO1XM
doMfdA/s4FcF7GzTXBETcijWYiu+C0cIdcdmX8LRivUbQ47YDwn7zc/15sZc
Ckf0DUKI2dneE9bv+/0e2/9ISbReZjZdUB9xSPdGwKajP6pfM677670d36dy
78uvyAbnT9cuX+3G3hp3LXe5a/OUu27UF70Y5KM++5zadDD09L7nlaFdzz0t
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
NMfpoBl5MsPppVnoKccQ+go9NT0nV21B+CGfmlxQzat2Qj99OGJvPn+/Px6b
2B606CZ8KHwkfCB0EHoJppD6FWvVnlu8YrUK7DSs3aiij51tV+30EPL408+G
/JBjyn5hpnN8Vnye7LE/j3KDGXLIsPG49/Mc/Njd+z2+/1HCb+WcEF8wm87s
Oc5vInZ4jnknWJON1ai4f4++HfQCf+zp52TaTGf3OLumqKJWYw/TZhZqfJs6
H/Lg4CdY85msY51xPXzEWJXBQ0bKAMfIwEHDpf+AoTreERjp03dQIxnoXu/f
f6D0d68NGjREhjndNGKEs+ngZ5yz6dzfT02dKhnp2HQpMnYMPtVYGT9ukkyc
lCKTp0xVWw/fKSkpTW0+bMCp+EFOZjldMnlKmtNjGTItM8fdu781bbrjZ5bT
a1mhHjK9ZLoJnrD9smbkBUzlzJasWY6//KI4S04vzS2br1JasUDK6dVADjj7
wcCOYwjfCFuv0POdqmL7vaCbyDU1dtBJ8xYskkXO7kMPUZdXWVUjFZXzpWHl
aq1hTaSHEukg39bwYw92Y+6lDgk/KZovFM0Pagpie1vCETlBxOmIMURz62An
GhvlduLEsbDnatBhCI6e1fmWa49tgq3PmKDWpWp+nRsv7rly5xuUOpvP+RxT
ktPV7gp0yGhlZ0BM13CPGE+wg+7p1XuAk/4yYMAg6dDhYXn44c7OD5oopaXl
smLFSvc7npTXXmM9jDx29u18wc2dT8j69Rtl3rwamTo1QxmEWXwo9NLkyRnK
Ef4Ux4T9l5yS7pjJlYV1S2SFs5vI6aTnKP0S6eGb72w3JM/ZcdwXFZe75+dJ
pbO9GNPEXhjX2Fv0iVm3ebvaXBXzFwb6qbBcfSziE8WlgW1ndl6544e1J3TO
+m27Q1m1cbuusXJfv2ylMsTfpb/go7uelMefek62PLpLOVrM+q077+Qt7D/w
subtGxFHYv3wubaMhbPZG9Eb74cbxgpzL2MnylFTYsnyDW1vS/wi5phwD6TY
nKTrrt6cZPlVQV1FcG1OnDqpHL114qTsP/yGHHzzqHt8So66y3PipIT7Ydse
pBbnO3b8lDy3d7+71puksKhMmTJ+Bg0eoXqJx8YRDPXs1V969OwrjzzS3emS
SbJ06VI9Zo6R47K5knVk7FTmTK6zzbf4gRs2bFKOYWfs2Cmqk5KTM4M43qRU
9aVy8wrlyaee1fFnY5B76gaOn3hH3njzuMqbbzk/88jbcuQoefEn5ag7EQi/
2RfW2l5985i8+PKr2jdm6Yp1UlZZq7EK4ny2ZyY8mZ/EfjlH3Re/9U6w3s3o
P/TmCX2Onuuc4yPHT4XfQe/oN9yXv37kuNNDax3bZbJq9Vo9bv/G5fRjr/6c
abaKv27IGOB5Gxe8xrnV/ZBi+ULWh6upcWTr0fhClteLzWtjMqrPOUescScn
J0uPHj1kSspkyZuTK/WLFzlbfLWs37xFtu3c5ebGR2XV+k1St3iF9qHJyJrh
9M14x8NgFWwv7K6p6dPdHL9Ant6zV7l69fCbstT5z8QAYAV9YSyhk7Dt0EMw
hD+UlZWl6xtcc45r4MCB8stf/lK+9KUvyeWXXy6XXHKJfOhDH5KPfOQj8rnP
fU5+8YtfOLtutK4x85kXnj/g5ut69Z/Qh/DDd2PvpaZlSl39Utn92FMyc1au
POT03oSkSW5clqhOYmxu2LhVNjo9g6xbv1l11oLaRU7X0je/2Om1qTJqXJL7
zc636z9IRo6doHHnTdt2yP6DryqDW7ftcnbdfI1NENezfZzR5Vt3Py07nnxO
snKL5OHufWXE2CSNW6DLiMPxd4gfLFrWoDFtfL9e/fo72zNb1q7bIDt2Pq7H
u2HjZuV+pbPvhgwZppKWli6VlZW6xsr6EOuFZWVlzs6doudowoQJqm8sn8Vi
DMYaOojPaR8uNwfjXzdVjiyPwdaNrH+zb9cx3uz8LV68WD72sY/JOeecI+ee
e660aNFC2rRpI61bt5ZLL79MLrr4A3Le+RfKVVd/VM6/4CJp2+4Cadf+fPf+
ltKqVRtpcU4b97i1tGrZVp9r2bKl+2xL+eQnPynf+973JDt7hrz5xjFZ7lga
NXKcDHA6yATfB1usd+++MmzYCMnPz3fvfU2WLV0sd95xm1x26cXu758jLc9p
4e5bRuQcldatWuj9VR++Qm655SZdZybWtHx5g9qFUxxDE5OS1a9KcbbdfGef
3fCTX+ixIvxWjpn7du3ayYUXXigf/OAV8uEPX+3ORzu5+OJL9b5t2/bhZ1q3
aRs+VmnRSj74oSvl+h/9RDIzM52efF127X5c4xjBnucLZGp2rtaa06v4ez/6
ufuM+xst3Llr0Vr/Rtt257nvaCuXXHq5tD/vAmnDd7rngr9/jt4zb5Q725Oc
FOaagoIC+ehHP6rXDmnVqpXKBz7wARX+Hr/LXkeuueYa/ZzpLHSSccWYYZ9L
5l30v7+OZPrs/R7f/yixdSOz65h/YAm/0b9xbjiHt99+u5x//vmNzrUv7du3
jz12Y9eNl3AstT439jhgqGWLc914bK3vvfCi4DMt3PXnuZtvvlWeeHyPFBWW
avxgiNNHQ51e0sduHiWeMHXqVKdDD7lxP1G+8uXPh5wYR63ceDOGzmt3vrRp
1VpfO7dNK/fd8fdeddWVzo6boCxVV1fL0KHDJSUlTRma7HTTbX+9S85rf5H3
O1qHY61du3PD3818kujeF+ad6HMfvPxSuffeu2XPnmedPl+ra7zTc+c4n7Je
62RvuaeDnNPuwoCjNu2kZau20vrcNu73OZbObX3ad8IFfPN/eL/55pt1jHOt
f/vb3wbn27Fv3+8/vuiii8LHXGM+z+OvfOUrjdY/jCf+rnFk+qiprsfa2hEc
2dqR7e1uOb++/fzNb37ztGsHO3bOGSvB45bu+fPD8cfjgKvW0q7tBXrP/1u2
PCc2f3IdLwjff/ttd8vqVetl+LDRMsj5RiOGj1FdNHz4SBk/Pkmv3ZQpk+TD
V34oZOK89m3Dx+3bnifntna8ntOqkT6CI6RNa8dB21axY27t+ByiLGHrJDnb
bZKz82DpFz//tR4rOiY4tjgD6FH73ZwH/1zAGvO7scNr/nsZv7zeIva37r//
QbWHWetlXam4cqFkO3/p57+/Wc5Bd7c5P6aLWuv54nNtWsf1Y5RPuz7XX3+9
2hncunXr1ug9MMc9f8Me21xox81j7GKbS+HE4gyMG/JdfLvO58j8qaYgludt
HDE+YYkYuN14n9l3f/7zn8O57rzzzgvPvc2Bdl0Cm6216iFfL+k4iEkwNt01
b2kMMQ9eGL4P+wo7q1/fQaqPiGUPHjzU2fTVsnDhQtUNjCd4aNe2TWC3tWyl
YrrIOOK+bZtzG+mtFjGG0IOMm7Fjx8rmzVtl+vRsGez8sWTnI/32N3/UY2nj
bDN+B/aP/7ttvDIO4cIfj3aefF0R1VOwH5yztroehd+TMSNfMnOLtY/Qn++4
33HUPrTr2l3g7K/27cLj948DfXLBBReE34v85je/CW1y/Ef+b8foXzP7DL8h
qp9+/etf6+fJtfNjEfjUzfooLhavgyNiLxZnMN/Sj3fPnz9fvvWtb4Vz1Re+
8IXwGjCu4/Nc3B/4xje+JV//+jfla1/7hlz7nf+Sz37mi3LlFR8J5/fWbfy5
NKa/nC3De8eNnaj2HBzhHxGbIK795S9/OfiulnGfB8HegZvWbg6/8kNXy1VX
flQ+9pGPu/urpd25wfzf3tljF114fjgOzT7DF6ivX+x8lixdX8JH4ru/8Pmv
xGzQlo3soLZtE+sCBN6Yx7GPLr744kb6mvNmfmWL8Ptbyo9/9kspLq+WlMyZ
Yc3f+NTp8pXv/Hegj1qeKxdffoW0aNUyNn8EfqnpOp/hD37wgxpbSUtL0/iR
3TIyMhrpIv+4jEHur7zySn38ne98R2MP3IxHGw/40InidU3RP+K32p7l5CDi
j3JesHFs3uGG/Wf2HTGa0tJS9aWoTfmv//qv2LiKz2XEFJCPf/waqaiokpqa
WrWZUlMydK5/4P6OytZ557UL7brLna9g+qhN6/bOd/iwdHukl+ojdFHXLj2k
qGiuDBw4OLzepoe4P69de2Xo/PYXyPXX/URuu/VO6dm9j3Tp1M09vl1+8N/X
yUeuurqRPsI288f+n/98k34HenDkiLFq2/XpPcD5MPdLr159pGfPnnLdddcp
Q6Z7oywxz9x9991qR/Xu3VtGjBghN910k8ZSTrO/7LHTdR+66qNao0seAzYd
gk4al5Ip3foODmrmk9PkVzf+JmQw+vfQMffff7+kp6drfAC7C/uLa8c1/exn
P6tzgfl4PPb5+8lPfiILFizQNSH8RfSN31fA2LA4g79+ZDl2TZEjhN/u15Rj
7zK/YPMZO9z763R+jjDx79P96sCuu+666935ftWd5wMyadIU1SsI/g4xg098
4mPKkY1Li+thS33gosvk/vs6SO9e/dVP6t6ttxsbRfKZz3wu1Av4CI3sNOcT
wUvXzt3loQcelk4du0rHhzq7/z8ifXr1lVtvvkU+dPkHQ/aCufuy8LgvueQy
p3MXhMfJ96KbRo4crfGHyZMny0MPPRTwf4Zx/Ne//lXjIDNmzJCJEyfKzJnk
l6dK9+7d1VaK2n6BbdtaPnrNv0nPfoM0j3VSxgypqGuQGUVVGm9gPbamfqnm
mQ4cNERtS5/feOyjncas58yZo7YD15MbPJjtEI0pBHPY5dK1a9ewJ4evd3x7
xNabGAv4XZYXpD3t3BhKVIfUFITfbLEGbDnOieWoMr/4/hH3nEObnyzfiutm
NkHczw5ivT/84Y+cvguYw+9Ar4wZPUHnedYyfvCD/1aONN4Q44iYBDG9iy68
VB52HPTq2U969uirn4O9du0C/yTuH7UJOfryF78id9x2pzzidFe3rj1VFyEP
3v+QdH64i2Oqg1z77e+EtmDUz+H7WdvFN8OOJN6OfTd27HgZNWqM/tYBAwY0
0mNmzwb+3fly3333qT0FQ9yPHz8+1A+MZd82VN3dJvAXz7/4Mu1/lJlbKNPo
dTx3nmTNKdd9zQvKajRHpKK6VpKmJKvfiS1m8QDzvRC+b+7cuRp35bZ69Wpd
T4vGWW3d4sMf/rCuu5kN4q9z+P6QPWd1n9guCOzhT1uealPlCN/Q8r2JdzOH
cX5giXMXzfmNnmPWZBuPxbif8/3vX+e+J5jPHn10p6xft1l27XxCjrx1QnN0
iDvDUSs3roOxGQgxvc999kvSw9ll2HPYVuiw3/zmd7o2Yz5BsFYU941+/tNf
OF4eUUEPwdNdd9wr99/7kHR4sKOTh+Tmv9wk7dsGvnqcX/N52su3v32t+mXE
2xF4giF00rhx46RLly6OhdNj/+gC9EK/fv10LZN1TPRXbm6umzNWqg2EX2dz
TqhHWuAjtpcrnB+X5nyjaeTmFVQoQzOLgx7GheULpKK2XnON4ChYn4rHB+zc
o2ewPVlTZezX1NTI5z//+Ubv9e85llmzZulY4Lr6usfPUfXX43X92tkrcEqe
iOUENeU9xWxu8W07y+NFsIHPVOdldt7ZOPrud7+nuW3cqPk76T5yYP8hKSut
crroh8G82Nb3US7Rz7Fe+4ff/0X1USfHBCyhk6699j/Fjz/7Nt2F518kf/jd
n1X/mD3X4cFOct89DypH9979gNxz171yy003y2WXXNpIH8VtpJZqN6KHNP/O
+XKwRP4FMfcxY8ZI586d3fg7z2OvbfjbmfMZl9g8jC/WWHTfQ3dui4uLQ13E
+9FjqsuIZ7ZoLbfeea/290vLydc+F/SfRSfllS3Q/sXUT9DXPmlKqjtncY4s
foh+gWW45doUFhbKpz71qZDxKPNXX321cpaod51fG+Pn/DMWGCPMscy3vi5i
DDVljizOb7Ydcw11E5bbwPlC5zMe/JvppbNxhPzylzfK7bffqeurv/n1H+Tb
3/pP+dhHPxnzhVpIm3NbaOzZPnfZZR+Un/30V/Kg82+IR3SGC8fSQ46Jj33s
EyFHvj4irn31hz8id95+j/pGDz/UVeWBezvKg/c9rDqJ17DvOnXsLF/8/Bca
ccR4tjjjpZdeLh07dAnzKFi/In8Cm5KYQceOHR0v8XEcXzMLxif2HBzBDvHg
uro69SE//vGPh5+J66TgHH37P78nQ0eNk6TUTEnNzlN+6ItO/6X88tozcNTy
NFuN/9fX1yuzn/jEJxr5Yn68/qtf/arGiMw+N7stUa4qbBCLYwzwe/Cfsf3R
RcSm/Ly6psoRc4j9ZqtDstwG1mNZcyCvhBgd82vUpns3jixebDkNtgYbSDD2
WrUOPvO5z33G+eI9NbaNjw9D9zgdgk7q4HTLXXfe5+bzD4SfY+z7HH32059T
HYRNB0OdOjwid952r3R8sIs8cF8Hjd/94Xd/lL/86Sb5t09+qpFdF89TaKk2
E+vAxLyJFcIS61bECYcOHapxBp8j00nxWMUlakt9+tOf1hwq/m+vxfM9gvP1
iWs+JV/56tekR5/+Go+j1iS7sEz7obNPB/tH5VbUSmFlXUKO4nr8A+H6L7FB
Yt4+5+ZD8R7+/7Of/awRJ77N5tsbCLzgY5FDRfzPejRgt6CLmC/ML/I5akos
+bXAzCnWx85yG+jRQE5dQ0ODPme2ss/T2Ti64IKLYvG3xuuwfl4Q60f4G7/9
7a9lwYKF2j9lz9N7dRzf62wy5D5nl930l796+UWxtc0WFq9rqTEG/KGHnS6B
oS4Pd1eGYOkOxwV8jRw+StLTMuRnN/xUP2vxArOzLF74pz/erHFCpG+fgcpQ
v34DZNCgQfLAAw8oR75vxfhEF/hjNhpL89fYYKxv377aP469JMmtS8vMUY6y
Ckp1fw72lmI/w7zKhWflyI9z+DybLefnzFmc/otf/KJe22g9jNWR22NsOBgq
KSnRnNYVK1bonGr7Tlgvu2itRFNiyJ83rM+J2XbYvXCEPsJOYC7y7ej3ypGJ
rSf5+Qw8f/HFF4XrR+bnP/DAQ7J92y7ZvetJ1QfoJFjCX4rm5wS5dMHa69e+
+nXp0a23+kSdO3ZTjtBL9939kCSNnyyL6pbKoZdf0S1Pe/fspfkNPgvB8Qd5
gTf+6nfySNeeGucgXghDrB8RQ7j33ns17s1nsZX8ceyPYcsDtfHs5z5ceuml
mnuelT1D9u7bL8/s3S9ZeQWSnjNHOWLPNfYGZX+p/Ko6KaoKehZXOZYmOI7I
/8WvMv1mf9v0jbETPTZ7nnvWt8xWN7vE7Dy7MXeig6hLYT6Fo/Xr14f93/0+
xcZRU9NFCDwYQ35+EPE600fU8KDbff3vx2/ejaN4rg+5leerBPZdjIcWZtu3
d+MyeP7rX/u25nznZM9WXwUbjxwds+ssRqV5Zq2CnNRvfv1b0qtHX+nwQGd5
pHNPZemOv94jY0ZOkEMvvRYvfnLT7QP33X/aOqbP0c9/dmMY32AtGIa6devh
7nvJnXfeqTkI5tPZWLV8aTjxx6+dl+iYDvhqKd/9/g+01o+8uuy8EimoqlV9
RD/NPKeH5lTXn5Ej+1vkTiTSScaWb1uazkR/UjMRnRt9287W6OGF2AJjgrUo
Yo+MCcaK1UtEOWpK8W/Lg0c3W19izpfF6/CXOY9+vq8fD303jvDZyc8mf7+s
rEKysnJ0bv/lL36jzBBn8K85+iaw91rLN79xrSyoqVe9QMzhV7/8ra4p+YzC
T9s27TS/+9vf/A/p4+wwdFC3Lr30Hp2UnjpdTr0dMHT8aFA82PGhhzUPL9AP
LcJ8tJCjn/9SOnXqojGOrl27qd/WpcsjupZKzvu5sVxr2LBxG7flgvUzfout
o4Xcx8TiEuRuW5xhft0SmTQ1S/OBChw/JoVV9brXmO6PpBylSZv2cY5M31m8
zo4LIZ7gM+zbeBzvjTfeGOaAmR4yjqK1Z7yO7iG2YOv1jA9sO+Zg00lNkSP0
ucUrOUfWu85yprjZeqw/Z/lxHepR/XFkOZk8/v73v9+o1368T8abUlRUJP/+
7/8eftbPy8MGhKcunburn49/9Jc/3xrGKYJaBjdWWrUL7cT/uPZ7GlsjLoH+
snjfrJn5oS465jg6fuyk+lqmD7GN/GPHZ//LX/6i8YS7777X8dRJHnzwQY3T
dejQQesPEs35gY91rlx91cflu//5ffnR9T+V6394g84HV155VaPxbPkQoU/m
Pjdw6Ait/aMnSk7+XN2DgF76MLR49SbNa5hXv1z3yiBn9dzzLtTaJt+ms+Mh
v451JOLu1DXa90ZtTJ6fPXt2oxo966/l2x7+OiLXkpiT1RnzHbDos+THHJqC
2O+1HpCmuy2fwbfl/Li36TGEtUa7hr5Nw2Ny0XyOfL+K68IaPzkpcdu+XcgS
Y/Jr//4t9ZGIn91y8+1y2aVXOrsQltrE7gOGyH/41Cc/qzVDxMexxWAIm3BG
Tq7yA0esX/GYHNgWnn/h21ysubBuOm3aNOWGfJnbbrtN/SJy18j7YZwG4zJa
U9Raee/Yoavcdef9jtfb9Hg4/k9+8t/i+aGt4vm5we9vKb/+ze9kWvZM3WOS
PkP0N5m/aKXuG8t+L9h19NkaOnaCtFK7Lh7z9HUNOojcdZvv6CuM3Wfs+3kQ
yLXXXhvmD/k3376L6iWzW1gfMZ3k5zM0tXpYq8G3NVjOC/Yc8020r4nV8kV1
fk5OTjgeo3UsP/jBD05bd7I8LK4x5568Tt8m8uN76B38lLvvcuP31jvlk9d8
Vtq0Pk85atUy0EXYTgixQeppiZuTV9qxYyf5/e//KGPGjAtzk8itWLdugxu7
H4rVQjS2KzkOiwkztsgBgh9008iRI2XYMKfvHn44jDH7PgcxB/Jrp6ZlSmrK
NOWoS+cecucd9yrT11//41h+dswnbNE4V/aXv/q1MkR9OL2ESuYt0NpyegbR
M7K6bpnWyvYfMkLanX+xtDw3iNmxtmvzALqU3Dr8XP/6kavkrzXZ+TaeyKfl
xuei+4pE+zdYbwZYStR3qynWlRtHlu+NPYfd69cfWR2x6ZDoeWZ82Xj0bSQd
G86m4G/zXdZnxL/xt5kP42uEgU6y+PaFF1wiN98UzOnUpn7j69cqQ+3bBXZd
O6uljvk1ffv2115B5B/cdNMtylPnzl3dnPl8+J28Fvex4n651TPAis3F7PtD
fgBxKsYKv4PeDthHQb1ba28NOchzx6d77fARWbpkpdx7z0Pyxz/c5Djs6PTY
7aF/b3lF1HBQ+3Fu6zZy1113SfHcUu01WVZZo7252MdC+zw6PUTNefm8WtVZ
57Ruq/5RlGf+tq2vcrPfga1Obl/UvjOh3pyYknHi97Wx3oXR6851ZY2RuTe6
HtuUGEIsVmdxOlurTrSnpekjv28tN2LB0doBW/P72te+Fta/cO5tfrPzTLzo
qquu8vyM1o3Wbq/40NWa841gG/3o+p85n6h9yFGLFnG/hntyLhnz2KjkmGE3
kqdjNWisg33mM58JuYnmmDK++JxfaxPVyxxz1D+y30xe06xZuWpDHnz5sDz5
xDNqV9511z1y6623hXnWuobcMqifsrwm9N7e51+Ul189LIdee1OWr16n/bme
es49d/hNeeb5ffLEnue054r5VGYP893MRfx91nkS1TIPHjw4ZCjR+tbvfve7
UKfY9fJvXC8/Rwh9ZPVHfn+GpshRtB7W6sqtP4Ox4vs4jEn0OZ9lnQmf3M+V
tGtlsSlynfn7/s16ZFDv4seHff8I+c63vyv5eUVhbsPvfvtn+dhHPxXTSUE8
nTo5fzxT+04NTbxXZTAGWAf74Q9/2Oi9xpHNA9SLcov2vWbOZdxg75LTEP1O
E+LyxPneeP2ovHTgFc0l3LnjcenRo5cbp3/QnDZ7r8bJnS5rE7Pv/vTH3+vf
p1/jnmeeV5Y2b9slz+17SZ58Zq+8dfyE9vsaNnxkmF/H8fu6BZaI35itYXMB
N/72d7/73YTHbYJtwTWFJ3Ja+N2+Le/Hi/CJ/HpYzk9Tzfn2OWJOQf/DUVQf
2dyETcNYww5A1+D/2HyGrR3Ms411Ez75N77xDf0csS/W/371q1+p7vDHVDA3
tg19JJii/oexSF4Ba7F33H6v/PC6G+TcNufHYnV+7RL66IrYd14mN9zwY3nw
wfula9fOct113w/WfM8JasmvuOKDp/kKH//4x6W2tlZ/p41BxhP53Yx/ag/g
/oorrmj0+1q0aOwX4q9873vfd3bUl+TTn/6s9nugxhY7k7U0bFHTo60Y++e2
Uo7oW/L1r39drvjwlfKFL35Z87ofe+oZ6dilm3zko9fINZ/8N/mP//huGJeJ
ivFELhI+J/qFedFfsyAXw2eOa+brVq7dDTfcoL2GiE1Qj2jnxJg0ewRu/P4M
zRy90SinDrFaFBtLdh0eeeSRRtfOz3mJXleYMr+H1xlf0Rgt7/H9X1tnxT+i
lnbTxm1qI9GDi/y6Dg91cX7S3TE/qXXoJ3/gAxeGa1HYSz5bNta59/O0rS+D
HQ95On4sxXKmozVv/riN1l3E7aw24XxAnI74+V/+cnMjm5XHQS+wcxr3/tEY
RCv56r9/Xbp07yXntHQ2MvkgbVrH4/PnxD/j29E2n9nf4nrZDX3MXJCob5Gf
sxQV5j2/h6bltPp9t4yjpmrXWd8t619n+7X4cQZfn6NXbC47fey0SugnJbo2
ls+m9dHeWobpo2uu+ZTk5MyUU5jjjqP0qdNj+W4DpHOn7hpP/uIXvurl2rQI
10ZNyI/w6+1M2rc/3bfBx2cs2JxrfoD5FH4fKn+s2m/211d9G9d4uvHG38gt
t/xVLr3kQ9KoZ9I5QU0vOUqN+lq0aCMXXHyZfOnLXw3nFf6u1U21OifoS+Hb
Af6x2bHeeuutYSzW6v+j77H1Pv/3WX4R15k4un8z/Ybtn8iua4o9vt/Nrov6
2ayd2LkmxpqoB47pKX/Nz9b9uTZRtqwuMxivF8p3vvMf2ttev//4KXnrzePa
u4d6oIEDhskjXVkbeljzhIJ+A+d71/+c03IkzJZrEau7Nbb4HN+N3eb3AvE5
sjXmqO2U6Dcnni9aac4g+RF33HGX9ngJ1rzaaG5GI92AfsTvadFS14YuvORy
+d5//zCWtxDTNW1ahRzRh4+cDD9eFz2uO+64Q38H+ZHGia//o7opGv9D8H+N
HX9NCW7OxtH7Pbb/kWLxOot7Y+ueqU8+8xr9P/34mq93rK9q9PlEY87mQGJm
lutJvx56pW7b9qiEy1Pufv++g8oR9bCDBg7XNc6HOz6ia6zEtenRRp1A4z4r
QX4okshn43XWW+lrbHkb0ZoBbqxhooP9Or1EvwNOERg2G9LuP/WpT2v/FNbA
fvbTG+Xqqz7hnm+rLDXOhY/lwzuGPnDpFfKDH/9Uexl/4StfjfVKjfdGgqNo
7y0/J5bfjP9J7I4bfhLnya/b8G0Krp3lgtu8x99inqJG3W7+OWLuJV4X7afa
FO06xDhK1L/O+v7ZDbs4Ly9P1/XwR//whz9o3ib5m/QFIAcgOztbpk+fro+J
bfEa7//Tn/6k60k///nPNc5A3IH5kto4at34fn/J7623jipHjz/2tPZzIObQ
r+9g1UVwRN8T9mzBfscfJn8a+5+czHhdXtxXY1xQ18330oeEecOP7XIuuKGL
/N/NOGId9qc//al+lvoe+kZSGwuHzC3JyZNl2LAh0qlTR+13fOONv5Sf/ewG
9bmo4SOH/dZb7pC/3nqX/O63N8m13/m+fOmL35Cvf+M78t3/+m/50Y9vkOtv
+Lnm2X31m9fKTbfdpXUU7FdBnOEH1/1YrvvhjzQn6Z6775QhA/rLpIkTtJcK
/Zk55xwTuuNHP/qR5jGx7mXXjBsxIq4Dr3PeOWdcM3pxcb3oPUG+Bt+B3HLL
LVJeXt5o/dCvm8Fnwgcgp9n6bjVzFOcoug5r85D1v2CutjxEq6VMdIvuR5Vo
Hx3/Osf/H4eJPJ5lS1dqrxHy7Pr0Hihdu/SUnj36ac8GcrDJIe3Tp5/WCLGP
S8+evTWX4b77HlBb6re//b3GnKkLf/HF/VrfZN/hH49fe2M8+a9Z/yTjjf/H
P38yJm/LibePqLz9DnvqHtc4NOuwxBs7PdzNHX9v6dt7mAzoN1L3DkyblqV7
k+UWlmhuHXsys88E+7uy9pqSMV0K5pbpXq6Nvyv+G7geflzOYv66J4h3fbjW
Z8r38f9Wol4n/v95H/YJc67fdyvRfstNRbBnrccJ6wVwxFzNubQYp5/DeKbz
b7Ecf0/RRDfbF8TGpcVSg+t/TMWGMP1Q5haXa5+hoKZukLI0oP9QfUzvBPLH
WZ9ByGeAJ+pXEfp1o7PgjH5F/G3dZ907NI7F1iz9sRLdpy7R8/HxG+eosZzU
Gm+4Jue2R3d3fANGyOSJ02XkyEm6b2a2Y2jWnGLJdazYPmFwRP+tvKJy3RuT
fZFfe+tYUPbBydHDaZyvw3lMlMdjx+nzw/tsPrBavkT7t3CzdVkbDxI7BsaL
3y/Ir4t9v8f0P1qsx4nF7Py+W7Z2aj0c/PFk48f0USJmjI0z7ekWfW+imnVy
s7Omz1TfCI5gqFfP4D7QTT20zo4YhPWc84XnyXMlb5W8N4v/IYFeio8nuzEW
/NgKr0d17uk6OM7RyVPu3Jw8pvro2LEj2k+R2gvy0Pv0HiwjR0yQzIx8mTw5
U/dlnlsR7BkW7GW5RKrqV6iwlzIssU9LWdV8ORbbL+rtk/F5yvaQj8aDeGxr
6H5PXH5Lon0r/f/718r0U/T8wA1zruV7+zVI/th6v8f3P0qsN4X1tLG9xMj1
MJ3kj533oo/ejRufrUR9npgWGePvvHNKc7PJ4aZvDzFv2CFex7zev98QFeq+
rced1oA7dqifwA6EPTiihom/c/TI2xoDjG7uyHdzDhKx7M/Tdj7sXMR/C+PZ
10uBvPPOCamoqHD+Sgc9HvJXhw8bJ+PHpjq/ZKbufUkvYnqoat143Qplif1A
4Yr81Okz8yS/qET3BbM92M5285mKzhF2/H5+j38OEu15xc3PNWZc4BdhtzDf
Wm5ddL/ypsSR5ef6vSDxk6xOC90NX1Hb+Gy6JXo70/UJ/n9SEtn7arqcCuLe
2VmzNd49aOBIx8oA9S8evP8RvcffQD/BGD6T2X0whf9EHR5MEderqpoXG2en
6xbik6yf8fuZa5FETJ1+/PFborxobrm5+WpzYptihyZNSFZhz7LpM3NlZmGx
FJRX6b7LsENON3vxoaPYmy8zO9jjmT3W+Arz7aI+UTSv9O9xs7/Ld2H7o3us
VtriUeiiRHkMTam23K8V8WuIsXlhyfxI2LLxhZDvwJjj/t2E9zNO7XOI1fbv
3/+i+9t73Wv73XV487TrSJwBjoYMHu3stDHStXNf6dKpj3R4sLvceccD8sD9
nZWlbo/0Dv2m7t36qC8CR+gn6i7I+aZeght6Lhj3wdhnLmUdhL5I5HfbXpi2
h4L/O+0xv4Xjx79mPub//h6Q8XEYcEQshPoNeobTqxVh/+ZpObMkZ06hzCmr
1LryUuOoslb3XS4urVKdNcPppJdeDuop3377dIVkthbn1Y7JjvNs8m7XzuYV
rj82HHOr1UpY/Z7FF5oyR/Z7Lf5mfhJjxPK/7dxZLM/2GmOsWR7R2cTei9hj
8rLoO7Nx43pZvXql+/9md90OePZGMD7ecSphthtHY0YnqXTs0E3uuP1+ueO2
B+Wmv9whd935oMbA4ahH975q3+EzsbbEPXLH7ffIxImTdb9lbqaPGI/MtYw7
euIQeycfnDVLennwO5lHbG3a/z1wx28glsz7+b+fSxXOA+7n0HefuCI9Wdkv
nb2VdE+a5KkyNTNbsmblad1eUVmwTzli+5gXz63QPdDZ65ncVTtu3y5DGOvw
T18ajonHHB/HejZ5t2tn+ybYdbd5lfEBP4jpovd7HP8zMGRzB+fD9hVjXDCv
MS8zF/nnlHNsXLzbdfI5QhhzXGfqXdasWSWLFtUpS+gmu4U6ww15eq8OHjRC
bbbOnXqqHrr15nvl1lvu1lw74uAwFMSUe2iPH/QRNUvU0LHOxF4vdjt+vLG9
BkccD+xwvPxGxPSxz5H9FuYAdBf80UeHe/6O3QJGg8fsj06cgT6S9DvGTzOO
UtIzJSN7pszML9KYN3vDstdyQXGlCvtOw1Hm9BmyZesO7zfE/TSYQjdQL0IO
Hcdi/Wn8855I3u36MXdy3dE/2L3Mreg8xgfjhHnX/KKmpn/OxBP3fv8t/CKf
J84hY8XsGf7P9XsvAosm2IxwSbxn+/atsnIlvZzWqm3nz+OMQ+Jrmzdtd775
GM31Nt2DPYcuuv22exwvndUPIiaHXwRD9GagdyQxcXqs0A/Cxp1/z29mfFhv
Q44tsDf362824bfa7+X9jKvg+LerDqNmyc8B8TmCYXrvs65ldh0sJaekK0fp
WTNkxuwCySsoCfmZU1Qh+YXlUlBYKrNzC3Xf5CVLG8KWR9F1CL4bvcixcEwW
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
xLyPHDsa1nH5HPk965s5ahoSXbP185BsbxCrhbJ8Y8sfsPiU5Y9aXizP8X7G
lOVWWq6P9eH4ex6/5cjDEXF7dKn11G/kqZ2hPmnfvgOydfM2WbZshczJK9Bc
jPT0aZrfeujQq1oLH88zOiXRei6+m7nD9qyKxk2apWmJH8OzvCNsM+wUyw2F
Kcaq5RBYPQf/Z/zyOuzho1iOmeVY/m/0VkNfWY4838N3cyx7YnuZRHvsJ6rp
thwlfrfFLbnnOE+PTzYOAvIeq2/hvHCu/BjD+31Nm+UfJ9E8I9NLlhPJ3Go+
iOVhW961n7fMeOJ1PzfZcsgsluB/799jnJmNZLE7xrHpT/jmmP2+VdGbv09b
lLPo81F9xndbfarVePt69/2+rs3yj5cz5Q35vpPVciTKwfZzko2daC+1/w3/
wM9V8/e/QTdgf9oeqhyXv6eQ3aK9Sawnj9Vyn6kmn+9D19o+O6aLLHc42iuh
Wf61JVE82feXovmu/n620ecsH90X/7sS5Vb8/0r0OMxXsjps89cY5+gOOIv2
lHuvN+OJ70XvYj/yt9FH9rctr7jZN2pa8j/JM7Zx6++d+F5zmP+3jj96bGaP
4usH9VXPhvFDvxe21Wb4fRftFt37zvo6Wt6H2XL8PavVs70e/HPzfl/bZnl/
5Gwcmc0TrWWIsvNe//bf65g5JmowLN5g4xiW0Eu2/4Cth1mMkfFvdhgMWL8Q
i60g1mPF6pzsb1gs0taKLD7XVPeUbJbEa7NRO8848tdyuPfzSBPlSthnozkJ
f0+e+Bt2bMY0z1suux8jMb/J+iL4/auw/1jvsv4kfg8F87Mstm92HP6R5TX5
dd5nOq/N0iz/V8X8Nj+HEAaw94iNo1OsD5PFDOyxxfys5wqfsR5ftvZr7Pjx
/Oi80yzN8q8gfp2F2XHWa87vo+L3FrG+KrYOhv3G+83+s5ikH3c5Wy5jszTL
/2WJ2pV+vwN/vdn6iphPFe0zkqhPj5/3878dT2mWZvlnkUT+mcXnz9RTxXjx
xY9Nvt+/qVma5f2QKEdnioPY+98tnn+29bBm/dQs/yrybmu/Fs9/r75Mop5N
zXnczfKvLu913EfXlBPpm79F3u/f3yzN8veQs8UB/PXlM435MzEX/XvNHDVL
szRLszRLszRLszRLszRLszRLszRLszRLszTLP4v8P4TGjOk=
      "], {{0, 230}, {210, 
      0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{135.5, Automatic},
    ImageSizeRaw->{210, 230},
    PlotRange->{{0, 210}, {0, 230}}]}], ";"}]], "Input",
 CellChangeTimes->{{3.716236385811738*^9, 
  3.71623639109863*^9}},ExpressionUUID->"b9340e44-e82a-40ce-903f-\
f2aed75112ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageRotate", "[", 
  RowBox[{"imagen", ",", 
   RowBox[{"\[Pi]", "/", "6"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162364010998163`*^9, 
  3.7162364104736423`*^9}},ExpressionUUID->"6abeef85-bb47-42e7-a1f0-\
36a352b3efc6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd4XOXR9p9/ud4vb3oCgRBCDaEk1EAwocVATC8J6UBISCAh8IYWejUt
NFOMbYxtTLcN7l2yeu9ld7Vd26tWvbipeb6555xndbSWgbwua5szXMOu5NVq
tXvO79wzzzwzR/3lzmv/9v9+4Qtf+NcX+X/X3vTABffcc9NDv/oGf/GbO/71
j7/fccvNl91x7y1/v+Wes/7y//E3T/t/vvCFE9j//y+YZtr+Z1u3bqVsvwbT
TDPNtEwDm4ye7ddjmmmmmaYsk08mo0wzzbS9wSZik8kp00wzLdv2aWwyOWWa
aaZlw/4TNpmMMs000/ak/W/4ZHLKNNNM2922M2wyGWWaaabtLtsVbDI5ZZpp
pu0O29V8Mhllmmmm7QrbHWwyOWWaaabtrO1uNpmcMs000/43tifZZDLKNNNM
+08sG3wyOWWaaaZ9mmWTTSajTDPNtB1Ztrlkcso000ybyLLNIpNRpplm2o4s
2xwyOWWaaaZNZNlmj8kp00wzbSLLNm9MRplmmmk7smyzxuSUaaaZNpFlmy8m
o0wzzbSJLNtcMTllmmmmTWTZZonJKNNMM21Hlm2OmJwyzTTTJrJss8PklGmm
mTaRZZsXJqNMM820iSzbnMi2Z/v9N80003Zs2ebD3uDZ/gxMM8207S3bXNjb
PNufh2mmmaZZtlmwN3u2PxvTTPu8W7YZsLd7tj8f00z7vFq2z/19ybP9WZlm
2ufJsn2+74ue7c/MNNM+D5bt83xf92x/fqaZtj9bts/v/cGz/RmaZtr+aNk+
r/c3z/bnaZpp+4tl+1zenz3bn61ppu3Llu3z9/Pg2f6MTTNtX7Vsn7ufJ8/2
Z22aafuS7ez5Njg4mPVzfl/zbH/mppm2L9iuONfAJ+XZPu/3Nc/252+aaXur
7epzzWSUySjTTNtVtqvOry1btvyvGGX8OdNNTplmmrKdPZcUg8AY5f8JnzJ/
znSTU6aZBtsVbNoRnyZi1ES8MvlkMso00yaynTlvjDxRfMlk1Y54pnxoaOgT
H/9pbFQ//3nwbB8rppm2J21n2bR58+Y0k3C7adMmcaMewmOMPhb7beWvN36i
9spk4CexLtvsMBllmmm7znb2PFHsMWoYsGlgYID6+/u3876+PnHc37hxI//8
Jv6ZzcKoLVs2j+PdjnTXZ+XW58GzffyYZtrusp09NzLzSYot4A74BA719PRQ
Z2eneHt7O3V0dKRv8b3u7i5+bB8zbUB+Bs81kc5Sv+PT8lxGbn1e2JXt48g0
03aH7SyboJcUL8ACcAlM6u7uTnsqlaJ4PE6xWIyi0SiFw2HxSCQiju+3tbUx
x7qpt7dXHJzCc4FP0GLbx4RjXDQZZXLKtP3PdvZcyNQx4ImK37q6uoQ5iUSC
QqEQtba2ktvtJo/HQ16vV752Op3p++r74FUymRSmgW3QXioWVK64ZWTW54lB
JqdM299tV7DJ+LWRTyqeA2cCgYBwx+VyUUtLC1mtVrkPHQUHv8AxPM7hcJDF
YpHH4TF+v1+0VSKR5MekhHlwcEtpLKWzJsrHZ8aF2WaGySjTTPt029njfkc1
TSonrvgELQTNBNZAIwWDQfL5fBzbRfgxfcIVpYWGh4eFO2AWHmO328lms4l7
PF5mnI9/PsxxYkJiRXANOSzFLKPOwmvI1Fefx/U9k1Om7Yu2s2zK1CbqPm4V
nxCfIa5D3IY4DmwCszR+bBIfGRml0dFR2rZtW9qRz8LzQB9BV4FxwWBI+GSz
2VlfQVt5mHc+5phfnhe5LKXFkHNXcaGKBRUD1eucKO++v3u2jznTTPsstrPH
uXHtP/N70E/G3BP4BP2k+ARmgD+wkZFtzCa5K1waVV/oX6vv4fFqPTCV6mDe
tVJzE+sqq4Of28vP7ZbfoRw6DbyCxsJrwGsx5q2MufbPG6NMTpm2N9uuOL53
VDepzncwAPoFbAAnoJ+QV/J6W5kV3aKZNAZRmklgEeI79TVujbxSNjq6jeOz
IdZW/RSLJSgUjFFbsp01Vlw0FnJYKp7ELfJeyGFBV6m8FRip4r8d5ap25PtL
fJjt49A00yay3XW8G89xVV+A3BBiMzACuSTop+7uXn780DjmgE0TGfg0MjKS
/nelp9TDwarhoW20ZfOQ3A5uHebfvXlcXAg2Qbsh347XgddgjAEn4tRnZZTJ
KdNM23W2u9mkvsb5rviEnJBWV+BhLRWVnPjQ0AhlIkmxR9VTDQ0NMpuG03Fe
ZtyHb4mP4n8kvm1Ud0NcCFaCReAS+GSMAbEuiPXFHXHq0/izvzDK5JRp2bbd
fXxn5qJwviOeQg4Ia3FYg0MuG/pJ8UmL78bYg3Nd/Uw4HGIPMuPamBub+Ge2
8mNHRE8ZDTmsocER0U/8z+KMNY1X28aYhtcFVuH5FTOh6YyaSuWpjHUKO2Jw
JqP2B05l+xg17fNpu5I9n9WNGgo5KFWHia+RPzLmkxRHkH9CbghscjqxTtdE
tbXVHJtZ5WvwKpVKyhogeDC27gcubWMuZWgpfF9noDG3Bcbh9SldhfwYNJUx
T4XXblzzU7XxO3ov9hdGmZwybU/bruLTf9L7Euc1NBRiJ8RQ0FBgAM5/PGYi
A2s2bhzgx8cpFArwzyBvZeWfQx2Uherra5lZjcItu71F1gahd8Ae7QmYcUOj
4kARUAUiDeu3mXkuVcuAfBVeF14j8upglor7VC2VkVWfB05l+5g17fNhu+JY
/d/UYKv+Kji/VZ0mdAoYAH1irHka01Ijsj8YMV0sFmG9FKBWn4scTit5vA5m
RwtZrI3U3FzP3kg1NVXU1NRAgYBfdNfw8Cgh997V1cd86aRNm4doZJvGJyi2
Yfy+cXn2sd8PxuH1omYLuXS8VvAPeXYjpz5LPn1/YZTJKdN2p+3ssflJ59mn
xXyKT9AdqlYT8RPqDMAq/LvixBgrwBfEXSmJ5aKxEIXCPmGT29NCPr9b3O2x
p91qa6SGxlrRVC6Xk+OyfuZbJ/+bjxqardQaClP3AL+OwRHq3zJI/Zu30JC+
Jmj08Rpuo7AJ+3DwesFUFfdBa2XGfp/EqP2ltirbx7Jp+5ftimPyk/qYfNpa
vJFP0BzI9WC9DPET8tKIn9JxWTr2Aqc0DRWPs36K+MVbfU5mlJ28rQ4Khrzs
rcIpaCtvq1M41WJvZp40iZ5yOsEzDzVaLZRbWEgVdXVkcbjI5vKSw+snly9A
fRs3UWZVg5FVyFFB94FRjY2Ncov4FLl1/C2KVZ/EKW0dcmi/2buc7WPatP3H
dvWxqWov1dqWqsH+pHNP1WoiNlL1msjtgE/Il+P8V9rJGG8NDm6RPHgg4CV/
wEOBoEcY5W2189cuZpaXYvEAa6vWNJ/g2n0Hx4DN1NBUT7X1dVRVV0sllZVU
Xd8gnldcRkXllVRYVkkef5B6+LVtGdwqrFSvw1hzhdcPvYc9y83NzcIp5PlV
fTpYpTSV8b3InAuh3o9sM8bklGnZtp059jL79OJ7av+ayr8YewYY+wYYewco
luFxOH+hN6CZEDchZsK5jrgJ7No+1hrl5+0XDaXxySssAqd8fgd/z8lfeyga
9zOngvJvPr9LGIbHSs7K1ULWFmaKrVl0VGVtDdndHrI6nFTb1Ey1/PvLa+uY
XdVUx197/T7hDV4PNE+mlsLfgRgPfEWcqvrBwMEvpalU7JfZRyHbTDEZZdre
YLvi2DOeUyrHrXrGwZFPMvaew9dKQ+BW7XUzPhZ1BTj/sf8E2qmOY66amhr5
WuWiDJEW65hh/vkuZo9fGIU8VCTql/gOfAoEXRSKuJhRXv6+jzWV9u8hjv3g
ilMuj5Ocbgc7x3cOO9k5vnR6WznW459n3liYlRW1taypyim/uJiq+TUhBsXf
PT53r+kqtRdQ1aiDVUoPglOJJGuqrvb0HppMnZk5DyLbnDE5ZdqetJ093lQv
TNxX8ZnSP6o/L85LYz9M3Kp+cnic6tmrfgaPx+OgPVRPuvp6jr+YC4iX8O/4
nZm56uHhQdYsMeaRV/JQik/BkEf0UzjC2iXGOiqGnnbo3cLfYzaFQz5xxSmf
H/Ghl7w+D9mdilVOamEO+VjPtbjcwqgK1lN5RcWUm5cnrw2vC++HMd4z3gez
8D7h7waj8Le02G3kaXVTJBGh9s729NrfRD2KVX4q24wxGWXanrCdOcaMmsnY
L0DpIDAHDEJ+WHEGjlyM6nuJ/DH0EByPUeyCrkAsh7gObII+UTWR+Dk856ZN
m8fVT6r7mJUQjYb5d3kozud8PBHS8+atzKtWZhPziHVULOqlBOuoaFjzCOuu
SNgnvArqnAoE+DbgY1bxa/drbmdW+cMhjvscHOc1UhXruuLyCsorLKRCdrw2
vB5j3fr4NUeNVVLv2d4hf7uddZrVbhHtFo6G+H1LCKehL416SnFqf9BRJqdM
+yTb2WMrs2eK6pOCOEX1SgFnFJMUl9R6nOIT4h3VW071wQSXcIuck9ZrziPs
Ur2g+gdYX0iMRwYGbJN6JhjiJLXfpbMzRe0dCY6jwsymAPPPT3FmVJxZlYz5
qY0dt4logJkVSDMqFGzVYz+f1H7iNhD0kZ/dx8zytHol/muyWamhuUnLq5eX
URHHfHi9eD8y1/rG3df3Ag4Pjch7Bq65PPzeOFskvoR+A6sR5xpzVPtjf5ds
nwum7V22q44rpaGMeW0wBPELeAI2gTPQQGp/bTwRp7ZUG3VwLIPH4tyEQ2uB
XVibhyPfBD7h55Ejx2NxbgqLsG7GPrJtVK+fVOf92PkPjoF9wSBqMdEvM8XM
jFAiHqRkPCBMSvFtO38Nx/02vk3EWMdFxrQU4j7RVnrtQoC55Q9AYwVYT/kk
9rO7HBIHNjOrqplTpWVlEu/hb8L7pLSUsQfMthHSitR1HxnW9tDgvfP5vcKo
Fgez2euRtT98P3MGxP6UT8/2OWHa3mM7cxwZ4wvjXE0jn1QPcaWD4GAFtAD2
owwN888PbaGR0eH0vji4qscGj/B4OM5N/ByeX2IkrepJbZvj5xgVVml7h416
heT14Lmi0YjoqI72BLUzozra+Dk57gOXOvi2k7WVcnydSoSZX0HRU2BVnG/j
/DU8GmGNFYWe8kvsB1a1+rVclZfjQJfHTY2sp8orK6iM9VRTU5NoxVR7irbw
ezaMHgtEsqdwBHpvVGeV+oNI2/fc29vDLGfG8/MiR6X20aj6dGPNp/JsM8bk
lGk7azt7/GTOh1L1hMYZUWqdCrpJaSfEKt093fJ4Jgprn2H8HytvzJjx+Rr1
nCqewe+V/br6fpNR+akxRmV+rfWu0/audHZ28++OUVdnB/X1dFAv66ieTn4t
7THqTkWpi3kFx/0ew/c6khHhFDQVWNUWD7HuCrH+CgmnYtGg6CroKawVhsIB
1lRYO/QLp1o49kM9VUlZKZWxnqqorOQ4sJH8HHN2dHexFouJb964Rev5ouso
tU9Z6UDMH8X+HewtRB0p3k+wH9eAzBzVZ4399na9le1zxLTs2K44djJnyKn7
xj69OHdU/ySwCXVAPaxloB8kNgNP+EQcHh0SB6uGRga36385Lmejx3XGW+P9
EezdxXPK845KT5a+PvRs6aH2VDt7kvq626m/J0X93W00wN7fxd/rTFBvRzzt
6mvFqk6lt5LKQzq3FKcCEvtFRFcFJVclOXW/T9blbKx96hrqqbK6ikoqSmld
QS5V1FVRg62JKmtqqLHJQp1d3RqTdB8d3iZ9YMb66o0Q9vF0dqTIz5xSMTPy
dsjxqRzVf5Kf2hfiwmyfL6btOdsdx48x/6H4pPoPqL65uMX5g/NmQu3DwQ10
lLrdRmP9e41rXpk5p+HRkTSbcL+L46EO1mfw7v4+8TbmUjwWZ93DfOzkGLG3
gwZ6OMZkRmW64pXyiTgl8V+bxiiwKpVALis4TlNFo0HZpyyxn79V8ule9FVw
aPWftU2sqarLqbSmgoorSym/pJDq6hspkUzRIDN1eHgk3e9l1KClNE4N09Yt
m6i7q4M5GJT1BMTQyMerOFjlqIzaM/NakvkZZptDJqNM2xPHkrH/gOojLj1S
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
zLNxS32pL+yjYIwfEw1Skn8HeIHeoGoGBJ4b+q0rhXgzqc91j4+b+yf1BR1J
wxxkNbddd51NHeixp883Rl8p8AlrexG95tyPeeyI95iVNq9PtBTiPGEU8xy5
qIpa9EfQ6qba2rto8xb0mRodp5/UGp+K+ZDzx2cOLYVblZtSc/qMs2X2Zs82
R3anZfu9zQanjDkpXDNxnCLWa+S4Sukoo41uG6UROLNqmD3enqLK+gbKKSqR
67k/nqRoRxf5+Ph28fXe6vUwl+zCp3q7lRqdLdTksjO7HKLDVB+8Jo77oLma
mTmo/UHeF+vq1bomwHp6HrMpt7CEVufk0fLV62jdhgLJuWAPoZt1WTSi9Tzv
Ao/akctBviouM41RYxQKadonGEQvYi0H7/VpvS4dfJ77QiGOo3wUCGPuu4tv
sUdHr4GPaLVZiLdQ+42ZENLThTmCtUT8DvARe5PRD0HcMLNG+hnrTFJ8Ms6D
79S5pNgEVzMFtZx5QPrRhGSGjF/bv+fneBhayqtpKaVb8b6hZgq1UtX1TdTi
BHORv0vyZz4oNVOqrlPl0eE4HnCdQryv1k4yZx5n+xg2ObX/cyrTVf0BjkEc
i2AUcubQUqhHUD39x+VcCZpqlLaODLO+CEm8V2OxSV1UsC1FoVQbeaMR2Rdj
9bqFS+CT8gaHTb4Ht2L/mcsttVTwJtZQWu4XfLJQMTMoh7mUV1wurFrLXFq8
YjW99d4CenP++zT33YX0wUcraOnKtVRYVMD6r5rPMaf0Bk/hfGc9g1wOatgx
26/J0kRWG2ZreciJHI7VrtdB2jjWDFCT3cUaBb0YdEaFvdKXAT8PHZNIaBpM
ZmphD43Opvb2uNzX5pRGRKul4mFZY2zXdVZ69rvOpR2xCc8jfTkT2pqe1uvc
L/1otDp8n5aTCvgkLrbI+p5H3ju8h+g/iJopcKqipl70ZllVreTPkd9PpTrG
9alXvILjmFD9O3EMGOdfqdyUqaWya9l+b/ekG/vdGedWQevjWorj0rjfy1jT
uYmPcbffTzVNTdTA1267j6/tzLdgW1L4ZOdrPOI5xHXQTeBSXYsl7WOayiHn
FZhUy7yA11haqIL5VMjn1nqO6fJYQxWVVzOfCun9RUvppVdn030PPU0333Y/
/flv/6Lr/3on/fnvd9GTzzxHHy1exAxqFL2BtXrUffr4fLbx34R8O85XrHkV
V9bRyvUF9NGytTT/g6X07qKVtHx9MVU02snhC+o9YzzMKB9z2C+9e6Mx5hPr
I3iM+RFLBDmOYqYoT2mMSjKX0LMlwXFjUtVs6f3XFau6DFyaiE+aftLmWik+
oR+N7AUCo/S1vRbmk1XXUOBUnc0ut1jva+TPBfyFnsopKKb1eYXs+VRXz+9P
KJyu0zVeg2DQ0/j8kZvC9QprlshNIe5TMZ9c3/aCY9jk1P7rxjy6sdcdcqVY
40HeFIxSJrkLXG85ztvMfPIGA5IvapIcOZ8zsSjHdzHhkysUYEZ5pdedkVG1
tmaqsTbJLRgFPlk8bnkOWTPX+VTTbGdtZqGC8hrKL6uiHI7xlq/NpRdfe5Nu
v+cxuuIXN9H3TziPjj/5Qjrmh+fTyWdeTGdfcA39zz2PUF5hkfSvBFMw9xds
sjo1TVHInFudw5z7aBVNmzGf/nH3o/S7G2+n6266g67+7V+ZdXfRK7MW8O+r
o3qOHzGHy8Mcxt/qC4ZYw+g1pMyoKHMkhrlTKWZSe1QY1aYzCnku9KKSWvhI
QGrfjfMiJC7UGdWZzo2PMaot3dtci/G03pwefa81MxM9KryIUTEbTHObR9NT
okNdiK9dWuzM95Gfwp4+5PAQH6/LzaPiktL0TI1MnYxjAtoJOgpxv9rTh7y6
9EPnY6V/I2uqreYaX7Ys2+/tnnSVj0LeycgoXD9x7VRzYZR+gprq6u3hc76e
ymtrpI4AvTfBqEAyzowKM6P4Gs/nEhiFvJPSUOBTtaWRb8EoxHsOPbbTGFVn
Rc7XRdVNdiqpbmQ+1VBucQUtWr6W/v3yG3TFL/9K3z3yp3TAd06n//rycfSN
b59CX//2iXTgoafQT869mh54bBpV1FpkTRC1DKhtwOysBpuT9Z6dVqwvojnv
LqG77n+GLv/lTTTp/Gvo5EmX0tkX/ppOOfMyfo5r6PJrb6F7Hp5GS1YVsw5x
S17Mzue+NjPCT37++0IJ/ltRU9nGLMKaG9bemFPCqLZomlHRCPYq+2RehOrF
jnxZSmeU4lOnnicXRumsU3yS+C6kekB4pKbV24p5z6z12J18367nzYVRqNXA
jAbmch0zCvq0jtmPvF4px3vI561alyM9shwO53b5RlXbieNCzQmCrganQsxp
HBO4dvUhP7WF476hvTvuyzZLdqdl+73dk3xSjMI1EozC8YjjEtdZyUeBTZIr
3yZreW2dHdJrJacwn8/9RmaRl2O8OIXbk+Tn89cDDcOMQqyHeA58Apsqm+rZ
G/h+E8ckyFHZ5Vpf3+IUPtVanOIV9VapYwej1uaX04vT59OVv7qFjj7+Qvrm
QZPov750En39wNPpsKMn08lnXEPnXnAdTTr3Wrrltsc4hrPJ/sBml0tq2lFr
ms96bMnaAnryhZl01a//Kmz6ybm/YL+Wzp9yA9/+mn5y3m/o4qtuoXMu+gNd
ePmfaerz82j1hiqqasD8LX6dHEPV21vIxXrCF4+QH3t80YOOeROF5mFPZsx2
wd5n1CZo7tVmcGFGIGZu6TFeOhfVEU/zCc+hYjzpGyzrjK3SQwoayucPUSu7
h93FjJI6KcR6zCcwysI8Rd/mBtRt6HqqzmKjijrmfkk5rcnNpzXrc2Q2O+K3
TC2l9BS+Dyb5mc32Fju5nViX0GoSJI/OWmrLYPaPY5NT+6cb4zzVM1j1NQef
kIvAdRTXSRy9UnfAnMJaXs9Av/Qxqkf+meM1f4zjm55OSvZ2CauMjEJMBz5V
sO4qq6+ROqmq5maO61okdwIHoxod2HfGz8napbzeQiU1jcyXRlq4PJf+cdeT
zKIr6CvfPIW+/PUfs59B3zr4bDr0iMk05dJbafqs1XT6WdfQTX97mD5eUURF
lY1UVttIBRU1tKGsmhYsX0+3/etxZtPVdOLpl9Cpk66in06+ji687BY67+d/
pu99fzIdfswF/L0b6NyL/khnTf4D/eL3d9LMecuosLKZX08zFdXUUVlDE8dR
bnKHmRH8N0NTBcAq1C2hNiARkpoErP0hZ48+DUE12xRaCr3XmVFJmbkVSesm
8EkxCnxKqPnqso6HPLlfclBSk8Vxpz8QYk6FRUs5mU921HCqnJRHc7CqkV8r
9FQ9cn18Tajk119cxe9JcSnl5BdKr2Ena1joIhwLxpyj4tSmjZtZ/7E+5t/h
YE75vPg7tD7DvX29tHHzJtFTn3acmYzaPZbt93ZPcMq4rofro9JRLreL2lkv
DQ5rfdOUo8JmE187w/GYcCrM8V17bze19/cKo0KpBMd7IYnzEONBN5XUVjNz
athrqQIzwdGvxWZP58jBqCanl+OVAJ9THv4ZreYTXJj97sf0p789QCeccgn9
99dOoi9/7cd00Hcn0/eO+DkdeviFdMxxl9KPTr6CTp90Nf3jjqm0eGUhFVY0
iQ5Dn9CFy3PoX488R+f8/Ff0nSPPoONOuVhYNOn8G+jMc2+gH/34Wo4ZJ/Fz
n0oHHPJTOvaky5hjV7O++hP/3HSa8/4q+nDZWlrKsVFuWQWztln2S0NPeSPM
qnCAfBzT+cV90n88rM8blrkJAU+691XUOBMedQWpaDrfrvST4hN0mKqHQq0B
+KT1gfBJfb0XPQWhoZCLcnnTtQcW5pPSUWAUvN6B+n87Xxussh+ppLpOajly
CwqpoLCYY3uP6CnsRxjbJ6Pivm20cWATdaQ6KYReq/x84BTWVlRuamDTRto0
wT6ZvalvQrZZsjst2+/tnmBUZs4cedJWn496+Do5PDoyjlHQUtBRoViUdUOc
Ont7qGfTALX39YiWAqOgo6xeF1+7Layd6qioqpoKq6pkPwzOEezXkNw4e3Vz
i8R3DXbkrlqpmvVbYU0ZFddWUW5pGT332hz62cW/p4MPm0Rf/sYp9PUDJtE3
DzibDjzoXPr6t37CnPoZHX70eXTiqRfT1Gdn0aJlubQ+v4JyiqtoRW4xvTL7
ffrVDbfR9088nw4+4kz6/g+n0ElnXEunTfoDnXH2H+m4k5hdh19EX//2T+mr
B5xB3zz4J3TQYWcxp66i3934ID3+7zn04oy3ae6CxcypfNpQXiX7qFtkHZPj
WtRYhfzSjwDeGmwdm8WV7oGlMSqs6yhwCDyS/NV2bAqIBpM4Ua8zAJvQAwJz
CFE/gT2MslfIjX6nXmGUVeeU5KW8rWOcYv5gZk8d5sm02KVGBJ9BIf8d6/MK
JOYrr6iUfPjwyDZZF0G/MLiqo5J13eFR6uroIn+rTzgVDGhz/XqxX4YZBd+S
kUPfm/pPZZsju9Oy/d7ubjfGesgxqDl7Eb6Fhldx3ihpe2GG0Xeop1sYlexg
vb9xgFI9XZTobKcw88kXj8q6njDKaqPSujqOl6opv7xSagnQ/6CioZkqG61U
1YjzhZ1vq60OquFzqJRjwtzyQsqvKmNGVTCj5tLFV/6Jvv3dM+i/v3IifYV1
1Be/dBp97ZtnsqY6mY7+wUV0wklT6OLL/0hPPjuDPl6WQyvW5tFy9vkfLqMH
pr5MF1/zZzrsB+fQNw46lb79vZ/SYd+/iL5//FV09LFX01E/uIq+e8QUOvC7
59GhR19Ihxx5Hsd+P2N9dRVdes0/6O93/puefGEeTZ/3Ib2/bJXMw8GsCfDU
FYqQMxCkFszAYXbY0bdBn22K/jJajxm3MAr1o2APcuFJyV1Fxq3dQWNFhEta
L79gSM3Z0/jk5ud1GfZaI48vfGLdaXV6hFNY27N6DYziz7HJ66UGN2spp84p
xHysBYv4M1mfX0Qr165nLVVCTn6MLxTmz7aPr0OU7jk8PIy6Ka2t/ZZNWygR
S0heCo68gGgpPgYQ823O2A9qZJTJqd1r2X5vdzejVI250lFYy0F9Ma6LilHp
WI+vqZ3dXRRBjxRmFHRULNVGgViEgvGoMMrLz4F6BMRzpbX1tIFZgzoneGFl
rfRqQQ+qsjroLIv0R6jmx5ZbrJRfW0s55aWsV8qlj95bH66g2+96mn5wws+Z
S6fSV79xGrNJuz3okDOZM5M5zruCfn/9bfTy9Ldk7+/iFWvpw8Ur6LXZb9Ot
dz3OOuw6Ovz759G3vnMGfe3A01mPnU5f+cYk+vYhk+nAQ86nQ464gA475iJm
E24n09EnTKFTzryWf+7PdN1Nj9D9j8+kF2a8R3M+XEqLmX0FVQ18vruZA36O
pTzUyOcr6lAtMkvQqfUZbdX6Y3llRnyr1LVjnw3y6agpVbpJ5plG9J6i+gxQ
xSetX7KmnzDXWc14bmGeSH2+0y2MAp9amJk2z3g+KQenGt1jMR9ibWjagrJK
4RQc9VO5HPdZHW7+XLtoE+rRt2l7ycGoER1cPV29FOA408m883o82n4ZvmaB
U9BSmfNE9yZG7c+cyvb7ujvdOGcP+Sj0j8VeLVwjkRNFbJepoxADhjEv3dcq
e1tlridriCBzK8z63xdPiL5AXJHPMcU6vk6vwblQWEZ5pdWSKyqsqhdWFTHD
KphNVXzMl/FtLseEq4qKqLC6llbmltCytWX01HPz6LwLrqMDmTEHHHwGfeOA
0+jgQ8+kY477GZ16+iV01S/+RA8//gK9+dYCWrB4Ofsyem/hYnrmxen02z/e
Tj8+6yo68tgL6ODvnU1f+eZp9F9fOpkZ9RP62gFncnx3Osd5Z9C3mHcHHnqW
6KzDf3CB9An+6eTr6apf30E3/88z9Mgzs2nG/I/p4zUFrPEaqdLiohqbm895
l8zuwvpZdbNFah2wR9rm0uZKoBZU9RGNRMP6Xhq1t0Vjk+p5rM3/HPNAUNu7
7GVOgXcy51mfpwpGWVzaviHlkjf/BE5pesopNQkq5sNe8A0lZbRy/QbWnzmU
w58TatO9/hANDo2k54oi7htlTg0yu9oSKXIx71pYJ2PND/sRurCvr7+P+gb6
TS2VJcv2e7urPfN4AafUXhis66E+CnHfRr42Kj6p227WTi6PmxotHDOUYW9v
hfR3SnR2sKbqIF80IXkRxHTQUGvyi2k1x0jog55bXCnrbYXVddpaGccdNcyn
OreHyvmYz62qptVFJbSOH7e+sIbPnSp6ZcZCmjzlejrsqLPFv/O9M+jwoybR
SadcSBdd/Fu69X/up1dnzqN57y6gue98QPPfXyh7ZZ5+/jW69Orr6ahjz+F4
7hw64Dtn0pe+fjJ98asn0f/56on0ReTgv3UqffHrJ9L/+dqP6CsHnCqs+u5R
59MPTryUfvzTX9N5P7+RfnXdvfTP+16il2YuoEWrCim3rIGqLF6qaGJOWVEz
6adqi51jKGYU+sjYbMwqm8wWBFswTwKMCul174j5pMdxpFWbuxxqHZsfIfNN
x/a8INbz+LRZxcIor1d6RjQ7tX1DFj3W0/pIebS8+QSMgjd6tLU+6D7UI2Bt
Nc2p0nJal1dIK9fl0mrmFfqjJ9s7aWh4RLQUUKW0VF9vP/lQk8VMttsMPaf4
uACnNuq98Uwttect2+/truST8XhRfc1Vfxbko9CbBZzq4e9p9eWalkIOHddK
rPlhHby5hc9Hm5WCrKs6WV9F2lKsHUKy5w5r9nmlVbQmr4RW5hTSao7dkGMq
4HOipL6RStHzjq/ndaxBatnBqMLaBsotr2ZHjXkjLV9bTs+8MI8uu/ovdMoZ
l9KPTrmI+XQ6Hfn9M+jUMy6kP970P/T8tBk0+633aOac+Xz7rjBq9rz36d8v
zqA/3Hi71KN/7cCT6EvfOJH+m/1L3zxJmPTf3+DvffNkuQWnwCjoKNQifP+H
F4uWOv3s39CUK/9Gf73taXpm2nv07pJ8WpJTyZxq4r/Dxn8H678GOzMLvbK0
3sjVjU3UyJxCHxf0FG3VdZT0ZI+MzYwIy2ybsdlb4oj1wj7Jubf6tR5/0quU
HbPo0R+iEXWp4k7pyYI9htifh57BwinPBJzyavUIUpuA+NQxnlOoIyusqNLi
PnaZ28AsGhoZlVy6cZ1veGhYtBTiPRtrX4dd2y/Tjvzkp2ipbB/7JqP2Xp/o
mDH+G2o4oaOwBo3jDb2EsK8UdTCyD0bXUIj9JOZjVm0dGqREqo1ibUnJS7V3
d1GIdT9qn5scHqpqbOHjvo7W5pfS8nUbOHbLp7WskXL4mg1OFdc1iJc3WagC
+8oarTKbvYBjwILqBsqvaKSlq4vpiWdn0d/+8TBdf+OddCXHdWeffwWdfd5l
dNUvr6N7H3pC4rp5735I09+YI/uM3/mQv37nI5o+613WUrPowsuvp+8ceSZr
ph8xm06g//rqccykHwqbvvytU4RN8G9wHCk59WMuoKOOnyJ5qRNOvZLOufCP
9Ic/P0wPPzmXZr2zhj5YUUTvLMmlVYX1tHh9OS1eV0xL17NWzC/jGLZO1vgb
bdrceDdroFbooaAWvwmfMJMZ8VxAm7UsbAqN5crBJ6/EdlqPUhv6Q+g9bBod
dul1U8ufTS1qMzHDCqyya7MXjFpK8Unxyqpy6tJvSq/tlBqQMU5h/zb2zSAv
1dU3QMPbVB5yjFEyE3Zgk+TPUYfQwjzGsYI8QYqPl66ebhpAfWfGMZftc8Dk
1N7tn3RdU/UHqvcBYjzV+wC6Snpgq3wUs2loeFjyUoj5oKf6OB5EPUKiPUVR
5lUk2cbnk1dqCpAjB5uWrFlPS9fm0IrcPFqVX0hrCotpfUkZx3TllFNWRXn8
uHw+v8d5RT0tW1tEb8xbKHPLn31+Jt3/8LN086330PV//jvdff+j9NJrM5lP
H9CsuW+LYwb6oiVr6aNluVIr9c6idfTg0zNo8uU3Mn/OYA6dxlw6kb564Mn0
tW+fRl8/6HTxb37nJ3TAdyeJQ0eBUUcedxEdf8oVdNbPrqdrfnsX/fPeV+ih
J9+kB56cSXc89ALdO/U1euS5N+i+J1+h6fMW0cq8cnnN1axBmjkOQ+4IPdpd
Hqf0zJO+MPoMwaDOo6CunUJ6PRXWADF7wulBPz30Km1J99hqdjhEP4Ep1Ras
hdpkraFW3/OCvjYWnVFgEfbEWNhbWv1ka9X2y1gN+/rwM1qdv0Py6FjfKCiv
pOKKaul5g3z8xi2DUhOnoymtp7R1vq3UwbE96hEc/LqQI8D1LcHHAI6NTfoe
hr2RU9nmyO60bL+3O8spI6OM31c1CGAUcqDYs4daTtXXXO3Xk/w5H6jgFI5D
XDN7WN+jphN9tuN8fAYiUenHhDkl6CmMnDn49NHKNcKqZTkbaMWGAuZVAS1b
ny/r+ZiBhRkzuWXVwqz1HCOuLaygVRtKacXaQvp42Xp6b8FymjH7HXry39Po
4See4RjwZYnvwKhXZ86WOO/N+R/Q+wtX0op1iC/LmRvV9Mb7q+nmu5+i8y65
gU4+82qO435O3znip1IHhVnD0E4HH36O1B0gF3XkcT+nH5x4GR170uWioyad
fx39/Iq/0WW/uI0uveZWOnfK9fTj866hsy/5PV3/twfosRfepNnvr6Al/Dvz
KxqklgI6pYXjKpkpzzGfkzmFmTfaDEE/BcLanBdhlqozYIaBT2Ca3WWXWBF9
QDGXuInjqQZd9yDfXcUxViVzpYrv14AzDk1DSe7co/W+s+l8EkZ5fel+eHBj
vKdiPvR0LuB4D/1wNhSVSu48kmiTPZpKS2m1CKPyjW0cAw5tHaKujk4K+LS5
x1hvCUXClELc19e/3UzRbJ8DJqf2Dd+RjoIrRqlZ26hFUPNAjXnzQf4e8g7I
P/iYTZiZHoyEqLO7kxLJhPQIQP0O+v+jdwG01Mer1gqnFq/OoaXr8mh5TgEt
WbtBblFngJmia4vKWWMxWzaU8PfQl6WW8oq1fgULl6ykOW9/QNOmz6LnX55O
r8x4gzXW2+zv0Ouz54nPZh2FOO+j5bnMvzJamlNBsz9YTQ8/N5tuvusp+tX1
98jcvKOOv5AOPfpc1kzni2469OifSYxn5NPRJ1zMPLtEOIVahONPuYyOOHYy
/eCkn9MxJ19E5112A/39X8/SrHdX0bINzNWSOuntUstxHnLaiM/AGatTmy8B
TYX5eL6g1u/XFwrInBfUJqCOSvgk83G0eTlYL7UIn+wSO9ZZxzQU+KQYhfmG
YBT6HVilV0trmlNGPtkMe4+NWkrpKcwWK6mpk37o6OeCXl2YhSW1CKynkJca
YkZhbnX6gGAf3LKVerq6ZS4O6lbQMyPObOvsQm+8gb16Dla2WbI7Ldvv7a5k
lOIUjiXko1Abhd5m0O7IMajZbNJXVj80UX+AOC+WiMusFtTwtHekqKe3gzo6
ksy5KJ+PftmPi5kMqD3ADPYFy9fQwhXMqlXrafGa3DSjoKVW5Bbx/SL+Xj4/
Zj0tX19IG0pqxJetzqUPPloq8dzLr7/BfJotTBI+vTFPvp4+ay5//R699e5H
9OHHa/l3baAPluXR3IVr6aU3F9GDz86im25/gs6b8kdh1CFHnk2H/+BnzJ2L
+PZC4dHxp1wpcR70lfJDjz5f6qYOO+ZnrLPOYY5NphMnXUVn/Ow3dN3fH6J3
l+RRRZNb8ua1NuSyHVpvUfR14FgN8yVkXhdrKvTO9AYwNyFAnkBAev56/Oip
4JKeMlgHRB0oGJXOQdntsgdb6acqA6MqLXq8Z3dJrZbiT1pLZfBJaShjTzzF
KWg0cAo1nmXMKuw/Rk909PLE/uUtrJlk7UQlp/SDYRvqEoZHqJc1teqT4PcH
KNnWzsdTr6mlsmTZfm93BZ+MnMKtmq2OHBTyCshJQbsjT2WccYvjFDXomB0F
D4dDMpOzr6+LBvq7qbunXXpgBjiWwTz1kup6yZsvYc4sWLaGPly2Wli1aOU6
YdWStXnMqzy+n0sfr94gtx+tyJFeKusLK+V2wZLV9O6CxRLbQUfBp8+aQ68z
l6bPeJNefm0mvTL9Df76LYn35sxfRG99sJzeW7yO3v54HU2fv5Smvjyfbrnn
aZpy1c108k+uZp10EfPmAjrmRxcLm447+QrhFbj01QO1XBXyU4gFv3vUefxv
FzDLJgvffnj6FTTpgt+yNptK7y1dz9qGWeLUevWinwP6zkgf9+ZmqrfZmAHM
KcyBRh9exEV+3THfBXXqzCengVGoN0MNFHJQjS12qQ+vFt2kMUq5MAr7s5E3
B3s+I6PGep6OcUrFfNX6vj70RMe+PvTGQ290XzBMWweH0jNmthk3SW0bpcGt
m6ktqfVIRC4zFMZeH/Ry6TO1VJYs2+/truAUvjb2N8/sfwBGQVsZ+8nikEQN
emdXJ+sm1l2YGxyPUH9fNx+LfdTNWiqRisreNdQKFVXVSW3UkjUbmFGrZQb7
B0tXiZ5atHI9319D8xcuo3c/XsnsWif+0cpcWr2hlNbkldPiVfn0wWL0B/6I
Xps1j158dRa9+MoMepWZNIu11HS+nfby6/TiS6/R8y9OZ101X+K92W8tojff
W0pvL1pLM95eSi/OXkiPv/QW3Xzn03TN7+6ksy+4nk6d9Evm1TV04unXSIz3
nSPOFTZhjQ98GstXnS17ZMApMOqEUy+ln11yPT323AxanltINawXEWvVMEvA
EeSzMberTObhNMt5Xy89Mpk9mM8lbGoVb/G4ZU6Xw6s5+CR1Bi59HU9pKAOj
wCV1W4PeEWCOrOf5pI5zIkYZYz1jb2Z1P5NT1XpPdNQjrFiznkoqqikUiVH/
wEYaHh7Ra6ZGdFghRzXCx0APa3C/MAp7ldFDvaMTM0XHatAzr43ZPh+yzZHd
adl+b3cFpzIZBV2u5oGiTkr1kUIvIcUobV1HzRgZpe6uDpkv19uLNec+6mQd
FYqHRRPUWhqpsKqa1hWVSX4cXNL4tF40E3oKgE9z3v+Y3lqwlN75aAXN+3Ap
vffRKlq6ppBW5pQKoxaxVnnng2X02sy36CVm1LRXZtJM1lHwV5hPU6c+S488
+iQ99/wrNOvNdyTemzH7fXqNfcZbH9Osd5bT7A9X05yFOfTEtHfoL7c/SVf/
5g7pxXLaWVquCfEeuIQ1PrAKOXTwCXWdcHDqqOMvomNOvIhOP+cX9Nsb76TX
mYN55dVUZbXJ+lqFcKlJaioKa7Q61VLUgqHGAjO3mCdSe+nSdBJqMh2tXmaU
loNCjl368zGfmvQ6gxqrJR2DgXtKQyk+qZlhzWCTrOH5xzFK5aSM63qZMZ9R
T6Xz8piNWFMv+XPUdaKHZ2lFFdn5cTKzT79ujXXEGKWhQfTGS4oGRz1CIBga
p6WMMd/eVDeVbZbsTsv2e7uznFL3VW0CjiHUcmI9D/Ee1vdwO8DxnhyTI6O4
XGqHpNQfj/KxN8Aca2O2dVIfM6qtKyX9Slo8uCY3UWF1tdQZIOf00eocWsDa
acEKTT+9/dFymvvBYubSEo7LVvH9JTTrrYX09oIVwqbl64o5RiygBR+z1npv
Mb3OjJr28kx6adp0evmV1+mFF16hxx97ih5+6HF64oln5PuzZs+n6Xjca3M5
JpzPz8f6aw4z621m3Pzl9Mjzc+nPtz9Bl/3yVsmfH3fypZKXOvDQSek9MVjn
g4YCr6CpvnXIT4RRRxw3mX7440voV9ffQdNmLaQl68qYQ01U2tAsbCqtbxI2
recYaXVhMW3gcxpfF9bUUnFtnTAG5389clbCI41LyKmr2c3pOgMb+GQVViD2
wrpbOWIw8ErPl9fqa3oS5ylG+bCn2zeOUcbcuR3zD1v9aV5lcsqopcr0eE/6
dzKnVq7NoQ35heTin+vt7U9fsxSjtvHBMdDfK3MKwSloKeTPu7p7t5snajJq
z1i239tdwSnVo8VYJ4W9e6pOCr1akvEEbeVr57hGUnoftI0b+6mto41Sne3U
0dtJ8Y4kuYO4bmO9ycbnbZ3UbSIm+nhtnjDqvaUcuy1aRnMXLKF57PMXLqf5
i1ZIv6g3OE57n5m0Yn0JOzNq5QZ6b8EyemPOu/Ta628yo2bQs/9+iR5/4mlx
sGkq+9NPv8A66mV6/nnEfDOYUayxXp9Pr856n55/7W168qW5NHXaW3TXY6/Q
725+gM6/5I8c410pa3UHH34Wc+j0NJPgyEl97ds/5u+dIXUK3znyLDr+1Cl0
5a//Tg9Mnc4xZC6tyquhdcU1lF/Fugl9LjmuRR3FivxiWsX6I4fjo4LqWtFV
FYj5rOibbKdGu0M4ZHVobLJIvX4zWew2ara3UCNqNFk/IZ8F/QQ2lRm8HJqK
GaLiPDCqSXrctUq8ZzUwSTFKsSkzP5XJKaWlVF6qlOO9wjKtBh1aCnFfTm4e
NTIrOzu79NlBo2lOjY4MURcfC9hzLDVToTCl2vn61b99XafJqT1j2X5vdwWj
cF8dPyrew/oe1pFb+Jrq8/iop6NHHYZa+kGfe4tavXgyQZFEjJKdbRRpT0pP
c2srxw4uO1VYmiinvJxW8nm7FDUEq3Lo3SWraN7CpTTnQzBqGb21cAXN+WAp
TZ/7Ac16exHHeqvpoxWow8ylBR+tpLfeWUiz57xNr01/Q/iEuO6hh5+gRx97
kp56+nl6+qnn6ZGHp9JDrKceffRpevqZl2naq2/Si6/MoWeen0mPPP0aPTj1
NbrnsZfp5rufpF/eeBedc8n1EuMhb456KY1RY5wCm751yBmylnf0CRfSyWde
SZMvvYGu/+v99PRL8+n9Jcj1l9Gq/CpaV1pLa0qqaRXqJgo4NiqpoAJmVgnm
cULv2LX6AMxCkD4Jao68004t0E92K1lbmtmtsrcIefYai66hGpVG4+dj1sFx
H98zcgrxnmKVZYJclJFLmZ6e12DQUtB74GMF+unUNrKWKpW5DWtz82kVc2rd
+lyqb2iU40XTU6PpvNSWzRspEdf2fkKLR2MJ0VIbN5p7+bJl2X5vdxWnVC2n
cX3P2mwju8VOyWiStm4ZlMNwVN/DJfnzoUGKMqP8EfT4jlGoTe/F6W+lWgfH
DHzeFdbWsL4opeUc7y1anUvvcFw3B3ko5tLcD7XbGfMX0rQ33qFX33yPZr+9
kN7leO991lrvfvAxzXv7A5r5xjyJ5Z586jl6kFl0/wOP0sOPTKXHHn+aufQU
PfjAY3TPPQ/S/fc/TlOnPk8vvDSTnn1+Bj029WV6dOqrdP8T0+gf9zxNf7j5
PrqUtdDpk39Fx512KR3zoylSKwUtddBhk+iQI8+VdbzvHn2u8OmE0y6jH5/9
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
btR+KdRP1E1kE2s4GHyu/W3Yx3QGo0zu3L7W96c4RW1nz2MZThlGmVpRw6m2
jQM6176sul45VSyM6pPXWV9w7tyFP6pFYE3nnt2T2Cb/3dwnc0TuXadeP4Mz
Z89PW0ueyavZjtnmyLV8zPbf9q3ilNFSrENgDSdz59TrrN9jTR77HmhPfu7V
gjW/+KJcn+TUwaMnsPvAKxjfsx+TwqtdEqM7d+tekZb+Tajt6kVJUweyyuqR
kleuuajQ+AyEJ6QjTHxdkPg9D/9wrHP3g4u7L3yEVaER8cIo4YZ3IFzcvLDB
wxfr5UjPp/pJvN1i0U8vvLAcL0q88PwyPPH4C3jkkeeEVUvx9DPLRUetxbJV
XljLHPqGYKxZL3za4IcNvsHwDIwSNkXAzddwKhbeIWRmnhxThVkWu1Q/habK
75mLuIwSZJXUori2DVUt3WjsGVRGdQ2L/tg85lzLs3SJtZ+F9QR9w8PoH+Ya
3qiu441sHsbw6CZsGhnC0PAgBob60de3EZ09PWju6ka9g09VolfIJ2oo6iqT
M6e+MV7PrqFmxjSPZ+ORM3clHBtwMMvOp2mMYj2qeL6aRs47rkNBSbnqqa2c
0yc+Tvv4qJ6y8ubcH8N9COPibXmf4/3u5Ktc35vi0p/j02xya7ZZci0fs82Z
v5RRM3Pnpocw/d6WLVsxOblb9zaYfh1GU7GV7LkLF3FSvrZz7wGdA7BTWLXn
8DFs3bVfPic79bPb0DeIqs4e5Ne26Gc8IasYUSm5iEjKQkRihno+Mmq1my9c
Pfw1NxUWlYBg8X/efiHw8Q9Rz+fu6Yd1LvR768XbrRMttUo83wph1VrRUivx
+GPP4Q9/eBqPPvq86KmX8Myzy/HyYhesWest3yfh6oP18vPdfULk34sQfRQF
72DRcCGJ8AxKhG9YKgIiM+SYJmxKgFeweNHoLATHZCMyOR+J2aXILq3XvlE1
7ex5Jd6sb0j79XWzBpL12o4ecqw16hqSrw0OoGdgABvlyF7Lm4RZg8NDGNw0
KCH6aVD4NNCHno29aO/qRGObMMmhnUwYRjFPZeoQ7Gt7RkeZnJRTWzlqH/qn
sXPrNP1lNJSdTzMZ1dzTp36vsq4J+cVllpYSTp44+apzL5+pRTCM2s7+NOJr
zSwZXlf2uvOZ19/Mepg5Tr31j9lmzVsRphcCc+es6eT1RS01LNfsIdH2Fy68
Ye3Zcsw4spd3vip6fu/Bw9i2S75H9BQZtVmOfeM70SGcqhdOlbV0Ia+qCWkF
lVp7QE5FCqeUUQHhWOvuj3XCEL/gSARHxOkeGF953U90FTnl4eWvWoprfC++
uEo01Erh1GrxfBavnnriJTz68HN49JHn8dvfPoknRVc9/+wyvPj8CiwVX7h6
tbtoMj/hVCDcvEPg7h8Jn5B4iQT4R6QiOFZ+l5gM+EemyXPRdzGZOnchNq1Y
NVRKXgVyyxtRJj6vljNHewa0jyhrzjs3mb2/I9Ze4KFN6B4UvcP9e/3CIIle
Oe8bGlRebRRv1yPaqUvY1N3bg46uLjQLn+paWlDT3IrqlnbVUQxqKuai6PUM
p66WNzccMsHnZu3Pnm8ya4JGO9n9nT1MDYTm8Dmfr6EFJZW1KCqrRJto4yPH
TuDS5SvO2l5eDZcuvaE5qc2jw9i6dYv20eC1RH3+P2GUuQ7nGPXWP2abL29V
2PNSrOlkTmGL+BbOgTz12inHfpipeinrHiq+75JoKuHWpm0Toie2YpAzdUVT
De3Zh3457966HXXiGUoaWkWL1CI5t8ziVHKOMspdWLTOM1A55RUQhoDQaGFU
NAIlAoRZyijWmgujmD9fsnSNaCkXjRUr3JRTzz+3HM8+vVTY9CIee/gZ/OGh
J/Dgrx7Go6Kt+PrLoreWrnTDijWe4vv84eIZDBevUPF7EfALT0JgdCp85egX
kSx8ShftlKd1BmkF1UgvrEZGUY3OiSlr6FBGNfUO6pwb1pS3DQyiY4g1ltY+
u145Z3T196Ozrw+d3BezkUyyeNUpXGojl9rb0dTWioaWVtQ3t+gaf2VDs/Yt
rdRZFNP9HvPp5IY9d07GmD7Chkd2VpnX7fuSTRgeXU1HGUbx3yQj6fdKxe8V
llZozdS2iZ3WPj7A6fl4gZw69ZquDfP+xpyBzmcQbW56tph8lL1n5/UUs82S
a/mY7b/tWxH2WevU6GbWOueBHNx/AOfPnpvqI3TZYpXOY+P8kPMX5N69Hc3i
fzZNyvcdOoYR0VLDu/ehZ2wcTXLNV7aJlqqol897NZJySjU3FRSdLN4qAq7e
wXD1ClLfR0ZRS4VGWp6Peor5c+alWMNJLbV2rSdcXMS/rffT4zLxfy88uxRP
PCqe78HH8dtfPSKMegQP/+5pPPXky+L9luHpZ1fguRdX46Wlrli2xgsrXP2w
1iMYG/yEg2EJEvHCp1ThU656O/6eXMejx8spq0d+ZZODUb3CKOqoAcf+vD45
79OcN/vGcY2uU6JDXmvv7UVbTw/aJdq6HceubmFTh865q2poFI3SpEf2mSsX
T1VW3zSNU9RSzJvbOUUfZvbI2LljtJNh08y1O7uusn/PTE1lr9VSRom2Y+48
T/xebmEJOsQDHj1+UnT1lWn7z8krXjfcV8V9CzxnfTA5xeuKOp28svu/66mP
y2xz5Fo+Zvtv+5eyyZz/KS01JnHy6DHtb2ZMnqk9vyj/7+jps6gXD1DT2atM
Ip/GxP8x+icm0To8rPtFqKXyKhr088/cFPPnPqEx2OAfBs+ACPiGxCAoIh5h
0YmIiElGmHCKjPJirls4Rc/H/TDu4gvd3Pzh4yPfJxps9So3PPfMYjzy+6fw
O2HU7x96UvTUc3jq8Zfx9FNL8OSTS/A4j88ux/Mvr8PilcI6V39hYxi8gmPF
4yXK75KOmPR8pOaXC5fqlEmcr1BQ1axRVNMqXq8d1ZwbqLMi+nTtspG1jvLf
3iCfZc4Y5MwV9ghvk6+1Cpdau9mTt0ujubMTzcIb9hcgk3TvruiTEh5rGlBS
0yQhrBJvVSF6ZSanjOezc6pzcMS599ju5Wbyyn5u5xXjavkoo6X4b1LLVQo7
80vE8xaVivZr194t1txQs74Hre/kdcNazpGREb1+mN8kp7jniqzitUVesd7F
3hPPHnM1U9fmMduseSsYNVNLaV5qTLTUyCj2Tu7CGXo+R/KcteeaO798BfuO
nVSfV1jbaO1d2zSK0b0HMH6Yeoqebwe6hHO1ogVK6lvlM2/lpmLS8rUWwV+4
FCA8ChFdFR7H2VSpiIpPVUb5ic4io7x8g6wcun+o9ZpPKLwlPIRRrJ16+qmX
lU2P/uFZYdNLwqzleOE55tbX4LkXVuta30tL12PpKk+sXh8AT3/xkuHJCI1N
F9+ZhaTcImSzZ2hVA4pryaMOYUQXyhu7RD91yu/dhtKGNlQ0W7Mj6jp6hEvC
qK4+PdYLn2pZly3BucCcZ6Dh5FMXmuR101ugQv5WxRU1KCyvRiGPleKl5N8u
qhZO1QqjxF/Z9ZSpkzL15y2i4zpY/yDROTg8rUeCvafLTJ01k2HGC9rzUfxZ
pvcM/y3+u5Xyu/D3pZZiXSf7RWn9nDH+jvw56+y4J4bzhqinWHdOTrEHEFnF
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
+kbVUj3y75ArU71apvq1Omd2yPnUnpk3p71mem2QUQxqK3s91Ryjru1jtlnz
VoTJnZNRZn/Mtm1j2Ld3Dy6eP2cVSTlmGV8QHXXw6HHtO9veP6T5nFa5/zJ/
PnbgkDJq4hVLR40Jo9gTb3hiHH1bt4ueGpPPwKjcp/tR2sC9fXVIyC6xatGT
cxCemIVgB6/IJ//wJGUTGeUXlgivwBis9wqDq3uw5p0Ybu4h8GBuPDwZ8WmF
SBc+sd4ho7hae1oV1rG/bycqWznP09IlNfKZJ4dq2Y9EnpNP1EzkEnlAr0df
R71EDlE/Ga+m+SQJPi8WVhVX1GpobXa5jU0lFY6o1PfncDZOkTUfJ1s4RYay
/zv7l+aSgcK8IscswhLNo7cpp6innHkwB6fo/ayw+rrY6xRmht0PWjGVb+8Y
GkW78EljYFj/9zS1UtRS9HslVTUor6wWLzeiHs3oKHteymgm+2t2nvHr1Evk
EmsVmKsynpD84tcMo/jeOU699Y/ZZsxfGsbv2fsh8Do6cGC/9jVn7yDqKL3u
HHuNzwirJg8eweDYDvRt2Y7Ryb0YP3DYykkJq7bKvXIL+wyxB/pO7tUnp3bK
vXs7mjaOoLJtIwpqrT4JCTml2reTffHYt5O1VEHRqZZ2Yk04+RQUqzVOrHVy
EUa5eYSqjqLXW+8RgjB5f2puuWqULPFTGVw/k899SWM7yoSj5a2iS1o7lUkV
fE28Wm1bjz6nXsorr9EjtRT5RDYZT0fNRE5pPqmY2ogsqtHgHFPrvHoGm6aC
35PNGYSF5TqTwszyYl6OfeANp1gLUSj/luX5WtXzWZzqUKaSU8b7GU3V0Nnj
5JRdVzU7+r9MYxd51bdJ7inCIq4RGj5JtA0MO71iS2+/1n9VNgovq2tRWVun
/aR4bZAjV9NRU3tlME1r2d9L3USNzrwVc1O6F/nkSdXwM+dfzXHqrX/MNmf+
krD3vzP1nDo7++BBxzVpzQbReaFy+V24dAUnz5zH+N6Dyqjh8V3YuucAtu07
hO37D8mRffB2K6PGeBRODcvPHJyYRM+WHWjftA0NvcMob+lBrni+jNJapBVW
ISmnDDFpBaKnshESl6H6iYzyDo7TGnFXb+6lER3lYWmpNev8sHKNN9w8QxAe
k460vDLNc2XJZz5bPvOFwptS1k1LlLdYM935uefnn/qksWtAcz7MN3FuaaEj
32R0E4/F5EaFlYsqcHCpQLiSL9rIBJ9br1WgoHiKTXnFrIMURgmbMgvKJMp1
rpdhlJ1T7LU8xakmp+eb4lS7U0/9Eae6pnPqj4LM6unXmvnG3kG5RwxZPbGE
S9TAziP1Vt+gzqCubxef2dCs/rWsqhpbtm3H8RMnnYyaWS9lZ5Z5ned8v3mN
1xmvL1OjQM83c52P1+Oc57s2j9nmzP827L0QTL9z5jd5v2MtAq+dabV73A9z
5hy27dyDniHOsNyM0R17VENt3rVP66a27tmnOmqMazryM7awv7CwamjXbvRu
Ey01OoGWgS2oau/TfuH5Na2ieVqQWVyre1OiU/MtTsVmqJbinmCvoDh4Bjoi
IA4evlFw2cCeLgHw8otAtGgvzhTNEYbkMM9dKxqK9dusMWgT7SR+j591fu75
+a9uYR66T1/Lps4Rnqh/E0bwSH+WTx7R48m5nU158n7DHh75XHklR2VUMV8X
XnLmoLApK79Mf7fMAmqpCuWUYZVdSxlOcc6Oqe8s0/W+P+aU8X5kFGcBModk
Z5Uz2KuK+1yEUQ09g3IclPvDEBo3bhJObdKeDq0a1loh+UQNVS1/O5P719lW
Tc3ay86umexhZ5OdUbyvUX+bXDrXZajT6fl4L+R90Gipq9Whz3HqrX3M9t/2
fxt2HcUcAddeTF0L9bmZt67Xo1x7r71+Rnu0dMh9uW90K7ZM7hM/x1qDST1u
2b0PY6KlxvaLnhJGjQijBnfvQh/r/bZNoHNkm3xGRlDR2ovihg6JTmFVB3Ir
WZNepZyinopIykFwdIZoqRSNgIhU0VZpevQLScIGr1B4eIciOCweSeITcziD
VDRRPvfE1jaglLVGbcxDiW9p7tTPuvns12ruvFe0UyPSRX+l55Wol7N7Oq23
dDDJ6CXDJ7KHQU4ZVuXKMU/Dzqdy/flpuaWOf6dM/Z7hFBl1NU5pHl1+1+m+
r03DsMpeV0pG2TmlIYyqpybq2oi67n6JAWWU4RS1VCu9n9ZdDVj9QbnPidpT
/n7sz8I+LWXCqU7hHHuX/ykfZ4L5JK7l8boyOXSzHshriNcarylTR2W0FK+9
62X/8Wxz5Fo+Zvtv+78N+ww+5kV1JoNcP7zfmTwpa80vXrysjDonx/2Hj2HH
nv2YYE+pnbvRNbRZ8xqbJnapnhqT17cKpzYLo4bZ/3zXLt0nw94IrYObUdM5
iJLGLhSyFkGioLYNWeUNSM2vRHJuORKyyKkiRCTmIiQmUyMsLluD5/5hKfDy
j4F/UCxiEzKRJZ99erFc8kV8W3Fts+5vqbTppwL53NML8rNfJV6vQjRcTnE1
UnNKkJJdpH7M5MRzySgHj+xHBplk8afUySrznJFLdvE1ri9KpOeW6b9hIs3G
KTujTDjzUxX1+jvz9+Xvb2mqVmc9qd3z1XVM9UPXYJ900U5kVF13n/KJUdvV
r4yi36O/s3LlEqwLZT/O7o2obhYWcuae6Cf2uuvpH8KhI0etXtKiiez5cLtm
4n2upaUFdXV1yMzMRE9Pj1N38TrjOb+Xmp33QZOXov+z90yY7c/DHKeuz5g5
g8/qI7xdvd+Unrd01KU3LU6deeMyjp86q7Mp27QP3GYMC6PGdh/Atr0HxecJ
p/YfsGrPd+/WPTJdm7eiST4T1R39yij6vNyqZuVTckEl4oVN7OPEfinxmaXa
dy4s3mJTREKuRB5CY3IQEJ4O/9BkRMZmIiO7GHlkSAnXziq1/sjoD2qmwqpG
fS3dkQ8qqmLdQIvWAlDXWOwolihClkMbqS5y+Dn7c/OanUkmMnKLJUqEl/J1
7lcWPvE8w8Go5KwiYWGxnqfnlznz5zM55dRT5XU6m56smtJTU1rK5Kace3SU
U2RUr/BItBP5ZMLBpzoJnW2qc5hZh7AZ3ZwXyPW+fs4G5Zz1dq33Yq1Xv3zt
zNlz2kPqjYuX5H51xXk9mFwTH7xW4uLi8POf/xzvfOc78e53vxv33XcfNm7c
qNqK7LHn2KnXrX761l5k3gvtfm8ud37tHrPNmr+EUUZHGUaZumGTkzJzGcza
HmvOz7xxCbtfOYou7skfGBFNtVcZNb7vEMYPSBw8ZK3z7dmHwR3MRW3W2b/V
HX0oa+5WDUVGpRXXIj67DJGp7IvHuVfWMVT4xJ50ITGs9cxHRHy+Mio4Kgth
sTlIEK2VV1QtuqdKc9LkED/vuh9OWMTPOJ/z9XThRkF5PaoaO5VRhk/ME6XT
iwljMsXz2bVR9lWYRR7xfQzneS5DzoVHDLLJBJ+nZluMYiij6PtsOXRllESm
cJbhZJXZ21fVqLy1M8ru+XR/j+7x6dYZGOzdXCucMkEtVU+vRx3VxdqqQV3j
o/7t2bRFOUUd1S3aqrGtS+cXs+fBjsk9wqfLWncy1Z9lijW8Zujb3N3d8dGP
fhTz58/HjTfeqMc777wTv//97/V9vP+ZmgTqcl5T9Hm8zni098i7HnLnc5y6
/sL4PVNvx/sbrz1yivkC5x4IOGZcXXbs35PrlX2DezaNYnDLOLYKo7bt3o+d
hw5j8pUjGhMHXxHvtx/Dord6RUfRY9R19qO8qQdF9Z2ioZqQnF+NWNFN4aKb
QuKzlU1hCTnwj0y1+mUqk3I1giIzlVFRSQXyeRd2CN+yCiv1M09tQj/HzzX5
RF2VIkxIzCjQnBDZVNvSg8KKBqemyRb9liORkVPq5I5hj/FzdkZRL3GOKcPS
TqX6vSYMp0zwtfSrMCqjoHyaluIxQ7xkuvw7PJJV2Y66dHo+ainL7015Pmd+
inVdnO0ifFFOdfaghrklsqrT2o9Yz/p6Msqxt4Z7atjvpXd4i4Slp7pES3E/
NGdY0eeNi4+/wPlVjtwTdRSDzOG6Sk1NDf7rv/4LixYtwg033KB8uummm5ys
uv/++zU/bphG7hi/yDWZqzHKrqXmOHXtHrPNnP9pzOzfymuP14vOMh4ZwcDA
gF5HZJczP8r8ArW/nJy+dAU7hUH9m8ewRe655BX7ne8+ckznXCmjREdxjsyW
XXt0BkC33LdbNm6Sz1QvCmvakFnaiMTcSkSJJgohl6LT4RfJvuNyDE/TCIzK
RGBEBvxCU+ETnKQ59Ah5b2quVVPOzzoZxc852cTPdHZxtXIoLjUXsSk5el5U
KXqkulnX2ZhnT80sUj5Ri1lMKXX6OKOV7FqK52RTSma+hHAvq1j5Y8L+3PDJ
MCpV/n2n17tK/pzB52nybzHIKa1L4D6a8jqnlmJtV5mjJ4PhVEWTtT+anNI6
MOFUdYdDU0kYfWX1lunVaBJOtfYMqMdjzUEHeyKL3mJfO/bgrBVOcR4HZ1jR
6xlObdzYh9zcPDz++OO4++67cfPNN+Ntb3sbP8/KJ8Mp6qhf/vKXWmfgXBd2
rPXxeqNe51x25qaYUzD1nNdTP7zZ5si1fMw2e/5c2Peaz+yFz3uZ6XPO+x/3
slNL8frRnCfXkrkfi5yi1xNmkT/cr8q81HbRS2TU3mMn1AOSX+P7DurrfN/m
yd06+6ljcLN8ZvpQWDvFKPq8oLgs+AqfvEKT4R2SDJ/QFJ2TwPAKSsQG32i4
+UbBIyBGa6ciErOQKJxJEQ6k5Zcpo6g72P+EDIhPy9M+MGQU2UBG5Qq7ElPz
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
Lb7f6CmjpbjWN21/TL5Vv6U5dAn2KWXMZJTmpBycMnudySjDKeUQdVVts7U/
Wjyh1duzfboPbGgTv9eNjUOjOHT0VZx47Yzud1m2fBU+KVpo3g2Wd2NuaeXK
lVp/Qs4wx5SYmKj1mWYNz/g9+jw3NzfNQf2pWnRyiH2FybumpiatRWcPT/5c
so2sMj3QTb/OmWt9sxmzzZJr+Zjtv+3/hFHa647reoePYL/onT3CqeNy/ibn
WIH3QatHEOujXjtzGsNbt8r13oB6zpwb3Yy2LWPoZh9zud56t45hVK63CWHc
zlcsPk0c2COM2oVNci12icZvpo4Sj1HQ2IH0CmFUXjkiWLeZmCueL1uDe4vJ
JkZoHPfEpCujuM+YXPLwj8QGYdJ671Cs9wyBq3uQ7jV28wxWnURW+Yo3JJPI
LHo8sorn9Hr8GhlEzkSwt3pMMqJiU3RODWeTBokmCxX/GBaVrAwz+oi84nO7
jrpazMyrGy2lNQm5ZU5GOXNTZn9fXtk0Rln7Zuj3qlRLkVOm357RUoZTZl+0
YVW59qHplqP4v7oW9Xjsabfn0FFcuPwmJvce0FqDX/7mIWHOIswX/2bqneTS
xTe+8Q3lCq8PPtgb+CMf+Yi+5/bbb3d6vs9//vNobm6e1mPKzideZ8xTca24
Xe5rXI8xvTnJJfLJzJfh+65HTs02R67lY7YZdLVwruuKJjpn9uy9dgrHjhzF
gT2igSZ2iI46iPNnzorPe3Pqvsj1vDNnMC7XVO/wCPrGtqNtZAuahkdRx/5D
Q5s0N7WVNXri8XYcZE3nPowLo7bt24WRnaKjRN83D25CtTCqUO7r6WXVSC6s
RJxojMjUAq3lZEQk5yE0PlP7SQVFWUGv58l+d95hWOseiHUeFpcYa9f7Y7WL
r4QP1rn5CbMC4O4doqwipwyjeCSfyCmehwmHQtk/PSwO/kGRjvnuEcKoGNVh
5BS1FHlkPN7MILcYV+OU0VJ2RmXmTueT5qUcjLI45WCU1qOzDqzSYpRjvozT
87EPjaOXjL23DPmkX3M8r2vtRu+mrZjYexDHXj+PiT370Sc6ys3DC++794NY
cOPCaR7O1BR88pOfVO3EfBH5Qw3E2gO5rKflon70ox9pHpx5KLOP2K6nTN8D
ainTh5PsMT3u+DWyiut8zKOTXeQU92fZa9DnOHXtHrPNpKuF8ukNOUqcPS+M
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
ZN/f8sQTT6C2tlY1Deuj7D5vvoNtDHpDaqwHHngARUVFmu8mR+z5qJnaycTM
HDvPySPmzs1an31+6PWgpeY49VdmFGcG0fOJljKz9vbs3o3NI6Oio7bjxLGT
urbnzEnJNXZRjq+euYDBrTtQ196rfT/Yc6Whi7NyxSeyl9Q+qx/nKOvW9+xT
RnHueu/YuFUfJd9XJPqroLZF9+6VNHYir7oZKYVViJHPc0hsJoKi6POStZe5
R0C05qS8RVORUetFS5FRnMHgItpIGSW+T2ONl/q/l1e4qQckt8goe/A1o6MM
m8grw6xlK11VS7m4+WCDZwA8fUOda4SGU0ZPzdRSln7K1SCj4pPzVUuRU6mZ
Vl+ErNwSR/+p4j9iFPcL2hmVXVAqHo4990q1X3qunPN5LnsTO/iUkS3vl+/j
e6mj0uT72UM5JDYF//LDn2LefNFRC24RRi3CzbfdibvecQ/u/cAHnUyyr+fx
yPqCL3/5y6ioqNCagU9/+tPOPXp2v2evOef5P/zDP+DJJ59Ub0iu8EHtY/ri
GW6Z85k5dtMbwWgp01eYtVdkl30u3xyjrs1jtv+2VwvqqNdVRzn6mguj6PN2
Te6Se9cZ9XpkFG+JPL3ImryjJ9DWu0kYtVHnw2WU1qCitUd7lveP79D1Pcam
SR73alBHkVHMR5FRZc1d2u+O/c15zCqvR7x4oaj0Au3BaXqaU0v5hiZqrblP
UJxqKfV8Ehscc/e4rkc2rXT11Vi2Vji1Rli02lN9HsNoqCk95akej5x6eek6
Z5BRzElNY5RPsK4PUk8xN2X3faY+wdQhWLVUOdM4lZDCfXyF6vlYy0lGmcjM
cXCKR2EL9zIzkjO4XzAHWfnFwh7qrUINzmnnXD/dy9I1gE72sGtsR2lFjfzs
fOFeEZLlWFhRrzUMzy5dg0985su4/a53i566Bd/+3v3y3xGM555/EZ/4xCfF
ty1SJtnz5yZ3zjU7FxcX7a9pWGQYNd+Ry7Izy3CONemurq5aV877nul5ziP1
EOsLWMfJNTy+bvSVyVvxfmn6ClNT2fNS9v17c/nza/OYbSb9EaPOn8Pps6/j
1OnXnH3ueO3w3Fw/5NMbFy2vd+6NSxgWDVVa06z1z6lyH4/JLFQ91DwworOL
2XtzaOekzlonmxj94zvRs3W7o2fwRuHURu0dzFlWOZVNqqFYJ0VGhSfnap9g
ciooMh1BEWkIDE+Gb3A8PPyilFM8+gTEqKZiHQLZxCPrEhiGV+voCSXWuvhh
zTpfDXO+Uji2YrW76CY3p67i+YrVG6Yxyss3RP6tKUYZv2dpKXIq0VlHZdbz
DKMsTpm9Mdy/V6hcsnOKQS2UqnuY81UTJafnWFzKKURSerbO8eMeluGt49h9
4DD2Hjqi++y2j0+KvzqK8YmdaOsS1ueJDsst0Fw7GZUkP9fFOwg/ffARPPbs
ywiNTkCpMC4jOw/PvvCi8Ogmp4czrDIsIpu++c1vak0CuWU4xvcxF2W+x55z
5znfz9z7l770JcTExGjdJtfpWF9QUlKiNVU//vGPsXbtWtVKdu9nclhmLh+v
RbPGR77NMeraP2abSfYwdeZnz3Ft7xSOHjuMyckdcl1s12vCXDOm9oA66vS5
C+gd2Kw53GKdt9ImWqpN57w0iLZizqlv+7jqKXJpYGLSyajuzdvR3D/inFXC
fXuFdW2iw+qUUQnig2IyixCdUYjIpDyEx+cgLDZbPleZyim/EEtLkVW+IfG6
B8bVK0RrOsmlNRsCtLZT6zs9gzVYh85cOXPmLg5eMZg7X7NONNY6L82hk1WM
lWs89PkaFy8no3z8wxAQHAV/8Xr+IcKoMIeOiohHSKQVYdHJiIpPE0Zl2jiV
46w5517ApLRc5VB6VqFTQzHSMguQkp4rxzyN5LRsJKZkyntz5b35qKprwvCW
7Th68hT2vXJMe6mUlFdh+crVWLx4CZYtXYrg4GBkZeeitaNL/GI+4lKzlU/c
A8ja9RT59xLk32E9Q3FVLcoq6xCbkIRv/vO3tY7TsEUuUc092b2d3eOZfXpk
k+m7aXLpPJ/n0Fjm57Hu89vf/jbWrFmD1atX6z4bk9ti3fqyZcuceSujtcws
Gea27DP5ZjKKMTeX79o8ZptN9jAzrKilTrx6XK6H3cooa17xGSejTK35yVNn
0Ds4irKaJjSIHtIZxD3URpxBMoRW+VrbphF0jGzGxm0T0xjVOWL1PSDLmvs3
q89jHiqtuEZnLyTlVyinqKdiMooQlZSvMxfCYrKUUf7i+/zF93HfHvfD6F4Y
CbLIsInMcvMJ070yDJ6v9whWRplw07ns1hrfWhcfrT1Y4+KtwXNTl8C1PQ/R
IKxB0Nrz8HgEhEYjKJwRK2xixCE0KkEYJVoqNhkxiek2RlkRn5SFhOQs4U62
sChP2JMn7ClQ7UQ+pcnzjMw8ZRL5lCIaiueFJZVobuvCnv0HcV4+v1W19eJt
vfDAD36M226/A3e/4x3KhjvvsPphfvrTnxWfugbh0fFIzS7QWtBkYWBuOWs6
KpEn/i+/3Ko/5wyYgpIK+dt44ZZbbxdmLHAyxhyNPjI8YnzgAx/As88+q2t/
7MNJZtl9H38f+/fy3Dx/+9vf7mQYfybfy7or5uVn5tMZ9HfcK0PfZ3pNXU+M
+lvm1Gz+TWfWwTlnWJ0+hRMnj4v3PyD3rm3YsmWz5iqtOjw449z5C9ixez/G
duzRvv01wpkC8Wp5Vc3aF4raiDNJWnVvzLjyiZyiz+sY2aozrMip2q5B9Yec
DUNGUUcxyCrlVGYxYlJFTyXkCaMsHRUclao9o/zDEnTfnuEQOUU2Mfic/Pqj
fX3CJLLJwysMnt7hcPe0XuM8UVMn5brBX4P1UwzWdtLncZ9MSHicfPYThUdx
op9ilFNkVFh0vPKJER6TJFoqVThlPF+W8ClTg4zinuWE5AxlEIOeLlN0EvnE
SHccc/OKVecMi+48e+ENDAnvg0Ij8P0f/gS3336nfC4sb2byRqzHXOioybz7
He/EN7/zPf0ds1kfm5Yjnq9CGZVeWKn9PdmvlHVTFaLPktKy8OP//JnWds6b
N3+aDjLayeTWWWdOPjGnzb4I3Hf8ta99TV8363yGb/MczDLfa37WPFt9FfXU
D3/4Q82P2xllzun3uLbHGlKTk7pe9sb8rTOKj9nk09UYRc306qsnhEucDzMu
jBqV+9cuvSam6uw4J+RNnDn/Bk6ePodtk/t1L1loXDoSsoqRVVaP0qYunZdE
PcUcOfnUt32H+jzm1Ns3sY5zRPNRrDdgrjy9pBapRdXKKGqp+JwyxGaWaC1n
ZKIwKjYT4Yw4zl1I0d4sXoHRyiEeDYeomcgl76AYDcMx1VXeYcqnqVrOCOUU
ueW6wWKSm0cg3L2EY94hGp4+oZbPC+Ee5ARExiUJhxKUTWSAYVR4jMUnp5ZK
oOfLcPKJQe8Wm5Cq+ohcYKRnivcT3ZQmvCKrskT7kE9t7T145chJ7Dt4FBXV
dXj2uRfx4Y9+XBli5q/Mc7DD5IhY67RwIXkwH3e8/R488KP/hF9wBJJEryWy
Nxbn1MjfNrOYvT3Z17Me5bXNOpM4JCJa9+7Nn09/Z3k28o85JePr+O/Rp2Vn
ZztrnpjDZh8D9sH7+7//e81Rmdy56Y9g9JfJc9nrFu69915s2LBBPZ3xeKYO
gdcmuUSvRy3F+6WZx3e98GmOU38dHcUwfu91Xds7omwio8gqriHb114uOWZZ
sULv8InX0d63SfuHJHPGgHCGc6lqOgfEy42ie8t29XtkVefomO6XaRkYRX3P
kObKWRfFGVbZFY2qpexej/v2YjOEUUnMn2dob+Cw2HQERSZP689iWGTnE7/O
IL+YsyKnePT0CVc++fpHw8cvahqnqJnIJS/fMHj7yfv8wjR8AkJVM0XEJjoZ
RS3FIKNCo+KVSwxyKjw6SXsoxMSnKZvIpbhEnqcrp+KT2UchFcnpWUjLylU+
UTuRT6Vl1Rif2I1XXzuLoeEtiJF/81vf/q6yieyZZ/NQ9nU0Z8851SmiWW68
CW9/53uwYq0bYlOzNC9FRsWzR4z8nbNL69T/lVRbWorrgX949AksuulWzLth
SjvN7Bf1gx/8AL29vc59L6avATmSlpam+XXDs5m6yf77ct8NaxueeeYZncXH
h9k3Y3JTvB6pn+gDmTdnfvRqjLoeNNWsQuQaP2brbzrzf1PTR4r3xRMnjmH/
fs5Am3Du72QewFnL8qbVp4VrfGcvXsax185gcGwH8sSzpYsOyhXeMH9e1z2I
rtFtTka1DW3WugMGv1bZtlHrosi0vOoWzZtbGkrYJPf92IwiRKfmIzI5V/xe
loZhFL2eCdNHyvDJ9OYko+x+TxnlZ/HJLyBGj+QVfZ/l/8KUT9xf7BcYBd/A
cHj5h8An0GIU+RSdkKJHaic7o4x+Yo+X8Cg5F04x4pMylE+M2MRUhEbGKJ9S
MrKRkib+LzFF9FMesnMKMSC688zZi9iz9yC6uvvw+ONPiRa5Rff9zpuxxm+4
RK1iZ4F+nTXkooduue1OfOffvo8o0XQxqTn6vw3/vtSr/FtnMy9V2ah9Eiok
ImIT8NkvfFn5xlp0+35jo6W4R4a96UxNk6l1MjXieXl5+MxnPjNd39n0k6lh
Z01oenq6fo+pk+J90L5vhvlxrjFz7x7rzc3ePTKK16x9LsMcp67t46/9t7za
zA2737P2oB/T64Jrvwyu/Zp5jvw/i1OWlmIcOHYSLb1DSOe8OvYIF89Xy5rO
zePoGBlT7cQcFIP6ivly5teZuypt6nbOVKfXi88uRZzc72PZB0EYFZGUg/CE
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
hUXRMM1JhQ3paSlandKLXdbswRGic6vbXLpfh/fgvRJzEr/Orc9dlE6SrkWp
85VoyoCDJMYu+6Rr8Ep8y5eepolh+nqzsPgxMM1Hvoa+ziexKeEp0UAX7XPY
V9IPTuLTkkeg+3W+YtTfh6f0bXRbSI+ty3D7cm7byVRupulrzMLip8A0HxU2
dJtF/D7En5ELAB4SzgI/ISYkvXglBiS5BLqvVdT3fR+e8qX37e5t8HP1xLTc
ZGGRD9N85GvoPUgkbi09wmEnSdwaz+Vv+IZiN0n+0o/57u9jU/nyCXV+Es0r
G3OysPh5YJqTCuMoPQ8AsR5wkK+ecO4+3z801+iH9F9x93PylRduc50sLH5e
mOYkX8Pto0kcSF9j0+PTel3uj+XFH+qXma5bsdxkUZJgmpMKG+7YjnCV8JL8
/WtxhC/bycacLCx+eZjmomtxlK/8Jfyt97f8tTjK9DExfa1YWJiC6bn3Y/ir
pH236WvEwsIkTHOOHZabLCyuBdNzsbBR3DQqLTdZWJiD6Xlph+UnC4uiYHpu
lvRh+vxbWFwPMD1PS+Iwfc4tLK4nmJ6vJWmYPtcWFtcrTM/dkjBMn2MLi+sZ
pufvjTxMn1sLixsFpufyjTZMn08LixsRpuf1jTBMn0MLixsZpuf39T5Mnz8L
i5IA0/P8ehymz5mFRUmC6fl+PQ3T58rCoqTC9Nwv7sP0+bGwKOkwzQHFeZg+
NxYWFg5Mc0FxG6bPh4WFxXdhmheKwzB9DiwsLAqHaX4wPUwffwsLi2vDNE9Y
brKwsCgKpvnCcpOFhcW1YJo7LDdZWFhcC6Z5xPKThYVFUTDNJZabLCwsrgXT
vGK5ycLCoiiY5hfLTRYWFteCaa6x/GRhYVEUTPON5SYLC4trwTT3WG6ysLC4
FkzzkOUnCwuLomCaiyw3WVhYXAumeclyk4WFRVGw3GRhYVHcYfnJwsKiOMNy
k4WFRXGH5SYLC4viDstNFhYWxRmWnywsLIo7LDdZWFgUZ1husrCwKO6w/GRh
YVGcYbnJwsKiuMNyk4WFRXGH5SYLC4viDMtPFhYWxR2WmyxuRPx/O+OnPQ==

    "], {{0, 305}, {297, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{297, 305},
  PlotRange->{{0, 297}, {0, 305}}]], "Output",
 CellChangeTimes->{
  3.727217712849637*^9},ExpressionUUID->"e791f3db-f0c0-453b-800c-\
026af2aa7e36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"val", " ", "=", " ", "1.9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImageTransformation", "[", 
  RowBox[{"imagen", ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", "#", "]"}], ",", 
        RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "[", 
     RowBox[{"val", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", "I", "-", 
        RowBox[{"val", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "I"}], "}"}], ".", "#"}]}]}], ")"}]}], "]"}], 
    "&"}], ",", "600", ",", 
   RowBox[{"Padding", "\[Rule]", "\"\<Reflected\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.716236442698291*^9, 
  3.716236454329885*^9}},ExpressionUUID->"b633caf3-f330-4f93-ba47-\
70199403a6a6"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeUXulRoD0jTbLHNsY2uxgbE3aJCyywxsDu8rOwZ1mC1/zA+Y93D2tY
AwZje2xP1Mwo5xxarZZaObayuqXOOeecc6vVynlGE5Sl+uupe+v27R4N2HsM
wjNfn1Nzv2593dN9b71VT4W33p/4q2/96d9OeeSRR55/Sv/zp1+e9jvPPffl
V/7so/rJ//fN5//+7775lb/5g2++8JW/+8pzv/FXU/WLSfre/6nymL6+efOm
JOT7X27cuDFBrl+/Lm+++aa8/vrrcvnyZTlxclSGRgalq6dTuro75dTpU3Ll
yhW5c+eO8HH/vsi9exJ93L13Xy5dvioNLa1SXd8gWXn5kltcLCVVVVLf3CLt
3T3S1dcvA0ODMnx8QE6MDcnpU8fl/NkTcvnCmFy9dFJev3Jarl05K29ePW/y
xpVzJrx+/dIZk6sXTslrF0/ba77+1msX5O3XL9rV3//GlQsm1y7zfef0e87I
lfOn5eK5k3L+zAk5d3pUTo0Ny4nRIZPjo4Myor8TMjAyIL1DfdI90CNt+rc3
d3ZIU3uXtPT2S01rl1S3dEljZ7c0qDR390pb34A06rWiqUVK6pslr6pRskvr
ZfuBbFm/47Cs23ZINu7OkNUb02TL3mP2tY270+1re48WysHsUjmUUyY55bWS
XVat12rJKq3Un1Ml+ZX6ub7OKa2SowXlJul5pZJZVCmHsovkcE6x7D6cJXuO
ZMuW3YdkW9oRSd2+z15zRVav3yZL16TKnAWrZda8lSavzloq02Yslhdeni8v
TV8kr8xeLrMWrJGFyzeYLFm1SZYnbZXVKbslKTVNkjftk5RtByV1V7qk7jkq
qWn8/kdkc1qG7DiUI/uySyS9SH/XyiYpqu+Qwrp2KW7olOLGLsmraZWjJbX2
nsO5lXI4u1xyimqkrXtIhk+ckpuqT/fu31O5rVp0R95486oMDfVLt+rc2Jjq
hurUtTfeivQU3b1169ZDXz/fa+Fv8r/L/1b+7itXX5fTp0/b/ejq6tA1ds7u
0325LXfu3Za7+tmp85d1zXVIuupRcXWH6l6OHMwrl2Nl9VKoX+c58DzKmnvs
2fCc+Pe0zCLZcTBbNu0LnqkJz1efc8rWg5K8eb8kbUiTlck7TR8Wr9woi1ak
mo5Mn7vSZNrMpfLijEUmM+euMP2au2StLFieIsvXbpK1G3eaHu7YlyGbdx20
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
W7WqTln/uu0B9nioz/gK4Wusa8R7sJjXbjZhLNhHGI+/jLM0LvNZVJN73uNx
nTNWPL/uNUFnK4S40WZrqW3zeqD3sZPTJ+6kVxUbCV95TZBzyOCrmtp6ae/o
esfZNxPiXX1Jngq+Yo0h3s/uPVfxXpF4jJ3IVyUkIf80Et9P6L0h+ELWJXWc
YC5Wr/W9s+eJNRlf1/GzdG4TP42OSTNnIpeUSXlVteWv4Cpqhr4XBjtCvwG9
EPS9MyeBOX8nT41ardBmgrJ3Gdt2PuCsCxeC+e8+28rmtOv7sIEeb1pN8FQg
4+fiDEd29Pho0PfArD1m4BBDsl/b9kIPDgTnPnczg0/ZSl9zfgYz3rv6emzO
X0unz1FulOrGRjt/sVxtX3lNvZRUaoxdHjBWdnGZZBWWBXF56D9gK/cpcb5y
xsIHwVZbdu4zWc+ZI1t2y9qULbImeZPMX7TK8laz5y03//bsCzONr16cNjfq
u7LaoAp9WfMWJkW9NF4n9Hmi+FcXPnffSk2IK/mOFSnqe9dvl7Wp22Ttph2y
bqty3o4Dsl6Zb8uRXNl8ONcYa29euew6WmB5lF1HcqS+tcv0wHWE3BW6QT2s
tbXVdInX3mv7fjmTgzyd11/4u4MZDedtXcFXrLt47ooP7htnfm9UpqW3nRph
Wm65bD9WEvCVCry7QZ9JsupK8pY0WZ26054dfMxz5HmiB+iA85X3u/vz9153
1xebhxWyFczuOSwYC51D9158ea7pI/nURdYTuEEZa7Ns2b7XxOID5St0mrgB
/fbclQtrwoU1Al95vRC+yiurtPXEuiI/DF8Rz8BYrD9mQsFaxD2sW9jKe8Tt
/HafxUcuXsXOxYmdNzhuH8YZK8prqbh9GZ+jF8j5cycnMNblsA/r0qVToa0a
G2erMyeiHP0J4sjTo8ZU3sPueX3sJEI8Sr6Ks2+woWXllUEf4z2J4pbJH7A6
9pr4BSEv6v3sPucqnp/yGDvOWAlJSEK+9zJ57qjH1zAW8Q95LHyi7+8l18z3
+dmEk+Movv/c+YvS2zcgteTzm5qtPlhZW2f7X+AreIs4rXdw0OzhIKw1ejyc
RTMmp86cVAniR7NnZq+CPBX7Db1P1JmKeBN7SFyI/Yrnqdx+DofnPHPWIsxk
orY24quQrZjBxxkS9u9qj+EwZh5zhlBnd6eds1hH7qqhMTqrgvwVfFVMbbCk
XLKZIV1YIun06x7NNf/hMTvXuLivIa7HH1Fnod+KuaKr126SpSuSZfGyJHl1
5gLLGbz0yrxY7mq2+blXZyw2Hzh3/mpjK3qQ6ZGZtyQ58q3xXhs4K/4a30q+
gj2H+Ff88Mq1G2VNykZZu2Gz+uLtgf/etl/W7dLfMe2obD2UK7uzSmRnRqFk
ldRKTVu/1Lb3W282+0u9NsgHbEG9uV55lD1N5G3Qr/i5HO91vvK/z+uDrCPY
qrm5WWpVh8g7cJ+8z9383q070j96Rqpaeu3+7j5WKDvSC2R3dqls2J8pKbvT
Zd3Og7Ju2z57PjyntRu22nODsXi28JXPPvPnTf5yco04vpeQ985bsMZ0yZnd
+7Bg+zhjzZm/QqbPWqw8v0I5a43FA6uSUk2PPVaAryaz1eRYwxnrSLinkBgF
cb4qraq1OIY1V9XQYHxFnMPsTWZEsXZtzYbnCvYwM5j1TLzEuTiDQb6I9U5c
NTQSxFnHw7y2S5DvHppw7oTbmeAsiCCu8/z5eTv363TEVYjHfrDV6ZCv6Kcf
sVjyuNUD+Z3gKWJOBJuIMEsQKSktN75iPhwSt7f+ga6gM+gRAltRf4evqEGg
Y3G7PrkH92GviYQk5P0iD5qLxYwi9jjhG+Er1q7PqCMmmlwrjMfdFy5ckv6B
IamqrpVitRXEZEhhaZnFaJ29fRa7OWNhc0bGiPFOjM9VJp9lc9hPTuitcqai
DxWuok/1hM0KDPYFRee1kq86EczsGw7Pw4GVqE32wVnD/ZHdJc5t66KW2Wrn
fTFXu69P48HeTmMrmAv2wp5z1iK9p8ZW4XkVsFWhxtt55K7yi+VYbqH5CvwG
PsT72ON7BT2md6Ev2M8YZGbjKuWrFavXy8Ilq+WVGfPVr82Ubz8/w/yb+zj8
3SvMYwj5Cq5asmy9zW5YvHx91K/M1fua8afed+V5C3ww5/ouUCZbzmz3JOWr
5FTz18kbd0ry5j2ydst+Sd5+SBnriGzZz8yGfMtdFVW3yOU33xaqWm/duBvM
R4sxFjpFHrSjo8NyWPgCz2Gha++Xvg/3cbCl76VsJA8TcidrSmL3jvsIbd0K
hV52GGv7oTxJ3XvMngPPgxouuSvOWU5at1G5PJj9uWTFBpm/eG00B817sOI6
4L3tPrcDXUB3YPRFS9YZZ5HLshrhq/MjvoLtXZ57cYbMmrvE4gDiAc4ZID7w
85+JG9D3eL7WxXve+TqxCEJcQnySo3EK8Qqxi/FVbW10pjzxDfmr9s6OMPbp
sLXt89l7dO3amg0Zy9kKYd3DYr12Vur4OV4+s8HnxxhjnY71cp4MerO8duiM
ZUx1Prh6zsvslMaJxIzk5q3PymqBQ1GfFTYQtsKWIMSh1AIrKqv1/3PWZHKd
YPLn1BSw0TZTR9cYrzmTw3sbH8RXCUlIQh6OxM8oxP/BWL6nkFkq3kPD11iz
Hm/72Vd3796NYq2hoWHJyy+U/IIi46yK6hrbX0h/geexTHqJO4fMBpE7Hxih
dhjUDE94//vZMctpwVRu6+Aq9uEwu9TnhcJWxKXEp9QdA9YalJ5BtWd9XdFc
+aAmGEgX/VW9wVlf7V0dNmOcuY9d3W0mHV1Iu7S0t5hNR7DzpdXVxlbYfuer
7IJiOZqjMXhOwYR+9slzGOhLoXbic0XpB6Znhf4VP2eQs0fWrNssy1auk5lz
FqsvmxmxlXMW+SzyWtNnLZ3AV0uXb7ArvtN7cFzi8xnwwTDVnAWrZd6iJFm4
dJ365s0232j1umA2d5Ly1ZqNzB7dJ2u3HpCUnRmy43CBbEzTvyejQPYrY3UP
jsktm3VFXH13Aid4rx9M5fVm8qLE2N53+16Pp33vIGuKv5scA/eC9QR3su5Y
S/Ez5G7fvmu8+vZtkZLqZtkT7hXkvm/el2XPYe22gzZPI2kT8612SNL6Lfbc
2NO3bJU++2Upxs2z5q00lvY8putFvD+L19anFfI5V/SJPYPw1SszFhpfxRmf
199+/lXLr8JX1AnhK/QGPUaffc6I97mj+9E8kkmzG1gvxCXEKKwl+Iq1hURn
7+naC3o7W00852yMFcZGSKeu3ZbO1glndnnOmhgLvnIm83O8PB4bCT835jo5
Es5UCGb2YYNOh7bI64dBDHgyylfBVfwsrvRBEEMGtctB67XC7hFrIvRYsV+w
sqrGhD7202fOvWvsisBVcDoxLz18xCzs98ZeUy9EJvPVw14DCUlIQiYyluex
/JxCfAGc5X3K8R7muG/ABvC9TcpSTc2tVjOsra+T0ooKy3+zN4Y8lvUdaOzV
Ru/AwKBxFmfC9ytjDY2y1+e4jMbmxARzl4M9gCOWlxoyjnK2Ih6Frzj7kDrB
0PGh4Pyb3m6LY73vIeiFDXrbYSt+B3plWzrapVtj3x5YDLbqbJHOrlZp69Df
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
q3d4nXBn6Ed8lrX3uPv+wXfNYaWEZwGGtUDnK+ozKanbja/Yk2/zjsJ6DzkJ
/OasWYusxketb/qMOcpOi2S6MtUrr86Wl1+ZZdd47orPV65Kltdfe0uWLFmq
nEQeRblqapA/mfLoE+bXH3kkyKX8yq/8h8jvP/rolCh/9Uu/9EvS3NwcPWNm
EPgcAj87iXwO+uHzGXzu08PW+e+l8Pd4/or4gr8ZvmIN8O/OWLzP54W9+OKL
dh+ffPLJMJc1JXaPp0Zs9dSTH7JrkEcM8oW/9Vu/Jdu27ZDyilp77jxXcljk
JHnOPF8Evoa9YGlqiuSx4Ks1a1JlxYqAz9EjeGu1shN6tnHLblm/cYfpIfoH
6zvvG2Mlb/yu+Cqev4rikHC9sH6cr2xdHQ2EeOZwbrlkFAa5ZNajs1W878p7
2z1uqgj72j22gqdgLf/c98O0h/XBKF81ya5gb4jteI0NIuZDyLsTCyL5JRUW
I2KzmD8DX/k6mDyf33NW2EbnK2JTxOcykLfyM6S+m9rCw9b9hCQkIf+4sFYf
5Pecr+LC171m6POq/UwdchlwVrw+Eo/l+P+MYLvUDt68dUeuXL0mg8MnpE1j
w5qGZtuDgx20mTXdPZbHQrB5bUNDJnFb6DFnZ6wfvkNj0fZQ4CzPYcV7Xj2f
RQ4rXjf0OmFmcel4nTCv5F0Zi94R+ty9FwuZ3IP1bjksZy6b17BhqzEW18C3
wVkb7eznNcmbZR29LnAYvVorU8w/wlf0psNVs+cskJemTZeZylczZsxSmS3T
Xp6hX5thjIXfxQfP1Ots9cc7tu+RFctXy8c//kPykY98KOwLopeKvNXj8jM/
/e/kc5/7j5KWtk+ysnKUpX459PGP2nvJpfzQD/2QHDlyJHq2cabmOaMD5HLI
YfEavnLGeNj6/r0UP7ea9UAOizwu4nNM3O/6Xlv875IlS+RDH/pQVCckP4j8
2I/9hPzqr37WmPY3fv0/h5wLX+n7Hn0kek48i0rlq8WLlluNEG72HBbPe9rL
M+35z1LmmjN3oX2NfNeKlWtl9uzFxlrLlyebHjlfoV8pzLFSzvLclfdi+ZnS
5FrR13+MrdB79N/ZytcGdUEkzlZxvtqXmS+Hcostd8z6Yx2yHiezFbER69fj
Je+7shxVGGMhvG6J1fo6+ybW/h4Ut2FvuDZ2B7VEhNw6vaPM8CsqqzRbhRSU
lMqpU8xdvh0953gfKnrvcSdXhHwV+Vxnq/g+wbiNfTc7neCqhCTk+1PebX0/
iLOwB85YzHAgb4Vf8b2F+Bd8D37FayWwlu83vB/OyLp+45acOHnG7FcZ/e9q
y9yuNfX0mr2zfP3gRMbya3wuTcRbQyPSoYKNjceycFYwzyHoe3XG8pkNMFaO
2s9sjU+PFQb9H0fyS+VgTpHZfucrZyz8xO5DmZHfMB8yibE8jxXPYW3cSk7L
52LtkZRNO4ytkOTUbYE/Y/+g1QTXG1elpu6QZGWtlJStsmz5GlmydJXMX7DE
GIv+nHnzFsn8+QvlG9/4psyaNVteePEVefGlV83PwlRzlK/m4ofVB9fWNMoX
vvCnylNPyOOPPyFPP/0BeezxwH///u//kUx7abqsTVov69en6rO9JOvWrZcf
+IEf1Pc+GfVoc2WW02SfAkfhQxoaGoyv4G8/Hwdd8p7dh63r3wuJ98n4jAb+
du9LxL/G99d6rMF98x53WJX7CjNducJc3wt231OUr3/4X386zGXpPVfGClg4
yHMNDY7KwQPpMmP6HHum8+cttlqwczXP/utff0aeeeZbylTBvy9ctMx6twKd
WanPdYvls9Ap2ArOou/da9UwP/oY53+PDdDhf4itvDbobIX4vlviEvgqWktx
tioI1p2zFULc43VA1ivrlhjJz2MgdvJcFTxFXNUR2oB4X1XcRkT5qphN8XgO
sZmkfcGMdsutq11q7eyR02cuWGxYU1uvz7nXbGA0iz+2DrB92ESYKn7ODXYR
YT0gbksfFMfGJcFWCUnIe1smr+/4DAd8CTbEZ5Gyb4yvxeP2+Izv4IrPuS+D
w8fNfuUVlQaM1dIuTfSTagwJYzXrz2xRdnNbGNlEzqpQG+ozaiawln4dO4u9
xe66wFowFvYYxorXCa0Xq7xGckqrNX6ulIz8Mjmith67vz+rYEIOa0Ie6+Ax
y2E5Z+2K7SX0WuHm7QfU/xxWP3RQfdOBkLHCuaNbdkVctW7DNhPmL8BYq5NS
rb+KvFXK+s2yilmiKstXrJGVKsuWrZQ2/Ttyc/OjGQjsSRo9PiIbNqTKkiXL
ZO7c+eaHF1AvUsZao9//0z/981Et6sMf/pDlR5566gl7L+9bqn54/fqN+pxv
6TMdlJ/6qZ+JfL0z1le+8hXzI84NXKkZV1ZWSl1dnemB85X3Xr2X6oPuC70H
i1yEz8Cqra01v8rfH8/x8RFnVK8P/vZv/4762yDfNW/uIpOFC5ZaPuuDH3xq
wnu9fshzgp15L8+XfBWMDVtv3apMtGaNlJeXq+6slvT0o7JEuWr58oCv0B9y
WrDV2rWbZONG5avVGwKdU0H/0EnXS67oaZyvkE3bDryjLui5K5u1Oyl39SC2
Yl2RIyaWCXraSy2+yS6pjNjKeyZhK68Fxvex+JX1ztrvVJviLDWhz2po+B1s
hRC/wVXUBL2fnSs9V+StsE9XX3sz2tPJh8eYcfvmz5haMXkrcvrEmwj2kPd7
Lvfd6gMP0rGHresJSUhC/mkkvr7jM7J8TpafD41NIWbDvyOTzyzE9jyoN+va
tTekur5BcgqKzJYxI4ucfF1Hp9rN7iCPpYw1OYcFW7nEGStirZCxvAcD2xvv
e4/OIgwZq7CqXvIraiW3rFZte7Xa+ApjrMO5JcZXnsNyxor6sA6Oz8RyzorP
wwpmumeo70lXzjpoPsn9k+ew1m/eKcnrt5rAV/ResWcQWb1mvazfsMXyVvRO
paxLlQ3rN8nVq68bw1Bv+NM//VP1k2vl1z77q7Jp4waZ/uo0uXDhnPn4ZctW
qC9ebP6YXAfXj/7AJ2TqlCeUqT4Y9lQ9Jj/8yX8tSUlJsmXzDuntGZTWlg7r
mzt//qL8+q//ZujXH4344HOf+5zxtLMVzxM9qK+vN7+Of4Gzfb6on9P3XvEX
6LKzlc+/Qv/J3dHzX11dHeX33O+Su5rIVwEv/af/9FtCnYmcSFNjm/HtuuRU
+fEf/4yx75NPPi6f+MTHgv73pz5s9UNyjNNfnW1ctWDBIstTbdiwQfbu3Stv
vXnN7jO/C/9/1umgrolr195ULk+SjalbldOTTZ9SN26TpUuTrAcetiKHBV+5
Hr47WzGD5JDpNWxFLOF5KzvjHJ46EMQenrfyeiBzGJytWFfkiC1/pWx1tKBc
soqrdB1WR2zlM64Q1i3rNx43uZCzttxVLKft9sBtxeQ4DbtCDIdga+wcU43x
kMKySptvCl/dvnNP4sccxeMK/yA3Rb8h9o+1wUwrPkfifVZxe/qw9TghCUnI
wxFf/5PjqAcxFnkKGMv3UbG/kHwG/mfyuRDx661bt6VTbdqxnFzJLSyRovIq
KaN/VOPU+o6uKI/ljEW9kDj0QUzldtRft/T2R2wVF2LdeC9WaV2zFNcEjBXk
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
83vl5Zn2PNmTEJ1rGOoFnDX10SkTuAo9eXxqkN9yBmOGWXNzq529Q/4qKWmj
6Rz1QPQT3UQviQHQVeer7buCfit02vT6AXw1ma2slu5xSXp20NeuMQuxC7kr
4pigNhj0XnnuitgHtvL9gt7L7jmrNs9Th3OuYChsQGcsz/2geKzd4q2Ar8iT
l3GeYWWNieWt8guNr3jG/hHPwfMae0WOin2C2Dn0AGYlvvSZb+/GVg9bhxOS
kIR8f0i8Fys+7x2f47UT+Iq968xgxCY5W8XzWe6LOjq7JCcvX45m5xhjldbU
WXzZFJ5x4bY0blexl25X/es2ezn899awt33yHkKfOUqcjD33HixnLK8R4gdg
rH3Hgj4sZyz8Bf0lzBv1uojVRpD96SbOV8iutMOWE9iVdtCuq5PXy5btu82f
bdu+x/YJ0tNOPoH5VuwXhFUzMtLNJz7xuDLU41OVox43n/mjn/ox+eS//rR8
4fN/In/4+5+XJx9/KvShU6w25Dz00Y9+TP7bf/t988/IV/7m7+XwoaP6rK5L
vvoS89HRnKWp8qX//X/U3ybb3jOeMb3TPrfJ6lDh2c4VFRUTfM7kGB8dIK6H
tfFV382M6n+p4ntn+Xvwqwi+Nv7hs9v9fmzfvt2eRcC7j9n1t3/7t+3nHD2a
qc/3mPFsMFd0SvQs/uRP/tieD71WX/27b5h865vPW/7qN37jPxr78iz4mXBV
PGf19Ac+JD/8rz4lP/LDPxoxVqBDwfXP//x/2X6E3LxiWbZsbcT0MP6GkPdh
rM3bdxljoa/kWuGrnXsOjfNVGENMzl/ZOghjD4tF0oPeK++/Il45lF1k6wu2
Yr3BV14bpGZP3MMa9fNvfNaK57B8/oLHUh5jeZwVPy/eP/d5o9iTBo2zYCvs
DGyVX1xiOSufPfOgZ8mVf/PZytg2dCA+j9378+K1wUTOKiEJScj/rUxmLHJV
sBQ5DLgKvqLHFlsEf8FT8fPlvabC+1taWpWxCiQzr9ByWNQJsYU2fzTGWQiv
J5914WeHxTmsJTanwfkqmjda32R85TksGCvgq/LxvYReJ4z1ueM74KuAsUK+
Crkq4qt96VH+avfeI7Jt517ZsHmbbN+9V7bu3KO+bIscOnzUrvi11WtSrOc4
Sa/bt++UsrJS9c2csTwl8p9T1Vd/4fN/LF/76jfkm8pLX/vqM3r9tvzBf/9D
+dQnPzWxPmQ1qSk2x+pv/vqrxlZIf9+wZGflWX/V009/MJphydl4r712LfIt
PBMY+Wd+5mciXvPznpcuXRr1+voMaz93jw98Df6HuonPGn2v8BU5OdiRv29y
zsrvB1/j/i1atGhC/or5V7/zO79jP8fvMx+f/6P/V9/zaMRXzCf76le/Jl2d
fTaHgef29a99S/7qy38rn/nMj4/vOYjJL/67X5L/8xdflme/9YL8xf/+srz0
wivKWJ+Sp554MrYPIriuXr1SKiurbTYWemdzGvTKvsJdu/dJ0lrl/x2cN7BF
Urdst15BOAs9dr6K63o8xrDZu742YnVB67sK2SqYx1BhZ+HAVt7Xzjo0vmps
tvhncv6qKYydPIft6zuew0LcFngMZudpdfdGdqRObQD9nhlZ2ZKZmyeVamt4
Jr4vx5nK9yjwAVv5OTc8f/oMEdjqQWc0P2x9TUhCEvLekDhjOWfF64XYI+YG
4JMm7y302JDvJ+8xcvy49ZnmlpRZjIktjPOV56fczsbjVeequPiM0Xh9MD7P
vaS2wWy781XQgxXY/mgvYVZhML8HxvLznsP+KxP1MTv2HQl8jV4RfNBefIzG
/HvSDsqutAOya+8B2bxlm6zfsFHKK6pt//fg0Kjk5Bba3vtVK9fabIXOzi71
eauNex4nb/V4UOP5xMc/rn5zmvrQ5+Tb33zefCmcxes/+oMvyMc++vGwfvho
eNbdo1Z3+q//9b+bj8ZXZ2XmKUt9yL7O/Hb3/aWlpVGfun/Ayr/3e783oYeI
KzkYn9P+u7/7u8bPsIKfRcmzpD4IU6MD/Mzv9xoheu197ehx/MwC98PU3vi7
+Vvxvc6lcfn85z//ju/j3v3yL/9y9B7YF4b61V/5nO0ZhI//9itfk//1P78U
sZWdHxnuIf3w0x+RP/z9P5JvPfOcPP/sS6YP31Ae+4v//ZfyX/6f37H3fOTD
T9vVZ3Pw+2dnZ8vqVcnKUxssh7pHdXT7jj1SWFQmmzZvl2270iwe2LFnn7EV
edgoZgh13Rlrp8nRcbby3vaMnAlsxXpiXdlZOLrGyBl73xWxjvW267r03nbP
XXl8FI+fJueyvRczHodZDju0H8Rq5MTL6xuDXvbcAqsJ8kwfdIYgX0N3ee7s
EYWtePa83+exO5d5z1WCrRKSkIT8U4mfD+3nFsJM3pNFrwJxIO+J57A8B3JP
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
fv5utgcFBwrpgvKzt+3c7fKnkA9JTE5iX/zg4UOMBdMzMk1fPVX57knJKYY/
HxtH0fEJFJuYRJu3bqNjp07Tlm15dKLoDOMv+Y44V1WJT05GDKFSXnT+RnxP
rP3Ac+AuRg2ZcNxivGBHxZcRTmwrD6M+3nWtHz+kjl2Pc7C2Oh89Zy65QOBt
4ZXCfRe+KOAq4Gy9D5hgTSsHNeubmjfgs5b84OXLV7j2Abm+nNxtjJGCIyMp
OiGBEtevp5QNG/g5YCrodFZOLmXnbmW9BqbatjOfHwOTAXOlb9zE501bcvgz
wGmYE4mp6ZS+aTNjqqzcPNpZsJ+2qrkWk6hw2Lr1tGXrdtqzt1B9bislKkwW
GRtPYVHRFK3wWpqabxsyN6o5sIWOnzyhMF8GJanrRccn0cGjJ6hSmzYyx2pI
8p9S/yV1IYagFvL4sSO0K38Hc1JgHDGHZO4ITzDiJphfwgchcWMdY12Puvd9
iXW/DcYH+WlgLCefRzXX6y1cspz810ZQZFIa29plqwLoDy/+UdnjhlyH3rp1
G3rssSfo0Ucfp2nTZjr62Bi2u2XLltSzZ0/OI3r17q8ww33OnoFKunbuRu0/
/oQ6o86qRx96561/8/MNPAy+9qVLlzMn+cwZc9RnGhh4pH49xl4NPBozrmui
8Ah0E3oO/blSdcVha5x992SPZF35c1jj4TthHcAhfjrn2JVeY25u3raDGjdp
btZUcZ27+q0332w898Lzf6ShQ0ZSQEAQx+caehr4qtU/XmP+DMSwOrTrRP95
511+3pkDbKDwbR/GuLgXH374IedQ5R7hNdw/7Md844236JHfPK4+25ieevp5
Wrzcn0KiEykiMY2CFL5e4LecCg8edQkvSOxKanr0PH1d6/m1Msf02lu9H6xe
LyRxFqxd8HdkT50LptLWQrEFho5fZmxSpeU04MPu2L2XrogPW03mnmHoI/5O
dEwcHThwkPMAEleCZKg1Hz50WmaWsinJFKXWbGCscrUewC/flLWZYuPjKCom
mm0FMBQEuQ3MQ+iz2BWxKfIYOAv+fFLqen4+v2AvHTlxkkpKyzju5QIQHbEr
R2mni03EXELOEBgLIrwReuxC+BilRssaW71R8FVtv+d6nIO14V5937vw0eLe
4j5jfZe4C2JYmG/W/Xz6ocdrjX1QyEMfVX7NBe6PixhsjMIyKUq3N2VvYb1N
SE1lXJWRnU0ZWVkKU21RGGqrmg95am7soLz8nabsgE+k9BpxL8FZwFx5+bv4
cbaaI5lKZzMUrsK6n7M9X8ku2qrma/rmXFq3YROlQtQcTN+YrbDcJsZiKer/
ccmpFJOk8FdKGuOt0IhIhcfWUVC48oWj1TyMS6S0jdl87T37D9LewsO0a+8B
OuioLzh0+CjHko8dO27u7+VxqHauL6WXLvBek7xtuTyeGGfp54PxRr0NYsiS
p8d7gLesvWh/yqLvaQUmxXqFOAfWJsEnWJNRJrVomT/FrUujV1q9wThH8JFw
CfTt21/di3w6cfwM/faRJ8y4i6dnA/VaX/L1HcqxF/AKwN4DO+H1O352u8JV
PRU26EU9u3vRww/+mho3akyeDQx8NWnSFIPrHb1eNuVQYOBapfuH6PPZcw07
or7n2sh4WhMaTcdPn6HKanF2nTkR2Wdel3krrAfA+shj4HDWsRg2DWhrTVgk
lVcZpmTY8JH82z0VhvLzW6J0vZCxFXKG4GfHXgGMUbMmTenlP/+Fuan6KPza
o1tP+uD9Nia+Ao567902NHDAYPL2hnhzjZzcn4aeTankfJmy4ecpf2cBvf/+
B9reReP+/v6ZFyhFzde5i5aSf8Bak3uUuTzU2ILHCzqjxwaux3X9+55bOGM8
dA5PrEHws3HW+16Ib4j/89q1O599yPPnipl3R8dV1hooaxgLr8KzALYKi4pl
jIQ8RlHxGbYZ69MyaOOmbAoOj2BfGBKr1uesnG109txFxlbwnVM3ZFHergLK
V2tzctoGvg7WbWAtxKUkHgXbg3wI4l3w43V7Al8+TfnYeA9ew/vxXRLWpdA6
tdbEJCVReHQMfwdgsy05W2n3nr0cD3OLs7R5LVwP0ktXckRY73nPvYO7C+Mp
fFw6d2lt3A51rTtfJXrN8Y04174qrig8N1hPca+FX1160escf6IvstdJ1x85
8Pyu3QUcc4X+oU4dNemYJ9Br6DJwEXQY+st5v53bKG/HVoMva4+aq8yfpTDV
HnXeW0AFB/bTvoOFCt/so+278tVc3KUe71eYq4Cx19b8fNqWv4dlS95OylHn
XDXX8gr20yaFt7LUc8Bd2Vu3c+wgR/k22Xhe/T89O4dS1fxN35xDSemZlLg+
g5Iz1Dl9A63L3KSe20DJ6nnMWeQc4xwSrPBXjPKVgkIjKEKtC2uDQznejLqw
8+dLtFp6I1l6Tq09sFfw8ZhXS40zBL401i6MNc6wAZhreA3vF3/GjmU5e/oC
W8FfRv0fxs2l7k8dL//lFXrnvdbU5KabSfjUmzZ09v/797/fZT7xdh93ogd/
+WuzzqpBAw9q06YNDR8+kjESeuMhByX2vZG6RovmzentN9+h++99gGu16zuw
W2jIWv7cqJFjaISSYerzsz6fRxMmTqO58/xo7ITpNGnaXPpiyRpaERhJu/Yd
puKSiy71gFhL8bvgx+r99n5Mkfw0MD7G18p9jn/3HTpB/mujaMGKtTRzzmL+
bah9O3zkJK0JCKHpM+bwGHz26TjuKwTdl3HCmN13z3/RR20/prZtPjCxleAj
8IOCvwpj2bVrV67nEs77++/7hbpvXaiP10Dq3r0n3XyzwQXRAP14Gjl4Iup7
UnzSelodFEIlpRVmzRUO6EpiYiLHPmUvl5Vv6KcoEo+C/sHmM2eCw9eTNQpr
kXBpSp8xYAH4jPv27lH+pCPCX1PFj6U+CddE7QZiPblb89gn3ah83ny1Nuep
dRrniNgE9nVxDo+Jp0C1psK3DVG+LvAMcgnweSHrFW6KV3gqWT0HDJXsyDOk
qXV8845dtG3PPvatc9VjrPlYtzcjbpTnzIXgDFy1HZw7ymffsXsPPw/bIr49
zjl5iG3l0IYs5ZtnZtIG5cMjLrAuLZ1jWRwXi0ugrOwtdOLEKcbymCZXKq6u
ua/twGu4B+IzYqyB/zHekivUe/DUtv7XNdb6Mk4vd3u6vkwX63o+fNO54w5j
SV5Q9goJTy3mE/6P+y01t3ovehz6/gy99gr/P1lcpPBOHsWnJFJccryaG8lq
TqQrXc2lHcBO+/ZQ3k7lL+zYTjvRtwY9c/bmU4GSfft30/4De6jw0D4qPLiX
9hcW0MHD++nQkQMsuwsUrlKf31e4nw4cPEB7Fd4C5gL+2qWug/myHbWEyhfK
dWAszLns7fm0ZSfiWer/6pyVp7DW9p2UvSOfNiF+DFHPZar5n5m7jTaq86Zt
2/m8QWFE4K+MLblqDm+htE1GnAxzHDGvmIR1jLfgU8UmJlO08rnA0QAurBpt
Dsn4CDYQ/nDpT6zH/3BPpH+x7CGXXmk6zrqRcvJfJVIXiPETHmbRQ2edaTV5
OPJ1yFe1bdeBfvPIo+wvwI43bWLk62Cr77zzLt7XJjU9cm7WrAlzNIwbN4Hx
1dQpMxz8mfVMjOBRv74DW3lw7RV8/IiICBrkPZQGK2wwFD2LFb4CxhjoM4JG
j5tKk2YspE8nzqPp8/1poX8YzV8WROGx6wz/vdK4/7i34CaHHcO6Whd2X2yi
9LqWfVaCrYBdlgdE0pqwRJqxYBWNn76IJk5fyBgLv3UkejaPGM2/f8jQUTwm
4Axt3+4jI5eq8I9HPYV1Gzbi+6HjK+RlgU8ho0eP5fygvrcTOAs1bM88/QI9
9NCvzH0KuMZ77/6b7r73Hmp+6+3qHhv38pOO7Unig6IjwK7CrQRd0n2Xn5JY
uaqwvmDdh18NGwA/UN/rhHVKODvgH6KOCO/Bc+beOo37ANfEfu+w8EgKWhvC
/mhgSDiFRsbQ2rBIXj+Bl7CWIrewTvmw8GeTN2yklI1ZfP5/7r4DzLKqSldp
os48gVFnHETMo4iAw5hAEUygo6KO4xieiKKoMCChoXPO1RW6cnV1ha7qyjnn
nHPOt3LOVR3oDOutf52zbp26VPt0probuN+3vnNT1T1nn73X/lf6F2J9eK+E
cQz0L6Sqvkl0OWIU1Q3NYlPDZoYNDVu61dYveh95IbC14dNqAI80fERs13f1
2sg20C82OvAU9g+8xvuw5du7u0TwOXBWR1er2P+Iq8AXILHxpmbBY/BxIW4I
jAXsiLzeSj73DnAZE70xL9nig1gpHoQxg17TOjLsAdpPUTHWSjXnb5Z9YCVc
9bfgqzfLdazGdWPdAEPputE6WuhV9VmpTrJiKzxXTIZ7r2OGtQh9VVhWREWV
pVRSXU5lNRW8BuC3bWVs1c7YivFUXzf1MEYC1+3QyKAhQ72GDPey7dTPts6A
yAg/H58YorHxIbaN+wV/AW+NTQzLazwfHB6gQf4fwFxYIx0s7XwdbT29bMvY
RBp5vjd0dBkYq8cmUs9YrI7XWx3P41o+1vJ6qeUxwHv4nuAvU4DHFG9VmRgM
WKukqlb80oVlVSLQF2lsg0GHFLJdhbjh2XPn7fUm+oDvF9yKsA9Xqg/WdaQ2
DdaZ9l50rPl8K87Hv3Xuavxaa5Kgg3Qu6uPw4cPG/m3m8Xz4Ix+j/pFxqXHw
8Q+kx374Y7r1VuULNzjG1Z/13ve+V97T11u3biUPDy+J9YGvEnG++++/X/jY
8RuIdeF46623ynl5e/vSM888K9hqw+ZdtH7TTpGtO/bTrr0u5Ozmw/gqiJy9
w+igbyT5HktmjJVCidklBAvm1OklOwZ6VPOvrsa+rz5CzE1r3xupwWKpbeuj
iKQc8gtLIVf/GHLyDOVrCyaXQ760Z78bbdt5wH79Mh4sW7Zss/Oky1hb/H7K
VZHHtgny1sC77+TkTPv377f3KdQaA8PHuJTjDiys2Cs2LkFyrRDDv2bNdXTT
DTcac4ElIiLiDbVemEOKsdRPcLXn+pVYSyvlWWnfKWAn+M7hv7JiAsUCmJPA
VODogI2I14oh7LnoZNRvI26GeB/sTtifOQXFlJadL3kZwFJYl8BLiBvklJSJ
PsVr1bXQsTjCvq1pa6eqllaxg0VPmzoZ9jIE+rqqqZWPXZITgmMrH2Frw+ZG
bona4bDJ+4YG5TVwFGx4td/x3MZ7TC/b+IO8H/Xza+w5XT3tLN38/R7BVcBZ
eI7/jT2ttKqMrytfBD6FZt7v5k8cFw5kfWidulXPO+owPHBvMB+FE970d+B+
KA+2Y83dm6XeXGuyVuJNVXx1qX571vn5117L1b5ex3tg5ddQrnLoPIN7vU/2
8NnZOYvPCjmGFr+KrJ3XaXZullrb26i0rIwqKiqW9XxCbkMe/FWMrWpb2b5h
7N9uYxw+2CtiY0zVO9QnmGp0FDlG4zQ5NUpTU0M0PTFIUyzTk8OmjNCUKROM
rwawDoZsjOsGaHwMvXbQYxMySCNjw/I/wZnbO9hPPRas1WbrpSbGV7oWG7q6
qZHXhkoD65R6nsN6bAb+4u8Bk9UhJ38FwdoGzipHrj7rh2K2r4rgqy6tFB2S
xHoFtlo6crf4/QVLvFDtF9wD6zqz6jNrzB7rT3sn4n5Za3ittYZvlvm2miJ8
OmZ/AOVx1nHRcUOfZM1BR/7OGuFbuI7nwQhlF1VQbEoWhccmUlhUHD36vceE
V/yDH/ygfZ/uNzn4wc+ge/Utt9xMN930Lv7O9fT8n9eSl5cvRUdHi+2BMcf9
Qe0puPoP7HemjZu2007GBTt3OwmmAsZat3EHP3eifU6e5O4VSO4+IeTmGyb+
K8/gWAqMzaCQxByKySrm/aVi2fzAWsQ5XQ2OUfwmfBnQ69ZHbWMLHY5IpKMJ
2RQcm0neIYnk6hcm1+TuG04e3kG0/yBj0l3Ogq1w/Vu27xO8tX3HHlr78gbh
qVpYOC5jjgf8Y9AZaWlp0p/b08NXai8R53v44YftPivUcYaGhsoeo+8B2+J9
fHfrzj2y3qLik6lveJxePXdecBxihsBuuNc/+9nP3mA3AmNpbznFWG/HdWRd
T457Hq4bthtsa+XvxHd1nVlxKdYcvoe4se4TihEwe0+cfFV8OKmZOZSSkS35
EzmFpVRUXi1SUmnkYUCstir0qT2mAM7DNiPeAFu3ttO0fVHjZNrEOLb29Yud
jL+DrlZbGoK6JtjYEGCr/kFjz4EtjtjI8OgATfC+MsT2OTAUbHW14a22/fAI
2++85wwM9og/AP8Hvd5U4CsAvoJ/q7apjipqK6m4slQEz4HlML5W7KTcktba
SCvG0vGG/wJrEH4P6AP4QKy1UY7382rPLc3bs+5N1v3J+t5f2rtWup6VXr8Z
rtkqVnyFsTDyF6d4n+iX3mzoV3Hu3JI/U+pPyZAz5y/QiVdP0xh/v5rXVmZu
LtsjBZRXWEDFpSVUXFIsHFR43tDcQM1tzdTe1cYYh7EVz99+xlYDjKtGx1Aj
MSKYaJTn+OTEMB1fnKGF2TGWkRVlbnqIpsb5b4fA8dvHuGuQ/27AEHkOrDUk
a2JsHFgL64htEawFtle6+nvZlmFboNvwZwl2YlylfqxG25I0wD6xrFPBYx1d
bxBZ+6wDqnhtA2OVsY0FAdbKr6im3JJySs3Ko9ikNIpOSBb7TWsuV1pX1p6z
yNm29rdWfxb8xfApaK6p1ppoHolj38O3uug+D2wFXGXl7Bdufb5eHMsY56s/
CrgKPqg1115PW3bupaTsAopLz6OolFyKSMqkgLAoqqiqsfMuuLm5UVRUFB06
dIgef/zxZbEozQeC/wpc4J6eR8jJyUNifk5OLuTq5im5VXsZM2zfvp9273YW
LLX3AH9n50Hawthq49Z9tHu/O7l5BrAEkTtjEM8jx8jraDQFJWZTaFoRRWaV
UBSfY2efUaMKG2Z+YZp1ayctokfsFR537JE9PV28ngbp4usXZP0PjMzyPGb8
kl1Kkdnlcu5eITHkGRBO7n5H5doOMYY84OIj17x5237Bljt2u9D+/YdkbPbs
caF9+13ooPMhGbv9+50k/urm5ivvY5wz0nOW8WCp3wr3Czz77u7wJcba/Vfg
Hw4Mj6KoVMZ8EXGUkV9OUYnpbN9ky//RvC39fx/4wAcEMyzj6uMH5hcwFuba
2xFjKZay1gNqH2VgTOgV7OfLY+3LH469yRw5z1HDhNqhGNZ30fFJov+ApwRX
wQatrRcdWW7iKcVSqktVoF8bTXu4ju122Lxq/4oNzNgKeht2MkTtZvxNR28P
ryOb2NbwT/XxPgCbG9gKNvgI7zmwyyHTbNdjzwB2Ao6CDT9lsemxN+E92PJj
/HdT02PSCwc+AfgG8H9tvK919/cYxwHETPga2vkaG6opJStN9kPEohUb9Zv9
ofU93BvFrerHsNYRQ78rNyvuEeanYqyV4m5Xc44pF7n2A/pLor2LrXllfwtf
w5sJXxn+K2PfVd+/0Q9znAYG0AcT9lsn2zDTdvp/s92y6HtYKYuvnpH8Q/Ht
8v5fyRgLfArI+6uur6Nalpq6WqpvbGC8DS6CDrIxtoJtABthZGTAjqfgl5rl
uTo3M0oLc+O0yHJifoJOzC3JyflJlgl5f2F6hMaHbTQx2kuzU4M0MzkgMjs1
xNhrWI7wf01OskyZsUT+Lfh7+wdtjO/6pd6vE70X+KjrsZnxpGIsxVk4ttj6
qMWMLWLNYv3jqGveGmusZv1QCV82/Nhsi0F/FNXUUV5FFeWUVVA646q45DRK
SEoRHOTIKazrCkfcH91PPvWpTwluUBsS99Dad1r7nWoPRKzVt0utoXKCYZ3i
GhGzALZy7Cepeyxs7m9961uie8ADYLy/htbc8G6KSc6g2LQ8Ck/JoeCYNAri
Pfj7P/oJ77lGvdnHP/5xwVYbNmyg97znPbIXG1jN2JvXb9jEOniS/A4HkpdX
AB3y9CcXNx/y8vYnDw9+7uItmAp+m4Ouvnz0ICc+7tzrRjv2HKJtu1z5ubvI
QbfD5OZ1mDwOB5N/eAIFxqRSXHYJpRRVU2RaPp9bKp06+7pU6F28eJb3/BbR
r6hFv5LjD93Q3NxI0zPjci4nzlxg3FJJYck5cq7xOaUUHJdO/pFJci2HvA+T
i7s/7TvoQ7v2edDm7Qfl2nfscaX9zt4SN3Ri3AUBznJ29pKx8/ENkOeHDvkJ
xkINAGotn37mWVkHN95ocG1pzPall14ib29vuvPOO+0+rC/c/1UKCo+lgIgk
vse5FJOaQ+l5JbST8e81198keBvfBXcX7it0Hzg4nnrqqTfgB8wx7H2a63i1
96vVXEvQC1qzpjU0WseMvRti9UfpA7YH9I3VBnTMFQEewxqEryoyLkm4XdNz
Cii3qIwK2JYpRQzQxFWQaot/aiXbVXSzxca12r+qo5vMGIN+V2OBsKUlBsg6
H3sAbO1RkQHBSmKPs0ywbT49beAn2O5jw91yhC0Pm35+ZljEaucfX5yl2ZkJ
xltDsqeNjY3Y4ybwbQFnwZeFeA3ig2XV5WzLVQrGKigqlGN+cZHUIubk5VJl
dZWsL8d6Smu2yOnTZ2loCDnvneIDQQwD90z1vJUn8Wpzc2rfPO0FpDXyKlo3
CbH2CLLi/Uv17F1pXl9JfHWpvsFL752WviDqE8B+bAOOYDuirraRbD39dPLE
GTu+IuUgAY6+iHqhUcFVyBFE7QXqAMGngDhhZ3eXxKZxRF4V4tV2XAV7gefj
xDiv5clRsRnmGFvNz5i4amFS5NTClIiBqwxRnLUwPUpTo2xv8BqZnRii47OM
JaZG5P1Ffg7f1xzL7IwRZ0S+FtYTcrlgm8Cn283YqqdvUGpVsBaR8wh/VhP8
WN2WNYsceQu+Uh8W3lu25nmu1yBOaPqwKsxYIQT6BLaa4qzMolJKzs6lwtJy
KiouoTa2lTGnrDoLDz8/P3uMCzihurra/h3oRcRRkBOvvX8xH3EvYXtDB65U
a/hWE41lY55in8N1OfY0CggIsO+v4PW22nxxcXH2foHveOc19OvfPsV2ZAFF
MDYIik2jgPB4evT7P6Jr1izV/GtsUfdxxA/rG1qESxC5ud4+/uTOuMiL8YCr
u58I8IC3Xwhjh8OMG7wkv8rN4zDtd3GnA4y5gKd272fc5exLe528actuxlkH
PMnZ5yh5BUVRYGQyhSRkGviqsIqSWY5GZ1AS46zzgh8v0ASvl6GhQTp56sre
SyOHuUvO4dyF83JOgeEplJBbRqnFNZSYVy7nHhSVIteCa9p90Js27XSWa4Xs
OeAlGAv+LCf4+Zw9ZZwMYXzqe1TGEHhVRcaYsVpqWobk79TVN9MHPnCb3B+s
Ccc+Rmuu4/v/wTvIJzhC7i0wNPyVLh7ekt+Ov8NcePe7371snenfIx6seF0x
O9YWch2A7ZUD+K0m1r0HekBz05FnBltFawFhu2gfDvhTrHzoiYmJy/yH+F+6
Bq0+LOzpWn8eFRdPiWlZlFlcStms66D71GcF/QgbFLqy2vRZWf1Uar9qDRJ0
LHQw9K7V9nXEVhDYzl2wnXuMvHXE/2BbA1+NTwzLnqAC+xwyxzY7jsBQOAJf
TU/0y2vHPUjlONv683OTvNdM0AzvYfAVqIyNDsp+h5os7H3wLcDP0NLWKj4H
+B7gh4A/AvwPwvXY0CDcQMjzR53jqbPnzK5Py8EWL0HGchOCsSB4Dqyiev7N
gq+0byoE9TnAgip4DUwP3QKxYi3tE+TIXW/NFbxUbeKVurZL9TBfEgNfaS9B
w+cIfgAbjwt84qcEW1nv69lzrws/28DohHCMoL61b3iE+tGjE/UlPHc6uzup
l22GPvAn9PXyc5vkBUo8W3KkMP9GGFeN8Zwcp7kZ4KEJxlaTMl9PLk6JnD4+
Q68uTosozlJ8tTgzJthqZnxQnuP9Bf5fi2xLHJ/F/5mS/wcBflO/ruKrnl6b
+K57GV912vqEZwV1wcBZ6ovS+L2uaRytGEufW/Mpa9uRB2DgLMVX0CEaL9Rj
fmU1ZZXw3pRfSEkZBjfwwODwG+LuiAtqnOvmm2+26zN8B/etpKREbE/Hflu4
v8BV1j6QV7M38P9UrHXyOH/Ni1K9gev+0Y9+tIxzXfEoau7w+NznPmfHp5KL
teY6OhoWRfHpuXQsIZ0xQTK58j7+rr/7P3TtGut+fY30rjvDugz8AmHhMRTC
f3c0LJLcPH3I78hR3v+PkKdPIHl4B5Cblz/5+ofIa2AqYAjBEa4eLF6CpSD7
3Rh/uR+hfa5+gkEOegaSz9EYwSahiVniC0pjzJJV0UgpeVUUGZ8hNs35i+gd
NcXrs0u4sS+3/1//N3AN9OAMr9HXyajLiGTsEpGQK+eYUVYvmPBYUjYdjUkj
35BYcjt8jPa6+IrgOg8c8qddTga+2nPAQ8bl4CEvcuXx3ed8SLAUxg5+LYyp
l2+QvOftF0hHgkOFIxT+wojIOMa4FygrO39ZzNDOZcYY6pVN28j/WByFxqVT
VHKW5D5ef8NN0jfy/e83+hk6OTnZY17A7FZcjTnyhz/8wR4vxDir31Tz3Vfq
xf5WEK0JVD416Af4FtQ+w5jgWgsKCig+Pt7eMx0P5MNp3QGOwFuOD/yvlNR0
4ahKAk8z25BWXIWYIGxNtTsVX0FvQmc6+qkES1neU13cbOtdhqvwGWxjsZG7
bIKthJewd1BsaY33wcZWXDUzMyKYCjY99hDY5mqjw2aH/Y79Ba+t+MpR4AvA
voX/Az8B9hsIfAfwIwBnSd0V74HAWNgPu21d1NHVKQK8Bb4HYC3gLOypBWVl
wiEBH4byycHHAVyFPRmtpKen5oWvr7UVvbH77T5WYCxjfr5q9FXle3q1etkq
pxMwPOab1kBqPaoelbMeuh2CawEmUW41Rz4Kx99xjCFe6XXliPUMGwY8Zcfl
GmC7oG5maGhYeJqQc6XmHZ6j3+oZ1mvoJwOOD/B+4IjaVtROoOYCMTf4rCCD
g/0iA+BM6O81cwQH7T4r9VsB8xs4aNzAVvOG3wqY6syJWTvGsvqxgKWwDuYm
h+UI35VhT0yJnJyffgO+QuwcawtrTPgekFMP/CccDj28LruouaNL6nrBkdLA
glrelq6lda1rG9LG8xmvFYepnVWHGCE/19ggdIfiKxUjJ6tJ/OTQOxlsryD3
HbXKUo/F6wE6raioSOJTwA2Qz3/+82+II2I96XM8lBtD/fW415irmqNlxVhv
pnj1pcRaE6n87Djq9T766KMr5Ect7ZN33XWXHW/BbwH/BPJ27r73c5SYmkVh
sSkUkZhBAWGxFB4dT/fccy/97ndPSY0T2lrkF5VTcGikyLGwaOkTjT7BR4LC
yT8wjDFWKHn4BpKnXxDjKz9+foTcffxp70E3cnb3MeKETj7k5OwnOAN4A9jK
3S9UjsBah3xDBF+FxKYLRoEvKKO0jrIrm+hYfDb5BEQI7+j5i+dYxyxSW1sL
LSyeuCL4Cr8BfIXfVHx18sxZOhaZxHgwTbAVzjW5oJIiUvPkGo6EJ8o1AVPh
+jwYax30CBAsies/cJDF2YihAmMBX3n7B4kgroixdPcJELyFMQ4KiZDxB74N
RY9mPqak58ies37zNjvvAuRYZAx5HQmhoMgEik7J5v09j1zhu7JgMe1B9L3v
fe8NPXasGD0pKcnUf+fEPsG+YO3/+FbwB1vXD87XkbsSOsGxVg36A+/DPtFY
n9pvf/d3f2cfM9Q660NzHNA3NiktnVJy8sR2RD4EdJxV96nfCkeI2qQaI7TG
+KBnHfWv1c7V+CH0b6tpIwNfwX8FHgjY0PAdAV/Z44Fsa89KrMSww0VmJ8U+
N2z0MdlXgK2As/Daatvr/oS9CQJfwBLGmpT/DYHvAH4E7Hljkgs8KL4sqbdi
jIU8dwgwFngewKuFONAQ6+va5mbhVUTfkZHJGfFr2DlKTZ/H+XOvSz4PeujC
h6X5cspBCmx17tyZN2Crv+xzWV0BXwdqSrWvteIo6HFgK8VX2r9Y+/Pic/Vv
aY8g5VXVfHnHHK2r6bOz9uDUfEacs/LBAVthDHANRv6P9ngx+0Hx81dPnWX8
PUAlFRWUX1JMFby+WjAmPB62fvBSGfxTfSaeQhxwZJhx1ciAYPileKCB8WfN
uKBgK8VI8+N0cmGCTi1O2n1XK+EriQPyvIcsfTZtF8VXM6Y9AXylMcL+AYNL
C3McsUtgw5YuQ4CRUMdbY/JgNVrWuqMvS31Wiq+ArTQ2qPlX0BkQ6Bb1Z0HH
lNYZNYYlNfWUnldICakZVFRWaeHGIgoOPio+F+wF0Psf+chH7DVW1lo5R/+8
PtT+hgA/a835myHv8X+yT8Aug22DuavxG9jY0PWf/vSn5fPHHnvMzqt+jVkz
iNc4hoWF2WNK2E//879+Tu+45ga69f23U2hMMvkfDaOo2CTKyi2h+JQMCo2M
ldyRw0Hwn8RQeFSiSGh4HB0JjqLDgRHkFxBuxwPwxQBfIS64a6+byM49rrR7
r4dgij3OPoIxgKtcvIIEb7n5HBX84R+WQKFxGRSenCO+oBzGVvm1bRSRkkc9
Q7NmfxBGNxdOC9ZBX7erg69eE1wzNHmCgqPT5RzzqlvknIGvjsVnCr7CNTl7
Bso1AltBcP0QjMXe/V4yNsj7h2DMPP0CyMXDR/ApxhRjizEGlg1h/BvGmCk4
NJrHP4ZxVygFBIdRTWMrjc8s0MlT54S/2Nc/mGJTcui/nvgDveO6d0sNCfjM
FDMhLqhx5FtuuUWwNvwxkNtvv10+e+SRR+SI2kKrLYO1h7n3VsBVumas54o9
ycgBsclasV6bNVb6l3gvdV1h/cD2Q26C4CszNxccVolpmWIzFlbXGrlWdc3L
fFaqC6EnoQuhJ6E76yxYScVq074hfmDyWcEehuA1+t+AIwE2c99Av9jPsKUd
89WX7HoDY6ltboixv8B+V3y1lP9r4CvFVvABWPNYgLEQi1kw44XY74CxIJqj
BZ9DX5/NEORo2ficwY/d0U79w0PC7wCcBT4t9OcBf+nwyIT4NySGdOaiUXPG
zxfZzgLGQh2a5uFCzxu91I6viAGsry/3HERNqcae4Y/CeWl/a+2hpD0hNE6t
GMvauwQ4C3+P/Ut9dIqx/pacs8uBLa0+Co29w46BXwM4UbGl1n5fas3hJfq9
1JoxY/Stwbzotpn5TN2d4rMSfxXqAgVXGbwJBrZaiglKLruZc4VcKeArwVjz
bCssjIvovHUUzHXMeXx/+WczIicWpmXd6BxXfDUxOSz1taitRSze7qft6ZY8
yLr2NsZUwEWGXVXV2knV8GUBX2F9W9a4tYbQiq/UJlNcBR2iuVgaHyypZ33T
0EJFtY1UAN7hknKjX0NWLp06fcbex1T9MLAXlScgKyvLbm869njEa+wBDzzw
AG3fvt3+Hu4d5jDsBuUjvVLrazXE6neFPYD1pz2HFGvqWOCBa0XdPrCU5jJ/
+MMfFjsKe6r2TzZ4ltAf7wajN11yJsUlZVB8Eh9TMik6MZWi4lPpWBRjn8h4
kbBoYKxkCgqNJ/+gaN7/I8nH/5jUySGfG7lFyGcHB8GmrYZs3+lq4gl3iQ9q
bBBYA/gKvh7kLCnGQk4T8FVxYxell9RSGL/XMzBKF030rbwBfw3v8f923NVv
qBwYQFf9rOtDY9MkhlnU0CnnmpRfIfgK2ArxQU//MPHR4RrhswK+0viojMXu
QzxGB2R8UFcIrlWMHcYQcVaMKbDV4cAoxrIxMuYYe70XOOLegHsBNYzwKwJ/
RSfw/p5VSO+48e+Fs/2da65Z1scQGBtzQWNcytNw7Ngxu57DfHryySfF1tQH
xhz29Fsx/0rr/3Ef4SdQnrhL4SidT7oPaI47+N/Ab6FYFbafj4/f0h7BIj0s
2FZEDQ9sR7Eh65f8Vuq7Uv2odqjmYFljAZp3pTrXMR8DUiNc0O1iE8P3pXay
9Pdg21lig2xLQ+fDtobvytiHRu34CvuF1TYXnGTuR7rPWH1Xjv4rwVYLxt4l
e9Ocmf9riRVi3wPWgp8Bgr0Rvgf4ISQ/q79X/FrghwePVndfP9kGBu29Dru6
++jUybNL+VcXlnwguD/AKlij8BfhqD1tgUP+mtq7yyXAGMAaGjfR+Ir1XDA3
cZ74nmIt7FXKQ7FSL0aNGzpiLMOXBZx1ZsW46OUYA8c6R5yT9pDSft04b+Xw
ccRXOE9gMoN7r5nxVQ01NvN97GwzctfN/CqjJrBf5g1w1QTjqqlxcFgNC56a
sQhw1fzMqIjM4blRkVNzYyKvzo8vsxkcxTrPrdgKAnsE2GrO/C17PHx61OBq
GO23+6/A+476jrYexknt7QZ3XZPpywZnu5kb0IS1zfiqUfLee8Wf3WDlz2Js
pXhqJd2h+Ery3OuaBFsVVTew1FExS15xuXCQoqcWeN7RN8LeQ9jMyQVW2LRp
07I+RFbfPu4tagwVU+C+ao4JfMaYrzhasf5bSTQPBusMNgHWicYlNI6B9zA2
Oj5aO4h6QNReoiYQ9rfED69dQ++85lp6ft1mGpqcp6T0XIplfAWJT8mSfoDo
CR3K+3qIuaeHYZ9nORqWKPs+fCzAAugHA2yA2ride5yF6+qlV7bR2nXbaePm
fbR1uzNt2+Fixxjb9h6y5ycBY3kGRJBfaJzkYMVkFlFuVRMV1LZSVnkdHeHf
G+Dz0ww75am/UvhKOVwFy7IMTs3LOWWU1so5QnDOyL0CRjzE2Ar4CrFBXB+u
FThLrpvHAGOxaQv4RnfL+IAXC2OGsXM+dFiwqvfhUBlbYNig0KVxxz1Qwb2J
YUyMexWTmC74WI6p2RQYFiMxQfSP1vgfcqqAk+DrVIwA+xrXaH3o3FHeFOhK
rB3FtFd7HfxP1o32DrTyl+l1wk+HsdC+3dZaQMVWeA82i46bwTFmPJex4v2+
p39IbETYigUV1eK7gp6DLQlx9F1ZdaXapLWWeIC1dtCOsRAvZD0M/Qv7txK6
VXRsq9jGsJPbwCXPNjNsZ+h44Qkd7hXdDxtb8dW8Je8XuGppD7H4o2aXYiuX
svft2GrewGIGr5Cxxy3teeOCsbSuSzEW/BCIXwJfiW8CfgrGhvBlwX9RWlkh
Oc3YE9D/2vqwxi2gz4FlgEWAsTQfBDhEe5Y6cruvpp64lB7CeV2qZ571PVwH
1puVNxqYBBgF+5j2jdM+vFaMZe15DWx1+jRsoOW68XLqyZU42rHPwgenvSDw
vmMcHteM7+I7nZ3tvKc1UWNjPTW3Gj0Bu8ER2sdzYwC8h/BXGbHAcZ47k+MD
wg06M8k4muf0nOmvmrP7rUbFB2vU+43QiRkWPp6cHWUxjyaOsuKpS+Er+HV1
fWBea+xRc7wkx31qxOR9HxQ8iJ478M/a+nuk70Fzp8HPXm3mS6mtBRupQThI
e2T915p5Vvoenmt+Zq3Jz6B4yhoTNOoHGyivupHyawyMVdHAOqe+iaoaW6Tv
aEoq7xdsjwO3JycnS1+0H/zgB3Zd9tnPflbyHvDZyy+/LBzUv/vd7+gLX/jC
Mu5FCOa1zl/MVeAS2LBvRRtcBTaA5pBAdM469mPCA3acYlSsQdQKAFtJPOiG
m6QX7PGzF6m6qYNS84opI79U+izH8X4dq/gqMY2OxSQxxuL9PTaVn6fIPh8U
GmuPD/oeCSMvvxDhswLG2r3/EG3auodefHmrCDDEK+t304ZN+2jDdiepqcMR
uAO+LGePYPI8EkV+4UmCW4BVsisaGLe0UGJeCQXHpZFtdJbOmTEYrFvcz8vZ
G9WaT4DxBp5VfHWShxd5+Dg3zGOcK3Lyce7gGsW1eB4OF9yIa0SdJK4Zsnmr
E63bsEfGBGPzwtotgkW373ISDguMoafvUcGsGFtIAHozAlvx2ENwL4B5cW9w
j4CxgIkT+d4lZebLe7UtXTR36jzdcuuSvwX3HjVxuBZ97ThnHPcAq558q3Jg
qT2F88f+iz1J80SQY6a8b4iLWvse6UNttNtuu03GTfs7qpw7f1HswrLySuFj
qKpvFt9VcU0jFbK+g56DTamcDGpzWnMorFhL/VZNFv3aIPyENsFWqoeBq8rs
mK1Z4g+wkYGtYDOD6xP4SjgZ2KYWbDU9are3Z+zxk4k34KulfWXiDTXs1lor
CHwB6heAj0DzVgz/wbgDzmIBvoMfbXxI/BCjpk9Cc+ARP7TnrnS2UV1DreAJ
8DJcvPj6MrxizQvBvVZuXO1TC4wFrGK1p1d7Dv8lngKrn8ba68362nGuqQ9Z
c0KUj1P5KGy2XskTR83kxMTkG7gdkHeG2r2VzvFyrC/reCqHKPSz5pit1EPQ
RJfCWVVbW03VNeVU31BN7R3N9p6AgrvRC3DAJnMEccBJu8/KxFZTwxLH/kv4
amFmmI5PGyI4a2ZIjtbcq5VihOqjVXwFQZ4i5rPGHiXPy5zf0zznscbgKzb4
dw0O346eLukphbVZJ9jIWK+Ovmu1uYCjYD/VW3Ku8DmOjrWCEOAq5CJA8irr
KceUotomKqs3emShn05pVZ3wujcw1kpJSZN+E7hXmGuoHbT2W1upXk7fw/HX
v/71sv0CNsDbgcNH9wWsKa3z1b6Mmo+rD3AjaQwINjrm9g9/+EOp98e3sA+k
5BRI/X5afgllFJTKc+zRwFnYt5H7HhKTTEejkyRHC3s7cruDjxk5WIoBgK8g
8L3AB4OeMC++vEViYBu37KWNm/fTy+t20XMvbqFXtuyjVzbuoZ17PWi3kw+5
eoUKJgE+UU6BrPJ6wS7VnT1U1tzN55BKp84ZPFiaH3q5e7dgngCL47eAS/Db
SLPNK2+QuCXODeeYU9locInFpcs1+ATFyjXtdfaTa1y/eZ9c8/PrdtCLa7cL
zgS+enn9DvHxYazQ49rV44jBtcr4CpjV8F9FCpYFvgqJShKMK/jKrEsAloK/
KjEjjxKz8gUXZxSWUUpuESVk5lFZdb1wuKO/JNaGo18TPhkrxsJ1QscrxwAw
+tuBX1T7nmHuaHwQD9xj9Y071oggZgrbDuvoO9/5zrLPgDvBFYP/jX4dMbGJ
YhtCj0GfVTa2iO0IbAV7MreK7QXWf+CnQczQmu+uGMtqo0KAo1TH6mcSN+D3
NT6g9itsYuhv2MjAV8An6GfTZ/a0gU0N29qKrzQHGGK1zxVTWfeelfgZ1LcF
XAV/gLF3jYi/AHua1COaMRrr3gd8BZmy8JTCLwFBDEhzbHp7e8SPAX9GU1OD
+Dbw/koYWB/aixVrFhjLyu9+uTkMVorF6UNr3h176lrzW3QNLuV/G5/Dbzc3
tyh4CvxRra0dIuA56O8flJiicjsY/oMTIq++urze0JHLYbWu2cp7ApyHtQEf
m/Yw0p4siq/0eufnZ6m+vlbubVd3m0h3T7sxZwdtSwJeKz4CWwFXQZAXOAdO
EfCJTA9JHaxVFFdZsZUhg6YM2XPYrXwj1pihNf4tnAyzk8LPoP6rWdNGmTVx
FtYW8NWwGY8flGMvdfZ0UnNHC6/PVuHykv7NjYbvCTYXRPWC1Y+t616xl+YX
2OOAJt8VcBX4GCDZrH+yK+oop7yWcvlYUMn/t7pBsFV2XjGdZfvEw8vX7KP2
LokHwn/w0Y9+VPKwtJYQnyue0nxuK/6y2gfKkYi1p7lXb2VRjKW8iNAlyK0C
F5iuX8x75Fqpvwpjif7MScmpVFRaKXWB6FsEn1V2CR8Rn2WMhX05OadQcFZM
ahZF8v4dihysuFTZ07G/Y58PARdoSIwdAwAPIKaF58AI4HZCThF64KBODthh
2y5n+vNLm+nPL2yhdRv30qZtBwWD7DroQ85eIcJ9fjQ+g7FLjexHFehB3t3L
+KVBuAZOnb8g/itcv/IxXe6xhm6AnsBz4Cugk/CETMF/VR3dIjhXYCycu29Y
PLl4h0p/Z1zbxq1OfJ1Ocs3PvbiJ1m3aLbWU4AjD2CAuuM/JXcZMxxBHjKP6
roBlMebwXQHr4l5AgK8kPpiRS8lZBXLv4IfEMZ2xMvog4R63dfbSyTPnGQPE
C5eHxrcQM3zhhRfsdjYewOilpaXiP0YuI9aO5nhc7Xm/GvdS+x5YH4ibGrwl
S703rYL1Y7XlUJOL8YJ/BLysSUkpbH/XURPPV+BZ8LMDYyGvPV/mRr3oPNiW
EjNE3zD0ZjZtT2tNodVWVRtWsZXauWr3LtUgGvgKfZuBr2ArA18hBwQ2tOZe
QffDxrbuCUv2/viy/Pa/5MOyxk4giqsg2MN0X7sUvtLad/gfdL+cNHHWCOOr
ocHeZZxZ2HNxhG9DfBwm5sc9teISfcCGANaAztceOhrbvtz4yhFjOfqoVsrr
fgPmAhZ7baleEgJuipMnTtPQ0Bg1N7VTXR342VrFp9XTY7PHDbFeca3z80v8
WY79GVd7DDS/UXlENa8d90n9I9bHhQvg3p2VXKvq6krq7Go1+lkKvmozajGG
+gSnqGBeAI9jzhgxwSE7tlqYGnoDxrLiKwP7D4vfCtjqxJSBr6xYSjlJxvi3
wXsF3GWf35LvbvBfzU0auAr+12kzl1H6GvCcBr5CDYngK/G79Ujvzi7GV9oX
HfgKfRrQUxS9Ra2coMo7bOVtseZWaS+cYvPv8H3FVvj73PJKyq4Er1GNYKuc
0irKKa6kYth2vA/UNbeLX0VryYGf0J+4trZW/E9aD6exDeg9vNZcXfVrubi4
LFtvuh7fqvkjK4m1Jhe6BBgAtoPaSYgFKu86xsjFxU3GAjVm+cVl0p8DeW+4
B7ll1ZRZUiGSVlhKqfnGHo08adT4hzPGColLEXwVynv80chECkXPPcYSwFjq
xwIuABZAbMvHP1SwAT7fy/hKc7M2bz9AL76yg9au30XrtuynDYyxgK+8gmIo
MDqVkvLLKaWwkgrrWZfa+sVHhPkSnphFJTWN9vpSXbuX+35ac6/w28MTc3SM
cVRacbVgK5xjOduSOOfkggrhn3f1OUa7nX1p805XWs/46qV1O81r3mEfi137
Dsl4oTYQPAzAVfBTKVbFEWOHMZax5jG34ivcE3BbxaZlCxYGrsK9A07GfcRR
1hbfY+z58K0ghkVE9txsxQvQzarrjVyITtHT2kv7rcBj8teI2iTYd619pXRM
VI9Y+SqseVYqyF/DmKFfp+KudZs2S/w6PStfbMX8shpDv7EdCTFsymq7nVlo
+rKgJ61c7pqbZfVjqQ2rNqu1r06F2asQ+MrguW6lls5Wey9mxVeO8UHFV5pH
AnylNrriKeUGWpFX1OSzxr625BMYXOYrUIwltYiWvQ9/I/vhlOGHgCjGGkeu
mPgsjPiK4iwI4kbYg9FHoa6uRvryoOLEEV/hoVw22Dc0fqZcgqtdd7xS/ry+
p7VHGu9TnlCNA6pegQBX4Woumlf1uomrtHfMhfOvSY4//Fjo8woB71dHR6fo
KOhEzYNXn5a1T9xK/XZWQ3RMldsbOA/nAl84+qoqnNR8nenpSfFbAV+1tDYJ
bu7t6xSMpXMVc8DIt+J5ix43Y4MSC9T5or4ryMLkoBkjdMBXJsYycq5GHfCV
EVOcmRjl3xiiFl5HNVXV1NrURL2Mh5A7fxy1H3OwJ6ZlXcxOgLPEiGtjno6h
X4HWL/LvA2M54iuZt8hxR41sT5fYP4jjA19hHUMHKE+VlSdP9UKp+T3YashX
L6yut39fMZUdW8F3xfgqs7zKvp9n8x4AOxv6qLyG/760YhmH0/3330+urq7i
p0Heg+rAjRs3Si0huMlhRyL3Sm1Pq21g9V1d7njSlRTVEZpXAl2C9zS+rbX4
wFbgotY5fob/JjOviMprG6myqY0KqhtF/2dVVBvCODeruEJ8WdizEzILpEdh
WGK6+Euwt8OXEhweL3FC7P3wZQEHAGdFxCZTSEQcBYfFyOfRjEXQa1Bz4BE7
3L7bVfKSNu44SPvc/MnJK4j8kMPNGOpofLrkNVW281wcGKaWwSEqY7s8tbBK
Yl8nTr0q12Kzwfc/elk4X/R/Gb3OJuS3VA/CX1RY3UKlzW3U2Ncv5wg/W3pJ
FYUkZFBAdDIdCU8mJ49A2n/oiFzjlh3O0hNo30Ev8eMhxwq9gqLi0mWMjobH
iginFmMs4CocMa4YXxHkv8WnicCfCHwVm5bLOLhE7lV6UZmxprC2yo19Hb7h
SrZ1i6pqJS8I+devm3obvAJYT+AcxVFjGTgCO2hO6luVR/RSawZrZSUflrOz
s/h4rRgLPYeUK8yKu7C+oHe0t4Ry8WJfBJaFrViEHAjTdoEtCb0HgR60Yizo
SrVhlXtUY4Yr1QapDrZ/n/9We0FDd7cKz0Gr2MyDpp7HXgWdj/gg9gCtIZw0
bXCNdcA2V45q4Cn1XwFLwaZXe1/fl9gKctot+Ap7mO5nfw2+Ug4I+CSwb02Y
Piz1W8CXBcH+C2yF2BH8HXX1VeL7QD8e68Oaj6o1bDgafA1LMcLVxleOHAXK
U2XlwgbuUL/wxCSPJX9+gcHTWdY3J08zPjnDf4/aLRNjvW5yfSm+Uu6vC+cv
Si4a+M81Hgp/PjAWdL1yauP3NMdfeVUuB76y7kWaf4VzgJ02P79IGv5UPImc
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
cFiNgqvw2p6D9e/4K4xWGYZeKepfgK32thr6LTulj94mylmfy/7OCrHD8Ifs
9ues2SdHY5k41+DHwpbjsyiXpTlsuq8udD7t+niwIZgv7F+dqzOmBseeva1S
GwHsjVgGcBbufRXjJuBu2EfEn6EBKP1EeO7RF7e8RjFUOb+upAqeh8pa4K5N
8n+wJkurTA5LMFYVr9lKKq3ZQhtr6mgF79/FWSvlbF7BtmwZ+4qiJ5eVS8lL
smneouUUHTtHeoeijtDF3YccGFd5eAfIa2fGVvLs4Ufu7DN58f4BvnL3jyJX
3ygKiJhDwVHzeR/OJCfPEHJBrhXqVRhfAT+Nd3Bn32kKjRrjRKPHO9O4yR6S
ew9MhTHNM5icvUJkAGs5uQaQq6eh6Y78K+iPTmSMN3bcJN7LTqJ91ZX9025d
L7XV2HRhrHUp466rTS0Z7el8CduDieTE+Aw5AqjlGzVynNg91XlGrgvul3Id
F3om2/NalNPE3kW9g9GHzKhtbN1zgL7uM4B97D8JBlSNeUNb4jLGu15smxaJ
ngNydJdkGbZpyVrGV+vz+V4a+Vc4kzbw2YIzKR/4utzodbyOvwbGQk68ns+V
5cZn7WzcgbnGdaCW08r7bdkj9a/r8jdQjWiWVNO2HYb+0xa2sfrA/8V+Ri6o
oS2kvigJZtOcus78fP/NUN1y9Jkz8kpPCe+hukxa56qPbaY2RcP2KtH9wVzB
DqA+EBpC+kC+LP6u2qfOwlawr6JbU1ZucpaGvc5YsYpyGUNhreahN7fpI2D9
4hlrOzN3g6x16T3M/sWC9EzKgIbA4gxaiHzPufPoki5dbfnuRq5i78/7UFzs
LOrZ8x753ief9CL0WAY/AL0D+N7a1/difEbN2cHa3LVrh9gUO54Dfw7fD9rs
6IOD/DHYAVzbHXfcQdOnx9HTTz1Hjz3yON3T817LrsGPvKJ7V3rwgT+KHXF0
cCIXVy9yd/c3uH6/cOl7gbpsN99wsbmwofBd1X8d4+BGo8ZNk7gBfFzgK0cn
H7G9+D8eqO1me+0bGk9+oXMoMHIu2/YYtuVhbN8j2H+OJf+ImeQZYOAr+Lrw
ueGLO01zF3/c2cWTfHyDRGseGofIEwE3tjqvRHLnk9KyafnqIsqCftDaHMrK
W8N+Idur0irBVgXlBjcAngBnHQZwk+Ap3vtVjKnAL4BngBYRcBX4B2i6AWeB
l0AOsvAUcqZWCH9haDYY+TTgZ6Azao97gQcBfwycoD31LmbelWpjqhYD8Afe
B+8LrID3BhcEuyW91KiNk4GuhNT5tBo5VkcZQyHfCrosxyXfvVF4rX9XQ2hg
K7xulN6te+0D2nlmPivyDyRGWFtN6wvyZX6PHD9uXcdZ09cDh4V9g7WIOjHY
GO3Rizin9kOx62NdaC6bxh1xbzBn4Jwxb5hHOxZFX5y9+/fRzkbGYBVlVFxS
RCVlG6089krG7ZW1Ri81DNRqI2cduj5F5aVUULqRv1/Ga69csFZxOeMwXodl
jM2KGauhvy36w6Lfra7Z9YyzchmrrUXPsYKNYq+As5CDjtyF+Skr+OxezXZq
IU1HX0D0XDC5I9SkQOtT8ij5tbuPgZ08g6Jlz2H4hMwUfOUfNpf9oTjpSzgN
/W54v2LvgqcaPYmxzURX8ZnwPH6KJzk4+8r+9gyIEj8Kw9UnzMJXyJlHXBGa
DdB0AQc9lu0TegsmJSWzD/iOxfuo7mAX0eYz6nFQvw189Yc//EH+D3oTThg/
WTisoUNG0oy42ZZmAGw/8M/F6A9iX0uqMWjXcEbvZj0HnnnmL9T364GMpa4Q
vIX+H+g9qD/39w+gxAWpNH/REunDirpC6FHi/mWuXSf5VtnAI+z36/lUyPe+
pLpWfEHYq5XIycrOES0H8CM4Y7Gfwed21lmrcwObg/0I/4dsftLRI0Ze3Kaq
csnxRr428odwv5AvDFuEecX+AgcBfwb7HfsOf+8/9er9Xxuqx6q9jfFZsGa0
d4dy4lijhm7tqTbdFp6f4uJCOnL4hNVnDQ/YO3C99rnojPx+4EKsNXwm4Glg
SPSVzskroLWFxWyjKsVeyeB1a+dhsbaxxmGzwF9h7WMPJKdlCr5KWryE+vbt
Y2Er9OPEM7ihf/z9Zfrqy29oyJBhpr/SzeJKtT+g7oGLsVb0b+Bcwf3au3eP
teereC8ibwG2Z/w4R7FH999/v6XLYNRDdjdsV9duVjywi9mnAVgMPPuo0eMN
G+jgLPqhiNk5uwdY9lLjABjwVWF/8b2JTt401tFd4oTgr4C1YJdhg4HHgK8c
3djeuodQYEQiBUUlSEzCxSdSfGj40vCpXbyDxc/W4e7lz/bZlZwYW3kxtgoM
iRQfHfqlSemrRF8LA/gKfj1Geg50thhXI8ZUzf5/Va3wAbj/JTXVwl0JX8D+
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
UFG8lqtyrYgIIh22916ym2xv2d6zJZtk03svk2RKZjJpk0lm0sv2ze7m+b/P
+82ZnV0BWdgl6zXD7zCT2WTmK+e853nb84i/ePElFnfD/fd/U/lSLRtyMY7J
x0wRf5NYaua8VcpXFbVwDeaJXzpLsBb9VNPbTZu6bP0O9WHp09K3XSJYaNG6
7Vgq9mTr3iyxy/Hy3jbVdd4odmRXViGS8sqQXVKle04KeTTsLpTUhWoNPG6N
G2WWVGJvbrHsHxnYkpCqz2u3J6qvvn53itj/ZI05MqfL/KD2JexOUB+fY29m
Pvaw54YcHQ675gQZH7BGg8YNPD6/zg1qJXlb2mVvCyreMqPU4VEOwN1Zudi4
dRt27NhxauwqZPtZu85BH5LrjNjXcORF6uGcrTXA+Im591zTA8dOauUZPWLD
Ia/YPlR7r5o4gk/2yXxh7KpO9qy+dh96qWPRQYzVIsOPfsFRxFXUHFVsRb3W
jmYLV4WG6r1H5AZN/CqMrWSYHGHQxK5aGyxs5atFXaPYT/LfU1em0QsXeTdr
qlDttKHKUaE6ytUOm/KM+QR7HDi0P1w/xrNjXTn3RsPZYGJY7zYHa+rjImNh
vObEtByMFZr7zPxhZI1YeF7IW4yhJmbkCL4vxt7sfLU3q7fs0BhFOmNb+dSa
y9HYqrfFL9iqBcG+bgR6u1Af8MsIoDHQjqqaWlQ6xa65LS428jvklnEPLkFW
WSmyy8u1l0N17KqdKJZ5W17XiMrGJjia/aglHhHc55Tjdsk9t1MP3t8Ct/gB
NTL/Pb4WzWFW1dWjpEb8UNnPybm8W9bPdsFtXKubEtJl3SXpIM5avTVBaybX
xe1VjMU+RNZSEnfFrNyAaLEPc8W/miG2Y+q8FRrf3p2UKvblEu25/upXvq72
89DBI2KDLN4Y6l+YvenBBx9Ue0Sdr9AVRZmcb02NU3XWOed5vyO1Qt5JHoD2
lz7KYIgz0S1+1ssvva718+xd5DHSl+ax/PSnP7FqAGVJ1Yoff8unbtb3r7vu
Wlx//fWaz5g7dyEWLV6h2GrpinVYsmIDlq3aKmMTVohvuEZsY+yGONXNpg9P
jMVYVlxiMlIyM3VeZId6btiTw55lh8fSS6UuX0OTNVyCvalFkZopODthT9iX
4j5P/Hk+YZE328NOf4/3ksdPbmaTE+DK4r1mjwGxFu/5O7nXZ2OY76QNMMdE
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
WnFh1oXwdXOdjuYQrvKFakZ0NNVq/Njk6mmDGlj7JfjKKxiQHPj0/axh1bqf
jLdZutnMD9qdDr2nJk5nzpfnXyfY3SU+P3Gu0SI0+Odc7Cun53xNrtDUgXHQ
7vN4+DvcW4i5OEw/N+eP1vKG4jOq0YaTeV6rf2rwlPd0WGWbOiXJZ3vk+Ikw
3owgvrd+Sceg1iEA4XSlfu5hee6TOZUstpRcvP3ymnyXOeV25dFizp/1VeRn
YL6fcWr2qyzdsEN55+ISslHl9iN2IzlRUrBVsNXW+AxkFlTp9Texc3Nu5loZ
G7Nr164w1jT409Qrfu1rX1ObRO0Z8+D14nU8F/sR1y0xFudkfn6uXjfWTPBx
4403qT2/8v3XKF8DcdZDD35H+8bZH85a18mTJ2s/+dSpczU3OHu+7BHzFgqu
moNXXrd0xpTrZt4SLF+9Ufmw6M+zrp09VuQIyiguV22vzLJqxGfkoKCSvdXV
KKuya20L105rC/c5S1+B+Ko/xFfHfY+aVa0B8T+r7SivqFS73RpoRUdX+1m1
Q+90vdD/IFblw+Go1L2bsfHIc+G+bTAWbQn37QZ5doodKJbrkV1Srv51VmER
7O4ay58M+Tfnao0zN0GdUX4Xcx7k+WGNI+tzy+XeOzxOtas8Vvqapl+a58J7
w3Nj/SptJ/3Q8gqLE5ZYgPjhfOC9CrS1ajyRj+z8As0zNwt2Iteh0Z89eZ/a
tGfc39yg9bNG44RxPM7ZHelZyKkS34z4Sq4V5zZ9CPZxcM6zDot+xtzo5eqH
UON49Lipsj6iMHVWlGKtKdPnI0rWz+zZc/Hb3zyBD9/wIVx11VVhbPWjx/5b
udD/5xdPqOaMeZj0EmMsxl6ci/gm93veu8hct8FRP//5z1Xf/fQHbdxtt90W
jmGdAjFkHDl6DKW2atULit2SqJxWiVmCpZLzsWFnGlZtTsDOlDzszS/H1Jjl
4vO6lDOUtbHkXyhw1GgNR5pgsRxbDeLSc5AhtiBR/ONMm03tPb0ubh+MTxm+
TsOPrnN+4HgonhTy8UNjYDACEw1aGMNsNYx3mJroyHHsxKlcFvz80+MMWqs8
cCz8s4kbMebIPZL7o8ntnis/xHA5ReIr7t2q7drcgoOHDp8Sz2G8g3Ee5tOI
TRgLIr7SenLlQrB68xgvYv6Jtb1HuIY6W5WjoVPsnsavBBcZbNUqo8Un9qPp
JG5qlLWlQ95rDGMor9aL8H3tMQn9mzW8IWzFunbBVvW1GmPzeC2MxVFbJ/iv
vjaEqxyKtRiDY/0oNbXbOzvC52r0lvv3HYCnth52h0vxi+EY5TUzz2fbhp3e
X2jeJ7Yz94fzgxiYg74O8/WMsfG+MTdQXl6u/aZGM5L5ZdpxYh+jE3QK34Pp
TTTQaTCyBu2EFUvr7UNnaxC+OsGxcl339fbgwP59MKvDfB75wwYGjlj9pvKe
T3C6ySlWeRqQlFmAOMFVCRmFWLc9Ufurc8uc8HX0oz7QjUp3A2obW3Tdldgc
yC0qF7/ocDj2G147EToW5j3ymyxevPiU/OjpOkisWaUdIqen4XDlNYzsyToX
95L3gH1BRgPH8O6Y2gna9Cf/+LTWuDNvOHXKDIwcORavvjYa4yZM132BvDbc
JxjHGjthJl5+bTxeeHmM6lyzR0o5f5gblP1mR2KaaofsEn+U2kXkClq8Jk45
AYmxZi5cp33M1bJOW4LWvt1L3c9uiwOY+x2x1aH+TtVZYO07+3vS0jPDdpLz
b6j71eh/MM7PY2JdD2PR9M+IO4weF1+TS8/oP/gZv6qvUeyiMSzxr9ifViU+
GHswWOdBbXXOGq6fs73OTe6Ya5Zrkb45v5O959Ra4LEwZsNj4zHW0x9lnRzz
uIHmEPeyP6zlylpWnjNzh9SI4oFzTg91DwLnBm2Q2UATEveqbQ60+nROcW5x
jhmsyOcemYOci9TgILZi/DWjqEpzg+w33paYJdigGAlZBaplzp6xjXF7NH7F
uc8Y7vwFy2VdjMLzL40W/2Oi+iKW1vAijWFNmTJH9bRefmUExo4dr1zo06fN
1rU3csRY3H3XveF6Juo9KE9GyK8sKipQ7HOu5j1theEMMA+DrzgX+TB5CfPg
fLrnnnv0dz72sY+dgj0i7fy+/YeRmF4omDRd/C+xCbvTlF/U09SBNVv3KAfo
RvFz49MLLK4qeY8asqyDXbh2q/JFUxPCG+hAoG8fdqemoEv2RFpik+fQupqj
BtcwUHEMYX88FLg4ESprOSr/IycZeVTDLjvMNjR4CqayGKFOvmdyNIwz8Fpx
zyPmpR0njjIxB/5M+2DiEoxTcC89Xbf7XMVKTCzG5KM4d6hRz7wY9Voi4znc
n2kLHC6rLpy1S8QrJoZFbGXFiayYEXHNQH8HDvYElWO0m7VWzAdyCNZifrBV
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
sbOwaG08/vLqdFz2b5/F5Vffgc/c8W3sTc9FR8CPg+ID7Ze9j72+fbIeWTd5
pKcl3IOnddSyR5JbrqKqUjFNW9DCxkNhu/idtMOBoMV9Tm5Fn59c4PTpAsrd
1SD+0/U3fhW3fOH/weOu01rMqEWr8cD3fooRsvcuWh6LJStXa98A66NnRy/F
3CWxqkVbJfiKFS2DJwY0LnA2jpn2Q2trBo9pXzt1Q6hHMmfRSo2/bN6+Vzk4
VqxZjwVLV6o271e/+QM9ZnKIJiak4sOfEkx48716T1R/rKcVfXKvaCvTs3O0
3pE+77mqEXo794WY+9iAlfTI1XxyndaIsVaMvjbH4V4rx8lcBs/lALmoZd6x
Hvbh7/8ad33tF7j8qjvw/us+j2999wlMmBuLn//2Bbw2cgZ+8dPf4pWXxovf
sUDjURsEF9On4LoYPWkOXh05BROmzMfYKVGnxK+YI5wTvQTzFqxU/ePxM5ao
Xt/lV1yp2qUnudDf93f46ic/sTTYTX/Ruby2kb1nZt6c7e8wn298WBPvMvF+
U2vGuc/4Ftd9U1NDWN+TuSzad4OB3s4e8mZxgDc6Z/P7b3Z9Ip/P9z0jfK0F
F3PucE9gXYPhDDf1faZ/ge8rtwHzuvUNqhfL+JBVk0nNznqNHwWZD+xif1mL
1jwQb3VQ50x8sY7Qa8a2W1r8aPI3o7lVcHTAwlc+v091P+m/sa4ijK9CuEo5
t8LYihrsLuWMsbs55HWtW7EVh4v5aBk2Oa8yGdnlFSiUUR3qBzEPg7Not03O
mvMskodsqO/VGw3DtfF21q15Pptxm9PXDPsFyAlhPj/SP3kzLYLIYzrXcaX3
ak3RXhl8xXMhf82sWbPC8VI+WDfEPkLa8Wuuu1bmciPWbo3Hio17EL1qK2JW
bsTC2C2qz8q63nlL1iJm2XrBAqsxde5SjBaMNWfhaoydOk/2kFhEL9uEUROj
ME7eHzFiAp568nk89dTftDd9+uwlWBuXIr79ZPzhmZFIyMjXdXpkfzf6ue+J
/8OYiHIT9QZ0/zP4inES1o4zhlJRUarH3tPT+3e58/dqmNq9RvI5y7GkZGWh
yVcf7vdnbYK3xo5b73gEs2JWaI1Zep4NF1x2K/7t+q/hymu/gB1JOZg0ZRbG
jpukuaIpM+fJvrscO1Oz4G3vQEm1S3MjyrF1Fuy2ie3w1pPf2tXSiu17MwQb
L8bsqEXaM8pjYZ/bnowSOcYv4vN3/jduuuV+sV8t6jc+P2ImPvTxb2g9luHS
4DkzRrQ9Pl6vBfMPph/nvZ7zVm17UOaF5ZvbbOU6Z4jNOYcUF8pxH+216uP4
2sTiju3r1L2htNKOT9/+LXzqsw/ix79+DkvWx2PBik14+fVJ+OMfn8Of/vCs
Po8Wn2H81AXic2zSeC99jMmzF2ME69pnWz7I3IWyJpauE9y8FvOXb0D08vU6
6L9Qo2/D9gS09e0P4yjj80RHR4f10Pgz+/hMvozz4XzdC97NfYus443M41m6
6V3iM+/TQVxF//mg+NHUPTn9s97J959u79/pXnA+4iteT+Im4ghiJ6PJ0hHB
683z0x7PEIZnfZVL/EH2uzAGzJ5i9joTzzBuxPwg8RHrlanD4Wd8uDOgtZjB
lia0NDcINm6Et64ezhqP+pZavxXiBWW9ZoPg5Trxfci7wME4llVvVafD21QL
T4PJCTpR7XYoJ3Oly3qm/oXqTLBPU/wit2DxalkbeXYHUvIKsDshEXl5eRZf
fSg3aPpaTf+D0X40uOCffc+PnL9DfTzvdi2d78PwgNOfN7l2s44MnufIzc1V
u756bazuj8np2VizLQFrdqWprv3quCSs3paItduTsGTtdsVbC2O3YvaCNZi3
bKPuG1PnrZD9RfaS5Zswfd5yjXkxB/Lss6/ixRdH4sUXXsO06XNU85Zxm7j4
ZKTllmp/CuPKhjOF+x/5HxkHMvVXhhOAXJaBoA8VthI9fvpjPT1DE7/ioN3i
9eX1pPYKawdY62m4K7l3Mw+tdZ3iv2UVV+Pjtz6oeaebbvkmZi3eqNfo+b+9
gtdeH4NZcxciavEqsQ1lqkFAznvlTTxi9fy9G9vNY2WNDB9HBF/VBTtRGwio
fsnchSsF/8bgmWde0mNhzd2Euavw4U/8Jy69+jbtn8suqkYg0KL1qeQyMOfI
0dfdoj3ce9PSOavUfg/V/k+9ItpThK4b74lX/F9yviqWCs0lrb9iLVmXFb8i
7zRr45jX4L6RlluM1Ru2YPX6nYhdtwMLFi7D3557Wa/RiBGTtOZwZvRKTJy5
EHMXrcPUqFUYP3MBZgme4vvTolYIJtuC6BUbBUftQOyWPVi5aTeWb96NRevj
sGxjPHbszUZH9z6Qgdlw0pkYAh+mdiTywbnO2pmh5hd7t+PN/Nk3ssGRtbyR
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
A+cY5xrxFXvD2dOUU1CI7IISrb265bMP4Se/eAbbd+/V2v8Vsesxd/4SzIxa
iAXL12nvYFqx2HKZ09TNUf1yW6X8XISkvBJdJxmldlkPNaplzPXDdbRyQ7zq
xURycpqHiVEZbYtIvpqhnuvD459rvBE/A/GE0fAxcSvDXaB8M909Gveh9mNh
tUPjQfY62SMa6+Gqs7AP7UB5VSWy5HcqBCMVybzPEb+btYj3f/dn+PyXH8IX
734Y33/893jp9QlYsmItdiUmC77KVYyVmVeIwjIbyqqqNR7mCtWpO0M5R4dg
JsbDneTeklGtNVd2lFZXad6ypEJGeQVs1dRJ9aCG/AD+FjlGHyo9XuSWV2FH
crpqWLGf8EhIC9LgK9ono7XN6/FeaeMMj3+tYXgkuO7ozzCvwvlm9OOo58iZ
WV1Th4TUPGwQrMV+M+4b1LevqGsUDBBEXaAZ9YFWuJtbUCX7tl3WYq7gL9Zw
RS9fizkLV2L2olgsX79N9qF8JOcVIb0oB/ll1bI+PSEtFo/GQag7RT3h1kCT
Du555A6mnmRJSYmuCebTecxvVu/wXq4Trk3aK9qnrJw8jcWRA1z1kNv9Wi/W
LOdDPplC8atSi8u1tpn9Y1PnLcXGnclYF5ckmHMjZs5fo3U8zDOt3B6PnEqx
P75mZFXYxbY163ecKfcRr4WpR0rLL1G9XOszq7B4wy7Na7EvYYY8L1tjacAt
Fcw1PXoFJs9ZpXowaSXlKKcmoeBcxueC5PDqsLBji+AT9mtnZecqPmfv9/mA
A0ytiemT0hrfE8eRlJqC1pbGsF415xrnnNEsop3Pl/0iJbsQybl5lsZTXILV
07FwFWbME3wVswyxW+JVm7BS1ky5tw61zZz/frj99ahu8uv6KHS6FWcRK6+L
k+u6ZofqSNF7Ib8r7w2Pj3Oaa47Pph7ErM2hvo7D4597RMZlzJownK8m7xxZ
49fgbxVfKkfmfZFyHle4PapnUC82xEOM5SZ3ZzWKykqRllcsGKscaTllWLU+
AQ9971e47UvfwQ0fuxvX33AHbrjpbnzpnu+pv7ZucxxSs/JCGCtX8VW5YJ9K
Zw2qXKyvqg3Vqzut2nUOlzWYhywWLJZfbkOB/F2x2K6yKnJFCP5i/Xx9g2Ir
e30jqmrrUWJ3q3bonrRs5BaVoaun/5T6K9psw+1GnHmuOb6Hx/CIrCHlfGNc
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
8HjP9NgYDze92NRkmbFwHeYvXI3R42fod82YG626zuTR5LEsWLJGj434isfK
2u7dqTkWv0NltZ6T2kIZSWmZ+rmM2ZyNuUW8a82DE5rbLS4pQ6WzSnsVfb5G
1Wkmxz+1bHhvu7rbwn1QnDf/qA7L4H7OQ3JVW+57iHfw6IlTcnvGF+CDf1NR
ZlOuCxOPekN7PDBso4fH+TUitasNxqA/yvWivHgDJ3WYDssaODQwiH1HLIy1
OzULiZk5Wkta7W1S/gPGjdhXuHDZKsQsWYHoxSvx7PMjcf9Dj+NzX3gQ/3Hj
V3DN9Xfi367juAMfv/k+/PCnf8LM6OXIKCpCRnG+2MRywUzsPa7TnF9JtdPS
OnQ4BFtVCnaqUIxFfMU8IeuxyMNFHqDmji6tt0/MyEJSehYKygSvlZVq/3a9
P4CDspfIKWiN8GAIW3HNMm7HGgGeO/eWSK7eob5Hw2N4vNMRub45z+k3sI7I
DPoTnO/MB3EN8N//UUxJtZXl91mXQ2zFvZAV4Pt6O5Sjm7ziqicnWKubWKsz
oNpyne0t8PmblB8vMzdPbQqPj/jv3awzExshNEiWNc94NW0SR5ZgBOKrnclZ
WBu3R7kQ1m3ahWWrtmDR8rWIWrAMMYKzJk+bh/Hjp+P1URMxdsJ0TJo6R2zY
WuWk4ecz3kKbeKbHxhggsSxrhDbv2iPYahXGjJ+Gl14dgxGjJ2HSpFmYNjMG
CxavVltJbLVyzXY9xjVbdyu+2pWSjZTcIs11MobFvCdx4+7EZDVi/yh29Hbm
iOkR4CM9O0dwcDlaAn7VTyJXK3lBuzv86G5vUuxMXn/e656ePhhkxDww8bLh
T3yr7yTW4n03tV2mP4K5PuIvzkXuRTy3SA2Nt4PFh2ushsf5MiL5amg3Oc/p
hxq7y7Vi1p3mFRj7kdHS2a8+FONCe7NyNbabmpsvuMcBl+Cb+YuWqd7ZqnWb
MH7ybHz7uz/BrZ/7Om648cu44aNfxQduuBsfvule/OyXL2Da3FUaA0/Oy5VB
3pd85VOocHkFV9VoDRZ7dlljVWCrQH5FGQory8P4irWQ5JB3+5rQ1N6m+Cqz
oAhl1Xa0i+9zkNw1Bw7isGBFhpqtkvbBsOYuz5f2mbaQ65n+0nDv7vD4vzTe
SJ+er826N/P9H+1N/F36IeTlMnGGY7KOqN1CfKUa0YKpVM+3w9Iw7Otsxv7u
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
XKTnlarvy5rfL3JldnJKsbOpjVzUkzd+2MZ2roSvOPeUFbQZiOltfViOLt5a
x+ssg70HGRfcYu+MDdv2iF3koT4rr6BIGdFaP8j89kj1XZQgQ7BVflWt8jg3
9fShU+yOfllv1gH3jI6go78XfcNDOCj7TuORC74r4quzom9m5CzxfoivaAdS
xlweT1nEV3+e/cN9Yjg9WE9HWXHxoqXGs5G1N/J3Zc3dqG7tE9k9qPVnlOFl
zZ0oqBW8VdUksqBJZQbjaPTvhCVmqd/HKzhKsHk0HL0iRA8EIiU9R+1N6rEX
XliuealLltxmrUMzMShzGb8W9zDjyNfD20j/BHNCLbbmJQz0D2vOzvFjJ9DX
O4gHPvBBpKdlq9789rf+D9zdvJUTbttOJ42/bLN3V58OMYezV7AOV+9wOLgF
ITQuC26BMYhOK0ReRT3qevvRKbi0j7yDU7OCP7s0nto92G89b5xj2hK3io/c
rLeZk+NnzsFNznZpc4/6I+mfc5JndHCSediwTedi2dI7sfz5l/GLn/3Smrtu
WR9L/uT2bbtgv9MRzz37kn7mm42JKpfasWPWnCv+24JrlgqGWoKf/vR/5V7e
gT/84Q+KiyvLK/HSC6+ofvvud76HxMQkfOxj/2j1i1+LDuVe4t9yD56RuVh2
1xL1gywRrL38uRXqnyPGYd/m3JyCP8mf3rZtm5Ub4K328FPOMO25sw4urp5w
EruXgpI+1s9+9rP6HfzOP/7hKfztAw/hicd/h/Wbdmh8cOduL7j6RSA8IUv1
dWFdm57Fcwvnh/Upt1rG0LannWNyQ2qamjAlZyOH/Wn7xCafnkHb2JjKldK6
VsTllGic0z8yBS4+EXDxCoeLd4j66Iglt2x30ZwznlNyC/WLTbP0znfIei1F
e1v3AkZegitd9IFea36glYNL5CFtNHJCEKdxcO/b29vrfigtLUVsbKw11+HU
yXPYarcTd9/1LmzeshWOrr5w8BDZERCr/L20z5g3wToE5prRd7W/ukXtVMZD
C+tadF5Km/nar3K2SvBWW/+INV547twZzffkPbGe8VbKlL+WcTke4avhjaXt
TP3JfXLooMWGYEyQ+exu3gGab7XT0RObxWbdLBhrp2Avd/8w+ITGaF570L4U
xdEaDyqrErxdj4rmdsFW1CujGJqZxejcPCbks5vlO3KLitAj33fmwkV1WTEP
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
XW/4WdxfhqPHtobzWjgeqfsYL2beeUtrOwrLqpCaJ/pG7LvIhDTl2PSXPWfh
gHJS7Ms9Rn3FuDRzhTt6B5Un6I1kCX9HzmzyVrImI2hfqu5Z+im3bndVn4O7
dzACQxMQLXqPvVZTKQdLKlFaVYdz5y+qP4/zdi29V6jzbDEp/xvmJPFMvtF9
Mjebe/axXz2OxIRUrSPkz1NT03UPFxYWWnuLvV04GCw9mS7i+JkLyJV93sL8
XLHLiqtrUVhVjzzRJeRDZX9bT58A5WFknzbWVJAbhJwT8SlZSMwqUC5V5i9x
TTZs2o0tW51h7+Cl9ZO79njqWaUPmnlptJNWvLhKc+g4J5yfrVu36/zRruLF
uTacL1d7DsMdZK5nnn5B7MAnBdNt08+kT4zyaumd71yo+Vym8WXGKvlK/m6T
b7DJbjfsdriqLWDqdCknWVOiIzBWYwCsHWT9WHhyNtKLKzUHq31wSPk2Bien
MTA1g5GZeZTU1KNbdHCxzKXqWAYuL51Hb2cHOtosPN0mp/ntULv8lzgujxdy
nnkGqZ+Yx+K+NwQefmHwCYpCUFSi9m8OjE7SXCvGA5NzS5FRVCHYqgqV7R2o
I5eWYKteWd/OiWnttVHS1Ibq1g7Ns2KseYGGQd5f1Fg139NGHhMd3d7RqXqd
PjTqedv+uIu46s+z7sy/o59c+1AsJAQxt5YWUGxqBtIKSrS2m7Vw3bJm3ROT
6sdqFTuKeRIphZUITMiEt9hd4Qk5mq+509kPju5BOlhvRx1Ffae5EqKz6Fug
X8DC2bMT69ZvwfbtO/H1r39d4z20PbXW/7Y7rXkw9C+xboq2J/1bvGfakMx/
pk67mpwwe8rSz2zU4t6XzXnm9AV87Wtfw7JlS1FWVi7Y8pLmbn/7m9/SOjle
np6W/scunntVLq5ctRlbBB/6BkaprE/OYg++cpGDOSLjffDMH1/WvrrMT2au
t7Obt/aUCY3KQlbJftS3d4kN0oqKxgY5K+3okvmMScvW73o75GKZQX1v5jU1
NVX9NL/5zW9gOKU5nzzfb1THSduJ83z6zDmrDWV4XU2O0Rvdg9WPJn+bU1xm
qZ+ortN+h+zBFx6bqhybPv4RqrdWr92BDducdL8xPs0c4apmS0/dq8kU7iXW
w7M+g/4D5ti9umGnrje5AKnbg6jvEjK0TwVr5XkvxXVNSM3M0jkxuQ1v9D2G
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
Md+qZ3xSeWK7RibQ1DuI0vpm1LR2ylrNYmB0EqPyyl6qvChrKQvoW+De5Lkz
vQVt+zYvjhs/OLecZ+pL2lvEt+bi6jS0t2vfO/ZmbuntEnxVi6zCEuSX1aBU
9F1Bdb3mxtBuyi6sFIyRAmcXb2zctFXP8MoVa/Dqqxvx5JMv4qmnXsYTv3sO
Tz39CtZvcURs2n7kl9erzEvOKUC82JWMrZHHgDU/zEM1mIq61oKtYrX2JyQ8
VvFVnOCd973v/VYsZcmbuENl4cEDR1V3NzY2aFyPXEHknyG/kpF7xPFXylvl
vNCPQXz14vMrsfrVTdi7NwSJgiOJlx7+6MfR2TMoc1GBKHmOhOxC3LbkHZg9
ckJkU57gz3LNFzV4inEew8PEwZhPq3w+/VbEV7TBTxyeV11MjEWdwjwT+qwO
yu8Ozor+EBudunt0bEDl2pX8N6Z3Nc/U1MSkYLPJhdyVCcxODMl70W9TY/jJ
Y8/iP372NDyCErD85S14afl6keGh6ockXyFrkUwfDhcPfzh6ReDkOUteP7/H
YPA3k+djMCA/g5/HPnjxCSlYs36r1jewRpQ5d1xv1gnEp2Qgu6BAY2Tk5uzo
HUBtU6s1DnO177P0kj6BclkL+j4Ozlmw6pGZSdXJ5LpoE5uutr1b5dD1PAs/
W/kEhkc1NkXdTixLLMD149pNTowoFwNtl2v5TIMv6jo6NSeee4V7iH2zORf0
V1DPsjcA6/a37XTRs8YY64kTlr4uxGdvtncS7SxbPgH6gtkjm3wI5FNx9gq2
cANs3KVcl/viUtVX8ttfPK48n/Rz/eu3fqwcI4xvz4wPypwMq1+P4/gRS5yM
38H6pcvlO/U1r7GxEYxNWHDZAea0Cx7meTg8L5hrflx9uTwvXEv6IQ+IHTIh
9gfzDhvbOnXeyMnBs0f/H/MbGWfmyCwuV7uQtlCmnGFik72CW9kjOSkrV+yn
O/DY7/6gvmjmxjs7eWHd6i3Wnk2co8txMp/D9Dfl3ib/8uzsvJyRQ4iPT5S/
OYX//M/vq782V+Qd++Ewx93gLfraq+R+Q8Mi4BsQqv4pyjvKPuJpY2Ny/Skb
GSemrAzdl6g5V1lFldp/ibzF5Fhdt8FBbNqXdF3YH+LF5atUFhP/rl6zUeS0
p2L1jP0VgrEs/QUY484SLEpbkDUw2UWlGmsdm5/B3PEjWg/aNzSosWI+I+eh
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
WBjs0y0/ax0Y0vWqlX09fvAQKE1p0bG+/OKli7qHqbsaGxtVfy3mtf95BueX
9jz9heqTuXhB5vuMyII0xVasV+8dm9b8uQrBCeVi89W1t2kOVktvt+LlutZu
lFQ34T9//Efc974v413vfgRf/Of/0BhhSGScnPdqrNrmif/46TP4yrcew8c/
+z2xbb+Iv334a/jRz5/Hpp2WXqQpeaUorGlQn3RuaRWyCoqRmpWruSaMEzLv
nXm95HAwnAd8jRIZQ9nOe54/dAzLlt6p+VbLV66Gf1iM2PjpmD98DO95/9/o
3wSGRmqeT3BIBDKzcrRnAG3O18tV5avhXzb8tiY3hLKW45FHHrH6sWiHRkRE
6d7OKixWfjDmfzD3g4Mc3kXku2Kee3EpsvLycejwUdQ1tVryfUVXzM8fwOkz
56yYinFzynRiPNr0V+s5Q7nf1dmnfmLqnfGxIc3tYozm0NwYmhvqMDsxqjil
tbtDZKeFh6tK7i1jf7Haxczx0Hxabz/Boh7am2358/8fe+cBZ2dZ5X+pQQRF
QRHFXXV1XV3+oohldy1gWV0ruq51USwrHUKHAIH0Xie9kV5nMpPJ9N57v9Pr
nd5repmc//M9731uLsPMJDMJJGDeT57PnZnM3Pu+Tznnd9rvPC6fpcbvsqtl
zuwFmr/GPZ2PvdjY6HCZRqTmSHxOsaw2a41+mDpnudz76z/JXT+5Tz7yiW/K
rEVbpMpdI8EGfxMbamys1/yC8XBqvxVnbDw6Bt0NdsA/A4786yNT1H911/f/
pBzlP/nNQ5pTM3vxeu3jSQ1fVHq+BEWlyMlTJ+TAwfPTOwxbl7mFO2DC1dfJ
R2+5VWs7G42OhRdg/pKVmgNGrApdz7nF7xEUl6gcH2XVBocYTFVk9mKlwTnU
athcQnheq+rc6hgqMLYHdeOjzSG2NniPezp1Urw+pZyCQokx5ywlNV0ioiKN
XVIuiWlZWlMYn5Ku9QFwoMD3xsDW4RzyqvUCyIeuHvn5z3+uMVnO8I9//GN9
f7Cl+hELCzW3CFnJ+RuJ14V15j7x4yBPk1My5IVJkzXWt8d/n8bu3veBm7Uu
Zo//XgmLjtfY47s8PSj47N6DR428MxjKyDy4I3xtSWQg/F30C99l3g/ZCK8X
8WKtn0nN1PqHVZv3Km87Nslv//Ss9gz6kLF7f/iLB+WpV/1kpt8WI29TJcjY
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
ak9ovOyNjJfACGeAo4I9OWLUWO+PSlCb8NmXp8k1171Pfvu732sN9IQJ17yO
t8HateAOX5/QWOfO8o5aGcyVbjCh74VcRoe0tLRKnbE/6g1e6Ozu0h7Z9Jmw
7zVc3sn5WmfWs9ToO9Y2NDJKa9DgImhucWvNIpgis9Cl8RLqquAJgosMeU58
4rXNO7x9aKdNm6Z1TsRJnDzWkWUoz4Bu4e9snt/Z3nNHa5uDWc0c5pRUGj0U
pbYZflIwInnt6GtGQ32NnDh+alxzxmXzqzNysg1+KZWCkjL1344lh4k9tTcy
1uiYCq0dTE5P03kvcuWNCz/ggyInHv8i8TT6wMDpVFTskvi0PI2j03+mvLVL
oQP9ofp6zr4/JHvS2gOj+buQuUVFBd7fZ02efvppj6/nGuVeUg70gP26Z9g7
xMPJNURu0CuAnpmsF7V/2GX7QsOUEwr75s3oW+fb/8py+nH/Tu/rKi/u4vzj
I7b+Luvzsn5falqJGdo5Gs998NnYWHAXcE2ZMsWbOw/3w9UGq9Krm/zyd102
QerbelSGUbuATAO3IOvY//ATw4u6A95i/PIGg+HfT83MkvTsLM3b0H5ArgrZ
F5cikcn58u0f3mvk7XeMHftd+cznf6Rxg6uv/5xcfd1t8t6b7pT33/J5zceg
Tunf7vqF3Pal78n23QHKjwsPbmlllcp4ON3KayqMrV2mslnPCv3l3XWSZc4J
/XR8Kb7Alpz9S/r63Ec6vT1qqtRHXdlUL5XNZjTB116rPTayzJ5OM3Inzsjw
fUnEiFOkqb1N867oOwDGAl91trdKuXmvBp9ezry/r2/4Qj/rO2345rejB2w/
rIB9wZJqzhfrWFrt9FPR/i0GX1XUlmsfN/gYqWujhxi9c2rhQjcylPpo6t05
l6s3+csX/+2n8rF/+k+56SPfMGf8h/LN7/1RHn92oTzzqp/8+bFXJSWvQtIL
i7T2CJ9FEWeaPnnk0Ru5gT8/yOiu/bHxylFDvJ9cA+U/SEzT+mryAELNz/Fl
9R05obEsW9Nn43fYuzfeeKPXxrI+//FiGfw2ViYzsJ+xDXzjer76w/ph7Xir
19k3BpyUkqI2L/VU5Pzyqvn25pW8X+YV+Y4tTT7L5s2bvfjUclmM9AzoLeY6
Pj5WfvrTn+r8U8/J7+MvHMt98/stHZ1mv9VLXHq6xqXp8QP3AfsMnIfeHitf
FQMdm5GTKx0Gw+Af6mhtUM5W4nKZLgdznQkTMq88L7qFGpAyg9UaG2qUa0x9
NeZeyYMYK44gF4kL3yI8UTxrvae3EfW78BHRF057K4+RewycwbV48WKNZXMx
F8PxfPgOPofzRO/jT3/6005MPGCf1qFQ30kdHnNgazjwfcCf4SqvkpyiIklM
TdOcQnJ0OCMXUp5bDGZrV/A/sofAVrb/MnICWci+HU9v8+FyCZizf/iHf/Bw
iJ7uNXiZ1uNcq354y0dMHaCVc3ADIvuCIh17Uu3M8ChJNro0vzBPedULjQ1c
UFktcTn5Bn9n6Xn+02OvyKdu+4488tQC7X1NfsaH//Hr8pnbfil3/vvv5Kvf
/Klk5JcYGV4n+0MCJdfgrNTMHCkqLVN/lXLu1zr7DrsanMXn6GeZ/VJSWyO5
RnfAlQW/rb3AlL75V5fye8Y/csC3xoYsN3IO/klihFUtTdoXh5hgtJFhsXCO
FLkk0cju+LQ0cVP768m9AmPx2mfObxW8V7V10mPwlS8XrD0TF/pZ32nD2nf4
ryw3A3KGuYejF1s+y+hGuORKKsr0jIGtqusqpMbgLDiIiAM0tzRo7bXDMd6s
NeX8PCM7R77349/JnV+/R77yjV/LH//2isxe8prsjUiQ2PQiCY5JM3ZWtsb3
M4uKNP80z5xrV4lLSkqLtIcM9jC8y5HkZKVnqr3FiE5Jl+jUdM07gMcGHk9y
AzLzitQuRHbR28virDVr1ii2gNOdV+tbGu/cIZPBGWAqZImNZ1/M/MXEUTSO
5fHh9fYdkNSsXK1hBGMx4JAgv5X5RHeu2bxLvvXd72sO7r33/tGrj0f6DK6J
jz8nyUnpDl/FhOvkzju/ornHfOZYa9tU7x89ovdWVtegeL+yukyOGQwH/uL/
z7bPru8A87mMPUddJZwB3R0NytmaX1ym9ehNba1nzN23vaNrW1uUi5+YOVzw
/fDDdzVqLJP+2+PpA4i9Q84Er8eNfKRnH3qN3OLS6krNXeL/z+a91Jdz5Jhy
B1s9/+Mf/1S/pg50w/ot8sTEZ3Rdh9OFyAkwwomTR+S3v/29BxtcqZxJ4XEp
ev7gOwBfWayeXVIqaWZvkXtocT1rdT57Ip7L8LVzkHcMG5tn3W1+l+NLHP9Z
tnYYl8YqPTIWvzfyCT4X5pO5iknOVCwFbx5zimwDt1KXySsDWRganyjh8Uka
NygsyjX3WaIxvNT8AuVOyC118vln+W2S/fG5sml3pDz3yjL59R+eV3z1sU/d
Lbfd+X2ty2XPdne1qm2M/O7qbJX2zjb1E2ND028Im4Yej9Qr8Ptw0HEOiUnS
5xEZ6OsDJA5lOY4vYatzG5lGNpep76rOg68apZx+6g1NkmXsmNAUsyfSszX2
09o3ILVmv/YYXeT1J8KBdXJQuts7pK6qWloam6TfszYXo456Jw1bC4c8sTUv
XHAZFhs7mbpnbBnNtaosV44/zhzYyg56itHfpc6cQ7jFO1vc0tvmlsO97QZ3
1Zu/rZSIxCxJyiww2MelGImcyTziilk5xrZ1SYWxkcrN2a2srZVierIa+ZBd
5HDUIGPAUXxN3AH/Cj1SGMSzeD94bODPoh8pXDYRkTHKncCz4YtHltkYl82N
Gq/f346LGUeNNmwuI/mn4EIu6qyQy2CrdE+sMCm7QI6cFHns8Sdk1/4YaWhs
1Z5AS5eu0Joy/n7oex8+7HDTwl0Itvr97/6o+bzkba3eEih7YlIkICRO6FV0
thyEtuYdH2t1jcOpSoy1o3P8PFWWD4JcoP4O6pazlXM1Ny9T3vPeL6rvIK0g
V/ljzvReB44c1TxAdOKHb71bbQu4yslvwy+WX1ygZ+lc7tVYocr7tGOPv3Kn
EH8ZS7wV/wt1hfsi05TjbF+Yw0FQV9soX7rja/LUU09pPl139/B5cvi81q5d
L0v9Vup67tobrPmPE959jWICcuzZM+ydXGOTpeY6PSAs/+RwPOcX67A2ks19
P9f3sly/f/nLX16Xp8CAV/TWW291enLXNJhzmGHsRivPMtTO0Vo+I+c4j8g8
ah6ReWAsXuFQxdevObGKeyqdXCljJ2QUlkqxed8MV5n6weDfX7s5RP1WcMzh
n8IXfKC3xcOZ0agynFi006u0TGV8VW2ZYiywlsYJK8q1bpPP4+usnExvXAA7
ndgv/s5L9YPnPuihXlRTJxVNjVLb1iLu9jblwKKnc255rQQnGjs4Ik7qO3vU
V37Mw301aHMOzde93T1SYfS4u7pGWptbZKCv39hbh824VD/4Zg2LC9Bzts+x
7dnJuSstLzF4qlR9VxVVTr5VjcFB9P4gjoKdXl9fpTEM8FVTQ5U0m9FizmWv
Oavoq34z6G9RZ36ntt7gMvM59eYMuw0Or3IbG9GcV2yiuvpa5fqpMz/jDOOH
hncFPghkCwPOmlyPf8XiAPCWgwXylUsCfBUZmyB55mcf//jHvb4rdFFwcLBM
mjRJv7d5FcTM3m746HwPdG9vd58cP35C9gYFS3BYlMZi84z9+9///d+yYMEC
hwvRjFDzf9OmzlXdM5zvhHNKnIA5/r//u18+eOOHtCfI1BnzZZHfBu1jGJ1R
KCs271H/y0j6fLhhcZbNZx76f/hGzhTj8h2Kr5vrNPd64vMzpaymVia853bl
o1i/cbsExaVojedo+wP83n30uNbxLfZbo/XuX/n6fWafV8iSldv0vdF1I/XY
Gzps3ejQvsHa58hTkwXWGQtPKXscfiK4G/bFpYvfum3mXtcpV+z1118vd97x
ZXniicf14A8X97V4/LEHJ2ptW+D+MC8+mD17tqSkZmqsCv9yYEiE8h1wtTS1
jtr/+O9hsD/IQ7I+QxsPhEf09ttv1+/JncsxeDR4f7j2dU3OKzJnxMFR4Cns
SeQc8g4ZSPwVfgk42pGL+JDI3dC+l/U1WrcJ9wV4q6i8WPn/q+rrNFeKeqQq
I7srjYxGrsPPcqCjWU4MdEqHsQmwCxrqHNmuw/wuOMsZlZq3ie1doXxjlZrL
iV7ge/QG+xQszTm8xC96fkZmWaUU1LilTDnb26SmpVWqm9ul1N0iBZUNklJY
rn3ZiqrccthA3EMnBuWEp+cl49iRY1JdWSVFBg/X19ZJd2eXDNAT5+gROXzM
yIijf9/6780clq9FccbRY9prhHNSDGdfRanm6paUFWlsoqrKnLe6GsVB5Jg0
m4Gt09hUq5zj9BbDd9VtXg92N5tz2yiNddUS4B8siUYGZ5v1bfDYRq3m/+i3
x3vRew89R641OI1zTA+3bJfLK1fobcHI83AEgq/gYeaV32HA4xmbmiG79+5T
ebZu3XqvDsAfb2M55ASFhobq17Yf0IVeh4thNLe2mLVxG5x1VOeLcd1113l7
BHMhO48bGTpUdrJ/iKfYvpX4LOhZ+/Of/UJiDVajnyA9b5bSK3r3fmOTVaq/
EVx3Pu4d3EEeVl5etn42tvOZbDJ+r85gf/xM9FyBZ5U69mdemCHTZ803uL1c
837rqkbARseVYUbyK2tl3TZ/efTR5+Rnv3tE67Qq6hs1N51eR1l5Z5crTz4g
s1xW7jL3dvK89BhBhtKCF+6G2KwC5XefvWi1zJizzJyLxcpl9fCDj2jtnPU/
gAfAg77nwvYvQDaAXzlX8fHx+gpGO50jPijdXR3S2//3javsAF9ZuWO5H7j4
GX4e5o78RK6u7l7t6QrnKRgLXGX7PqhtaXAV8g85iOzj//R3jC1JfgXympwM
8vTgSgMLIUuRuS3tDdJk5C09thVfVZdprBJ/1dFOhxeP+tRWepoa+d3c7Mh4
K5N5T7enZzb1MOiDyuoq7VfO5+Zw7oh7DjqxT/a7L7a+5B8Z/8iBd7q2Xorc
DYqxKptbpby+VQoq6o3eox9BpYTEpaqv8ohGBpzeOPCEc6T7evqkxFUsrsIi
aWpo1HUZOHhADh45LEeMDLN1VpfGmzOsL6Kltd3rv8IeqapxziEYq6Ky1NjV
lXrGwFMt5vwyyAmG36ajw+EHp/cq8ZbetnpzXqvN39TKL3/7iHzhK/fIU5Pm
yppNW7XeC16AtuYGra3n7LYqD5PT957PIDcefi2NORhZQg0wPS4s9zkDX5av
DwtfeXB0rNTVn853QHaRU4JdBZYSOd1HnGcnD/Pv3X/lO2zNlc2FP42VLtev
+Z2heZHoXuaUPmtc4DFs8ymvzpC58xbL8lWbZM58P5n86nx5dtIMmee3QQLi
U9QWg4N1vPhW42YetR6fnKTcSnCC1xh7Hdlyph6C+O3gzMc2r3dXajwGrusF
fq/JnEXrxe+1Pdpz86TnuYcOfG/kxVDXs3jNdnnJPN9L0xfJvGVbNJ+bvUw+
F5xQZ+q5gw+gZ6Bfz4b2iezrdPTVqROKW8e7nuTe1xh7lbyNtTuDZIrBVS9O
nS+z566QWfMXy7Tpc2Tu3Lny8ktTNA9o2rQpOp+TXpjsXW+7Lyy/rq0ltDUj
1OJzMZ++fDoXei9fDAM7hPigLyeXiHjtPeaQXHeuAiPLgiKiNB6IPLM9HyzG
Iq/N9tZCHuLH4v+p/XV6mFYoFgITtdK/3dgb9G6AHw6OV2R1R1ercuk/P3m+
/PFPj8rGTduky2ApZDYYi7wOcgap92RgI9BXm/dC7oOvOF8VFWVqdxMzJGeE
+LfFV+BEnuV89EO4NI5KblWt4itGYZ1bXAZnuWobJKO4UqJSctVOjUjOlMSs
fOk+6PR1Vn7F44Pqv+rp6jXYyiXFRS5pa2l1uGwsvsJ/dQlfvSnD5gTjvyIm
AYe4xVfEBssqihVfVdaUSnlViX5NjI+6/jZzVjl7DGqlyDmhDxj9W6mbom6+
14y4+ET58l2/kU99/ufyjR88oHGYnPxi6TTynjx4sBmDnvdw5fDe1KuUVlVI
TokTByzw5MvaHmLa+8LgLGw6a8ORowXXni9XJ/Y4MUJsKX6OHqCmDx8LOutc
+7O90wf2ta17Yq8Ml6uG/CRuNXnyNNm5J1ju+NJXNQcenlVw1tIVq5UflD47
8xY6XN/T56+UFZsCJN9gevKcKkfJlR9toOdb29vMPi3X/ciew2/aR7++jlbl
whgtPoW/KKvAJdnso4J8yczN0d5M9DBZsGydzFiwWjnZToyIr7olNClbdoXF
Ka5au9npEUP+DPoGvcc+hY9gJAxv45oRMbHKad7b2SBHepr1TOHTRWdyjZdD
BH9SZXO7RKTmKhc+vit8ic9Nmiaz5i0Tv1UblMcKPU8tIbnu8PmuWLFBZfNI
dXNcYGj2BRiOubjQ+/ViG8y/rQtA9uAXZL6Sk5N17/K19a9b3IVM2ukfoLE/
yzGvPeE9db62b6mVgfRgpvcC9qjiK2IDBlup/WrOBNios8XYvu0t0tnaJEtW
bZTHJ82XT9z2Y/nXO34qkXEpKn/J59A+2V2OjYw8Zw/yt8h47F9kM/aC5m+U
u6Ss0qW2t5NHUibHT55QfEXvABsfvGS7nvsgbz2vuk5Hfk2tjuyKSkkpLJV9
samyfvc+2R+bLDEp2dLQ3iUnTnk6Znpsz/bWDo0NEiNk32kPEoOtWK8L/Wx/
DwP/AfIRn4XFV4ePHlLfb1Fxvjk/xdLS2S41DbVqG1l8xcC/3Nvq8PMM9LZq
/3rsb/qlcabb2lpk284AufnjX5Ebbvmq3PO7Z6S2rlbPMr8Hhzh6hd4t1KDz
3tQnVhkbCb5larwLzF7Kr3LwlfrI8V2ZV/SX5r8bHQ0fc2Nzm2Iq5BZ+KWQW
diKv5KzYngCWu/PS2T+7wVyNxtHOfKIX8CVt2bFbtgUEq96IiU/R/tvwv69c
u1V77uwJiZYVa7fLghWvyayFKyQwJkmyCgukpKB4zLYuFz0jSvCt1pRpbJo4
X0tTvWItYswyAjZi4CtPyMhSfYXPYGdguN7vwiWr5LkXZsjcJWtlZ2icNLUP
z38A3tywM0Q2+4fJKzMXy6SXZ2rvXe1bsj9GsT96EN7FwyPkONhcMXxonIn1
m3cq3xXxdp6JmrBte/crhhnL3Nj8fXqVbQkIk1Xrt8jcxetkW3CE8n/Ttwre
9TUbdilHKDnr4Ks1GzbJ5z5/u56j0WpEOUf4LS/lL48+7J4Ga3CG2DPgLI2z
+/RTRE7Z+Gx1TZ34B+2X6IQUb+5Vrofzgn6v7CmLschhR0aSY45dCv7BV4W9
ilylHrC3w+F3bWhslgcnviq3fPJuI4+/IZ/6wn9qPSn+LeS49ZsO9LaordzX
1qz4qsMj64kv4MNSXp76GsVY+YU5UlCUqzlZ2tfck8OHDYtcuOS/OvcBvsKH
pdyQRgeCrch5j8nMN7ZdvGzYFSzbg8LFPyTK7IUaOW4W4cRJx5fI1dfXL9VV
VepbIG9i4OCA4qsL/Vx/T8PyHqsvW63ek8pDDdpy4hSDytdAza7GBQ0W0vPb
7ow+D8f0AWN7H+7Fj9CifTA6Whql0V0thYVFsmdvuFSUFGmdCrrE6dPSoaOv
u01tLmx2cgYqq91GZnh63lc5Q3uzkttOfZux7eDAgxsrOAS/lYOjyP1AL5A/
whm3vX9sL+RLfQDenIEvCP0MrtoXFqU4Cp5EeCfR53sMRuD7/XHJ8vKUufLA
AxNlxsx5snrzLsktLNE9NpZcaNaRGvCdAUGSV1Zs7PBE3T8FZu0tTwj6AOw9
XJ2j7vneHt0/4KCY1CztubRmww6Zt2iVzJi7WKbMWKwxwpF6R2scta5ZfQLT
Zi2VOfOXa79GesXAAQn2x/dg822Gew/sgNySct3/6EFyZah1J+/Yqf8qkP4x
crMy8JfwfHCAv7Y9SF58cZr85S+PyqRX5ysXJLxm9EBSjv6AEO0tRc+DhUuX
e/lgLxYehXfK8OU8tT4t22McHzA+X/zs2ifr4GHZFxqhtTqJaZna0wK+BYuv
6FmtMpG8ZYOvqKsFX2H/Yqdir7KnDvZ2ajzhcH+nyuc4s98/+ol/k69/+6da
h4L9293VpnmCmjNrcFh/j2P7gq/wYXV7bF/OE7yGbk/MnDPbZv7v8NEDqius
bU4eBnJ3aB7BpTG+kWXsM4uv0uCOKSiUxHyXRKblaT/3xGyXRCRkiL+ROTmF
pXLcAKuTnvx2LvZbXV2t5vd0dXfKgUMDl+yiUcabZROg3/DrcvY5LzanWf1A
Bl+dIG+xskLziDlvypWCLmtvVJubM3nU2D5wCR3qOd0Tg9i+ji7nZ4f6Orz4
ioEPizMNHuMMU//isj3vjfzIKS2TTFexcjnEwndlcFVpZY309h+QY8dPGLvP
6TvR2dGmcU78cQxiGzwTX1+yo968gQxlj9j6KOKCkQkO7ytcPgERcRJu5Do6
Ytl6f+2R9Nz05dr3LColWRKzMjX+gX4ZizwGQxPTS8zJky997ceKcW4xdnl6
Ybnm5rJX88zvnDg5PD5iT9D/lFxi7hU+bOrjFi5cofYG9XXw/990003D/j32
iPPMl8ukF1/VnsdLlq2WrTv2Kq6xnFCnBof3w+OrD4+I0j2OTUENbWh8przn
A7drb/TwhEztXUKuxFj5Sbnc7S1mzl0y6ZWlsnLdZvnTg69qLzrt85mRof3t
4FxnjeDnpcbQ39/fu46j+a8ujXMfrCn4Cn4s9huySmOtxkY8Nejh1m9ulZiE
ZEnPzlOchV2pvaqLSyTH2I3sHc4OPK7ITfAVdgbYCrsVfGXlLRgLrIUM1r7h
nY7cxj4+aH6O7CY2bfM7HLne4sVX5GCxRxPMmSVnR+1wj8/N2uPsGc7FWxUb
/HuQ6+klFZrjDsZKNrZgZHqWhCZlyt7oFPEPg3M7TZLoLZfrkuKyapVpjt4W
T60P9SrlUt9QZ3Rmjxw6fPASvvKM4fqmMDdnE98az97jnGM/44/Az8t54fxb
26S2oV5SMtKl1Zy3g95YYLMXX3E24VUc6DL2k/lef9YJvnLrOef/La7i/Dqj
SXPjifGzB8qqahRbaSzQVSopmTkSGhkj0TFxxnaC+67bi825qYMH+tXvhiw6
NGTfXKzn72zu6+1i+1nua5s/wmVzdL1cWgYD5ZWYtcwtlr8+Ml0+f+dvpNrt
NrI6XeN49DFjLcfyzE5++yntz7Z81Xp5YdJ0+eRnvyM79sVIoXlPateJo1C/
3toyPM+ZxtCqa5U/+6orHZ7/22//ojx0/2Py1788IFdeMcHbI3jo3+If9eUy
evD+h2Ta1FmyceNGWb1xu1x19TX6/rbH9xs+2zyv9s713GNeRZVMm79ePvP5
Hyh/2MoN2yXdVajJFGPZx/gOtu3eq33X4dh+dfoCiUrOUl7JLYHxyj3pKinS
XjasDXk+sRl5Go+iHsTWu40WW700zs8Y2l8Xv1VnV4/DAQzGOuUVc5oHuHd/
mCTBs5yU6sVatv8CPAz4P8mx0HzYDkf+WtlsbVsG8pi+4d6fG3v4aE+Tvr4e
XzlYjXhjUXGh9n2yusD3wv+mvdkNXhzaO/VMYyQ+kKHzNNLPLlYZf75GqqtM
ORrwYyUVFEtkWq7BVsmyyT9UVry2U9Zt2yNFFbXS1X9QDh4+pjWDlpvB4QYo
1UEvM8VXRl6/XXTLmzmGzgHzgo2DXwYcxCt2AnaQxVy+uMvuu7HsP84Gn4GM
Bl9Rg4VfQXuUemKFWCyVFZVem4hXPYeeM9nXaeP+TZqv2+epTcH/zO9yvjnT
jJaGKulocxuZUKtcj2Xm8wpL8V1VSUhkrJE1fdLS1q73ZX1p7JuB/gNSmF+g
+K+pBXvp9b3AL5YzZ2WFr8xgHQ/AF334kAwcGPD623zl0vnq7/xW7lXOsq0F
LPbUNtmcXHxX1Inip2k0dnBTU6Py7cCxQz4HtaKs7VifkZoY7LrVm3bJq1MX
SmBEovZI0r7gMfFe7g4w0nDvzRkKDw9XTv+//N/9snz5StUV+OCmT5vtxUfD
6QviILaHyiMPT1SMBaftn//8VwmLTdX35BouPsn6wiMC/kzOKdT+ctEJyRq7
m71wjSxcudHgxCjl1hpP73EuuI7I4WKOj5tzV1tfrnX6jU1O3nyqmRfNaTS6
GSzK34rHJ0Gexpspg8/nXvaVd1YG8r3tbWN/Z7heLReTnvHFWR3GhmxuadM9
Vlle4QU0x084cQV8n9RNxJl9zoBHhDgz/QI1h8PI047WWq2nZfjatRoH7GrS
mAKvmsvecdpG9rWXre+LvNpqd51H/p/y9r+AR5RaIfQEcQ90x3jWdrg+LfbV
5sxafn3f+Rpv/9i300guLNF8q3SzvnHZRRIcn655V5v2hMiu4ChJMfKjs++g
xmyxN+k7aHMSWltbjI50SW1ttdY7Hzgw8Aa98k6dv9GezVcusKeQmfgGkNXs
ZwZ5RTbPCLvBci8Ofd+x7HdyLq0ssnrf5r7bPmvgmxPmnHe0t3ptImsnkVul
r+0evoZOW1toMFBPi9d+Uhupu8nguEbVuRU11cpXl5yRKek5eRKbmCIp6Rle
+wiZz/2Bp6iFAPuBUQ54YvwXC/aw68UrGJX7hfuCdUOXFxTky4GBPuXUHegb
0Lnkdy1+ZP75e/HkI/F3yC6+Hs85YB25D+S0lYPsGXySDP6vpe31Nud4es0M
3dOlJcWq3+AmyDa2eFG5w8FBvKKytFD2BgbrHuhuNffRXOvpdzP2HoLMVZbB
cjFpeTJ55hJZ9doO2bTdX17b4i9b/PdLSFyS4hfrXxv69+TAwO3PvQaGROnv
sE6OL67jrOacec3Pc+nc4vudO2ehDBg7ks+E82goNrP+IfrGwNMdHJ0kW/fs
13veYWTmjr1hMmvxa1JW7/iNx7MGWgNcUaR5yeQqk798w0e+rGcP24e+Vhp7
Ly7VeDsX+a+c9XM5S742Ds/dN9CvWID9q1ys5v15Bb+Bx8+lzgRZx/nA18M5
w+dOTh563vZwLi0uk7KSUvNaot8jx/r6D3j7DvI993Ox9XGx2KHf6EOep7zU
eQ50gM3RsjGg1LQMycgt0JFbVKI9N2rqHL5mOEKQs1ZOHxnoUq526ryxfVVW
dzTqcGKFjV4b2f4NOe89PX2OrTF40tlbZs6Ze+YO3WSxz3jm0P6N5cu3fgTb
k5t4I7qH9cL24ed/T7ld8NYl5RdLenGlRGcUyI6QWNnsHypbA8Ikt7RKjmA7
nnJqC04MnvTqS3wiTp+ncqMvG8ycvnHe3sn4yu6toXvSyhzmAhmCLEJHIz/A
Usgly2XNz9l7FnOxF9mTVo4N9W+dzT0NxSt8z3ulpKTo15xvXltanLPJeez3
xALBV93tbq3xtXWBNteS/Kq+bvN7xhZqb3VrLUq1wVbIA3otxCQkSlRMtJfT
iAsdxT5BbnKebT4V3I4jzd+FGsw5cof1QpYz96yVfQ6r4/HthEdGS2VtvYRE
xkhOTq6EhEXIwUNHNMeivKJKZWZkTKz2jDvpIX21/aPPxBfF//O7GtfFT2wm
tKbWLbFx8Tq36ZlZBo+36ddMdf/AAfX4o5NYW86mrbc8l/kA+1aWV6ouSEzN
EJfRZc0NFerzxKeJPMc25h6oY/I9E3bfnXGvHjOYu6Ze/eYL/DbJ86/Mkecm
TdXauC0792ou1GWenLDRMCpnbf26TV4MNlaZY++ZM8bzcl8j7UvL5x0WFibv
umyC9pqhhm/h0rUy8amX5NmXZ8mS1dulyF2vCzTevcjeg8NO9WZni/qQ0Zlw
1RWUlHtjPGCPc5WxyAfOJxdyqqgw3+PpPh1LspjA+tec7wa9+dBnkk9WJtpz
phwsJxx9T24Ae5dcu2JPTQH31Eztpzl2nC17FpUT1tOH0doS3ANy1OKti0Hv
vG7/GHnHvLF3uFfm2OY+2bllHhISk1WW5hYWqc1KLTY1Q90djg9roNeJGyCP
tVesrTNEXiO320/Lc2/+bF+XzpP9uJycHLUlfLk7xjtXrDlryrPxfmBJ9gJy
Tm1pY//wWewtywvP84MzrU/LztXFZGefzxEcnyr74lIMzio0o0j2RiYpvopI
TJe23n6NGw9av6LHt8gZAQ8wh+iCnp5uLw640Pv6rTg3w8WxrL+IeUAXMEfs
NeurQm/rOQKjDgmAs/8tDqFvLXuwpKRU8St6lr3Le4/XN8Hfo39tTfHhwwe1
lqSxCQ73GukwZ1j561rrzXDraDffUwfVZmxnRqv5vqGxTv3XZRUlTo8sl8Hl
2TmSkZVtZF6BV7/zyrNznsCQdm9c6LUbaXBv2P9O/PL04txwww0SGBjorUEL
Do/WWAx5L/gOcrTnT7kOcimoDaJvRXmV01MVfhn6PkbFR79urUeqtbOY3F5J
6clSXVvt5ckvrXL4w/g8m+NG/Iz+jqlp6bofWWvud/r06bqPzsd+54zznlEG
4+Gn5F6UW7ax3Itp7LB5s67iMt0HZ6pjQwaHJWXLxt0hyhG/YPFqmTlzocbr
PvKRj2ifvDvuuEOee+65Efmc7H2ez/M92l6xOVv42xYtWqQ58qtWb5C5i/yU
owr/f3ZxzagcbXwGuge5AAcEl29OuuW/os8CPebYA/muIomJjdffxed9Pp7X
1xbimVg7OLW0p5Wn5o0aFQZxf/Wv1Lu1vp+9EBuX4MUK+KWHO+c8i+0/rzjK
jAhjo2TnO333qupqtb6ZfM2sIqe3MTUxmgsO17k5b/T24/xVVFZ7MQl9arjS
09Md5OW5D8uVeqHlynBrbm1uZCM4y86L5Sx1N9QbeyZN8uhLWFKs84O/krok
9oByDna0KJc7Q23gtnpvLNFiLGQ6PO5dBovR48xeYFM+c2h/gbOdL/sM1j+F
TwodZf2QyByb/8LvWrv0pMdvZ+M2/B2ywfpBLXYYGru5mGzw8YzAmGTZEhQh
63btk6DYNAlLyJTknBJjVzbIoeP0GjzltZWZK+bD4lN0Eph1JGz1dp6X0faX
r41uY0oWv7PXmBfmh71MjNvy2agMODEoPirc20PV5q8oP7n5GbmSxPGZa/Yk
+Gu8PUuxL8B51jfd2tqkfQdraksNXqL3oOOLrndXKweR22CDhoY6qXPXSBV9
m8351n6DtZWSkZMriUaeoWtjE5PM75zuqcLg3KAzeVUutLdB/xpkDfPL/N98
883efWzr6ehjF5OSrrnE4Bl6XIBvLJcNX1dUO/x9XV1N3nir5rZ1tSpOrVFO
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
PypJZs9ZKC9PnibT5i6X17YHy8tT5stLk+fKnHkrZdrMRYoHH3/0SXOfH1Q/
xcmTJ96wJ6xPaMaMGapvt27brdzj2wPDjH6KUV8KOcrEqagDjElK0jjNWNaG
eU5MSdW6fmQpcZ0tBpPSG+Saqyd4Y1Wj7SMwPr93jdGdPNeixcs1fkfvHOrI
QiOi3vD3yh1nMAo6HJxx+1fukZdeniqVLS3D5tQfO3ZCe9g8/NCTcuNHviIF
pcVSXuPwSgx97+6ePu3BSH71tr1wtW+Xq6+6Qn1SnBnudbTnQVf7LV0pT018
Tn93y/Y9snlPsMG1qTpH+VVO/fxY9YXGw4oKpbOtTn1DJZWlihGJqanPx+CR
W275qMFXTn4SOnfoZ1hevfvu+7M88shjct8f/iR79wbJ7AVLZObsZfL4Uy/J
6o075ZVpC2XuwpXy/AuTNS8/Jj3XYNFKcRm9mpmfqz0Y2dMFha7XvT9ys6ev
16N/K9TvAYfWzoAguft798mGLTvkicmL5F9u/y95ZfZqWblpj/YZ2hsabbCU
E//mvG3YvFf3wDYzd2Bb9P1VV02QZ555Tv7rBz+VhQv8ZKnfSpn46NMqHyyf
zVAZaftpWL+Mta9sDhe/a+sCmBfsTHDWhdblQ/eXfR7L72n5kG2cwfm+1+vH
Ptv7H07m23wwOy+sM/HB8qpiKat0KcaqMHZjeXWN4iteS8y655c4NY7Z+YWa
M5FVXC4ltW5p6OiSmpZmqTPv0XGgTzrNfTaY75PSUnWv0HvM+rE0V9j8qzB7
rbSkzJuf9HbBWOHRKdLW1efk3egAXx03e+uwNDaRZ+TS+C8yyrc+zK75OxFf
2eezXP/aM9nY9wcOOr1PBk96WY2lqblJc9I7e3uko6dbmswerGqqN7iqTkqN
fVZs9GqR2XsFFeWSkpOv/lFkeK7RW+w/V1mJ4vzSinLFVmoHVpYr71QF/M0H
BhRbDfrwIGBfIT8sB66VFef6vBfaNzXa8OUc4/nBU1YPs04WW4GFAgICdHXA
or42l/XJDY1fcGa5Dh8+4q2PJN/Zytxvf/tu83qZyu9VazfLkuUbnLgcfeb8
g9W2Bl+9PGWBwTjPy+TJs+QFo4defHWmzF36mmQWGFvS2GpZ9IyrrlJMh105
9NzYGGdgRIxEJaXo/gkIjZC12/3Fb90WjY8Q71pgcNuU2X4ya+EqHS+8NE1e
MdiLuNX9f3tY7vvj/Wof+b43z+6rR157baMsWbZWdRc+OfJj8X1U11Vp/SPx
qp4up/fOcD34Rht1NbXajw8ei7CUdAkJj5Pdu3erfHZ4s86uF/SiJcvlRTOX
M+csUSy7LTDUyeUoeKNfjf1PLpwTm2yU99/8RQmPSZIMY8MM91n04WU+n31x
itzyj3dr7RocGMP5o+jTgr1NDdtr2/fq2uPDga8L3xA4frTn4KzCF8H185//
XPEt+AG8Br4iF2M8MjQzP9vLA9JkcEtpVZn6womV4ndavX6n8p7ac3H82Cmt
T/F9D3TnQw8+Ji88P1m+dMfXtDYAHP/KtPmyaMVGeXXWEpm9eK32/KEGavKM
BTJ/xWuyc1+YhMUlmj1aK2XuZu03zRkb6jflvLGn47OzFf8h8+hXmZSZLzd9
+MuyfM0GmTXXTx5+fJI8/uSLsiMoUnEn2HDdph26PzlnatOs3ywLFi6WCROu
en1e+4nDmmPkMvstwH+fN648dL7IP3T2oBMzs7YVl82Vt7aalS1c2GfWNrvQ
fqzRfuYb97Vx4PHKdKtT0Pk2/1Z54I3Oo5brpFlruLjgmYUbotxgZ3QX/iqG
y/yMtc4qyNPeP/HpWZJi9B55mWXuOtWL6MjGrnb1Q9Q01ktTW6sMGGyFH7+5
tcWxn/l30skP7jJnFtnP/fjyFlysOosRk5BuMEGnztfJU/Qr0Ox26entkOKS
IsVXyv81QlzwnYytwP6sJWeRnHDNs/LwVRzWGFW7culSg9ds9ga1USU1biky
dnRGYYHB7AWSY+Ywt9SlX6cZLJ+SkysFZt+VGFlYbOQNMrHS7FNy24kTwENZ
a16rPb1zaxvd6hc73Z/ZiROS04FdzP1Zfrax1BuM9jsX25paGUFtFFgfX4W9
bKyG12uvvVZ/dttttxl884KXk2Xe/IUyb95ilQ/4Y4e+P7jGcroxr9lGF3Dd
dddd8vDDD2ucauWK1bJkyWrNoVm6cq1MnjJbnnr2FY31bNkdLPuiEmXKjCUy
6cXp8uijz8nUabNlX0SScgmBqwsqShVvEIuyPXiHe1bWFNkBXnQ3Nij/MrkM
BXUNUux2a1+78NQM2bAnRDbsDJbFqzfLjAVr5PrrblAMSD4ztYBD81hbW5vl
f3//V/VbTXzsKbnsXZfLYr81ihHIj6I+a+3WUIPlItTHELB3n/IUNTbUnDEG
NtzA3uWqqqlXX8VVnviU7xkbbSA79ydmyWKDJSdPnSc79oYY+Zyj+dD4p4bL
r+OiRo1e843uKtXjHX3D8yzw92r/lFcoh0ZPa51yXJLXMvR30bfwa/LZ1LPt
9A+VSVPmyeotAWOaG577xIljBs/uUbyzPyL6DX7MsxnMTXlFjfJ2g4O/8f2H
pLzeLZ/78o9kt8Hf1GaQOzV3wTJZvny9PGuwnWKoF16UJyY+87q4NPcEfrb5
ZVddfZmsXLVOFq/YLH7rDb7Z7C+BMSkSb3Skq75Bqgw+ySkz8qmhVvlRsSlt
LcxIvEr4k4glwoNWWuuW5JxsSc4r0N6N+MKeeeZlmTRpukyc+JJs3xeuvrfZ
85cb/L9eJr08XRYtXa14lv26zG+VnscXX3xZ39vWetr8RWrswFZDeY3BCbZG
AVv5pIdfBplgcRSv4GWLtejdoHu4qsrhNRi4uPqljnSWhvroz1bG2v6pln8K
u0B9C0b/OXlX6L8TDqe8wUjuJrfmCFdXV+rAR4keA3eBpYvKi6WgtEhxFv7N
5JwcyYRLorxECokdGoyVV1aiOTQNrR3iNviX/hdw2Ne7a81aHvfm4OD/5rWo
yKlbt/wFFzO2YlTUGix45Khq75ODx9V3deToAeWPLja2X21tjdaM276afw9x
QYvbwS3FrmJpaXLsHNxWR8w+q28hZ61Buvu6ZeBgr3T3tEu9+T6nqFwS0nMk
MjFFYlPTJT4jXVLzss2eytdYDzqWvVYM3q+p0H1YXlOm8etqzUuo1PgGHJP1
jdXS0FQjjc11Ukj9v7EPuvt6vfle6AfrB7d9Um0f4nP1Z10sw+Kq9g6nnwS8
qDb70dbGcIGlmA/4k2y+yeVGn/ObmzZvlxUr1itXQU5Wrp7X4c6kr3+MdbfY
DD2IrJ1w9ZUaq5q/YKnMmr9Yps5YqDnbz0+aKdNmLZaVG3aK39qdMnfpelm2
+jV5/pVZspzaPmNPJ2bkSVtvt5db70y53Qx0LnKkub7ZfH3I/KEj3+KKXJJd
Ual9rWKyXBKckGl0XL+3tp4xHHeT0zduUGNajz36pMGBr8qMOUtl0kuzZePW
AAmMTpQXpy2UG26+Q6IT0rTfneWh9+UqsDGWs5FrlsPHmctT8tiDj7/u/7FL
wMvc83B1TccGRfvNz1m8UR594mX5x3++S9x1VRoPGw6TcE8pxBjaGzVeBicQ
3NEj3R98KegEcCTcTEM5Gex7JhlMBf8l+uKr3/qVLF21Veav2Ki9W8GyQ//G
XsSefPU8vtT58/z0/6655hp97jNhq+FsdM44vJGWI+1AR6N89Rv3ap44PRxD
YlMU98+Y5SfzFq6U6dNnyiMPT/TmPQ+390/7Ni+Xa99zvWzdG679PBLzyyWv
uk6K6+ql1eCLw8dPOD4Fceq8WD+eYTRdYPOw0ZDk3FAruDNov6zZslvmLV0j
cxctl6lzlsgrs5bK8rW7NB45c66fnq8XXpqhscpFS9dKaGi4nkEnn+1yrwyw
sUA7hpN9nDmuZydOkkkvTJFVq9erz2vxogX63NSM2vPD+11//fUy9Oru6nA4
cjovfE7W+R5gFfAnOsRy7+CzSktLc9ZPHC5G4inwddQ3u439Vy219ZXKacpA
fyneMrqszOxP8iHKjY7DLiHPMLe0RPUgI6MwT5KyMyQxM1P90Wl5hVJkcHtH
Z4fBGl1mT/WrfGhqaVa9e9KDsbioceY+sVEvdg6D7v4Dmnd1YvCEYit8V9jM
yI1SMx8tLa3S09uvMv6d5LsaLiZtc45s7iB9z6vMOGlkCjFB5qmzr18i4+PF
3dYsdS2NUlVfY7B8teS6ShVX7YuIk+DIePWdp+TkGXyVZ/CV48cqKDe2t5lT
8D97j/xOsBV+KniTyH9u8PT0bG6hX0S9vsIrVFJWrPvUMuS+jpvKY7eR6825
sPkmb+f1sWvUSk1Fb7diA2RAXqFL9gQGG9s3VvaGhEtoWJR89KO3emMg1Pv5
rVovt37sE7JjT6DmvW7etltr6uvdzd5645E+0/ZZwY9hbdtTZm7/9tcHZcJV
18j0abNkxuwlMmfBCpkye6m8OHW+PP/ybFm4YpNMX7RedobGSVxGoYSYvZBY
4JJSY+epLWbsZWpkxlL7afGl3afo1drqGvXPOzjbyVcduhdG0tkWM5JnNmv+
Cpk2d5k+AzHGl2cslUcffcZgw/XyoVu/qjnI8BLxWfbznZy3k1JrsGyMOQNg
pqHcZ0OH5c61dam+azvx8aflhedflquvfrf6Cof+LdxhISkpEhyTKjOmz5X/
d+cv5JP/+iM52Ns2LBZiEAflc6xOONMcwyuHT3O0Hjz0KcEvxvn8xb2Pq2+y
sN4tR06+8f3x4bBnvvCFL8ijjzz5BjyDncC6BgUFjTpvzA/3ZPulNzS2vu69
8FtTZ8oa4UO//c4fyNx5i+Wll6YbzLJZnnlhuswwazx/8Vr1R8H1BS7x7XE4
9L6efPJJLz+S5mWddDD94RPkHBv7++ix163hWHQAz6q1reCU3h5p6WyVpNx8
rTOg3+2OkBhjj+yRqXNXqm/w2eenG8zlJ7PnrlB8tXjxKrnpppvU9/qH//2T
8pDgZ7JcqmeKg1l/6kMPPKr5fJo7vztIcRr8Dldfe71iLGunwA+Pv3xfWKTq
8Rxzlh08N6g4i8+82H0nZzs4w8RO2RvtxLJ8bFfLlYj8wmeVmpmheUOqlzyD
mmitefZgLHQaPvCqukr1I+AbQO/hswJb4W/Ah5mYma21KMFRsRIeRx12kdFx
ldLW3iSd8PmbQdwwv6RY+g4d8uRjifR2dkmxwViWz8CXg/RCz+XQ4XAxDJqz
dFTx1eHDAxqfwnflNvNJzNP6Rd8pvqvhuCVsXYatf1V+t8ICGejp9da9Iuua
O7rE3d4ulU2NUmD2C3uFeojw+GTZsz9M9przGJmUKjHJmYrJMwuLDbYqUbst
n7689MGsKPf2AFbMb7A+dc7Ib+Ix1Gtjf/sOflZtbIGBgYPevX/qlHPeLb7i
AhvaHggX43476zU65tReVZY7dmdefqGEmXMYk+r0AUzOKZSEzFzNZ8sugI/8
Srn/gQclIDRGdgZHS1ffgFx5xZWy3GCtRQv95IknntL3QY6cybeHr5s8LOIp
yNqHH3pcbv3IxzSn+dnnXtKYBdxKS1dvkblL1sqi5Vtk7bZ9si0sVlw1BuM2
NElKvksOeXzbhw4cVjv/Qq+Hr58iJCpB9kQkKt/77vBY2ReXLpNnLtTYTG5J
ueNfrarUfEx73+gZaiHxD/V1Nar/BH8+fTI62jrP6vnAP+SIDRrcRr0aOfmT
X5kuq3cGKw/J0N9nrRrNmcsoLtG8WbiT8DWNNaZ2LmN/eIT68eAo3xcZoznu
LOxwPKj++2Nl/vKt8tKLr8rC+eCCxeo3Qrb4ysyR9iAYnCu3iH40jXK4v1N7
yeBLFJ+1QCdSr6ecxGUlEpWRKSs3bJd12/xla1CMxvQ2+4fJVnMWqAv38/Pz
8hOPtDeG6xfqyw9wPuaSzxc5zXWUW14tFU1Gt7sbJCAqWfwMxpo+f7Weq5kL
VmrP7ykzFuqZW7rEqeN4+IHHZefOnYoXjx8/6d2bo59ppy/02rXrZYnBV+s2
bZXvfP+HcvMtH3Y46yPjZOHS5WqjXXX1NRKbkKo1JnB+MIgLh0fHSXRMnK5n
U0Oj2rOHjry94wSWA4Fn8aV60EwUnx/wZZU56/WefuPUv6CXWpUb1q16C/2F
HquqLfNiLDgc8SdQP0KtfG4p+rDY6EWX5k3EpmRq7wB0J7mmyPP8kiLJLy3S
2okaTx1+a3e38vNp7rP519XSJoX5Bd76SNunb+jevdAy97jawurBMvLtmPYl
xXdVXl5q5r1Neo2eOnjonZnTbp/BxpyJ4XMOWbO6mmo52Nej++ykJyf3qDnL
JZU1Bl91SlFtraSbeQpPStazSX7IjqAQCYyMlnhPL4fkbIOvCkq0xxiDXvT0
iC+FS9ToLvCS+lOJEdZVSL3BWi2NtbpnsUvbPTyTxC8GejscrmRjO4ERNE/L
4/eC64/7t+fA8itcDPtrvAOMe+ig0xOu37xGxiVqDRc9aWyv16j0XIlKzlD+
w+cnT5MPfPBWeW3nPlmzcavccMMNxha9Qn79q/+VpKREOXFi0Bs/HekzbT3O
wYMDsmPHLpn0wivqh8D2p68cvfDgjyL3apHfOpX/a7cFyurtgRKekqNxFFed
W7muWYfq6qqLIi926LC+f059eGKW5JTWSbG599yKGqmoq9J808LKOrUxbK9c
9V2Z32c/shc/+fnvySGDddoM1sovLlPurMB9IV4OiNHm+IR5o3dd5uTNkVND
DSS8m8wf2Hbo33APcDuVVJQprxYcrUeOjOyD5EpKStI4xUh+KYs1LVcjtVaj
yQmen3gIdb+1DfXDnivmZ1dYnGKCuYv81E9CHJDY8pl6VPN+8K7T+wWuBXpU
ce637QpRbnfwFT1DfeeWz0sxZ4F8tOyicikxe498v/yaWkkzawI3LhYY8R5y
C8/ka3wrhvUzaT+JIpfaiGT8ljc2674Lik3W3MJlG3Zq7h11i9NnLdace/yu
Dg+qE7N/+eVXNJ+Mq76+btR9x3M7/f1Edu/2V9/pNROuU7wWFh2vPrRdwZHK
sZaQmScJRrbQbzQxp0A50RjIHNYnOT1LLEikluNiOttnO6xuYB0459jt1m81
MIA/q9GcM7fOKzKzq7Nbzz21xV3E040csHoKfNXk4exzetk6MUKNExp8VWJ0
XVF5haP/6CfpKlG/Q2pOkcSmZWn/1H3RsbIjMFi51vZHJ0hcRrrWprjqaqW+
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
Y50JfxX8Yrfc9YyWH7lTyzuau96o3eroapX6OvjYkAcDrAXuyG0uPhTGMhR9
UZpYB4L3Veob04okjgMfGmT2QukinAFgbmAtPAOHj+/ZL/WnDh5BZGbjSrbO
vtKnfZOJLa1YYyg1MuizkZzD915URS7bQ8Se+9ljf6I7fvS/tM01mrLLaqh3
uF9yRCuqG6QuTXFw7t+t+XZQv5RdkEPHjmhcxMDBi00e43pwzqEvIAfx2M97
Gfqktbtdi/1JjhXyroZP6aGJfhriPfjHv71FN3zvcbr9R8/Sr5/9FyWlZonv
rpbtxpf+9jb9/PGX6ebbn6Fbb3+Wrv7aA6z77uU5fIZWGNqTk180ufggZ9aL
TE1tZK8vWbKali5dxxjLiMwYX5lttSNzXiPwYcH/Df8GamFR+wx/B2RSc28/
dQ2NCL7qZl3RyecNmKulf1T6WaLfOnK3inidhsZ3aT3vpk/odADO9xeBrxbb
2p/v0J8P6WW1Z4/oOvg8ESNTqW2HT0xLbyPwuaSX1PAZb6UGXpvOkTHqGx9j
fMX6dqiPGrt7qJJlbn5VPSXmlFJoItst8ZmMnbMkl8TJJ5Ss+UxaM8baxmdx
6zY3smB9vnz5RnrzjffpnXeW0vJVRrTR2I4MrDzIyjWcHnv6VcZKT9I3bnqI
Mdb9dMPND9Otd/6a7v3ZH2jVJjuWQ53U098h8QNDc2d6/Ldv0HU3PULfvu0R
ti0aZupgxySHUHhHdmm57qMs7yDD8goLNf5axEAnp0RG6eOGxWIzKX5j7Gc8
CooKxcZGHF/k9Q7NNnrw0d+xTfQGJaRmUs9AL7lvj6efPvwXiY1h7h751d9p
i6U9GbDNibMD28Q7KEpw1UZDa5GZDu4B5BUcSz7hCeTLOOzgkWndHoesW6g+
NrgXzLeKM+45fET8VsH8nZ6hceQdkkCWDtslPxi1e5s2G9P//PgJuuGmB2lw
eID6ezvEDzCXVxg6H74k4fXbodWVQm8i1wN1S9CZiEuh3j+vslb47uFTeeCB
B+bVT8g3U7GvrLxC6uwd0NWa4hn5FnPfhwfiIMC+k4zna5ubxecOHlelp9X/
aj2KT9DuXfspkM8L+naebd7S80uk7+sjT/2TenmNG7t7KT0rd97zjWdcH2Si
vh8L2asWth4Um5IluUd79p7a87BLoe9aWpulh5n+GYAzE3V//35zifhO9b8P
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
p0KOPepNE3lPmdi40t33/U5kTW5ROe0e62eZpfHyo+amq0urd1Wfj36ryBGQ
+I0ssOZrgj0MG6KNMRae9+07MMvH/Xmdtamdu2hsYqfkSUNnKD2Nh7mZlcRf
kPMNbkZTcyeydfKk3fvOHhtzD46V3GJgUnzu3DxxYFjwhCJmtc3Rizab2kvN
gPo7fNVVzQ3SazavuOyC7xO5bohxVM/pG9g1Ok5Llm+Q+wP/AfD03PeiR/N7
770ntXfgJEVeyJn2G3R+UXWF5AEhHw5+HfTAwz5avmy1rCVsRLXHElPTKCs7
93PlUMe1QtfgGd+NuBdyLbTajGk6fOSY5AmqeGJLy+w5wsu9fW1yjsE/KXKK
9zVyTW+962n6xRN/o3VsF6UVlktONHxDiONvZVmKebj8Mq1vOnKkcKbwOBPn
xWfZv4qvATo2Nb+a5X0zJRdUSN2Ab2QSOfiES09NR89QMrVxkxgy8D9qdqEL
/v6f1XT1dQ/Qk795nVIy82l8eICqa+p4Dw5KvRHuV6vvHpK8Schi8GFhtrCe
C3UvC73mkk/T1qzDnzVsQ6EeFjYgYgvAV0rvKE5RjAqW4YbmruQfGkM9/d1a
Ph7rsXqWWck5eeLng56DvvvePc8wtvoN3ffgH+lnj/6FfvrwH+n+J16i3//t
PVq5YSstZb351uvv0xv/fpfeY7vZ2MyOZbuPYCtLey/Wu/7kFRxPLn6RtM0z
RPpy+oSnUkRaPiWXVlJBXT0VNTRRdUc3NfQNyqjp6pHX00srKCq9gIJ4ncsb
WsWHdeiw5ssHvsKZUhxVC42xcM4XC6b+LGfmlO9K4wOHPIZOEt/VSe0sHTg2
Lf0tELfNLAO26hDuaozK9i4qbmyjrIoaxl4lFJ2RR/6xKeQSEMO4Kkjqpcz5
zFk7B5CdezDZ87Cw86aNW7axPWtHa9aasjzcxLh7rdg6y5aup81bttKyjVb0
+K9fkxgffFbwL3/t2z/nvfY8PfDIy/T6u4bk7BfOuK+Y2gf6qY/tnXH0GEDN
xvgo4wuNa0TtZextNbDHd4z3Sy29cEEVFM7URpxgudiyaHmvFP5VnFeI+QhH
8ISW53NockjHWwcesP07tLysWrZBgtj2QD08ck+3WttLLiS4F0y2Okkc0Dci
hSLTCiiVdVReTQMV1bdIfs3+Iyfp6PHD5+QT+Kz3gwdwAXguoRuNt5hL3be1
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
NNdq7WtC+nrV1ZbXgHOlZ21SfIjfDZ5Bi7U/3l1t7IIy3Qf33HO3m+uUR9ya
9addJ/NBPRDj/bvHn2gxZmCuS6+5q0X92tbiAqk112ex3qSpZo8Ob+lLsnZH
1y6d3BjK6Rl5UqKjo53fbYW95s+f7/ab5ZXvlLBF0S1yish9J9fEs3ch44Bf
Ex/2iPFTT7s3bD/l18x0fGbMvd/0EOVtGTjcW3Y3OFwSxNPxneWZz2NvefKw
8rjkkktUb+HfhkN7365q7XFn/0+eGf1YrvrmvVqn2G/gKL22/77wymlcEZ5r
4lyPgvIK5W+49cePyC13/k5++OMntG8VMesEo4PTN23TNb02e4t7bxAH66is
wl/G59esWaNj0L3Hxcr3NW9BpMpU4kfgTDAWORrsT+q38esFBEcYnL1Me/oW
VFZL4/5D572H+dkOy+2AfuKesSvBtw6HhOjrZnik6x05iS+W3hXYUfh6Gpsa
te+buOKIyFv03Zd5D6x5y5Fv++XEr05RPbTZXA96Cf2U66oLRHeBr9gXa1w5
VgkaV1yrfMDLYhMkNtF5Rh+iF22+FfoydN4SzbWZHR4pATPnql6d4OVn9O0Q
rWtF5w4YPEb1MPqYQ/Wzq3bQxgbR3WAvMJZ3ILxYYarvA8w6CQw3sn1ZkoSv
TJFlq9bJtpJK1UnWR4e/CjwBvsIPQGxM+4H8H8pzt3yUlv8bfWVl5mf46pSc
gNNn1wGz51ZKiMFW5KL6hzkxQf9ZczTug59i3CSHs2ycqwcOuJc545hoXsPN
B8YiZjRo6DgXthqu9WXgK2oc0AnBsxerPuaZdcKeX7g0xsiDFWYdxWqcGb4s
niNWwpGVLHEG0yemO5zvyFOw1TajS7ALiAvmlpXLVoMF4PAhDwIuXVuzgt7k
3pn7C2nbePqnGXet4zlyWPfc3n37dd9tL85X27W2ptLpw0VehkevU3o3NzXV
ScLqVa6emmCt43L4k4/d9uWXZSMgp/jRVZkbZNvOCo2hePlhA4WKl0+wcr8u
io5z5wNo7cKyOOVdXJGUonXEyHvuH5xh92ZHrp8x5PPKl33ppQ7GIg8hJknm
R610MLj5e9K0OUaWTJDJvtMN/sqWur27FLOci2ykLn/T1lzFQ/CleupTy6U0
fUaQrtXc/O3GXi3T+aL2wjO/rqG+QXXE8WPHVeZ4xorANth5bd07uFlzYvMK
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
Oa03sD91p7Mj47RGXuu3jM15/fXf0l6JrO+IiAiZMTNUsjZsPmf/kc0F4bF6
bYb6R9TeNDIR/wj1adQHsD+/cdMDmgf2Rp+xMiNknrErgjRfkP4Pm3KL5cjR
T1yc3BfO96N1lzXOHmDP4J+nNzQ4CY7zeldeKjUBrKGDRkYe218vh/e6/FlG
ftJrAHmK3NzVVKV26CZzj1kGU7I3wG+lHny2F/JgvvJyHV6zE2bx0JseOx99
hDwkt53YOziLv9Ff6DGbh4VdujJ5neo7YsboP/Qg+hC9iH5ET4KvkFOsR7ja
Lb7Cf4Wupac52GqCl794TZlmdHGgjJ/sK95+gerjcDCWj+rvwcMnmL99Va/7
KT8p9WrhMsl/rur/kAUrzDXES1X9LjlyzOEVJS/B8g544i3GGhsLmcNYfNXz
sLg/1i3ri/igxZvYkthlxOxnzZopDY312oMQ7p75kdGydEWSzJq7xKnjnDJT
vHyDNXeKPmyjx3nL8FGTXDWBk2SkmSPm1cd/lsHPvjLFf7pMnTZDeVbGT/bR
v/2nh2huDLYaOJk1QWzQ4ivWC3l6un7MWgqPiNG1RR4x+Ioelsi11RnZmguK
TYbu3uzCVtq/3uW7Al9R80rtxnEXrj565KiUluyQg+eZ16Ut+YYNY33EvIZf
AtxBLfZ+lyzQfAJkQnOlHDA22C6VH05/tf27HZ7xhvoKqa1yeDGpNSK2ohy/
Zh6Rlaxr7IULtYZtXnt9c5OU1VVL2kYjn4t3SvdLb5efP/hXue3Ox+TrNzwo
z7w4yOCIYq3ho8YHLpeNLn84dlvy2nQ5+snhDslpT1+AZ04TaxYbgTgCedaH
D36iPhniU1P9Z2ovh3AjA84FP/Ogfjp2dYr87P4/y7duftDY/JtlWVKqse/X
qf5v3fO5I4fmd+5v1t5i+AI4j8U/xA98jd0Bv8EvH/mPzi3vUw/3y989pfEp
9Ln1c73xxmuqI1PS1532O2BsxujGG29UW7bWg9s8xlw/79188836N3qbPbbN
xTvFvNr5ADPBHcXrCZMCJWeb0yflpRdfc323s8xflqCvqUujVwavf/nb59q8
f/Jlwan27/37D2ofD8/P+EwPU50QERt/2rzbo8asuZSszVoPYe8BWfHRYB/Z
afaD+m8NBmgw2I+aP873/nt93OebN2++9pInTwAfCL0BPfNxOnLY/kislhWr
0pQ7JiJxrdzwvYflOz94WPsGoR87er5Dhw+qTErbWqycN/j44ad6750P3b0O
Wef0PsAX1x6X6Nn2EHKBZ3xV6HT2Ili/sLhAsSg2T/jyVLn2hl9I154/0dye
bj1+Imuy0mTDNrgFzWfLdlzwGCE1VjZ2krZluxSWlxt8VapxQu15VunU5O5q
hjesWnk/NEa4y+KrSu0ravOzkK/0b4e3k1wMq/tZK8zlhY4TYouW7Si1DZBl
/8dHtFcOGB+9hH6y+Su2BtrGCOkzjo2AniOeuzg2SfUfepD4sdYjtMJXHOhR
9Cl6Ff2KnwM/trdvoIzz8lE9jD5GD483f/tOc3DYyLFTVH+jx9Hh+EG8pgRo
/Jr+zxOnBsmUwNkSumCZLF6eILMXRmhPKic37qRyR69f79Tm25xaYoPIaOzJ
/wsxQmQ98RXkKc+eY3HLLbc4/mgj/4n39+nfT/KLS6S8tsHgrMOyIWe7LImM
0V6x1CXgcySHioMY74DBo/R5xGgvtcHGT/I3z9MUZ4HFJnr765zOCJkj/jOC
dY59AmaJj4ufwdaa4eMkRw+/p64hcq8iY1vgK2Qb+TzgK/I2kQ/gKw7rv7IH
8gR8lbY+21V/ckpqqpy+Cl+0d9zZ5JrN1USOs6+r6Gm6cZPsKC81v79TYzvo
M9urtqaqUiKWxWgd8p7mOjlI/lUjNluF9v2khy1HuZEzuUY2bivYLjvMOddk
bNSFzhq+EH5YapG4F3y9uw1GLKutly3GttwMXkrPNHMXqnjv6ed7K+9kQ1ON
9tKiLzy1+vjA6aO1LmujNNSdnSuf/9t1ydixVtERrfcn9/veex/pmo1bmSTX
XP11KdlZp7ZiW/3tznSwNujt0GjGOzJyucZiyTni2llfPDw5M0+75iMfm7kp
V+yMLmhocD5LPvvehkr57m2/V07lSUamDeg/2H397LmgRdGysbi0RS+f5r37
DS7K0p7YTv3YCfXtkyPT0OB8jjWytbikhY8FHybxkf17nNx5+77FJRZTrElN
dfeR5rj8a/coPkEeHjt6OheEJxdk65pB3rM57vnmPqiFs/8Dy9jv+xgZzxqy
+Xa2jhKespyi4hbnTEpeqzqzqtqJq7/Yq69yiFk/F76faTPDlEfA+sK4jsqK
csnfWSnexu62PYHAJvfefZ/qjYT0DLnu5t/qua3822rWJrW72wuKtUdfe+uT
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
bXX1DD3TORgDcg//+mxf5Uy/+5d/174GA4aMV/5Werh5+vjOdNicK2xYHuBi
Pz8/STRyDXmI7rUcNdErE2Tblq1nPacdK/QAcUu4zivMvqWOBjuJPaFcyOLi
RRSHQ/1C9hLjPsHjjN1xejsY+Zm0NlPzazcWl8jy+LVG/t0rd9z5eyMD4+S7
t/9GbvvJP+TrNzwsT/2nr8GXGUZ+VkiNsZUqKko1/xE7j95UVdVlWieZD4cn
OSPmnHA2IJ+ZY2yaC8XPxDhX19S5fKAn1a7Apx+3KsXtF2C9uuMtBkeq78ro
tcR1mRK3NkP1HXqP+XY4GmJUL6oPwuhI9CX4Cv0ZHEYd/hyDr4JVt4KzfP1m
yeTJPqp/a2pqVRa9/PLL8vDDD8sjj/xGAgP8pba2WsaOHa9yFl3v7zddunbt
6fZRXXJJTxnQf4jq+unTZ5rxOuL+nz08H2Ar6gnBGOByMOyF8mn8Tx/sY+QM
2AouCvYO946f2DMHy8fHx50nzNh997vf1/XRaGRSdVW9LFy4SC7q5Ixlly7d
5NJLr9S+FviuwsLmyGOPPab+hm5du2geRfeuPaQzvkRzzmuuvkoiIyMkLW29
wdIB5rdmKIfdjJkhEmTWw+zwhTJ3/mIJn7/U4PDF2gOc9RNOH0J6hJN7FZOo
NevILAdfZSkncVLmRlmdtdms1a1ujAW+SjA6MTJ6pdljjv134rhTq7xv/4WT
E4wx9r2tBY5JSNL8DnpMby8mN71cfTvE1mpqyqXe2Ljs/e1F+ZJXWinxazfJ
bx5/WfEVPeMu/dqPZcny1erjGDZ6oiSmrDcyNV0iVibJ8oTVBsc1GLxY58Jy
lV8KNzFyEFnLvfJ75GHV1JZpvXfmxk061uTfnsu1EHtcbeQJfDDkzmG34QfH
9z0rZK5ZL1Plg/f66JqzfeXOtlexh1955RW57dYfa13MmHF+WrsMLxK8P+Bb
8kzk1Jk5SNeavfLxvl2aEx1h1iH2YOdOF53WW6b1nttR8FltHz6AZjPf1PDj
87/44ovdnz0T1rf32JF4Y1Fpsa6D67/3gLz6Sq8W14IPqKr2M18S3IOe/0cu
DBs6Sv9mT/NMPLIwv0DyzbqlJzHvxa3epM/wnPFMnq3nNVD7y7O9b+oo13lw
yOMfaX3d8Of94e+v6OuzcVh21C6yv88jMm6V9smdbdYSHCfcq+aff3LkjGsU
ncCYEE8BH2YaXdHYVGNwSLmUunBle3OfnbNF41Psc9YzvXfpCwY34GRvPzf/
wtnuA7385z//WS6/7GojUztLz+49ZMqUQPX1g/ki49aorANrb1Yffcf7paPr
m3c7deSr1qyWvIJ87ZcM/mV/ISvZ69iLX4ZcwSYFX8GZvG//Llm3aYvKOTAk
dRr4AUPmzpc585fJFV//sfS88sfaZ/Sn9z8lQfNXSNa2AiNHC6W03LFf6+or
1X6gNpRci/ySMpXDjBX1GjZ3Dnl9Ibmm4dvFhwVPFI8is58ilscovxV4yuIr
xyeQo/oMvYZ+Q8+Br7ClwVf4sNCH4Cvrg5gTvlTCF0SYcaE/znyDseaJn/8M
CQgMUl+Gl5e/xJk9QC3HrbfeorqZtdS1czd9jc7u3q2rwWCTZdKkyYqvkAFd
OvfQWGC3bl1U7+Pzyt6QY/ArfUub5c47f9oCY5F7Zf1XyF44n/DjgOPBWOiM
C92P7n/isH2FkdHYkORNWH8dDxsv/fvf/94CX4Ghvva1r8t99z4gd915j/qk
6Q1Bvgn+q1tvuUMxLfjq/vsfUD5rnSv+36mzXNLzMp3HLp07m/nrov8LDQ2R
wMDpRl8GyOw5C8xaK5VDHx+WtPQMzZfHNzDX4PBQ87/ZBm8tdvUejDBrK9Lg
K9ZZdFKKk4OVlulgrMxNsoo+v5u2yrotuZoHgg0QFRMnqevWu7wtJ6W8bIeZ
5/oLltdOXGinwU8H9h3UGqyCgkLlk6P/IXYvPae3FxWrrqIWhnqlSvNcWlYi
WwuLxSdokdxx3xNyx91/kVt+8ke5+ZbfSq++4yRobqTKeO+pAQZrJcn0sEUS
ZPZTVGKyFBlsRn36J4c/UXnxZa9dYs3c68cfH1Jbn4fNy+noYfkrqNGnNg3f
FXl25Brjl4ErjzrUfmatUWvBusQ2OBufKjmGrOXFiyK1HzO4iPPhY4f7H3nb
mmug9cGeIc7w/TueUB7ORdFJMmTEZPELXtTm51lbMakbZI6ZJ3zz8Gmgo7SO
xuDqzOyNUldzOsaw37V6jJqnLCNzbV76oYNHJMWs5d2NTi3+K2+NUF8a15+e
nn4aLuE84L/RYye534On2b6mnsq+nuwzU5/Zkzy//+5AfbZ1b/TNttfFPfBM
zhLPyBW4OY6fPCE9enTT9xjz9dud3PRaVx3lM888ozpmVdZW97nh5Bpo5rT1
moUHmJyV8up62USdl8E06F365IDnePj5BmreL7nOFqe0F4e2OWFwzuErttcV
GLJQubfohYS92fp7xDa4F/qz+c+aK0PH+onfzAjlsdy0dcsZMYfTP9LJqcH3
QJ2X/4xQ1TXIVmo4zoavOD81R1Z/jTNz6es3XWvtwXvU5i9cnqixQXKk6RdM
z3Ny1c5l/9n8yFOuHuLgKXr3fdmyRHn3tzv11g17miRlQ5bDp7kk2sj9NPH2
myF+foFmDy/SeoRv3fyA7skf/ezP8qen3pK3+o/V/NtSgxHhHlH5ap6pP8w1
WJH4AWNEf+V1BtfEJyS5fLUnpaJ8pxw6fP59WDbPnXkvyM9VPYQ+ooZz+coE
xVfrcrZLujnSNm9TPUYPscSMLOV3Rc+h7/Ar4M9HD+JrAK8T17Bxn3DzGt25
PDrG4OMaI3eqJHB6sMFXgeLt7WNsnHTH59HN8X10vqiLHshF9HKP7l1V1tD3
id6l6PWvX3ud6nlyS7t26yT33vtzxV3ECO+44yctcrDADRZfWTyBfOa+sZ3Z
z+x51tqX1Sv3yzhsDNgzr137e7m4GWz+Fff+ta99zbWXO7nGrbNrDLtq7aD1
Xd166+0Gc/1CXn/tTfng/b7yxutvGozb3YWjyIPrLn964s/S6/W35O0335Ob
brhRLrm4h/qxwGgJCYlGPgaojc1vMK+9er8puXnGxt+1X8p31kiiwexLl8UY
fB4hS1as1FgD+RbL4lbrWmPd4TtlDa7KyNa1SW7MWmPz4C+nrwA62N7f3j27
DLYs1hzQ842v7B46YHRNicEI4I2i0p0StyZFfVdbikt0X2/Nd3ofbM4vUM67
ktIi2VGxU+sBN+Y5+Vn3PPg3ueqb98rXb3xA+dA/Gj5V+0L16ztY+4IRU/Ui
vhq2UNYYG6em2dh81NOXV1yw+tczjRU2MPL4i/T2wp8KdigwYwT2xMdDXsiy
2EStycPup1/WkBETZayXk9Pb0Vgoj6eeekrXcf/+AyR4znxdO8xDQvJad253
e8eePfs0XgL/2HdveUh7Au1sbJDGprY5h3jAI0OO6V33Pykvv/GB7Pu47TGx
eIAHdUL0pDy4z6mRpC8IPcGoxWX8sV1SN+e6r5c59wt2egXGxcVrzwpe11aU
KE+5/Q3mhDoqcsP0ewan4Odw/8YkB3OVVzn3s8XVwwaeuHyXj+bIJycUM1vO
PN7znT5f/GYt1Ne7Gxw8bbmuqA3kmbwQex3wrPDMGoXbpfVYEB+lJoJ6CWK4
I0eM03uNSExRXyifASXRY9aOGb3TpgfPVt+g9lMxewqs4dmnsN15Jb+ovkZW
GV02eqyvrqn2etAsWrFK+5dMMboKXij6KYDVzrbW1Y9bVKL5NMR1coztd801
1+p89u83rEN5ibaelbp4eAfByEOGT9D4Knlm7Ju8/K2ag46PJqeg2M01e677
kLUCNsOf09612Xrdcz33uciCT83aq961WzFjkLGxvA0GDp2zSOuoRgwfq9wC
w8YHyt0PPCVXf+s+9aV+9/bfyoo1a2WTwcRbDI6hThse5vyiAuU43pCbp+te
5fAOx4eVmJom6euzda3DUWXtiQuhG/YbvIr+JQ/L1pNlZW3QHEvihGs3bXXp
r61Gn21UvYZ+Q1bFJKWqzouKSVQ9iD6cvyRKfRDLVsRLRuZG2bP3kMFVdRIc
EiZ33eX4ld5+633Ne0b3g5EcfNVVrr7yavn3P5+Vl198Te7+6T3u99HD5FwT
A4Sb95l/P2/09RX6vsX4nS7qplgAvxZ2blv4yvYx5tnmYTKvNs/9q8TTYGOD
yEd0EvvGYg4rA/hMamqq23dFvgs8dwMGDJLHHnvCVTfQ1citbnL55ZcrF3KK
0QfgK+bwO9/5nmvsO+lcPfjAQ5p/+qHBXm+/+Y7BWb2kq3I+OOcPCJguk718
5Ne/fkTniN9TH6T5HzgNDojevd+R8AWLZdf+jyU9a5PGl6NWJCp+B2MRP8Jv
uip9g+ZBZ23NU38y9XWJqenGNoh38wHaWlxbE3Qh9tDHZs2Qv7vX6GPyffCN
YCNZvmTt4Vm8QzI19367bMrPk/ziImNTFWusKtHs8+jkDGOrJcnjf31Nfv/k
K/LE33vJS70HyRu9PjI6q6/WaOITGe3lL3MjVkpORZU07z+oubmlHr3dvui9
8Ix/FxscG55xO37ipI5he7L188pctZvN/JTuLHc4MZtrFWNl5pUodzo8evhX
yJ3ynTFXc1ds3kRHzs+6P3HCqX2iBs/bf6ZZL9kGz6S6ua9aH8hZHjZfiAdc
+TsbaqW+tu60tePJb4R/feiQkRrbJC5E3KWtMWZdTPEPFPIb1ddk9sZEvyBj
X7Tt2+rogdxG9oFN4Dm171OzkpmZ6c7Puf+h592fr2w44M79BovZe7bPtl/h
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
Y/52/Ru/Lu/16T+ihU/zzjvvlKJSJ/coIXG1xz24eCKMvcMzemffbgdTnjCG
/fyoNbJslXNOruO6625QX+tn4/rZb/zpT3/SZ/wEjD05WtyzrTXkWLA0usX9
hi6M0vMOHjxYfZe8p30WXPd2ygOvFe4ol3mRcTrGkVHLNR9qmwtrI7dbzymP
8f5ztK6yzpXbz6O1bLd5fDzUh96lq/pKt+1sv6aA8UeHU3P37dv+pLns2FP1
tadjUWxb9YG6ejl4/o/3OBfzAB97e7/H5+D+yDJ7cmrQQvEOmC3/+c9r8vBj
L8nNtzyidXOvvTNKsTv9Ys7U56ejh9WJVndQLwwf7w5jEyKvyBVnvXHtfOZ8
5C5zDuaSGMDGghIpMa9TNmyXgJD5MnZyoM5Lr14fSZ8+I+SjAWO0Fjh00QqV
mckbNsv67bnaN5Te1Vu35WjsjXxO6vSwbZHFyGSLsfBhUXfpPBwf/fn2rzAm
lnsSvyKvrR7W+kziK2Ztx8YlaW1j9pZcY1PUSt2uAzJv0VJ5+Y13NNcyfMky
WW/0BvVj1NhaTPOd73zns/id9rfrrn70SQaPomd/+tO7PeJ7F8nLL76i+Oq1
l3vLe2+bsfywv/qbwVd8HzzWu9c78uEH/eT737/VlYvdRXN7wATWP8X1P/74
43re7i79PnDgQHevGBtLtpiLtQTmAGd+VWKEtucg6wZ8wQNsxT3//Oc/1/mh
vwdYBhzM+PJ6woQJOpYWhxJjvOqqqxQfEX+48oprNPfq0d8/Yca+h5mfrtK1
S3f59a9+q5iYY+I4b9lm1kpaarp0dfnF4OP+/e//4GDrMeNk7NixZj300P/h
r3rvvfeUz4Ee9VdccYWDjc13//iXv8usuYvljff7y0VdL5ZOZr41Ztytu/zw
lttU3sbExmss/fjxz/p52wf3YXlkbUz8fO0d1pIjO09KXn6B8qtQC8J+tn2m
trp6o+OnhrOLuERicoqkrsvU+rTEtemSmLZec2HJ219t7KqYNetkzpIYGTrC
WwaPmiJTAuco32bqZmOLVVXJFoMvj7v8HufDN2cxCHo4IjpW+//COVS4o9jo
iDKtxVmdmqLjSV2Yzdv+IjIV38imbZuVf4fasuzN26V4xw7pO2SC1lmNHjfZ
YNGtsrO+Se+V+ERb5+H+kQFg/Wuv/abiBYtTzjbXyIFIc7/aF9zsk/eGeMs3
jU5mvtrzA6AT4cHy8gmW4NmLtbaHtd36c8ePHVVZDu8huUW81x6PN3IsMna1
HDY4QzlVjn7Srl+Lw9aonMlXYXOoGnY7fr1xU6drHJvXJ1xcVFbnzwqPdH8v
dlWqPmNv2/fIvSWPCN4d/Ee8h3+Mv6mR4u+MDVn6HDjbyQez/O+efFs8xo2b
oLV17e0py+fVXs4x8x2X4OQA8BvkKhI7a8unZed/W26O8g+A48iLbO3r5LFi
dYb25qK2YvQkP2loZ19xTvgvr7rmF+qLI4fScnA3NnScJ+rgwY+1F8599913
Rh52y9OQSR9gg3WmBc3Teo+YxAy5/9d/Ub8v9hq59w311R3mnWvvAAugR/fu
dTg/PzG2VWFxvvapgXM0r6RINhs7ZouRaxvJczWfwa75onpTx5V+BOZ8yes3
SX51jWSb/UNfJp9Z4TJm8nQZOdpHZoYtkUgjC5PXb5aE9EwjTzM0lpZobI20
rCzl3luzdq0kGFkMvsKHxX4mjw55bP1X2LvwlsI/jfxGjrOWz5cN7um7Ij5m
59HiE7d+MnpracRyKSgskWeffUF69LxEenTvJl2Mjruo6yXyt2dfkllzFsrb
73/kjuWhr0NDQzX29Prrr7vzpOCsgo8KvgXqX8mhsv0B8YFkmPGKi02Uj4wu
xQ/yzpsfyH33/ELr/enTgu/42WdeUP+Vk7/jnBe8AJ7w5BC9+eab1XdmfVjX
Xnut3Hbbbaq7hw0b1iIPCdsWHPJV6vXMHkOHgS3wcVjMzHv4iCzutHFBO2/0
XsAeDQ8Pl+XLl7v3v+Or6iJXXH6NvGEw8IO//I3BPz2lcyfqurrLi/99VTkI
4d0phkfv05MSOG16C16tp596Rn1fw4aNkA8//FDzshzd2EVruYlBMQ833XST
c23mev769DMSGDpfa0mefuZ5XXeemPC6667TOQNj33rrbdrP2+ZF2Af+Dc8c
rPN1sB8rK3Zq/e36rGztx+PZ/4Bn26+H2GC8wVLLk1K1LjImYbX6hmNXp6iO
JtYeFb9aktKzJdbIjIj4VRIctkj8Zy0WX2O3Tp+3TFYbmVJcVSt55RWy56jT
67a9GE5HD9aG9jUw41XVVK+6I2vbVq29Ka9w+uA0NVRrXjAxkZoaI2dLC121
g5/P3rO86vmFRqY1Vcqn++pk/+4a2WX0Q+eeP5TImFTV+fB687kzcdShj2fO
jZQnnvijyp/amkZXjE6MHBnYrtxnLcyZM0f5Wok3L10eq7wz9I+IWp3Wrl8Q
TrNfPfJv+cEdj8sWYyvDP9Qa5yCrv3XzLVo79uY7AzQvtfV54tdtVjtF7+Hk
UbW3W1+r5eQMW7xCtpn1xJ4mx4Z+6bw/YepMKaupNjqjSK655hrNB99ZW2Hk
eakcPPQZTyZc9dRM8ze83Udda4dnsK3FG8g/8scKWsV90AbMf1lFsf7tyXWF
ryx0/jJ9HRDq5N3jo+V58rQwfZ4yY65+x+ou+4CDg7/BNIw3uczse2KnMUZf
EnsHQzE/9tFa/+UY3VXh4k4lVjvKa9Zpc8d8kL/I/qKG9K677jptPogXslfh
lb/ngb8qf3h76xu+jqnTZkmffqMlaqXTH466+rNx0fHAvmRebzb6CT2HLos1
1+XYEJVtfu/gkcOKdxcuW6F+PHjhL7vybu1p3VC5Q3lWwY/0gaipq/1CfFXb
zXrG10DseG9zjfrFqF+AVwo+lh1GJmRuyZFtJYVSZmyHtRnrtMbA5ix+3oM9
fujgATlixgHetvK6RsnIyZWwpfEyY26UBIQsUY6LJfA2pGWoX2dJTILW2Fn5
mbAmVfmlliofdbI7h9zKYQ7bQw17l3hcopl37WPW3Cj1DU1u+fRF7sXzQO+Q
q2YftocMts4LL7yovN7sO89efqpvjZ677Y67ZFF0gpFvi+Wm7/5AOndxYkxw
q+PzhGMqLCzMlb/czR1/GjFilOpZ+HI986R0gZojJGiOvNX7Pc21+tHtd2qO
Nb3FOV54/mXV5bbGzWKsd955R21cuDKpCUbe2JiX9c1YTvcnn3zS7c/hwRgo
P5KZ469KDhZ7DLxic9u1j61ZR7ym1zV4xBNfOdwLnVvECm2/Zyde102PXm+8
rcfjjz0pPXtc7q4lICd+4MDB8s9//tvoiaNas3/vPfe7z0vM+KWXXjG4qq/0
6dNPr8Ez9+rSSy/VOQP72d+++NLLJcCshTBjV9JHPDI23qzHm9zrBY6joKAg
nTPbn9rmknEeiynxzbbumfpFDusHg0+L+A+/k2n0Lv3f8V9ZPnnb+yBt0xbl
JY9ds04i4pK11n/x8pWq07UuBJ4vcyyMilVdQy06/azhuRk5cZpM8A0V75kL
1Y9QVl8r2UXFkuXqCQ8vxJFPP999OPXDzvUfOLBHktauV874HKOv6ftFnRkc
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
X4iXX7Diq3mR8apDkrK2GbyZLnS3Z/7O1S8HbxHXSp/63Ioq2VHXIOu2Fclk
g/EmTJwqb735ofQd6iW/ePhZufH7vzHvz5WqhirZ21SvvJLwGFJfT5zjbD15
Wx+sQ+I8hw9/7LYZP49fUefS4ERqsn/0s8ckPnW9ZG7K1R61cEkwB23ZoNz3
RWZdPfvfl1UWwc/UVkyNg3nt1r2zjJ/grTFbYr0prro4z8PaZNvMXHjyThnr
Tfki2uqVqJyQe1tim2PHj8iA/kM1TrEsNt79Pn3zPHlC7REwc64+55aeHqOF
06t1vKy5ruI0rMIeoY7i+KfH5PARB3MMHDhU8z34/9Z8Bz9Pmujwmdpc+SYz
xu3hDOoh4DpfFLHSNQ5n72Vsj+deg093pLv/jz2oLafHlOd76E+eQ0Ja5tmD
2yKXJ7b4XeYSOU9McNaClnFKuJ2adjm+stZrEb8hHBvUHPpND9J6BeI2bele
5AL1oL6+virPfKZNV99SW7nmPOjzsHtXvVQ31srPH/qPfOcHD2u9XEVdjcat
z3VP2Gt3fOslGmvjns8FJ7jjgwX5BntXaf2D9i5qrpV4s9eomb35lt/JO4O8
jE5/VwYNGqM5jzGpWbK1fKcUVdVIEvG2Uw5G4d47ylXPgS3MI3ndZonPoB/f
FsXt4FpqE5CFoydNU/k4bOQkPbymBKgfkhhAUNgSJydrsWPDzo+K0Z599JgB
Y8UmO1w4aRtylJe6uKxCsYPtGWcf5LLYmrBznYfWh62FsjV0VkbYWKHlewTr
cA2sH0c3dpaLunSXnNwC7cdZ37hbdXgnj1yqQYOGuHgUurj1qKd+jY6OdvsA
rD8JjlB8ks888x/56KO+MnTocNXbgwYNVb2ODOKZHKyjn5xQGelCUYqdWU/W
3sNPwzxzXxZHWEwBtrLxHT4P9vrfnndl582uC9s31vZ55j7Rcchexof5Yk1b
3MU4oTOpt6PWOysrU3MmLUaqrKgx4z5B+nw4RLl0P3i/n87H4EEj1P7Cr0WN
NP1CT5085cY6FvvyABdRFz9jxgx57bVX5Hvf+46rHuIag69e0R5HXbt0Vd53
cu5+eOvtcs213zDY/gdu3M3B/Wjvk1dfdfjezZoDF3raIeg21sD54txgXBlD
G1v7+te/rr+Nz+2mm74ttQar1DftlpqGJlmTsUH3NdiK/lH0UISXgXwL8tnn
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
2LCCgyMpNDSaQkIjqEitz2QDvyN0KuQAcDrwH56/8E3Ie8jHq12vW9YgGHNS
91rWQvgMPgv2E06YSHvrGtU6L5PsFI4CF8DXvnYP/em1N/Xvz5kzj957byq/
nvnRDJr+4UyapfTaOK419FV6/71pWk7k4eOMY/E7jG+Me+DKy5Vb6Hf0Dbaa
1h7yCU8mD99gctjgTfbrvcjJxZ/s17pxbTnE53LsjMIY4CSH/QT6FDltqN+V
o/RHX0/vJecX1oDlFZXsU0SdFNg/6pub6IkfvUxf+Or3aeVqD1qx0oF8QqNo
y57KEWuLSMM4rKqvpwqFr5HTdPjgAO0fGM4LaqvxOFWttaOR/WE2/Ynq7yvU
+njVhkBqamngeGjj34GNp0yeqPO5WB8fzwi+kzZTDjbG3p33PKuu2exrYx6Y
o0NUbvK/WfuhEANX39zCr8FPFZetxUnhHmurNV9hpYmrQHL8YBfEHrUDuvp6
+FpaTTFZiJkwHv+DeWv5nMZ4HBhYIH/31lQpDNemsHA/jz2MMTxvfKe2xpxX
l7NlG/vBf/7znzMfdlOzdi6O1TZdD2rC4Xni7/jMP2QTdfZpNri5y1wsrgk+
cOyhz/n3hjWR5DyiOftE6q87+7s53kfeOzm56Hmj6DfE9BnPAW4sI3c+xrP4
6q316Ib1LrxOmnLjrcPwHdYZlQpzzJi+kDl5rXNVxWeHcYqxrtX2HH0tBDkG
3K9xy/Uyjq5q7uDxOpqPivMg1Jdyy/ZwjPfMGfPpu8/+N911zw/VWGjgOdLZ
3U51at2yW423scyT4ydP8PWXqf7BveL5gyseXOjgxAC/FDhlYLtCfsXa9d6c
0+foGkAuHsHkHRKj1m55rNPLysquSP5CbgDjFBQU8Fh9/vkXKCszl3kRJ064
kfH/+BvGcf7v397+gOpq6vl7v/nPl9hfBhyGufj7l19V2OrrzMf5+//+H0pI
y6JtJWXquxP0+EFsUltGYrGwQdZezZq1EnMDnCI8DUaeJHyG9SL+DhwGG7Bs
MbGJFKrWoWFhsawTEXOGMYp+SEvL4DGAmGeMReg9ay4Eqc0DbIfjQz/DBiKb
+JCghzXblhYrL9zzuE7gALGVyDFlDF6N/vlXa5L3ANkAW1CjWu+Bq+HYsSPM
g4FngueK5wF5iDh4xDSgXgvks/CJGZ+FNLFXYo2srRcu0LZtxWybhP0XuQuO
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
HeoC7TTUsvbzD1YYOovrOUPXr/UMZR40/A0c3PK91WptIf64oyauifeU/sY+
PnML7x39YoZdi6NvtMLuGo5CDq719cozwwZOOeO17a6qoZ6+XkrN32LxG/QX
6gpIDJx1a2tvorLy3dTS22MTswD0bSkrp6yC7dTR26Ww+QGOP7TVl5gnyAEp
r6+jnVWV7N/D+Fm5zpOi0vNoU/LmEeuhw4oGrhX3wEiuIePs7scxlIiRQqwg
ngc4q4p3Ven1c0bjmRP+VFwnZICfnx+5e/sprJfIXAeaXLiBY2VRKxhrDcSL
Tpl8K49pwUaCr/D6cuU1xpXkrEteusRgfPbZGY63mvbhXCUz57HczM7O4fuC
PwTrOshWyeWB6EReIXKmII+DQ8Jp67Zi/pvIxGvNLoNrAu7D+lByGo11ddAP
Rn0JmWHUjZfT30bbiZFnnHONbdj6r7W++ldrY8G4Rh5TYCzhIRUbi/BaaRjj
NMtyjDXYbf43teU/ryb4SuZ0Y1ML2a9eT0sX2dHC+UuYlxo6EuPVGO+pxXH2
mexaRzm+HTGLkjewb1+/Hg8NeQMb9pXWbUD/oV//8Ic/cFwX5OT99z/IcZKT
Jk3U85lxXtTCmjlzNn+2ZOlyyswv4nWs5DRfKi8Tzwt2Gtj1mY9i3HiqVDrt
hRd/TT29/eTpGUgenj60wm49545B92Ib6b7OXbxACTlFzCOxeOk6tn/FqrV5
ekEx24EQw3vqk+H4Cnq/WenImsYG+vJ9P1L3tJga+4f7eyCb8hWO2D80QJ8c
HaT2nuE6FX1nC8NhbQAfEMaw/ll/Fz302AvUud9sMwSn1hmT3cs6NwBczTgO
FOB7783iz5paND9b0c5ilp+rN3hZ/Bax4cZjfKb6qKu7gz54dxbrPtgCpbY0
ngXmjcTtCbaR3EDoX+s5ixxBwfH1deb8x4DgCL6fLcU7mIPU+LuYZK3msouL
m/4sZ3yk+fGgMz29/MluvTuPIenL45+coXkz51N4XIp+nBnTF+uYKDQ8ivd/
+OPbw/oeOanYj5swnu298nlKcobeV4ghBG8Aj8sTR9k2htwBnVNeXSewnGBZ
Y5O1vbUvnOvIHERNpl4q2VNNx48N5+7EPTp6BNA7Hy6mN96br+ZuO8eZ28Ri
wAZqHCOmHBzdyN3FeIFtNygqhTaXVIwYX1hVVUWfnL1Izl4RtHiZPdmtXkeu
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
yLvrPtvr7VJNxg/kBGwk0N1YY0iT+s+Yy/jetWyHxroOughz+MSJk+TvG0AH
DxxiWxDwBmJ1rTnojx07zPZ84RwA3ydeA5tczXuFjDGu47C+xTZ71mIlG1co
HDTfQv5cuPgZrVvryvhEsEBubi7Lfq6bPIpsEs5k6O6f/OQnlJJTyPFIEydO
0uvjzJ4xnx544CGaOGkc+05GwyPYIuLTaNnKtbR6tSP5BW6i6LhUSskuYL7v
hsamYb/p7uqk3QoTbdtVyTloaIuWraMCA5cCGp5Hc/8+cvUNo3se+THzoqNe
jvFYdaq/7v/Wz7ie4dlzljiwpq7aAgvJs71giPVG3j0wjOgB2JA8ArUYbi//
KNpowlXGZxUap9Vyjs/I431Vrdl+Ep2ax32L1+jLZcs1u45/eCLvu/Zrulie
kXxXGq4jMDKJ3P0j+T305bIVjuxTg04GR4Lx+17+oRbvcU6xDfgER/NnGXka
Hynwd21rBzWo8St2pBlzllNXdysdPXZCPa9qau9sGcbrgLo1qCVgZ8oLxNyX
OkWtHRqeB/bV7scS20FGoB7Vp6c1LihwgoKXCn8DJ4XUKRypcU1P9VzpouUY
LKnYTceG+ti/ibWHfA6MdGCon2IyimjWjEWUmFs8jMcsPDGLnL03kafvRo4R
AydqRWMz5RUWDTs/eNpLqmqZows1vIM3RlNAwCZaZe+o8JmnwmoXLcassUlN
+UMHjzKP+vgbJpCPly/XMpX1THLOVubg+v3vf6/Pp9H6A7L2gQceoDfffNPk
c7xASagvFQLf7qc6dynkCbaFC5bRh+/PofMKvu3YsZ1xGeQ4uCWuVj6k5EHi
WWEtCp4ybFqt+R71TPbraxzBJcBeyP3EOujsmXMU5B9Mg4ND+trXlq/zWmhG
XwjGGnQBsCTPCZMNTvwi0JvWa8vr7Z+3jcW3LXMFMhryEDn0kPHAJ7KuxN+w
3pIaTBhTwrn7j75HW/cj9a54Paew1aqVDrRs8WqaNX2OHh8LfWfkocG9tLVJ
PR0y8eg4Mh5Dvxw9ekTnKsUcwu+v9P6NdXvMtrWLXKdMONS/8pWv8N8QMwKb
EvgCXn/9T3Tq09Nsv4AdJTk5mb8z2pxGXwBnPv300xQfH0/ZeYVqbQ6OxW/x
+hzxJahzA/7E/n0HKCY5Y1R8Bc7o0IRM5gBYs9aT3L1DKCImldLyilhn7Szf
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
z4kTb6IH7n+YXnvtdZ4X+BvyQzBevL29NdvaX97ieuP4PWzz4L+ALIV8Ft8A
zgG/ADjW9uzZo2EahfWx7hitFveVNNGp4pPEHvcq/jnxT0K/wZbGvBtqvvgH
BJG9wq/r17mR43p3havWc54tfB1btmxlbCW+WCMutB5zYiuBroY+h76GrsY1
YO2u5a+D6+Osurajal70cv1N6H/hg7ia/fGv1GzZg9DvWEeIzejMmdNs49ba
RTK5uUiD/fDffcLPpLW1mZ+JLT+e5KdgnuOYsF3hOM7OrhzjvWGDK3l4+nJ+
clBQBAUGhVHx9p100WT3Ba+A5KViPEE2wnaBcSU4HGtzwd1Xy34lvCvA9Jh/
Tz31lO63Q5M1PdZRmNsnPvmUKmsbFG5azHaiF1/8FX34wQyaNGkSz+1p06ap
+f8m/9bX24dCgjYxhzh4ML/21Xtp6oczmNcJ/I/d3b0sCzTf4wW9/tzlNsxZ
/L64tJJ8NqUoGRlBq9a40pr1Xhxjvc7Jk1w8A8g/OIpxBPBVNDihtu3guJ09
pny8jOwcXvtcCrN0dXRTevZmjnHZg3VuezPtqKii+Ixievm1j+ij2ctplVqD
wQ+SkldwSbscxkBbfw/VNTVq+f4HBtiOULRz1yXvXa4VvEoj8Zm29PWSj28g
ffvp3zHnUWFJqcXvd1TsZc5uGYzG32JM4vng+cpn4D5/5FvPU6qJV1yOc+Lw
oD4us7eW0Dtvv6edX82JTVFmXlKxNaUVlurxUTVNmp3JPVjLncs3cRYwVimz
jHeCrMQevk35zD0gnMcnYk+ApRD/JnZZ+U59fbPO6WDdT2U19RbvhX9KfIPw
q/3bv/+K4lOy6K2/fKh/DzWjsf/Svd/nfcimeIvjHDD5BsHhIX0B/Ih+EjuX
rOX4GhVmN9aPdnf3pN01Gl7s6bPMUcA9+AWHMS+G5BXi/iaNG87biT5fumQl
23WTs/It+NzbW9uovqWd6lpa6YXfvkueQZFcT8B6HAl/HK53LDoJ8qSnu53t
psg7BT6ubKxjTg7IudF+i8FYofoKeGfWzIX0yttz6ef/+RZtU7ioRa1ha5Ts
rm5oVnNX09cnPx491vzo8WP8PcTsYa5jXVRYWk6JWQUUmZTJebuI7XLzCiZX
T39yQ86zsw/Zr/NkW6p7YDTFZ25huQ75fiU2IIkVxYax+tOf/ge1NLfTpMnj
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
FYjPATbq4SPjayyxXtgr2BclhWdzAU2cy/TsIjKz8yZrR1968ZVPRN8oTGA4
gDc7ulro/Xc+Ip/IxLP+/84772S5HyT17oavw29x/fceIStHbz3PEq49PquI
ehnbVNRU63kGMC/g1ATW+NEtz0qPyqlylg3nDzjR2cld/7yS1w3+S/UeYxNr
2rDZSOZmj4m51I7uHxjjFPjFg7+Uvk547BOTSn95+7Mp1wS9tIGhDF/D7cEF
f5rWvlC/afN2M+ru66XD+7rHzXdRmea7A7dTfu3YtUMGOLj70yO/f3vc3oKs
RzwYdZ4T89WPfDlKuyyc6Ye3Py58DxNzpPBbens76ABji18/9ZrkJ0LfT8x5
nOjvAt5DPqq6TfxM/A5wsiJ2WFVTSXGZ+bSTMTxqDm1cfdhumF6dH4bKX76Y
MzjV50FOI25/+OCg1KP87P7f0k/vf546ezrpsd+9Qg//+mWWWT5kz1jYwtqB
1m4xosiULKrp6pZehWJrtLfT8S8vTN5i/8EXcuL0GQqITaMctuciUnPJIzSO
bb9AMrFwEXm4fO12WrNOw1bLV26QuglbRy+xUw3xFWpDfXgvgxc1OiVTsFVS
QbHIZcjQTMZXaXmFlJaeKb9Z8W9Crp+rTuZCBz4XZxj5N4oDwpBbCPpK6ULo
PvgdVB8Q+L/htw1g/efhH0ofL/mUvvvd+TRzlqbzPv74E1r08VLRyUoXIpcM
+z4jI0MvS1FTqPoFgXtR+bfQlw29Z/G3P//5fZLrDr0OHsqW5g7hQkEtjPK1
Kf4I9dsnjok3/A3kNGxp2LEXg7n/Nw7VfxQ4AL4WYCtD7GGYF2X4Om54v4eH
B3300Uf00ksvMbZ9jddxEa+RFh/p7RmUXCvEah/6xQLdOs0Un9ONN95AL774
At100w3ymsJaN9xwg+xZzC/iwtjDKq8P92+/9R79/dU36UGW5cofNe+qqyk8
Lom8w+LILzqFQljPO7p5ar0O5s6lm2++me677z79d2BPAsep/D4Vm8SZUTWE
lwo3K/4KyAOcG3wX9FhCVg7llFWJrzydZQ16yqAPLfI+EGPwhw8rXPNhwX8F
WQCMBdkA+wu9P6zAgWztQivWbBXOhI3bzSXHwcE3jBJyS6iE8VAqYzj4wuBX
aGu78P5eip8YPHM4LZWd3WTjEUB2/Fsi4tPpjrsepddYj7a2gzNqkPq721iO
M7Ya6aeD+/qkF29XV4/0nLwU8gf7YpR/y/4DI7IHp+Obx94urmuSnLQdu63Y
9s8TbIB+PvAdZpWOzxuf6rtxX1VVQ7t27ZbchYnzVMC2rJG5Pd34o0fE53Py
5Nm5wjg7iKkFM342t3I6Cz8eYJ28w8iS9tr5U2PTeEyKnDDF+T7Rl4bcEeTy
4maYn46hXsOa4Hdt3LiZXn7pb+I3ikzLlF5D4B9V7z842ElNPZreGBzUvmfW
rHnj5mHiQG+U5cs3kINB3Z76rfCJjX51mu599EX9XBn+7R7ew7hvaW+TujP1
OnjUcIaRc3TnfRruCotOlHv4TdTaqvdXV1aJT0P0jZXruO9Q+gqPEfsxxJuC
j3q6pHYD/LmGNQOQB7NmzpM+2sA4zR1n+yWFNwF5TN0tvK7x1Dp4NraGrME+
Xb5sreSpTiYnJq5ZdHyC1ElCHgSERgnHWjxjQNTxgi9kqni14dB8wJoOa2xu
uKCc+POdB5CMlNdXST8kjb+rjwYYWx0Dtzy/lpFXQz+95ynpu+QZECXcwBmM
d9HzCsk9U+WnnW8gfxq3vuFDgmNRfxOXXchYi+07K3faZmRDq9fvos8ZV+0x
dxB71NGFbR97D+kFADnq7h0ichXyFXIA3Miwa+EXhBzGvGNPI9aPPut4raCw
WOYP+gm/HbLoUtabY07hv9Hk7Sk9TsHYu3ev1C4qvHPrrbeKH0vDVzNYD9hJ
7S54FIEVQ2MShINExQN/8eAjfOZfFe5VFTPCPWoFga9wg78MPSfUd8AP8sQT
j9PChe+z3fcT0duzZmnY7J677xe9jh51x45qOMrNzYNuv/12qdmH7/aPf/wj
bd68mbKyssROxc0w59nQp6XqBSDXYM+rvnX/1/vsqL58iAOqfkQaV9kpPRYF
LoiPjydfX1+ysrKif/3rX1IXqvyTY34o4J1Zst4ffPARfcmYFvwYr7/2NuOc
awUD430//vGPBZulp6eLzNm4caPwFaq+54iV4Ls+/vhjGTfeeKM+9wocmuiD
q74X/qnomDi2RzzJPTBcbBj4sEKj4uR9wFfYM8i1Q0wauVfXXnutfA84Pt94
4w2JHar5wNrCP3Ip8JWhfwXYHLIacws+RPRShf5ATjPukSeM/l+wodEHBWcd
Zx4+LA//cPILihY+ZA/fEMnJwnMM1B+h18SWnRa01diaTO08JL89Mi2Hqju6
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
9SUV1RJDhnw5yrITv7eyopa2GdvTVmNrqmtokbgsfOqQr5CzsPW6ejrFJkAO
guIpw7nAfrkcPjm1b6BncA7ojNYntpaxYjzro+yScj2uQmxXPYYeUz4s6Dfl
v0IOGvQf8BX0ocJYClt5+kaI/oQeRS8FG0d3GZZ2On1r68ZYy5NMzbR8LNRg
GptYSh7pzl17aP2mnXwGtooehz7HQL0Z6vnB241cbIWttJyrGePwFfYguPxM
TU1lf0kfed7L2G/woSNuBszxTeFlmDhwXbg+2L6ql5vih0I8FnYwhurDjDmb
d9U1NHfeNfT0s3/kud9M8QmJdHL0NOUXlIhPCjgK+Grdhu20lgd6v23eZszr
ZUY7d+7l99iQMfoS8z1iIuivhd6tVnbOvO5OjK80jIX9gH3h7B4oGBy5HT4B
kRpGD4kRuecVGi296IJjknm/ZQu+Ai+D1leqYpwNUKrjSi/Bvq2okhxznKtR
Fryn+PeD5+Qgn+XLudbiF+a51vsJWS9k5uZJv2LIrgPDmh8ecg2yoJnlyK33
PEcv/n0NPfvCu4wV6ukI27/72L4cRC7BQDfLiC7Jb0JvioraGsosLOVrbKL0
vEI5uwpfXA6MJbYzXwdygev4t9U01Yn+QC+yvu4Wqanausuc/vS3lTQyBK5D
xlh8XU0sj8HXgn02nbwX6DvcMGfgVlqyZAl5+wTQevQsngT3HD16WPr0oE8m
ZOb5fHiSb8hzVVheSjWt7TS8f9+4fTDAcz3Ac13F+GQ6Okt8V3xekIMKP8JP
fv6sxCSaW5v08QHFr5ORU3RJazzhR7J08KLlyz+X56jXT8nI1v8/5hyy+P33
Fulfc/EN0ed447clZGvxNkP8Cw7f5MIqxgxtstfw2t9e/1Tue3q7Wc9pHKFv
v/5vuUdv44nY1ycySfaHeo78PPBFqueoSSqYgOGQl4/epHicmZlN5WyfXMq9
fIZGpT7y9OlRGj2p46saPSn9xGfOu5dy2XYJT9L84y4uLuf9POBy9MPq5T0z
PNAp9ob6P8gX7OXk7BzxyZ4vN1L1iYVdq/ifJ+YvajL8GDk7e8u+U7EZ6Tc5
RY9EwwHcDmyN/VjZ2CJ+dGAQ4JH3F2+kn97/gsicHj7TqI9E39HmjibpY1nV
0iZ5FeeyYf7TARkjfri2Tqpq7qDcsirJKatvbpIc9U62OQf6u6UX6iDbbvC5
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
Oo1iax1Wahz7GZvjFfkqat36dK6bwu01RjmFJZKjvMVxm3AQrLfeJL/HmoLX
Ev1K7Le605p1DrTFLVjOWE/H6fsvNnd2S402YqjgovEOjjyFTwH1GuBqBXZ1
cHbn9Q0xcbNjYILAcYe9k5SeMuG9WGvIt6l0mlqHfsoeHeyW2CbWzPx94K/D
mjo4eci9TMaCWDdgggq2n5FXBD5E5HSODA6d9vmRWVtY3Sw9uVZb2cr9rl+/
3pTnhcs/OEzhfa+uEw6OlNR00QnTnWOJfC6cT1zZ2dmyn8D/1MM4anBolPdd
utSSof94blkhn8siOnbs+IS1AP4aGtoluhhyC3bTCOOMv38wl5547i/0zoeL
ac7sxRQclSAczYuXrhPeMwxHt0CJoyPXHfMo8YfxnPDpeD6cF/iP8Jka1sHA
VsgBBAZGTT/8I5tZnq/ns4s4FOJS81jnv/vWv2j2PCv6aME6lt/P0jdveoRu
uf0FeumNfzLG7KIPPlxKf31/Ie0aUPxY4LqHPOvt6eDzC/u3bLxX4wlTfPBS
wFgT4uKMr2rraxQFckLhvQKnKHisoGf27FZ0j5oni1fkA3/w4TL68aOv06cL
1pOjhy8ZOttYJ+mFuz2vtJ7+8vYixlG/NfmtkB8DnA189ee359P7c1fLnvhs
niXN+nQJ/ftfc+nzOUukd5S1jYPgW3tXpY4fuVY+YfHSq8KNdbF3WAKFJ2YL
B0N2ZS3jKg3bQAbSsj5p7emlRtYdyKeDDEL9INYZsWCgqsOMIVXfFWrusffV
3rbT6bvCUPs7XQpr/lX3ibkPCzICega6FHpB+jbyGN57gDwDIymC5xnzXdrU
wpiqi3S9fdTW30s6Xpdm3h81ra1UXN9E6cWVFA3+hrgMCohNkX464LTCOm/e
tl3W3cHdn/eBI1lbO7D9vZg++GA2fTJrIS1dsZGWWNiTxSZPWrzGhTH778SP
dcNtT9DM6x+UfYZYw5PP/Y3tqGzG+zrSG7VUVV9Hqzdsoxdf+4Ru/f4v6Hs/
ep76ezpFVkFmiS96pFf8V8AhqBmvb26g/IIi09mATr4UawjV9YEMVuykMSpl
2dPN8y48qoPo+cLymG2/O370c7rrgd9RNeNk5P7jPN72vWfHbeBn6bW/zZbY
G+KzXgFRFM72/2bn7WwvbZFeCZDV4FUBxkJucWRGofRfVessz5d7Sh04k9hv
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
Jujviy2L1YE1U+1x834+BQUF0jcDvKJKjF3hJkQOB/TQ/vF6Sfi2UtMyyX7b
dj5LwZSenkn93R3UzaNFZ5AYws9e+BPd98hv6bpbHqIf/uRX9Nyv/kI7Uoso
cmcmuXkHiGxGzsSK5Za0cNFy+kLqlmzIZvNWsnNwJVcvf9rq5iscr/GZRdLb
rqRJR+V8z9DRLV09pGPZqu9lvd3dI5g9lW2rWD6X4H+vadGTRtdBQyP7ad/B
w6Y8ZZVPFbgSa3OheBRgGwJjXYrr/2WH6sPCs0BHAV+B20K9INdwtg8cPU77
WI72jOyl3FoN5WuaqKFLWSusU1vfLn7tJw2vX2WbgSr1bVRQ3cSYrEh4h8Hx
7OLpR04u3rSJ7VzECC2tNtDy5VayN9D7A5gLeyMIcio8keYttqRXfv8BPfyz
1xhb/Y62ugdRJsufdta34CzfyzZCZ7tOOBxbtS2sO9rZnlV6D6j8VyPj+Ar2
BPwOXXy+UUNYXllB5eXlpl7PwkM0zmV3Kfmk1fWBnT6ye0hkK+qAG5vr+Rx3
mnhUlXz+AcnhkJ4LPC/ouYgeFeAxKaiuk3qyGLavI9guCQqPlTos2PgrVm+g
jayL7J3caa31Flqxah0VFZbRN795LeuXa2nzZnt65plnRJcA15ytX8lXfU7s
QfTERM85selZX2vq6sf7MShD8l7HFN5H8/fj7KNPbFV9g8SOK2vr6aFH/0SR
iXn00M/+QDaMcdBrHrwPLh4BtN0vmP7whz/TqlWrpqwFhq6Brr7mmqvJY7uf
5F/jvUlsCyIX8Knn3qVdPR3CU1TfWGvKA0NcvY7nvZR1tFdQJKXklVMhOG0r
NWLHnK2fGp4ZvMnom2Dn4EIPPPQSr2m7oo/M6iQnj4raBskpC4nYSRs3OdFG
G/sz4jhck3sXYt9Drz7x2OPC127O9Q4M9fDDjwp+Co2OF9xp/nmQG2fqoYi9
g1oF+KixB4tr66bMaVJHHc+f6KehPtrm6kkuvmHC0xMWm3rG84n5xR6NSsoT
rkTY6uhbkJCVQ/nllYxXdKbnQg81xHDBNb+L9SHi6J8t3iQ+L/Sa9PKNlFoM
9HGeai7V/PwVyy0oLT2b8bQvuXoqOecprG+tt7iRe9BOlmm+rCd/qeDkFg01
6Vqn5MZV6yxE7iJx4QRykOpFLktfd9aD4IM+n77RZxrm8WW1BzS4a7EXZsy4
luW1tdQsbnFk/G3nKLYZ5Af6TW4PCJPnjk1iOy41i/FlOVU0tVJmeRVV8v7X
sTyCbwfcBcAeiJsC16IuAvyFrfpm4eeUc370iMm/dynJYvM5Au7EhbVAf6/y
qkrSGZTao0Gph0StgqJ7VBw5DL4rxl7gsu3rMgovdh/PyUHwjfZ18ns7pX8b
aqdnzV9Ff/j7JzR7vgXjVw/y5z0Me9jF3VfOtqXFOlq33paWLF0lviuLNRvE
dwH+MfgxUAsBfyrkDzgja9vaqJr1ZiPby9DTxv5BiQkCb1UaDJTNcjO/rpEO
oQ8DzuUYCdcZ+K5OjPMp6/nswLaDrL2Q64L9DlmiYrj/Vq4G86H6sAwGveQY
qj1Gkdop+e78n4PHTkhuaSljq7TKairSNFJ9G3oGd5GB10zLmFjT2cWjg+oN
Oiqp17JcK6aAqATa5hVIm3if2Dm6CcZew3sDeAr7Y9XqNWRv70hbHV1pq4sH
efiw/gsIJf+QcAriMxuZmMnYoJAq6zTCwzfQ10H7kL/OYx/v4aEeA+9dpd5X
8r53KfsZ+1qt/R0WfpUusZ+AwxpZB2bl5YtekZwdlneI96uy61LyY6l8dpLn
znK3s6dXelXDXuoU3s0e6bsAXSR92cGpwnofPTaK4GdEL+PqGkrLK6TIHcnC
ww07G+cVPVes1m0m2y1OLDc9BOsuWbpScoX+9Me/0tVXXys95tT6JNhtF5rL
2vxV/ffk3ndTvQ96Fb1N0FO2vL6RdqYV0WqLtTT300XkxNjcOzCS7Ld6iF5w
dvaiW266mfXG1SbbzPzz4CdS+7whnr1+4xaRcTt5H85fZCUcj8lZhdKLsGXS
nJwYGzPhQfSFg3wyrxk73cA+RE8j5AuvYZyLvlGo037r3+vE9wq5M9X7sCeg
q/JYl+3IyKWVlpsk99FcB8M3jb2O63T5+UpfPcWugp/L/G+g73BBTnwxZ96U
96Fi3sVsU0/OjQO3A+onwEFpZespfE/Qq6ebC1yI7bd3GSSHJ4H37nKrTbTV
2ce0F882n8DIvT0sjxjLqZ4G83VAjhF66oJ77LY7nqKVK9fQwgUWFJ2QQctW
rhU5dBl/17/e/5DPINuWPRPvF2sLbve9e/bJ30GuwZ/jsM2bYlKyaM6cpTR/
/nLy9gtljN3AmLuaNIZOis/ImYBdp9rLF6t+CnOGfXj77bfT008/Lfjq888W
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
ktor1l+97VoaZNkt/XJ5oMY9Om4H/ea379KjT/6efvLgy/To46/Sgw8/T+/9
ezbZO7mJLyskIpFHPJ+LKPLyCSbbLc7iu3Ji3Yp4elRSNpU2NJK2t5d0fM60
vX1Ub+igwpoGqtA00f5jxwkrjaFws58QjCt+6n0Hqaujk2qqqqmluUV8c6N7
R07hxrsQtnZzcxPLrDqp1xoeHqI9jDEOHLz46/9lx1R5/9BPe/fvYYw1IDHm
hrp6GYOoRR8DH9ARkW3HTxyXWOFh1Bryq76b105vFP4MbS/js/4Bambcm89n
MZr1xHa2bVx9GUe5+Yo/AbkKodGJFJOQRWGxKRQWHU8BIdH0n08W0Hd/8Dh9
+86f0bdufpJe+PV/6Nvfe4Jef/M90umaxR5AL2f0sepG3gTvyxHey+i/t3e8
D8HB4V46MtorfiypHRzvbaXiqw6jgbQ6LRWWltLQ6B7B6jjfqv/qUvXPqOuj
9mzHPZeWVUjujUarp1bGs3rGuoKrWKaBjwA5OSl5BbQjNVP4+OHT8QuNFVsT
fda9fCPkbLp5+tI2Z3fx1/znX/+htZYb6Isv5rNsvYKWLVtJn3+2VPjuz7VX
Mc4h9NHZ8o0u1AB2aNSA72iMuoZHSNvVJ31LkwsqhTcoIDyW7r//QekzA3//
VM+EniPQrd38+/C0AorJKJQ6eeCq8+G1V3m84SMcGJjYtwbz9uorr/NZiKAM
xlXohTxwmt425gP6P6+mZkpfmratnbYgPuoXLtg6vbDkFJz8+OOPCxfhBx98
QN/5zu3C2Wm+dmqtfmRkNN155/cFm5r7/DAfqLmLS82R3D7EYovrGiVn6BS5
AyxTWzUhv/t0z4U9hzlIyi00xWvN10rFiPg59tsulltf9fxC3iHvBD3XwBWC
mkHgOeSanS4eCVwJLlfMRwzjMvAG5VY3Cwd2ZvV4zQZjv4tVC4fvhP8B8d1z
OYtq/fhncxfQyhVr6LrrrqPg4CAKZFz+6aw5dAXvWQsLC3JwcCPP7QGCq/yD
40SegKMhKDqBQuNSeS6yBeujHhV9X0p4DSsbNdTUilo5g/gka3iOajWNco/S
L51tx9Nx214KQ+2LA1tscHCYjrPi6+jsFT5U1H/CP9fL2GhovH8Z8JLKAY14
CvSS5POPDoq+go8LeqyHbeL+LoPUQEC/tbZq6Q9vfUg33/EQ/ey5d+iGG5+i
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
3FDEVlCbgZmjQ8PD/jwB+k2x/++WLvtrXSUGi8y6stZ7pHcQ/coubzM5edkb
m8hYV0+GWjdVoE6afbz+kVGCFMNDGBkZ9tcaYz4s+g4U/+OH8ar3fkHPwv6e
i8UQFWNmicyFc5KZnxtq02F/UcNaxs9Hb9Liw6iX0lvslJFXxDoinW674xv0
d3f9P/oq+0kHj8TTkcgY+pcf/IpuwVn+6Jfpbz/9Lfr0Pd+XGSbAV8gX/vTx
52jf0WTGYtmUV6HxXaEfBvMgsgqK6ERqBkWwfwxbj/kl4BgKjUmkg8fjRc+E
8wKmAqdjFOug8Cj+Pf7dmNQ8OhTF/5+QLjisvrGZpjFGKCst1mb+sH8KXQwb
Cj8rkN9yMvhG7dfevXvFF125cqXIKt4XcZ7AfKv6POhX7ftR4X7DgpzD/iJ2
C32EuAJwH84Arknhr4t5tsDOsF94VZtrZK5vt4/HGTVy4M4Hryt6r62oh7UY
KCc/j/c0hfaHadze4Nrcsz+Uli5dyfe4xp/T+NWvHqdXXp4t7z0RhyfWVHJj
whPEe2Sqa9R4m+qctJhx+5q1m6R2POZENvX3tGozwzGDiXFWfX2t7OvF7BP+
5v+z9x3gdV1V1olLnEISSCHAP5AQOgwDBGaGFjIMnQmQYWAgEAgpJE6c2HHv
RbZ67703q1ldsrpky7Ilq/dm9eIi9xrX9e+1r44QHjtWXAjfjB7f4cm28t69
9+yz99ptbWMDGDdnHIp443rsAvfr/IWLGpc3f3e9/jufWX5+vpVvJ//u/hGc
GBvC6N5BxbzefkFwdvNW3tBGkRVyifHMToWX4vJrvtq/Wdd9GmvX2OhcxTvu
mIVHHvmw1jCGhIQhOCQCIeHxiBCcp7IiOCtV8EBdQy0amhutWS2sQxMZI58w
8TBjeszDUhY555Tngvj7enjozN7xzBjeTp4h2hB+rokj6xkkp/VFiztgV+Vu
bC+v0Pnak19z5sxRPhfeN2XAmvs9Q7+LOpJn8Wrz2a+kV3ldRgeY3AB5RGbP
moFHPvwRZBWUaRyK3B4RCRmI3LwFgSGR2JyUofz6jGNt5gyj1BzRZVmqA6n/
+B7HmXPyO1sycxUHEWMVV+zCttpa7T3MKt4Be49wbHAMwWe//CPFVu9/5Gv4
whO/0FjWRz7+LTz80a/hG0/9AsFyvsnl/9kvfh8f/oencO8H/gWvLVinMdKq
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
/J0P535vsIOHlz98AkOwePl6LF3pgMS0Uo2DldWJT1jXrDnCXQ31qvOp/5v3
dKFH7HtiagaqGhowdvSExktMrIT4k34gz5LhdJte17/IfbK9ukFktg0NgrFY
Y9U1wvqrfYqzOgZG0Nw9IH4y+R+bMXzgME6eJd69AEJeiuv581Z+hH45bT3X
3nEeLGLgaYx165bhLGTtArGE5qu4J7TjYqe7+vu0DqtD7H7znk5UNtYJpq5S
/FVe3ai8PzmCwQp31IofFK8zfV29/LRGZM0aG3h4+MHVIxAr1jjixVeXY/k6
d9jYu8HGyQdr7TyVNzuzeBu2ymewD5m1nYnj+Iq6hbUB1CvMV3ExF0HdQp0T
u1nwVUwitqRmib2fozEW9ugsWLBA9danP/0ZPPTQQ/LzbKxdbQ9fv2D4BYXC
1c0Lb725BMuWrFScRF1J2ZssZ4YHx+jKs+fOw9vHD8eOn9TYDZ/TzNtvw4yZ
szHzjjuVf9PwcVJfs36BPIHsWye2ok6vbeuY6F8nzqoTP5sz6rq6ezU+ceDA
oMYs9g5147jYoWOyWIMzNGT1SbOmtLq+AefPWd/P674SzybP1ABxWn+H2jKu
t4/u1fzMIbFr9bV14s934YEP/7P2FLE2zskrRnRypvZnhsWmwNbRC0uXb4Kj
sz82OXhjxeqNsLN3kec8GzPkeZpaMyv2cP08Ysz1WLgV8BOf2y0gCg7ugVhl
4yJ2IAhhMcnqTxfJM90l18xecs6qZL5zaGRA+X+4R1P9PsbHD8se0q4PDHbp
dzNP3NLWqDbi3XzW5YvYanB4COcunJuouR8cEj+/evdE3e9UP0s5KRsaBeP0
65ydIZEJcg1VNHVonJfxCsaObGzdYevip8+MudyQ+Ey1dsZvuN57MfVDtPc9
Pb34t3/7d937tettsW6ji37nJjsv+bO1T+niI+WX7YKDVwie/tVrWu/DWgBy
4u/p69U+TcrhqcOjmqOmLB6QeyNPMWWJz26yLJv6SOPXNIvdbmhpkd+3+MnJ
B3P00OhE7pGzufiZzKlyDsSenj40tVsxNPVnxv0axq8YT2avY37FbsES1Zpb
Y95w9qyZgnXuUu7UO+6+T3lyn/z2tyawwyZbR+Ww19lu8n9Xw4TE13xRn8x/
bQFs5Jl5ePjCw90H9nZu+PWvfoff/vZ3ilm/9E9fVV1FP2XDhg2qQ2pqG7Wv
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
Jt05jqcYR+ZirxvPJPk6yfNG3ZWSla85tqBIwTIxCQhLSEVyWqbWVc4Qf4n/
npiaCS/vAI17l5Vs/6vc8uX61PCi8LmfOnVmPL84PnMX7GV8+6/m5BhuOQtf
WTpsZHQvfANDEBwWq7WQxFZGD3r7R+jfcYVFJ6g8MH/IuveC8t3Kl5UpuHFz
RgFcxGdZumwjXvrTPLz68pvaFzF//jLBeYuxZq0t1q7bpHo0LbcUEXLOiJPT
xFck901afqHymGYWlArO36PzWfYdPoj9sid8thcm9UhzngBtyOQ+oem4yI2v
tKIK8dOJr1pQSd9cfMO6/j40EV8JnmW+sKVvUDEWZ6G29g2JzmhHQ3sXjpw8
I/jqklWzOM43euQI+e+6VXZp9wzXqNmr6T27uWvyc+X5YNyQ8W3lEhC8+/aF
8+gfFtss56pvZEj7F7ZV1iIleyuSMnOUhzIhI1f0UhICIjifrERzdm6efuob
LVm6Wny3VViyZB1WrhC/9g9z5ecNcHYLVn93i+C0LPEfea43p+Zic3K21rNH
xCarLuGirvbwCdV3L78w+IdEISg0BuFR8cjIzFX7zFmDK1aswAc/+JDWXc2e
PWuCTyA9PdXisp30Yo7P1FZdjXeKut/48Zy/tkHsl29AsOi0OLEl9lrXNWvm
DDz73PP42te/hTvm3I0GsYepci8pgsFYD6G6rpB8qPSTy5UfiFwxxFecs8jZ
i/39Vs6LMxyJgw6LnVi5zgtZuUU4NjY8jrOG1b5YOb5BjWNZMar/Gb/i0tiS
/K9DztLo6IDOwBjkPG7BctX1TfjIo9/EN5/8hdavr5f7mj9/BdzlWbNew9Er
UuviXH2j4B+ZpHOBWdsTl1U00a9FG3Ijfiqfq5kZwvPPdz7jZ575udxTHwIC
I+El+I92hbaDven0y5nfMflV1gfRD5vK9zE+wtjPIcGrJw+PahyP3AGH9w3o
/EzGOxo629G3b69gpYvvKpdHLJtXUoS2vl7lLuFcA87l5Hfsk/0kDiBm5rNv
lusnJp3qNWduLZjIbRGbM75ArhLW4DCm4RMYrnnv7zz5JB555BG88ufX9VlS
b5Lvjc/4RvxTM4vY4j27iM1525GQU6IyERiXrjOvPIJi4OwbCWfvMDg4eaj9
Xr/BFm7e/rj3/V/Ff/76ZeXgZz0geVIZ22M+nJ71O/WfEt8xvnXs2BF9fhqD
lcUcI2ODPZ1tePAjX4OrT7ScG8Z3+3WWy4jIOt85y5QzXMycraziUuUoJlcn
a9cYL2dejZxTOfJ3im/kPFv+2gzMvv02wfz3w80tQHN7mzY6YNXKdTj7ttW3
aGZATLZJkzlZqUsPHBjTvTCzHbinvCeLt/02jVsx7zp37lw4OzvLWbSRP98p
/lMvgkIi4OMfpnvMXk3mgxk/dPMK1p+pE8OiElQWErfkIjQmWfRvkeqcrO0V
iE7LgVdADFatccJr9GlXb8Im8Zuojxm7WiPnnno6MCQaUYKt/Jh3jEvRsxaX
moX4VPZf56GqoQ1t3b2Cqw6rPtl/6KDOqb2kWNGKofNZTI4jT9vpm7PSiytQ
sKseOxrbUdnRjZreHtQP9Am2GhBsJZiKq38Q7YOjupr2DKC2rRs9I+Kfn7ug
PA0XJ3psL+L826fR29MtOqhF5dPMGpnMhzW9dzdnXak2k+efOo/zN0z/wYjY
nFrx7Xm2+sWmNbaJrq+uR9rWQsFIGcqBFyJ4KDA6GW7iU/sHR2pN9CZ7F9g7
uauPtMnOBXZO3uIzOWL5SntscvAROyH4jP6R4A/6Xqzh8A2MUozlHxwNB2cv
9c/tnLzg4OKrusXDN9CyKQHh8JN3H98gvPnGQvzu2T/C0cHST0uWLMXSpUvx
m9/8ZoLDhi/yfRK3Mx9IDEl9dzWMYPxQM//47bfP6WevXbsB9nIvL704V3lL
WZs6uS529h13qK+bqDyAFl+XcnWxHzK3WDBXkfYINjbVoqm1CW2ilzjrnvVV
/WJ79guOYv32H19dhwc+9g3BIayfGsXZIyN/sS9HLU5Mxt6ulm8iPiBGPi9Y
YU9fp362Nae1C9UNTVhn54Nf/26B+r5ePoFwdPEWXRwueLccIZuzEC3XnL2t
avx8NyC3vAaHjp7SHMDNmN3IxVoAnnv663OUB3YGXn7xVcyWZ8n8ckR0vNaf
MHfBZ8i4g5nBUtXYrHWCR6eQbzMYgXlF03f48MeexKtzF+OM/Mx8XtyWDFQ3
tymP0NHjx6bM2W14JeiDbC3djvq2PVi6xk5rpo7J+uHTL+NfnnpOv5Mcm7vr
6sfl6dqf3dXRqefP6pHvUExOjMnaZT6TKDlzkfKM/P19sXDBInz2058T3+JO
kflZ2Lhxo9r1m7FPhiePGCunaCeyyqqwra4dSXJeE8iDWVQu72WaV/MOioKX
bwjiEjOQU7BdfLAirUXkfHedYyerr68HLW3N6r8xx3Y1rkNLPijnVjyX/gVz
gaflLBzaP6q+1mOffxpR8Un6vPfKIv9xd/8eOVddOo+vvb0VNXXVSM8hV2eh
8qBSlsihZ3FKZSNBcMSJty+oL8Yac/Zu8Dz/5jfP4vnnX8CC+YuxePFSODm5
iF44r4v1UtfC4Hxu/B3mCqlXqXN4doh5n3rqKdUX1DOvvPKKYJ+16r9ttLGH
j3cA3AXPeXkFwdXDX3Wdp1+Q4lXqQcYqN2xyxup1dnD3CtQaCubzibGCIhPU
V92ytVjfWTvJHlzWyXn4Cwb2DISdo5vqZT3zsleuXgFw8Q6GZ3AMQuK2ICIx
XfBzJnKLy5VjdHBI8LDYgCMnjov81k7YBuLjk6etfsnLZ9pNr5uzMkt3oXh3
k+CrTlSKbmF+sLF3j84kbO3vRYus9sFhdO3dh45hsdOdPdhW3aC5EvbGtouv
+vb5C+N9GSx4P499oquaG+tVx9FHpYwy7jiNsW7t4vOlPqZe6xvonzhDrP89
dUaw1+FDWv8yNrYP/UN9un+spySGCIpNgX9kouCrMNi6+MDG3hUuohs8fYLl
PLvD3tUHHoKdnL1CsW6jO1audtTYBLmLOV8jMGIzwsUPY+ybNTge4p+tWe+I
xcvWYeWaTapTvMSHo57xEExF/OYhusXNzQfe3r6IjopT3cQepzfeeAseHh74
whe+oDqML8qP4TI0mIoydK0eF2IwE8MyMX7GwliLSr7Fl1+aq3qZOMzGxga3
z5iJkIhY7W2MGueuUU7A1Bxd9JfJgVXf1ICmjnbxravErjep7WTudY/4JSOj
g9ixuxbP/uFNzQfSphw/YvnvRw6M6lwYxue5P1fqeaOOoz95Qc5Sa3uTzgbu
7OY8HGvORX1rG+rbu7G9oVGxsaP4w65+odo/yHmhHQND6BjqRX1PPyqa2hAW
n459Bw+LfLy7+YHXWrzObrkuxkU4D5p7NTQ4on697SZHxcYxcUlaV0I541xb
01vPZ3j27bNT0gO04UeOn8TAUP94fdtezVd1iB/35Pf/iHTBvB/+h69qPQ7z
voeOHESP+OtTvQ9uxPD+EY2HFFbU4Imv/QQ2Lv744j//HHvE12SPAvO+3LeW
ccw0lbib5vfkl0vlupgf3FZdi9xtFZqvYr0N6w7vuusuuLp44o5Zs/Hf//0s
7r//XqxZvUHl9d3E4KayrNjLefWJA2K3iL7vRKvodtYNdMh7s/gJlCGf0BgE
y78z/1bR1GLVmMv50N4+wT+d3Zxh2qX1ZBfl0642349zZfisGONljpt57eNH
9uk6KliLmK+stAI9/Z2CqfrRKvJa1dyJnfXNmhOs6+zWGqzyykrlPGB8nLE/
wydFjEpez4jYRJw+a/G7+Pv7K5fdt775HRwcO2rNZ8C5ifOP8b2jXXo38VtT
T0Z8xRf5Yw0PBOej/sdPf4F7771ffTbOKIyLi4eLi4/iK+o69vOyJ5uYaNVa
W627W7J8g/igPtqLwpiWxvvFL02SM62c+kkZ2GDrgfXiS2109pMzHg5HrZ/z
gJ/4wMRVq2ycsMlZcFaw4OKQGNnXFPUF0+V5lVZVYk9/N44cO6h9G8cEXxnO
QNoF4mP6eOxRme5Du/mLz5OzTZgfLKluRoVgrJr2HpHrTjRyVoSct1ax050i
i1379qN9ZBRV7V3KgZbGGs2MLNS2tOOU+APkPqa+pe06fngMHS1NaJLzRVk2
Mwkvr3Wf3s+bu0zMhs+az514hDPrqFb4zvPV29eLE8ePYHRsVPBAMwp27pS9
LEFsRj58xHfyEh+IZ3WdvWAqNz/4hURpbNvW1V/5EJ0EX21yCdTck29wvHIR
M85Dv4v6wcS/N9q5qw55a/EaLF+1Sfw1V63JCQyLgo9gMBfRMw6OrlrLPTkX
yFwheQLZ72xxGVjzPZhrNrW+U5Ub8zxMTSAXZZEy+vvfP6vf+Q//7zHtGfz1
r3+Nxx57TK7lDsTEsscx1eqrTszQ2Bx5Aflzcno2irdXCH6q1nlh7AcjXtjk
EYW0Qs49SULpzgbUtwiOFZxF3m7NZXGJfWHtCvMru+tqJvIrV+KWUA4s1md1
tKGjq13nk9UJjiP3MvnLdtTUIr+8QvRwOqLE7pTWNaJjdK+c23407elF/q7d
SMnfhuKdtcp93SWfwd7Jmy1zzM+6unhh6ZJVePTRx9TGLVy4EKtWrdI4Avd0
W3kVcoq2y/VWYltNg9YmM6fY3X1tjEKdQTmokvvjnFrGB4cFO7YKrluyxlu5
rYPisuAnuD0pPQ+Bsk/sO2tqmDpPJx/04IFD8ItIQGRMMhyd3JXDkbNIUvO2
o0twLeMrrLsmd0BNQ7PK5LV8ff4793d4ZK9iq+LdDcgp3YEMwYPsjeUzIgZd
uHCxPrc5c2bDZoMtFsxfovMB3u1c6amsQ4ePolnk6MzbF3R+y7Yakam2DjTv
6dP6j4a+QRSLjCXLNTLHxH2rqKtWbkruAXnAOXOFc4hOv33mrzg7J+8ZfWvt
nRgZ1lwiZf7AyIDyuDGONTYsNl32sk/0ka1LqOiVWCxf74uf/vpVbHILRPa2
ndjR1K6z48lvzjwr+TgN14HpQVaOl5hE7Nt/WM+x4aEyvcBWraFVF0wuLFPD
Tb9sqrEao29MXZapC+dnrF+//q++z/r+GcrzTh3s7OyOoKAo+AVGaPyKPSbk
xSC24lpK/gfXQDi7Byhfna/gq5DoJOVfDo5OhWfAZngGxsHBI0Rn4bgIxnIm
d5l/OLwCI7He0UP83gidtxSzJRephdu0V2lnk+gL8ct6h/tx8tQJHNi/F6P7
9k7kNHj+qGPNjKHpmvabu4zM0K4SY+VuZ/2g6O26NlQ2k5OyU/T0HrQN9qNb
znn3fgtf1Xb3YFt9k864qxJsdeDESfUOzl38S47w4vlzGJPfbW1sQktTM3pF
Jk0uZBon/232lnERxn0trkrLX2HOnTMjDxzYhwPEwAO9qOvqwE7ZJ57J5Pwy
xKZuRajoL++QWPVjQwQv+Mq7d2ic+Edxcpaj4REQC9+QZLj4iM8UFKP10w6i
HxjjXr3eEWttXLBilb2uVWvsVZ9Qrzi6ecHZzVf7pMjZxzod8lvdc/ddmHH7
bcrZZ3pwuLZu3Toxn4Z1uoy9XG/82vCMUsfyefzkJz9R3ctleE35zngC8VXs
OL5ibQRrkdnrQ86u5LQcZBWWCFbYqbPus4p3Cr4swWOf+S6+/b3ndQ7rPR94
Al/61x+jr3eP+OmD2Du4R/Bhj/ZPcbYx7XRPH2vi94M7w5rFy20Ur5V2mdiI
urBCcGiX2Ab2l3BGKHlsapo5g7cT7YODaO7uRffgiPac8Dye0f4Gy19nPPNm
z0Y0cmb1ZwKjgu0Yx+Je8RkyhsXeBGKsqMQ0zJSf65rakJVXqL9D+zsVPaCz
UzosfdQoOIAYi9xftYJtP/7Z7yoGenEeawRXwMnVB0nZxeovHD58aMr3QJ3F
WB9l3MnVC4sXrcKTP/2DzjT/5r//t8Z8rRqvLmuetnw39dhA3zvPFpp8FmnX
OXe3obkdt90+W30Wyvqzv/2Dvn/729+e6Ic1sZZbYfNMP4zOteSdXzD1jBcs
rh36MvsPakyLHApdg8Po3TusHHqcBcE54hnZOeN13pcmuMImfwfl7fzFc9jL
GGNXq8anRkTuRwUXD8rece4A693PHB9DgeDNr33rWeWBINfIhx79Fj79T98X
3ZOMrdvIZ16pGE97UpItbEVuA+U3iCX3QarmoTn3mXWbps6cNVHM/VP+TI8A
bdD12h7D98L7JS6hXuKfqadUZ90+Q7lbH3j/B3D/vfdpXeejH/sYIsJFP4qf
6ujiCwdXT8FQvrCxdcO6Da6a81u+0k55VBYuXYdl4oeutXFVrg76shtd/ES3
xlr6Nlz0cHiC4qhg0UWMW1NXRyZlISGzEEk5hcitqERxdZ32WbaKbHYND6Fn
aABjnNE5rgvMHEXGrFhncTmvzfS6uSuE3HKc5U2MVVaFgh21KK1qREVDq9he
8QN7e9A+PIxOwVj0jzv37sdu0TGltQ3oGtmP4+cv4KTImsFYFy5YSZgLZ8/h
oPxuCzEWeU9kP5mrMVh5ek9vzTI2lPaafhpzK6w1MDNcoLO8LqBb/EbW8/Yf
GBN7vR817d2o6tqDIvGzs8rKBTdUICW3FJlFFcotHZPOuocCwV6Z8AiKg6tf
LNbZe8NesBL7/9dtdMPi5Rvx1qJ1mL9wrfaxUX+wT99Wfo9xcPZJMT5ub++u
MQLOt+e81Ce+/ATmvTYPz/3uDxjoH8DHP/7JiZooU49NP4sydD2ctaaG1fTL
8UU+Uc7QWLdundbVOzg44vnnn7dyDAFBCAqN1r7qyZw1ysOYlK6zw8iPn1lc
joCoFKx3CMb7H/mqcgbRJr9P8NVnvvQjNLVbcQ/mRjgnsKe3Q/uiONOYHN2d
3W3KsUjsy7Nx+T7yXnnfOotN9o1zj5jTZa7mgOCHfWOsPzuhWIr7OtTfpzE6
nrcu+e5u2XvylN7Kmgoz762lpUljjJN5lz7wgQfwzH/+FxKzCtW39/Lywr1i
ey6NzzS61nWxjoov9pCxJn5XU4vGUThDkzrIOzRB/PkYvPrqIqy3cYaTTwiq
O3p0pqrJKV/r+hkjoulp6RtCkeg9yrP2Yi5YJfYtGFu2limmaGhu0Nm45Odg
vTpnl/M/nIosmtmVfCaxsbEao40Xmzh75iw8++zvZQ+PqV5kjIV5q9HR4Sld
+43sK/9b9vbpdw5auTrKWnN9ncoanwnrdpgL3HdwTP7uIsaOv42Ozp4J7ijm
L6/Gz6nPtK0ZXT1t+hl94/LPxZ4BxnHJKZol2On+h62ZxZxvytmmT3zzP7HB
KVhr8FPzSqzZ7+LXMFbFnjueRZ5Jqw85Xs5qFA4dPqZ15ayx2rBhIxYuXKTP
kljfzA8lvrre58b9oGyb2VrsX/7ud7+re/qjH/0Y585eREnRNrz4pz/jzXnz
cdedd4u/OEN08BHYO7iKX+kPb8HUDoLfyUnHtdHWU+TWTXlUFi3dgPlvrRGM
ZYf19p7a07nB0QebXEPg7BMNn7BERKTkaD8aa3oKK+pQtLMepbsbsK22DrvE
X6kTH6FteJ81c6VvELvrG7Q+dHzszQTGIkbkHk3Gm9N1VzdvmWfJs+DHupmE
NMXDqXllOluXNrVgRw3K65rE7nagUc5ey8AgWuQcNoofUyO+8vbGFs3fk7Oh
e3QfDhw/hbPj3JYY38sL587j0P4DGsOiXWMshbmQyzHW9N7e3L01PiqfsfLP
jHNSnzl52prVwv4x2ZshOV9D+8a0t6SkRs6inMvmwRE0yT419exRW1LV0o3y
hg4915wn5xuZAgfvCNi5h8FG/CvGrMk1unSNveqGpStssWK9k+oILnsnX+X3
cfH0V//N1SMAtraugrEc8bnPfk5szB144/UFeH3um3jx+Vdw6jh94bN4/PGP
i294G1iXfnE8Nsr765Hrerd+/eTYDeVw8uzmzMxMnXW8ft0mOAvmY21qSGgk
/IMiECAYy/RU853886ybSUq3euHyynchMDoFLuJj/tO//FxnwHz8s/+Oex/6
Iv74yhJsLanCd374K52fw3q47h4r/sJ8X8ce8Vs6WzGyd1T3g1j4SvzzvFfG
iKy5Ipf+wkOv3YWXxrkdLb5lE0fQvOjbN17nyM/kdb3bZ83rWLZshfZqfvLT
n8NtM2ZrfJAYy3Dn856uJcdDYt9LBOvXjfO6sjaevZtVNbtRXrUbGYVlysXI
Gu31mzyUH72gogbdI6PoI39f27Vr3Ntb21SXMSYYm14Er6B42Dv7io+xE/k7
dqKgvFLnOlburlJ+BcYGyCPOuSMnT51RXt9rPQ/2vhvufhNfeXXua7jrnvsF
c4YgLS1jyvX4k58PbSQxxPXu75Vkg39HzFVXU686Q2PG58+N59Uv4bzojXfq
j7BiY70a22pqadb8NvsSWLtFDg32geyqrkFASCT+8Ss/Rlp2IZ783i8xb4UT
/vDnNcobv3KjL9wDY5FWUDrBv8A+Dp498p+bnmTyW1i9MmEaD2cdG8/wn55/
GT/72c81f2fOOvUg7+F6Y4JDQwPaq2JexFMf+chHdC+JvcLDovHSn17F/HmL
sHDBEtxz1306j+jIkaNYvWYDbO3cYOfoobz5Tq7+GqOycfRWntd1dh5YttZB
fdTl4peu3OCq3KLsAXYS/WrvHQkvwVcx6YWqh7fXt6JBdHRzbxc6hge1dqd5
YFhrBFgXcIZ6AtaMFYYnzdzmwwcOo6mxSXHi5Nnl5n065nHjazK2olz4hMQg
MHKz1gtqX2dani7GLnLLKlFSVYcdDU2okvPf2NePBsFXLUOjirGYJ8zeXoGU
rYUYEf/h/Hj9MGPOBi9fEJxP3dJQb+V6rZ7X/xnHmsZYN74mP8vJ+8znz9hP
o5y/w+JPUeOcu3DJwGA9h0VyLqs7urGzpR2tQ8OaE2ZvQ+NAHyo7upBXUY3U
gh3am+YaGK9nnjw6rqIH1pEHWuwb+S3X2Lhi9UZX2IkOoe7g0p9Fl7h5BWkc
y2ajIxYsWIR//MLnMfP2Gfjk45/CW/MXq256TXAW61GeeOIrGktatWoNFi1a
ov4iX/39vZrffLfPhjaDeqVc7LGpnWA//F/qvm4Tffn/EB4eAXd3q+fHyz9E
a8lYU8a6ffZG0oeOZQwrLVu5GqKSMrHG1l1sggt++uu58I1g7L5E54J96Ykf
4/4Hv25xa4qf0t5t1ac3dVgz7ZvbLI4r2tar9eCbfaQ+5LkhPmFMn37Krcy3
mzgUX7ThV5qHe6Vl5smwl4q8ouRv+cxnPqO4kH2GJnY1Fc4rokjO1mZtuPJ2
1zSK71eKJPZXZeYq51Hk5lSt/SOfE7njN2cXoEv8vZjUnGvGgPjseIusj2gS
vcaabxefcJ3Dm5ZborPm2PvPmrvN6VuRzfnHosdYo8+VmZsv52nsms+Se8ta
bz47yhnjpHwOYZGxiBe9+5bYY17HVM62+Xmyn0DccLP33+gQ7iefk+krIa66
FkahXGpcUK6vorERzeLf1bU0qey3dXVhd30znn1+Id7/wDeweMUGwVoxCIpK
waqNHnjuz8tgY+euOCOvtFK5Q1n/qPNLY5OU04B1So6uflrPxH5k9uDxzPK5
mjy/8jOM81IZX4o5Wvqa78Zn4DPg/XDutuHVZ7/zsqWr8Mwz/6l5yJiYGMx9
9XW88dpbmC//xjzhXXPu1HqHsrIybNhgp/09zBHaO/vBxsFLdSJjVOT/Nb7o
Rkdf2Ikvumaju3JlsB7D2T8aLgFxCEsUOczbJv5DNXaJT1Ar/kn74ID2njGv
RFvc3DuIvcctLreLypt0cSIWOTZ2SGOU1CGmDnra9t68NdmHN9w3fM6eARHa
sxAUlYCw+C3Kn8Ecb0Rips7xzigsV36jkppasbMdgqvE7x7dPxHrqOrYg+LK
Guw9fBTnL1pzMix5vjQ+N8fK7TNOSu4Yg7FoH8xZnbzP0xj6xtdkfGXiCcSz
tJPKb9DZLTrjxPjwSKuOgvndw6fPIDW/EJWCsdgr2jowKHs8JO9DyqFcXtOs
/f+RW/LhEbJZY1mMW9u5Bera5OSnnNCbxP+3dwuAq0+YxWEoGMvGzlPrs2xs
XbUvedny1SgszFcOqjl3iD68bSY+/ujj+NnT/6k91qzfYf0EewqXLF4BO1vH
8foU1kVfvSf8cpnn+8FD+7XPTfNsmsO+qPnBWbNED951Dz740MNyHTNVHz7+
8cfg5ualM5H9gsK1f9L0UrMXiDEs1mJl5JXpnJPk7GK8uWAN5r6yAK+9sQKO
zuS9t9eZq5/8zNfxhS//GCU7qzXewbxelfiPu2tr0C44Mb2gaCL3OVWOo8tn
AN0K+aH9oV1lXpm2ytRwMTdCfPtOfW2GS2G+2JoVK9fpz8xD8D5p8wwn7LWu
weA0xozI2V22u0b5HdgbxTnhrG+mzeVeEAMvWLRW5CwAoaK3yhvaBPdmTcz2
fadFu0tusG11LfCJTFT7tmjJBmxy8FTueeaftI46JUs5eMk1y2sh5ktI2aJ6
7Fp9fgYPkXPhueee030j7z37t9avs0WYyNnl+eHL/3vTJ8TPMdiKz5PXT/78
W4Gx3kn23mkZ3nZeY3HlbnSJvq+ss3oyiLWqGtuwvaYaP3r6RSxavg7evkHK
Z7x8+XrlNiWXpq3okqStxco7l1e6S88duYmXrWRd+Dqs3+ik/Xj+rB33D1V/
iTVPX/jc5/H7Z59T//7119/QM75lS6r8+8Xxs39OOR+OHj0yJXvDfzd7zGdd
Xl6hMzxXrVyPNWvWaYzdqhkVHXb7LNUht4/XNvzwhz/A6jXrdRY9ewZZh2pj
56EYi9iKfAuMY1FXUmc6ewp29AqDrWuQ6tUY0bP+tMXpecq1UtnUjrZ+q9ez
c3jU6kfo7kNTdz+a5Z1cDFasSpU6jowd1D4P+m88v8SJRm9OthHT68aXeZ5m
bin1IJ83cyDsQ/AVH8IvLFZ7xzz453DmDTOU2zopR3BW8XYUil4p45zz7l7t
M2kZ3oda2dddTa1o6+nDiTPntI+QmFmXiY9QrkU2WYPY0dFlzfmS/aYen8zb
ML3nt3bfDZ8L/TieOZ69g6NWP93Zs/L7sneHT51BTWuX8snWd3LW+qjOouSc
7+aefrFdzUgTOxcj/nyI2DjWY7n5RcPdLwau3hGKp7hYk8W6d2IsR/cgwVZe
WGvjrHPwVq62UX48W1t7LFiwcCJ3ZMWR2Ed1p/IgK6+M6KZlS1crb8OZM2dV
Z/PaKb9T0Y2U8Y6ONpg5Hqmp6Tpnh9/1wgt/wgXRR7sqqvDnl+biJz/6qcbT
MjOytSbV2d1XObxWrbXXXkj2RBIj0q6zxydTzsRmOR9r17viT394FQvmL9e5
YMwHsHea88C2ij2ubOJc7RadrV0jPkbHwKjO++TMNDOf5u/Fr2DtlslBck8M
L5ipuWbPH198rle7ZuIwaw7mpYl5gGZOEWXwWljS4DFeR8bWAmt+U0UlMgpK
Eb0lS+NLrL9hjmj5KhuRJwfF9ZS5kLg08eU7xI73Kg65lj4ZO7gPm9PyUFLd
ovXDtHUbHLx0tg9tOOOWrPchFwB5TMhZwGvhPNak1IyJfNG1eC9MbwZzbjyD
fHbE1WZu69U4DrisWCIQE715IvZq+kDM3phexfdafozOYd6U95Yu+7e7tVPr
O5vEL+KcYc7/qJDzUCDyz5kR7u5+4m+t0R4FGxsXraezE3xFrqsUsT3+YdZe
s8eO53DxsvV6Fp3cveHkKufU2VPnOLPeaYFgH8aRgvzDBP+s1efzyU9+CmvX
2MDH2398ty6JDeqYEt8T94l1hZRbvshRyngjddLqVWuVY8vqG5yFu++6bzz/
OwOBgcHYtMlO/cM1azdaem+Nnc5+5Hwi4irqRuIsdz9Lb/oExcEnJAHewZs1
lpqYWyJ6NhdZnK8o+LRR5GCP4KruoRH07R8TTNWvcyU4w3n/4WMTc1TePnlM
6+ha5RkbeTN21uzPey0j/5vW5Jocw5HERZ+HXNrswSevnLtfGBw8A2An8u7i
G6IYK2xzuvZ9bs7MV4xVVF2HyvYuVO/pRdPgiNaFcgZ018AwWrt6sEfeDx4V
3Uu+4PHck/YWjsdoDx48jK6uPRN112ZG4TTGuvUywHdT02PiE21ig7ra23Dx
/FnZnws676i+Rfyd/QexvapWayWJr3pGR7VGhXVZ2+obkFa0XfkIWftOHysw
eovohXj4BMfqbDPqDOoQxsGJrTbYumOd4Cv6cdQ3nP1uw7i56Kt18ucv/uOX
cM/d9+GuO+/Dgw9+CM/9/gUsX0YdtgHP//EV5bXu2dOvdsbUf0xFNzJmx9+l
7Dk7u6lutLGxG+cReAvzXp+vMzPenPcWnv7pL8QHnYns7K1wcvLS2BVnp27Y
6I4165y1H5LcXtT1tPHRYnM32XsqH5irV7DON7GR+3F29RLbm4v4VLHHcmbK
qmtRVlmt8+v79+/Dtp1V4o8M4ZxyHZ59R9v6t1o8f5QHvv4y62OWXh+xKGN/
K1es01o1aw+uXndk5tlcHteZaoyO+IwcQszvZGTm6Lxtzisip35MUjpiE9O1
tpk8anaOnnAQW0xsRWwUkZgl+KdO+yhZq/dOMmLVMLUhObMI6cU7tZaONk9z
2g4+cPcOlO8IRkhEks6II7cWa60zC8s0xzUwODQxK/Bqs4Ivfy6X/91U5ocd
P34Unp7emP/mYuUfJ2/bv/7rv+KO2XerLacsh4aGqowzL3fixM3n4Xi3i+fu
/FlrTva2yt1oaLNmC3O2PGficR58Sk4hgiKTdEbfRjtn2Ng6wdnDX7HGBntf
wdDxGjdkjoV+zbIVm/QMci4195z4yp1c6B6+KCwsVN/od7/9vWKsN19fKL5C
m8bBv/71ryunGOcLFBaWahyLPs1Uzh33xnA4Uu7JVfrnl+fh9bmLNYb1+msL
8Ma8hfjuv/1QOZKpp0z+0MXZQ7+XemGdjaPG7hkX5axJ1lBQzhRXic70DIiC
D2cUxqYjLEl8iNStyCjZieS8EsH+DWgbEF93eABDhw5qfWG92NDKxma1secu
WTEMYqvz597Ws9mlvS0Hp+fT3eI1GVsZrhLGOxm/pU/pE2DVCHr4cg5sAGxE
X61zcIet2BV3kWtyTpJrLio5G4nZhUgv2YF8sRWl9U2oautCXUcPuof3om/f
AXT2D2m9dJ/8uXdoGHsPHcJp4izWRV6wMBZzM8OCyxoEj3d1dqlvYHL85hqn
MdatX6b+ztQlGS7uc+esuQk8tz1796Oha4/mB8kB0D0yJKsfdV1W/2haUbmc
/zKEi2yEJGQgICpZdQTfPVmbKb4Z4wqMh3MeBHtoNtq5Kh98VWUtvvfvP8KH
HvkHvPrKPMx99Q3VSX9++TW14fT7qL+WL1sn/7ZAdRbtBuNQjIlMRWfwd3hv
fDE/Td1InqY1azYoxxYxxPvedz8e/MBDmD1rtuYpyT3OWa6bNrlovz/r8tnr
Q4y1cq2j9kYuX21v+Z9+4Tq3zc4tyOIGkzPjKedog50LnL2CEBafqhxC7Psr
2rFLe97r21rHY0EWv9Gt4Dh6t2vf/v3KnW3qVM5pHfYMxb46A2TO3fivX/4W
n/jE47ovlBHGJ25FXSz3jDM0+SJuyMjI0LzP3IUr0Ns7iNqGZp3RHSGLdTeM
XxBjbbB1ExkLg4/4hAn55XofjHFe6/uoA/mKzysX/yAajq4B+lmUVQ/vYOXH
5hy52LgkHBcdxdz6bTPmKObkf8/cHLEnMeH1PIcr9TQYX9N8HvX1dsEj7Bng
M/njH17EL37+X7hjzgz84Ps/ET8gAIePn5zoUzx4aJ/yXL2XMmVideQy0Bzx
wTEcOnEMvSLvJRXVyjlLvl7OjHD1CRG84ay5FHvx79kzQ04CB/dw8feDsN7O
Awvk3C0RfMWacBOrpK/DfbIVbObs7CLnd7bI6mzNz90xi3MZrLrKxYuXiG+w
VnnFFi1cpjiJ+oD441p7xr1gnmWMXCqXLorOPKWxK3vRY+TQ9fUJ1CQNf/7M
p7+AvK1Fqsvm3HGPnqHHH/8kmpo7BGPZwd7JU+QpTOXUlXEr0ZFc1JdhmzM0
9hq8OR2RW3IRl1moNa+lNU3KHdKzdxSdQ4NoFnllfSxnBffuH8Pb4zki7ruZ
V0HsaPqsp/m8b518T9Z/5tzSnhLT0J4S41B/kIuF+QxHd/YyuGGN2JYNIgvk
hPYNi1OMxXNAjJWQXYTUou3IEx+8pLoO1a2dymfYNTwqvvkBDLGOTvB+fmmp
ciIePHZsYoYOuRvYA3XsyHF0yX/X3NjyV/yjl+uVaZx169ZkzjziWzOTm7kH
aNxRzqu8F1XXYGdHJ8rqG7SWsm//PjQL3qrt7kVRVb1y08ZnFam/xdhBeEKm
yEmO6gpiLWIQDx+xU/5RyunOnEt+QSk+9KEPjec3ZuDuu98HHx9/nUnPmMlD
Dz2i9ROcXV9aUo5c8XMvXrDmXJ48ac1YnIq+4L3RjyMmY8z0zTcW4U/Pz1Xc
9uorbwiWIu/WnIn69nvuuQchIaFaN0R/k74m68YYF+FiDSp7JLk2OvsqpzJ7
p0PiMvTeAyI366Jf4hMWj4iUbKTmFaOlsx2j8ty276zAwfHZFCbH+V7LAGte
WX03cuAQYtMKECUrODZDORvJkzhnzj2Cg3+ImTNmo7KyUvO2xIbEFdThtP2M
SXNveE83Wm9v8oiUQzPnZP1GO3m+GbpHL730kmI+xnFyc3Nhb2+PFStWYfWa
jbCxdUFobJpyhlHPTeU66GPQNlWJv0C7vmK1jc7djIiIUL7Z0tISzf3wux0d
HTUXRBtIuTW11IpJ5XqvxMU/1UU9x2dJmeWLNtLMbDf1cPfe+z6EhoYrfmC+
/M4578NbCxfBwSMYATEZSCjYgfj0IvQMjqqHxHjke21XKSNaL8Yc6qmTOHj0
CI4cHRM/ownZZdsQnbZV6315XrS/KrNA+5TZP+jgFQbvkDisXO+CtTZuOrOc
MR8TY+TZZE0Tc2+sNyAvw513WjG9225jvcEdePml1zDv9bcEVy0X3+0NrTfg
izHBqeAr7ivvgTN1zbxt9g6aGmO+vvvd7+l3Un/NmXMXgoJC9Jzw/FA+Nm2y
h7unn/hf/vAKiIOXX6TOW2f9OvUk9WVsap7yURBXscY1q6wSZbXNqmcb+wa1
R79jULBpTSOKG5uQJvZVOe7GM57MqfM5U25MndW07bw163JsZd6JYegvs/6J
dRbNTS1as+smPoOzh5/66raCq1asd1Cc5SQ+uHcIuTdilXsvICpJ+cyYF0ov
LldOSuY+WPvctKcHnXKeuwW7dQnObu3dgw5ZQ3v34ez4LEnlshsvvzty4DA6
xW4b3gbTU2juYXIca1pObu2iTaRscB9YE2zliXSCAipqa1DV1okthdvQ0D2I
9v5RNPT2oaarBxXNbYKxG5FbXq36ILVwh+rGGNEVkUnZCI1PV45SzT37x8LJ
M0L7CMmbadVcyZo1EzNmWj18Ft66XfFWYmKSxkksPYaJ/irDiTfVe+M9nTtn
1TFnZeap38l8JPu4GRNjL/dLL76qsS3GaxifYXyNdT2sF3NwsfIVjMURYzm4
sR41EI6eIXIm4uHgE6Ux/ZT87TpjqryuRXyPXdjZ2oHa9m6dMXXw6EHxaYat
OZ2w+Gco6++lbPP7tUZGrqeyvhUZxbuQUbJL68NZj0m9wLzG2rU2ykXN/s5L
56GcoXyWXKYGvb9/EI62zqrX6bfdSD6COJ+6wOTd+J4hGNXd22+i1/NnP3sa
8+YtkOuaqXldchwxLkGbZnAPY0pT4ZDiXph6JvY63D7jNs3pEMMwz8T6Zdbu
mH4L4quU9CyERkRr/vJnP/sZ/vmf/1nvmX7r9d43bThf7ONg/bTpE+J9LFq0
SPvQPv7YJzBv7gI88/Nf6vXq/mxwgDfjqGKv6eNwzmTS1jIMjh3VE0zMez2c
cTdr8XspJ7Q5FqcItMZ86MBe8dUOKK9ALWtNentR39mh8xCoR9g74+QXpZwb
6sd4hur5M/VKjB+v3+Q+ga/YU+IlGIb5/9dfm6+1BTzb/MKG+hb4+QYhJztf
9tpCJJyhOFW+YsNZwXsgJjPxZ/MyOJv+wOS6OOI9cnLdc/f9SM3IhaN7sPpj
nqyjCI1VbMVYFfsrOHObuIqzQjkPmHqVfRp1e6hru7G7o0v5rvIqanFSHAj2
H2t986ULiq1oz4nPp+pXTK/rk2W+X45LDFchn7/hkdMZwAcPwcnVW/MgOifJ
J1gx1pqNThqv5XwUcu+z5t1TbCTnR/pFJapfnphbrPVYBRWVymNdJTipQTB+
O3l+RobQv29EuWP7BGvRbzHclhNF77KOiz6mv0qbObneffJ1XwkrTq+bv0y+
kP4PY/oXzp/VXr0zrI0/fwH1Hb3KZVcka5fg6R2CzTkriTGswsp6lNa0ytmv
UxvNPmL6Ycwbsk7TOzwJ7sEJcPaNhLtPKDy9fDR29IbYxr2jY6KfZqldpL13
d3dXPfXCCy+M59BGdH6v4ag1fMNTkQWj200d8eTX6dNnRCfeod/72988h397
6ntyHbPx/e//SHuZ2DOoXBLiI7OGjH3UWiMRJP5nYLzqfd5bZEY+8iuqUdXS
ppw0reQO6x/QfunDJ05pjlw1+kXLVlLWrzbT+W+1Tpyyelt4FKNlj5K2luj+
MQ7JXAXjdOSR5txI5lLJ4zPvtTfx8EMP6Qxn1vrQfkRGhqOoqAheXqIn3P0F
i23UPpap4JqrXpvoKe612V/ajs98/h9xx+yZ4/1aM+Dm5qYywlg462x4LfZ2
zho7YPxCeZrEt58KzjP9jj4+PvK5HoqjmKPmZy54YzFeEBtdW1uLvLw82Nk5
6HfwGj75qc9O9AFQd02l/uqdlvbbyWcxfx0SKrrWw1f9AsZAXn/9dV383rvv
vAsPPfAw5s+fL9jCXmsaOQOYMkp/hntInlTO4olJyRnvzR+b4EN7L/UL8cnh
Q4dx8fwlPROXxmsQODOJvXBtA0PoEt+rtW9A6w9iMraqL8++Tr+wJK1T8g2J
s/iM7TzgKj4O+fRWCr5qaGxRLMPzXFNTp3MAzfm+qLxxmMh/8zr4vKfSgzxZ
l/DMEI+zF7mkpEixDWWN+Ir9yNC4dKfGO9nzTJl87LFP6rX0CI70FX8sIDoV
/tHp8ItJVb7QxNxS9c2yt+2WfWuS+26T9wbNDVY0t2sMi72D9GFDE9OwbXe9
1m5cnFBnF9HX0601Yjdy7qbXtff/SjEfU89MXEvbSRtGGaF88cV5EJzfy7kl
Pv5hcHL3xXrxRdfbueicXzffUHgERMCdM8CDo+EVHq8zvhjX3ZxdiNSCUuRu
24GKxgZUtjShQWSvvb8H/ftHsffgPgztHcWhwwctXn4zAvqSmcdwSe0fbY7h
yptci8Xrv1Ke871+1v8bl6nR4/PvEX+Jvb2XLozzazC2//Z5pOeVIm97NVIE
P1EfbK9vE7+ryKoTqGtDQWUj8sTHypbfIQ8ecVZ4Wj7CEnMQmbQVMck5yl30
/Isvq+4rLi4VOTwoNuQO/PGPL0zkJmnb5s6dq/Jh9UEMTcyvNNf6bs6FwVij
oyOC4cdU9qgPzdwwxj10novY8Nvk/czbF7Wmx9tf8KA3ZydHKNdXcGyqVSuR
lIWY9HyVf85YbqfOHRoRv2IvKhpatD+QMzkvKC8qcOTocTQK3poKL8GtXrSz
Pd2s+z6PrWW7xC/uRHljm9pl/0jLhrFvnP3i5CtzFR8rLm6zzjC67777lIf1
j3/8o8Zu/uVfvoHHHv0U0nIKkZySofc7GRvdyOJn0A5SJtKzChAaHqs9X9HR
0WrPkpKSBEtZud2PfPhRlSf+d/wz5cbEpa71PZQpygdlgnzcfKdNvuOOe/C7
3z070Z/3wAMPKO8a+13jUtKQvCVT/575gJsRg+T9KoenfGa6yFVkXAI+/KGP
6oxiyijnkTO2yufOecLOLh5a280aJMZ1iDkY1wmMS1VMwvgy97airlllcO/I
9fOQ3kz9QqzHM11f34jD+8fUIJwR/41zCcoq6zB48LD20bQP9ooP14r04h2K
Q5iTZbyH9Qc8g5xD7yX36+4bDTsnT3zxi1/Svfr4x0UWZlv9GY8//rjGlSoq
KhTNlZYWi4+2ZyLG8273zdgfYnLqE8oX5YUy97nPfW6ix5A1Dj/96dPy5zP4
8Y9/qvI0NHYYscmZ8A9PQExaHqKzipFaUoks0aNcRnfyZ+rWkIR0jUUyH0Cu
JPYpJ6bnoqNvSPUxuY9OHDuJ9pZW5d+ffE/TNvLmr6vhEdOXTz3A+hrm44jD
KRvE8uzbWCfn1sHZQ+d8a82oYCzGsVzlzy5iX9z8Qic4G1iLxRndoYkZiE3L
1TmgmcVlyNuxAzubGlDX2Yqm7g70jQzg4DHOXzioeun06ZMq42b+kckx8DqI
+yivjGXRBpke7uk6rL+9/GhvofiYAz29qK+tkzN8YgJj7aiqR01Lp/b90DfO
Zj4pIQOR8nNG4S6kFVYgR7AV+7cyy6p0JRXtEBkp1f72vuH92FFdp/1P9Oke
fPBhfOlLX9G8DGto+P20m7QnjIvwRXs9uQ/teuTA+Bi0X2buLOMfn/jEJ1T+
Pvzhj+LBBx6Bk6ObYK45qKtvgIN7MFx8Yyz+3egUra9ijQTnmjD/kr+zFjtb
OsQOjOicr1aR4dqOLvUtlWP34nk0NtSpnf97qYcw/S0njh9Ft5y1nB2V6BX/
J2f7LrVfnv6xWj+sfZ/sIXfyUc59X3/Bl6IXgoPD8eijj+r+0G7dfffdmCV4
dPacu7VvheeZ+dibdZ+Mta9avQ5enoGau2UcgrEkxri4h0uXrlT+WXJIOTg4
/dV836naGZOXM/fE/577p7168tkXzl9SuWHOvKSkRP/N0cFVlgf2CT4gBrwZ
98vrMHX93/zWk5gxczbuutOaj/2LX/xC74ky6+tn1dyT94n9c5w9xXpvcko4
egTD2TtC5LMUhYJVekaHUNbUovOwGJN+r3XM5PNLOWSujXpfZ3fJfbNWu6im
BqX19dgjvgrrjnY0tmsfHWM49Nfo1zCnxloVr5DNYpc2K5/77bfNxnf/7Qea
C2T8yNgY7uf27dtVXhhbuJFc6WQ7xHNNn4+fyzo9fs8TTzwxPjNnxnieeqbF
iyWy1dzRoTq0qKwcReXVSGLcSvBVSkG55kNzSqsRnZKHoh2NqltDBCe39e3D
Trkf6pShfYfRNzQ+n1n+b2RoVPl1BvvlOg4f+as6oGl8detk90o17Torlr34
IsuUC/Mi1mGf/GrxSe2d3AVfBcKbNe0B4fALjtTeZCfWZtGHFx3L+fKsRdQZ
k/EpiErJRGJ2AVLzS3Tec0nlLlQ11aNJMBbndh86dlDrkffvH8W+vSM4fOSQ
6KR9OM/Y1XhtAV9W/eAejWGxhsHEKi7nUnyv7dP/lXXqjCUz/b19eoat2YXW
uTa9hWcuXNJ16iLnw7VieP9xhIt/mZRZgoSMEtUVKVtLkChY7CyU7k5j2tz5
O++8c6JmweICuF3zTmbespnJypfxB2501prhYdbZaHIjjEdw/iD//o035uOj
H31U5O1t1Yml5bsQRo6ruCz4j9dIEFOxh9/UR5TWNmmMoF5waF3HALY3tmKf
xkHOT/johhPp70nfEf9o/YlgA/Z5twjOiskqkDOdhlUbXLFqnRMWLrPR+ZEr
VttqXJsc2X6BEQiLjMHmhGS1F+np6fjJT/8DMckZKNtVozHAp556Sp+t2bMb
vVazVyuWrEJvz+CEr8h/I+ZpEuzAnjA7W2fVM9xLM6+Sem4q38G9MXk+vnjd
fC2Yv0z7+fky2MTkEtvbuuHvEzDBCX6j90nf18i4wYhxW7IRGpOs54GxK75X
7a4XXGX1e5O7nL245ILijOD5i6z+OvL8cpZKakmFxlTJR3l2HGvcyCydW7F4
v3ymxNHkt2e+rb65BfVdfVprxB45nrGtO3ajrK5d82eM6TA2buLi0Sm5ytkx
a9Yc3Hff+/Hkk08ppjGzO/ksTW80sfD1xK0my8rkPTM5oDfeeGOC08Tsn6kV
ZLyReu6Vua/AcPAxznv6zFkLa+1oQFpuGbZklyBTMNfRU6dFlx5SHct1+sx5
S29esmTUlDnQXuoMhxPHcfL0KZw+O81r9beSWSMLJjfC2CF1FfG70RFW5vaS
csuynteKXwXAxz8UgSHRCAmP035ZT/9w7QEjvqLPQFwdHJuM4LhkRIhcx6Xn
KqdyRiFzR+XYtrsSje0t6Bd8dfDoAZ1devTImMh4HwbFz993YD+OHDs6niq8
NIHzGLfinC4zv8Bwok1z+P9t1xmuc2e1Zo46ijVPAwN9inkn2yHuHc896YJN
28KI2GzyArV19ePAkeM4dfrsOOf6hQm+yJ6+HtU7999/P1588UV87GMfm6gJ
NZjL5Hi4GL+60T47o1Npw0z86tvf/vZ4bnDGhL/J2u2ZM2chMWULjp48jeiE
dMRkFCK9tFJznvmCrVhflrN9t85Y5coTfV9Qvhtnx/XekUNjqnuvd87ZLdvX
8bzGsaOHceTEKWyvbUTH8CiKK2vhHhyPTeO1w6wZZp/TJvINrdygnI6MD5Bv
KiZ+C6JiE7Gnr18x8q+e/YOc/3zcMecetSOmTpwvU/N5I7XuPP+0kbxu4kLT
18B7YUzcmleCCdvJf+Nz5++/m+81fMtG19De8/r5Yj6Zn2n0D2MuxM602dea
oTiVRb3Hc+Hh4aG2mWeFMsl6fvZrf/ErX8Ndd92NtMyt8uyTERmbqnvBPeGc
mKUr1mufK+fFME9oJ/tl7xEO/+hUFFRW68zY7lGrtoszXqbCy/teLMVA5y/o
frI9j7yihnvRV+xORuFOOW+VGh9nzIccHMffPqcYhd1TjKUaXDMZ5xhdYjDJ
zbp3YiteM18BAQETuoS1iazl4zJ4nf0X995770RMzcQV9GfG7S7+pR7NsovW
v5sSK8oI4w78TnK6tbW1aH3+8ZPHdDaknomz7/0e/l9bpi+McsB+avbmKEfK
eB8H35evWKv9yKzpdfPwhW9AKEIjYuUcJyOa/NwxKfANi4dXcIxiK3L6EF+F
iq4l9xvxVXxajpyHAuQUb0fpLnLJtWBguE95WI4dOyTrCDq7O9HZ1Ymjx49p
fMSae2chLPZVGX+D10ldSj02Xa/3HsuP+EU8w/v371UeRu4PcTrjE9RVxMFW
vve89vhfvHRe9pQcpRfGe1su/VVdubGD1EP0+Qzm4ou2mZiauMvK0VyaiF9d
ixt7qou6zswW4ZwSw8tg3j/60Y/qtX3rW99U7UY+kaG9B5CdX4rw+Cwkpheh
vq0XhYKnjr59AQePn8Kx0/LZ432OjPXtHR55V3Wzf4tlOEz7WHd17gLKquuw
R3Q285mpheVaF+0bkoSE9DzEJmchPilLOeppw/3l3JMrPTQyEbGJGYjavAUJ
adnYnJShHHm/+s2zf+Wnv//975+Yg3Mz+Ceulu8wsQ9iHNqem/W8zawD6kx+
7tVkbyq1XVNZjMPxO9euXTtho3/4wx+qPN593wewJbsQKelbkZQh+CohTWf1
kE+ec3u4JyGR8UhOy0NyZgGSsgrgH5oEz8A43VPi/3o5b20ik0OHjyt2aW5s
Un/778lfNXvMPFdtdY2epQvjnNQmjrP34BGVy6TUrSjcXqOxG515Pu6/8Xkx
d8wXsY2XlxdefvlllU3zoq94s+SEuo84m/qL8wcZc2dNg9F5k+tgVq5cqdfE
6zR9F/wd7sH5C+dFf5yZ0KF8Hzu4V+cKMB7CxfgpMT9jpVYf2Ngtmzs6va69
iEtoSwzuZQyAsSGeK4Or+E7su2TpKo1hkXfa1d0HAUHhCI/ajDjRpcmsNRH/
PUQwlh/n5WxO0/mEwTFJiBL9mpiZj9gtWYKzMkQ35yB9azGKd1ShuqEZPX29
4scPyznYh0NHDqK2oV45gA4dOazxK2Krc4a3Ybwui7qG12rymJRhMwf6vX6m
/1eXqdnhPhD/UK+ZehTideX5EL+4p7dL8fSp08eU3+aI7LnhfKDeM7rQ4CaD
q/gdk/EX7Qv9PcOBxO+4WfvPeyC+4nf/4Ac/0O+aHFvji7UUH/nIRyauVWsE
xa+eoBYRub2ICxO+Jn+H+pJ1szxzx0+f+ruyXVzcs+PHT+o99I/s09lWaQVl
co6T4e4bCmefMKzd6I7w2C3Yur0SWQXbla88Qc52BOefySLeik7O1JWcmadn
PTWnEM/88leKqx5++OEJW8cXz/CN1Lm818/sb7UoOzxDPB9cxPjcL8rmqXPs
QahAWl6xha9SMhX/mrmLUfEp2Cx/FyHv6fllyCgrh6dvhM5QZBwrMCxG53Ak
yT5xXiz3nrvT19OvuvXvzT7THhw7cVTjM/TDzDxiK5ZzbnxdnIjrUC9QR1Du
nnzySVz+ou4wMUE+W2KTmyVb1G2Ucb742b/85S/V5zTyz+s2uWbTt2P0CXOh
NTU1GktXf7WtUXVoZ2e7yEKTLupXk3ui3qIOnjzn5L3eq//Ly8S7macgZqec
8TyZeJFZ/DPnPpFPkfiKcwb8A4mvEsVnyhcdWqazI0JjtiAgIkHwVSqCohMV
Y5F7d7NgqtgtmYqvODsiJSsfW0u3Y0dNPRpaOtAt391PP3DfXgyMiLycOI4D
hw5qDIs1WMR3jF0ZvHdO5JTyRJvM6zYzoKf5/d+bdfk5NvV8pg6Ge3NUdMjY
wUNa29Hb2yM+XYfqia7ujgmfi++m9mGynuGfd+zYof9u9BT/jd/FFz//Rvve
Jy9+nqnp4XfRpzS6j7rOXIPRkcT4rDmmj6Kx2OOHMDDYq7qQOI3XxjNm8Yq8
dxxD77Soo2kLeMAGRodRLfdJbhXy2jm6+Wjv8MaNrvjzSwtg7+Sn83Q5w5j4
KUVsOjEW4waR4lvFpeWqT8X5MDllO5C7rUJn16SmZWmc4Hvf+57uK5/bjZxZ
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
VnGR9iR0+KvFvqpFreCqho5W+Jsa9fo2+f8VYhsfDtdGOi3bTilWZP0h1kal
DWgw1t9iTvIADdD5IsoD5kMRC1RUlsPucms8ibG+QK1XMFa1+qWaRUf3tNaj
q7kOzzz7Kv7zV68iU2yjA2ID9bQ3o1PwFTFWQ2NAMJqVd5VTWGLV05KXW/if
e2XOZWymT4+pdUZf22OPPRbpPbljbwqWrtuiMUJiF9bZvPzyQXjhhd8rZrHZ
yvTeiGPefGOYYK0rIv/3hhtu0NoalBPnOl98Pffcc5H+TFZ/lUvw2+de0J4C
7O28erWFm1599VX5zZm9WNivckvczshYXnnl1UgNENq576cOAvdWmxqWlIWF
IldLqpyorvVb+LijGd1C+zta0NvdgfHT5+OmL3wLg18fhUMdIcXObU1BfdZ1
gqn53GsEX9GH6fH7UOWsjPSgGogPDtAAnSaDLUwtUco8+qmJRejzYU396F6D
Edwixyqxg8qcbriDQY0JLlm5RvHV4KEj8aMf/zf++amn8Z3v/QxPPPVzfO+H
z2DS9OXYlVSEvemFSM4pwM70fUgtKhbbuAoFlQ7do51vq9Jc9iK7A/llFcgu
KRFsJb8pK4HNVaX4yiN2cHVDULGVvykEl9hQNocTvro6rRwRXd/7VLhnDmUp
74cygBiL+aYDNUcHaID+NJnccXJSub1MdKoXXtGp9Fs1NgTQJrq5TXRvd3sD
ejub5BjCy29Oxq13fwd/GDIFh3racLC7Vagd+7taEWqqQ6XXh7Ts/Ei/P+Z+
v1+/MXmX9Rd5nlKRFQnJaahy1SB5XzY+dcvnsWNPouKquXPnKlYZOXKkYili
GXuFAy+/OFi+H4Qhg4cqDiOO+cIXvoDHH39c/UXcG3MuY6M84YvveQ2zl3/Q
oMsVX330I5diyKtDUSnyjVhq1MhxirH429mzZ+t3S5avwUcvuRIH+04gM6cQ
u/Ymo7nFqr9E//v7tQeJ/SjTzYsy1iHPojEUlGfTLM+qA4f3t6O7rRG3fOGf
hR5DckqaPr8DXSF5ttaz5jPns2ffOq4FT7UTDpdTa0uYOl4D9uoADdCZZGo3
0r4x9WFpExJrmTibqdtp5bf3a61P1k5hviRjg8tWr1M/1i+feR4PPvwk7vzi
I7jji48LfRP3fu37+MNrk7BlR5bWG03KykVybjbSigq19kpRlVt43oUikXus
xUAqKLcjt7QUubYS3bNEfFVZ4xE85RNM50dNI3Pdm9TXnVdSiv2HDuq4rPGF
a6CG922bOvSmLhJ92abm5EBccIAG6I9JY0suj+pOT7Ub1T636tNgg0/jSdS1
+1ub0NvTgt6uFnS1N6GrowVNofoItuoRzEWd3dIShC9Yq36r7gO9ypPcl/xB
7Bv62JlcRJ9Oam6+1ihNyy3SfCDuPV6/KR4bt8Zpr23LH3Qp1oiMulQw1wu/
+wN+/O8/UWzzwvMv4ctfvkfeW3lQ69evV3zFOg/nOl+UnZQ5lk+KvcYvwyOP
/ANeeXmIjuFVOb72ymCNT86aGYOrr75av3/k0cfRc+gYtu9I1H093FvNOlXc
b5mQkRWOXfZj/4GD7xu/cHycc2MfZ+QWoKY2oLipvSmIA53NFp6S4/72RrS3
NEa+6+2RZ9kSku8arFytOsFWNQ7Nr/PWWGuEPr8BWTpAA3Qmmfq1xBzkP1N7
Hzjd360/nCNJOiT8zaNL7KnSKof6mum3WrluE6bPWYCf/vw5fPm+f8Jttz+M
z97yMD5z8yP49E0P48nvP4PRExdg/fZErcWQmp+FtIIslDhdqPD4YHN6dd83
sRXPWWivQF6ZDQUVNpQ47ChzOxRfMQfLJXKhtqUZ/lAzilg3T/BVY6vVF2s/
a7Ad7wv3eUPEVqbMpM/f1OilfCbGOl99fwdogD7MdK66j78nxqCdwt6fgWAN
jp88gYameo0rMabU3RZSHdy3vxmHu5sVZx1or8NB9Ym06ef21npU+70oLiuP
7Jkz/bbfrz7u7WW9xV4cOXoMe5LTtf5AVmkFUgps2m9nJ3vt7UzU/i+r1m7C
6jXrURtswJy5C3DjZz+DSz86SHDWRxEfvxP/+Pi3MGjQpVpHk/lalAl8nUtd
TxJxD3O8+WIeGPHVpInT8LGPXam+qsGDBVcJlrry8o/h+ed/h7lzFyIvvwhr
123G2g1btQcg+wOybmtiXqHeS67YmLw31lnXPY5dHR+oVi7tTOPHSkxOQoXD
ibqGgDzLBsVRios7G9Db0ajP7khXE47vb8H+jiaN9RJDNzfV6Z7to8ePiXy1
evkdkPNSh7zXdUVfocGJ0XhxYA/3AP2tENc4ZRzlCfEUcQfxlbFDzF5BYpTj
Qj2HjyFH7CmHtwb5rJ+elYv4PYnqZ5q/ZAUWLF2F4WOm4F9++N944Ovfxa23
P47rPvV1XHv9g7j62q/i5s89jm888Z8YPn42dqdnIKukUKgINhfzLQMod1cr
viK2KhWMVyxygH4rrbcTxlcVXpfgq2rd41Lf1q74Kre0DHtS0pDH2jrlZSit
dMATqEPvsRM67v7wfRjfPXGVuU/6tEyvgQG+HqC/BYpex6Z+pqlLzfi/yT88
u9bmO53LxNZPwdhZp7TmXG3Qh4Oii6l3ScRY3aqDQ+gRXd0r+Io+j672esVl
3HvGWuK0c8h7HwQjaB+Y2qD6c5LTMrSOE+s+sK7WvsJi7QHDehLs5bKGfbg2
x2Plms1YsXoDYuYvw8xZ8wTbxGL48JHak579UgdddmnY32TlaxHLUD6c69jo
G6dcpU/K2gc4CD/4wb/irbdHKU2bNgPTp8/B3JiFmBu7FIuXrcGa9dt0jOwH
yL6AxFes/cm91Kb+Kmuy7ti5W+85JLjvg8gqYixTM7auvhH5xSVy9KOjrR4H
ulv0WfI5drU3KobWZypEvEX8lVdYcMYe7Y6ud98LYNYZj1x3xKDM0aDOMTWf
o+trvtt6HKAB+rBTdJ12U1uF/EGbkvHB6Pylk3Jg/bjjQjUNzcgoKEZqTh5S
snOxL79Q37OOCmuJsh7Da2+MwTe//TS++KUncMOND+Oqa76Gj131NVz1ia/h
iqu/gru+8gR+8+Lb2tM5W+RtTinxkxs2RzWK7S7YnFZtnXKPW+OBzGknEV/x
c7nHCYffh+qGetQ2t6Ja5EMR5Y9gqwwZD8fFMeWUlKG+tRPHBBz2hTGWyccy
PckoC029aM6DiVUM8PYA/bWS0VW0GWg3mVpLJOpUrneubxMr5+/+XE4PdSD5
hXhDe9GGcVZvOGeH+KqrtQE9op/p3+hQakZDYxDu6hrkFRWhSviavEfd+kF7
jJg9cXyxdx7xh6kFz/p5SVn52odnbdwerN8mtHkXlq7cioWCZebMX6K9USdP
m4fJU+Zi2MgJGDV2CiZNi8GC5RvQ1tUTyYdgj99zHRtlirV3+QT89U2YvWAV
JkyepdcYMXqSvJ+DSVNjBFetxdwFgq/kmstWbdMxrtm6S8e8KzVbMSJxY3G4
3jrxI3Ox+KIP8IPG4fgMjC+xUWzUtMwsxcChpka0t1nPr4sYq61O47sGW7W3
dyAc0lA/GNcY18efWj+mVjXXGdcg96SrXuk7oXsTuH+K53GJvDc99zjvPO/Z
mCv6nO90rYFeegP0YaDoGu20Z03PNsYC1EYN15Ph60hfP44IwNp/tF9rszC3
gbE98n2Vvw4V1T59v2FrPBYsWYtnfzsEDz7yr7j9zm8Jpvoqrrv+UVz7ycdw
3acew9Wf/Druvu+7eO7FEdgYn4ysonLsyytBXmmlYCs3SiotbFXh8aLC61Z/
FesEGyLG0vo5Xg9cAZHdtXWo9AVUrpa6vPL7Gh1LmuCsZJGx7KvT3NmLw3IP
x070R/BV/0lLfjIeStucx+j+zwP4aoA+rPSn9tlx3XINU39xT4rppxLpwx62
mcgFJ0+crl1C3ET9xiP//5/KhzI6jXqSOpG6sbGR+c5B1b8drdZ77vGvbwho
PLBc7KLM3LzI9Zl3QDvmg84B98N1tHXqebkHRms6CZH32V+PvYrjkzLEhkvC
6k07sGLNVsUxMQtWYvqchVo7hvX5Zsj7cZPmYvL0WMxduBbzVmzT/l0cK7Hk
+/GxMUZGDHpC5njTrjTMXboF8xauwYQpMXqtmTGLMGveIrnmXLn+YsQuWq1j
W7Vuu451w076r7KQllescUH2s+F+S1K22LaaR+724FjfB5dREYwVrsdcVm6X
a+TAW+NCsD5g1WtotmozdLbUIxSqFfxj1YRnDx+Df/6UvOT80U9lcL2pmdMn
8tguMvskTudtmJ4b5uWusnp6coxGLkf7ttQfe1ww1ckTAzlfA/ShIoOtuP6N
XUGMRT/OSZGb5Dcy8vHjJ3DseL/2V2AfQPa837gjQeRXvvZJcNU26rHM48fW
HXuxcOl6PPPcENz39e/h3q/+G67/9KO48eZv4zM3fRvX3fA4Lr38S7j1zn/C
0z//PdZu2aM1RNNzi3XPILEV865KHW71YRl8RaLPisfiqkrNySoS/aF+Lnc1
SoXKvX75jV/HQ19Ykoxvy+4kzRHluJ3Vfr2Pvj7hY2Kr/pNab5j6hJiS98+Y
Cfn4b72H1gB9+Ck6L8Xs6+09dAAHDvbiwP4DkdoijN3xb4aHq8XWMUF9+pf6
hJe79/fggPA5P7d09WCv8ANzwMnD9F9R3/WHf296SL1bzjmvSx8D9SJrIdUG
Paiv80VqgLvF9snIykR9cyic9wgcEzxk6kKdD96inOJrT1Kq5hJozxdvjciB
GvVlJefkYTvz2+MSsHJDnGKXJSs2Kr4aO2E63h4xERMmxWDK7MWYOmcJxkye
i1kLlmPR+jhsTs1TuWj2xJzr2Ph/6EdhLYWtaYV6zply3fHTYvVaer1xszB0
2HiMmzhD8dXSlZuwZkO8jpUxzXjBV4wP0m7kPTl8AcVXxJKsYcVaVuejn7Kp
cUG/Ue+BHj3v0cPHFLtl5WTD6RaM47PqnLG2hs/Pvdd1kb2Vf+78p32d4TwT
mdNtcfHYkZqhufsJolf65LsykeusDc19iMzpIn6mCuL/4X3SV0n8TxnNZ6/5
LHJsaWpW/MW9jF1ReWkDOVwDdLGJcpLyjjFw8gF9OPzOYoSTkSZ+5fYqbNy+
E/GJqdqDOTErT2tXsVcGeyN46ppgr65F/O5UrN+cgBdfHYu7vvRt3HTr47jt
80/g5tuewGcEY338Ew/h2hsewRfv/S6ef3kUNorsS8nKj/ivuF/YwlculZes
LVyldfDcmtNe7nEptsq12TTfiv2y8soqBU+59Pre+mYdjyNQr7Xh2dOQ492e
kKy5oVVOD/qO91kCP3x/pq8X79/0f34/9WUGaIDOB0XrBeo+6g7iJpfL0i9V
9kqE6uoFR3nUf2D4ts5fI/rolNbIPNJ3QtbxAVnXddpjgTWKWns64fAHNG5O
PnEGgiirZjy+Umtxh5qbFIvRi0Fd+6d8TMaHoDXB5dXV1YkanxveaicqKitQ
WmFHVn6+/pY6+NjRY6KjHaoTz1cdFM4P40d8paZnqKzg/mVSidhczFNiD1P2
Od28w8pvX7d5p+Ir+omIaYa8ORojR0/HuKnzMGPeckyPWYZFa7Zh3c4U7Mku
we6UXJzsP/6eeypHE2tyHj9xDCs27MburGKsiU9C7IpNiqt4rbFTYjBi1DS8
8dZYTJkeo+NavnqLjHEHtsTvxpadyTp2xgjoi2NsMHJ/greSklMjuffnyw7k
eXiv9qoKPfLZUQ42NLegQOSt3V6OykrWtrErRiIOI358t2dk1b/pVTUSCNai
rMKm5y9yOkVGBzT+wLWYJjiSe8BZK7q+pUlxVlNTPepDjegS++GUSQI+ZdW2
5vg0L+7oYXR1dKJ3/8FIDR7aC8RgA/04Buhik4knMO/K4ItIzah+q+bwkSPH
UFBsE4yShE07dmu/qYIKJ4qdXrjrBF81NoUxTRB703JFPqTi7dGz8fA/Po3/
+NkQ/OwXw/D5u57C9Z99DFdcdT8+8akH8eBjP8KkGQu0fzPrs6fm5AteqlBc
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
TZ//J+QUV8k91ImMbEBesV3vzdwn+wAynz89K1t7UPC5XCx5ZfZLmhxCp7NS
Y39cO1xHpvc3x6wka41rrkXkeYesP/6muTWktRnWbd2JeWIrbNmVpv2Mxo6d
iteHDMeQISMxecocrR82fvoC3es5d9Emeb8I85aRL5Zh4swliFkk3y9ep3sI
WMts5ebdWneMmGv+2jhsTcjCcrFHiATHT5qIyy67DL/85S9x9isaX/H+mCvJ
uMZfu4z6c7LW9IE3OQ0mv4F/4x4BlfN9Z9bweL/r7p1iHOeiDz7sOsPMC3mD
soQ5f8z3M7khfBn8YXw83oBfa7AU2as0v4H+IvquPIK3iGk62eNVbGHmQ7AX
GbEV7RMSe7CTuoTaxFZuFTuzqaUJoeYQGkL1GlckjjLYSvFVsMba4xTGWfRh
eQOnc91d1dbeQpK3NqA4T+u9cx9jJfsZyjirnPJbn+a+WDmXp87Qd1xH5B/T
f418ZNbNh9kP817X3/m2Uc72i7EXHnuA8Uj+O3T4IA4esnq2mP36Bq+aOf0w
z+v7JZPfa/inUPT/FVdcoevJxCM2btyI66+/HoMGDVLasHkrVm7Yio3xjHfs
wLzlmxC7bC0WrNoi7zdivhDrXs5bsh7T5y7HuCmxGDNlnuKp0VNi5G8bMSN2
NUaNm4W3h03CH34/BL9+5vd48cU3MG3WYixeE4fV29Nw973/jMee+Al2pmRr
DP9wdwsOCH461CV6r9OKCR7patbPxFX0N5AaGwIa62cdeLKM0+lWfrkYz49z
SFuwp9vqOZhVUICm5saI34pUUWbH57/8fbw1erbuT1u6Zifu+sq/4LpPP45P
fOp+xCVkYvac+Rg1erzGTydMnY25S1YjITsPjvpGrbtE+UA5+EHXqcm/IMbq
6zuB9dt36P4E5mMR002dFatjmDJ1JmbJmHYl5eIztzyGW+54EvcIFtydmo8a
vwe/+PXruOnOJ+ByuNSvyPvslecVkntPy862elAHfBel7oCZIz4Xj6daa9+y
xjt9WIz9cQ0RFxJfHd/fgqPdFs46SOoM4Zjcx35ZfwUlNnznh/+Fm25/HFdf
/xVMjl2HhaviMXrcHLzw4lD89jcv439/+Tu89dYEjB47C1PFtpi9cD0mzFyg
/Y3eHj0dk2Ysku+XYtb8lcIv6wR/rcEcOc6S47wllq937rJtWLYuHoXlDlxz
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
NJt/L4j9GvQN19UxVujvsepZO+UeY2GWK+499gCz24oqqim/BL9bzPel0oET
cC6hO0+0L/pd9wn/H/KDHIB+LnwWxKLxM5wvyNXnn3/uqE3EUjyGR+hfrYXE
I64Lsgx8ppw6yh2Cv/l9MKXuIeQW8a7Bes6vvoWpFGtZGkXmjr722qvf6nVW
PYU8p74OPXXWWWdKjBq6YOIXkyktPZO2bHMR/jzn7Z6sEz1lJtmmrd6iI6FL
saA7VX/iEa+h7gq9TBq3ktgVYyu/kCgKjDDcrMgPBkbHsx7PZD2eIfwM6118
afFqV5q7zJmWrPag198dR3fe/yJd/MsH2H7cw7bhXvrFdY/RzXe+wNjqcbrk
yofovJ/fRT+58Nd01nm307kX3EuXX/0E246X6JqbH6Xx0xdRZn6pxGU7YaN6
BnGAAwO01LEtQ41VtTx2dDRIX4cu4CvYOOVpUfvYhdXZIkvxFere0YOYlpUp
88/7wPvtmJ38jdhq5DiAa5RX9ESe+eFxHsVXqFuADjf689CQM2T6B8Ef3DwM
XzVZuMrMbsDSHKK9Jguv98isUuTBkFepopZWcBMg71ol+TBgLK1l7WfdcfTo
kW/FsLTvGXIEXKN4VOuU7dd3ou6d1l9BbnG/4OeQDS+jrg7YCvng2oZaic2h
zkpjTV0Wd6Idn3ejLxt5gc4WxxnDmQOW72gzZ1HOId8n5At6YIf4/QP9HdLL
jXkidezLZ+UXkX9YHN3z8At0y2+epetve07O/zkXjGR8dTv7G3eKvFxx7W/p
mpueYr/keZGXn11+n8jSVeyfPPmHd+jzycvYn/GiOUs304oNLLs7gsgvHHHl
LAplXAU5xQpifBUQHiv+EWRZ5RrxK8g7dAKwFOQfukD1g35v9Ia3A19t3gq9
sZU2bnIWTpyXX3lliB9o11vQuXa9a19vvfVn7ATZuXbAY3D48Fd8tnaznLHN
37tfas8Vx0AOEbuFDNrP03fZCOAN+CX4Pcgv8BmW5rChp3FmcV5gN4CTND71
3HPPOfxc1G9org3nC/UaykOCvyOzo6y/dSryOsB9ys8Ou6Nf4OgCz20B23HM
9qltqpOc/262+Xt4wd4DZ+1lXLWnp4N1bAef9Wbpk2timUCPdS2v1OwCimOd
D25n6OXq+hp6872xdMOtT9M5Px1Jz7z4PiXl5FAuY4TU3GLGWnkUGpsg/PaN
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
OAf9Vu+EnI3udjkvsvjs7ObH3Z14vW0Qvyuet+KGkrduqpGFPquBnjY6MsA4
gH0D8F23NDdSWWWV8Mk98tSf6Le/f4uuvpFx1c8f5PP/uMSoIC94RNzq+tue
lRgWZAU5QuCri395P/sgL9GH/5hFTht9ae6yrbRmq4/MqQqISpKcfXRatsSY
US8JmYXsKr5CXFrxlQfrB8g8ZN/0tux06AXVFdvdLb3AOsToE/4dL37NY6fo
mf7d+1kv/cQR50Hv3dSpU8W/vPTSSwV3XXLJ5fTO2x/Shx/8jXb5B9H773/I
vu5b9Nab7zKWmkYLFywXHQh9iLlky5evFh059rMJrDNH08Rxk6m4qNhRV6u5
Cjv3x7/Ty8c6f8Nn8ijPMz67cr/DhuAs22Namoc70bPLv8817Ttg7E1leZUD
W+GsR8fFSz17Tmk546QaKmAbXlFTz7LcKPMGIMfo7+nuARdGs+iAOmuGeVV9
NVXz30Q/6sJV2+mBx94QnQ2Mdfb5v6FLWJ+/+9E/yZkxNubGvv/xGFqyYiPj
OTO3ET3lO4MjyM03kEIZ6xdXllLfQD/19vfKHN+9uwdk/05FvA+6FHt36MBh
mbXc1d1FPXv7qLC8WHIz+MzeQeG0KyJO4nHh0cnSbz9u0gy+Xg/a5u5Ns+c7
0YWXjJTalnMu/I3Emh996m2aPn8zy1yycJSCO6vamp+Fe9sJu4WYFt9zzD9F
7Ap7UV5dJ/gKe5RTVi51a+gp1JoGfDXUNVJNVfUQ/tFTwVer+UJgY8RvtcdD
Y1l2zhXlvv5X51aX9pT8u2vS/488Dv4+HjU/uWjhEpo8bjqN+2wizZw+j5Yt
XUVr12+mtRu30Oo1Zmbqlk1ewn13zdU30MU/v5zeeONNWX//2z/ouWdfdMyb
QG07avFXr15Nb775psNnXLrMiTIy88iN9Z6b+07y2hkoulD6hVg3KpcV9Cj8
VX0Ej6jUtVvvwfvhlyA3iOXPvi9qrzCvEZyiUckZ7KNkUXxWHuP7XNbjWeQX
nkgb3QJo7VY/WrrWk1596zO6lv2Zy65+2LGuv+0ZuuU3L7C9+B3dcPuz7Js/
Jc/hnwP/X3HtY3TPw39iu/MqzV+6jgpLK2XmCHJ4/Sz/h9j2HbBmF2P2APrj
sMDxZq/pRv/r7t4WWcJP3mmW4CqZydnusKHIie/bY2oO4V/Usr3t27vHwiyD
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
UrYfwMananYQ/nepha/wmdIKiqmyvYfS2J6hjhHzSGYuWCFzeuctXEZfTJpO
4ydMoTGjx9OiJWtp8uwV9NHns+lWvhc/u3yk9MOjlhj5+4d/978UEBkvMogY
IlYZ2zHc33K+11jAsMBW6bzSgIXLK7+1V9hD1GJBfhv5/n1j6dijvNfY+5bW
9lOOsfR+an+h+h3HUw7tf0v5VoDlYHPtfPCLlyyjGTPnih+2kbEUakMRJ/Jn
fIX60/c+/pT+5zSjjzZv3iyzcJD3O/+nP6PnXnyJwiOiZKaz8jTY14RJU6mi
tlH8SeAjE7cKsJYVt/Ixy4V1pGIsPAJbqT71lJp249v6B4eLvwu+k4S0NErK
yKBUxlZZmOWD2HNZOeXyOcgqqxG9HhSfKpyjKXwmRJYLyskzMIlGT1pM/+e9
z2nrzggKiMmQuCny8m7+/P8Cgyk5O0+471AXUNMIbFUuNdXV1abGoaK8miIj
oyk/P0/iLuh9B8bSuIJ9fp7Oz7LPKD5WDMs+D8JuW/ew3exgvxD4ALEX7KcV
/RiCrzQeAruOuTmIlwDDK5emnQf6Pz1bGhfFuVLOAeV0ws9MrdhRfr1W8nZN
TQ2Cp+CX1jfUCpaq45/V1KJWHZjLfF9bVy3+K3raKqpMvAq8eZVVpbLwPTBV
YVEu5eZlUWFhPl9rnvBCtra2DMkNapxW+ds1tqc98JC74xljsHMb4f8hDwmd
A7kDtnJwBDt4uQb55fF5sFfSQ9TDZ8Xaf8XZODfKZf+t2JWetf6hZ01f34sz
ht9D7yb4GngfqqoqKTIqmqKj4nh/mnk1CI6tb6ygOl7gGEQNRnZhCYXGJ7JM
hJAH4kthsRSVkkuhCTnk7B0uMjR2hhPtCE6kDJaXbNa/STn5MkMhBryOZdUs
j+z74m+VGH7HjLw8Ss7MosT0dEpITROMBZ8JvpPEr1gOPXyN36W4Sv0wN59B
neFmveYqugTvCbS4h4NF5zS0dtLHn4wewiGjNQ3nn38BlbH9mLNgMd140630
9DPPkru7p8Tf/wecDmecRTPmLhQOY9Tgu3n6yPwJN/cdtHWbG23YuFl+X3s/
dU4xcnUnur5c83+nIg/4r858/+49kpPZs7vP0ktEnV09FBQWSem85+D2zGOM
jSUxkWoTEynglcG4Cis9v5BySkuouLKcSvl8lrK+Q7wkPjObcVUixWXmUFRq
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
tMistuLiAtro7EHPv/pXuv+x1+jBx98Q/pHX/vIZbfMMoIzcPKoDl5hwtbI/
3dFK9W2Ms/h3axhnVTdidkaVzJdNzS2g1LwilqccSssvoXyWo3zGx6ns60Dm
4llfo6YddrQQvjDbykLe06LSYspnvAyMlcj4KsLqIfQNAjYKF1mHzCu2Up2A
pfpCdYenpSe8A03sC8vPmrmzi/8OeBvcvXwoOCySvHwDyMMngLZ6+pLLzmDa
tjNEdJhHUDR5B0dRSEwS5ZZUsq6Lk7qsH505gp595ukhMzdUT0KWcJ5wtmCT
pX/qe8x4/m9f9uuTWkPWM/DZ61j3ab1CRma2zBxOzMhmrF3osNNafwV8Bd4r
YG7gK7wnKoXPQVKK2PccPheIV8Pm5/A5yZJ8QrnUacWk5wi34WaPQKmXXbTa
mabNW0mfjZtJH/11LH3y8Xj64N1Pafy4GbRs1RZavGqT8Oqs2ugifnxMWj7b
B7Z9fI4rW9qptL6Z0nMG5xijhkDroE/GXqoexSN0tehvXpV1jVRS2yQ5wpKG
evnMybllfO2R5MTXMnfJWlrotImcNrjShAkz6YP3/kGjP51EH308jj4bP4um
zFnO92YLrdriyTY6TGaaoAYZdVWSiy0ooBz4rSWFVFiUL/WrqFsPT0yWvcCe
4J6LX2TVXmHlWK9hT1GnBRyGOHElv8fUqRylHvb7IRvIG9g5G37osoGlM9Bg
o3SuIfgOISOaZ4J9QmxkhJXvu+WWW6mts4cCwqIFG/mERJNXSIxgLFf/cNrm
HUROm1wkVu/hh/qpXcIVCD2HBT4FPyz04fD3EsMPsjAUP9e1g9+DZX/uyf8P
swS9sZAjDA6TWtioeMZ7mRmUm58rZ6S0nO02YiBVFRL3zCop5b3Pk3paxKfz
Wa/DlpewbUB/ajbrffjS8I9KaqrZbtRSLeqt2aY0dTZRS1eL8AKBTxgzAPH7
65w96ZU3/kGX/+q3dM0tz9Ll1z1BN939Ar3zt6nk6e0neTDEVLoEXxmeUORp
Dva1is2D/Tvcb57vs9Vh2eto7DEs4Cx839vZTO1tddTSWu/gJ0AdE+qSUBtu
4lhfWpjCaIqvvvpaZqhq/Y/2UGjN0fHSs/Y6LPwPxIjwP1GPhf+Vm8/+aDFy
fcWCg3MLTSy6iG1xTUOD9GMWl1fI7LAyxsWZvGdxycmUkZND1bV1MvMNuUZg
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
yqmswsBaW7kvlrIT1TsdtsIg+J+Au3huoWNmocRAuNcPfF+OvlXcFxSfU3hq
954qtmnIVS9TeAp2rrxSfZciYKv8IsytzqWE9GSFOdNog9IzsLfARDgCK2G/
jOf6Olv7hejYSu/PbtQLHnOJWZqav1xhqG9jm5r6938fktxMuT7xYeE+6zNH
ZC4G/idyY/UFox4Xn5M4Po5SC4B7vzo3l+KSEyhlVQblblpHm0oKFL4pY94G
/4EqKo2+H1W7wcfVHANBjQfmRu/lfK1dJrG/Cz4pB/+DeP+xx+B/8Dr2JeB3
nHNbJeSogmWqpHwbFarrKnDkpovsbXDgK1M2y5yym694eKO8D/lVmrzrco+5
hdANOTIbB7O1Vq/h+RzRCSmsT5aHR3H/vbx1G5StrPtaDALrLHrKlQ6DfhN/
vIGDt/FaQ950n+vVsne5XPIKjAX+Ao9KzjEeenz+q6++Mu2w2OUuXbvzXjYu
NZv7XS1ZHkH+i5ZQ/0FDqXPnrnTXXXexjUYNP/he5hKJTUdMqUULzNhuQZ5T
piu77ku+vn60Zs163pPgM8gznTHdV+EGTxo9ZqLCDpO4l/vwURO55+jgYeMZ
Z3l4+nIPghmz0McgkKbPXUreC0NpQZjCAjFpFJKYSUkKk4uM4Z5LLt3RY1c+
n+LYMcPHjd+g93TFrKHFMSkUHJ9BiyNTyHdROM3wD6ZpfkE0fdZimol+9tPn
cB3loKFjuVf7kOHjuN8V1mfgoGE0fvwkioiIol27djN/G31wSmnTpi0Ka01y
4KvmjLHQD1Ry0IGNgIOBff71r3+ZmOn+++/n3LnJXjNoRWQMhcUlUnLWaqre
X0Mf/lO9T8Pc8HlNnTq1Ue4j7BhigcDw0IXW+Pr1RroN020f5Ap6RvrXy33H
/2W99HkJwKHIh9fzQcG7WFX4P/ep9Ufvhuj4JIpPTmPKWr2WMRb67GNGJGY1
Y/4r+jxDn0KvCjXCXcXIxUBP52KT8Jq8jj0zPmP1e20pVTqj3CDUNsEubKvc
QZXolwB/ldrng8orSs2+79hTAHfhuZDMAYH9Qf9SwVVFJYVUXFrE+KpYYap1
m/LV9WVSalYaJSlclZW7klatXU2FJUWsw3T9LzNWrLXg8sCaQwYRq5Z+BxIX
hA2QfHDrfW1qjHIhbOWqJvBCn29qGfkh14y/jb4NRk0hZAn4GP5h3Efp8S62
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
0zetYV/lj9xgYLjlwyDwbZwbRC2MZ4DyfUHmfSDnCsE3LFq8ghYvBmcRxf64
uLiEampqeG5VZGQkLVy4hOueZ0yfpfzwPJo7x4PxFeqhsXcHNT7gQoSPcnLu
Sr/+9a00evR45kPgs1NT09Q1O0NTpkzrUNsu2CAqKuoH1xd5EfweDQ0NjLfF
n1xs2Mr+TAiPhbMA3g78lezVlM/HnsOyzV8waq+Ar44fP8G9hMDBuGaPPPIY
41/UucvMLLz20Uf7Uk11A19TvA5YCxhrypTpNHnKDJr46VS+bvPmzaeAgCAK
CQlX+rKUea558xfSwkXLeRaDl8Lw3t7B5O8fTt4+IbRkuZ+Vm/b0Dbbp5I9i
LEOPIch7A2NB56H7OAMcY6yxCcchKibB2dExlvBXSbnFlJxXYs5rKFYYq4yy
S8stjIV4SOa5g8eSWQ0414K3OuArs9fFvg+GY7StHTEWHqPGk+2OObcB9fI1
yi5V1TVSfXMb77T6ct9BOn3mexU3YK7bJraFgrP0vllcd+BtcLngMlGfJ/VY
Uoso9YgOjOUQh1yc8s/OtC7AVvCX8Bt6LTtsCDhxfE3mL+j96Yjzv/xyn7Ix
nyvbdJa+VX7k4KFvaMPmbWy7gK1kJjsLbJyKJZs74662buu0z7oV8alpU4Gv
JBcothe2WHbiyExRY99gtYGtSsooo6iU9wzCvsPOS25Qx1aIv7kXKsHgrMR3
RK5J+QG2gr+B3xEfFBASq3FXMeQbFEGr/ENZxI+t9AmklVxfHKD8XDD5BUSS
r28o4ywI/CL8o4fCSgsWLqW5cz1o/nwPGjduIk2cOIk+nTRFyXSaNHkGTZs+
W+EsD667gv/18vSltfHJdNNNt3BdNWZeYT8K8oPw2489+jjvJfT29ldYLZ/2
7t1HTz/9J6OXzbmbsf9Q4SvU8YCfsd8fAn+BWB21J8BX0Ad9JoPeO3UxiPxd
MqsBfztwFTgsxBm6r5Wbl5eXtTdH5rND+vb9I1UrffTx8eP69cf7PkXXXHMd
XydcH1fXHnTppT35WqBOKyY6jq8rX1twWer6Tp02m6/7pMnTaebM2awP4Lim
TptJ09XrFi9ZqXRmOS1YsJz5Ku5TVTjexx95afRXGHWAK30gAQpjBbFuAmut
8g8jv6BoC19Bl216/fPwlTXDxKzBssdYiGdw7nAGMW80vVBhrOJSPp/AWOCa
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
A/NyWQU=
    "], {{0, 657}, {600, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{600, 657},
  PlotRange->{{0, 600}, {0, 657}}]], "Output",
 CellChangeTimes->{
  3.727217713493718*^9},ExpressionUUID->"2f6b8e6a-4253-451f-885f-\
c653690524ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Funcional", "Subchapter",
 CellChangeTimes->{{3.7162344788370857`*^9, 
  3.716234479909213*^9}},ExpressionUUID->"ad858a3c-0d32-4a2d-87ce-\
1c7d45b2b7c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"Range", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.7162366619293203`*^9, 
  3.716236667119528*^9}},ExpressionUUID->"c5f97b32-24ce-4720-97ef-\
7167d4fe3984"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177135225773`*^9},ExpressionUUID->"fd1e286e-4a15-4c19-90e4-\
697240b2b369"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.716236669409409*^9, 
  3.71623667856706*^9}},ExpressionUUID->"58ee490a-d027-47aa-8fa7-\
c349487adf06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217713552116*^9},ExpressionUUID->"473854bd-930b-47d7-8829-\
6e0836aafa45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b", " ", "=", " ", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Range", "[", "20", "]"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.716237372182273*^9, 
  3.716237384782058*^9}},ExpressionUUID->"91fbfd3d-83d5-4c40-aad8-\
96cf3992c755"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "20"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217713583315*^9},ExpressionUUID->"39741ba5-d0b6-41f6-838c-\
73075af1defb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", "b", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716237389814768*^9, 
  3.716237395381585*^9}},ExpressionUUID->"c30831ad-292b-45f4-9e2c-\
3ea28b49075d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "144"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "196"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "256"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "324"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "400"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177136152163`*^9},ExpressionUUID->"d809dbb6-a36a-4f30-a77a-\
079db7dcf826"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basado en el conocimiento", "Subchapter",
 CellChangeTimes->{{3.7162344894685*^9, 
  3.716234492212591*^9}},ExpressionUUID->"d6aebf14-3e54-493a-bde5-\
8c5bc18e9305"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = " picture of a dog", Typeset`newq$$ = 
   " picture of a dog", Typeset`chosen$$ = 
   "Entity[\"Species\", \
\"Infraspecies:CanisLupusFamiliaris\"][EntityProperty[\"Species\", \
\"Image\"]]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse[
              " picture of a dog", 
               Defer[
                Entity["Species", "Infraspecies:CanisLupusFamiliaris"][
                 EntityProperty["Species", "Image"]]], "Fast parse"]; 
             Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 " picture of a dog", 
                  Defer[
                   Entity["Species", "Infraspecies:CanisLupusFamiliaris"][
                    EntityProperty["Species", "Image"]]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"dog\"",RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Species\"", ",", 
                    "\"Infraspecies:CanisLupusFamiliaris\""}], "]"}],
                    "\"Entity[\\\"Species\\\", \
\\\"Infraspecies:CanisLupusFamiliaris\\\"]\"","\"species specification\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{
                  TemplateBox[{"\"dog\"",RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Species\"", ",", 
                    "\"Infraspecies:CanisLupusFamiliaris\""}], "]"}],
                    "\"Entity[\\\"Species\\\", \
\\\"Infraspecies:CanisLupusFamiliaris\\\"]\"","\"species specification\""},
                   "Entity"], "[", 
                  TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
                   "EntityProperty"], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{
                    TemplateBox[{"\"dog\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Species\"", ",", 
                    "\"Infraspecies:CanisLupusFamiliaris\""}], "]"}], 
                    "\"Entity[\\\"Species\\\", \
\\\"Infraspecies:CanisLupusFamiliaris\\\"]\"", "\"species specification\""}, 
                    "Entity"], "[", 
                    TemplateBox[{"\"image\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}], 
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[
                  " picture of a dog", 
                   Defer[
                    Entity["Species", "Infraspecies:CanisLupusFamiliaris"][
                    EntityProperty["Species", "Image"]]], "Fast parse"]; 
                 Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    " picture of a dog", 
                    Defer[
                    Entity["Species", "Infraspecies:CanisLupusFamiliaris"][
                    EntityProperty["Species", "Image"]]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"dog\"",RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Species\"", ",", 
                    "\"Infraspecies:CanisLupusFamiliaris\""}], "]"}],
                    "\"Entity[\\\"Species\\\", \
\\\"Infraspecies:CanisLupusFamiliaris\\\"]\"","\"species specification\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{
                    TemplateBox[{"\"dog\"",RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"Species\"", ",", 
                    "\"Infraspecies:CanisLupusFamiliaris\""}], "]"}],
                    "\"Entity[\\\"Species\\\", \
\\\"Infraspecies:CanisLupusFamiliaris\\\"]\"","\"species specification\""},
                    "Entity"], "[", 
                    TemplateBox[{"\"image\"",RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}],
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""},
                    "EntityProperty"], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{
                    TemplateBox[{"\"dog\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"Species\"", ",", 
                    "\"Infraspecies:CanisLupusFamiliaris\""}], "]"}], 
                    "\"Entity[\\\"Species\\\", \
\\\"Infraspecies:CanisLupusFamiliaris\\\"]\"", "\"species specification\""}, 
                    "Entity"], "[", 
                    TemplateBox[{"\"image\"", 
                    RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"Species\"", ",", "\"Image\""}], "]"}], 
                    "\"EntityProperty[\\\"Species\\\", \\\"Image\\\"]\""}, 
                    "EntityProperty"], "]"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"23f44575-15e3-4ab7-a608-0e410785cf14"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
inGCVgLOYBzRc3LsYDIrtIZhrWEEABlMKrVOptaNmK0ctqgMcjUnkyv7dZzC
aFYBOyCI7f6o6/7T2/6o6KVE0oYAhwXJCCxZilbwO6fPijCN28RliB6Kfcib
kP7D0kD1dPteCwxGElRMkEjEbmTJEY/kCPcCVrGyap7E4UQmPoukonEKnFqK
EZKKIP+SSJVqwgZJHRGfOLQ04CKZnBi02USSZAScUy/lJhLDgzeYQCJwQWtS
WYPsxzcdfKWCBvwFhIxAyVJ+C2Ilog9VJ0JUeQuJ2tBAvr8+01+90VuxxlGy
KFa7dKIpLViaGq9YMlG96GHbyqctK25UL5y8kvZsePdXnnO/G7vw0NcBw2BF
b0JKUsIUzkDdbiIWqtB6QSnkSpxJwfFKfAI1jV4OQzWYFHqzmrNQ9Qbci0HA
0HG8luPV+AnM2CQoAR9oBDgyBJUw0fhYEOPMCWqMORb8FqCzFSIZGi6fYGZl
cIl7zQ6O8q+gmRjJBkWtl0wdCFJBj4UPwc50u9sgiSiBRVLmUHQKkAARgo0s
EBcGtQYB4ACCDq3Lo/cFjR5R5fNqoWMhHnysYEjVYxCd1yyVkSU1gpFn2tUY
DFH5MUiZOJE2BUqsM13NSqPIiKkmT7mAl6oH0/lm1I0xmRh33bklUrLj5eIJ
551bXmjOUe+Iv2O/WL3WUrKML1oi1qSPNmVMNm243rw6WrbgdlPa057Nz6+l
P7666mHr0keNS++2rX2j2fe1/dSjvsyAbRjnAmlDxSGF9zBR5A/wUuXBFyTj
oZG0qjEIoEeXi+gaVgpPxAKwwKKwdpYqkh0iBEiOiXGb1kg2A3bTGxScUUX7
iCarSwp5rH7oNSLg6ixKk9kAF5OSX/gRBtPqBEVA4qpgOTAYaGberrO7VBh5
HBlnxGHxlYVpZknu4nQgBGyJJFxITKbzVqotkI2Rf0Ev+Tgkj5T/+g2iXxOK
gNC0okfn9bFqs59KSfiJFLDYLAwn5T5Sxo3BlzJllqroCbgQkb+U9Uxnr1Rn
puyP5hrCFlb3oxwQip0VG6mYKXooCSJla+n2Xz3irlotFC+Qn5g1kr9SqEy3
5KW4cmdfv7RoqnLOvda1H8h3v9efdevy4lj1wmeqXc8G0l/Icn5kPXW7dY3u
arnJoTOblRgo6FLwBk0SWWkyCJ6IFRAmeZZJDoEkWFUONqpwK/JKuCSvNPBy
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
ZkLWuY20gtqGCU2/Efl7JGqjWmiA8wTMMH4W9/WMqxU4soXrqdu/Mis5adus
5H1LZ2elzNyzaNbeRTM3JiXlr53rurTRfX6B+WCS80hS8GyS7dTM0bJ5rcfW
p81ZuHxGUtKMpLwt6UXbt+2atyRnQUru5kUl21eczVp5OGNJ0dETyLYoojk4
yHWEj0DYDZOTStM21hgAPRaNUoMZjQZxjkHKVala5WXtoCHkckqtgXSgnore
Sr1pGAvEIRatYQQLhk76FSXLTqobO5jyoQ43ZFt+mohHRAOgyv6mrprTrae3
tBxdfPX43J5TC2S5iy0V66Jt2fdHjj0eOfxItusVd+oNf/yt6cQP+BOfGI99
wp+6ey3HV77WU7fDP1Tj4gZElyExHkhcD0HqJEZFqeQrzaPBnJihKknKsoQC
+Aqs6oL7Ze1PVBSi9nXSWjRNQ13xYTNiPdWjwpIRmix0QKUgaG226UoaojC4
iz2noLp+MwZDopoz0nmnUTD0d+etO7N0RnpSUvas5NNrUvfMTjq6evbptOSD
qUlbk2YUbUl1lC4J5c+wH0jynUyyHElKVC/jz687smHTwSUrliTNWDJz5pFN
aRVbso/OXjY/KenI3EWdW7ZeWLP23NI1fF0T5aQBaoLysJ5D0sYuktBUrRWN
rNGI7poYxq4DEbEOWKsDab5VFR0de/HRS5vHIB/p0xqGKa0Gx5q10hMTUokV
G/VmJbUz2XVsAm66T4+1gdFEsyQ/BBcnzbvhFLBhrbq7u+FC4/H0ntMrRorS
zFXrA03Zo21Z94f2Ptcdf8kd/dh85jNn4Wf2vPcVe243pcVKFwbPLxu/stVZ
ulZXuE64fIjvLrWqu6JhK1UV2OwATU+EeNAmNcP4zS43NbFLE0/S9IH02Ajg
o2ZLj5HV2YzjY/ZowgFjRqgNhhBeNXBJu2P6V8CLM8sNvJxltVRtQLy4/2AM
cOMrmqE29QwXbejYm3xscXJW8ozDi1K6T6fpyjP5uu2asvSGfamnFiftmJ10
anVKz5455qPJ9sMz3KdmxerX3xvK7tg/b8OCVaVbcyp35+xZsqruyEldXq7i
2IHipau+HZZ9c63lo7aGTytrooPDGGFk6zgjnIhI0khTEhxPMxFYgUPBs3gq
ailBrdLEE8fTBMR09T4M99TrdHKvz27/vkmVsS7dDokHNp0apE4/np7KidlA
O8iMPH6DYFVEEi63l1rKsb/FosKQGoQRaZbQaJANdVS1l+wYvpDuuLI1ejVn
vHf/zYED7xlOvrHmfmQ9/cZy6rX24Bv9wS9dZ/9NzP/IcGa0Id1dOC9YkRas
2mDMXz1YnAkc3QhtYYGm81jHNWCi2RariiCwqWBajGnB+So47LQAwCc8CP+y
WzCzoMCbR3CFuGaeR66ksNlViI8utwbGIAhqOpp1BMhSuuo0WoVhl6zUUp42
eGSGNm9e/+E5zTnJ1ZtT1IUr/I1bwk0bHwzvtdZvKlmXfHLZzOMrk08snnl5
S7L8RLI2L7Vt94zBU7P0BQvOrJu1Ny3tQNqGA6u3Fh4+Ub5n/+CxMwdS58uO
HP9ld/c7l2o/vnz5eWmNSzWktwA1SgRItplp0oEzjzhESiikOUE9N2S0KHQ8
EvNhfIU7okdgqJ2Goh5oymDRaE0jGuMQ6BSJPBaaezKO4LCRMJV8XSQntFZW
EpGewWGNjjqq2gl6jhvR6ofguZygJTY2qmA/rKZqVMo6huuP62p2WZr2BTr3
T8oOPlCffGU791mw/Ef+kq+Dpb8ar/nT7St/fdj43d32Hwcq3pfvfinf93To
yGjjVlvhSs3pJZbqbf6+Ip/iimgdFgMGT4Sa3kEvkmiZFhsB1qzrs7BmZmoO
pBY7GKdTL+lSC0McgRUqFJkdGFXqosfdsYdlqIYG6/UGLQG/XtTUuxr3+y6t
c5cvVxydaTo9WyxZwBfPv7xxhuL4AtvFFebz8xJN63z16Q07kgtXJ51Pn1W+
ZXbFxqT+k/Nvy/c4zy+8tDGpKjOpY2dyx545ldnzzm9J2TU/afW85Wtmzju1
ZHV+ztbbTQ3f9A88u1T7YcH5l739kCvMDtWgPnySDmHFQ6hNSgxtOlaX0LO6
IlU5vB4dElVIZdYXqpN69YEjsMAnmwibrmfCBkIR6hCm9n4XBxFrNOugK1iD
EPf9IzNUGTPx7Jk1nkDHFhyEMylATWRCqm5NV5nl6lnx2qFQz6FxxbFHfMEL
8cKPIlU/n7z0p4et//Nq6Dd3m385VvHbW43fxMreHdg30bB1vD4zemlTrHZj
qHpTsGytv3T1WOtuf8sx89VzLssQTURaRgR+2GTst/EDLq7TqWh069o8mhZj
T6mlr9QyUOHStjgMvVau1y0MWbhem2WYnmhgLS6AHmmLi3pCKGLCE0VhMGxo
jMnORVp3Bxq2h1p3JNqzxlo2qE+nqo8me84vchbPa9o6c+hQqlC01FqyNHxp
Zax5C1+2pi5rdtmWGZf3zRs4teD28M5fTVX+LF74ynys78yS0sx5l/Yv6Tq7
hq/N0ZSsK1k3/8Tq1YWbt29MXbAwZZYz/9w7FRVftHd+53QGWK8m1SU8NJXs
80Fa2FjPM82nSAV26rxiM0dUy7JMz1eS7LRoJY6Vcg2SqSzzMpmJk1WaXgs9
j0a1a8EOajXCy6jmLDC4BQ0rm1PW5vJQwyfrNqQ2fuqp8NKVOFn5y2IaNA3X
WPryxMG8mKJgynDusaXgk0jVrx52/veHqv/9XPu7+62fOXM/Mx16b3jX/bas
u53ZEw1brjdu9l9c4y3fNN6wY7Ruw/ildeON27Un5slPrZSf2ygvTFefzzCV
Z3iqNgeq17rKVnjK09wXVzsvLLMULDWcWWLIW2IqXS2Ub3Rc2iHU5Rgrc7hL
u7i6vcaGQ6bGw6YrOw2V26xXdott+7yt28facm52ZEWq1/EFS8S6rbHOHTd7
t19v38KdnYNkIXhxSbhsoeroLOWJVK5goVixKlS31Htp5ejVzcGWTOslLJvH
e/d+NVr9pweXf3er4r+fd/7mcbvQtq8hf3vlmR0dDRWgfctIo6z+TOO5PSVH
dmRv2VhzIW+qsvK3CsUbg5oqhOzhKfaAoSDldPS0IGvEDUWouywUdSMlB63B
caQitrRQUdSsMPJyo2UEMR0epFD1gQkRQCFvlOpevVmNBEShhTRV6o1KHa8i
58JBLAqpK4/c0ybN5mhZ1qnxBd1S3s36LrTSzI4N2kB/FRmQS148bjj3yH3x
ZfjKj+90/umF4p8f6//zvcGfTlz5xFnwfGj3g+7sRN0Gb9maQGU6n7fcUpw2
1rg9WpXOnZwtlm6Ktuzji1dzuQv5gmVC4TJX8ZJA+epwTXrwUnqoNj1cuz5a
lx6sTgvUbfbWZvpqNzkq0txVG101mwKXt3ovb/ZfyvBWrXVeXCmWrQZe0Str
A5dWR+rS73Rsv922NVK3SXdulbdhU6Ip48nQvsnWjeJF2ENqvHrZ5OXlwdL5
tqIFhtxUT/mayOUlwcvLo/Wb4q2bnhuOv7CceBso/sXN2v/nvc4/3mv85UTV
f7zb+3q0XVZ7sP7crp6mcqmlxEGdV3LEbvJ9v9lhkseHu51WDdWgqKPYKDX8
swqhjnVLCtG4a2yCHuiDS1KHHpuqA90hGhJMRuQLw2qdDFFMox/CikY3IBvq
Vqj7VdpBrOsNKqfXzhozhoEOcopAwMpqGjy1LFqoNi41KJpZqxU1MlF/jgpM
Pv1UKaupUgrjodqXYO53cm0eVfmYUPk00vwi3vL1/YE/faj/02vFt/c7P/Fe
eKg6eLd7u6tgvvFMqunsPD5/oa14qaci3VWx1ZS3yg8IqjdYzy23lSyHu7lL
14gVaQDOXwXgMhP1GdErW2Kg38ubYw1bsN1TsdZavMxeujbemkP9t32Hr3cd
ABsHruDbjcA6UIsjrIpfSp9qy7rdnuOt3sKdX4ezUJ2wd9u9a5lTLZs9pYvi
dasfXU1/2LIqVrvceDbZU7nmZvvGybZ14bq0Gz3ZHzryvo6U/efjtr++0/4f
D+v+9LDpy7G6t/G6T6e6xKHCttI9PU0XqYkCYc6qR9KNBSSGxcpkvFQNoxjH
BBXreBSAtfRoFQI0xhBKRlq0+gHgotIMKGmRYQFYcmXviKpvRDWAFTigUt0/
ou6hb9W9WIfx6EzUS+b2cb4QFegY2SokxULq10LdiaywY6TigBNBlqceeCw+
SzBIbcACU6pULacOZ4PV2OW3tPi5upuepufj/T+4N/T1o4HPb179IFj7xHBy
qmmT7swc3clk3dGUkUOz1ceThw6kIMMa7ziYaNsBuovVZ3kr1nor1wFK14U0
eAQQDF/aCFBGL28aa8q63rptrCHLX5nuvrASO0eatk127b7Vt//OwKHJrr2x
pmxP1abApUx/5Sr7+UX+6hWTjZtvtuYAQWvpBtnZFWJNOk50qzv7Xk/W9Y6N
oaqVt9o3fzCc88Fw9pOezb7zqZ6y5VPt1Asaa1hzT7bnrbvg36dq/vZO+/9+
0PuXR/W/v1f/95dDf3up/NkT2aS5qvPC3o5L54ymYar/2LQWi07qhwE7SThK
xZPpyTImFCmWkWAegbDUMLfCotD0wq2AFCDDJ8D6HjhaACi+xadcMyhtGVb0
YAfgSEVR9mypVL0BUjRzYZPSfB1NEjETYkkZzeAgxx8f90/djMTH6SFrqemd
FbWoBVRqBgBjGLTdJk1jxN4Rsbc9jnd+MN79NNH3rqfmtvyIq3adMn+Z/NjM
gb3JfTuTu3bNHD65JNCYE2/NnujYffvaobGWbYHyNYHqDe6yNHfJclfpykDt
umjN+rHGjImmbVPt2+9e2zl1NQeeCHaN1mXFm7dNde2Z7Nw53pF9vWtXommr
pyrTU53O5c22Fc0bq18fr8+4dXX7jdYt+vwVspNLndUZkaatibaMG51bgNTY
lTV3rma+r937keHAR/rdd1rXRCoW32hdc7tjXaRu1d2enK8jpb+7feVvj5v/
8W77X5+2/OFm3X+/1/P/fqr85yfajyc6hi8dbavM5Y3DdreBtypNghzGTFmD
RS3BRy2CJDwU30/50UsMOEQxk1KvH9Zoh3WsWRQMCYwU6kEt60DTcQq1jjoM
sV2CDwvbRw6/U6h64Iwjin6Vrl9gkztOrzYc1kcjPGtwgoObJiccY6PWYMAQ
8JOypZl39qQPdc6zYsjEpJeeQIl7pIcsfCGBNS/pfB56XhgJCG+UmbXtNmNb
SGj0mhojppoxQ3Hw2i5r857h4vVt+5I7dqe07Uxq2j5Tnb/UcmGlr3Jd7MoW
OBcGfLQ+M16zwXdxpbVwsat4mffiEt/F5SDSUPWG0eas8abMmx05sSubvTUb
wnUZ463Z481bE41ZiYbNY02Zo41Z4SvbQzUZfOF8T/mSWO26eMPWxwN7717N
MRWtUuYuhfjx1GVE6zdPtWfc68nG582rW14Zj70yHP6h9cSzoe2J2sV3u7ZM
taRNtax+rNj3ZbTi7896//fVwH89afvNVM3vb9X+4/3ef74c+NOj7p89Ggzp
ytqrTug0fSZeTlggNmkH1Np+ra4f6zrdoFo/YEAeZxzWc3KdfoAjvxtQDDfr
adp0BPGOaUsV8lYqyFP2zbG5UWoTJaxZYyc1v1E40zF5qZMCJaKb8/vmPar5
uPEvuSGo286ewWGFRwRlmvWQxLDU7yf6HOxRPht7fpAonUroyHQENknnN4aC
XCBocrvUJm7QqL6qGmzgVI1cf5l1IN/Secw6kCsrzezI29J4KK0+O7lzb4rs
yFxt7lzb+WWe8lX+irW+itWx6vWhiyvEC4vcpcu955c7SpaI+Ld0lQ8ao3bj
eHP27b79RKRV68KXN42370BYBHCAj6Lkla2hhi3eumxEWLFkobd8FTzu6dCe
R727EDFlxxfxJcst5WttVesm27NudWXf6sy8273tteHga8vxT/kjrxU7nnZv
eSrfeevqujudmx707/r59cb//UT5fz5S/vlR86/GS/9yt+G/3un667O+X99u
/tX9rg+v9yhb84f7WrT6QQBHqBllFlbEJgh4Obbr9ZRQc8YhKR2DJuH0/fQ0
jZkyMugHt0sZDnF+H4FodepobgJ6hh9hBUaaBZZ6R7HoDDJs13GQpgpyZP0g
fBzg4itqUBQ0UmuiNIkM3vb4dYGQQarqA1/2cBk9yEDtEza19FA/mJMyGjbp
DOqACbGXb0CbISVRGo1yAzegVV3TDl7WySqNfRdMw2XDTSdHeip6Ko+175oh
Oz5Xc3IulzcPCEIZukuWOksXRWpWhStXhCtX+suXmQtTHSWL4IOei6uDlSsi
VzLgibErm6I16SFklHDbpiyITGQcoZp1+Iw1ZABNsTpTdWquA7+9sNJ/edMz
xaFHA7t9VeuHTyxWnpqnO7dQKF011r51tGnjWFP6zc5tL7njHzlzP+KPgEh/
YD78qXDoUV/Wrfa178h3/vFx9//9VPGPD4b+/KQDDggW/fWNml/davjF1OVf
3On48b2BiLZUOdiA0KM3DGJI4Wg6A1CT6TladMwBsWCjTtrBIMO/nElOjMqP
cKxqTY33hgGQJ/kmJA0nI3vQwCr68BOlmmhToemBegGFKrVY71VrB7U6OVQl
zdpbNKbv00bJDUU/T9NAdgOb9zH9q2H+X+ESC3sSljpVECtxGVI/v1Rw+Ndc
HiIpTYtYlBrVNaWiXTtcb1Y36oZqTZpOxcVM6/k0vmiJ5sxc4dxCd+li4OUt
XRAqWzp2afXE5XVYsecvsBUtchQvc5QC3xXe0mX2EkoxaB3eWpkWqAWam32V
a2mpWB2sXovgONa4xVeXoTiZ6rqwzHFhte/KlndVB+CGYFrN2cUDR2dr8xZw
xSvGWzLGmtZfb04fbUh/R33kra/oY+vxT8zHvg4WfOE59Uyx8373ltfckb+9
0/3P10P/+Ej1j5fDf7xT/+uJ8q9DxT9NVP3mVvO/3+v4bKLzrqNSUDawOWst
oIGepBoRbtymtPAjgNLEDbPtgwZOhgUyBgMC7Fh+JzcAPm4QIAJBuCfwBTQI
cOBkfAJBljjIAPF0Wz4UJjEqC7XQsWal9GCFiT0i4aW3HzhAlSYb1QSgXoJh
O70lZtKfGKeXHkiP4kqN2VY2Ycem83jqkPexMOo2sOeGDP/qC5Xe0mC2EP/r
dd0WY6fZ1GtsPWkpWwb14ihbTRRatMB9foGndEG0ctnE5TXX6zfcat44fmW9
v3KF8/xiZPGAzHVxsaMoVcibZy1e4LiwmKi1YgXyRGAHwnSUrsBu3orV+Dfe
sCHauNVStNhbuiJQvd5Xt/Hx8L5n6v03r2VDHQ0cTdHlz1PnLQjVrbt1beuD
nkyIGSiWV7azH9lPvXXn/SRY8Ll49kP+2MPBnM/E/P96du1/Xg3982PlPz8c
+fXtxp+Pln/lK/zcW/hFqOLnt1pehi7dMpU4tfUuenxPCEXZPBd7QJge62DT
WNTcYpKD9BDykNSzZgNqzTJ8756EILmeXG8aYsUWhTRpy9J5ldTXB6Kj2q8w
Mq2LhOnijFQjpcY/Xs6mAJDxEakyfPW8WQvEsQOIlz0pQ2ag01NpHSxKUdiq
onfjuPTS3CJ7iQd7woU9aQ5L8AUssVHn6Jg7EaP2JFim0yF38F36ii2G8yv9
DZuR8QlF84XCBeb8ua6SBaHSRYm6lTeb0t8Z2PXO8P5Y/TpryUJbyUJ8Os8v
FSuXuS4utRXMs+SmWooW+qrXwA0Bsa14sbVoib14MdY95WlI4UO1613nV0Tr
1k91bAvVZ9zt2/FMe+zhwJ5bXTnyYyna3NnGokXhhs33ZfufK/Y97sq4fXXD
c82hD0zHPrWd/ipc9ImYBzTfUx/6KlT6H086/g7p8uEwQuG343U/jZd/4c3/
HEuw9G246qNg5aT6mEdTF2bvN6P3SMToSeHrN0KsQdpArwSJWnw+K1SKnT3H
RF3NSKuNKoGKnMOs1q2gqo4wjAQcP8G/SE94QW6lOqqKfNmGHag1nZJuNjXG
JmLUUCkULlkIo95Xkap29PKNiP1f72YBSao1QyBhSvdYZztNi5g1//+cI2t7
41icRTCVXuxAfXT+6SdTPH6jL2j0eqlcyR4G0dqHLqiKV6jOrTQDlLKViG7u
4vnOglni+bnhsoWxykU3G9e9rzrynvIgUgD7eQKXL5hrKVxgu7iEECxZyOcB
wcXOitX2oqWADzHUmDvXmg8PZe58YSXJnovLQaqTbVtjDRvHr2Y+UR2+fS0b
VuE4v0KTm4oMJdaSNdW953310Q/kO9+TZb9Q7n5Ps+cjy9EfB8594ix4aT3z
ynL627Ga/3zY/J9P2//xWv635/2/GK/+afTCp678t2Lhtzcuvw1XvA5U3zWc
9ihrExO++Bi9XQq3PD3jHLDQKziiVGZnLwez2p0SL0kzuTQVa7VqWJeFAS5A
/QMiPTUAdKDqIfh9Xr3Hq3eLWuhMh5OYGQgCR4Ym+SM1CHlULlHF3gNmkhrV
qEOMvZONaSGp44imX1kc5KefNqUWX43EvUzxUs/2v2o1UiiUZi0FQc1mhSCu
lOAH5JUOu8LedlBRuHQkd5GhaClGcqIxPVGzMly+KFS5NFK+KF619GbTpncG
9743svdx345g9Spr8Tz4KZebbCiYYy1Zai9daD63wFGR5qlYC1XjvLiSK1io
PzvbeDbZeHYWlA9ipb14IcB1n18YqFgOl4w3bXggQxa5+X7vdritoXDBWDO1
iIx2bHswvO+FZu/Hur1vtHteqfd+yh/6Qsx94yp4IeR+7Mj99VTd3x41/f5u
y99fyP78sOP3d+p/EilGjv9Dsfibsdq3ker3rCX3NMdFWTExp1/wstejIfQA
snjCOX5dhKiD8dPTuwmb+3uRDzOG60Gdwgep19etBYPROwfcBnrOKMjTm6ni
jtEx59SNgPQyKxwNEpHe+uLlTPygUnVVremGdmKT1yp6EwJ7CRhL4TWsT4Y8
XWpNsTng10r2PKlMUlBEpyYVq5MTUetZhKV5LgNJKexDOhnYmZVmszS7aoDl
+LxaUEpQ6LLUZfadWiA/S4IwUJM2dnl9tGZFtGbZaO2KRPWS8csrRuvW3u/I
fC7f83hwV6Jxk7tqpXBxsbWEfM1SuAhoGvIXOKs3RJsyE/UbI5c2wD3hg3BV
c/48c8FCZ8kKe+F8rFvzF0Lcui+uQMi73r5lvGnTre7s4JX15guL8e/7uiPX
r2271bfjFXfwY93ujzS7X2kOfWY69BPn0U+dZ98X8t+4i/5yv+n3t+qgPP/8
qO3P9xqB4NexCz8OlXwZKv169NLH4ep3hYKx/n1+deWd+7G7d0K3biJNNmOQ
pQeRIONFjzEWd41P+NgsnpEKlWboT7lWO4AUEiZNvSKijrU3G8zWYXAp4Gb+
60ImbncovQE9jjk6bo/GLbG4DduRr2EwvX5dMEQvOmCtC3BGNZw9GmNPsFLb
POV0LueIwz4Mq0DMNZqHXB49EnxcktQwhgWMbbZJr0nUM8MTr98Kh2MibGnq
RgjsLT0cJ72cJBLicPCQtlJVsPzasbkgUkfFan/1ykjNitH61WMNaVPN6281
rb3VlHajIe12W+bzod2Pundc79jmvrTWXrbUV73aX5PmqVztKF0C+rVUIE3Y
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
m6x4bjj8gTX3M/+5b8bLfn278Rd32v7jxcjfP1L9+m7Hv91o+FG0/MsbLc+8
1f7uPQ5ZPlwPI+B2aumlzaKOPaqjBVViNEzmfgPXB49jJU2ZzSFHlMQWK70o
jB7bAZT4CpERyjME/wrxELHhqInl70gndVBBkkmILh2lBi6VyzVss8rxE6dD
Sc8guy0092EcgmTC2em5Eo+RqUc1dCxO5BFVGHxAQC+0CZlDAco7IFbB4Rw3
otMRV2A3/BwyCW4ehBgOgDzN0rvi6YWufg75DgI6P1QnryQEnfVZt/t3vnGe
+zZe8daRd713982h3U/lu19rD34pHP/KnQtJ/5Y//KHu0Kvh7a+GdgeqVg8e
m6UuWKjMSzVeWOaoW8OXLXZVLfNULA1dWRWsWe68MNdRNt9UPMeUn8KdTRKK
Z9tK5gFEX8lcV+FsbylNQbZkz+g9MUd3cZmncX2wI9vTsAkpwyvLyU8cZz4w
nnhlO/vDQNF3k2X/59Hlr8JF7+oOfiqWfDtR+cubjb+81/m7J31/fan8w7P+
n01d+dFE3Ufekrejlx9Yi52dOxzKcq9H7Q/q6d1Efl56+Q+9xNupgnr0+9VB
vyYS0QUgA5yUF+iNA4DMzA+q1NfgmFiB/rTwfT4PzRJSVg7VGiXxD/0J/R/0
60JBg+ij1yXBN8G3cEzqbRbkZrMSboUsPj5KBRl6eoi9fMzlIiVMQlSEExk9
bi4+5pIK1JPXPfhEKIQXIzcENDQv6VZL/VEUwXmYxxCsBRfvceuZ8Yw4rRq3
U49LEpT18vKtQkOOs27jzd7tH1kLvgyVvTaevtm3Z/La9oeDOc/lez4zH/mJ
mPfWePAj3d43+gPvdK1/2ps13pYxdHKB7ETq8KkULbK/6jRj6ULh4kI7vKx6
sa9qgfNiqq00VShOsZyby+Unmwpnm4vmWotTkVa4C2c6LsyyFM1v3j5j8OQc
U+UqZ/16sXkLX7020r7lpfXMl+Hzn9pPfKA7CH/8SfjCbyfLX9tzn9tOvg1e
gBb97cPOv7w78Ofng4APEfDLsUtvoxUfOAtfB6pu88W2nuM2cxfs0+PXUY9x
0AhJA7+Q3qCO28fIgwbhpOAuIy+nQqhNTS+djpiltzzRK1+YFoV7IirB7wJh
5HdAjXgMwwv3QVSFdiXcLfKgR4PdvH6tKI4AWSK9gAWyX3qAi/VR0JGD7A3/
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
9kTUGvQRcVxOOXZOOcKv9gcJdOw8GlDHgvqAX2MxSaHeeC98LzKd1aagJ0mt
SsAHxNfvvQGd7Xat0wnG0f299I00Ti18FOOnx9loviXmQNjBZlqtEOkeJlat
RcYXYM9mgxIrCPvnSrs37a3dmVu7J7+x7vz5+bkTj7ytz2suPLDWveZqDnKL
OX1VJeea8w/VFp8s764sbbtwoeVEfvXuDWOnt92Sn//N05f/7v6ch9+allG+
Jatmy55yLJszy7dhJe3U5uyanXurNmeWZhTW7z9cm5VfX1lc01TR0NPUeHmg
fay7ubOlsbqsFr+O9HbPjvexJi5NDV0cv9RVUdYy2dfmFlSvmdvuR8c+f0b0
5dOsD5I9H8S7Pw63f+iq+NBd9quV7h+fGf+Pd2TvhC7yy3bAnX57bfj7G6P/
4wH38ysjSb8c3szrksN+oB85HRIUcySkoznMiBHg0gWCsB1KBa7hV7CGWh79
xwcbzDk8p89HF3foSw88BhQ8DHwy7sQ+Y1ELlA0YgYnUT0OWUMCCPYBEaGRg
h92hQPNFSMEbiTJwsB69Qcc36sWQXyCIkVepeMiDSiUf0MDbGEzUMYFdqsPS
bdiBAP2PknDY4XHpjCYJhBfd1kf/O4Aetgr4zHTVXiccGhzblVWTllO7I6dm
d05jb01RYOLwW56GT2I9ny4N/urmxGvRqdz9tWiR6Xn1+wpqcgsr9h+uLz14
uDl7g6g+4xV73be3Z9+IDRWfrtmdW59R0Lglq2rr3pqt2dU7cut25NTuzi7d
suvYlj1ntmVXbMuuwgdl5jcVHmk9daqlsrTlfHHjmVNNhQeqTpysr6pq62hu
r6lpwc+mpq6Cg9VdDXUeYd2ate25wOD7a5yv74p++dTkp8meJ8m2j5jKR9Zz
XwVrfrwz9s+vsH98ibcgOA6TAz3/6ZnZvz6Ufrk8mHDzYhED7ApyOuW7IF2G
ACPQX+xONWCFWi7NO9ArI3FralgMsYARQYP+KfZ1+ifRi0sM8kg8mrrSFKVv
3Ud+jyfssOup+4F1ICbEMxgypx6RoOnKRNyCnXjsErRa1EM4SDf0AhegD3ra
rcr1CTSrlebHYIwRN4AXgLY51Gis60ghetCzh2YxE9CgJJBKEEDokVUHxcyA
H8VmddpVajXfqONOTk7vyW1IL6zfk9dcVlKn7z/mvJj7jLr4g2jPk8XR3z8/
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
NEzl4XbIbRY+Doa+QRq91a9MRM3XVjzL8ybUJFoAPg6HDU+FRj880O+Yrvxs
vu8P9/i/vTny5/tc7mAfTEvekTakDCgnUIAV2Zh2YUN6MSh2tKh8hZn94U3L
v7xr/K9PjP/3S/u/vK3840P1f/uQWWLkx47XpWXXpBVUwqIAu20ZpdvSTu/Y
W7ol4zya4La9ZdsyiremH8/IubBnX8mujOL07HPAd29u5d78yrS953bvPbEn
80xLTaWe28iI6wKiC56JImt/pq4nzT1x+GlTy5uxPmT2j6ItXy/1/ebW6O+e
GvzLS6w3At0v2xt+ujfz5xdmfrw5+MEqO5EwLiGww6XE9ORJ3GJUrz+ogVdJ
DZce8RxZHhsg5dEkjF2CAcGW0CWIYTJE9xCGkM2DakolDiGEzu2UgK0BRg+W
kQjb0ArhSFWIJBRbnEqzSYCMCcnFrtDF6AsWfCr6tl4pSyabUyh463EeMRB5
HNyEetNNxX5bakZdjZCI5G6li4Ziq0mMQ4KhQgONR0iNobH4FOwNXQDdE/sH
tc16yekzXT0tTfcttV+vTcAJ/OkuFwhOtNXuyarKOVCbd6BuX2F90anOgYHx
i/3Dp892ZBZU79hTMj3c+7P7qp8eav94n/OnB9x/f6T61zck/+dTy799xjhV
U9n7ytP3laZllaTvKwOIu3PLwFzwDjjuzLqQjhaZcX5b+iksW7cf2bjtwI6M
c9t25m/ZnLZjV96WbTn7so501peJp+v0s3Xa8WLb6H7Dxb2G3gzTpYJrhsY3
oj3vx/o+Weijr3y/0vvd6sCfn2e9N993x1z/x+dZP9zo+2W09je3p28kJGG/
OBJAzhJ63DLGxV+MaQMBecCnAGp0ATesCnrl4A4GCiNvNfGBkd8jDPkkIZ8s
4OHhLV63xONU0JNKCSPdTBjWIAn66TkX9DgILA0pxnOdbka9QK8VghSAla60
2qXY4XqUkMvZ8JAyGQebwZQi7iXnnUh8Xh9dcF9a9oXCFtRJ0KsMMSqkEvTf
1QXbtWXr9RXH6pJ5KalFXakUbLWSo5TPwaDigBEzISMg6fHTHbMXa97x1v/0
qvSfXxX888v8v7wktAsH+vr6JgYvctkjeg0X50i2bd4IweFxWYhv+3LKRlpL
7vo63k70YRj/84npf/8i9Mubl//zZ66E/XJjPcW9Yyeqz5xqPFZUe+RoVfG5
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
    "], {{0, 100}, {150, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageResolution -> {300, 300}, Interleaving -> 
    True, MetaInformation -> 
    Association[
     "Source" -> 
      "http://www.houstonpettalk.com/pet_ownership/golden-retriever-rescue-\
july-celebration/", "URL" -> 
      "http://www.wolframcdn.com/waimage/hset050/19c/\
19cb768729627f0c62415dbd84896b60_v001s.jpg"]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{150, 100},
  PlotRange->{{0, 150}, {0, 100}}]], "Output",
 CellChangeTimes->{
  3.727217714907235*^9},ExpressionUUID->"1f7ff1ef-82d7-49a4-bc07-\
9e86318c4711"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "xalapa", Typeset`newq$$ = "xalapa", 
   Typeset`chosen$$ = 
   "Entity[\"City\", {\"Xalapa\", \"Veracruz\", \"Mexico\"}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = True, 
     WolframAlphaClient`Private`assumptionsQ$$ = True}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ButtonBox[
            TagBox[
             TooltipBox[
              StyleBox["\<\"\[RightGuillemet]\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0.5, 0],
               FrontFaceColor->RGBColor[1, 0.5, 0],
               BackFaceColor->RGBColor[1, 0.5, 0],
               GraphicsColor->RGBColor[1, 0.5, 0],
               FontColor->RGBColor[1, 0.5, 0]],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource[
                "WAStrings", "InterpretationAssumptions"], StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource[
               "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
            Appearance->None,
            BaselinePosition->Baseline,
            ButtonFunction:>(Quiet[
               WolframAlpha[]]; Typeset`open$$ = True; 
             WolframAlphaClient`Private`extrudeFromFastParse["xalapa", 
               Defer[
                Entity["City", {"Xalapa", "Veracruz", "Mexico"}]], 
               "Fast parse"]; Typeset`open$$ = False),
            ContentPadding->False,
            Evaluator->Automatic,
            Method->"Queued"], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{10., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{10., {4., 7.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse["xalapa", 
                  Defer[
                   Entity["City", {"Xalapa", "Veracruz", "Mexico"}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 TemplateBox[{"\"Xalapa\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Xalapa\"", ",", "\"Veracruz\"", ",", "\"Mexico\""}], 
                    "}"}]}], "]"}],
                   "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \\\"Veracruz\\\", \
\\\"Mexico\\\"}]\"","\"city\""},
                  "Entity"],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 TemplateBox[{"\"Xalapa\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Xalapa\"", ",", "\"Veracruz\"", ",", "\"Mexico\""}], 
                    "}"}]}], "]"}],
                   "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \\\"Veracruz\\\", \
\\\"Mexico\\\"}]\"","\"city\""},
                  "Entity"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    TemplateBox[{"\"Xalapa\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Xalapa\"", ",", "\"Veracruz\"", ",", 
                    "\"Mexico\""}], "}"}]}], "]"}], 
                    "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \
\\\"Veracruz\\\", \\\"Mexico\\\"}]\"", "\"city\""}, "Entity"]], "Input"], 
                  All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
           "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = True}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ButtonBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\"\[RightGuillemet]\"\>",
                   StripOnInput->False,
                   LineColor->RGBColor[1, 0.5, 0],
                   FrontFaceColor->RGBColor[1, 0.5, 0],
                   BackFaceColor->RGBColor[1, 0.5, 0],
                   GraphicsColor->RGBColor[1, 0.5, 0],
                   FontColor->RGBColor[1, 0.5, 0]],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "InterpretationAssumptions"], StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource[
                   "WAStrings", "InterpretationAssumptions"]], "Tooltip"]& ],
                Appearance->None,
                BaselinePosition->Baseline,
                ButtonFunction:>(Quiet[
                   WolframAlpha[]]; Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse["xalapa", 
                   Defer[
                    Entity["City", {"Xalapa", "Veracruz", "Mexico"}]], 
                   "Fast parse"]; Typeset`open$$ = False),
                ContentPadding->False,
                Evaluator->Automatic,
                Method->"Queued"], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "xalapa", 
                    Defer[
                    Entity["City", {"Xalapa", "Veracruz", "Mexico"}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    TemplateBox[{"\"Xalapa\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Xalapa\"", ",", "\"Veracruz\"", ",", 
                    "\"Mexico\""}], "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \
\\\"Veracruz\\\", \\\"Mexico\\\"}]\"","\"city\""},
                    "Entity"],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    TemplateBox[{"\"Xalapa\"",RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Xalapa\"", ",", "\"Veracruz\"", ",", 
                    "\"Mexico\""}], "}"}]}], "]"}],
                    "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \
\\\"Veracruz\\\", \\\"Mexico\\\"}]\"","\"city\""},
                    "Entity"],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    TemplateBox[{"\"Xalapa\"", 
                    RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"\"Xalapa\"", ",", "\"Veracruz\"", ",", 
                    "\"Mexico\""}], "}"}]}], "]"}], 
                    "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \
\\\"Veracruz\\\", \\\"Mexico\\\"}]\"", "\"city\""}, "Entity"]], "Input"], 
                    All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]", 
               "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"8df7d435-c7bf-439d-a462-8721e7ec115f"],

Cell[BoxData[
 TemplateBox[{"\"Xalapa\"",RowBox[{"Entity", "[", 
     RowBox[{"\"City\"", ",", 
       RowBox[{"{", 
         RowBox[{"\"Xalapa\"", ",", "\"Veracruz\"", ",", "\"Mexico\""}], 
         "}"}]}], "]"}],
   "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \\\"Veracruz\\\", \
\\\"Mexico\\\"}]\"","\"city\""},
  "Entity"]], "Output",
 CellChangeTimes->{
  3.7272177150021677`*^9},ExpressionUUID->"96824841-fd58-48ae-aa49-\
dbc025960823"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CityData", "[", 
  RowBox[{
   TemplateBox[{"\"Xalapa\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Xalapa\"", ",", "\"Veracruz\"", ",", "\"Mexico\""}], 
           "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \\\"Veracruz\\\", \
\\\"Mexico\\\"}]\"","\"city\""},
    "Entity"], ",", "\"\<Coordinates\>\""}], "]"}]], "Input",
 NumberMarks->False,ExpressionUUID->"5eb3281b-5bb8-48a8-ac03-7d33dd4360f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19.53`", ",", 
   RowBox[{"-", "96.92`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177374024057`*^9},ExpressionUUID->"ab494f9c-b000-4c2e-800f-\
3c20734f77c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\"Xalapa\"",RowBox[{"Entity", "[", 
      RowBox[{"\"City\"", ",", 
        RowBox[{"{", 
          RowBox[{"\"Xalapa\"", ",", "\"Veracruz\"", ",", "\"Mexico\""}], 
          "}"}]}], "]"}],
    "\"Entity[\\\"City\\\", {\\\"Xalapa\\\", \\\"Veracruz\\\", \
\\\"Mexico\\\"}]\"","\"city\""},
   "Entity"], "[", "\"\<Population\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.716237062035874*^9, 
  3.716237065657889*^9}},ExpressionUUID->"f4bfc391-10ec-46ce-b51f-\
9e1b6d1c8c75"],

Cell[BoxData[
 TemplateBox[{"387879","\"people\"","people","\"People\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.72721774051381*^9},ExpressionUUID->"03a73e44-9b7f-4195-9f8c-bf7131bd6ab1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<Country\>\"", ",", "\"\<Countries\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.716237173892008*^9, 3.716237176717861*^9}, {
  3.716237213131706*^9, 
  3.716237252088443*^9}},ExpressionUUID->"3c9afc06-d302-4ba1-b142-\
024dd537a545"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Afghanistan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Aland Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"AlandIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"AlandIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Albania\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"American Samoa\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Andorra\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Angola\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Anguilla\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Antigua and Barbuda\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Argentina\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Armenia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Aruba\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Australia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Austria\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Azerbaijan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bahamas\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bahrain\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bangladesh\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Barbados\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belarus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belgium\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Belize\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Benin\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bermuda\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bhutan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bolivia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Caribbean Netherlands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BonaireSintEustatiusAndSaba\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"BonaireSintEustatiusAndSaba\\\"]\"",
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bosnia and Herzegovina\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Botswana\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bouvet Island\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BouvetIsland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"BouvetIsland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Brazil\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"British Indian Ocean Territory\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BritishIndianOceanTerritory\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"BritishIndianOceanTerritory\\\"]\"",
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"British Virgin Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"BritishVirginIslands\\\"]\"",
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Brunei\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bulgaria\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Burkina Faso\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Burundi\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cambodia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cameroon\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Canada\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cape Verde\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cayman Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Central African Republic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\"",
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chad\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Chile\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"China\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"China\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"China\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Christmas Island\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"ChristmasIsland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"ChristmasIsland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cocos Keeling Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CocosKeelingIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"CocosKeelingIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Colombia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Comoros\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cook Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Costa Rica\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Croatia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cuba\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Curacao\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Curacao\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Curacao\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Cyprus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Czech Republic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Democratic Republic of the Congo\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"DemocraticRepublicCongo\\\"]\"",
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Denmark\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Djibouti\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Djibouti\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Djibouti\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dominica\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Dominica\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Dominica\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Dominican Republic\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"DominicanRepublic\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"DominicanRepublic\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"East Timor\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ecuador\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Egypt\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"El Salvador\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"ElSalvador\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"ElSalvador\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Equatorial Guinea\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"EquatorialGuinea\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"EquatorialGuinea\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Eritrea\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Eritrea\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Eritrea\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Estonia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ethiopia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ethiopia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Ethiopia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Falkland Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FalklandIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"FalklandIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Faroe Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FaroeIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"FaroeIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fiji\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Fiji\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Fiji\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Finland\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"French Guiana\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"French Polynesia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FrenchPolynesia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"FrenchPolynesia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"French Southern And Antarctic lands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"FrenchSouthernAndAntarcticLands\""}], 
       "]"}],"\"Entity[\\\"Country\\\", \\\"FrenchSouthernAndAntarcticLands\\\
\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gabon\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Gabon\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Gabon\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gambia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Gambia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Gambia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gaza Strip\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Georgia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Germany\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ghana\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ghana\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Ghana\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Gibraltar\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Gibraltar\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Gibraltar\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Greece\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Greenland\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Greenland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Greenland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Grenada\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Grenada\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Grenada\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guadeloupe\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guadeloupe\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Guadeloupe\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guam\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guam\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Guam\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guatemala\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guernsey\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guernsey\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Guernsey\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guinea\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guinea\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Guinea\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guinea-Bissau\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"GuineaBissau\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"GuineaBissau\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Guyana\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Haiti\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Haiti\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Haiti\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Honduras\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Honduras\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Honduras\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hong Kong\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hungary\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iceland\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"India\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"India\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Indonesia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iran\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Iraq\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ireland\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Isle of Man\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"IsleOfMan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"IsleOfMan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Israel\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ivory Coast\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jamaica\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Jamaica\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Jamaica\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Japan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jersey\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Jersey\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Jersey\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jordan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kazakhstan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kenya\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kenya\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Kenya\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kiribati\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kiribati\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Kiribati\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kosovo\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kosovo\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Kosovo\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kuwait\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kyrgyzstan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Laos\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Latvia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lebanon\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lesotho\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lesotho\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Lesotho\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Liberia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Liberia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Liberia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Liechtenstein\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Lithuania\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Luxembourg\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Macau\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Macedonia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Madagascar\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Madagascar\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Madagascar\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malawi\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malawi\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Malawi\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malaysia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Maldives\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Maldives\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Maldives\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mali\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Malta\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Marshall Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"MarshallIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"MarshallIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Martinique\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Martinique\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Martinique\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mauritius\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mauritius\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mauritius\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mayotte\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mayotte\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mayotte\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mexico\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Micronesia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Micronesia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Micronesia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Moldova\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Moldova\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Moldova\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Monaco\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mongolia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Montenegro\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Montserrat\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Montserrat\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Montserrat\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mozambique\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Myanmar\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Namibia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nauru\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Nauru\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Nauru\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nepal\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Netherlands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Caledonia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NewCaledonia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"NewCaledonia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"New Zealand\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NewZealand\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"NewZealand\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nicaragua\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Nicaragua\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Nicaragua\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Niger\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Nigeria\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Niue\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Niue\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Niue\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norfolk Island\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NorfolkIsland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"NorfolkIsland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Northern Mariana Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NorthernMarianaIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"NorthernMarianaIslands\\\"]\"",
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"North Korea\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Norway\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Oman\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pakistan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Palau\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Palau\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Palau\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Panama\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Panama\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Panama\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Papua New Guinea\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Paraguay\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Peru\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Philippines\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Philippines\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Philippines\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Pitcairn Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"PitcairnIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"PitcairnIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Poland\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Portugal\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Puerto Rico\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"PuertoRico\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"PuertoRico\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Qatar\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Republic of the Congo\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"R\[EAcute]union\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Reunion\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Reunion\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Romania\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Russia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Rwanda\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Rwanda\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Rwanda\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Barthelemy\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintBarthelemy\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaintBarthelemy\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Saint Helena, Ascension and Tristan da Cunha\"",
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintHelena\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaintHelena\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Kitts and Nevis\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintKittsNevis\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaintKittsNevis\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Lucia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintLucia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaintLucia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Martin\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintMartin\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaintMartin\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saint Pierre and Miquelon\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintPierreMiquelon\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaintPierreMiquelon\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"Saint Vincent and the Grenadines\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaintVincentGrenadines\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaintVincentGrenadines\\\"]\"",
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Samoa\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Samoa\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Samoa\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"San Marino\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SanMarino\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SanMarino\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaoTomePrincipe\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaoTomePrincipe\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saudi Arabia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Senegal\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Senegal\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Senegal\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Serbia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Seychelles\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sierra Leone\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Singapore\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sint Maarten\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SintMaarten\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SintMaarten\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovakia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Slovenia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Solomon Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Somalia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Africa\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"South Georgia and the South Sandwich Islands\"",
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"Country\"", ",", "\"SouthGeorgiaAndTheSouthSandwichIslands\""}], 
       "]"}],"\"Entity[\\\"Country\\\", \
\\\"SouthGeorgiaAndTheSouthSandwichIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Korea\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"South Sudan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sri Lanka\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sudan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Suriname\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Svalbard\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Svalbard\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Svalbard\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Swaziland\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Sweden\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Switzerland\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Syria\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Taiwan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tajikistan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tanzania\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Thailand\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Togo\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tokelau\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tokelau\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Tokelau\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tonga\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Trinidad and Tobago\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Turkey\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Turkmenistan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Turks and Caicos Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"TurksCaicosIslands\\\"]\"","\"country\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"Tuvalu\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Uganda\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ukraine\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United Arab Emirates\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"","\"country\""},
    
    "Entity"], ",", 
   TemplateBox[{"\"United Kingdom\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{
    "\"United States Minor Outlying Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStatesMinorOutlyingIslands\""}], 
       "]"}],"\"Entity[\\\"Country\\\", \
\\\"UnitedStatesMinorOutlyingIslands\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"United States Virgin Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"UnitedStatesVirginIslands\\\"]\"",
     "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Uruguay\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Uzbekistan\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vanuatu\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vatican City\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Venezuela\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vietnam\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Wallis and Futuna Islands\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"West Bank\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Yemen\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Zambia\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"","\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Zimbabwe\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"","\"country\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217743300975*^9},ExpressionUUID->"734042fc-39d6-4be7-a191-\
6dcfc849fa08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", "\"\<Planet\>\"", "]"}]], "Input",ExpressionUUID->"e821a287-53eb-4ea7-b6e9-a45d0e4f0fab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Mercury\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Mercury\""}], "]"}],
     "\"Entity[\\\"Planet\\\", \\\"Mercury\\\"]\"","\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Venus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Venus\""}], "]"}],
     "\"Entity[\\\"Planet\\\", \\\"Venus\\\"]\"","\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Earth\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}],
     "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"","\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Mars\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Mars\""}], "]"}],
     "\"Entity[\\\"Planet\\\", \\\"Mars\\\"]\"","\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Jupiter\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Jupiter\""}], "]"}],
     "\"Entity[\\\"Planet\\\", \\\"Jupiter\\\"]\"","\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Saturn\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Saturn\""}], "]"}],
     "\"Entity[\\\"Planet\\\", \\\"Saturn\\\"]\"","\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Uranus\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Uranus\""}], "]"}],
     "\"Entity[\\\"Planet\\\", \\\"Uranus\\\"]\"","\"planet\""},
    "Entity"], ",", 
   TemplateBox[{"\"Neptune\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Planet\"", ",", "\"Neptune\""}], "]"}],
     "\"Entity[\\\"Planet\\\", \\\"Neptune\\\"]\"","\"planet\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217745148919*^9},ExpressionUUID->"442ff9b3-bf25-4860-ab10-\
160278af46d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactivo", "Subchapter",
 CellChangeTimes->{{3.716234546090733*^9, 
  3.7162345484346733`*^9}},ExpressionUUID->"d4b72b2c-48c5-4cce-8ecc-\
2289aac5c629"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"Range", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.716237608421883*^9, 
  3.716237616363872*^9}},ExpressionUUID->"aac81c96-8bb2-4df1-bbb7-\
d970306dc279"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{{3.72721774550695*^9, 
  3.727217769518125*^9}},ExpressionUUID->"5e0642bb-66e7-4c19-9630-\
25bbdda09567"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "^", "i"}], "&"}], ",", "a"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162376202188253`*^9, 3.716237642355*^9}, {
  3.716242406567369*^9, 3.716242406773076*^9}, {3.727217800393055*^9, 
  3.727217800566128*^9}},ExpressionUUID->"364b02d1-bc5b-4c9c-ac3c-\
b970e3dcff06"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "^", "i"}], "&"}], ",", "a"}], "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "11"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7162376635065393`*^9, 3.716237700538426*^9}, {
  3.7162423931111603`*^9, 3.716242395426639*^9}, {3.727217809848872*^9, 
  3.727217810054175*^9}},ExpressionUUID->"39c70932-3cd9-49ab-b869-\
a2a8d16ef858"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Sintaxis b\[AAcute]sica y funciones", "Chapter",
 CellChangeTimes->{{3.7161565122882423`*^9, 3.716156517496114*^9}, 
   3.727299237508534*^9},ExpressionUUID->"ed36cafc-f2c2-4672-b9c5-\
ff075130d833"],

Cell[CellGroupData[{

Cell["Expresiones", "Subchapter",
 CellChangeTimes->{{3.716247116898209*^9, 
  3.716247125576119*^9}},ExpressionUUID->"4dae9897-b6d1-47af-b697-\
4f515596be7b"],

Cell[TextData[{
 "En la interfaz notebook de ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " existen dos tipos de entrada: c\[OAcute]digo y texto. Las opciones para \
alternar entre c\[OAcute]digo y texto se encuentran en Format -> Style. El c\
\[OAcute]digo se puede ejecutar con Shift+Enter. La interfaz de notebook act\
\[UAcute]a como un front- end, que se encarga de enviar el c\[OAcute]digo \
ejecutado al kernel."
}], "Text",
 CellChangeTimes->{{3.7162383462823887`*^9, 3.716238444266582*^9}, {
   3.716238483987343*^9, 3.716238536899379*^9}, 
   3.727299962063347*^9},ExpressionUUID->"9d7e0e56-e36e-4a74-9fcb-\
2e271d496a0d"],

Cell["\<\
En el lenguaje Wolfram todo son expresiones. Las expresiones pueden consistir \
en n\[UAcute]meros como:\
\>", "Text",
 CellChangeTimes->{{3.716238835032655*^9, 
  3.716238869392926*^9}},ExpressionUUID->"ccd27eaf-e077-422a-a0a3-\
9876c8de9719"],

Cell["Enteros", "Text",
 CellChangeTimes->{{3.716238866576326*^9, 
  3.716238867208621*^9}},ExpressionUUID->"3041c4f6-c629-49ce-a6d7-\
aa330ffc6029"],

Cell[CellGroupData[{

Cell[BoxData["5"], "Input",
 CellChangeTimes->{
  3.7162388517459097`*^9},ExpressionUUID->"504b63d0-4540-46ff-ad3f-\
4968837f569a"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.72721774723839*^9},ExpressionUUID->"1a294385-325d-4985-a6c7-ee8ed40bf526"]
}, Open  ]],

Cell["N\[UAcute]meros reales", "Text",
 CellChangeTimes->{{3.7162388886322603`*^9, 
  3.716238890648501*^9}},ExpressionUUID->"0b40fc86-22d9-48fc-92f3-\
6ff8658bcf58"],

Cell[CellGroupData[{

Cell[BoxData["230.4"], "Input",
 CellChangeTimes->{{3.716238858530176*^9, 
  3.716238859664877*^9}},ExpressionUUID->"8485a129-232d-40b9-b076-\
d6095b1513fc"],

Cell[BoxData["230.4`"], "Output",
 CellChangeTimes->{
  3.7272177472936497`*^9},ExpressionUUID->"4edd375d-ba55-4abb-a2f7-\
761546c58d2e"]
}, Open  ]],

Cell["N\[UAcute]meros complejos", "Text",
 CellChangeTimes->{{3.716238896760096*^9, 
  3.716238900368396*^9}},ExpressionUUID->"2d6afec4-2a1f-4125-aab7-\
a90b675538ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "+", "\[ImaginaryI]"}]], "Input",
 CellChangeTimes->{{3.716238902441689*^9, 
  3.716238924036069*^9}},ExpressionUUID->"54023c2f-cc9c-4ff8-9ad4-\
13d450fc3459"],

Cell[BoxData[
 RowBox[{"2", "+", "\[ImaginaryI]"}]], "Output",
 CellChangeTimes->{
  3.7272177473415117`*^9},ExpressionUUID->"c8f39346-38c1-417f-95a4-\
39ea4142fa1d"]
}, Open  ]],

Cell["Racionales", "Text",
 CellChangeTimes->{{3.7162389283035717`*^9, 
  3.716238929600278*^9}},ExpressionUUID->"e13c3d26-505c-42b5-9978-\
21303e851263"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "/", "2"}]], "Input",
 CellChangeTimes->{{3.7162389310094213`*^9, 
  3.716238940634363*^9}},ExpressionUUID->"fe878ccb-1f5d-41cc-8e1c-\
5edf78e2f06c"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{
  3.727217747383725*^9},ExpressionUUID->"482de4b1-6f66-45cf-bec1-\
81c96caf6001"]
}, Open  ]],

Cell["Cadenas de texto:", "Text",
 CellChangeTimes->{{3.716242050355884*^9, 
  3.716242054544404*^9}},ExpressionUUID->"f4fa3d60-e065-46e0-993c-\
ce774f775d13"],

Cell[CellGroupData[{

Cell[BoxData["\"\<Hello world\>\""], "Input",
 CellChangeTimes->{{3.716242057075489*^9, 
  3.7162420604487886`*^9}},ExpressionUUID->"68aba1a9-f386-4aaa-b738-\
8fa28ff9a1e5"],

Cell[BoxData["\<\"Hello world\"\>"], "Output",
 CellChangeTimes->{
  3.7272177474175053`*^9},ExpressionUUID->"a346f3e2-e4ab-425f-8930-\
7ff66ace51ab"]
}, Open  ]],

Cell["Y s\[IAcute]mbolos, los cuales se pueden asignar", "Text",
 CellChangeTimes->{{3.716242068401168*^9, 3.716242074513523*^9}, {
  3.716316571764583*^9, 
  3.716316577060268*^9}},ExpressionUUID->"2afca0cb-0632-48ab-b13a-\
40e2a8cc2566"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{{3.716242076222373*^9, 3.716242081894771*^9}, {
  3.716242188598565*^9, 
  3.716242189045506*^9}},ExpressionUUID->"f60cc8df-c5ef-4307-9185-\
3acc51497a5f"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{
  3.72721774745188*^9},ExpressionUUID->"7e76e48f-cc0c-4572-9a16-a8a0bab78d22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]", " ", "=", " ", "1"}]], "Input",
 CellChangeTimes->{{3.716316585342005*^9, 3.7163165861244383`*^9}, {
  3.7163167121490307`*^9, 
  3.716316712626567*^9}},ExpressionUUID->"b76d31f4-ab38-44c1-a990-\
178dd3e6110a"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.72721774748528*^9},ExpressionUUID->"1ce9f98e-27d9-46e7-acf4-bbe80154059b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[Alpha]"], "Input",
 CellChangeTimes->{
  3.716316588749981*^9, {3.716316714867525*^9, 
   3.716316715431378*^9}},ExpressionUUID->"9d45fb3b-5d77-4ff9-bd5e-\
9cebb303798e"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.7272177475189743`*^9},ExpressionUUID->"8cbb2f06-31a4-4942-b56c-\
d281f25ec997"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nota 1", "Item",
 CellChangeTimes->{{3.727298602523395*^9, 3.7272986032035007`*^9}, {
  3.7272986595069723`*^9, 3.727298669450727*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"5e006988-f0d7-4aa3-80fa-3344600cad72"],

Cell["\<\
Para introducir los s\[IAcute]mbolos especiales se usa la tecla Esc. Por \
ejemplo, para \[Alpha] se pulsa Esc + a + Esc.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.716326123358204*^9, 3.71632615977426*^9}, 
   3.7272986065400887`*^9, 3.727298654987351*^9},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"45be4bf4-aeb3-4d0b-b91f-d26ee66572a6"],

Cell["Nota 2", "Item",
 CellChangeTimes->{{3.727298678010762*^9, 3.727298678922492*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"954120c9-f172-4f41-95b9-4c70ee505ff0"],

Cell["\<\
Es muy importante hacer notar que como todos son expresiones, todo, incluso \
los s\[IAcute]mbolos. Es por eso que es posible dar un s\[IAcute]mbolo no \
asignado como argumento de una funci\[OAcute]n. En lenguajes compilados como \
C++ esto ser\[IAcute]a imposible.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.7163164437500973`*^9, 3.7163164961650333`*^9}, {
  3.716316541797196*^9, 3.7163165484849157`*^9}, {3.716316595332456*^9, 
  3.716316618460299*^9}, {3.7272735159449244`*^9, 3.727273532528899*^9}, {
  3.7272987430150013`*^9, 3.727298769916567*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"e859f8d1-1e5f-430e-99a3-54e46b4a5f1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.716316648436906*^9, 3.7163166495798073`*^9}, {
   3.727298717890273*^9, 3.727298722834893*^9}, 3.727298764764076*^9},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"47b6c6d6-d293-476f-a8ca-717a029d5e7a"],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellChangeTimes->{
  3.7272177477333813`*^9, {3.727298720420638*^9, 3.727298723931348*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"723ab268-2897-499d-b0d8-81ddcdb73ea5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"f", ",", "x", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.716316626164731*^9, 3.7163166543156652`*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"49193b8c-b7ca-4674-a35f-f95a54048ee3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7272177477461863`*^9},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"236f9ba2-34f1-44d5-b219-61b0466de402"]
}, Open  ]],

Cell["\<\
Al asignar una expresi\[OAcute]n esta se guarda en el espacio global del \
kernel. Si es necesario se puede borrar la definici\[OAcute]n usando la funci\
\[OAcute]n Clear.\
\>", "Text",
 CellChangeTimes->{{3.716326084687027*^9, 
  3.716326113463048*^9}},ExpressionUUID->"83c7c61b-ac6f-463a-97bb-\
73e5cb65c55c"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Alpha]", "]"}]], "Input",
 CellChangeTimes->{{3.716326114458864*^9, 
  3.716326116518772*^9}},ExpressionUUID->"4cdba9ed-f199-4771-8026-\
26ce80707943"],

Cell["\<\
Para realizar c\[AAcute]lculos num\[EAcute]ricos no es recomendable el uso de \
n\[UAcute]meros racionales. Para convertir estos en n\[UAcute]meros reales se \
utiliza la funci\[OAcute]n N.\
\>", "Text",
 CellChangeTimes->{{3.71632627602814*^9, 
  3.7163263125640507`*^9}},ExpressionUUID->"169eb46a-4ee5-44aa-b825-\
4a8e0586bdbc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"4", "/", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.71632631408873*^9, 
  3.716326318172282*^9}},ExpressionUUID->"1bda96b0-506c-4eb8-8e66-\
4a3c9d2a8e13"],

Cell[BoxData["0.4444444444444444`"], "Output",
 CellChangeTimes->{
  3.7272177478087463`*^9},ExpressionUUID->"9ba7b3fe-58c9-4585-be7e-\
9680fcbe9c6d"]
}, Open  ]],

Cell[TextData[{
 "Para ocultar el resultado escribimos punto y coma al final del ",
 StyleBox["statement",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.688416073461574*^9, 3.68841611473815*^9}, {
  3.727122492000235*^9, 
  3.7271224978087187`*^9}},ExpressionUUID->"0a5df58e-ce26-4ad2-9cae-\
ecc63f1041b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"var", " ", "=", " ", "6"}], ";"}]], "Input",
 CellChangeTimes->{{3.688416119380911*^9, 3.688416124727611*^9}, {
  3.7271225425284367`*^9, 
  3.727122542879533*^9}},ExpressionUUID->"d9d2051a-360e-463f-83a9-\
b57c71514e10"]
}, Closed]],

Cell[CellGroupData[{

Cell["Propiedades de las expresiones", "Subchapter",
 CellChangeTimes->{{3.716323189345352*^9, 
  3.7163231923449*^9}},ExpressionUUID->"129cde23-667e-4e96-b45f-8e37fccf7242"],

Cell[TextData[{
 "A los elementos del tipo num\[EAcute]rico, texto y dem\[AAcute]s que no \
pueden ser simplificados m\[AAcute]s all\[AAcute] se les denomina ",
 StyleBox["expresiones at\[OAcute]micas",
  FontSlant->"Italic"],
 ", esto es, expresiones que no pueden ser subdivididas. Una manera de \
conocer si una expresi\[OAcute]n es at\[OAcute]mica es usando la funci\
\[OAcute]n AtomQ."
}], "Text",
 CellChangeTimes->{{3.716242224492794*^9, 3.71624225166496*^9}, {
  3.71624228750732*^9, 3.716242341868287*^9}, {3.7272992834758453`*^9, 
  3.727299298226883*^9}},ExpressionUUID->"f180d076-39b3-4317-8053-\
8b14bf2794b8"],

Cell["\<\
Un s\[IAcute]mbolo sin asignar es una expresi\[OAcute]n at\[OAcute]mica \
porque no puede simplificarse m\[AAcute]s.\
\>", "Text",
 CellChangeTimes->{{3.727299338129758*^9, 
  3.7272993579696817`*^9}},ExpressionUUID->"876be217-c665-46c6-8356-\
559e93415082"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AtomQ", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.716242342865761*^9, 
  3.7162423483154383`*^9}},ExpressionUUID->"0e6381c0-125e-4f3b-ae1a-\
7f79351edcfa"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.727217747857861*^9},ExpressionUUID->"95aabc0d-5510-48f5-b6a2-\
0eb70771085f"]
}, Open  ]],

Cell["\<\
Mientras que dos s\[IAcute]mbolos con un operador de suma no es una expresi\
\[OAcute]n at\[OAcute]mica.\
\>", "Text",
 CellChangeTimes->{{3.727299360921208*^9, 
  3.727299380609314*^9}},ExpressionUUID->"879c0838-e2d1-4cd6-8b6e-\
e872a0353032"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AtomQ", "[", 
  RowBox[{"x", "+", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.716242349731729*^9, 
  3.716242357762651*^9}},ExpressionUUID->"1634e5f7-ae02-49f3-bc50-\
be3e05db59b3"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.727217747902088*^9},ExpressionUUID->"aed177c0-e68a-432e-97f8-\
d0aaf1cd9480"]
}, Open  ]],

Cell["\<\
Es posible inspeccionar una expresi\[OAcute]n en su forma completa utilizando \
la funci\[OAcute]n FullForm[], se observa que la expresi\[OAcute]n x+3 se \
eval\[UAcute]a en realidad como una funci\[OAcute]n llamada Plus con dos (o m\
\[AAcute]s) argumentos, de manera que se puede subdividir m\[AAcute]s.\
\>", "Text",
 CellChangeTimes->{{3.727299386369011*^9, 
  3.727299481519556*^9}},ExpressionUUID->"52e11669-774f-4f31-bade-\
b6dc85c53aa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"x", "+", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.727299407370778*^9, 
  3.727299411201103*^9}},ExpressionUUID->"6eb242be-044d-48c6-aa25-\
099c3c1e1cba"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"3", ",", "x"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7272994113437033`*^9},ExpressionUUID->"e03ccfd8-2d90-4979-9f48-\
3a362b4d2e72"]
}, Open  ]],

Cell["\<\
Mientras que al evaluar un s\[IAcute]mbolo sin asignar no hay ninguna expresi\
\[OAcute]n extra.\
\>", "Text",
 CellChangeTimes->{{3.727299497734557*^9, 
  3.727299532678465*^9}},ExpressionUUID->"237c0b3b-90f2-474d-a56a-\
a0a29c35064e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.727299494479705*^9, 
  3.727299500607559*^9}},ExpressionUUID->"c9b866cf-fab7-47ef-bea9-\
38b7b7d7e558"],

Cell[BoxData[
 TagBox[
  StyleBox["x",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.727299495176786*^9, 
  3.727299500837863*^9}},ExpressionUUID->"98f4f29f-c766-45df-a970-\
d5904bdaba44"]
}, Open  ]],

Cell["\<\
Las expresiones est\[AAcute]n compuestas por un encabezado que indica el tipo \
de expresi\[OAcute]n, y el contenido, el cual es manejado y optimizado por el \
kernel. Se puede ver el encabezado usando la funci\[OAcute]n Head.\
\>", "Text",
 CellChangeTimes->{{3.716242570726149*^9, 
  3.716242678789563*^9}},ExpressionUUID->"632ccdd2-38bd-45bd-ab22-\
8982827cd224"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.716242679653853*^9, 
  3.7162426807940598`*^9}},ExpressionUUID->"b2acd88b-93e6-4ee3-9bdf-\
81e46bfb6eec"],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{
  3.727217747964274*^9},ExpressionUUID->"db2bce7a-de06-44f5-871b-\
1e78c1250495"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.716242682012582*^9, 
  3.716242684590198*^9}},ExpressionUUID->"1913f6eb-8c84-4e66-9dec-\
25bb02437139"],

Cell[BoxData["Integer"], "Output",
 CellChangeTimes->{
  3.727217747996718*^9},ExpressionUUID->"6853785a-2748-47bd-aa7c-\
85fe95dab9b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "\"\<hello world\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.71624268559968*^9, 
  3.71624269102488*^9}},ExpressionUUID->"e647f06f-53c3-4956-a6fe-\
cad5a142f532"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{
  3.727217748033149*^9},ExpressionUUID->"8b577746-43ca-42f1-9892-\
c4400a3575fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "3.3", "]"}]], "Input",
 CellChangeTimes->{{3.716242692365613*^9, 
  3.716242696325973*^9}},ExpressionUUID->"ba926b92-d9c0-4ac6-9c01-\
9d1ed08b86b5"],

Cell[BoxData["Real"], "Output",
 CellChangeTimes->{
  3.727217748075714*^9},ExpressionUUID->"faebeab0-af5b-45db-9e28-\
7e79e24cd33f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio:", "Subsubsection",
 CellChangeTimes->{{3.727299862072146*^9, 
  3.72729986424728*^9}},ExpressionUUID->"cc3747d0-91e3-4b82-bd68-\
688ff23b8519"],

Cell[TextData[{
 "\[DownQuestion]Qu\[EAcute] ocurre cuando se asigna un valor a ",
 StyleBox["x",
  FontSlant->"Italic"],
 " y luego se observa su encabezado? \[DownQuestion]Por qu\[EAcute] ocurre \
eso?"
}], "Text",
 CellChangeTimes->{{3.7272998664319773`*^9, 
  3.727299902111556*^9}},ExpressionUUID->"fce57a51-e1eb-4fc4-b66c-\
4017c7c87916"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Listas", "Subchapter",
 CellChangeTimes->{{3.716323219329653*^9, 
  3.716323220049552*^9}},ExpressionUUID->"6b2db38b-c5e0-4ca4-bd7a-\
fbfa83db10f6"],

Cell["\<\
Se pueden definir listas con varios tipos de expresiones, como por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.716315435731133*^9, 
  3.7163154564509583`*^9}},ExpressionUUID->"7ad9776d-bbb9-4cb6-a858-\
8fa4e38aff93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x", ",", "\"\<a string\>\"", ",", 
    RowBox[{"7", "/", "8"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7163154578991833`*^9, 
  3.7163154871072817`*^9}},ExpressionUUID->"3de15651-32b3-489c-a5f3-\
037e32a37915"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "x", ",", "\<\"a string\"\>", ",", 
   FractionBox["7", "8"]}], "}"}]], "Output",
 CellChangeTimes->{3.727217748118804*^9, 3.727272963182969*^9, 
  3.7273001324780903`*^9},ExpressionUUID->"0607b507-f8ba-4d53-be3f-\
b894ac85e881"]
}, Open  ]],

Cell["\<\
Cuando se define una lista se crea una expresi\[OAcute]n con el encabezado de \
lista,\
\>", "Text",
 CellChangeTimes->{{3.7163154918986177`*^9, 
  3.716315517114499*^9}},ExpressionUUID->"2894add8-123f-42a8-ac4b-\
53637de97727"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.716315504930765*^9, 
  3.716315506874797*^9}},ExpressionUUID->"0b75177b-3155-4ee7-bf14-\
424b6ab0a25e"],

Cell[BoxData["List"], "Output",
 CellChangeTimes->{
  3.727217748160944*^9},ExpressionUUID->"9ff1e2af-6d11-4014-92e8-\
d2dea9e7966c"]
}, Open  ]],

Cell["\<\
En realidad una lista no es m\[AAcute]s que una funci\[OAcute]n del tipo \
lista con varios argumentos. Esta funci\[OAcute]n no calcula nada de forma \
directa, pero es utilizada de forma interna por el kernel para reconocer el \
tipo de la expresi\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.727272978148818*^9, 3.727272997308639*^9}, {
  3.727273782657484*^9, 
  3.727273817953294*^9}},ExpressionUUID->"be5ecbe8-d455-4f10-84b7-\
65a5b8b0d427"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.7272729655831833`*^9, 
  3.727272969292495*^9}},ExpressionUUID->"7a8377cc-b119-46aa-9c47-\
7c67ee0bc4e1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"1", ",", "x", ",", "\"\<a string\>\"", ",", 
     RowBox[{"Rational", "[", 
      RowBox[{"7", ",", "8"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7272729694274406`*^9},ExpressionUUID->"811ffa62-839d-4b19-8b14-\
40be8c71a5ed"]
}, Open  ]],

Cell["\<\
En una lista se puede acceder a cada elemento por su \[IAcute]ndice \
(comenzando a partir de 1)\
\>", "Text",
 CellChangeTimes->{{3.716315522730342*^9, 3.7163155392504177`*^9}, {
  3.727273002060046*^9, 
  3.727273004468731*^9}},ExpressionUUID->"3fae7d1e-cbb8-4f61-8eb6-\
eca6812678f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7163155410597963`*^9, 
  3.716315547930398*^9}},ExpressionUUID->"29ca0bc4-f468-4ad8-9a34-\
e38816b99cf6"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.727217748208303*^9},ExpressionUUID->"923ec11d-f8f4-424e-ae9c-\
ccc71d0fbda5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7163155509159203`*^9, 
  3.716315552218649*^9}},ExpressionUUID->"711b3aed-98e8-4189-9085-\
2e9c9eacbbb1"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{
  3.727217748264913*^9},ExpressionUUID->"faf569fd-0981-4033-83cf-\
fca0c7637920"]
}, Open  ]],

Cell["Los \[IAcute]ndices tambi\[EAcute]n pueden ser negativos.", "Text",
 CellChangeTimes->{{3.716315555410294*^9, 
  3.716315571370392*^9}},ExpressionUUID->"ac9d8e2e-e698-4369-91cc-\
e137f823432c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.716315565122504*^9, 
  3.716315566962234*^9}},ExpressionUUID->"c7f5380b-dfc2-4f2a-9eb2-\
dc1b78cca427"],

Cell[BoxData[
 FractionBox["7", "8"]], "Output",
 CellChangeTimes->{
  3.7272177483097363`*^9},ExpressionUUID->"fe276fcc-7e61-46c9-b77f-\
9f2f2d1a5e0a"]
}, Open  ]],

Cell["\<\
Para conocer el tama\[NTilde]o de una lista se usa la funci\[OAcute]n Length.\
\
\>", "Text",
 CellChangeTimes->{{3.716318172829063*^9, 
  3.716318181037579*^9}},ExpressionUUID->"781b29b4-b943-440a-9986-\
578c3660154a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.716318182158556*^9, 
  3.716318184293425*^9}},ExpressionUUID->"39bf3b81-a23a-42a7-b087-\
07754cbb6882"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.727217748353753*^9},ExpressionUUID->"1d4cb0e1-698c-4b28-80bb-\
7f597b249e82"]
}, Open  ]],

Cell["\<\
Se pueden acceder a varios elementos simult\[AAcute]neos de una lista por \
medio del operador Span (  ;;  ) y del operador Part (  [[]]  ), por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.716323312618354*^9, 3.716323342171146*^9}, {
  3.716323481476103*^9, 
  3.716323497044105*^9}},ExpressionUUID->"6d35a888-dee3-4b29-b4b0-\
6b9b90a80d13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
    "h"}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.716323394053362*^9, 
  3.716323394163357*^9}},ExpressionUUID->"26b150c2-ff28-4205-8fc3-\
ac9745147c5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "20"}], "}"}]}], "}"}], ",", "c", ",", "d"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.727217748407879*^9},ExpressionUUID->"ae1b98e5-d6e0-4030-a61f-\
b3c6c7bee93b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
      "h"}], "}"}], "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;", "4"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7163235035102053`*^9, 
  3.716323508357192*^9}},ExpressionUUID->"a4d0ab41-3eb9-4375-afc9-\
68212759b05d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"List", "[", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
        "h"}], "]"}], ",", 
      RowBox[{"Span", "[", 
       RowBox[{"2", ",", "4"}], "]"}]}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7272177484508743`*^9},ExpressionUUID->"fc7784cd-3450-4049-b364-\
70f3b24f4799"]
}, Open  ]],

Cell["\<\
nos devuelve los elementos desde el \[IAcute]ndice 2 al \[IAcute]ndice 5. \
Tambi\[EAcute]n se puede especificar el intervalo de salto, como por ejemplo, \
tomar los elementos del 1 al 6 dando saltos de 2 en 2.\
\>", "Text",
 CellChangeTimes->{{3.716323372458764*^9, 
  3.716323441188059*^9}},ExpressionUUID->"c68b6869-121b-42c6-b982-\
8636a0c4e2fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
    "h"}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "6", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.716323414731348*^9, 
  3.716323421843521*^9}},ExpressionUUID->"2c7ca0b5-304e-4883-afc9-\
74ec85b27b81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8",
      ",", "9", ",", "10"}], "}"}], ",", "c", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{
  3.72721774848589*^9},ExpressionUUID->"d89bbb65-a5d1-40e2-9bb2-50418389e101"]
}, Open  ]],

Cell["\<\
En caso de tener listas bidimensionales se puede hacer uso de la propiedad \
All del operador Part para acceder a cada unas de las columnas.\
\>", "Text",
 CellChangeTimes->{{3.716323583651989*^9, 
  3.716323612324356*^9}},ExpressionUUID->"ae905511-8c5b-435b-a2d1-\
c3eaf64629bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7163236221561413`*^9, 
  3.7163236276934967`*^9}},ExpressionUUID->"79c4e247-ab1b-4465-93af-\
c17e4a8d685b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177485491247`*^9},ExpressionUUID->"ff00df49-7f63-48c3-832b-\
2be69d6db483"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.716323633324704*^9, 3.7163236351245613`*^9}, {
  3.7163240660604877`*^9, 
  3.716324076026886*^9}},ExpressionUUID->"fee33151-5e44-4ca7-968c-\
72e8a7f6c453"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "5", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217748615407*^9},ExpressionUUID->"decc8be2-5985-4a12-a868-\
2b03d6834064"]
}, Open  ]],

Cell["\<\
Se puede tambi\[EAcute]n obtener varios \[IAcute]ndices espec\[IAcute]ficos \
de las sublistas.\
\>", "Text",
 CellChangeTimes->{{3.71632409277059*^9, 3.7163241195071487`*^9}, {
  3.7273002167484903`*^9, 
  3.727300221692514*^9}},ExpressionUUID->"eb631fb8-f910-4e85-991e-\
88d2324a2542"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.716324027706953*^9, 3.7163240556038713`*^9}, {
  3.716324086333675*^9, 
  3.716324088827272*^9}},ExpressionUUID->"fe52e664-c517-4756-9f99-\
0ae2c667efdb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217748643263*^9},ExpressionUUID->"9e77711a-8d9d-4e5e-ba0e-\
58397bcf9c36"]
}, Open  ]],

Cell["\<\
Por lo general utilizar el operador Part no es una opci\[OAcute]n muy \
elegante debido a que hace el c\[OAcute]digo menos legible. Hay funciones que \
permiten acceder a elementos espec\[IAcute]ficos de la lista, como First[] \
que devuelve el primer elemento\
\>", "Text",
 CellChangeTimes->{{3.7273001514048758`*^9, 3.727300153228883*^9}, {
  3.727300228076195*^9, 
  3.727300342163006*^9}},ExpressionUUID->"38ea1ddf-43ea-4555-a4a6-\
9c8395f49680"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "list", "]"}]], "Input",ExpressionUUID->"8700dfe0-086a-4b34-8748-d1c73bf53c96"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.727300330003298*^9},ExpressionUUID->"8b59e8be-90ec-4612-a516-\
ec99cb130601"]
}, Open  ]],

Cell["Last[] que devuelve el \[UAcute]ltimo", "Text",
 CellChangeTimes->{{3.727300346858639*^9, 
  3.727300350978593*^9}},ExpressionUUID->"6fe5cc0b-ca97-47a3-bb68-\
45183f3b5754"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "list", "]"}]], "Input",ExpressionUUID->"95fa65be-db08-4613-9395-2b66fe072919"],

Cell[BoxData[
 FractionBox["7", "8"]], "Output",
 CellChangeTimes->{
  3.727300355459757*^9},ExpressionUUID->"ad2fd996-dae5-46d3-9e36-\
00fc6ba83eb9"]
}, Open  ]],

Cell["O Rest[] que devuelve todos excepto el primero.", "Text",
 CellChangeTimes->{{3.727300357179064*^9, 
  3.727300366514441*^9}},ExpressionUUID->"27302cbd-d309-40a5-9c1d-\
1ae3066ba942"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rest", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.727300368778697*^9, 
  3.7273003708828297`*^9}},ExpressionUUID->"06d339e4-cfde-4750-830d-\
d2db6846d910"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "\<\"a string\"\>", ",", 
   FractionBox["7", "8"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727300371458034*^9},ExpressionUUID->"27c6bf38-896b-4b14-ba15-\
8db69ca289db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.727273106737221*^9, 
  3.727273109968676*^9}},ExpressionUUID->"fa2a40c5-1081-4cc9-b85d-\
0e7cb89646f0"],

Cell["\<\
Existe una gran cantidad de funciones que se pueden utilizar para crear y \
manipular listas. La funci\[OAcute]n Range nos permite crear listas en un \
rango especificado.\
\>", "Text",
 CellChangeTimes->{{3.727273114856769*^9, 
  3.727273172406445*^9}},ExpressionUUID->"b9af310f-c163-405d-b238-\
cecb6822aba5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.7272731633044777`*^9, 
  3.727273165030241*^9}},ExpressionUUID->"4f03052c-e43d-4271-8ab6-\
5b74f2a96e20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.72727316533186*^9},ExpressionUUID->"1b23d3d1-2ace-475f-b2d1-bd8e21cbad9f"]
}, Open  ]],

Cell["Reverse nos permite invertir una lista", "Text",
 CellChangeTimes->{{3.727273184045295*^9, 
  3.727273212580091*^9}},ExpressionUUID->"256d518e-5319-405c-b97f-\
21c8b464fc00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Alphabet", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.72727319215205*^9, 
  3.7272732026598263`*^9}},ExpressionUUID->"e424ffd4-4d5f-448f-a4c7-\
1cfae520f64a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"z\"\>", ",", "\<\"y\"\>", ",", "\<\"x\"\>", ",", "\<\"w\"\>", 
   ",", "\<\"v\"\>", ",", "\<\"u\"\>", ",", "\<\"t\"\>", ",", "\<\"s\"\>", 
   ",", "\<\"r\"\>", ",", "\<\"q\"\>", ",", "\<\"p\"\>", ",", "\<\"o\"\>", 
   ",", "\<\"n\"\>", ",", "\<\"m\"\>", ",", "\<\"l\"\>", ",", "\<\"k\"\>", 
   ",", "\<\"j\"\>", ",", "\<\"i\"\>", ",", "\<\"h\"\>", ",", "\<\"g\"\>", 
   ",", "\<\"f\"\>", ",", "\<\"e\"\>", ",", "\<\"d\"\>", ",", "\<\"c\"\>", 
   ",", "\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.727273193603718*^9, 
  3.727273202804751*^9}},ExpressionUUID->"ac00557e-439f-4718-9461-\
507cc3b166e2"]
}, Open  ]],

Cell["Join nos permite concatenar varias listas", "Text",
 CellChangeTimes->{{3.72727324839441*^9, 
  3.727273256538431*^9}},ExpressionUUID->"29106797-1702-40d4-96a8-\
7d0e48db182a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<a\>\"", ",", "\"\<b\>\""}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<c\>\"", ",", "\"\<d\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727273280485197*^9, 
  3.727273300553486*^9}},ExpressionUUID->"2e9c8ca9-cc82-4a18-a0a6-\
4b8cfa824f1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.727273300719296*^9},ExpressionUUID->"b9f619ad-cf2d-4927-85b1-\
3103e8098592"]
}, Open  ]],

Cell["\<\
A partir de esto use Range, Reverse y Join para crear la lista \
{1,2,3,4,4,3,2,1}.\
\>", "Text",
 CellChangeTimes->{{3.7272733094961987`*^9, 
  3.7272733338402863`*^9}},ExpressionUUID->"db825be8-cc4e-4ce7-b39a-\
f7a97eeed930"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.7272735642243767`*^9, 
  3.727273566240383*^9}},ExpressionUUID->"62983eea-506b-4b38-97fc-\
969208526f0e"],

Cell["\<\
RandomInteger[] nos devuelve un n\[UAcute]mero entero aleatorio. Podemos \
especificar su valor m\[AAcute]ximo en el argumento. Por defecto se genera un \
aleatorio entre el 0 y 1.\
\>", "Text",
 CellChangeTimes->{{3.727273571336256*^9, 
  3.7272736375774612`*^9}},ExpressionUUID->"4955c176-25d5-47b8-97de-\
acc7bcf8b79e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "]"}]], "Input",
 CellChangeTimes->{{3.727273623811349*^9, 
  3.727273627529632*^9}},ExpressionUUID->"40cba748-8af1-4d35-b308-\
ad7718300dea"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.727273625340308*^9, 
  3.727273630401801*^9}},ExpressionUUID->"c8181973-7fe7-4b42-a738-\
ba0466320db8"]
}, Open  ]],

Cell["\<\
Pero tambi\[EAcute]n es posible generar un entero aleatorio entre el 0 y 5.\
\>", "Text",
 CellChangeTimes->{{3.727273640976972*^9, 
  3.727273656401299*^9}},ExpressionUUID->"2c79e3b5-4190-4813-998c-\
6309e6ffe08d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.7272736570345507`*^9, 
  3.72727365956054*^9}},ExpressionUUID->"ce57ab8c-1705-444e-a4db-\
189b5584e90c"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.7272736597515163`*^9, 
  3.7272736638565483`*^9}},ExpressionUUID->"d810926d-3e74-4147-96a6-\
17f17084472a"]
}, Open  ]],

Cell["\<\
A partir de esto cree una lista de n\[UAcute]meros sucesivos (con Range) con \
una longitud aleatoria de hasta 10 entradas.\
\>", "Text",
 CellChangeTimes->{{3.727273669120967*^9, 3.7272737252971573`*^9}, 
   3.727299141365563*^9},ExpressionUUID->"c45add4c-851d-45fa-ad36-\
bd3a54d9f470"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3:", "Subsubsection",
 CellChangeTimes->{{3.716323803795923*^9, 3.716323805588084*^9}, {
  3.727273104449568*^9, 3.727273104944954*^9}, {3.7272735687764683`*^9, 
  3.72727356890458*^9}},ExpressionUUID->"f36e7123-4baa-453e-9980-\
ec2f8367c738"],

Cell["Dada la matriz", "Text",
 CellChangeTimes->{{3.716323815428012*^9, 
  3.716323817060093*^9}},ExpressionUUID->"305c42fa-40e6-4dde-a8fb-\
68ad44bd527a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Range", "[", "12", "]"}], ",", "4"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "m", "]"}]}], "Input",ExpressionUUID->"97c221a4-\
fc67-4c77-bf14-ee9defaa3926"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3", "4"},
     {"5", "6", "7", "8"},
     {"9", "10", "11", "12"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.727217748680954*^9},ExpressionUUID->"598722fb-2a19-425a-b154-\
66cb49de428c"]
}, Open  ]],

Cell["\<\
Intercambie la segunda y tercera fila, y la segunda y la tercera columna de \
forma que quede\
\>", "Text",
 CellChangeTimes->{{3.716323828075817*^9, 
  3.716323865331749*^9}},ExpressionUUID->"bca3a997-10e4-4b05-be6d-\
fdb4a24c6aec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "11", ",", "10", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "7", ",", "6", ",", "8"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.716323866200096*^9, 3.716323869108095*^9}, 
   3.7163239079378567`*^9, 
   3.716323993209807*^9},ExpressionUUID->"40e1a01d-10c5-4b3b-b705-\
7cde8e986167"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "3", "2", "4"},
     {"9", "11", "10", "12"},
     {"5", "7", "6", "8"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7272177486974783`*^9},ExpressionUUID->"e7bf9147-639b-49df-b314-\
9ad97d2e1394"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Listas en otros lenguajes", "Item",
 CellChangeTimes->{{3.727274402732531*^9, 3.7272744114521427`*^9}, {
  3.727274509475319*^9, 3.727274512819106*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"cf766905-5580-4e61-8406-f7a45a0e17fe"],

Cell[CellGroupData[{

Cell["\<\
Otros lenguajes de programaci\[OAcute]n suelen referirse a las listas como \
arrays. El funcionamiento de los arrays var\[IAcute]a seg\[UAcute]n el tipo \
de lenguaje. Por ejemplo C++ s\[OAcute]lo permite arrays de un tipo espec\
\[IAcute]fico, es decir, arrays de puros n\[UAcute]meros enteros, o de puros \
caracteres de texto. \
\>", "SubitemParagraph",
 CellChangeTimes->{{3.7272744173563547`*^9, 3.7272744189398746`*^9}, {
  3.72727452133116*^9, 3.727274589850155*^9}, {3.727280419843261*^9, 
  3.727280431880762*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"6b751d8f-3eb0-49b0-bcd0-4b81bc2e9fbe"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQm8jdX3/7+NNI/K0EST0oSIiCQylhRK34RUpIGkQUSikuZ5HlQaKDKU
olApRZGI0GBoQKV5+tZ3/+97fX/r/PfZ5znnnnvcc8+513q/Xrvc/QznOc95
nv3Za+21167a/eL25276r3/9q1/5gv+073Z5k0su6XblKTsW/NHhon69zrvo
nB4tL7r0nPPOuaRe980KKmts8q9/vVNQNi/4tzMMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzDKJNOmTXPjxo2zksMyadKkXD8GRhJWrVrl
9t57bys5LhdccEGuHwVjI+PAAw90TK20kruyww475PoxMJLw+eefy2/UuOnx
ruu551nJQdl5l11cp06dcv0oGBsZaGOrk9q52YsWW8lB6dLjHNPGPEa18cHR
T7vv/nFWclAOOfxw00ajxEEbT+tyVs6f/421XHzZ5aaNeYxpY+6LaaORC0wb
c1tMG/Mb08bcF9NGIxeYNua2mDbmN6aNuS+mjUYuMG3MbTFtzG9MG3NfTBuN
XGDamFiWfPWNm/H+PPfOwo+z/lmmjflNNrRx+pz3XcsTT5Ky5s//5Px5z/di
2mjkgnzSxq9+/d0Nv+XWnF/HgKHXSntYdb/9sv5Zpo35TTa08dnJL8Xm73z9
+585f97zvZg2GrkgX7Rx5gfz3T7Vqrkddtwx59di2mgopo25L6aNRi7IF228
65FH/zcP3rTRyCNMG3NfTBuNXGDamFhMGw3FtDH3xbTRyAXZ1EbiDOZ+ssxN
nD7TLfhiZcp9i6KNa//6281ZstRNmvGGnPfbv/+b9jUtXLnaTZ75pvhwV/74
c+Q+po2GUhLayDM57OZb3Kmnd3Yt2rR1g4Zf515+c1ah55nw+gx3xZBrXJuT
28tx/a4a6MZOeaXQ4z5e/ZW746GH3QX9LnXNWrZyzVu1dj0v7uNG3n1P5DtB
3aDrrpey7j//yDt33a23uZNO7eCOb9FSjs1m3Jppo5ELsqGNvEu9L+nntt1u
u7i8ofzN+/TJ12ti+3723XpXrlw5t/nmm8f242/KC69OTWhTDqtZU7b55y1X
vrw78ZRTJb402TXd89jjrsZhh8Udt8kmm7iTO3YS/U5XG9+Y96HbrWJFuYaj
GjRwn3//g2ljGSbb2vjUixPcLrvuGplnd+jIm5K+X2d06540P2/7TqfJexV1
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
fWaC/8XXRt6lgw45JOEc5CouanyQaaORz2QrFofxft5R4lnww6BNxJaSlyrZ
nC7m35MnGU2i3HD7HbFtjGfwvqJ9vIvk/CAebvSEibKdWBr6zZSonFbYrKef
1VVidrAjuR5szKj5JPc+PkrO06HzGZHXSd+4QeNjZZ+Bw4abNpZhsqGNy9d9
5ya8Pl1KsrE/+lxsf/Xt2UnPQ7wN7xk6iv/ktgceTJrzRgtzgxlLJPciBR+t
P3ZOHCqf648Z+tqI3wY9Z20dnn3yNfp5AkwbjbJCvqzfuLEW08b8JhvaWNpK
qI0l/fmmjUYuMG3MbTFtzG9MG00bjY0T08bcFtPG/Ma00bTR2DgxbcxtMW3M
b0wbTRuNjRO0kRgZ3n0rJV9atD3RtDGPUW0kJjRZbu+yXohb0/ys2223XYl/
PrF8po1GSYM2RsWBWym5YtqYv3z//ffu8ssvt5LjMnr06Fw/CsZGxurVq6Vv
bCV3ZcWKFbl+DAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMIrE3Llz3aOPPmolg/LMM8/k+uczjGLh8ccfd7vv
vruVLJaGDRvm+mc2isDll1/u/vWvf1nJoPC8G0ZZ4N5775VnulnzZu7k9u2t
FHOpVKmSO/DAA3P9MxtFAG3cbrvt3OKln1gpQuly1lmmjUaZQbVx9nvvue9+
WG+lmEvLVq1MG0sZaOP222+f82entJXzevY0bTTKDKaN2S2mjaUP08bMSj5r
Y/PmzV25cuVcq4L3sTTy5JNPuvPOOy9WZs+eXaTjX3vttbjjx40bl6UrLTuY
Nma3mDaWPkwbMyv5qo2fffaZ22STTdwOO+wg/1+2bFmuL6nInHvuudJO77zz
znKPn3vuuSId/8ADD8hxO+20k5zniiuuyNKVlh1MG7NbTBtLH6aNmZV81cZB
gwZJG3f33XfL/y+99NJcX1KRUW189913N+g8L7/8smljmpg2ZreYNpY+TBsz
K0XVxm+++cb997//Tahfv369++GHH4rlt/znn3/cnnvu6SpXrhz79y677OL+
+OOPQo/lGv7zn/9Ebvvuu+/kfFH89NNPbvXq1ZHfLVNMG0se08bsFtPG0odp
Y2YllTZOnTpVtk2cONENHTrU7bHHHtLuVKhQwfXv31/2YQytVq1abtNNN5Vt
devWdZ988ols++uvv9wBBxzg9t9/f/fnn38mnJ/zcn7aM58pU6bIuc455xz5
m8/i71GjRiWcY82aNXKO4cOHuyuvvNJtttlmbscdd3T33HOPzHllG3Pe/v3v
f4tvlr913A4dRb/QYJ3PstVWW7njjjvOLV68OPYZp512mhw3b968yM/n+K5d
uyZsK0wbn3/+ede7d2/XunVrd+GFF7oFCxZE7mfamD6mjdktpo2lD9PGzEoq
bZw0aZK0MzVq1BC9oa2/5JJLxIaj/vzzz5d5M7Vr13bXXnuta9q0qdQfc8wx
sXOgb9SNHz8+4fzt27cXTcVe8+nYsaMc89Zbb8nfCxculL/r16+fcI6vv/5a
th122GGiffyf60Nf33nnndg2PgcN53qXLFkiNmjVqlWl/tRTT3W33nqru+qq
q1zNmjXlmL322itmfz7xxBNSx3cP4Ti2RY0lJtNGbNezzz5btvHMHn744W7z
zTeXayEXQ4hpY/qYNma3mDYWD+8VPJ9R9kI2MG3MrKSjjVtssUVMpwB7Uu2s
2267LVaPlmAnUv/LL79I3dtvvy1/n3LKKXHnxr+55ZZbSiyqz7fffiuxqdia
PnXq1JHzzJ8/P65etZHy0EMPSR3ag29UtRHN5Jr1GgEblG3dunVL+N68+2zj
2uHXX3+VZ4t5z3///XfcvmgpsTJR/t5k2ojdSv1JJ50UO47Yo3322UfuNf/2
MW1MH9PG7BbTxuJh1qxZ0u4ef/zx7v7773erVq3K2meZNmZW0tHGRo0axdWj
e/gusXXCsT1sMI7xfZK8S+gdY5IKPk/2Gz16dNzxt99+u9TjI/XRmJyeBdfr
o9pIPGuIaiN2WciXX37pXnrpJbd27dqEbX379pXj2K706NFD6l599dVY3Ucf
fRR5TUoybWzQoIHcv/CzmfPB/hdddFFcvWlj+pg2ZreYNhYfb775ptgHtKOM
5dA37tevn5s5c2bSmIlMMG3MrKSjjd27d0/Ytu2224rfMUQ1BN1Qrr/+eql7
8MEHY3X16tWT3+u3336LOx4dY98777xT7CstjzzyiNTzucTNKKqN2G8hqo34
bpOB/frKK6+4kSNHutNPP13eex07ffHFF2P7YTdT16VLl1idjoPyOVFEaSP+
Y+roL4b8/PPP0oc49NBD4+pNG9PHtDG7xbSxeEEft95665jvC78R/XzqmNfN
GAvxjxuCaWNmJR1tHDBgQMI2NGrfffdNqI/SRmw07KTGjRvL38TqsA/7+hA7
k07+V2xORbWxRYsWCdei2hhl1+F3xT4rX758zO/KO09MzbHHHpugjYC/mO+N
j5XjicFJ1U5EaaNeE2O1UTAGyr3y+42mjelTFrTxlalT3ZFHHeXq1PtfqVvQ
jzyqfn1X7+ijpdRv0MAd3bCha3DMMf8rjRq5hgXvFuWYgme3UZMmrvFxx0k5
tmlT16SgH0Y5rtnxrmmzZu745s2lNDvhBNe84L2hnNCypWtR0Ba3aN1aSss2
bVyrtm2ltD7xRNfmpJNc23btXMVKlWTMvkOHDlKIDejUqZPEq1HoX3bu3FnK
GWecITFwZ555phT6lWeddZa8YxTGM+h3Uxh/pz0gPoHCu6M5L3h/e/XqJe8M
hfi1Cy64QAoxbLzHF198sZQ+ffqI34dCfAB2GPO/KPRlL7vsMinoBe8T8XsU
2jjiDSgDBw6UOWRXX321lMGDB7shQ4a4a665RgpxicRXUIYNGyY+ruuuu04K
dsANN9wgZcSIEe7GG2+UfjflpptucjfffLOUW265RWIVGJPi+rEfo9o62if0
crfddpN7R+xjslj7ZJg2Zk8beV5CiqKNgHahP9hNPGvsQ5/Jh+eeep5V9CAs
PFts9+2qTLWR559t2K8TJkyQcU5F44deeOGFuGN4B6hn3RJy1vBv3odkRGnj
2LFjpY53Lwrimtju+1tNG9OnLGjjc88/7/612ab5WQre4XT6r1aKv2zyf/ee
XCK0ofTR08G0Mb+18dlnn5X6u+66S/ym4bG///67xMLST0o2T5I4mCpVqsh5
NDYoU2086KCDZFvUGDhr8LDtqaeeiqtnX/yt9JPps/LvVGPoUdqIr5g6+o1R
NCvo17N96dKlsTrTxvQpC9q4ouCZmlHQb5z+xhtu+syZUl6fMcO9Nn26m/b6
625qQb+M8uq0aWJjTpn6qpSXX33VvfTKK27ylCluUsEzQ5n40ktuwuTJbkLB
u0x5ceJEN76gLzjuxRfdC+PHS3l+3Dg3tqAfOOaF56Wgzc8W9OGeGTPGPf3c
c1JGF7y/TxX0CWsfeaS8g8SdM9ZB/5G5SBT6fWMKjiFmm8I7Tz/y6aeflrgC
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
GEY8po2mjYZhGEY8aOOxTZq4eQs+tFKEwlq9po2GYRhlk/Lly6c1p9pKYjns
sMNy/fMZhmEYWYD1affeZ2/X9sQTrRShsFZwqvUSc8mXX37prr/+enfDDTfE
8pyWJsi3quXdd99N2E7u2FmzZiWs1aWQt90/R2m8B4Zh5BZyr3Tt1i3n43el
rbDGxuWXX57rny+Sq6++OmbbPvnkk7m+nCLj2+b4NZRvv/3Wde7cWdbk0u1V
qlRxY8aMiTv+oIMOijtH1LrHhmEYqTBtLFvayPoUe+21l6tXr57bbrvtZI3D
0gZ6Vq1aNVmPWddrJld5o0aNZNvJJ5/snn/+eXfLLbe4Aw44QNaF9NfuIlcA
xx599NGmjYZhZIRpY9nSRtZQRA/wp+Lz5d8LFizI9WUVCa75iCOOiKsbP368
1LPWhg/fjXrWmwxBQ00bDcPIBNPG7GgjuVBffPFFya2NDcO+V1xxhZs6dWps
H9ZqJK9Zjx493MiRI91PP/0U2/b6669L3rMvvvgi8vz4ER988MGEevKsoQfz
5s2T9ZP5d69evSLPgU320EMPia151113uYsvvthNmTJF/sYuIwcq60Wis/37
95f1NJS//vpL9mFNxe7du8t3e+SRR+LWl1y8eLF8h2TrNZJrle1r166Nq4/S
xqefftodf/zxcn0h1atXl3VK/vzzz7h600bDMDLFtDE72li1alXx6XXt2lXa
5y233DI2/nXTTTdJG896hJtvvrn4BKnfb7/9Yvm48RFS16dPn4Rzr1mzRo5r
1apVXD3rJZcrV078jIAfcrfddhPf6s8//5xwHtbF2GabbdzAgQNj17bnnnuK
NmKH1ahRI24dDfXPsp4k2kUdmrTrrrvG9sEXunr1atkPTWJsMNmajZx/l112
SdC0KG1MBnE5jEnWrFkzYZtpo2EYmWLamD1tpF1GN7C30Cn0cNtttxVd4//E
kpIXm/UisInY/9FHH5Xjsb/QtIoVK7q///477tysV8W+2HU+rFtB/XXXXRer
u+SSS6TuvvvuS7hGtBHtQlsYu8MOpADaiO7tvPPO7oEHHnCjR4+W9SShefPm
cs4777wzprnEhrZu3Vrq/ftCLlPqsCF93n//fam/4IILEq6rMG3EFseevuee
e0Rf6WOMGzcuYT/TRsMwMsW0MbvaOHbs2Lj6E044Qep79+4dVz9hwgSpx3ep
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
Pir7Yqf5PP7441Lv5+q55pprpO6GG25IuEbVRrQT+2/8+PFu9OjRsg1tRLO3
3XZbied57rnn3OTJk2UbcaEcxzE//PCD1LH2cseOHaXevyft2rWTunfeeSfu
s1mHkvozzzwz8v4l08YlS5aInp5xxhnyt2mjYRjZwrQxe9r48MMPx9WrfrCm
oQ9+R+rxiSr9+vWL2Uc+TZo0ceXLl4/pktK4cWPZf/HixbG6L774QrS4atWq
MV+uotqIbRiCNrJt5MiRcfXYlMypaNmyZcL55s2bl5APAb2N+gz6BdQnW3sr
Shv/+usvV7t2bbnv+t1NGw3DyBamjdnTxo8++iiuHluL+rvuuiuuXu0otFNZ
uHCh1DG2pqxcuVK0jjkK4fHU4+sMOe644+Q8jHX6qDYyrhii2si4Z2GgU4xd
3njjjXJMnTp1Ytuwf4mZwV5G2xR8vdy/UF+VKG0kvojv+Prrr8fqTBsNw8gW
po3Z00bGAH1GjBgh9eq7VFasWJGgjXDkkUfKmN26devkb9XWKVOmxO03YMAA
qWfs7/DDD48r+GbZduKJJ8Ydo9oYpX+qjVFxMoxlsk4x/lI0Dr1iX66T/3PN
Pn379pV64nuAsVb+5pqTEWojcUWMbfKZ2Kda3n777di+/E0fwce00TCMTDFt
zJ42Eg/jU1RtZKzPtzOrV68ei7VR+DdxPOR4Zb57VMEHy/ghdqei2jhnzpyE
61dtJMeOD9/n9IJnhW277LKLaA9+V7SL3DNR2rhgwQKp79Spk/xNzhr+ThaD
C6E23nTTTbF4n1SF6/YxbTQMI1NMG/NXG7///ntXrlw5GcNTH+tll10Wtw++
UupT5VY7++yzZZ+BAwfG6jLRRmxM1a0wH90HH3wg24jPDWGckPgjfKD4V+vX
r5/0WiHURuZ7aB48vwwdOlT2ZZ01/n766afjzmPaaBhGppg25q82AnXYfH36
9JF9Fi1aFLf9lFNOkXpiSZOhvseKFSvGxv0y0UbmVFLfq1evhGOuvvpq2bbv
vvsmbLvzzjtlm8YXcZ5UFDa/UbHxRsMwsoVpY35ro9qF6GPor2QckjkYO+yw
g/v9999T/s4HHXRQnIZuiN3IvHtiTIlbZT6j2m+USpUqJZyPvAZcJ98B/+76
9etTXqtpo2EYuca0Mb+1kfFExhjZjv3lc8stt0g9Y3iFwbgg+zIHBDLRRiC/
j8bfaN6CvfbaS+ZrHH/88bItKobn1FNPTfodQ0wbDcPINaaNxa+Nc+fOlbn+
IcTCUE8+UJ8//vhD6kN/qdK8eXOxt0KtYgyS49JZg4nxQfZlvgUQC8PfUetY
zZ8/X7YxByOKDz/80N1///3utttuk/00PwFxovytcbU+w4YNi4yxjSJdbSwM
00bDMDLFtLH4tbE4WbVqldhnUfnjSgvYz/vvv7+U0JaOwrTRMIxcY9qYn9qI
fceYHjGq+CmZv1faIHaV+YzE7kT5hJPBvuRmJXfqgw8+WOTPJZcQx6Kvpo2G
YWSCaWN+aiNrMGp8C3lRSyN+rvITTjghYd2QZPhzFvElFxWNO9Ji2lj20PVj
mG/L773VVluJX4KcUTpuEMJaMjyHY8eOTeszOHeYg8rYeDBtzE9tfP75590V
V1yRkOutNEGcD7nPn3zySYmbSRfGT7V88803Rf5cxjv9c6SryUbpgDzBmj+Y
8QZyYjRr1ky0UftDXbp0kXF8H55DtoV5gpPBnCfyShkbJ6aN+amNhmEkQv5e
zYPIOi5hfNrs2bMl/wTbyTHoU1RtJDdimOvf2HgwbTRtNIzSwkUXXST6dvHF
Fyfdh9hr9auzdptSVG00Nm7QxobHHOOeeOpJK0Uo5D4zbTQ2dvCZU/CZk5OQ
uaasxUJuQ83xMGbMGIkZZp1rxvuIz1Kwy8i1O3Xq1Mjzs/4K/lH84p9++qn4
ULEbwzXaQl555RXRwVq1asXqfG1kzLFFixbih+Xaxo0bl3COnj172ju+EYM2
ppPH2UpisffG2NghFpj1WFgfjXWnyS3Bmti8H+T41TzxjAmimcRckyMJnQNy
5bK9VatWCedm/hLrr5AXEciXy77krSgMYnXIh+/HYqk2HnzwwXIdxICzlirr
qFF/1VVXxZ3Dxhs3bnhuWA/XStFLJnEihlGW0HkyaJ/acvg0sRGp32677eLy
YGBbhrHXaBXryKxduzbu3OSPZ98JEybI30OGDJG/WastHdBp9n/11Vflb9VG
ip+bilwcNWrUEB3282+YNhqGYRiZoNo4efLkuHpdi4z88j7EylB/1llnxeo0
n+Edd9wRty+aiU2n+Zk6d+6coGup6NChg+w/atQo+Vu1McpGJc8w25h3pJg2
GoZhGJmg2qg+UuWGG26Q+oceeiiu/vPPP5d6Xc8TmGeD3Vi3bt1YHXkX2Y+1
sZWuXbtKHfkK06FRo0ay/6RJk+Rv1UZyHYbgA2Kb5hsG00bDMAwjE1Qbw9y7
qo3hmprMTQy1Edq0aSP1uua1xqOS21dRn6qvl6lgzW/2J+8wqDZGzf0nlyH6
TGyOYtpoGIZhZIJqY0hRtRG9on7w4MESk1qhQgV3+OGHx+2jcTvMXyTWJhVo
KvE2zLXSHL6qjepj9fnxxx9lG/E5immjYRiGkQnFpY2sBUpc6SGHHCKxO+zD
GmwhmkuRfLmp0DicAQMGxOpUG5kXEvLGG28kxMCaNhqGYRiZUFzaCBdeeKFs
a926tfg3w7XcANuROY7MF4nSR2JlNWYH/6ifq1C1Ec3z1xjFBmXtUbb5cy9N
Gw3DMIxMKE5tZN0WnWPB3MhkEFOKNrIfftcLLrhA1g0/44wzXKVKlaT+gAMO
cB9//HHccaqNO+64o2y/++67JS8c66NSH667bdpoGIZhZEJxaiOgdcniZXyY
h0i+nHLlysXl46hcubLMoYxas1u1kTxyJ510ksxn5G/OQW6fMJ7ItNEwDMPI
B8idw5xGxh/Tgf2WLl0q8yZXrlxZaIyODzntiNn566+/IreTFxJ9NAzDMIxc
oXkBBg0alOtLEbtT8/0YhmEYRkmD/xU/KP5Qcsx99dVXOb0ecgWwdiraGK5z
ZRiGYRglAX5UdGiLLbaI5bDJFcxz1HHI7bff3r3zzjs5vR7DMAxj42T58uVu
ypQpoku5hvHLt956y7388ssJuc8NwzAMwzAMwzAMwzAUfAjMKbJiJV/KnDlz
cv1abPSwzu8JJ5xgJYvlkUceyfXPbKTg999/z3jdeytWslH8tXCN3EDbveWW
W7r99t/fSjGXff9v3WfyDRj5i6+NjY891nXt1s2KlRIvJ7dvb9qYR6CNtOPf
/bDeSjGXr/5vrUjTxvzG18YHH34458+NlY2zzP6/9YdMG/MD08bsFdPG0oFp
o5V8KKaN+YVpY/aKaWPpwLTRSj4U08b8wrQxe8W0sXRg2mglH4ppY35h2pi9
YtpYOjBttJIPxbQxvzBtzF4xbSwdmDZayYdi2phfmDZmr5g2lg6Kqo0vv/KK
G379dVJemTo15b7LPvs0tu/kKS9v8DP1/vx57robrnfn9jzPnd65s7vk0n5y
zTxr4b5vzHpLPvetd97O+btQnGXci+Pley1Z+kmh+3624gvZ95nnniux6/t6
7ZqMjjNtzC9MG7NXTBuLjzVr1riePXu622+/3S1btqxYz11UbUSPdP9atWun
3HfwNUNi+15w4YUZP0sffbzItWjRQs5Drn7mzh5yyCFus802k7qddtrJ3f/g
g3HHjLz5Ztl2y2235vxdKM5yVteu8r2mvjat0H3nfvC+7HviSSdl/brogzRq
3Ng99EhmvgfTxvzCtDF7xbSxePn8889lDWruKf9HK18psOH++OOPDTpvptqI
HvF/7LOo/b5d/73bZ599XLny5TZIGz9c+JHbbffdRAevuPJKsUV12+crV7hR
Tz4h2zfZZBN37/33x7aZNq53K79cLb8ptn62r2vQ4MFyXaaNZQPTxuwV08bi
B33cbbfdZH0xCuuLlStXzjUu6K/fe++9bsWKFUU+Z6ba2LNXL/l/j3PPidxv
zPNjZftpp5++QdpYr149Of7W229Lus/0N2bK/ahQcG9WffWl1BWmjegquj7/
owVu7XffJj33N+vWii931ux33JfffJ10P/oCHy9Z4ma+9aZb/vlnGX1XzoGN
jA2W7LNCbcS3+t7cOW7d998V+fPwf77z7rvymens/+kXn7s3354lvtpwm2lj
2aKsaOPElya7u++9x91z373u3vvuk/7zfQ88IAVf0wMPPSTtHoVn9+FHH3GP
PPaolEcff8w9Nupx9/gTo6QPTnniqSfdk6Ofck89Pfp/5Zmn3ehnnnFPP/us
jF1Qnh0zxj03dqy0gZSxLzzvnh/3gnth/DgZE3muYDvP+ekFbSPPOmXGjBlu
5syZ7o033nBvvvmmFNbKmjVrlnv77belsJbk7Nmz3bsF7+x7Be8LhdzDc+fO
de+//76UDz74wM2bN8/Nnz/fffjhh1IWLFjgPvroI7dw4UIpixYtch9//LFb
vHixW1LQZlE++eQTt3TpUvFLUlg37NNPP3WfffaZ6A7liy++EI1ZuXKllFWr
VrnVq1e7L7/8Utajpnz99dfumwLtx9dJYZ2vdevWuW+/LWhjv/tOyvfff+/W
r1/vfvjhBymsTfbTTz+5n3/+2f3yyy9Sfv31V/fbb7+JPlGwAcn9/ddff7n/
/Oc/Uv7++2/3zz//uP/+979SuMbdd989tv6mlq233tqVL1/e7bXXXu7iiy+W
+815CiNTbeTZOuzww90OO+wQOd7XqnVrt+eee8rz5msjzxd/n9mlS+T5a9aq
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
    "], {{0, 299}, {
    455, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{455, 299},
  PlotRange->{{0, 455}, {0, 
   299}}]], "Input",ExpressionUUID->"5c1c9738-b31e-4029-94a0-4ff890f785f1"]], \
"SubitemParagraph",
 CellChangeTimes->{{3.7272744173563547`*^9, 3.7272744189398746`*^9}, {
  3.72727452133116*^9, 3.727274589850155*^9}, {3.727280420325946*^9, 
  3.727280441514612*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e779ed7f-f0dd-4cc3-8b29-a89db34cca61"],

Cell["\<\
Esto es debido a que en C++ cuando se crea un array el programa hace una \
llamada al sistema operativo pidiendo una reservaci\[OAcute]n de memoria. El \
sistema operativo responde indicando la posici\[OAcute]n de la memoria libre \
para almacenar ese array, y esto implica que el tama\[NTilde]o del array debe \
ser conocido de antemano implicando que s\[OAcute]lo ser\[AAcute] \
v\[AAcute]lido para un tipo espec\[IAcute]fico de datos.\
\>", "SubitemParagraph",
 CellChangeTimes->{{3.7272744173563547`*^9, 3.7272744189398746`*^9}, {
  3.72727452133116*^9, 3.727274589850155*^9}, {3.727280420325946*^9, 
  3.7272805875767107`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b0c5e348-1c9b-4ded-b5d4-af528734d70d"],

Cell["\<\
Los lenguajes interpretados como WL o Python no poseen esta \
limitaci\[OAcute]n (por lo general) ya que la m\[AAcute]quina virtual se \
encarga de gestionar autom\[AAcute]ticamente el manejo de la memoria.\
\>", "SubitemParagraph",
 CellChangeTimes->{{3.7272744173563547`*^9, 3.7272744189398746`*^9}, {
  3.72727452133116*^9, 3.727274589850155*^9}, {3.727280420325946*^9, 
  3.727280639350214*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"f51b4f7e-9fef-48bf-88b8-a70ef895fbe9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reglas de estilo para listas", "Subchapter",
 CellChangeTimes->{{3.7271207302881002`*^9, 
  3.727120734447504*^9}},ExpressionUUID->"c64c8181-c911-4d76-8388-\
bb5c55fcc0bc"],

Cell["\<\
Al trabajar con listas es posible crear c\[OAcute]digo poco legible. Un \
ejemplo es el siguiente:\
\>", "Text",
 CellChangeTimes->{{3.727120736127002*^9, 
  3.727120764877548*^9}},ExpressionUUID->"05d95ce6-4bae-449e-a9a1-\
753dc0b13cb3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"list", " ", "=", " ", 
  RowBox[{"Range", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"subl1", ",", "subl2", ",", "subl3"}], "}"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"list", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{"2", ";;", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
    RowBox[{"list", "[", 
     RowBox[{"[", 
      RowBox[{"-", "1"}], "]"}], "]"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.727120773629479*^9, 
  3.7271208544033947`*^9}},ExpressionUUID->"bb157678-93d5-4a05-9aa7-\
15e469eb6d51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.72721774873617*^9},ExpressionUUID->"22a0b213-3572-4e55-9ebb-685cc23c5b86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9",
      ",", "10"}], "}"}], ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217748738139*^9},ExpressionUUID->"23aef24f-9f61-46f6-80af-\
d018621cd6f5"]
}, Open  ]],

Cell["\<\
Una mejor pr\[AAcute]ctica ser\[IAcute]a utilizando funciones \
espec\[IAcute]ficas (no siempre aplica) dado que es inmediatamente claro la \
operaci\[OAcute]n que realizan.\
\>", "Text",
 CellChangeTimes->{{3.727120826562151*^9, 3.7271208297623043`*^9}, {
  3.7271208807391376`*^9, 
  3.727120903355701*^9}},ExpressionUUID->"d7e31d48-7067-420b-9534-\
938cf047a1bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"subl1", ",", "subl2", ",", "subl3"}], "}"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"First", "[", "list", "]"}], ",", 
    RowBox[{"Rest", "[", "list", "]"}], ",", 
    RowBox[{"Last", "[", "list", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7271208360190077`*^9, 
  3.7271208724163322`*^9}},ExpressionUUID->"7b2758a9-2fa3-47bb-95a4-\
ddd8511789d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9",
      ",", "10"}], "}"}], ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217748775629*^9},ExpressionUUID->"989c822a-ff02-44a9-9db4-\
eade2c114931"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Gr\[AAcute]ficas de listas", "Subchapter",
 CellChangeTimes->{{3.727281078716888*^9, 
  3.727281080989003*^9}},ExpressionUUID->"670231d9-e1c5-4fbf-ba1f-\
52f4f987bf23"],

Cell["\<\
Las listas son una de las cosas m\[AAcute]s f\[AAcute]ciles de graficar \
debido a que s\[OAcute]lo es necesario hacer una llamada a la funci\[OAcute]n \
adecuada.\
\>", "Text",
 CellChangeTimes->{{3.727281195179389*^9, 
  3.727281246611215*^9}},ExpressionUUID->"99046916-8c7c-4ed2-a604-\
137e5899eb34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "3", ",", "5", ",", "4", ",", "1", ",", "2", ",", "1", ",", 
     "4"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.727281105209002*^9, 
  3.727281121124599*^9}},ExpressionUUID->"fdbd6be3-1b81-43f4-b925-\
c2aca3d027ab"],

Cell["\<\
Existen diferentes tipos de gr\[AAcute]ficas para listas, como ListPlot que \
muestra los puntos, BarChart que es una gr\[AAcute]fica de barras y PieChart, \
una gr\[AAcute]fica circular.\
\>", "Text",
 CellChangeTimes->{{3.727281253938645*^9, 
  3.727281294810154*^9}},ExpressionUUID->"429d411d-3e74-4958-a6c1-\
d5e22821a2b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "l", "]"}]], "Input",
 CellChangeTimes->{{3.727281123608527*^9, 
  3.727281125276771*^9}},ExpressionUUID->"d0f4b5b3-31d0-4c0b-b683-\
6b69fdf513f5"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 3.}, {3., 5.}, {4., 4.}, {5., 1.}, {6., 2.}, {
      7., 1.}, {8., 4.}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 8.}, {0, 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.727281125476625*^9},ExpressionUUID->"3642bd8a-18ff-403e-af06-\
55c6c54196c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "l", "]"}]], "Input",
 CellChangeTimes->{{3.72728112922484*^9, 
  3.727281131236787*^9}},ExpressionUUID->"2bc75e3a-535a-4b4b-a14f-\
728140899ed7"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{16.322040580938257`, 54.34627228500509}, {
           61.006047435233036`, 102.44386207371332`}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 3.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{57.9045830584877, 
           95.92881476255454}, {-20.869581841727523`, 102.44386207371332`}}],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 5.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{99.48712553603715, 
           137.511357240104}, {-102.7452111186881, 102.44386207371332`}}],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{141.0696680135866, 
           179.09389971765344`}, {-61.807396480207814`, 102.44386207371332`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{182.65221049113606`, 220.6764421952029}, {
           61.006047435233036`, 102.44386207371332`}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 2.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{224.2347529686855, 262.2589846727523}, {
           20.068232796752753`, 102.44386207371332`}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 1.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{265.81729544623494`, 303.8415271503018}, {
           61.006047435233036`, 102.44386207371332`}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 4.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{307.3998379237844, 
           345.42406962785117`}, {-61.807396480207814`, 102.44386207371332`}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5487982520029133, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}], 
        LineBox[{{8.451201747997086, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.39075018208302986`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {8., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.727281131491749*^9},ExpressionUUID->"553d421f-6f75-4e55-9eb9-\
b3582561a241"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", "l", "]"}]], "Input",
 CellChangeTimes->{{3.727281134808947*^9, 
  3.7272811367166243`*^9}},ExpressionUUID->"0a6462d5-7074-4e3a-a9bd-\
ac0df8357985"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   DynamicModuleBox[{DynamicChart`click$14342$14406 = False, 
    DynamicChart`click$14349$14406 = False, DynamicChart`click$14353$14406 = 
    False, DynamicChart`click$14357$14406 = False, 
    DynamicChart`click$14361$14406 = False, DynamicChart`click$14365$14406 = 
    False, DynamicChart`click$14369$14406 = False, 
    DynamicChart`click$14373$14406 = False}, {
     {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 DiskBox[{0, 0}, 1., {2.842393353247908, 3.141592653589793}]},
                
                
                ImageSizeCache->{{31.585786437626894`, 
                 181.41421356237308`}, {-46.74322420077602, \
-0.5857864376268864}}],
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14342$14406, 
                FEPrivate`Not[DynamicChart`click$14342$14406]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$14342$14406, {{{1., 0}, {
               0, 1.}}, {-0.19776616524502572`, 0.029808453235234858`}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$14342$14406}]]}, 
         {RGBColor[0.992656, 0.6293488, 0.2541145142857143], EdgeForm[{
          GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 DiskBox[{0, 0}, 1., {1.944795452222253, 2.842393353247908}]},
                
                
                ImageSizeCache->{{38.11658398706419, 
                 181.4142135623731}, {-140.25265461307112`, \
-0.5857864376268935}}],
               StatusArea[#, 3]& ,
               TagBoxNote->"3"],
              StyleBox["3", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[3, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14349$14406, 
                FEPrivate`Not[DynamicChart`click$14349$14406]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$14349$14406, {{{1., 0}, {
               0, 1.}}, {-0.14661037436596527`, 0.13603454755418387`}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$14349$14406}]]}, 
         {RGBColor[0.9691428571428572, 0.5341714285714286, 0.2], EdgeForm[{
          GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 DiskBox[{0, 0}, 1., {0.4487989505128276, 1.944795452222253}]},
                
                ImageSizeCache->{{124.8806558557668, 
                 313.8566371440287}, {-150.41421356237308`, \
-0.5857864376268935}}],
               StatusArea[#, 5]& ,
               TagBoxNote->"5"],
              StyleBox["5", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[5, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14353$14406, 
                FEPrivate`Not[DynamicChart`click$14353$14406]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$14353$14406, {{{1., 0}, {0, 1.}}, {
              0.073068204873279, 0.18617474972884085`}}, {{1, 0}, {0, 1}}, {{
             1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$14353$14406}]]}, 
         {RGBColor[0.8457142857142858, 0.49485714285714283`, 0.2], EdgeForm[{
          GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 1., {-0.7479982508547129, 
                  0.4487989505128276}]},
                
                ImageSizeCache->{{178.5857864376269, 
                 328.4142135623731}, {-67.19512321265415, 99.39960601469829}}],
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14357$14406, 
                FEPrivate`Not[DynamicChart`click$14357$14406]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$14357$14406, {{{1., 0}, {0, 1.}}, {
              0.19776616524502572`, -0.029808453235234917`}}, {{1, 0}, {0, 
             1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$14357$14406}]]}, 
         {RGBColor[0.7529888, 0.4779428571428571, 0.34927977142857136`], 
          EdgeForm[{GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 
                  1., {-1.0471975511965974`, -0.7479982508547129}]},
                
                ImageSizeCache->{{178.5857864376269, 
                 289.1728387213575}, {-3.414213562373078, 
                 126.71994791868559`}}],
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14361$14406, 
                FEPrivate`Not[DynamicChart`click$14361$14406]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$14361$14406, {{{1., 0}, {0, 1.}}, {
              0.12469796037174673`, -0.15636629649360598`}}, {{1, 0}, {0, 
             1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$14361$14406}]]}, 
         {RGBColor[0.6909664, 0.48342857142857143`, 0.6478393142857142], 
          EdgeForm[{GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 
                  1., {-1.6455961518803672`, -1.0471975511965974`}]},
                
                ImageSizeCache->{{167.60046268042262`, 
                 254.91421356237313`}, {-3.414213562373078, 
                 146.4142135623731}}],
               StatusArea[#, 2]& ,
               TagBoxNote->"2"],
              StyleBox["2", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[2, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14365$14406, 
                FEPrivate`Not[DynamicChart`click$14365$14406]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$14365$14406, {{{1., 0}, {0, 1.}}, {
              0.04450418679126298, -0.1949855824363647}}, {{1, 0}, {0, 1}}, {{
             1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$14365$14406}]]}, 
         {RGBColor[
          0.5999204571428571, 0.5149714285714285, 0.7689582857142857], 
          EdgeForm[{GrayLevel[0], Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 
                  1., {-1.9447954522222526`, -1.6455961518803672`}]},
                
                ImageSizeCache->{{124.88065585576689`, 
                 181.4142135623731}, {-3.414213562373078, 146.0031717480066}}],
               StatusArea[#, 1]& ,
               TagBoxNote->"1"],
              StyleBox["1", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[1, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14369$14406, 
                FEPrivate`Not[DynamicChart`click$14369$14406]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$14369$14406, {{{1., 0}, {
               0, 1.}}, {-0.04450418679126278, -0.19498558243636477`}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {DynamicChart`click$14369$14406}]]}, 
         {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], GeometricTransformationBox[
           TagBox[
            TagBox[
             TooltipBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 DiskBox[{0, 0}, 
                  1., {-3.141592653589793, -1.9447954522222526`}]},
                
                ImageSizeCache->{{31.585786437626894`, 
                 181.41421356237308`}, {-3.414213562373078, 
                 136.25265461307114`}}],
               StatusArea[#, 4]& ,
               TagBoxNote->"4"],
              StyleBox["4", {}, StripOnInput -> False]],
             Annotation[#, 
              Style[4, {}], "Tooltip"]& ],
            
            EventHandlerTag[{
             "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14373$14406, 
                FEPrivate`Not[DynamicChart`click$14373$14406]], 
              PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
              True}]], Dynamic[
           If[DynamicChart`click$14373$14406, {{{1., 0}, {
               0, 1.}}, {-0.16524775486319895`, -0.11266401161272446`}}, {{1, 
             0}, {0, 1}}, {{1, 0}, {0, 1}}], 
            TrackedSymbols :> {
             DynamicChart`click$14373$14406}]]}}}, {}}, {}}, {{{
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14342$14406, 
              FEPrivate`Not[DynamicChart`click$14342$14406]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14342$14406, {{{1., 0}, {
             0, 1.}}, {-0.19776616524502572`, 0.029808453235234858`}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14342$14406}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 3]& ,
             TagBoxNote->"3"],
            StyleBox["3", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14349$14406, 
              FEPrivate`Not[DynamicChart`click$14349$14406]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14349$14406, {{{1., 0}, {
             0, 1.}}, {-0.14661037436596527`, 0.13603454755418387`}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14349$14406}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 5]& ,
             TagBoxNote->"5"],
            StyleBox["5", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[5, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14353$14406, 
              FEPrivate`Not[DynamicChart`click$14353$14406]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14353$14406, {{{1., 0}, {0, 1.}}, {
            0.073068204873279, 0.18617474972884085`}}, {{1, 0}, {0, 1}}, {{1, 
           0}, {0, 1}}], TrackedSymbols :> {DynamicChart`click$14353$14406}]],
         GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 4]& ,
             TagBoxNote->"4"],
            StyleBox["4", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[4, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14357$14406, 
              FEPrivate`Not[DynamicChart`click$14357$14406]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14357$14406, {{{1., 0}, {0, 1.}}, {
            0.19776616524502572`, -0.029808453235234917`}}, {{1, 0}, {0, 
           1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14357$14406}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14361$14406, 
              FEPrivate`Not[DynamicChart`click$14361$14406]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14361$14406, {{{1., 0}, {0, 1.}}, {
            0.12469796037174673`, -0.15636629649360598`}}, {{1, 0}, {0, 
           1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14361$14406}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 2]& ,
             TagBoxNote->"2"],
            StyleBox["2", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14365$14406, 
              FEPrivate`Not[DynamicChart`click$14365$14406]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14365$14406, {{{1., 0}, {0, 1.}}, {
            0.04450418679126298, -0.1949855824363647}}, {{1, 0}, {0, 1}}, {{1,
            0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14365$14406}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 1]& ,
             TagBoxNote->"1"],
            StyleBox["1", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14369$14406, 
              FEPrivate`Not[DynamicChart`click$14369$14406]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14369$14406, {{{1., 0}, {
             0, 1.}}, {-0.04450418679126278, -0.19498558243636477`}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {DynamicChart`click$14369$14406}]], 
        GeometricTransformationBox[
         TagBox[
          TagBox[
           TooltipBox[
            TagBox[{{}, {}},
             StatusArea[#, 4]& ,
             TagBoxNote->"4"],
            StyleBox["4", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[4, {}], "Tooltip"]& ],
          
          EventHandlerTag[{
           "MouseClicked" :> FEPrivate`Set[DynamicChart`click$14373$14406, 
              FEPrivate`Not[DynamicChart`click$14373$14406]], PassEventsDown -> 
            True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
         If[DynamicChart`click$14373$14406, {{{1., 0}, {
             0, 1.}}, {-0.16524775486319895`, -0.11266401161272446`}}, {{1, 
           0}, {0, 1}}, {{1, 0}, {0, 1}}], 
          TrackedSymbols :> {
           DynamicChart`click$14373$14406}]]}, {}}, {}}, {}, {}},
    DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
  ContentSelectable->False,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-1., 1.}, {-1., 1.}},
  PlotRangePadding->Scaled[0.09166666666666669]]], "Output",
 CellChangeTimes->{
  3.7272811369809*^9},ExpressionUUID->"0d666225-36b2-46f1-a1d9-cecd8d2aefe0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio:", "Subsubsection",
 CellChangeTimes->{{3.727281311233961*^9, 
  3.7272813136821938`*^9}},ExpressionUUID->"29074c59-aed3-4e58-ab96-\
2bd624ed0f37"],

Cell["\<\
Graficar la lista formada por tres uniones sucesivas de una lista de enteros \
que va desde el 0 al 20. El resultado esperado es el siguiente:\
\>", "Text",
 CellChangeTimes->{{3.727281315138064*^9, 
  3.727281374274004*^9}},ExpressionUUID->"fd5a3119-f687-4002-bb74-\
b64b0a9954b7"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0DlKQwEURuFHKksLCwuL+BAREXGIcUg0T+M8pMgSBGu3cJfsEhLJOUX+
C5ePvz2737/zn17TNOPl/7u6v8m6TbfuRrgZboXb4U7YD9twL9wPD8LD8Cg8
Dk/C0/AsPA8H4QXab8i23yXa7wrtd432u0H7jdB+Y7TfLbZ4h/aboP06pF+5
7XeP9Cu3/R6QfuW23xTpV277PSL9ym2/Jzb9ym2/Z6Rfue33gvQrt/1ekX7l
bvEN6Vdu+72j/dz2+0D7ue33ifZz2+8L7ee23wwH3QL5qD9w
      
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 60.}, {0, 20.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7272813881499453`*^9},ExpressionUUID->"b17c0bab-6731-4643-8062-\
b8ddb01be7f9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Operadores", "Subchapter",
 CellChangeTimes->{{3.716323259705874*^9, 
  3.71632326141009*^9}},ExpressionUUID->"5fa28333-c234-4aa9-a0e0-\
f75b49bf0170"],

Cell["\<\
Se pueden combinar varias expresiones por medio de operadores. Un ejemplo de \
operador es el s\[IAcute]mbolo de adici\[OAcute]n +. Cuando se realiza una \
suma, Mathematica nos devuelve el resultado.\
\>", "Text",
 CellChangeTimes->{{3.716242768996567*^9, 
  3.716242859627146*^9}},ExpressionUUID->"bf21fb19-a120-4cb3-b7f4-\
29e17db3641c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "+", "2"}]], "Input",
 CellChangeTimes->{{3.716242837254171*^9, 
  3.716242837511154*^9}},ExpressionUUID->"80e4c38f-7bba-4a8c-ba70-\
b24c8b4b75cd"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.727217748814808*^9},ExpressionUUID->"78bc7c63-48bd-4660-8f89-\
0d27e8f7373b"]
}, Open  ]],

Cell["o", "Text",
 CellChangeTimes->{
  3.7162429407799377`*^9},ExpressionUUID->"2204fd5f-b0b7-45de-aea4-\
39e91a46420e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "+", "y"}]], "Input",
 CellChangeTimes->{{3.716242942224532*^9, 
  3.716242946611617*^9}},ExpressionUUID->"689c281f-4ebb-42e0-9b74-\
9e9dee826b5f"],

Cell[BoxData[
 RowBox[{"x", "+", "y"}]], "Output",
 CellChangeTimes->{
  3.727217748853712*^9},ExpressionUUID->"682cad4b-7052-4a82-a302-\
4aa056735d4e"]
}, Open  ]],

Cell["\<\
En realidad, internamente el kernel se encarga de interpretar los operadores \
y por medio de una regla de sustituci\[OAcute]n reemplaza el operador por una \
funci\[OAcute]n. La forma real de la expresi\[OAcute]n se puede obtener con \
la funci\[OAcute]n FullForm.\
\>", "Text",
 CellChangeTimes->{{3.716242863118059*^9, 3.7162429203721523`*^9}, {
  3.716242955996347*^9, 3.716242989298139*^9}, {3.716243096065228*^9, 
  3.716243098433326*^9}},ExpressionUUID->"2da4a678-2e35-4ca0-9740-\
3298516bde68"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"x", "+", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.716242990252696*^9, 
  3.716242994385521*^9}},ExpressionUUID->"bd38f006-543c-4f39-921d-\
33fc8c6b184d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"x", ",", "y"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7272177489083242`*^9},ExpressionUUID->"c2ac79cb-cf91-4b31-a416-\
d19d1c853e35"]
}, Open  ]],

Cell["N\[OAcute]tese que el encabezado de una suma es la funci\[OAcute]n \
Plus.", "Text",
 CellChangeTimes->{{3.7163154029873667`*^9, 
  3.716315417699676*^9}},ExpressionUUID->"644c522e-3756-4ea7-a83f-\
805a5985f8a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"x", "+", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.716315421651134*^9, 
  3.7163154233711433`*^9}},ExpressionUUID->"1b81ff35-951c-4126-99cd-\
74e22f9cfff6"],

Cell[BoxData["Plus"], "Output",
 CellChangeTimes->{
  3.727217748970779*^9},ExpressionUUID->"6b5ca416-9934-48f2-80cd-\
583aac300b16"]
}, Open  ]],

Cell["\<\
Los operadores funcionan tambi\[EAcute]n con expresiones m\[AAcute]s \
complejas.\
\>", "Text",
 CellChangeTimes->{{3.7162430501555*^9, 
  3.716243113966975*^9}},ExpressionUUID->"4e7e962f-7443-4d1a-a3ff-\
6d5c2eafcfe5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", 
     RowBox[{"y", "^", "2"}]}], ")"}], "*", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.7162430045162983`*^9, 
  3.7162430150631533`*^9}},ExpressionUUID->"c689413f-029c-48d5-878b-\
04b0bf6a0bba"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Times", "[", 
    RowBox[{
     RowBox[{"Plus", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"y", ",", "2"}], "]"}]}], "]"}], ",", "z"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7272177490128593`*^9},ExpressionUUID->"3b332805-1b21-4011-8327-\
8b956fd4d519"]
}, Open  ]],

Cell["\<\
El lenguaje Wolfram cuenta con una multitud de operadores de diversos tipos, \
pero se pueden dividir principalmente en tres tipos:\
\>", "Text",
 CellChangeTimes->{{3.716243133583889*^9, 3.716243198176553*^9}, 
   3.7162432903662767`*^9},ExpressionUUID->"d7f36ffa-2db7-450c-a790-\
61cab6084fc5"],

Cell["Operadores Prefix - Son los que preceden a una expresi\[OAcute]n", \
"Text",
 CellChangeTimes->{{3.7162432018804007`*^9, 3.71624322890349*^9}, {
  3.716243308129072*^9, 
  3.7162433175532913`*^9}},ExpressionUUID->"35f73e01-b4b4-47a6-af4a-\
a7db6a80f6cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"!", "False"}]], "Input",
 CellChangeTimes->{{3.716243318887766*^9, 
  3.716243319723089*^9}},ExpressionUUID->"849b9372-9fc1-43ee-b1c3-\
e00ccba85cfa"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.7272177490534*^9},ExpressionUUID->"3d53d01a-e059-4f14-9e49-046b0bd6858b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "@", "x"}]], "Input",
 CellChangeTimes->{{3.716243327390089*^9, 
  3.716243330260491*^9}},ExpressionUUID->"a776691f-02c9-454d-93df-\
8f854e991a3d"],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellChangeTimes->{
  3.727217749100329*^9},ExpressionUUID->"1d0bf00d-992a-4a55-8164-\
6fc6e4b52720"]
}, Open  ]],

Cell["Y se representan internamente con", "Text",
 CellChangeTimes->{{3.716243339775926*^9, 
  3.716243348347249*^9}},ExpressionUUID->"2cc63ffb-27a7-41f2-bcaa-\
ccaae4d67f44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Prefix", "[", 
  RowBox[{"f", "[", "x", "]"}], "]"}]], "Input",ExpressionUUID->"9a4a70a5-\
f312-4680-92ef-dfc1f3a62ca6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"f", "@", "x"}],
  Prefix[
   $CellContext`f[$CellContext`x]],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.727217749149136*^9},ExpressionUUID->"9bb0e324-00b9-45ca-bddb-\
6c32bff43683"]
}, Open  ]],

Cell["\<\
Operadores Infix - Son los que se encuentran en medio de dos expresiones\
\>", "Text",
 CellChangeTimes->{{3.716243389495981*^9, 
  3.716243403984791*^9}},ExpressionUUID->"9e5bdd53-8844-4a21-9609-\
b00c90956a82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", "+", "5"}]], "Input",
 CellChangeTimes->{{3.716243422431699*^9, 
  3.716243422995212*^9}},ExpressionUUID->"82d3ac3e-c3dd-4406-919c-\
4bef28033131"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{
  3.7272177491951*^9},ExpressionUUID->"d511f409-f06f-4ab7-b0ac-10994b1d4f2b"]
}, Open  ]],

Cell["Se representan internamente con", "Text",
 CellChangeTimes->{{3.71624344120323*^9, 
  3.716243445105788*^9}},ExpressionUUID->"154e6718-c5ed-4a7d-9629-\
1eb50d94af5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Infix", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", "\"\<#\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.716243452911603*^9, 
  3.716243455112368*^9}},ExpressionUUID->"48d85f5f-6629-4442-8774-\
c9b757292f8b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"x", "\<\"#\"\>", "y", "\<\"#\"\>", "z"}],
  Infix[
   $CellContext`f[$CellContext`x, $CellContext`y, $CellContext`z], "#"],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.727217749241128*^9},ExpressionUUID->"059fde98-533c-4258-8b5f-\
5263cf582e4e"]
}, Open  ]],

Cell["Operadores Postfix - Se encuentran despu\[EAcute]s de una expresi\
\[OAcute]n", "Text",
 CellChangeTimes->{{3.716243472851664*^9, 
  3.7162434884745092`*^9}},ExpressionUUID->"d728045b-7d65-42e1-a34e-\
9319933eede6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Postfix", "[", 
  RowBox[{"f", "[", "x", "]"}], "]"}]], "Input",ExpressionUUID->"e78acc11-\
4b3b-4496-99d5-47f34b64e3ed"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"x", "//", "f"}],
  Postfix[
   $CellContext`f[$CellContext`x]],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.727217749275487*^9},ExpressionUUID->"73349df9-eb5c-44d4-a52e-\
a39ffa982106"]
}, Open  ]],

Cell["\<\
Cuando el kernel termina de ejecutar las funciones, devuelve los resultados \
en forma Prefix[], Infix[] o Postfix[], y la interfaz de notebook se encarga \
de darles formato.\
\>", "Text",
 CellChangeTimes->{{3.7162432548284817`*^9, 3.716243274146463*^9}, {
  3.716243305025058*^9, 3.7162433056111403`*^9}, {3.716246950880685*^9, 
  3.716246990184119*^9}},ExpressionUUID->"7d3a51a4-50f1-4562-bff9-\
978879d5c2e8"],

Cell["\<\
Incluso operaciones simples como el ; al final de un statement para evitar \
que muestre el resultado de la evaluaci\[OAcute]n es en realidad un operador \
que representa a la funci\[OAcute]n CompoundExpression[].\
\>", "Text",
 CellChangeTimes->{{3.727122569911433*^9, 
  3.72712265493546*^9}},ExpressionUUID->"ddc8253d-9031-40ff-85c2-\
75ddab2a8f17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", "x", "]"}], ";", 
  RowBox[{"Print", "[", "y", "]"}]}]], "Input",ExpressionUUID->"609e8048-82ca-\
47f1-9fba-265a62ce434e"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Print",
 CellChangeTimes->{
  3.727217749310302*^9},ExpressionUUID->"465cef91-e12a-4e9c-88af-\
a9d09dfd0d10"],

Cell[BoxData["y"], "Print",
 CellChangeTimes->{
  3.72721774931133*^9},ExpressionUUID->"c58d2d53-521a-4885-af35-0fc7605f5a4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CompoundExpression", "[", 
  RowBox[{
   RowBox[{"Print", "[", "x", "]"}], ",", 
   RowBox[{"Print", "[", "y", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7271226209211407`*^9, 
  3.727122633743599*^9}},ExpressionUUID->"48d92476-01b0-446c-9004-\
0954d7aab8eb"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Print",
 CellChangeTimes->{
  3.727217749347342*^9},ExpressionUUID->"1ed36370-c086-47e9-a95b-\
79c1d5a5d770"],

Cell[BoxData["y"], "Print",
 CellChangeTimes->{
  3.727217749348672*^9},ExpressionUUID->"98d3fa0d-3941-41a7-bbd8-\
af42c8ca5b7e"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Nota: Hold nos ayuda a evitar que se eval\[UAcute]en las funciones Print, y \
as\[IAcute] podemos ver la forma completa de la expresi\[OAcute]n antes de \
ser evaluada.\
\>", "Text",
 CellChangeTimes->{{3.727122701230274*^9, 3.727122731398121*^9}, 
   3.727297862245811*^9},ExpressionUUID->"16bd9efa-f9c4-4bd3-9bbb-\
8ccb5867dca7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"Print", "[", "x", "]"}], ";", 
    RowBox[{"Print", "[", "y", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7271226649619617`*^9, 
  3.727122678113105*^9}},ExpressionUUID->"b7bef0fe-9f56-4908-bca9-\
7bc6b1142428"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"CompoundExpression", "[", 
     RowBox[{
      RowBox[{"Print", "[", "x", "]"}], ",", 
      RowBox[{"Print", "[", "y", "]"}]}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7272177494025993`*^9},ExpressionUUID->"aa5f5bd0-2cf6-47ba-ab4c-\
b1d98803a412"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio:", "Subsubsection",
 CellChangeTimes->{{3.727272618335001*^9, 
  3.727272619646834*^9}},ExpressionUUID->"c234b2bb-f980-48bb-85c8-\
066d1d1905f0"],

Cell["\<\
Todos los operadores tienen una traducci\[OAcute]n a una funci\[OAcute]n, de \
manera que por ejemplo 2+3 equivale a la funci\[OAcute]n Plus[2,3], donde \
Plus es el encabezado. Existe una funci\[OAcute]n llamada Apply que se \
encarga de sustituir el encabezado. Un ejemplo es\
\>", "Text",
 CellChangeTimes->{{3.7272726225181637`*^9, 
  3.7272727210455837`*^9}},ExpressionUUID->"274a7b14-69a6-47c0-a4e4-\
01a5e22ba284"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"g", "[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727272722536665*^9, 
  3.7272727314383993`*^9}},ExpressionUUID->"2101f34b-1487-41a2-bfda-\
904c0c9ec631"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Output",
 CellChangeTimes->{
  3.727272731604493*^9},ExpressionUUID->"29240426-8217-4b88-990e-\
26318f47c8a6"]
}, Open  ]],

Cell["\<\
A partir de esto utilice Apply para realizar la suma de todos los elementos \
de la lista\
\>", "Text",
 CellChangeTimes->{{3.7272727407011757`*^9, 3.727272765629274*^9}, 
   3.7272817991587763`*^9},ExpressionUUID->"5aa60f3b-4a4f-4e2d-9bd8-\
f8f13f5f926f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"l", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.727272769824357*^9, 
  3.7272727785811453`*^9}},ExpressionUUID->"1c2ee1d2-9d8d-4556-bd4a-\
c8315531b7f3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Operadores sobre listas", "Subchapter",
 CellChangeTimes->{{3.727281668078978*^9, 3.727281670614746*^9}, {
  3.727300712959157*^9, 
  3.727300723894865*^9}},ExpressionUUID->"cff3d9b1-5588-46e2-9169-\
082c6290c94b"],

Cell["\<\
Las listas son un s\[IAcute]mbolo m\[AAcute]s, de manera que todos los \
operadores que aplican sobre listas convierten la expresi\[OAcute]n a una \
funci\[OAcute]n. El operador Part que nos permite acceder a elementos de \
listas es en realidad una funci\[OAcute]n m\[AAcute]s.\
\>", "Text",
 CellChangeTimes->{{3.727281710622719*^9, 3.7272817208546886`*^9}, {
  3.727281892420607*^9, 
  3.727281958476273*^9}},ExpressionUUID->"e91b6bb2-6936-46df-a311-\
9193e61a2fb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"list", "[", 
    RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7272819615004463`*^9, 
  3.7272819744844723`*^9}},ExpressionUUID->"2d7c1a93-c6f4-4055-9c2b-\
94d09d840a0c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"Part", "[", 
     RowBox[{"list", ",", "i"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.72728196721725*^9, 
  3.7272819747159367`*^9}},ExpressionUUID->"c4477d0f-8cde-4419-a94e-\
2b4883b9ebcc"]
}, Open  ]],

Cell["\<\
Los operadores que act\[UAcute]an sobre s\[IAcute]mbolos num\[EAcute]ricos \
como enteros, reales, etc, (s\[IAcute]mbolos at\[OAcute]micos) \
tambi\[EAcute]n act\[UAcute]an sobre listas para realizar operaciones aritm\
\[EAcute]ticas. A menudo la regla general es que un operador que \
act\[UAcute]a sobre una lista y un s\[IAcute]mbolo at\[OAcute]mico devuelve \
una lista donde se aplica el operador a cada uno de los elementos de la \
lista. Por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.727282008971367*^9, 
  3.727282166362461*^9}},ExpressionUUID->"6f7f03ac-d265-4170-a6c8-\
b4f651b4a11c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "+", "10"}]], "Input",
 CellChangeTimes->{{3.7272821673419123`*^9, 
  3.7272821697777643`*^9}},ExpressionUUID->"baa969ef-9583-455a-88ed-\
b11da537f2e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727282170212514*^9},ExpressionUUID->"d55b4e02-d1b6-4e11-8020-\
20c5f13d20bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "*", "10"}]], "Input",
 CellChangeTimes->{{3.727282173037507*^9, 
  3.727282177041675*^9}},ExpressionUUID->"44242665-9f77-40ea-b00c-\
05c1ef61f01f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20", ",", "30"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272821774324713`*^9},ExpressionUUID->"267b648b-a796-4354-bf54-\
d9beec734191"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "^", "2"}]], "Input",
 CellChangeTimes->{{3.727282179214075*^9, 
  3.72728218192171*^9}},ExpressionUUID->"230e160f-f318-42ce-ab97-\
a8262f64a8f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727282182554592*^9},ExpressionUUID->"b14726d5-305d-466d-92e8-\
385c217a83a0"]
}, Open  ]],

Cell["\<\
Mientras que un operador actuando sobre dos listas realiza la \
operaci\[OAcute]n entre cada uno de los elementos de la lista.\
\>", "Text",
 CellChangeTimes->{{3.72728218748135*^9, 
  3.727282215993409*^9}},ExpressionUUID->"629ca174-a00f-479f-b8f0-\
8cda062c70de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "+", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.727282219069749*^9, 
  3.727282232993287*^9}},ExpressionUUID->"a14e5ebb-5ad6-418e-94b4-\
514f659bf0e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "7", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727282233289995*^9},ExpressionUUID->"ff0303aa-d95c-40a1-83a7-\
989f535fb546"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "*", 
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "6"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.727282239325879*^9, 
  3.727282245489088*^9}},ExpressionUUID->"768f1938-7b87-40b7-91f9-\
b718921e01b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "10", ",", "18"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272822458833933`*^9},ExpressionUUID->"c78c3562-57b1-40d7-9b8e-\
3f96e24787ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.727282316319659*^9, 3.7272823180953217`*^9}, {
  3.7273005035686913`*^9, 
  3.7273005037441177`*^9}},ExpressionUUID->"b1af573d-9ed6-4e60-83fe-\
4e3521ad6f9c"],

Cell["\<\
Haga una gr\[AAcute]fica con los n\[UAcute]meros del 1 al 10 elevados al \
cuadrado.\
\>", "Text",
 CellChangeTimes->{{3.727282320223543*^9, 
  3.727282339327531*^9}},ExpressionUUID->"1295e917-b511-4f18-ab93-\
0624e35fc878"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.727300507480359*^9, 
  3.727300509768485*^9}},ExpressionUUID->"0b1220f3-3558-454f-8eaf-\
79149c90bbb1"],

Cell["\<\
Unas funciones especialmente para manipular listas son Take[], que permite \
seleccionar un n\[UAcute]mero espec\[IAcute]fico de elementos como por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.727300728166526*^9, 
  3.727300767614863*^9}},ExpressionUUID->"c0af687f-eafc-40c5-b17c-\
c485650afbdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Alphabet", "[", "]"}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.727300768889966*^9, 
  3.727300796688905*^9}},ExpressionUUID->"222f8cd9-a370-41d1-a023-\
5a750ac0396d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"f\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.72730077807999*^9, 
  3.7273007996670723`*^9}},ExpressionUUID->"ee3d1932-bd15-4ebf-832a-\
83f32cc5bb8a"]
}, Open  ]],

Cell["\<\
o Drop[] que permite descartar un n\[UAcute]mero espec\[IAcute]fico de \
elementos\
\>", "Text",
 CellChangeTimes->{{3.727300781414659*^9, 
  3.727300791278563*^9}},ExpressionUUID->"1ef1e1bd-508e-46f3-8635-\
07a371128864"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"Alphabet", "[", "]"}], ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.727300920983522*^9, 
  3.727300921478375*^9}},ExpressionUUID->"69cc9726-4b79-44f0-ac70-\
b732bead50d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"g\"\>", ",", "\<\"h\"\>", ",", "\<\"i\"\>", ",", "\<\"j\"\>", 
   ",", "\<\"k\"\>", ",", "\<\"l\"\>", ",", "\<\"m\"\>", ",", "\<\"n\"\>", 
   ",", "\<\"o\"\>", ",", "\<\"p\"\>", ",", "\<\"q\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"s\"\>", ",", "\<\"t\"\>", ",", "\<\"u\"\>", ",", "\<\"v\"\>", 
   ",", "\<\"w\"\>", ",", "\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7273009217322598`*^9},ExpressionUUID->"d97cf995-a724-4ab8-a358-\
97054f5c8f13"]
}, Open  ]],

Cell[TextData[{
 "Apliquemos esto a finanzas. En esta \[AAcute]rea es com\[UAcute]n trabajar \
con los retornos de los precios, esto es, la diferencia diaria entre precios:\
\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["R", "t"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["P", 
      RowBox[{"t", "+", "1"}]], "-", " ", 
     SubscriptBox["P", "t"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7c18f692-b20f-43ad-9d4c-b428d3b0d695"]
}], "Text",
 CellChangeTimes->{{3.727300512368237*^9, 3.727300518264491*^9}, {
  3.7273005791674347`*^9, 3.727300598407248*^9}, {3.727300937774067*^9, 
  3.727300990126975*^9}, {3.727301050197831*^9, 
  3.727301070092764*^9}},ExpressionUUID->"e9038292-c2db-43f5-ad18-\
a28892ca1228"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"preciosGE", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FinancialData", "[", 
      RowBox[{"\"\<GE\>\"", ",", "\"\<Jan. 1, 2000\>\""}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "20"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7273010774735518`*^9, 3.7273010800106916`*^9}, {
  3.727301112006833*^9, 
  3.7273011121407223`*^9}},ExpressionUUID->"d17f9991-77c7-401d-8c2c-\
ae21ee1be148"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "50.`", ",", "48.`", ",", "47.917999267578125`", ",", "48.551998138427734`",
    ",", "50.4379997253418`", ",", "50.41699981689453`", ",", "50.5`", ",", 
   "50.66699981689453`", ",", "51.25`", ",", "50.33300018310547`", ",", 
   "49.33300018310547`", ",", "49.573001861572266`", ",", 
   "48.645999908447266`", ",", "48.04199981689453`", ",", 
   "46.04199981689453`", ",", "46.16699981689453`", ",", 
   "47.145999908447266`", ",", "47.25`", ",", "44.66699981689453`", ",", 
   "44.66699981689453`"}], "}"}]], "Output",
 CellChangeTimes->{3.727301081090619*^9, 
  3.727301112751446*^9},ExpressionUUID->"a7ec9772-a7e2-4227-afef-\
ee6bd3cb67fd"]
}, Open  ]],

Cell["\<\
Haciendo uso de Drop[], obtener los retornos de los precios. Luego, volver a \
hacer lo mismo pero usando Take[]. El resultado esperado es:\
\>", "Text",
 CellChangeTimes->{{3.7273011247474318`*^9, 3.727301162755521*^9}, {
  3.727301199563121*^9, 
  3.727301215530541*^9}},ExpressionUUID->"d88bb3f0-259c-4c7e-94fb-\
160edb042d37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.`"}], ",", 
   RowBox[{"-", "0.082000732421875`"}], ",", "0.6339988708496094`", ",", 
   "1.8860015869140625`", ",", 
   RowBox[{"-", "0.020999908447265625`"}], ",", "0.08300018310546875`", ",", 
   "0.16699981689453125`", ",", "0.5830001831054688`", ",", 
   RowBox[{"-", "0.9169998168945312`"}], ",", 
   RowBox[{"-", "1.`"}], ",", "0.24000167846679688`", ",", 
   RowBox[{"-", "0.927001953125`"}], ",", 
   RowBox[{"-", "0.6040000915527344`"}], ",", 
   RowBox[{"-", "2.`"}], ",", "0.125`", ",", "0.9790000915527344`", ",", 
   "0.10400009155273438`", ",", 
   RowBox[{"-", "2.5830001831054688`"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.727301193217065*^9, 
  3.727301208161022*^9}},ExpressionUUID->"c27a6120-f198-4c4b-8502-\
8c64baf6b790"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Asignaciones", "Subchapter",
 CellChangeTimes->{{3.716318378587287*^9, 
  3.716318381019309*^9}},ExpressionUUID->"167cc714-c986-4695-ba38-\
51558cd3134d"],

Cell[TextData[{
 "Existen dos tipos de operadores de asignaci\[OAcute]n. El m\[AAcute]s com\
\[UAcute]n es el operador de asignaci\[OAcute]n instant\[AAcute]nea, ",
 StyleBox["lhs",
  FontSlant->"Italic"],
 " = ",
 StyleBox["rhs",
  FontSlant->"Italic"],
 ", que est\[AAcute] representado por la funci\[OAcute]n Set."
}], "Text",
 CellChangeTimes->{{3.716319196264392*^9, 3.716319225672076*^9}, {
  3.716319474331225*^9, 
  3.716319481331148*^9}},ExpressionUUID->"a01c49bb-a85c-4556-98f4-\
568efe205b45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", " ", "=", " ", "5"}]], "Input",
 CellChangeTimes->{{3.716319226642972*^9, 
  3.7163192597593117`*^9}},ExpressionUUID->"05aecb4d-2e5d-43dc-84b0-\
939bbd0befdd"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.7272177494612617`*^9},ExpressionUUID->"ee67a98e-edaa-41ae-abde-\
28ca27d0b84e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["n"], "Input",
 CellChangeTimes->{{3.716319235630954*^9, 
  3.7163192585530987`*^9}},ExpressionUUID->"717f4924-bd60-48c5-bbf8-\
f7f4007dc687"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.727217749504163*^9},ExpressionUUID->"62a36edb-78f0-4f33-9cac-\
fb5cd3cb3394"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"n", "=", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.716319238386545*^9, 
  3.716319264480769*^9}},ExpressionUUID->"6fd27062-6415-4ee1-9053-\
b0ca562fb805"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"Set", "[", 
     RowBox[{"n", ",", "5"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.727217749547018*^9},ExpressionUUID->"44d71375-c3e1-4d6f-9ddd-\
5b2dc69fc455"]
}, Open  ]],

Cell[TextData[{
 "Se caracteriza porque una vez asignado el valor del s\[IAcute]mbolo, este \
no cambiar\[AAcute] de valor a no ser que se realice otra asignaci\[OAcute]n. \
Esto es an\[AAcute]logo a las asignaciones en otros lenguajes de programaci\
\[OAcute]n.\nEl otro operador es el de asignaci\[OAcute]n retardada, ",
 StyleBox["lhs",
  FontSlant->"Italic"],
 " := ",
 StyleBox["rhs",
  FontSlant->"Italic"],
 ", que se caracteriza por mantener ",
 StyleBox["rhs",
  FontSlant->"Italic"],
 " en forma no evaluada hasta que se requiera evaluar ",
 StyleBox["lhs",
  FontSlant->"Italic"],
 ". Para entender esto veamos el siguiente ejemplo."
}], "Text",
 CellChangeTimes->{{3.716319272454618*^9, 3.716319292022497*^9}, {
  3.716319382852829*^9, 3.7163194486357527`*^9}, {3.716319489570931*^9, 
  3.716319536418705*^9}},ExpressionUUID->"5530db1d-d633-4293-964e-\
ce457c2cf4d9"],

Cell["Al ejecutar el siguiente c\[OAcute]digo,", "Text",
 CellChangeTimes->{{3.7163195527373734`*^9, 
  3.716319563433465*^9}},ExpressionUUID->"8a2a19b8-a77c-4629-996f-\
fca94f960a6c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", " ", "=", " ", 
  RowBox[{"RandomReal", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.716319540413542*^9, 
  3.716319546929921*^9}},ExpressionUUID->"42107c30-4e91-45b4-a2b3-\
3484d2f7ace5"],

Cell[BoxData["0.4060105663331297`"], "Output",
 CellChangeTimes->{
  3.727217749591878*^9},ExpressionUUID->"7284ec45-fa84-4132-b3ad-\
4eb641f3f050"]
}, Open  ]],

Cell["n adquiere un valor que permanece fijo.", "Text",
 CellChangeTimes->{{3.716319567680887*^9, 
  3.716319598400391*^9}},ExpressionUUID->"4b9c9f8c-8e75-4e1d-abc5-\
4fba62bc6624"],

Cell[CellGroupData[{

Cell[BoxData["n"], "Input",
 CellChangeTimes->{
  3.716319587547082*^9},ExpressionUUID->"54bcdf7a-6066-4fd7-bf03-\
828db480cedf"],

Cell[BoxData["0.4060105663331297`"], "Output",
 CellChangeTimes->{
  3.727217749728113*^9},ExpressionUUID->"bc4f8d63-67fd-4e87-b46c-\
b897d77f2331"]
}, Open  ]],

Cell["\<\
Pero con una asignaci\[OAcute]n retardada, n no adquiere ning\[UAcute]n valor \
espec\[IAcute]fico.\
\>", "Text",
 CellChangeTimes->{{3.716319607488366*^9, 
  3.716319622072317*^9}},ExpressionUUID->"6a358fa8-df5d-4e5b-90e2-\
990e0006c815"],

Cell[BoxData[
 RowBox[{"n", " ", ":=", " ", 
  RowBox[{"RandomReal", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7163196236435013`*^9, 
  3.716319628071701*^9}},ExpressionUUID->"4da0448c-0936-4d0f-add6-\
dfcf8e48732e"],

Cell["\<\
Entonces cada vez que queramos ver el valor de n, se llamar\[AAcute] a la \
funci\[OAcute]n RandomReal.\
\>", "Text",
 CellChangeTimes->{{3.716319634815569*^9, 
  3.716319651527944*^9}},ExpressionUUID->"94b3e78e-e7dd-4315-a446-\
18191a0f9aa8"],

Cell[CellGroupData[{

Cell[BoxData["n"], "Input",
 CellChangeTimes->{
  3.716319652419424*^9},ExpressionUUID->"88dc8c80-a0db-49b5-be36-\
4f473e02e225"],

Cell[BoxData["0.5810635722499675`"], "Output",
 CellChangeTimes->{
  3.727217749837141*^9},ExpressionUUID->"c122a0da-2bda-4aa8-b061-\
4cfb3fb7a60d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["n"], "Input",
 CellChangeTimes->{
  3.716319653851226*^9},ExpressionUUID->"c28149d7-0f1c-44d3-a84f-\
b743bb829fb1"],

Cell[BoxData["0.03294493209290694`"], "Output",
 CellChangeTimes->{
  3.727217749870099*^9},ExpressionUUID->"8b05606c-9727-4dbe-b30c-\
7d40c366a7cf"]
}, Open  ]],

Cell[TextData[{
 "La convenci\[OAcute]n para nombrar s\[IAcute]mbolos es usar ",
 StyleBox["lowerCamelCase",
  FontSlant->"Italic"],
 ". La utilidad de asignaciones retardadas quedar\[AAcute] m\[AAcute]s clara \
al ver el comportamiento de las funciones y reglas de sustituci\[OAcute]n."
}], "Text",
 CellChangeTimes->{{3.716320090066039*^9, 3.71632011270455*^9}, {
  3.727283097175778*^9, 
  3.727283126015823*^9}},ExpressionUUID->"c7f361e7-4970-447d-8b08-\
9e5d79525969"],

Cell["\<\
Los operadores = y := son equivalentes a las funciones Set[] y SetDelayed[].\
\>", "Text",
 CellChangeTimes->{{3.727284683336433*^9, 
  3.727284706968849*^9}},ExpressionUUID->"5951e867-e3e5-439b-928c-\
53bef28899db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"a", "=", "b"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.727284661210579*^9, 
  3.7272846690894203`*^9}},ExpressionUUID->"eafa82ee-3cf3-48b6-8e2a-\
7880e634dd89"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"Set", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.727284669414579*^9},ExpressionUUID->"a1e8e833-c769-46d6-a23d-\
c1363d1efabc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"a", ":=", "b"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.727284676777605*^9},ExpressionUUID->"0db41ef8-d342-468b-90b0-\
b66ecea1dd3b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"SetDelayed", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.727284676979341*^9},ExpressionUUID->"29e94f6f-0774-4b1c-bbf3-\
b754f05e91df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio:", "Subsubsection",
 CellChangeTimes->{{3.727282888155446*^9, 
  3.727282889507326*^9}},ExpressionUUID->"1c63e77b-0d3a-4786-86bd-\
08af598924b3"],

Cell["Reemplazar x en", "Text",
 CellChangeTimes->{{3.7272828951071787`*^9, 3.727282899331161*^9}, 
   3.7272829465783033`*^9, {3.72728299782542*^9, 
   3.727283013321124*^9}},ExpressionUUID->"40ae1ddd-a647-4b56-aec6-\
5998f9ab0baa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"x", "+", "1"}], ",", 
   RowBox[{"x", "+", "2"}], ",", 
   RowBox[{"x", "^", "2"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.727283015565548*^9, 
  3.727283026801277*^9}},ExpressionUUID->"427520fb-0cd2-4619-8243-\
2d2385bce114"],

Cell["por un n\[UAcute]mero entero aleatorio entre el 0 y 100.", "Text",
 CellChangeTimes->{{3.7272830295767403`*^9, 3.72728304136056*^9}, {
  3.727283086439907*^9, 
  3.727283095439748*^9}},ExpressionUUID->"10437b50-ce82-47f8-a511-\
c50048ff7729"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Iteradores y construcci\[OAcute]n de listas", "Subchapter",
 CellChangeTimes->{{3.7163168839521103`*^9, 3.716316886023961*^9}, {
  3.7272979777044907`*^9, 
  3.727297982358485*^9}},ExpressionUUID->"c85b3e09-500a-4de0-afc1-\
b51de8965cbf"],

Cell["\<\
El lenguaje Wolfram posee funciones para iterar sobre elementos o un rango \
num\[EAcute]rico. La regla general es que si uno utiliza una estructura de \
control tipo For, While o Do, probablemente hay una ineficiencia en el dise\
\[NTilde]o del c\[OAcute]digo. El iterador m\[AAcute]s general es Table, que \
nos permite crear listas.\
\>", "Text",
 CellChangeTimes->{{3.716316893263592*^9, 3.716316961423064*^9}, {
   3.716317011943817*^9, 3.716317036919627*^9}, 3.716317108768903*^9, {
   3.727284746969369*^9, 
   3.72728475653685*^9}},ExpressionUUID->"0a29a853-d4ff-4cf1-a0d0-\
11f8a84b88fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"i", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7163170380662737`*^9, 
  3.716317046264782*^9}},ExpressionUUID->"04f957b6-eabf-4ffe-82f4-\
2f697f3d835d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.72721774990382*^9},ExpressionUUID->"720502c3-dea2-4020-8552-4091c9cd02b7"]
}, Open  ]],

Cell["Nota", "Item",
 CellChangeTimes->{{3.727301403775522*^9, 3.727301404431909*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"a279dc84-dc56-4043-8af2-9b436292e710"],

Cell["\<\
Esto contrasta con la forma de operar listas en otros lenguajes, que por lo \
general suele escribirse con la siguiente sintaxis (n\[OAcute]tese la \
utilidad de la asignaci\[OAcute]n retardada):\
\>", "Text",
 CellChangeTimes->{{3.7272979976862926`*^9, 3.72729802993365*^9}, 
   3.727298085551794*^9, {3.727301309401885*^9, 3.7273013192975683`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"1d6b520b-fc94-4439-8559-54ed41b49af6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"procedural", " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", "outputList"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"outputList", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"i", "\[LessEqual]", " ", "20"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"outputList", ",", "i"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "outputList"}]}], "\[IndentingNewLine]", "]"}]}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", "procedural"}], "Input",
 CellChangeTimes->{{3.727298057785234*^9, 3.727298214665669*^9}, {
  3.7272983663036613`*^9, 3.727298373462954*^9}, {3.727301378082877*^9, 
  3.727301378507875*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"21e80e42-2e23-4c99-9280-681d94ddcc3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",\

 CellChangeTimes->{3.7273013825503674`*^9},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"4a18ec70-b951-4631-9499-20e0c7e27dfe"]
}, Open  ]],

Cell["\<\
Este tipo de programaci\[OAcute]n, que se conoce como programaci\[OAcute]n \
procedimental, no es adecuada para el lenguaje Wolfram. Esto queda \
m\[AAcute]s evidente cuando se mide el tiempo de ejecuci\[OAcute]n:\
\>", "Text",
 CellChangeTimes->{{3.727298261023573*^9, 3.727298281991518*^9}, 
   3.7272983276865273`*^9, {3.727298386414187*^9, 3.7272983999257812`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"dd77e3a9-2c1f-4d26-8bb1-1f6a0b2275f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tiempoProcedural", " ", "=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"RepeatedTiming", "[", "procedural", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727298400695485*^9, 3.727298426685264*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"77267a07-1358-430a-89de-d7b5c15449f7"],

Cell[BoxData["0.0000357738504336443`2."], "Output",
 CellChangeTimes->{{3.727298405961875*^9, 3.7272984275125227`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"fb361a4e-a780-479e-997d-a581cf90c50f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tiempoFuncional", " ", "=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"RepeatedTiming", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "20"}], "}"}]}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.727298413497327*^9, 3.727298437845083*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"e0d14aa9-6696-4857-b61f-161603149aaf"],

Cell[BoxData["7.623046875`2.*^-6"], "Output",
 CellChangeTimes->{{3.727298414153145*^9, 3.727298438084145*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"2c04aed4-1fd6-4ebd-848c-21549cd294a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", "*", 
  RowBox[{"N", "[", 
   FractionBox["tiempoProcedural", "tiempoFuncional"], "]"}]}]], "Input",
 CellChangeTimes->{{3.727298446098723*^9, 3.727298459797324*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"071a2db5-50f3-4a32-8e13-de2e0aecb310"],

Cell[BoxData["469.28545790484`"], "Output",
 CellChangeTimes->{{3.727298454972777*^9, 3.7272984602555857`*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"9b17e639-e1b7-4f51-98f4-774d1e52c512"]
}, Open  ]],

Cell["El aumento de velocidad es alrededor del 469 % !!!!!", "Text",
 CellChangeTimes->{{3.727298464524037*^9, 3.727298481388814*^9}},
 Background->RGBColor[
  0.94, 0.88, 0.94],ExpressionUUID->"932b836c-06fa-478b-a6f1-3f1bcdc16415"],

Cell["\<\
Lo \[UAcute]til de las tablas es que dentro de ellas se pueden realizar \
operaciones arbitrarias\
\>", "Text",
 CellChangeTimes->{{3.7273014496804733`*^9, 
  3.727301465542426*^9}},ExpressionUUID->"5a12b46d-97aa-46a4-9da8-\
1b0082108675"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716317049594529*^9, 
  3.716317057200129*^9}},ExpressionUUID->"7a387991-46d0-4f1f-af34-\
29ef6aa3c2ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", "64", ",", "81", ",", 
   "100"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217749940543*^9},ExpressionUUID->"3e46c59f-cb40-4c16-bb85-\
bcfebf098aee"]
}, Open  ]],

Cell["Table tambi\[EAcute]n nos permite iterar sobre listas", "Text",
 CellChangeTimes->{{3.71631711319191*^9, 
  3.716317124680427*^9}},ExpressionUUID->"6a187ef7-7e5d-4bb6-bc4f-\
07bd7f5a0a24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"2", "*", "i"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "2"}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.716317126555489*^9, 
  3.716317147408846*^9}},ExpressionUUID->"76116e84-4871-4eb4-ae5b-\
7dfdf8e7ebc9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "6", ",", "8", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177499845753`*^9},ExpressionUUID->"d8679cec-819f-46e8-8b18-\
d0fede790742"]
}, Open  ]],

Cell["Nota", "Item",
 CellChangeTimes->{{3.7273016603688087`*^9, 3.7273016611369543`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"37b4e431-ebd8-4320-b434-f7bd195464f5"],

Cell["\<\
Uno de los usos comunes de Table es crear una lista con n elementos \
repetidos. Por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.727301662538357*^9, 3.727301687793241*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"9e1b5287-4d9e-4207-a741-8bcf632453b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"1", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.727301691052156*^9, 3.727301696281698*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"971bdf08-d519-40ff-a765-d34dabef9113"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.72730169640056*^9},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"97f9a38c-c815-48b2-b3b3-a639d5dac47d"]
}, Open  ]],

Cell["\<\
Eval\[UAcute]a 10 veces el n\[UAcute]mero 1 lo que a efectos \
pr\[AAcute]cticos significa un array constante, \[DownExclamation]pero hay \
que tener cuidado! El argumento dentro de Table puede cambiar con cada \
evaluaci\[OAcute]n de manera que podr\[IAcute]amos obtener resultados err\
\[OAcute]neos. Si se eval\[UAcute]a una variable con una asignaci\[OAcute]n \
retardada puede haber complicaciones.\
\>", "Text",
 CellChangeTimes->{{3.727301700136547*^9, 3.727301819153098*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"c4c27d6a-bbd0-4511-9f2d-289f9b1465a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", " ", ":=", " ", 
   RowBox[{"RandomColor", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.727301620901536*^9, 3.727301633113784*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"f99b384c-01ba-458b-b9f4-2cb097d62c85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"c", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.727301635396516*^9, 3.727301637762236*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"b3b7d5a4-c81f-4153-8f22-aa88c9275aa2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.16978852873192074`, 0.31843938210988876`, 0.8336084603458491], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.11319235248794716`, 0.2122929214065925, 0.5557389735638995],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.16978852873192074, 0.31843938210988876, \
0.8336084603458491]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.16978852873192074`, 0.31843938210988876`, 0.8336084603458491]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.16978852873192074`, 0.31843938210988876`, 0.8336084603458491],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8223790588815998, 0.7319023247476437, 0.8635252080105642],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5482527059210666, 0.4879348831650958, 0.5756834720070428],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8223790588815998, 0.7319023247476437, 0.8635252080105642]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8223790588815998, 0.7319023247476437, 0.8635252080105642]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8223790588815998, 0.7319023247476437, 0.8635252080105642],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7197949115894258, 0.5686354886831095, 0.5111542518145891],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4798632743929505, 0.3790903257887397, 0.34076950120972604`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.7197949115894258, 0.5686354886831095, 0.5111542518145891]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7197949115894258, 0.5686354886831095, 0.5111542518145891]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7197949115894258, 0.5686354886831095, 0.5111542518145891],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.13590796389940252`, 0.2327206146187466, 0.7674260774506634], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.09060530926626835, 0.15514707641249775`, 0.511617384967109],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.13590796389940252, 0.2327206146187466, 0.7674260774506634]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.13590796389940252`, 0.2327206146187466, 0.7674260774506634]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.13590796389940252`, 0.2327206146187466, 0.7674260774506634],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.043429320371571434`, 0.12770568740482546`, 0.38888780466822825`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.02895288024771429, 0.08513712493655032, 0.2592585364454855],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.043429320371571434, 0.12770568740482546, \
0.38888780466822825]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.043429320371571434`, 0.12770568740482546`, 0.38888780466822825`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
    0.043429320371571434`, 0.12770568740482546`, 0.38888780466822825`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7243019127243957, 0.8834897508241522, 0.2875346617541821],
          RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4828679418162638, 0.5889931672161015, 0.19168977450278807`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.7243019127243957, 0.8834897508241522, 0.2875346617541821]"],
     
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7243019127243957, 0.8834897508241522, 0.2875346617541821]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7243019127243957, 0.8834897508241522, 0.2875346617541821],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.861976828618767, 0.4241354518715066, 0.5906095211970519], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.574651219079178, 0.28275696791433774`, 0.3937396807980346],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.861976828618767, 0.4241354518715066, 0.5906095211970519]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.861976828618767, 0.4241354518715066, 0.5906095211970519]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.861976828618767, 0.4241354518715066, 0.5906095211970519],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.3569374015487208, 0.5684360355064291, 0.26524719573775135`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.23795826769914719`, 0.37895735700428607`, 0.17683146382516757`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3569374015487208, 0.5684360355064291, 0.26524719573775135]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.3569374015487208, 0.5684360355064291, 0.26524719573775135`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3569374015487208, 0.5684360355064291, 0.26524719573775135`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.6849398018376489, 0.8384334247152958, 0.34952067574291057`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4566265345584326, 0.5589556164768639, 0.23301378382860705`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6849398018376489, 0.8384334247152958, 0.34952067574291057]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.6849398018376489, 0.8384334247152958, 0.34952067574291057`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6849398018376489, 0.8384334247152958, 0.34952067574291057`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9062727380851534, 0.7346901715366165, 0.11169147574757665`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6041818253901023, 0.4897934476910777, 0.07446098383171777],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9062727380851534, 0.7346901715366165, 0.11169147574757665]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9062727380851534, 0.7346901715366165, 0.11169147574757665`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9062727380851534, 0.7346901715366165, 0.11169147574757665`],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.727301637998777*^9},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"aec3ea9e-4196-410e-8f9c-bfef6345fe49"]
}, Open  ]],

Cell["\<\
En los casos que se desee especificar que la variable siempre debe tener el \
mismo valor es mejor usar ConstantArray[].\
\>", "Text",
 CellChangeTimes->{{3.7273018244244432`*^9, 3.727301847520751*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"b6259d8b-25e4-4506-909d-f88eaf293030"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstantArray", "[", 
  RowBox[{"c", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.727301640500771*^9, 3.727301643153428*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"426bddee-8305-4802-b786-83d367ed62c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.9036810071327546, 0.43747545255559306`, 0.3602728868628935], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.6024540047551697, 0.29165030170372874`, 0.24018192457526233`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9036810071327546, 0.43747545255559306, 0.3602728868628935]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.9036810071327546, 0.43747545255559306`, 0.3602728868628935]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9036810071327546, 0.43747545255559306`, 0.3602728868628935],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7273016434035482`*^9},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"e5adeded-c7f2-4db0-8a6f-360654e1ee18"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.71631718089649*^9, 3.716317181912855*^9}, {
   3.71631725616094*^9, 3.716317256321233*^9}, 
   3.727301997495255*^9},ExpressionUUID->"92c069dd-6f16-4091-a713-\
27ab870140c2"],

Cell["A partir de la lista", "Text",
 CellChangeTimes->{{3.7163171839446707`*^9, 
  3.71631720724889*^9}},ExpressionUUID->"aa806fa5-02b1-493f-9fa2-\
fa74ee811957"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "\"\<hola\>\"", ",", 
    RowBox[{"9", "/", "8"}], ",", "2.3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.716317209716085*^9, 
  3.7163172254256*^9}},ExpressionUUID->"fbd29d12-720b-43c3-86af-a7572cab107b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\<\"hola\"\>", ",", 
   FractionBox["9", "8"], ",", "2.3`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217750028922*^9},ExpressionUUID->"bdc89a90-833d-4523-869a-\
60f44163877a"]
}, Open  ]],

Cell["\<\
crear un snippet que obtenga el encabezado (Head) de cada elemento.\
\>", "Text",
 CellChangeTimes->{{3.716317229408293*^9, 
  3.716317253793256*^9}},ExpressionUUID->"582e3ce0-2960-4daf-a143-\
2e013fe494f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.716317258904686*^9, 3.7163172601452913`*^9}, 
   3.727301999807137*^9},ExpressionUUID->"0f0cad0a-2549-47aa-a53a-\
9d1e08321e9d"],

Cell["Crear un snippet que genera la siguiente lista", "Text",
 CellChangeTimes->{{3.716317263657034*^9, 
  3.716317271665217*^9}},ExpressionUUID->"10b12d32-8dd5-478a-98c6-\
7130c770eb79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "81"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "100"}], "}"}]}], "}"}]], "Input",ExpressionUUID->\
"882e01ab-dd04-4d3f-ae5b-2f4942587b8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "49"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "81"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "100"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177500958157`*^9},ExpressionUUID->"60c28eb2-1e14-494a-9156-\
90c41976741e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3:", "Subsubsection",
 CellChangeTimes->{{3.716318081053721*^9, 3.7163180849337597`*^9}, {
   3.716318140229343*^9, 3.716318140357622*^9}, 
   3.727301995015223*^9},ExpressionUUID->"5a3324c2-51f4-4103-a3d0-\
942526be589b"],

Cell["Dadas dos listas", "Text",
 CellChangeTimes->{{3.716318086293621*^9, 
  3.7163180896059933`*^9}},ExpressionUUID->"11569a30-6c1b-4aab-b02a-\
cd28270f0fef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}]}], 
  ";"}]}], "Input",ExpressionUUID->"f3f4e4e5-36dd-466e-88ec-4ad6800de539"],

Cell["Escriba el c\[OAcute]digo que devuelva", "Text",
 CellChangeTimes->{{3.716318097957697*^9, 
  3.716318104629842*^9}},ExpressionUUID->"4ad8d306-ec71-4ed8-9604-\
70a000746897"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}]}], "}"}]], "Input",ExpressionUUID->\
"ccdc2911-6bb6-4076-9835-33bc55238ad0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217750147642*^9},ExpressionUUID->"ab4d9c5d-493b-431e-b40f-\
51fca5ee581b"]
}, Open  ]],

Cell["\<\
Nota: Hay dos formas eficientes de hacer esto. Puede ser \[UAcute]til buscar \
en la documentaci\[OAcute]n, pero no es necesario.\
\>", "Text",
 CellChangeTimes->{{3.716318110333804*^9, 3.716318117781692*^9}, {
  3.716318148485471*^9, 3.716318156981455*^9}, {3.727283204325305*^9, 
  3.727283211133788*^9}},ExpressionUUID->"af91ac51-0a38-44c1-b852-\
c2b395ded0d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 4:", "Subsubsection",
 CellChangeTimes->{{3.727301989663351*^9, 
  3.727301992134871*^9}},ExpressionUUID->"45e27c31-81cc-4ff6-a22f-\
c61bda04f06f"],

Cell["\<\
La funci\[OAcute]n Column[] nos permite apilar elementos en una columna\
\>", "Text",
 CellChangeTimes->{{3.727302010318994*^9, 
  3.727302030839031*^9}},ExpressionUUID->"b68d02a1-b808-4d7b-b73a-\
546e46f1a64d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "5", ",", "7", ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.727302031697016*^9, 
  3.727302041815494*^9}},ExpressionUUID->"6002641d-e3cf-4f8a-ade0-\
3a76d0ba5628"],

Cell[BoxData[
 TagBox[GridBox[{
    {"3"},
    {"5"},
    {"7"},
    {"1"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.727302042081109*^9},ExpressionUUID->"6baca84f-7240-4506-a18e-\
b3332c3dce83"]
}, Open  ]],

Cell["Crear  una tabla que devuelva el siguiente resultado.", "Text",
 CellChangeTimes->{{3.727302173821309*^9, 
  3.727302181589492*^9}},ExpressionUUID->"80182768-a3d9-4206-aa9b-\
266ec8802bc9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"1"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"},
      {"6"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"},
      {"6"},
      {"7"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {"1"},
      {"2"},
      {"3"},
      {"4"},
      {"5"},
      {"6"},
      {"7"},
      {"8"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727302161319477*^9},ExpressionUUID->"a8ae4c1b-e5ba-44c2-9f99-\
52b481243029"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Patrones y reglas de sustituci\[OAcute]n", "Subchapter",
 CellChangeTimes->{{3.716247185888242*^9, 3.7162471901822233`*^9}, 
   3.716247325971777*^9, {3.716247364162117*^9, 3.7162473673929377`*^9}, {
   3.727303500020035*^9, 
   3.727303504499421*^9}},ExpressionUUID->"1e540197-0273-4e1f-85b3-\
3a3f18d2e078"],

Cell[TextData[{
 "Las reglas de sustituci\[OAcute]n son un aspecto central en el \
dise\[NTilde]o del lenguaje Wolfram, de hecho, como se ver\[AAcute] \
posteriormente, las funciones son un caso especial de una regla de sustituci\
\[OAcute]n con patrones. Este es uno de los puntos m\[AAcute]s fuertes del \
lenguaje debido a su gran flexibilidad y claridad. Esto contrasta mucho con \
la forma de manipular patrones de datos usando otros lenguajes.\n\nUna t\
\[EAcute]cnica muy com\[UAcute]n en otros lenguajes de programaci\[OAcute]n \
consiste en utilizar una sintaxis llamada ",
 StyleBox["expresiones regulares",
  FontSlant->"Italic"],
 " o ",
 StyleBox["regex",
  FontSlant->"Italic"],
 ", que no podr\[IAcute]a ser m\[AAcute]s endemoniadamente complicada. La \
siguiente expresi\[OAcute]n regular se usa para verificar si una cadena de \
texto corresponde a un correo electr\[OAcute]nico v\[AAcute]lido.\n\n\
/^([a-z0-9_\\.-]+)@([\\da-z\\.-]+)\\.([a-z\\.]{2,6})$/"
}], "Text",
 CellChangeTimes->{{3.716247215367662*^9, 3.716247235860568*^9}, 
   3.7162473236343603`*^9, {3.716315226616818*^9, 3.716315247487686*^9}, {
   3.7163152845427227`*^9, 3.71631535248564*^9}, {3.727303491180747*^9, 
   3.727303638747261*^9}, {3.727303694842286*^9, 3.7273037407460117`*^9}, {
   3.72730390699109*^9, 3.727303909622984*^9}, {3.727304357631343*^9, 
   3.727304362878462*^9}},ExpressionUUID->"4dc29d32-95a4-4d3e-9c39-\
c427f415e279"],

Cell["\<\
Mathematica puede trabajar con Regex, pero su uso es casi siempre innecesario.\
\>", "Text",
 CellChangeTimes->{{3.727303914060368*^9, 
  3.7273039508604813`*^9}},ExpressionUUID->"d8698a1a-7199-4d28-a936-\
67005e7b98a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"\"\<john@doe.com\>\"", ",", 
   RowBox[{
   "RegularExpression", "[", 
    "\"\<^([a-z0-9_\\\\.-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$\>\"", 
    "]"}]}], "]"}]], "Input",ExpressionUUID->"6b72616d-cdd1-4fac-b073-\
2cad6c5380cc"],

Cell[BoxData[
 RowBox[{"{", "\<\"john@doe.com\"\>", "}"}]], "Output",
 CellChangeTimes->{
  3.727303898153878*^9},ExpressionUUID->"0ce2eafc-0057-4968-8625-\
004917a0b7e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{"\"\<john@doe.something\>\"", ",", 
   RowBox[{
   "RegularExpression", "[", 
    "\"\<^([a-z0-9_\\\\.-]+)@([\\\\da-z\\\\.-]+)\\\\.([a-z\\\\.]{2,6})$\>\"", 
    "]"}]}], "]"}]], "Input",ExpressionUUID->"c57a0b7d-0845-4881-9911-\
966d8720b8c1"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.727303904254732*^9},ExpressionUUID->"9fea5960-75a9-48cf-b55b-\
2a05b1fa1352"]
}, Open  ]],

Cell["\<\
La funci\[OAcute]n m\[AAcute]s elemental para trabajar con patrones en forma \
nativa en el lenguaje Wolfram es MatchQ[], que se encarga de determinar si \
una expresi\[OAcute]n encaja con un patr\[OAcute]n especificado. Por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.727304042066423*^9, 
  3.7273040991858883`*^9}},ExpressionUUID->"9d6601a5-e924-4f12-ab49-\
9573c4b0fd0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "x", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", "x", ",", "_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.72730410105259*^9, 
  3.727304115818408*^9}},ExpressionUUID->"6f92241c-0aa5-458b-9b92-\
2532c25d2e96"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.727304116059992*^9},ExpressionUUID->"2d0c857c-d12b-4bbf-babb-\
75f1a0bb6a1f"]
}, Open  ]],

Cell["\<\
Da un resultado afirmativo. En este ejemplo la funci\[OAcute]n trata de \
emparejar la lista {a, x, b} con la lista {_, x, _}. El s\[IAcute]mbolo  _  \
representa un patr\[OAcute]n vac\[IAcute]o, es decir, un patr\[OAcute]n donde \
cualquier expresi\[OAcute]n puede coincidir.\
\>", "Text",
 CellChangeTimes->{{3.727304118129073*^9, 3.727304209151731*^9}, {
  3.7273042413598547`*^9, 
  3.7273042441836557`*^9}},ExpressionUUID->"4bf493dc-c088-4f2a-a8ad-\
195c3ffbc343"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"any", "[", "expression", "]"}], ",", "_"}], "]"}]], "Input",Expres\
sionUUID->"e697ba9e-6e24-4832-acd7-fdadbad3ef8e"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.727304221951227*^9},ExpressionUUID->"3d53845e-1800-4868-9085-\
b8e24d39c5f8"]
}, Open  ]],

Cell["Internamente al patr\[OAcute]n _ se le conoce como patr\[OAcute]n \
Blank[]", "Text",
 CellChangeTimes->{{3.727304271454474*^9, 
  3.727304287078466*^9}},ExpressionUUID->"51530827-6324-467b-9946-\
02fc6d402ab1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "_", "]"}]], "Input",ExpressionUUID->"fd878d0c-08a0-4de0-850f-600050ffdcdc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Blank", "[", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.727304292349247*^9},ExpressionUUID->"5650e723-5e13-4e7f-8ef5-\
8cbb59263b73"]
}, Open  ]],

Cell["\<\
Los patrones son \[UAcute]tiles para seleccionar elementos que cumplen cierto \
criterio, esto se hace con la funci\[OAcute]n Cases[]\
\>", "Text",
 CellChangeTimes->{{3.727304376636799*^9, 3.7273044102603693`*^9}, {
  3.727304494675077*^9, 
  3.727304504442678*^9}},ExpressionUUID->"2905e961-4e12-425f-afbe-\
8a93ba85a71d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "a"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "b"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "_"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7273044111681557`*^9, 
  3.7273044889087887`*^9}},ExpressionUUID->"65fff80d-2148-44dd-8721-\
a1be6626edbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"b", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "b"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727304489190503*^9},ExpressionUUID->"3bd199fe-293e-40e5-b8cb-\
3082c41bab53"]
}, Open  ]],

Cell["\<\
Pero la verdadera utilidad de los patrones es que con ellos podemos \
establecer reglas de sustituci\[OAcute]n, y esto es fundamental a la hora de \
hacer operaciones algebraicas o manipular grandes bases de datos. Para usar \
esta funcionalidad es necesario establecer una regla de sustituci\[OAcute]n \
que buscar\[AAcute] un patr\[OAcute]n. Un ejemplo de una regla de sustituci\
\[OAcute]n simple puede ser reemplazar todas las ocurrencias del \
n\[UAcute]mero 1 por el n\[UAcute]mero 2, donde el n\[UAcute]mero 1 es el \
patr\[OAcute]n a buscar que ser\[AAcute] reemplazado por el n\[UAcute]mero 2.\
\
\>", "Text",
 CellChangeTimes->{
  3.727303487294055*^9, {3.7273045590181627`*^9, 
   3.727304646137356*^9}},ExpressionUUID->"d6aee576-88f3-45b5-bb80-\
bde7be4bde99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "1", ",", "9", ",", "8"}], 
   "}"}], " ", "/.", " ", 
  RowBox[{"1", "\[Rule]", "2"}]}]], "Input",
 CellChangeTimes->{{3.716315353862406*^9, 
  3.7163153678205347`*^9}},ExpressionUUID->"fa1916c4-21fc-4f2c-83c5-\
801680935d11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2", ",", "3", ",", "4", ",", "2", ",", "9", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.727217750202834*^9},ExpressionUUID->"911cfc4a-7882-42f7-ae94-\
c1f05a9c89d8"]
}, Open  ]],

Cell["\<\
Aqu\[IAcute] hay 2 de los 3 operadores b\[AAcute]sicos en patrones.    /. es \
el operador que representa a la funci\[OAcute]n ReplaceAll, y -> Representa \
la funci\[OAcute]n Rule.\
\>", "Text",
 CellChangeTimes->{{3.716315866573832*^9, 3.716315882070261*^9}, {
   3.716319855876021*^9, 3.7163199431313*^9}, 3.7273034176701*^9, {
   3.72730465853621*^9, 
   3.72730471107121*^9}},ExpressionUUID->"ceb2d46e-2fc5-46a3-a056-\
ead45735db1a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "1", ",", "9", ",", "8"}], "}"}],
     " ", "/.", " ", 
    RowBox[{"1", "\[Rule]", "2"}]}], "]"}], "]"}]], "Input",ExpressionUUID->\
"119f5c75-6ff6-48f0-bb26-ea34b5f7d540"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{"List", "[", 
       RowBox[{
       "1", ",", "2", ",", "3", ",", "4", ",", "1", ",", "9", ",", "8"}], 
       "]"}], ",", 
      RowBox[{"Rule", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.7273047171115417`*^9, 
  3.72730472498531*^9}},ExpressionUUID->"7b89d69b-879c-4890-aca4-\
998352fc598a"]
}, Open  ]],

Cell["\<\
El patr\[OAcute]n underscore _ hace un match de cualquier tipo de expresi\
\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.716315993596237*^9, 
  3.716316023372065*^9}},ExpressionUUID->"4ae8e4d4-ca1e-4031-8793-\
35bfbfff64bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "1", ",", "9", ",", "8"}], 
   "}"}], " ", "/.", " ", 
  RowBox[{"_", "\[Rule]", "3"}]}]], "Input",
 CellChangeTimes->{
  3.7163160503431*^9},ExpressionUUID->"1983b39c-6700-42a2-b13a-692989c41c12"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.727217750290344*^9},ExpressionUUID->"210aa66f-4732-4baf-8c8d-\
8b4bf0e52783"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "/.", " ", 
  RowBox[{"_", "\[Rule]", "3"}]}]], "Input",
 CellChangeTimes->{{3.7163152624806967`*^9, 3.716315271798308*^9}, 
   3.7163160315544577`*^9},ExpressionUUID->"1f969b35-53b4-4640-a033-\
19472a3b8c36"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.727217750333235*^9},ExpressionUUID->"8493a1c5-3b11-4c15-a3cf-\
34827847f925"]
}, Open  ]],

Cell["\<\
\[DownQuestion]Para qu\[EAcute] nos sirve este tipo de patr\[OAcute]n? \
Resulta extremadamente \[UAcute]til cuando se requiere ignorar o reemplazar \
un elemento de una expresi\[OAcute]n. Por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.716316057427321*^9, 3.716316119179093*^9}, {
  3.727304890476041*^9, 
  3.7273048924599667`*^9}},ExpressionUUID->"afd5f6be-bab9-480a-a33a-\
2242c3adc96c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "0"}], "}"}]}], "}"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"_", ",", "2"}], "}"}], "\[Rule]", "Nothing"}]}]], "Input",
 CellChangeTimes->{{3.727304902053502*^9, 
  3.727304902900076*^9}},ExpressionUUID->"c8f2af80-4258-4896-8a5a-\
78b94fc11d62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7273049032350283`*^9},ExpressionUUID->"b5e03bb3-f563-4cb4-b939-\
24949362ffb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "0"}], "}"}]}], "}"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"_", ",", "2"}], "}"}], "\[Rule]", 
   "\"\<reemplazado\>\""}]}]], "Input",
 CellChangeTimes->{{3.7163161206998243`*^9, 
  3.716316163306355*^9}},ExpressionUUID->"8ad6fc64-6ac9-47b5-aac6-\
7d1a7d9d2e86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"reemplazado\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}], ",", "\<\"reemplazado\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217750388873*^9},ExpressionUUID->"06d2b2a3-58c7-4f3f-8c1a-\
5112de482356"]
}, Open  ]],

Cell["\<\
El tercer operador b\[AAcute]sico es :> que representa a RuleDelayed. \
RuleDelayed es a Rule lo que SetDelayed (:=) es a Set (=). Es \[UAcute]til \
cuando se desea aplicar transformaciones dentro de un patr\[OAcute]n. \
Pongamos un ejemplo.\
\>", "Text",
 CellChangeTimes->{
  3.7273046982884693`*^9, {3.7273047927975473`*^9, 3.727304805101515*^9}, {
   3.727304843372699*^9, 3.727304868604022*^9}, 3.727305579726918*^9, {
   3.7273056201985826`*^9, 
   3.727305642875887*^9}},ExpressionUUID->"a9d41897-0132-430f-9d1b-\
6411b913ef2c"],

Cell["\<\
El patr\[OAcute]n x_ es similar a _ con la diferencia de que guarda \
temporalmente el s\[IAcute]mbolo correspondiente en x. Al reemplazar con s\
\[IAcute]mbolos es m\[AAcute]s recomendable usar RuleDelayed. Por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.716317518616909*^9, 3.7163175729775047`*^9}, {
  3.716319971370633*^9, 
  3.7163199924985437`*^9}},ExpressionUUID->"fdbcb5fd-223f-4947-a496-\
eb9c21244f63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "0"}], "}"}]}], "}"}], " ", "/.", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x_", ",", "2"}], "}"}], "\[RuleDelayed]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", "2"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.716317579329607*^9, 
  3.716317599529519*^9}},ExpressionUUID->"b05bb03f-0c42-4bed-81ea-\
43f566b143e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217750444743*^9},ExpressionUUID->"666b9950-157b-49ba-a508-\
171141a69cb2"]
}, Open  ]],

Cell[TextData[{
 "Los patrones sirven como una alternativa a ",
 StyleBox["regex",
  FontSlant->"Italic"],
 " para hacer b\[UAcute]squedas dentro de listas."
}], "Text",
 CellChangeTimes->{{3.716320223286841*^9, 
  3.716320248694655*^9}},ExpressionUUID->"dab5bc8d-c0d8-4177-91f9-\
c70741fa747d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"g", "[", "2", "]"}], ",", 
     RowBox[{"f", "[", "5", "]"}], ",", 
     RowBox[{"g", "[", "3", "]"}]}], "}"}], ",", 
   RowBox[{"f", "[", "_", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716320212382485*^9, 
  3.716320213798921*^9}},ExpressionUUID->"3430ecb2-da0b-4c94-9043-\
95588f0dbfac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177504816236`*^9},ExpressionUUID->"dcfaa38d-f2dc-462d-8a82-\
61bb8568dbbc"]
}, Open  ]],

Cell["\<\
Otra forma de hacer esto es usando el patr\[OAcute]n _h, donde h es el \
encabezado de una funci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.727356223486533*^9, 
  3.727356241423325*^9}},ExpressionUUID->"932ec9f7-35ab-447f-ab71-\
89e0aa67ee21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"g", "[", "2", "]"}], ",", 
     RowBox[{"f", "[", "5", "]"}], ",", 
     RowBox[{"g", "[", "3", "]"}]}], "}"}], ",", "_f"}], "]"}]], "Input",
 CellChangeTimes->{{3.727356176832608*^9, 
  3.727356196944295*^9}},ExpressionUUID->"df8aeda2-6399-48b3-97a7-\
8954e24c8af4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.727356180571154*^9, 
  3.727356197149562*^9}},ExpressionUUID->"8bfdc327-0f66-4ee3-ad8e-\
4468626915e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.716320315557308*^9, 3.7163203186053143`*^9}, {
  3.716320434339951*^9, 3.716320434539893*^9}, {3.716320471603355*^9, 
  3.716320471819337*^9}},ExpressionUUID->"1fe0f3b6-76d8-4059-b5ca-\
7287aac1cf7f"],

Cell["\<\
Para buscar patrones a trav\[EAcute]s del encabezado se puede usar el patr\
\[OAcute]n _h, que por ejemplo, encuentra todas las expresiones con \
encabezado h. Escriba un c\[OAcute]digo que a partir de la lista\
\>", "Text",
 CellChangeTimes->{{3.716320320789154*^9, 
  3.716320371485094*^9}},ExpressionUUID->"5e4bdbf0-94a6-4f9b-a21b-\
74c2b1ee43e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", " ", "1", ",", " ", 
   RowBox[{"f", "[", "a", "]"}], ",", " ", "2", ",", " ", "3", ",", " ", "y", 
   ",", " ", 
   RowBox[{"f", "[", "8", "]"}], ",", " ", "9", ",", " ", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Input",ExpressionUUID->"e4c690a1-\
1637-4807-bdfd-bc5443694449"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", 
   RowBox[{"f", "[", "a", "]"}], ",", "2", ",", "3", ",", "y", ",", 
   RowBox[{"f", "[", "8", "]"}], ",", "9", ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7272177505195503`*^9, 
  3.727302531598112*^9},ExpressionUUID->"287c9439-e38b-4cdf-9b33-\
a3e7ae0ab634"]
}, Open  ]],

Cell["devuelva", "Text",
 CellChangeTimes->{{3.716320379228509*^9, 
  3.716320382292697*^9}},ExpressionUUID->"177bc5bc-894c-4f77-9b9c-\
bc3dad9f9df8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", " ", 
   RowBox[{"f", "[", "8", "]"}], ",", " ", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Input",ExpressionUUID->"3ca43335-\
611e-4b5e-9787-00801f3e4bec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", "8", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.72721775056273*^9},ExpressionUUID->"3f8c3cf3-ec08-4129-b85a-ba6b31f9e888"]
}, Open  ]],

Cell["usando patrones.", "Text",
 CellChangeTimes->{{3.7163203945962257`*^9, 
  3.716320396532238*^9}},ExpressionUUID->"e3a2b013-f54b-4450-905a-\
cb16545f362f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.716320475995262*^9, 
  3.7163204780110693`*^9}},ExpressionUUID->"3665ead2-bf93-49d0-98b3-\
bd84b8765ac7"],

Cell["Escriba un c\[OAcute]digo que a partir de la misma lista", "Text",
 CellChangeTimes->{{3.71632047961073*^9, 
  3.716320486187224*^9}},ExpressionUUID->"1ed16df6-2e26-49e6-bec6-\
161d028a4943"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", " ", "1", ",", " ", 
   RowBox[{"f", "[", "a", "]"}], ",", " ", "2", ",", " ", "3", ",", " ", "y", 
   ",", " ", 
   RowBox[{"f", "[", "8", "]"}], ",", " ", "9", ",", " ", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Input",ExpressionUUID->"03be73b7-\
b7a5-478f-a6b8-3cbab2924278"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", 
   RowBox[{"f", "[", "a", "]"}], ",", "2", ",", "3", ",", "y", ",", 
   RowBox[{"f", "[", "8", "]"}], ",", "9", ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.727217750605991*^9, 
  3.7273025289557734`*^9},ExpressionUUID->"313f951b-bb6c-4b97-9bee-\
3f90d549cf78"]
}, Open  ]],

Cell["extraiga los argumentos de la funci\[OAcute]n f.", "Text",
 CellChangeTimes->{{3.716320492970811*^9, 
  3.716320504066991*^9}},ExpressionUUID->"7c802521-c2aa-423c-9a86-\
2f16d04ae3e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proyecto: Visualizaci\[OAcute]n de d\[IAcute]gitos de \[Pi]", \
"Subsubsection",
 CellChangeTimes->{{3.727306356381172*^9, 
  3.727306368021233*^9}},ExpressionUUID->"ae9e421d-e9ca-47b1-a767-\
7f76c273530d"],

Cell["\<\
En este mini-proyecto se har\[AAcute] una visualizaci\[OAcute]n simple de los \
d\[IAcute]gitos de \[Pi] a trav\[EAcute]s de reglas de sustituci\[OAcute]n \
que cambien cada d\[IAcute]gito a un color. El proyecto se dividir\[AAcute] \
en peque\[NTilde]os problemas.\
\>", "Text",
 CellChangeTimes->{{3.72730638898855*^9, 
  3.727306438635621*^9}},ExpressionUUID->"a2f1598a-244a-46b1-8f81-\
9df0ba2f49a4"],

Cell["\<\
1. Dentro del lenguaje Wolfram existen colores predefinidos que se pueden \
usar directamente en el c\[OAcute]digo. Por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.727306444483857*^9, 3.727306451979514*^9}, {
  3.727306562777946*^9, 
  3.727306596089937*^9}},ExpressionUUID->"a3ff89dd-af32-4f51-9246-\
2ec50cc95516"],

Cell[CellGroupData[{

Cell[BoxData["Green"], "Input",
 CellChangeTimes->{{3.727306598054824*^9, 
  3.727306600850204*^9}},ExpressionUUID->"6dbcabc0-ad93-4572-b3cb-\
c45e1b400f1c"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0, 1, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0, 1, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.727306601192227*^9},ExpressionUUID->"22226cc2-c5be-49ac-8c20-\
4546d34072b6"]
}, Open  ]],

Cell["\<\
Tambi\[EAcute]n existen funciones que representan gradientes de colores, como\
\
\>", "Text",
 CellChangeTimes->{{3.727306641936775*^9, 
  3.72730665149687*^9}},ExpressionUUID->"59ed2b83-b859-4001-8772-\
8827ef25fa22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.3", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7273066541451902`*^9, 
  3.727306654601191*^9}},ExpressionUUID->"ac38869e-3c60-4561-a1ca-\
ccf83f5469c5"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.19863973333333335`, 0.3771952, 0.5014924000000001],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0.2979596, 0.5657928, 0.7522386000000001]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.2979596, 0.5657928, 0.7522386000000001]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.2979596, 0.5657928, 0.7522386000000001],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.727306655159115*^9},ExpressionUUID->"208a363e-919d-457f-ac85-\
d3af270eee80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "0.7", 
  "]"}]], "Input",
 CellChangeTimes->{{3.727306657521064*^9, 
  3.7273066590573273`*^9}},ExpressionUUID->"b9b6294f-80a7-447c-bffd-\
cf9732f5333b"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.8083415999999999, 0.7110806000000001, 0.255976], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.5388944, 0.4740537333333334, 0.17065066666666667`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0.8083415999999999, 0.7110806000000001, 0.255976]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.8083415999999999, 0.7110806000000001, 0.255976]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.8083415999999999, 0.7110806000000001, 0.255976],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7273066593841248`*^9},ExpressionUUID->"5c5736e3-6128-49cf-a180-\
0ffe6b6a1cfe"]
}, Open  ]],

Cell["\<\
Estas funciones se pueden encontrar dentro del men\[UAcute] Paletas->Esquemas \
de color.
Construye una lista de 10 colores diferentes utilizando un gradiente. El \
resultado esperado es algo similar al siguiente:\
\>", "Text",
 CellChangeTimes->{{3.727306663120323*^9, 
  3.727306739968124*^9}},ExpressionUUID->"db33da48-6ef8-45e1-b571-\
475b38f8e820"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.471412, 0.108766, 0.527016], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.3142746666666667, 0.07251066666666667, 0.35134400000000005`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.471412, 0.108766, 0.527016]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.471412, 0.108766, 0.527016]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.471412, 0.108766, 0.527016],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.18324053333333334`, 0.12150906666666669`, 0.48485253333333334`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.2748608, 0.18226360000000003, 0.7272788]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.2748608, 0.18226360000000003`, 0.7272788]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2748608, 0.18226360000000003`, 0.7272788],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2484884, 0.3863264, 0.813373], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.16565893333333334`, 0.25755093333333334`, 0.5422486666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.2484884, 0.3863264, 0.813373]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.2484884, 0.3863264, 0.813373]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2484884, 0.3863264, 0.813373],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.19863973333333337`, 0.3771952, 0.5014924000000001],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.29795960000000005, 0.5657928, 0.7522386]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.29795960000000005`, 0.5657928, 0.7522386]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.29795960000000005`, 0.5657928, 0.7522386],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.2588165333333334, 0.4494633333333333, 0.4023624],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.38822480000000004, 0.674195, 0.6035436]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.38822480000000004`, 0.674195, 0.6035436]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.38822480000000004`, 0.674195, 0.6035436],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.513417, 0.72992, 0.440682], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.342278, 0.48661333333333334`, 0.29378800000000005`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.513417, 0.72992, 0.440682]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.513417, 0.72992, 0.440682]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.513417, 0.72992, 0.440682],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.44405546666666684`, 0.4953612, 0.21529026666666662`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8083416, 0.7110806, 0.255976], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5388944, 0.47405373333333334`, 0.17065066666666667`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8083416, 0.7110806, 0.255976]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8083416, 0.7110806, 0.255976]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8083416, 0.7110806, 0.255976],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5956757333333333, 0.4002766666666666, 0.14703093333333334`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8935136, 0.6004149999999999, 0.2205464]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8935136, 0.6004149999999999, 0.2205464]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8935136, 0.6004149999999999, 0.2205464],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5953030666666668, 0.25977439999999996`, 0.11960053333333334`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8929546, 0.38966159999999994, 0.1794008]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8929546, 0.38966159999999994`, 0.1794008]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8929546, 0.38966159999999994`, 0.1794008],
    Editable->False,
    Selectable->False]}], "}"}]], "Input",ExpressionUUID->"3a349730-9e5b-4122-\
a8a5-0543d20fc0a8"],

Cell["\<\
2. Ahora se desea crear una regla de sustituci\[OAcute]n que asigne cada \
color a un d\[IAcute]gito. Es posible realizarlo a mano, pero al programar \
siempre se debe evitar algo as\[IAcute]. Una funci\[OAcute]n que nos puede \
servir es Thread, que se encarga de aplicar una funci\[OAcute]n a cada uno de \
sus argumentos iterando sobre elementos del mismo \[IAcute]ndice.\
\>", "Text",
 CellChangeTimes->{{3.727306907798172*^9, 3.7273070042152643`*^9}, {
  3.727307038158287*^9, 
  3.727307045663342*^9}},ExpressionUUID->"55376302-c5b9-4f8a-b403-\
df6798eb6536"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{"f", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "]"}]], "Input",Expres\
sionUUID->"cc884feb-955a-40f2-9903-6a8a7b858a3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "x"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", "y"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "z"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727307008649083*^9},ExpressionUUID->"5c16c554-6bb2-4f92-9bce-\
5655138761eb"]
}, Open  ]],

Cell["\<\
Conociendo que una regla tiene el equivalente en funci\[OAcute]n Rule[], \
obtenga la siguiente lista de forma program\[AAcute]tica (sin hacerlo a mano).\
\>", "Text",
 CellChangeTimes->{{3.7273070492944098`*^9, 
  3.727307122382784*^9}},ExpressionUUID->"1e7161cf-5557-49ae-91c2-\
4981cad4678c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.471412, 0.108766, 0.527016], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.3142746666666667, 0.07251066666666667, 0.35134400000000005`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.471412, 0.108766, 0.527016]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.471412, 0.108766, 0.527016]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.471412, 0.108766, 0.527016],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"1", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.18324053333333334`, 0.12150906666666669`, 0.48485253333333334`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.2748608, 0.18226360000000003, 0.7272788]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.2748608, 0.18226360000000003`, 0.7272788]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.2748608, 0.18226360000000003`, 0.7272788],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"2", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.2484884, 0.3863264, 0.813373], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.16565893333333334`, 0.25755093333333334`, 0.5422486666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.2484884, 0.3863264, 0.813373]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.2484884, 0.3863264, 0.813373]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.2484884, 0.3863264, 0.813373],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.19863973333333337`, 0.3771952, 0.5014924000000001],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.29795960000000005, 0.5657928, 0.7522386]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.29795960000000005`, 0.5657928, 0.7522386]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.29795960000000005`, 0.5657928, 0.7522386],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.2588165333333334, 0.4494633333333333, 0.4023624],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.38822480000000004, 0.674195, 0.6035436]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.38822480000000004`, 0.674195, 0.6035436]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.38822480000000004`, 0.674195, 0.6035436],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.513417, 0.72992, 0.440682], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.342278, 0.48661333333333334`, 0.29378800000000005`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.513417, 0.72992, 0.440682]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.513417, 0.72992, 0.440682]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.513417, 0.72992, 0.440682],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"6", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.44405546666666684`, 0.4953612, 0.21529026666666662`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"7", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.8083416, 0.7110806, 0.255976], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5388944, 0.47405373333333334`, 0.17065066666666667`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.8083416, 0.7110806, 0.255976]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.8083416, 0.7110806, 0.255976]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.8083416, 0.7110806, 0.255976],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"8", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5956757333333333, 0.4002766666666666, 0.14703093333333334`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.8935136, 0.6004149999999999, 0.2205464]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.8935136, 0.6004149999999999, 0.2205464]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.8935136, 0.6004149999999999, 0.2205464],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"9", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[
         0.5953030666666668, 0.25977439999999996`, 0.11960053333333334`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.8929546, 0.38966159999999994, 0.1794008]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.8929546, 0.38966159999999994`, 0.1794008]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.8929546, 0.38966159999999994`, 0.1794008],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Input",ExpressionUUID->"42a0b3d6-e7d3-\
4970-95b9-13eb37fd8f28"],

Cell["\<\
3. Los d\[IAcute]gitos de \[Pi] los podemos obtener con la funci\[OAcute]n \
RealDigits[]\
\>", "Text",
 CellChangeTimes->{{3.7273071658060427`*^9, 
  3.72730718690996*^9}},ExpressionUUID->"96690db5-59ca-4dee-9b35-\
c1baedbeebad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{"\[Pi]", ",", "10", ",", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.7273071894061813`*^9, 
  3.727307191558506*^9}},ExpressionUUID->"9279bdf3-3cf0-4ec6-82f7-\
acd13d77a489"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4", ",", "1", ",", "5", ",", "9"}], "}"}], 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727307192152149*^9},ExpressionUUID->"91edf173-400c-433f-b8b4-\
f7ed878ec220"]
}, Open  ]],

Cell["\<\
Donde el primer argumento son los d\[IAcute]gitos y el \[UAcute]ltimo el \
exponente del n\[UAcute]mero. Reemplace una lista de 10000 n\[UAcute]meros de \
\[Pi] con la regla de sustituci\[OAcute]n de colores calculada anteriormente. \
Nota: Visualizar colores es una operaci\[OAcute]n tardada, ya que son \
elementos gr\[AAcute]ficos. Puede ser \[UAcute]til cortar el resultado usando \
la funci\[OAcute]n Take.\
\>", "Text",
 CellChangeTimes->{{3.7273071961660624`*^9, 3.727307203622313*^9}, {
  3.727307239894339*^9, 
  3.727307332318118*^9}},ExpressionUUID->"fac41bcb-058f-44d1-aa95-\
049340e0c322"],

Cell["\<\
4. Ahora queremos mostrar los d\[IAcute]gitos coloreados en una \
gr\[AAcute]fica. Para esto podemos utilizar ArrayPlot[]\
\>", "Text",
 CellChangeTimes->{{3.727307337997095*^9, 
  3.727307364989558*^9}},ExpressionUUID->"cba376c8-751b-4c49-9491-\
4910bc3f50ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], "}"}], "]"}]], "Input",\

 CellChangeTimes->{{3.727307377995221*^9, 
  3.727307405845911*^9}},ExpressionUUID->"5d21c867-cb15-4bb9-bdbf-\
ee7d196b3674"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{1., 0., 0.}, {0., 1., 0.}, {0., 0., 1.}}}, {{0, 0}, {3, 1}}, {
   0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.7273073932353*^9, 
  3.727307406058443*^9}},ExpressionUUID->"429a578c-0649-422f-bc64-\
b5304a8ea5a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Red", ",", "Green"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "White", ",", "Black"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727307412124791*^9, 
  3.7273074311343*^9}},ExpressionUUID->"1589913a-c0f6-4f2e-a978-4c800acc01cb"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{{0., 0., 1.}, {1., 1., 1.}, {0., 0., 0.}}, {{1., 0., 0.}, {1., 
   0., 0.}, {0., 1., 0.}}, {{1., 0., 0.}, {0., 1., 0.}, {0., 0., 1.}}}, {{0, 
   0}, {3, 3}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.7273074314881153`*^9},ExpressionUUID->"b952dff6-6263-401c-8a24-\
ae36fb291b6b"]
}, Open  ]],

Cell["\<\
El problema es que para que la gr\[AAcute]fica no se vea como una lista \
interminable de colores debemos formatear la lista de d\[IAcute]gitos \
coloreados para que adquiera forma de matriz, que son listas anidadas.\
\>", "Text",
 CellChangeTimes->{{3.727307446430457*^9, 
  3.727307505996853*^9}},ExpressionUUID->"2aa276f6-82d8-4dc5-8a1d-\
671b34051f5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Red", ",", "Green"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Blue", ",", "White", ",", "Black"}], "}"}]}], "}"}]], "Input",Exp\
ressionUUID->"cdfbca05-659b-4f9e-93bf-ad3f36595b2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[1, 0, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[0, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1, 0],
      Editable->False,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "RGBColor[0, 0, 1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0, 1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "GrayLevel[1]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[1],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        "GrayLevel[0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0],
      Editable->False,
      Selectable->False]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727307496474605*^9},ExpressionUUID->"2090d15c-a700-4eb8-b00b-\
3299e8230d7d"]
}, Open  ]],

Cell["\<\
Una forma eficiente de hacer esto es utilizando la funci\[OAcute]n \
Partition[], que como su nombre lo dice, se encarga de hacer particiones de \
los elementos de una lista.\
\>", "Text",
 CellChangeTimes->{{3.7273075104201603`*^9, 3.727307533244833*^9}, {
  3.727307563652581*^9, 
  3.727307565796163*^9}},ExpressionUUID->"09121a2a-f894-4926-b9a1-\
98ad4b0c2045"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Alphabet", "[", "]"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.727307536665021*^9, 
  3.727307546540595*^9}},ExpressionUUID->"63235a63-5338-40dd-9161-\
5748afc93f70"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>",
      ",", "\<\"e\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", ",", "\<\"i\"\>",
      ",", "\<\"j\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"k\"\>", ",", "\<\"l\"\>", ",", "\<\"m\"\>", ",", "\<\"n\"\>",
      ",", "\<\"o\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p\"\>", ",", "\<\"q\"\>", ",", "\<\"r\"\>", ",", "\<\"s\"\>",
      ",", "\<\"t\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"u\"\>", ",", "\<\"v\"\>", ",", "\<\"w\"\>", ",", "\<\"x\"\>",
      ",", "\<\"y\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727307546780332*^9},ExpressionUUID->"cb0591f2-ac74-47e0-948f-\
52a902a860e2"]
}, Open  ]],

Cell["\<\
Cree particiones de 100 en 100 de la lista de d\[IAcute]gitos coloreados y \
graf\[IAcute]quelos con ArrayPlot.\
\>", "Text",
 CellChangeTimes->{{3.727307574371439*^9, 
  3.727307592851491*^9}},ExpressionUUID->"d1bebe62-8c4e-4f78-a7fe-\
00379729fd8b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Funciones", "Subchapter",
 CellChangeTimes->{{3.716320585697744*^9, 
  3.716320587569751*^9}},ExpressionUUID->"dc0b2ae0-9d13-4956-8635-\
599efa58c3be"],

Cell[TextData[{
 "Imaginemos ahora que queremos crear una regla de sustituci\[OAcute]n que al \
detectar f[x] toma el argumento de f y lo sustituye por ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], ".", " ", "Esto"}], " ", "en", " ", "esencia", 
    " ", "es", " ", "la", " ", "definici\[OAcute]n", " ", "de", " ", "una", 
    " ", 
    RowBox[{"funci\[OAcute]n", "."}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a80ca3e7-d14e-4ee1-9759-d1e8e6429fdf"]
}], "Text",
 CellChangeTimes->{{3.727353722410632*^9, 
  3.727353772270241*^9}},ExpressionUUID->"e84f7119-39fe-4a74-b0ec-\
72dfc66a19bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "5", "]"}], "/.", 
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "\[RuleDelayed]", 
   RowBox[{"x", "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.727353608207254*^9, 
  3.727353655714449*^9}},ExpressionUUID->"91f0d566-0cc3-4288-b42b-\
7470d53dcdf3"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{{3.72735363674815*^9, 
  3.727353656162972*^9}},ExpressionUUID->"61b5c7ed-c3ff-4c6f-af58-\
fde26a7e379f"]
}, Open  ]],

Cell["\<\
Se intuye entonces que una funci\[OAcute]n puede ser descrita como una regla \
de sustituci\[OAcute]n, y es de hecho as\[IAcute] como operan las funciones \
en el lenguaje Wolfram. La sintaxis de una funci\[OAcute]n consiste en \
realizar una sustituci\[OAcute]n a partir de una asignaci\[OAcute]n retardada.\
\>", "Text",
 CellChangeTimes->{{3.727353811185367*^9, 
  3.7273539001546373`*^9}},ExpressionUUID->"6018f94f-200a-4483-b550-\
4178b7940245"],

Cell["\<\
Por ejemplo, vamos a definir una funci\[OAcute]n f que acepte un argumento x \
y devuelva x^2. Se define la funci\[OAcute]n,\
\>", "Text",
 CellChangeTimes->{{3.716320670472479*^9, 3.716320723208205*^9}, {
   3.7163247922869663`*^9, 3.716324795798799*^9}, 
   3.727353856346938*^9},ExpressionUUID->"566aed7a-b1fe-42db-b48e-\
580b5cc2b93e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.716320725058154*^9, 
  3.716320731879974*^9}},ExpressionUUID->"fac2fbd7-133f-46e8-b090-\
a86f41e6f8d0"],

Cell["y se puede evaluar con la notaci\[OAcute]n []  ,", "Text",
 CellChangeTimes->{{3.7163247997579412`*^9, 3.716324804334599*^9}, {
  3.7163248664778433`*^9, 3.7163248693734426`*^9}, {3.716325157171789*^9, 
  3.716325157459853*^9}},ExpressionUUID->"e0486eff-9989-481a-a2c4-\
33e851c08532"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.716320734873345*^9, 
  3.716320737591874*^9}},ExpressionUUID->"aaa8d707-bb0c-4068-bce0-\
700e6b1291a4"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.72721775069003*^9},ExpressionUUID->"0fe933b5-1fcf-4919-950d-abef1afff6d1"]
}, Open  ]],

Cell["utilizando el operador prefix,", "Text",
 CellChangeTimes->{{3.716324874533815*^9, 3.716324878317832*^9}, 
   3.716324915845715*^9, {3.716325159947578*^9, 
   3.7163251640514402`*^9}},ExpressionUUID->"d2f0c722-ff77-4c44-858b-\
a0d5b682ca43"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "@", "4"}]], "Input",
 CellChangeTimes->{{3.716324879512124*^9, 
  3.7163248899179792`*^9}},ExpressionUUID->"f3addb50-0518-4827-b83f-\
6a468ab53471"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.727217750726269*^9},ExpressionUUID->"c43dbb64-f9d8-4484-86bc-\
059af0ae3127"]
}, Open  ]],

Cell["o utilizando el operador postfix.", "Text",
 CellChangeTimes->{{3.716325167883409*^9, 
  3.716325196314657*^9}},ExpressionUUID->"67cfe036-828a-4b92-b691-\
23dc46f4d03a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"4", " ", "//", " ", "f"}]], "Input",
 CellChangeTimes->{{3.716325178245336*^9, 
  3.716325181675445*^9}},ExpressionUUID->"487f84e7-d292-40ab-a4da-\
354194c0994a"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{
  3.727217750758499*^9},ExpressionUUID->"9c74ee2b-02c1-4b1a-9e9a-\
ac996c47424b"]
}, Open  ]],

Cell["Por legibilidad es preferible utilizar la notaci\[OAcute]n [].", "Text",
 CellChangeTimes->{{3.716324905709549*^9, 3.7163249240130177`*^9}, 
   3.727281832934309*^9},ExpressionUUID->"1387e4aa-4409-4e9b-844c-\
9f3762215ade"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "9", "]"}]], "Input",
 CellChangeTimes->{{3.7163207386416693`*^9, 
  3.71632073974393*^9}},ExpressionUUID->"d9368c95-d3c5-4d53-9e1d-\
429841d8f844"],

Cell[BoxData["81"], "Output",
 CellChangeTimes->{
  3.7272177507932177`*^9},ExpressionUUID->"108e8e28-dd42-4ca9-a644-\
49a120d80f8c"]
}, Open  ]],

Cell["\<\
Es posible definir una funci\[OAcute]n que opere s\[OAcute]lo sobre un tipo \
espec\[IAcute]fico de argumento. Para ello utilizamos el patr\[OAcute]n _h \
que se encarga de verificar si el encabezado del argumento coincide con el \
patr\[OAcute]n especificado en la funci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.7273562636628637`*^9, 3.727356278830969*^9}, {
  3.727356317814514*^9, 
  3.727356349118812*^9}},ExpressionUUID->"df890306-6e19-4220-b4b2-\
5c0656d30dec"],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.727356289361863*^9, 
  3.727356290863234*^9}},ExpressionUUID->"ec5c13ad-7afc-4e2d-b547-\
159f075ac308"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_Integer", "]"}], ":=", 
   RowBox[{"x", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", "1.5", "]"}]}], "Input",
 CellChangeTimes->{{3.727356292153351*^9, 
  3.727356315230753*^9}},ExpressionUUID->"2179a76b-34bd-45f2-b19b-\
decace13f6c0"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{
  3.727356315409124*^9},ExpressionUUID->"9be95fed-a9bc-463e-851d-\
ac178fa87131"],

Cell[BoxData[
 RowBox[{"f", "[", "1.5`", "]"}]], "Output",
 CellChangeTimes->{
  3.727356315411717*^9},ExpressionUUID->"eff6ee50-fd26-4e3b-8e50-\
0998c6d0ce78"]
}, Open  ]],

Cell["\<\
Al definir esta funci\[OAcute]n lo que se est\[AAcute] haciendo en realidad \
es crear una regla que especifica que cada vez que se encuentre la expresi\
\[OAcute]n f[ ] se extraer\[AAcute] el s\[IAcute]mbolo x y se sustituir\
\[AAcute] por x^2, y por \[UAcute]ltimo se procede a evaluar el resultado. De \
esta forma la definici\[OAcute]n de una funci\[OAcute]n es tan flexible como \
los patrones. Esta es una de las caracter\[IAcute]sticas m\[AAcute]s \
poderosas del lenguaje.
Se puede definir una funci\[OAcute]n con un n\[UAcute]mero finito de \
argumentos,\
\>", "Text",
 CellChangeTimes->{{3.716320749607255*^9, 3.716320902750155*^9}, {
  3.716320975277062*^9, 3.71632100685271*^9}, {3.727353940195163*^9, 
  3.7273539508593483`*^9}},ExpressionUUID->"10b498f1-bc76-423d-a75a-\
0c628b8122b7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"x", "+", "y", "+", "z"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"3", ",", "4", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.716321007717757*^9, 
  3.716321020988076*^9}},ExpressionUUID->"b3ae050d-6c1d-471e-a74f-\
7a03b1d52cf7"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.727217750827077*^9},ExpressionUUID->"62bc3904-6fd6-4836-96f9-\
40d0874cced1"]
}, Open  ]],

Cell["una funci\[OAcute]n con un n\[UAcute]mero arbitrario de argumentos,", \
"Text",
 CellChangeTimes->{{3.716321028147469*^9, 3.716321039835559*^9}, 
   3.7163211099147577`*^9},ExpressionUUID->"5a57f6b6-a985-4cee-9f63-\
a5578335c492"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "n__", "]"}], ":=", 
   RowBox[{"Total", "[", 
    RowBox[{"List", "[", "n", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7163210418850193`*^9, 
  3.716321155474691*^9}},ExpressionUUID->"5e48dd5a-e3dd-48ce-ab16-\
860f0512b0d3"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{
  3.72721775085502*^9},ExpressionUUID->"6f6340e8-853f-41de-9c61-b2188f552bbc"],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{
  3.727217750856958*^9},ExpressionUUID->"821f6691-1172-4dcf-8a4c-\
c31b8b517ff4"]
}, Open  ]],

Cell["\<\
e incluso se pueden definir las funciones de forma ascendente (la notaci\
\[OAcute]n para esto es ^:= ).\
\>", "Text",
 CellChangeTimes->{{3.716321166201915*^9, 3.7163211761859007`*^9}, {
  3.716321323048045*^9, 
  3.716321353471356*^9}},ExpressionUUID->"f5d64d35-2e38-4803-81d2-\
b6b620826d2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"g", "[", "x_", "]"}], "]"}], "^:=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"\"\<El s\[IAcute]mbolo x vale: \>\"", ",", 
     RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7163211786265*^9, 
  3.716321307792923*^9}},ExpressionUUID->"609a395d-2799-4ed2-9b43-\
9d6284c81d63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{"g", "[", "9", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.716321288290081*^9, 
  3.716321292296645*^9}},ExpressionUUID->"5dd65638-1b50-4fe1-9525-\
de74f6bea79a"],

Cell[BoxData["\<\"El s\[IAcute]mbolo x vale: 9\"\>"], "Output",
 CellChangeTimes->{
  3.7272177509171247`*^9},ExpressionUUID->"1d9e2b57-0b18-4f2a-88a3-\
0944a4cc45ae"]
}, Open  ]],

Cell["\<\
Dado que las funciones se comportan como patrones, es posible asignar \
resultados a valores espec\[IAcute]ficos de una funci\[OAcute]n. Por ejemplo, \
al evaluar la siguiente funci\[OAcute]n, dado que f no est\[AAcute] definida, \
el kernel devuelve la forma simb\[OAcute]lica de la funci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.72735526633504*^9, 3.727355313199259*^9}, {
  3.727355394399375*^9, 
  3.727355422687241*^9}},ExpressionUUID->"26ae349f-07dc-4dac-9cf9-\
c7361189a9e1"],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.7273553458815193`*^9, 
  3.7273553477436237`*^9}},ExpressionUUID->"ceed996c-9cf1-4b55-b999-\
357a6cf3d28c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "Blue", "]"}], ",", 
   RowBox[{"f", "[", "Green", "]"}], ",", 
   RowBox[{"f", "[", "Black", "]"}], ",", 
   RowBox[{"f", "[", "Red", "]"}], ",", 
   RowBox[{"f", "[", "Yellow", "]"}], ",", 
   RowBox[{"f", "[", "Orange", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.727355349905485*^9, 
  3.727355388511916*^9}},ExpressionUUID->"18e8f76e-c5b6-4e37-a890-\
90f6fb2e6899"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False], "]"}], ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False], "]"}], ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False], "]"}], ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False], "]"}], ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False], "]"}], ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7273553812620792`*^9, 
  3.7273553888958073`*^9}},ExpressionUUID->"4e003068-1b19-4f1e-bdfb-\
57e3beeb8c02"]
}, Open  ]],

Cell["\<\
Pero si asignamos algunos valores de f y reevaluamos se obtiene una lista con \
los valores definidos ya evaluados\
\>", "Text",
 CellChangeTimes->{{3.7273554263827057`*^9, 
  3.727355476630785*^9}},ExpressionUUID->"2e7f2d91-b264-45ff-85b8-\
04e38ecc6e71"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "Blue", "]"}], "=", " ", "\"\<Color azul\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "Red", "]"}], "=", " ", "\"\<Color rojo\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "Blue", "]"}], ",", 
   RowBox[{"f", "[", "Green", "]"}], ",", 
   RowBox[{"f", "[", "Black", "]"}], ",", 
   RowBox[{"f", "[", "Red", "]"}], ",", 
   RowBox[{"f", "[", "Yellow", "]"}], ",", 
   RowBox[{"f", "[", "Orange", "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.727355479784774*^9, 
  3.727355506186101*^9}},ExpressionUUID->"279c92e5-764d-4714-b73b-\
3fd9fc4845ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Color azul\"\>", ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False], "]"}], ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False], "]"}], ",", "\<\"Color rojo\"\>", ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False], "]"}], ",", 
   RowBox[{"f", "[", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727355506849593*^9},ExpressionUUID->"051dbcaf-7ea0-4b55-b885-\
bc55e83634f9"]
}, Open  ]],

Cell[TextData[{
 "N\[OAcute]tese que aqu\[IAcute] se utiliz\[OAcute] la asignaci\[OAcute]n \
instant\[AAcute]nea.\nEl poder definir una funci\[OAcute]n de diferentes \
formas nos permite hacer lo que en otros lenguajes se conoce como ",
 StyleBox["sobrecarga de funciones,",
  FontSlant->"Italic"],
 " que es asociar una funci\[OAcute]n con implementaciones m\[UAcute]ltiples \
que operan sobre diferentes tipos de datos. Un ejemplo es la \
definici\[OAcute]n de la funci\[OAcute]n factorial que se puede definir de \
forma recursiva hasta llegar al \[UAcute]ltimo n\[UAcute]mero donde aplica \
una definici\[OAcute]n especial."
}], "Text",
 CellChangeTimes->{{3.727355514428976*^9, 3.7273555243092947`*^9}, {
  3.727355557412301*^9, 
  3.727355717972168*^9}},ExpressionUUID->"1282b750-ed53-4a60-ba42-\
fd862278db1d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"factorial", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"n", " ", "*", " ", 
    RowBox[{"factorial", "[", 
     RowBox[{"n", "-", "1"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"factorial", "[", "1", "]"}], " ", "=", " ", "1"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7273557532450523`*^9, 
  3.7273557845867233`*^9}},ExpressionUUID->"59a7a23a-1a72-409b-9466-\
1a5958d1d9a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"factorial", "[", "20", "]"}]], "Input",
 CellChangeTimes->{{3.7273557873804092`*^9, 
  3.72735579453841*^9}},ExpressionUUID->"780dd775-d615-4e51-b418-\
930ab74d7e8a"],

Cell[BoxData["2432902008176640000"], "Output",
 CellChangeTimes->{
  3.72735579467903*^9},ExpressionUUID->"0694c770-3459-41f1-8bd6-45e44e28e4da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"RepeatedTiming", "[", 
   RowBox[{"factorial", "[", "50", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.727355952337962*^9, 
  3.727355960747407*^9}},ExpressionUUID->"0b636db5-5cea-4630-b181-\
38e07397a197"],

Cell[BoxData["0.0000661065724815725`2."], "Output",
 CellChangeTimes->{{3.727355958554426*^9, 
  3.7273559664850483`*^9}},ExpressionUUID->"4db99f88-4722-4522-88d8-\
d5aef07e3578"]
}, Open  ]],

Cell["En otros lenguajes la forma equivalente es:", "Text",
 CellChangeTimes->{{3.727355818753837*^9, 
  3.7273558267460613`*^9}},ExpressionUUID->"edfe914d-0ad9-4ca7-ac56-\
91bbb28cead9"],

Cell[BoxData[
 RowBox[{"Clear", "[", "factorial", "]"}]], "Input",
 CellChangeTimes->{{3.727355836508277*^9, 
  3.7273558422713327`*^9}},ExpressionUUID->"01840949-02a3-4748-9816-\
ced2a570bf3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"factorial", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", " ", "\[NotEqual]", " ", "1"}], ",", 
     RowBox[{"n", " ", "*", " ", 
      RowBox[{"factorial", "[", 
       RowBox[{"n", "-", "1"}], "]"}]}], ",", "1"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.727355830540351*^9, 
  3.727355875995401*^9}},ExpressionUUID->"f36af262-c94c-49f8-a15a-\
fdb8aec4c3a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"factorial", "[", "20", "]"}]], "Input",ExpressionUUID->"d9362c23-cdb8-4dae-be58-2eb3f18d0a4f"],

Cell[BoxData["2432902008176640000"], "Output",
 CellChangeTimes->{
  3.727355877374114*^9},ExpressionUUID->"13407f01-5c7c-4360-b3c8-\
915896f05568"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"RepeatedTiming", "[", 
   RowBox[{"factorial", "[", "50", "]"}], "]"}], "]"}]], "Input",ExpressionUUI\
D->"fcfe4c18-b057-47c3-b398-2d7fe2c82687"],

Cell[BoxData["0.0000989525089605735`2."], "Output",
 CellChangeTimes->{
  3.7273559733721323`*^9},ExpressionUUID->"fd45cda2-3b3d-40af-9d27-\
255fe63adef9"]
}, Open  ]],

Cell["\<\
Esta forma es ligeramente m\[AAcute]s lenta debido a la presencia del If en \
cada iteraci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.727355981792911*^9, 
  3.727356004097053*^9}},ExpressionUUID->"6d36d7ea-0d43-4022-bda7-\
e4783cfc36a4"],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.72735434980096*^9, 
  3.727354352024514*^9}},ExpressionUUID->"dd2c8d54-ac34-45c9-94c2-\
ae1b777543aa"],

Cell["El c\[OAcute]digo", "Text",
 CellChangeTimes->{{3.727354363320395*^9, 
  3.727354365352799*^9}},ExpressionUUID->"b0c463eb-dda8-4d20-8353-\
b42edfca176c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Polygon", "[", 
   RowBox[{"CirclePoints", "[", "5", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.727354376970837*^9, 
  3.7273543773292418`*^9}},ExpressionUUID->"049fa5fe-feda-4b45-83a5-\
5a5a47dbb571"],

Cell[BoxData[
 GraphicsBox[
  PolygonBox[
   NCache[{{(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
      Rational[1, 2], 
      Rational[1, 4] (-1 - 5^Rational[1, 2])}, {(Rational[5, 8] + 
       Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
      Rational[1, 4] (-1 + 5^Rational[1, 2])}, {0, 
     1}, {-(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
      Rational[1, 4] (-1 + 
       5^Rational[1, 2])}, {-(Rational[5, 8] + 
        Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2], 
      Rational[1, 4] (-1 - 5^Rational[1, 2])}}, {{
     0.5877852522924731, -0.8090169943749475}, {0.9510565162951535, 
     0.30901699437494745`}, {0, 1}, {-0.9510565162951535, 
     0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}}]],
  ImageSize->{156., Automatic}]], "Output",
 CellChangeTimes->{{3.727354369955627*^9, 
  3.727354377720599*^9}},ExpressionUUID->"958f8c97-d43d-4d96-93fe-\
278c5341fbfa"]
}, Open  ]],

Cell["\<\
nos devuelve un pol\[IAcute]gono regular de 5 lados. Crear una \
funci\[OAcute]n llamada Poly que devuelva un pol\[IAcute]gono regular de n \
lados, y luego evaluar esta funci\[OAcute]n en una tabla con n que va desde 3 \
hasta 10.\
\>", "Text",
 CellChangeTimes->{{3.727354380096661*^9, 
  3.727354433408244*^9}},ExpressionUUID->"1167adeb-5c74-4332-b821-\
67db3d85830b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.7273560256405067`*^9, 
  3.7273560271038094`*^9}},ExpressionUUID->"f3085bd5-aa2a-4d85-a186-\
b6e994652f82"],

Cell["\<\
Defina una funci\[OAcute]n fibonacci[n_Integer] usando sobrecarga de \
funciones. Tip: fibonacci[n_Integer] es la suma de dos evaluaciones de \
fibonacci[] con diferentes argumentos.\
\>", "Text",
 CellChangeTimes->{{3.7273560374804363`*^9, 
  3.727356124464394*^9}},ExpressionUUID->"b5785f43-bf70-4184-89cb-\
29ab91611648"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["T\[EAcute]cnicas para el uso de funciones", "Subchapter",
 CellChangeTimes->{{3.727354266209909*^9, 
  3.7273543041296*^9}},ExpressionUUID->"bca519e6-ae5e-405d-bd1e-0c79de15472f"],

Cell["\<\
En algunos casos es necesario aplicar cada elemento de una lista como \
argumento de una funci\[OAcute]n.  Regresemos al ejemplo donde\
\>", "Text",
 CellChangeTimes->{{3.7163245806559362`*^9, 
  3.716324643831653*^9}},ExpressionUUID->"7ee1d19c-9276-4e77-ab3a-\
ee5234374e64"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"x", "+", "y", "+", "z"}]}], ";"}]], "Input",ExpressionUUID->\
"bd3a8605-bc30-41b4-b720-9c339a44b567"],

Cell["Si se desea que el argumento sea cada elemento de la lista", "Text",
 CellChangeTimes->{{3.71632464765539*^9, 
  3.71632467829488*^9}},ExpressionUUID->"1180e654-4498-400e-9c88-\
234c7a7138bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"3", ",", "2", ",", "9"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.716324679465335*^9, 
  3.7163246840156937`*^9}},ExpressionUUID->"3b1573e3-5792-44e9-8f08-\
0d2876aa6afa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "2", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.7272177509595737`*^9, 
  3.72735650703533*^9},ExpressionUUID->"9f734871-5fbc-44f5-a3e8-c897ef77841b"]
}, Open  ]],

Cell["\<\
una manera poco elegante de hacer esto es pasando manualmente cada argumento.\
\
\>", "Text",
 CellChangeTimes->{{3.7163246902952757`*^9, 
  3.716324707646822*^9}},ExpressionUUID->"24b6824a-c3fa-4f8b-a8fb-\
415b60f97d22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"l", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"l", "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"l", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716324708513247*^9, 
  3.716324715943837*^9}},ExpressionUUID->"c287a1f7-0b39-4c5d-9461-\
7cd56941ec1f"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{
  3.7272177509858227`*^9},ExpressionUUID->"920f6f3f-808b-4fa9-81bf-\
8e69ac230efa"]
}, Open  ]],

Cell["\<\
pero existe una manera m\[AAcute]s eficiente utilizando la funci\[OAcute]n \
Apply,\
\>", "Text",
 CellChangeTimes->{{3.716324719646847*^9, 
  3.716324746494733*^9}},ExpressionUUID->"6480165a-730a-4092-960d-\
77d1dc7594f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", "l"}], "]"}]], "Input",
 CellChangeTimes->{{3.71632473400084*^9, 
  3.716324737239327*^9}},ExpressionUUID->"fcbc5ee8-21f8-42b4-9a47-\
92b1e39fa449"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{
  3.727217751024782*^9},ExpressionUUID->"c92d600e-0877-4149-af82-\
99fa3546fe28"]
}, Open  ]],

Cell["que adem\[AAcute]s cuenta con una notaci\[OAcute]n de operador prefix", \
"Text",
 CellChangeTimes->{{3.716324741366034*^9, 3.7163247577750177`*^9}, {
  3.716324840357848*^9, 
  3.716324841270219*^9}},ExpressionUUID->"b89dc471-d0ef-4980-b5f7-\
042d71c23da4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", " ", "@@", " ", "l"}]], "Input",
 CellChangeTimes->{{3.716324758640637*^9, 
  3.716324767432708*^9}},ExpressionUUID->"29f0e6c6-5d7d-4c43-9ca5-\
75dcf0e208b9"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{
  3.727217751063526*^9},ExpressionUUID->"067a455f-bb86-4a10-8e7e-\
862917e4a46c"]
}, Open  ]],

Cell["\<\
Apply funciona cambiando el encabezado en la expresi\[OAcute]n por el \
especificado.\
\>", "Text",
 CellChangeTimes->{{3.727356473068849*^9, 
  3.727356503244844*^9}},ExpressionUUID->"164c61a3-d851-450b-9c74-\
0decd7122492"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "l", "]"}]], "Input",
 CellChangeTimes->{{3.727356509974839*^9, 
  3.7273565121653748`*^9}},ExpressionUUID->"4d0e3d2d-1b8a-448d-b230-\
9d54e22c795c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"3", ",", "2", ",", "9"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7273565123563766`*^9},ExpressionUUID->"0a9e1f0c-4677-4f77-93cd-\
1b5c193328bd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "f", "]"}]], "Input",
 CellChangeTimes->{{3.72735655225471*^9, 
  3.727356553588694*^9}},ExpressionUUID->"b4720221-b26d-4fbf-b7b9-\
84f6b5502e80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"Apply", "[", 
   RowBox[{"f", ",", "l"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.727356521045101*^9, 
  3.727356558396797*^9}},ExpressionUUID->"d445cf04-8357-489d-aa8b-\
89be5ffe3915"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"f", "[", 
    RowBox[{"3", ",", "2", ",", "9"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{{3.727356521790861*^9, 
  3.727356558786194*^9}},ExpressionUUID->"68f4910b-9fa4-4472-9b2e-\
b6ca2fd6682c"]
}, Open  ]],

Cell[TextData[{
 "Por defecto, en el lenguaje Wolfram todo pertenece al espacio global, esto \
significa que es posible declarar ",
 StyleBox["funciones impuras",
  FontSlant->"Italic"],
 ", esto es, funciones que causan efectos secundarios como por ejemplo"
}], "Text",
 CellChangeTimes->{{3.71632155250071*^9, 3.7163215719407578`*^9}, {
  3.7163216649395857`*^9, 
  3.716321719827186*^9}},ExpressionUUID->"135a897f-adad-4cc5-87a6-\
439e64bdb6e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.7163217384685087`*^9, 
  3.716321739602646*^9}},ExpressionUUID->"0007e34d-e2d9-40a7-bccf-\
8636818a668d"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.716321743660239*^9},ExpressionUUID->"a8cffa43-d420-4ea9-b639-\
36b9cf992ff3"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.727217751145232*^9},ExpressionUUID->"c74bf07a-0c92-47d9-ba4c-\
859e3d2218ce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   RowBox[{"a", " ", "=", " ", "x"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.716321720644651*^9, 
  3.716321743202896*^9}},ExpressionUUID->"2a3bdf3b-d157-4295-85f8-\
a0801dc9b5c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.716321746363179*^9, 
  3.716321747634612*^9}},ExpressionUUID->"c04bc6d5-c9ed-44cb-9139-\
274527c9b440"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7272177512093077`*^9},ExpressionUUID->"791ca02b-3440-4da9-b52c-\
ed4b189910c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.71632174837265*^9},ExpressionUUID->"578b4f21-57dc-4f84-91b3-c3ce6d84bb33"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.727217751239257*^9},ExpressionUUID->"b5c04095-6385-4738-a1da-\
071d42d86e9b"]
}, Open  ]],

Cell["\<\
En este lenguaje esto es considerado una mala pr\[AAcute]ctica y por lo \
general debe ser evitado. Una manera de localizar los s\[IAcute]mbolos es \
utilizar la funci\[OAcute]n Module.\
\>", "Text",
 CellChangeTimes->{{3.716321782961314*^9, 3.7163218035058527`*^9}, {
  3.7163222324603863`*^9, 
  3.716322250140156*^9}},ExpressionUUID->"e8060d6f-885b-4a8b-9f6b-\
900e0125d520"],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.716322318188986*^9},ExpressionUUID->"5445f389-ab85-4dd4-94ea-\
e27561133219"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.727217751269382*^9},ExpressionUUID->"f0f43fb2-0b3a-4dd0-ad70-\
a781f6917105"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", "x"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", " ", "+=", " ", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "a", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.716322258381465*^9, 
  3.7163222932839108`*^9}},ExpressionUUID->"fd58e43c-4051-437c-8d3a-\
6cfe71a2628c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "7", "]"}]], "Input",
 CellChangeTimes->{{3.716322298060791*^9, 
  3.7163223096270723`*^9}},ExpressionUUID->"6faddc39-0bc5-415a-8c80-\
0cb80cb42a93"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{
  3.727217751307684*^9},ExpressionUUID->"39fd260c-b12c-49d0-b3d4-\
09c9a1798241"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{
  3.7163223049333773`*^9},ExpressionUUID->"471cebc2-8f56-4073-94c0-\
98cb4b34b272"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7272177513381042`*^9},ExpressionUUID->"bbe70193-c366-4d90-855d-\
4711e3423249"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.7273568252654257`*^9, 
  3.727356827001655*^9}},ExpressionUUID->"34772545-06a4-4f72-8154-\
c9ace34e6457"],

Cell["\<\
Definamos la funci\[OAcute]n factorial de forma diferente. Otro enfoque \
consiste en crear una lista de tama\[NTilde]o n con n\[UAcute]meros \
sucesivos, por ejemplo\
\>", "Text",
 CellChangeTimes->{{3.727356843361479*^9, 
  3.7273568903457813`*^9}},ExpressionUUID->"46eb8914-8604-4af5-a7ca-\
07045ddeb4ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.727356891188961*^9, 
  3.7273568947297497`*^9}},ExpressionUUID->"df5ede7c-e3e2-40ff-8980-\
8bedc918f016"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.7273568950077753`*^9},ExpressionUUID->"9114d7fd-dff1-43b4-9407-\
640ee14fba28"]
}, Open  ]],

Cell["\<\
Y multiplicarlos todos. Para hacer esto es necesario aplicar una funci\
\[OAcute]n que se encargue de multiplicar sus argumentos. Tip: Puede ser \
\[UAcute]til investigar que funci\[OAcute]n multiplica usando FullForm.\
\>", "Text",
 CellChangeTimes->{{3.727356897561129*^9, 
  3.727356996832423*^9}},ExpressionUUID->"117e9008-7446-4c4c-b31b-\
808eabd72370"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.72735709364748*^9, 
  3.727357095487813*^9}},ExpressionUUID->"b75ae179-ce15-4fb2-826a-\
6fd85043091a"],

Cell["\<\
Lo malo de hacer sobrecarga de operadores es que todas las m\[UAcute]ltiples \
definiciones se quedan en el espacio global. En el ejercicio de fibonacci que \
se resolvi\[OAcute] en la secci\[OAcute]n anterior tenemos que una soluci\
\[OAcute]n es:\
\>", "Text",
 CellChangeTimes->{{3.727357096935479*^9, 3.727357124007122*^9}, {
  3.727357187919426*^9, 
  3.727357212206349*^9}},ExpressionUUID->"f89e27a4-5981-4d2a-bf5f-\
76e1afe844d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fibonacci", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{"fibonacci", "[", 
     RowBox[{"n", "-", "1"}], "]"}], " ", "+", " ", 
    RowBox[{"fibonacci", "[", 
     RowBox[{"n", "-", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fibonacci", "[", "1", "]"}], " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fibonacci", "[", "0", "]"}], " ", "=", " ", "1"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.727357126668049*^9, 
  3.727357160919524*^9}},ExpressionUUID->"a055541c-4811-43b3-a3cd-\
e1c342f75b42"],

Cell["\<\
Todas estas definiciones quedan en el espacio global. Esto lo podemos \
verificar utilizando el operador ? (\[DownExclamation]cuidado!, no confundir \
con _?) que representa la funci\[OAcute]n Definition[] que se encarga de \
devolver informaci\[OAcute]n sobre las definiciones de funciones.\
\>", "Text",
 CellChangeTimes->{{3.7273572157344*^9, 
  3.727357314830106*^9}},ExpressionUUID->"809601c5-da82-4015-8264-\
e8817fa0af0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "fibonacci"}]], "Input",
 CellChangeTimes->{{3.7273571796044283`*^9, 
  3.727357182777067*^9}},ExpressionUUID->"e1bd549c-3166-4a27-b6eb-\
1c58649f908d"],

Cell[CellGroupData[{

Cell["Global`fibonacci", "Print", "PrintUsage",
 CellChangeTimes->{3.72735718304562*^9},
 CellTags->
  "Info633727335583-9003794",ExpressionUUID->"6d42e47f-8f7e-40f6-a822-\
8e507b11d23b"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"fibonacci", "[", "0", "]"}], "=", "1"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"fibonacci", "[", "1", "]"}], "=", "1"}]},
       {" "},
       {
        RowBox[{
         RowBox[{"fibonacci", "[", "n_", "]"}], ":=", 
         RowBox[{
          RowBox[{"fibonacci", "[", 
           RowBox[{"n", "-", "1"}], "]"}], "+", 
          RowBox[{"fibonacci", "[", 
           RowBox[{"n", "-", "2"}], "]"}]}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`fibonacci],
  Editable->False]], "Print",
 CellChangeTimes->{3.7273571830520353`*^9},
 CellTags->
  "Info633727335583-9003794",ExpressionUUID->"eddcc596-802a-4290-852d-\
d5097b55aecd"]
}, Open  ]]
}, Open  ]],

Cell["Hagamos borr\[OAcute]n y cuenta nueva", "Text",
 CellChangeTimes->{{3.7273573588455257`*^9, 
  3.7273573644294653`*^9}},ExpressionUUID->"12182435-f85a-4e77-8328-\
c65c97c0461d"],

Cell[BoxData[
 RowBox[{"Clear", "[", "fibonacci", "]"}]], "Input",
 CellChangeTimes->{{3.7273573653547564`*^9, 
  3.727357367685934*^9}},ExpressionUUID->"5f6287ca-7706-410d-9b92-\
e134fbf7d0d1"],

Cell["\<\
y tratemos de definir una funci\[OAcute]n \[UAcute]nica que se encargue de \
calcular el n\[UAcute]mero n-avo de fibonacci utilizando Module[].\
\>", "Text",
 CellChangeTimes->{{3.727357369485462*^9, 
  3.7273574047572203`*^9}},ExpressionUUID->"85278b9b-a698-496c-9f63-\
0d00d43c8496"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Mapeos", "Subchapter",
 CellChangeTimes->{{3.7271209766755047`*^9, 3.727120978067298*^9}, {
  3.7273574547165613`*^9, 
  3.727357477004355*^9}},ExpressionUUID->"20303379-c971-4296-bb03-\
80e0490feaf8"],

Cell["\<\
Una de las filosof\[IAcute]as del lenguaje Wolfram es que es un lenguaje \
funcional. Esto significa que est\[AAcute] dise\[NTilde]ado para que se \
programe usando funciones generales que se aplican sobre listas, matrices, \
tensores, etc. La funci\[OAcute]n m\[AAcute]s elemental de este tipo de \
lenguajes es el mapeo, que aqu\[IAcute] est\[AAcute] representado por la \
funci\[OAcute]n Map.\
\>", "Text",
 CellChangeTimes->{{3.716322543391679*^9, 
  3.716322678910605*^9}},ExpressionUUID->"f5f99285-a80c-40a8-b56d-\
ac346e7be35f"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "f"}], "]"}]], "Input",
 CellChangeTimes->{{3.716322708407729*^9, 
  3.716322714445908*^9}},ExpressionUUID->"85d857c0-018f-4fab-afd2-\
2d88dc10d4fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.716322694150754*^9, 
  3.716322700998646*^9}},ExpressionUUID->"ee5f9cef-408a-4644-8a3b-\
297a2220fff9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}], ",", 
   RowBox[{"f", "[", "d", "]"}], ",", 
   RowBox[{"f", "[", "e", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217751376894*^9},ExpressionUUID->"2c74ec76-61ea-41fe-b7c5-\
728df8f87272"]
}, Open  ]],

Cell["\<\
El mapeo tambi\[EAcute]n se puede representar con la notaci\[OAcute]n de \
operador infix,\
\>", "Text",
 CellChangeTimes->{{3.7163227251009693`*^9, 3.716322734925222*^9}, {
  3.716322831795871*^9, 
  3.716322844219767*^9}},ExpressionUUID->"8111d641-67f3-4882-96a6-\
c62b6c43b75d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "/@", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]}]], "Input",Ex\
pressionUUID->"e39b33ef-7791-4686-9cb5-8f71ea934571"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "a", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], "]"}], ",", 
   RowBox[{"f", "[", "c", "]"}], ",", 
   RowBox[{"f", "[", "d", "]"}], ",", 
   RowBox[{"f", "[", "e", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.72721775140829*^9},ExpressionUUID->"c7506aa2-3af5-4068-acfd-5d69525baa89"]
}, Open  ]],

Cell["\<\
aunque no es recomendable para c\[OAcute]digo de producci\[OAcute]n, pero s\
\[IAcute] es \[UAcute]til para prototipos. La ventaja de Map es que se puede \
aplicar a un nivel arbitrario. Por ejemplo, en la lista {{a,b},{c,d,e}} \
podemos aplicar Map en el nivel superior\
\>", "Text",
 CellChangeTimes->{{3.7163228235960913`*^9, 3.716322827956026*^9}, {
  3.716322860667614*^9, 3.71632287705075*^9}, {3.7163229095309896`*^9, 
  3.716322909899261*^9}, {3.7163230644563437`*^9, 
  3.716323097672987*^9}},ExpressionUUID->"da1e3b29-bb4d-4d7e-9d7d-\
92df2370dcca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "}"}]}], "]"}]], "Input",Exp\
ressionUUID->"3ebcc4a5-b86f-4057-aa21-95359101c632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"a", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{"c", ",", "d", ",", "e"}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177514384203`*^9},ExpressionUUID->"9e7d0484-a040-44de-a3a2-\
a3dbfb86b004"]
}, Open  ]],

Cell["Al nivel 2", "Text",
 CellChangeTimes->{{3.716323106728047*^9, 
  3.716323110040391*^9}},ExpressionUUID->"69f97d77-fee9-4d6c-88a5-\
a2e7f5857fab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",ExpressionUUID->"b586a84f-e725-\
4450-927e-a359c29e67e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "c", "]"}], ",", 
     RowBox[{"f", "[", "d", "]"}], ",", 
     RowBox[{"f", "[", "e", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177514827127`*^9},ExpressionUUID->"8ea4be18-8d38-49e3-86e9-\
b94e5260cf17"]
}, Open  ]],

Cell["e incluso en los niveles 1 y 2 simult\[AAcute]neamente.", "Text",
 CellChangeTimes->{{3.716323123775516*^9, 
  3.716323134720524*^9}},ExpressionUUID->"9ca75960-fb53-4179-a0ee-\
086861c0d4c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d", ",", "e"}], "}"}]}], "}"}], ",", "2"}], 
  "]"}]], "Input",ExpressionUUID->"01a11cd5-44c8-4dba-b188-d5d0948a76c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "a", "]"}], ",", 
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], "]"}]}],
      "}"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", "c", "]"}], ",", 
      RowBox[{"f", "[", "d", "]"}], ",", 
      RowBox[{"f", "[", "e", "]"}]}], "}"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177515180264`*^9},ExpressionUUID->"851b1a38-ece5-4f94-9ade-\
e4ca6edd4cf6"]
}, Open  ]],

Cell[TextData[{
 "La verdadera ventaja de los mapeos es la capacidad del lenguaje de definir ",
 StyleBox["funciones puras",
  FontSlant->"Italic"],
 " y poder aplicarlas a una lista. Las funciones puras se definen a trav\
\[EAcute]s del operador postfix Function (  &  ) y el operador Slot (  #  )."
}], "Text",
 CellChangeTimes->{{3.716324242234065*^9, 3.716324272298506*^9}, {
  3.716324400713805*^9, 3.7163244285776043`*^9}, {3.716325114316564*^9, 
  3.7163251188521843`*^9}},ExpressionUUID->"f3bf5293-1cb4-4ac7-b702-\
b53da4b33669"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   RowBox[{"#", "^", "2"}], " ", "&"}], "]"}]], "Input",
 CellChangeTimes->{{3.716324340875722*^9, 
  3.716324349905995*^9}},ExpressionUUID->"91b89ad7-7417-4858-886b-\
2e7bd2201e04"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Function", "[", 
    RowBox[{"Power", "[", 
     RowBox[{
      RowBox[{"Slot", "[", "1", "]"}], ",", "2"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.727217751548123*^9},ExpressionUUID->"4d9c1fce-53fc-4f75-8145-\
f8e331a61338"]
}, Open  ]],

Cell["\<\
Por ejemplo, una funci\[OAcute]n pura que eleva el argumento al cuadrado \
puede ser\
\>", "Text",
 CellChangeTimes->{{3.716325019348658*^9, 
  3.716325032356803*^9}},ExpressionUUID->"3b8f3f7a-b65d-4ee9-9dca-\
938a7812f5b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"#", "^", "2"}], ")"}], "&"}], "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.7163250357103024`*^9, 
  3.716325041612804*^9}},ExpressionUUID->"e9601ad5-0fdb-42da-ac8b-\
4d3260931a36"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{
  3.727217751575967*^9},ExpressionUUID->"f31aef20-5743-44d1-bb54-\
71bb9d98ad1b"]
}, Open  ]],

Cell["\<\
El slot act\[UAcute]a como el lugar donde se sustituir\[AAcute] el argumento, \
y el operador Function act\[UAcute]a convirtiendo todo lo que le precede en \
una funci\[OAcute]n. Es posible tambi\[EAcute]n utilizar varios argumentos \
numerando los slots.\
\>", "Text",
 CellChangeTimes->{{3.716325071940028*^9, 3.716325090724107*^9}, {
  3.716325135908119*^9, 3.716325144772215*^9}, {3.7163252659447536`*^9, 
  3.716325277288361*^9}},ExpressionUUID->"2ecc8ba3-9991-4366-90ac-\
a8dbe70d041c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#1", "^", "2"}], " ", "+", " ", 
     RowBox[{"#2", "^", "3"}]}], ")"}], "&"}], "[", 
  RowBox[{"5", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.716325283343788*^9, 
  3.71632529035968*^9}},ExpressionUUID->"dbdc0ca5-920a-4023-b31f-\
59224023b892"],

Cell[BoxData["754"], "Output",
 CellChangeTimes->{
  3.727217751606413*^9},ExpressionUUID->"b7aee98f-5e31-4d9e-92a1-\
de630bdfd030"]
}, Open  ]],

Cell["\<\
La utilidad principal de las funciones puras es que nos proveen de una manera \
r\[AAcute]pida de aplicar transformaciones sobre listas de una forma m\
\[AAcute]s flexible que Table.\
\>", "Text",
 CellChangeTimes->{{3.716325493881929*^9, 
  3.716325525041789*^9}},ExpressionUUID->"de1031d7-8ab1-4713-886c-\
411c8ef384e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", 
   RowBox[{"Range", "[", "10", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7163255351878023`*^9, 
  3.7163255449784107`*^9}},ExpressionUUID->"70fe66c4-830a-4074-a5bd-\
be981c6a5d3c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217751637302*^9},ExpressionUUID->"da242af2-30a6-4baf-9c47-\
c74d98be4fd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"l", " ", "=", " ", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Range", "[", "10", "]"}], ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.716325584203479*^9, 
  3.7163255851967297`*^9}},ExpressionUUID->"d1753f84-77b6-4b7e-8938-\
fdf5cc0ed868"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272177517118196`*^9},ExpressionUUID->"ea2e8014-1255-4c5e-9912-\
942f4c3f2910"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapAt", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}], ",", "l", ",", 
   RowBox[{"{", 
    RowBox[{"All", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.716325556451764*^9, 
  3.716325588490471*^9}},ExpressionUUID->"f6a79b45-9ebc-43fd-bc8a-\
e3558af067cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "100"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217751726761*^9},ExpressionUUID->"7de3823a-3cb6-48ec-b5ca-\
e682e8f6f016"]
}, Open  ]],

Cell["\<\
Una de las aplicaciones pr\[AAcute]cticas m\[AAcute]s comunes de los mapeos \
es evaluar una funci\[OAcute]n con un argumento constante\
\>", "Text",
 CellChangeTimes->{{3.7271214671246977`*^9, 
  3.727121491774333*^9}},ExpressionUUID->"f4e9922c-69a5-4a45-a784-\
6e304833a507"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"#", ",", "3"}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",ExpressionUUID\
->"69d7d840-7266-4025-a517-495719e78a92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
     "3"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"c", ",", "3"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217751769093*^9},ExpressionUUID->"bb34f531-4364-42e5-8341-\
bd35a84fdde6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.727121046003583*^9, 
  3.727121048131598*^9}},ExpressionUUID->"0b6cfb44-1d21-4b2d-9e05-\
52a2e257fc1a"],

Cell["A partir de la lista", "Text",
 CellChangeTimes->{{3.7271212049206343`*^9, 
  3.72712120764106*^9}},ExpressionUUID->"3c9f8c37-3e77-4e96-9373-\
0ca9d6aa409f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Partition", "[", 
  RowBox[{
   RowBox[{"Alphabet", "[", "]"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.727121187479298*^9, 
  3.727121202057125*^9}},ExpressionUUID->"b6498119-fc9f-4daf-a25b-\
9edab60a3ce1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"c\"\>", ",", "\<\"d\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"e\"\>", ",", "\<\"f\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"g\"\>", ",", "\<\"h\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"i\"\>", ",", "\<\"j\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"k\"\>", ",", "\<\"l\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"m\"\>", ",", "\<\"n\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"o\"\>", ",", "\<\"p\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"q\"\>", ",", "\<\"r\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"s\"\>", ",", "\<\"t\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"u\"\>", ",", "\<\"v\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"w\"\>", ",", "\<\"x\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"y\"\>", ",", "\<\"z\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217751818145*^9},ExpressionUUID->"e917cb69-d8d2-4f36-beb8-\
814b7582629f"]
}, Open  ]],

Cell["Obtener", "Text",
 CellChangeTimes->{{3.727121212976215*^9, 
  3.727121214064069*^9}},ExpressionUUID->"0d497077-43e0-4abf-a4fa-\
504bf0302dc5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"d\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"f\"\>", ",", "\<\"e\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"h\"\>", ",", "\<\"g\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"j\"\>", ",", "\<\"i\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"l\"\>", ",", "\<\"k\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"n\"\>", ",", "\<\"m\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p\"\>", ",", "\<\"o\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"r\"\>", ",", "\<\"q\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"t\"\>", ",", "\<\"s\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"v\"\>", ",", "\<\"u\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"x\"\>", ",", "\<\"w\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"z\"\>", ",", "\<\"y\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727121227894416*^9},ExpressionUUID->"fcd4f847-4bd7-4af8-9657-\
4e4d4c30aa0d"],

Cell["Y luego obtener", "Text",
 CellChangeTimes->{{3.7271212474236803`*^9, 
  3.72712124989585*^9}},ExpressionUUID->"fc50ee5b-14fa-4309-b821-\
ac03beac4924"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"z\"\>", ",", "\<\"y\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"x\"\>", ",", "\<\"w\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"v\"\>", ",", "\<\"u\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"t\"\>", ",", "\<\"s\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"r\"\>", ",", "\<\"q\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p\"\>", ",", "\<\"o\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"n\"\>", ",", "\<\"m\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"l\"\>", ",", "\<\"k\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"j\"\>", ",", "\<\"i\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"h\"\>", ",", "\<\"g\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"f\"\>", ",", "\<\"e\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"d\"\>", ",", "\<\"c\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"b\"\>", ",", "\<\"a\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7271212422977257`*^9},ExpressionUUID->"05b0c66d-7bc3-4f4f-a60f-\
d26d06f84479"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.71632538354074*^9, 3.7163253854051123`*^9}, {
  3.727121041347879*^9, 
  3.727121041531541*^9}},ExpressionUUID->"65f46e4e-f4ae-464c-8428-\
eb56cf6d98b6"],

Cell["\<\
Utilizando funciones puras y la funci\[OAcute]n Select encuentre los \
elementos de la lista del tipo f[_] para la lista\
\>", "Text",
 CellChangeTimes->{{3.716325387012607*^9, 
  3.71632543893176*^9}},ExpressionUUID->"2401be26-284b-46b6-9a52-\
a1f2ea2886b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", " ", "1", ",", " ", 
   RowBox[{"f", "[", "a", "]"}], ",", " ", "2", ",", " ", "3", ",", " ", "y", 
   ",", " ", 
   RowBox[{"f", "[", "8", "]"}], ",", " ", "9", ",", " ", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Input",ExpressionUUID->"4c6ff125-\
4715-4517-b475-87a142b4f071"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", 
   RowBox[{"f", "[", "a", "]"}], ",", "2", ",", "3", ",", "y", ",", 
   RowBox[{"f", "[", "8", "]"}], ",", "9", ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217751833735*^9},ExpressionUUID->"aa180df7-7516-4fba-b99d-\
43f05a7a9ede"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3:", "Subsubsection",
 CellChangeTimes->{{3.727121284919202*^9, 
  3.727121286974943*^9}},ExpressionUUID->"7bd10cf7-4c12-454f-9908-\
efc1a087a527"],

Cell["\<\
Framed es una funci\[OAcute]n que devuelve su argumento enmarcado. Por \
ejemplo:\
\>", "Text",
 CellChangeTimes->{{3.727121313238327*^9, 
  3.727121331190167*^9}},ExpressionUUID->"65d89bd9-4181-4417-8e01-\
70d70669b3f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.727121350377179*^9, 
  3.727121353693459*^9}},ExpressionUUID->"350bee2f-de9a-4521-97de-\
02001c4ef79f"],

Cell[BoxData[
 FrameBox["3",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.7272177518674307`*^9},ExpressionUUID->"52a0a400-847a-4008-9052-\
c920a6f83614"]
}, Open  ]],

Cell["\<\
Utilizando las funciones If, PrimeQ, Framed, Range y Map cree una lista que \
enmarque a todos los n\[UAcute]mero primos entre el 1 y 30.\
\>", "Text",
 CellChangeTimes->{{3.727121378652752*^9, 
  3.727121427468363*^9}},ExpressionUUID->"184ae57f-70ce-4ef8-8fcb-\
88919502369a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Funciones anidadas", "Subchapter",
 CellChangeTimes->{{3.727357504371731*^9, 
  3.727357506171646*^9}},ExpressionUUID->"82a18231-5e10-4e23-98df-\
dbc555c9564a"],

Cell["\<\
Hay ocasiones en las que uno desea aplicar sucesivamente una funci\[OAcute]n  \
sobre si misma n veces. En matem\[AAcute]ticas a esto se le conoce como \
composici\[OAcute]n de funciones.\
\>", "Text",
 CellChangeTimes->{{3.727357547138071*^9, 3.7273575759302893`*^9}, {
  3.7273576579679193`*^9, 
  3.7273576703199387`*^9}},ExpressionUUID->"14b22d34-d359-48e2-9d00-\
39c4aa101edb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Composition", "[", 
   RowBox[{"f", ",", "g", ",", "h"}], "]"}], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",ExpressionUUID->"66c6b6ce-345e-\
46ca-8b17-12856dd1c7d0"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.727357674889141*^9},ExpressionUUID->"213315a1-8c25-4737-b886-\
c0602767e579"]
}, Open  ]],

Cell["Si queremos aplicar 3 veces una funci\[OAcute]n f har\[IAcute]amos", \
"Text",
 CellChangeTimes->{{3.727357678047489*^9, 
  3.7273576944393263`*^9}},ExpressionUUID->"0783e83c-0257-4919-a43d-\
672fbb2bca1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Composition", "[", 
   RowBox[{"f", ",", "f", ",", "f"}], "]"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.7273576990556087`*^9, 
  3.727357703911006*^9}},ExpressionUUID->"024d09dc-7a80-42d4-ab18-\
cc9b4a23f55d"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"f", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.7273577003710413`*^9, 
  3.727357704335813*^9}},ExpressionUUID->"8f66a951-e0a8-472f-b64d-\
16287bc3262e"]
}, Open  ]],

Cell["\<\
Lo cual se puede generalizar a una aplicaci\[OAcute]n sucesiva durante n veces\
\>", "Text",
 CellChangeTimes->{{3.727357709886476*^9, 
  3.727357727758543*^9}},ExpressionUUID->"9b1ff667-6011-4c53-82e5-\
fbc4f5b4c825"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FuncionAnidada", "[", 
   RowBox[{"f_", ",", "arg_", ",", "n_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Apply", "[", 
    RowBox[{"Composition", ",", 
     RowBox[{"Table", "[", 
      RowBox[{"f", ",", "n"}], "]"}]}], "]"}], "[", "arg", "]"}]}]], "Input",
 CellChangeTimes->{{3.727357735312236*^9, 
  3.7273577862886267`*^9}},ExpressionUUID->"2fc4ab7a-483b-476e-aa6d-\
6aed96c36aab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FuncionAnidada", "[", 
  RowBox[{"f", ",", "x", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.727357788161838*^9, 
  3.7273577928376513`*^9}},ExpressionUUID->"82b88b89-ef71-4e3c-b21f-\
de2c4bf805eb"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"f", "[", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", 
        RowBox[{"f", "[", 
         RowBox[{"f", "[", 
          RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
     "]"}], "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.727357792988975*^9},ExpressionUUID->"c2df0168-c6da-4382-a181-\
7a54aa868614"]
}, Open  ]],

Cell["\<\
El lenguaje Wolfram nos ofrece una forma nativa de realizar este tipo de \
operaciones con la funci\[OAcute]n Nest, que es equivalente a la que acabamos \
de crear, pero mucho m\[AAcute]s r\[AAcute]pida.\
\>", "Text",
 CellChangeTimes->{{3.7273578164444427`*^9, 3.727357843060669*^9}, {
  3.72735792919536*^9, 
  3.7273579401314783`*^9}},ExpressionUUID->"17a4014d-a4bc-4a5b-9078-\
43c7bb35634d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{"f", ",", "x", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.727357848326223*^9, 
  3.727357848837048*^9}},ExpressionUUID->"39fd5d72-dd48-46e7-ae62-\
014e2e78c0ae"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"f", "[", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", 
        RowBox[{"f", "[", 
         RowBox[{"f", "[", 
          RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
     "]"}], "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.727357849128046*^9},ExpressionUUID->"a6f144f4-0597-477a-a320-\
e6aa251f6418"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"100", "*", 
  RowBox[{"N", "[", 
   FractionBox[
    RowBox[{"First", "[", 
     RowBox[{"RepeatedTiming", "[", 
      RowBox[{"FuncionAnidada", "[", 
       RowBox[{"f", ",", "x", ",", "10"}], "]"}], "]"}], "]"}], 
    RowBox[{"First", "[", 
     RowBox[{"RepeatedTiming", "[", 
      RowBox[{"Nest", "[", 
       RowBox[{"f", ",", "x", ",", "10"}], "]"}], "]"}], "]"}]], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.727357961829731*^9, 
  3.7273579640677156`*^9}},ExpressionUUID->"8e42bbdb-0ec9-4d10-b78f-\
767c23e39565"],

Cell[BoxData["303.7159372419487`"], "Output",
 CellChangeTimes->{{3.72735794512291*^9, 
  3.727357967413816*^9}},ExpressionUUID->"8aebed25-ec12-47e1-a4cb-\
423a3ccb1a15"]
}, Open  ]],

Cell["\<\
A veces es \[UAcute]til anidar funciones mientras se anota el resultado de \
las evaluaciones en cada anidaci\[OAcute]n. Para esto tenemos las funci\
\[OAcute]n NestList[]\
\>", "Text",
 CellChangeTimes->{{3.727358001369701*^9, 
  3.727358033081594*^9}},ExpressionUUID->"8a82694e-4238-44d5-967c-\
a500d4a760ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"f", ",", "x", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7273580343194304`*^9, 
  3.727358038921977*^9}},ExpressionUUID->"af461136-70a9-48a2-a1c9-\
26b3a83e21a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"f", "[", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", 
       RowBox[{"f", "[", "x", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.727358039083044*^9},ExpressionUUID->"8c20d3b7-3b0b-45f7-a32d-\
f0c71e6f4169"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.727358060345187*^9, 
  3.727358063225307*^9}},ExpressionUUID->"a46b33c9-94a3-4d7a-9562-\
21e663e5fdb1"],

Cell[TextData[{
 "El mapeo log\[IAcute]stico es un mapeo discreto que es notable por su \
aparente simplicidad y complejidad de la din\[AAcute]mica. Est\[AAcute] \
definido como un mapeo recurrente dado por\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", 
     RowBox[{"n", "+", "1"}]], " ", "=", " ", 
    RowBox[{"r", " ", 
     RowBox[{
      SubscriptBox["x", "n"], "(", 
      RowBox[{"1", "-", 
       SubscriptBox["x", "n"]}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "200a46af-ad4c-48e4-8686-5695ab97e836"],
 "\n\nEsta ecuaci\[OAcute]n implica que podemos definir el mapeo como una \
sucesi\[OAcute]n de aplicaciones de una funci\[OAcute]n ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    SubscriptBox["x", "n"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c4b28c82-9bd8-4ff2-aad9-422af251685c"],
 " dada por\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     SubscriptBox["x", "n"], ")"}], " ", "=", " ", 
    RowBox[{"r", " ", 
     RowBox[{
      SubscriptBox["x", "n"], "(", 
      RowBox[{"1", "-", 
       SubscriptBox["x", "n"]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8cd19aa3-a9f2-475e-99e0-b40f72fa88c1"],
 ")\n\ndonde la n-\[EAcute]sima iteraci\[OAcute]n estar\[AAcute] dada por una \
composici\[OAcute]n de n aplicaciones de la funci\[OAcute]n f. Haciendo que \
r=4, calcule y grafique la din\[AAcute]mica del mapeo log\[IAcute]stico para \
un valor inicial ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], " ", "=", " ", "0.25"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "609f5464-9732-4b02-a4bf-ba8effc1863d"],
 " durante  50 iteraciones."
}], "Text",
 CellChangeTimes->{{3.727358064913228*^9, 3.727358264367835*^9}, {
  3.727358340799238*^9, 
  3.7273583907432756`*^9}},ExpressionUUID->"ab70dce0-d770-430c-b3f8-\
cba52c0bf352"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.727358477533059*^9, 
  3.72735847902912*^9}},ExpressionUUID->"4b90b5a9-01c4-4164-8422-\
f0dcbe51bd8f"],

Cell[TextData[{
 "Cree una funci\[OAcute]n Logistic[r_, iter_] que calcule la \
din\[AAcute]mica descrita en el ejercicio 1 pero con un valor de r arbitrario \
y un n\[UAcute]mero ",
 StyleBox["iter",
  FontSlant->"Italic"],
 " de iteraciones. Luego haga una tabla con los resultados de Logistic usando \
500 iteraciones y su respectivo valor de r y grafique con ListPlot[].\n\nSer\
\[AAcute] necesario organizar los elementos de la tabla tal que en vez de que \
se obtenga algo como {r, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], ",", " ", 
     SubscriptBox["x", "2"], ",", " ", "...", " ", ",", " ", 
     SubscriptBox["x", "n"]}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e66ea12c-da12-43c4-ad1f-8ca103732025"],
 " se obtenga ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       SubscriptBox["x", "1"]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       SubscriptBox["x", "2"]}], "}"}], ",", " ", 
     RowBox[{"...", " ", 
      RowBox[{"{", 
       RowBox[{"r", ",", " ", 
        SubscriptBox["x", "n"]}], "}"}]}]}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "196055a2-f0f9-4ac6-8247-67b93d4ba467"],
 ". Para esto es \[UAcute]til la funci\[OAcute]n Thread[]. Quiz\[AAcute]s \
obtenga mejores resultados si desecha las 20 primeras iteraciones usando \
Drop[]."
}], "Text",
 CellChangeTimes->{{3.727358490686832*^9, 3.727358598412366*^9}, {
  3.727358779267146*^9, 3.7273589524501534`*^9}, {3.727358988786302*^9, 
  3.727359028330146*^9}},ExpressionUUID->"917a3081-decc-4157-8ccb-\
8a0004652c4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"Range", "[", "10", "]"}]}], "}"}], "]"}]], "Input",ExpressionUUID\
->"ead04175-9cc1-4dc9-abd6-a548e09a5105"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.727358942379117*^9},ExpressionUUID->"619984b1-2187-4c64-ad99-\
33fc9f945d3c"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Comentarios finales", "Subchapter",
 CellChangeTimes->{{3.716325649142664*^9, 
  3.7163256518227377`*^9}},ExpressionUUID->"5f6e016f-cf44-424e-9696-\
f61d6b49bf80"],

Cell["\<\
La sintaxis del lenguaje Wolfram es compleja, y las reglas que utiliza no son \
triviales. Como sugerencia se recomienda no abusar de los operadores, suele \
ser mucho m\[AAcute]s f\[AAcute]cil de leer\
\>", "Text",
 CellChangeTimes->{{3.727280849857692*^9, 3.7272808628966007`*^9}, 
   3.7272818589416037`*^9, 
   3.7273023971517963`*^9},ExpressionUUID->"2cb49f17-1c06-44e9-86a4-\
82353430e9c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"g", ",", 
   RowBox[{"Map", "[", 
    RowBox[{"f", ",", 
     RowBox[{"Range", "[", "10", "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727280869138941*^9, 
  3.727280882040387*^9}},ExpressionUUID->"473beef7-f722-43f5-88bf-\
ab33f9b2df6e"],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}], ",", 
   RowBox[{"f", "[", "6", "]"}], ",", 
   RowBox[{"f", "[", "7", "]"}], ",", 
   RowBox[{"f", "[", "8", "]"}], ",", 
   RowBox[{"f", "[", "9", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.727280875391725*^9, 
  3.727280882235527*^9}},ExpressionUUID->"fbabc5a9-8c18-4d62-9f1f-\
07cae6aea717"]
}, Open  ]],

Cell["que", "Text",
 CellChangeTimes->{{3.727280884575715*^9, 
  3.727280885399598*^9}},ExpressionUUID->"1960f8be-484d-456a-a886-\
43f3872fad55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", " ", "@@", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "[", "#", "]"}], "&"}], ")"}], "/@", " ", 
   RowBox[{"Range", "[", "10", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.727280888778329*^9, 
  3.727280950599525*^9}},ExpressionUUID->"f87ec558-e0d6-4e2c-b2f5-\
11296a84870d"],

Cell[BoxData[
 RowBox[{"g", "[", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}], ",", 
   RowBox[{"f", "[", "5", "]"}], ",", 
   RowBox[{"f", "[", "6", "]"}], ",", 
   RowBox[{"f", "[", "7", "]"}], ",", 
   RowBox[{"f", "[", "8", "]"}], ",", 
   RowBox[{"f", "[", "9", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7272809510721807`*^9},ExpressionUUID->"f4e2525d-5f85-4d6f-863c-\
907ec31933ca"]
}, Open  ]],

Cell["\<\
a pesar de que ambos dan el mismo resultado. Adem\[AAcute]s el segundo tipo \
de sintaxis es m\[AAcute]s vulnerable a errores. El siguiente c\[OAcute]digo \
es similar pero devuelve un resultado muy diferente:\
\>", "Text",
 CellChangeTimes->{{3.727280978638311*^9, 3.727281029206174*^9}, 
   3.727302400682386*^9},ExpressionUUID->"399be33c-3069-4389-a600-\
4d7f3ee19f42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", " ", "@@", " ", 
    RowBox[{"f", "[", "#", "]"}]}], "&"}], "/@", " ", 
  RowBox[{"Range", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.7272810343263903`*^9, 
  3.727281035942237*^9}},ExpressionUUID->"9a5bd017-8b8e-4669-a516-\
d7c8a8648a8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"g", "[", "1", "]"}], ",", 
   RowBox[{"g", "[", "2", "]"}], ",", 
   RowBox[{"g", "[", "3", "]"}], ",", 
   RowBox[{"g", "[", "4", "]"}], ",", 
   RowBox[{"g", "[", "5", "]"}], ",", 
   RowBox[{"g", "[", "6", "]"}], ",", 
   RowBox[{"g", "[", "7", "]"}], ",", 
   RowBox[{"g", "[", "8", "]"}], ",", 
   RowBox[{"g", "[", "9", "]"}], ",", 
   RowBox[{"g", "[", "10", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7272810361969347`*^9},ExpressionUUID->"d60d1a3b-1e19-49ff-abe6-\
e1d9bf420299"]
}, Open  ]],

Cell["\<\
Tambi\[EAcute]n es recomendable utilizar lo m\[AAcute]s que se pueda las \
estructuras iterativas como Table y Map en vez de iteradores tradicionales \
como For, While y Do, y por \[UAcute]ltimo recordar que muchos de los \
algoritmos com\[UAcute]nmente usados ya han sido implementados, y nunca est\
\[AAcute] de m\[AAcute]s buscar y rebuscar entre la documentaci\[OAcute]n.

En caso de duda acerca del funcionamiento interno del lenguaje se puede \
consultar el enlace

http://reference.wolfram.com/language/tutorial/\
SomeNotesOnInternalImplementation.html

donde se discute m\[AAcute]s a fondo algunos detalles de la implementaci\
\[OAcute]n. En caso de que esto no sea suficiente tambi\[EAcute]n se puede \
consultar la documentaci\[OAcute]n y el c\[OAcute]digo de Mathics, que es una \
implementaci\[OAcute]n de c\[OAcute]digo abierto del lenguaje Wolfram. 

https://mathics.github.io/

Si bien por ahora carece de muchas funciones es extremadamente \[UAcute]til \
para investigar funcionamientos no documentados.
El diagrama de clases de Mathics es especialmente \[UAcute]til para entender \
la jerarqu\[IAcute]a interna del programa.\
\>", "Text",
 CellChangeTimes->{{3.7163256532944*^9, 3.7163260251710567`*^9}, {
  3.716326392373764*^9, 3.7163264117272882`*^9}, {3.727280842811494*^9, 
  3.727280852898918*^9}, {3.727280960265129*^9, 
  3.727280963585435*^9}},ExpressionUUID->"22c466a8-9fd1-4ad8-9662-\
56da8af118f7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QXc3FTe9vFtKe4OxbVYkYVCoUCRYsV28cUWl7K4FC8OS3dxXWxxl+JQ
3IsUd4cixdnitOR9rvCe8J9zJzPJ3Jk7M5nf9/OcZ+mdTCYzEztXzjmZa7s9
N9ip+5/+9Kd9J/q//7fBtoNX3mefbQ/acKr/+8fGe+y768577LjDWnvst+PO
O+7Td7vx/u+PX/7fvMv1+NOf/u///hQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAIBSGDZsWDD33HNTKDXLiBEjit5cI7fddlsw33zzUShF
b4otZ7HFFiv8N6OwXwAAADTS5ZdfHvzpT3+iUGqWBx54oOjNNXLllVcW/n1Q
mqMgm0kmmaTw34zCfgEAANBINufo06dPMGDAAAolKr179462j2bNObTdrrba
apQ2KrPNNltu9blXX301uPTSS4Nzzz03eO+993LYOpubyzl69uxZ+O9Iad79
oiu9/fbbwRVXXBHug9ofAQAAOsvmHI8++mjRq4Mmc8011zR9zvHwww8XvTro
Yrvttlun63NvvPFGMN1004XLmHjiicP/vemmm3Jcy+bkco5tttmm6FVBzvLY
L7rSl19+Gcw888wV++B//vOfolcLAACUADkHqiHnQDPKoz43evTo4LLLLgvb
cJxzzjnkHGh5rZZzjBkzJvjvf/8bZo433ngjOQcAAMgNOQeqIedAM8q7PkfO
gTJotZzDIucAAAB5IudANeQcaEbkHPUj5ygvcg4AAIDfkXOgGnIONCNyjvqR
c5QXOQcAAMDvyDlQDTkHmhE5R/3IOcqLnAMAAOB35ByohpwDzYico37kHOVF
zgEAAPC7MuUcen7CE088EZVW8fzzz0fr/P777xe9OhXIOfLx+eefB88991zw
9NNPh+Xbb78N//7iiy9Gv/0777yTy3uNGzeuYj/Qe2f1yy+/VCzjq6++ymXd
8kLOUT9yjmJ988030XFARc8cyQs5BwAAwO/S5hz77bdf0KdPn5rlpJNO6sK1
r3T22WdHn0VF9b0iqW749ttvh0XPrkwy33zzReu85557duEa1tbqOYe22yWX
XDIq2kYHDBgQrLPOOsF2220Xbq/PPvtsw9ZT6zb//PNXbJcqd911Vzh90UUX
jf6244475vKe33//fcV7XXjhhRXTP/7442i7/PTTT2OX8cknn1Qs47rrrstl
3fKSZ31Oxwlyjo6+/PLLin3HljXXXDPYcsstgzPOOCP44osvumjN86V8Oe6z
LbfccsFGG20UHHDAAQ05Npx++ukV+9aHH36Y27Lz3i+6EjkHAADIU9qcY731
1utQV4srRdbTmy3nOOKII6J1mX766RPnI+fILm3O8de//jXVdtu/f/+w3p+n
7777Lph22mlj36/InGPVVVeNpm2wwQaxyyh7zjF27Nhwu9ljjz3CfXPmmWcO
l6VjSNmlzTnuvffeVPvOFFNMETz22GNdtPb5UX261mfr3r177tn9tttuGy1/
uummy3XZee8XCy20UDBkyJDgzTffzHU945BzAACAPNWbc+j6L67svffeXbj2
lVo159h0002DZZddNiynnHJKF65hbe2Sc6hMPfXUud6/Vd3PLv/UU08N3nrr
rTBP+eGHH8J5tt566+i3P+GEE3J5359++ilapsqtt95aMT1NzqF7+XYZ999/
fy7rlpd66nM6Hmgb3nXXXcP9MWk76NGjRzDLLLOE7V7KKG3O8e9//7vie1G7
JNfmwS3DldVWW62L1j4/gwYNSnVcGH/88cPcLy+LLbZYtGy1i8lTo/aLbt26
hccBHcPy3i/0fejYO9lkk4XvpW1L/9Y+CAAAUK96c45XX321oeuleuALL7wQ
3vdWXVv1Wt3veeONNxJf08icQ22zH3/88bDOePXVVwdXXXVVuG7Vxj5Im3Ok
pfEbbr755vC99b8ffPBBptfr+9BncOvu6trVlC3nePnll8O/6/fU9qQ6m50+
55xzBj/++GPi8vQbDBs2LPwO77jjjqpt9jWPXXYe7fs1boYyBy1bv8evv/6a
eRlpco60tE1p3JEbbrghXKe7774781ge+r71Or1e2VCa/TZtfe63334Lt/m9
9tor6NmzZ2z9Te2pppxyyth7+SuttFLYp6WeMU6aVdqcY6uttqr4Puw9fR2H
9d25aQsuuGDsMlQn1v6p45WOm2oX9Mgjj9TcF37++edw7Jrbbrst3C5uv/32
4JlnngkzvGo+++yzYPjw4eFr1Afpo48+SpxX/VPc+k8++eTRdqcc0razUrnz
zjurvm9a2taVm7jlHnzwwbHzaV30efUZ9Fl0bta+X0te+0W1kvd+od9Y5xm/
6JgCAABQr0blHLq+VJt93ZdR0TWuT9d4bvoCCywQtpmVUaNGVVxD+2WRRRaJ
vb9cLee45ZZbovdS8ccl2GWXXaJpGr/Bcn3348p4440X/OUvf6m4nh45cmS4
nIknnriiPmXf/9BDD43m//Of/xy2/VY58MADO3wu1ROWWmqp2PfXtfpTTz3V
4TX77rtv9F6aR+0UFl544YrXqq2+rnWrKWvO4ajetPzyy1fMozEHfNo3NLZH
3O+v+qLGFnT+97//hd/7pJNOWjHvVFNNFf0mbv5+/fpFv73fZ0nr7ubfYost
wixg1llnrVim9hu1EbGUX7llqlx22WXh388888xwWWqvYO9V2+1SdQ7RmL52
Gcp2fBdccEEw22yzxX4naqMUdw9c26J7L42douOC37dH33PSuCFOrfrcSy+9
FLa3t33CbHHt8V1fJR0rXHv9GWaYIfYz6bdSe6tWzzzS5hy9e/eOPr+2AdWN
HbX3scdonR98ytCqHTc1Po6fKeo91K5J20fc6yaYYIJgn3326fBeI0aMCPM7
Ldevk2+22WbB119/XTG/fm/XfkBlxRVXrJj+j3/8o2I5Gi/UmnfeeaPt+PDD
D6+YduSRR0bTlCG485pbT7tcvz+Y9t1jjz02mHHGGTt8dh2vr7/++rifKtLZ
/SJrKdN+AQAAyqXenEOvU73AL/Z+2+qrrx7NP3DgwIrl6TpT7VLd9MGDB0fT
1E6h1vWVMgRds1nVcg5dH9ppfh1M/QfctGWWWaZimuqHtdZH9//c9eyTTz5Z
c37lEE618Tl0H9TWS+PKhBNO2CH3URtkN119wJPqDao3V7tHWvacQ/z+JX4b
fN1Ltvdg48riiy8ejschepZKrd/f1buqjc+h9XDT5phjjrCOF7cstSe3ksbn
8PshxBW1cZFa43McdNBBNZelDMS/n66M0k1XXVH10LjX1mpnElef02+rOpyy
n7hlumzj9ddfr7psN0bBTjvtFNbv4/Y3jWN78cUXh5lWq0mTc/jtDlZYYYXw
7zqmKhvacMMNo2nKO5TB+eIyML/4ue5hhx1W8zU2IxaN5+DnG35ZZZVVKnIa
bQN2us1O1EbKZjzK4WzbN40pbV+rc6Flz3v+ucQ/R9lnLKmNS1yWaos+Z9x3
7dSzX+RVWn2/AAAA5ZL3OKR2LEdbR1Zd3d6j1bWavU62/VE0n8ZqU98Kte1Q
e11dZ953330V2YjqIVaWnEP3q61qOYfqfrr+1j099zrdz9R9f1tPUyYh7777
brhutk/ERBNNFP7NlWuvvTZaflLOoWtFZRRumtoHqH/0Qw89FJx44onhMt00
1YPV1tuxOYf7/vW+uldq65oq1dpkt0PO4d/b1X1TR9mFvbe68sorh22ZtE3q
fe326OpfqiPqu7b9Q1T+/ve/R7+/sghJm3O431/1Md3v9euQtk1HUs6h9vx6
b7vOc801V8V26cYnqZZz+Pek55577vD3UNa28847V0zbZJNNKj6Tv+2pDqm6
rvp42XYdqs9Ve96mrc/pXrLuKccdj9QPSW001AegHsoAtV+rD4fdRux+7ep2
LudqdmlyDh3r0hzv1Ubp3HPP7fB6Hbu0fLUDUi6g71HHJ51jbJskbQ+O9kPb
f+iYY44JtwG97rXXXgu3Y7W9ssdO/Ta2XYnOG8rJ9Ro/13vwwQej16kdkZ2m
31efQ8fVpZdeumKa2vNZen87Xetm2TEudBy2tI+7acqeXfaibMW2K9My9Nn0
vSkLsfuN3/bESrtfNLq04n4BAADKpZE5h641bRtw1dEd1fls3bEaXeupz7+K
coC4a2RpVM7h07W3W59evXpFr9M9bquzz1u59NJLK9b5rLPOqnid6rt2utod
OH7OYcew9/sFqb1KknbIOUQ5kb1Gj3sf3d/222bbbU71N+uKK66oeG9lY74s
OYdyPkd1NjvNPb9FGv28FZtlaDvSODrWGmusEU1XXmHH67D1NWVvtk2W/a5V
/OU6eg5ntfqbsg21D1P/sTxpv9dvqmOh7l3776vPqlxS43Wqn1ma53AXUVw2
Wy3nOP/881Md77U8v12dT+1j3PFS5W9/+1v0+nnmmSeaT9mIXbb6Ndr2Do7L
BnResJmdnplk22zo+G9/p5NPPjmaVqs9krZNbWOuz5elbcvNp+zLnmf8th7n
nXdexWtt9q390PH7Rtr9Wf75z39WvGecWvtFUaVV9gtKuUq1sXkAAO2h3pxD
favVv94vfl1Of7PXxKK2Gfa+neoOlq5VVTfTNVtSfwsV3We3suQcfn21Ws6h
sRR0Xayx9vznDNji11M7m3Oob4tdvj/uqMZ/tNOVezg259A6++NV2nvTaquS
pF1yDt2XdvMom3P233//6O/KOdR2wZaZZpqpYvl2fMU8cw6NrWL5OYTumzqN
zjns/W5lCr7TTz+94rVqf+TYnMMfB0dtSezr/Pb5qteq7pvUR0Hbueqytq7b
KGqzpXy26DpkZ0q1nMMfn0LHE9Xv9Twtv52S2gT5Y2QqEzruuOPCY35cJuSK
reuLP/6Miv62/fbbB0888UTFvPbYpDLNNNN02D/tdPssq7XWWqvqd6OsM2mM
UPv5XX8exz/P2HZEyv3td6Fji2OPA8oO/c+hz+am+zlHrf2CQmnHkvdz4gEA
rafRz1tRP2jbdkCvs/U/Xb/5Y9EdcMABqc5jauduZck5/GfjbbzxxtE0m3Po
GtI+B7BaUZtpq7M5h98HwG//q/t3drod48TmHLqP5rNtq/3+7lY75Bx6roOd
R/ma47eLyXJtlWfO4Y9v448BctFFF0XTGp1zKO9zf9cYuj6/XYZ9rq3NOXbY
YYeK16n9v31dUn+qtO058nxGsGj/02+6/vrrl749h+1DofzIjqUpGu/Cfnbb
9kZtGtROI83+YscpEvVz8cfvdUXnEfUrcWwfjTTFjbEr6pvm/q4cQX1W1GZC
2459jZ53YilDs9m7+kRZNpvWeDp27CNlHnbZLt/3x3StVZZYYonY34z2HJR2
L7Y/JzkHAKArniure17udWo7sPbaa0f/9sfd1H1AW4fQfTddQ7s2z7qf6KZl
yTl0/Wyn2Wckih13zuYcqt/Z12ksfbWrcOtj63x55xy6R2ff23+mru5v2ulD
hw6Nptn6ud+/R+x1fjvnHKq3+M+F0LgAjr4b93dlchrjolqx4xXmmXPomT6W
6tx22V2Zc9g6sNqz+LQd2tfa+/A25xg0aFDF67RP2tdVGzcmy/gcyjxeeeWV
xGVV047jc2ifsOOv6hk5Pn1m+z0oK3TWXXfd6O9qJ6X9QLmyjpd2XCaVuH4h
Or6qbZq2M/vMKhWbuWy00UYVv0OtfdP9Phr/yS7Tfg/qg2MzB/XBsjQOjn2t
7ZeiNi1q2+Km+XmE5rWvdePh6lxq/662K9U+x/PPP5/42zI+B9qZHZOHnAMA
0BU5xyWXXBK9Tv2p7Tj+9vpY/HHw7b1gXd8qs3fTsuQc/rh6tu7nj0lncw5b
Z9N622Wq7bp9Boafc/zrX/+quD7323Y7STmHnoVr18t/NoHf3sP+fuQcv6uW
c6jua58boaJ7tXY8iTvuuKNi+iOPPBL7PrqW96c1a85h92Xdl49TLefw21vZ
++Taxm37J92bt+21GpFzODxvJZ1aOYf/O+i7tjTuic0flGW4dgv67uzzodS/
0bL9A1Vs/uSPmSTazv3+e2rLJGoPZP+u43EcjfFhc21tV/Z1p512WsX8NhvQ
Md8+k9Z/rc45ovOCxgi205RXWPaYbMf18Pc1PUM6jvatuOepWzxvBe2MnAMA
YNWbc6hurjqLX7bccssOr9U97rhxNvznYYr/PEPd07vnnnvC+1hqL25fnyXn
0LWqvf5WPqHlqY+9/2xLm3PccMMNFdP22muv8DmkqsPafELFzzn8cfk1roGu
+1V/Uu7iJOUcGlPDXpvqPqOugU866aSKe5lune24BOQcv/NzDo1zoe/DPkPF
FW0fdixXUb1Nr3HzqP21si+NOaH9RduB8gnVh/2+Jc2ac+y+++7RNG37a665
ZvS8FY1FI9VyDtUn7bN+VG9WHU99CrQd2tf5/RIamXNYui+vup2eXRtXJ3OZ
h7sW1rFC25H6Idixk11R23vVf3WP3B/bp9XUyjn845aO09o2VG/XNuk/Y9mO
C6QxKOxxVmNrKAe79957w9fb16mu79pmuP4gOh5rvGq1oXnqqafC16600kqx
xzJ/fA7la8qs9VxvnS80VoueTaLjpj23adwQ+zo/n9Qzqex0+9xYjQVsp2m/
32yzzTo8R0jFH9/Z7hv+M1P0XGq7TyrT1vFWuYbGhNU+q+0yKZd0OrtfZC1l
2i/Q+sg5AABW3s9bicsuJK4v9QUXXBA7r9qIxy1b18+2D0yWnEOUQ8QtV/0R
bDsRm3PovpT/DE9X9IwOO9adn3Pous+Ot2qLrsedpJxD1N4lrt5li+oS/jmd
nON3fs6RVPQb2+dOWho3omfPnjWX0So5h3LDpM/gxq2plnO479+2ZYorev6F
7ccjXZVzOKo/K5fUfhX3G6pOqWOWP56sm6Y6to4rZarDVcs5lFPYXKFaUR1X
Y2n6475qfNm4+dWnY/bZZ4/+bcfBUZuLWu+n9bb7qI7vyujSrKftO7HppptW
/Mb+84uVBdjXK8dw1NYr7piuLMX/3I8//nj0OmXWtg2M8nJLxzCbHSYVPzf0
5bVfVCtl3S/Q+sg5AABW2pxD14Zqg16r+OPnO3o2iO7XuaL+K0n9dlU3Up96
+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
Tj755A7TadMBlBc5BwAAfzjssMOi8+ITTzzRYfr1118fTT/nnHMyL5+cA42Q
JecA2oHfluP777/vMA9tOoDyIucAAOAPCy64YHhOnH322WPb8//444/BlFNO
Gc6z8sorZ14+OQcagZwDqFSrLYdDmw6gnMg5AAD43TPPPBOdEw888MDE+bba
aqtwnu7duwejRo1KteyRI0cGw4cPD84///zwtRtvvHH4b5Wffvopr4+ANkXO
AfwhTVsOhzYdQDmRcwAA8LsDDjggOic+++yzifPdeuutseP3V7P66qtHr/EL
YyWgs8g5gD+kbcvh0KYDKB9yDgAAfn/mxJxzzhmeD3v16lV1Xt3/m3baacN5
l1122VTLHzNmTPDVV1/FlnHjxuXxEdDGyDmA32Vpy+HQpgMoH3IOAACC4LHH
HovOh0OGDKk5/w477BBdE7/77rsNXz+gGnIO4HdZ23I4tOkAyoWcAwCAIDj0
0EOj8+GIESNqzn/jjTdG85911lldsIZAMnIOoL62HA5tOoByIecAACAIhg0b
Fp0PzzjjjJrzH3zwwdH8Tz31VBesIZCMnAOovy2HQ5sOoDzIOQAACIKff/45
mGaaacLz4QorrFBz/nnnnTecd5555umCtQOqI+dAu+tMWw6HNh1AeZBzAADw
u2233TbV9a36tbhzp/q7AEUj50C762xbDoc2HUA5kHMAAPC7O++8Mzon6vyY
ZJ999onme/HFF7twDYF45BxoZ19++WXQvXv3cPufdNJJg4cffjh4+umn6yoa
k3qqqaaKMu9Ro0YV/fEA1IGcAwCA3/3666/BDDPMEJ4Tl1566dh59PzZOeaY
I5xnwQUX7OI1BOKRc6Cd2bYceRfadACtiZwDAIA/7LLLLtF58c033+ww/aGH
HoqmH3300QWsIdAROQfalW3L0YhCmw6gNZFzAADwh/vvvz86Lx577LEdpu+2
227R9Ndff72ANQQ6IudAu3r88ceDLbfcMlVZYoklov1kkUUWSf26Bx54oOiP
CSAjcg4AAP4wbty4YJZZZgnPi4suumjFtLFjxwYzzjhjOG3JJZcsaA2Bjsg5
gNpOOOGEaD856KCDil4dAA1EzgEAQKW99torOje+/PLL0d+HDx8e/f3EE08s
cA2BSuQcQG3kHED7IOcAAKCS2kG7c+OQIUOiv++www5Rf+133323sPUDfOQc
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
52hF5BwoE3KOciDnaC7kHABQLuQcyIKcg5yjFZFzoEzIOcqBnKO5kHMAQLmQ
cyALcg5yjlZEzoEyIecoB3KO5kLOAQDlQs6BLMg5yDlaETkHyoScoxzIOZoL
OQcAlEuanOOTTz4Jrrnmmopy/fXXB8OHDw8effTR4Kuvvmr4ej7++OPBP/7x
j7C+tuSSS4Zl//33D6dpXZZddtmo5OXII4+MlrnTTjvVtYzBgwdHy9hrr71y
W7eikHOUN+cYO3Zsh/3cFe3rL730UvDdd981ZP323XffaD/Zb7/9cl9+GXKO
O+64I/a30d+fe+65hh2HhwwZEv02O++8c8W0U045JZq2ySab1LX84447LlrG
Nttsk8cqh5588snY72vYsGHBE088EXz88ce5vZelc6I9H+n8mTdyjnLIknNo
/046Pt96663h8fmnn37qojUvJ3IOACiXNDmHrqPduTipzDXXXGEu8PXXX+e+
jrou7d69e4f33HDDDcPpZ5xxRsXf86LvxC2zb9++FdMeeOCBYMCAAVH55ptv
Ypex3nrrRctYbbXVclu3ouSRc/z888/hddlBBx0UPPjgg8G4ceNyXMNk5BzV
c47vv/++5n4+8cQTB9tvv32nvsM4a621VvQeAwcOzHXZUoaco1evXlV/m/HG
Gy9YY401gjfeeCPX9fvb3/4Wvcdyyy1XMW3PPfeMps0777wV00aOHFlxjPzg
gw9il7/ddttFy1hiiSVyW+9tt9225vb85z//OXjooYdye0/Rsc2+x7vvvpvr
8oWcoxyy5By6n1Nre55qqqnC3PC3337r9Lr9+OOP4TWL238vvfTS2Pnefvvt
iv383nvv7fR7F4WcAwDKJa+cw5W55547eOGFF3Jdx5VWWila/pRTThlev6p9
xTnnnBNOLyLnuPrqqyve87PPPotdBjnH79RWQG0CVEfWtbn97maZZZZg7733
Du+x5nF9Zn300UfBCSecEJZFF100fD/lcfr37bffnnl57Z5zuLL22mvnun7k
HJ3POVyZbbbZgjFjxuS2fvXmHPfcc0/Fer366quxyy8y51CZaKKJgtdeey23
9yXnQFpZcg57nKhV1Aars9Qeyi7zuuuui53viiuuqJhPbctaFTkHAJRLPTlH
v379wnqi7htstdVW0TJc6dmzZ65tgmeeeeZo2YccckiH6Z9++mnYr8WVvLz1
1lvRMtUm1Eqbc7z++uvRMpKu81tJ1pzj6aefDvbYY49gpplmSnV9pnq45n/4
4YdzWV9lbq6fk1+OOuqozMtrp5xD+ZPLiFy9ypY8Pz85R7aco1u3buG+paL7
vGpPZ3+ba6+9Nrf103eXdBzMI+fQ/WC3/Dwzcj/nGDRoULgtqx2ZfzxS/8K8
kHMgrSw5hzuGu/3/2GOPDbfno48+OlhsscUqtrnJJ588bDfZGeeee27FMnUc
iKP+w26eCSaYoNPvWyRyDgAol3pyDn+ciS+++KKizYWK7tvH0XWyxtnQeVn5
xRxzzBG2tb7ggguCX375pWJe9VfReXzCCSeMlrvmmmtGdS/d/xfdd9D9C1cs
3adz86tofIH7778/vB+tetw888wT7LDDDrG5zA033BAt8/zzzw//pnO4lrP5
5ptXfF7VVdx7qL+sc+WVV0bLuOSSS2K/kzvvvDPYYostwnrMDDPMELaJUV1P
1xlx/W1Vt3HvpXq3+65WXXXV8DvVclT/iOuvr+Wdfvrp4fe4yCKLBDPOOGMw
33zzRX3vzzvvvKptKtLkHPo99tlnn/C+sl831vWZ7gmfeuqp4ec45phjgt69
e8dmHgsssED4vTVTPtROOYfa9FvaZux07UfWs88+W7Gv+f2RtF+4aX49PE3O
cdttt4VtC9x+ou1W9T1/PeKUMeewNE6G/W3+/e9/V0zXPmR/mx9++KFiujvW
qlx22WUV03Qf1x3DdJy2knKOf/3rX+Fx1a6TxmBx73HxxRdXvLdbvmuj56h/
oHvNmWeeGf5N7eeXX375MKtYeOGFg4MPPjjcdn1+zvHYY49F026++eaKaRtv
vHGH15944onRez/11FMV05SB2+/z22+/jaalyTnUh+fAAw8M61WzzjprWPSZ
9LulGQOHnKMcsuQc2kbcvLpGsNRfePzxx4/d7nTdofO12qTqdbpG0LlZ53zt
o88//3zFsnSNpm16xRVXjJalfsO6r+W2d41Bo3sR+m/tg26+6aabrmK/ePnl
lzt8XrWn1Lauaz/dE9N9M233cdc6un9kl6f7Rrru0/6qbNe1/9I1i91flbFq
n9SxVe049d2pPa3WuxpyDgAolzxyDvn8888r2nUom/CvPU877bSgR48esXVa
lRVWWKFinIu4e8i2uDp+tX4rqk/ZabomVh3BX5au0f223nH9VjRPtXXy62nV
+q0o17FtwuOKztG6NrCUEbjp6pOv+5Nxr9U5+9dff41ep3qn1qHW+vt5k5WU
c+jaSPWU+eefP3aZCy20UDhd9YM4uh7SdGUb1V6f99gDWbVzzmH7F6j49/ZV
R7XT7bYnNsvQ+iRN83MObY8a47LaNqs6dDVlzzkOOOCAiu/Dz5Guuuqqiuk6
Xlv2OKQ6SNK0tP1W1Bek2u+lY5NTrd+KPbapTpTUFyWuH1W1nOOZZ56pmKa2
Hj57rlKOZN1yyy0Vr3/vvfeiabVyjhtvvDGYbLLJEr8b/c52eXHIOcohbc6h
/dVuIxtttFHFdPUL9fc5N1aa66+ZVHStZrNinWdrXSPo/o29PkoqNh/Udcsk
k0xS9Zjgj/uke012HrUd0TWP+7fGAxFdV/j7s851/ntMOumkVfctcg4AKJe8
cg7x2zjoXpyj60KbL+hege4PqL2wHa/BjtnfiJzDFd0L9Mc2VTsHq9E5h9o8
2NfpPsv6668ftrOwf9c5194btzmHK/pubf8eV9Sm3dF4e3Z+9TnSfZQjjjgi
2HHHHcMsQdPS5hy6ftf1v+rDcd+Dyyay9n13mYnqTdWW+84772Rabh7aNedQ
DmXb+qsupmtry885/PYc9eYcti6ta1wdZ3TvTvVYe82rtkhJypZzqGiMIpW/
/vWvFXVyHT/8e6N+zuG/TyvkHHYbiOsHZ3MMSco51F7Cb2ty9913d/i+7Xeq
jN6qN+dQvxz73ei3Uv85HYN1f9vue9XGZybnKIe0OYfGtrLblK6dLLWPstPV
XlY0lqi2t1VWWSXsD+ragOqYYedXm1pngw02qHmNo3YVtfITtS/R+4v62Nhp
Ot7r86oNqT2G6z6Udeihh1a8zu2Tap+hzEL5rqitoJ1P1zcqarPrX+e5dmFx
yDkAoFzyzDnUHtHOp8zfsXVh1eVt3wh7b03nJtdPQdej6nuhvqZu+uGHHx7+
TcWdQ7PkHLqWdG0pVf+2y9Z1sRWXc2i99d4XXnhhxXLVzsCtl20XkpRzqD2m
+rK6aYsvvnjUlkXvofqLXb7adjt+zqFrZVfnHjFiRMV1gx3PRL+H+7syEf9+
u+iavFq/lamnnjp8vftfv6iuo/d88cUXE5eRltZDdRNdn8VlONpWFlxwwbCe
pD4++nyNLjbLK3vOoe1Iv7N/D0731fUsDZ+fc/jbUT05h57Jadtj+1mkzZ30
2ZK23TLmHHFlzjnnjL1f6eccfp+2vHMO3Uu+6aabKt5TxyZ3jLT3bbPkHFo3
NxaSnzXoPGD5OYeO9f5xS3Ug1aXi2JzD3+7qzTlsdq9jvjuHifpO2vOR+tYk
Iecoh7Q5x9ChQyu2qb/85S/hPSK1Y9Px0m+j6q691D/Nb7vlrLvuutH8aofp
aN985JFHKpanY7vbd1V0nNU+rj4xdj7lhW4edz2jviI2a/DHWLP7qfrAWPps
dvn6t+tjrPsxo0ePDv9bfcDsfMop3D7pZ0DKFJOQcwBAueSZc+j8EXeu1XWp
PQ/rutn2uVTR8yrd9LPOOit2HVX8+xiSJeew/cJF9zHcNN3zsBr5vBX1ebev
95/ZZq9/VDSmiePnHLrXY9n7LPZ31XgY9nW6J6r7Oqpn6Zo66XpI47yq3Yb6
88bVrXTPZL/99uvQhz1Purd53333hfd/kjKWri5lzzniisbESGr36+ccvnpy
DpvNqSjntMcN7Rd2elK/pnbJOVSUQ/ltqPycw38Odt45h+TxvBU/5/D7Sk0/
/fTRNLVpt2o9b0U53tlnn53wbVfmHP494HpzDtt2UecD/zxoxzTSd5uEnKMc
0uYcGr8r7XnJ3240fprG3NH+oX1CY1uo2G1tmWWWqXjNf//734pl+uNsOLa9
hfanuHFy7LhOyjt0nWi3efU9cdM17pJl221pLLWksWtWX331aD5dS9p9zu+j
5o8xZJFzAEC55Jlz+P01VS8VPWcsS/3Rv7+WZ87hX/+rn6ubpnp80ufJO+fw
swo3pqqldpluuu7fJL3W79Oqcb3ctA033DD6u+7BqB970veu6wNdC/n9EXTP
UTmI+rnEjW2idrGqtypDSjOGXj10/aS2qXof2w6myFL2nEP9tjVunZ8raRlq
Z+Gr1Z7DXu+mzTnUryrLb/Lggw/Gfray5Rx2fA7ds1WfHbtvun7rjp9zuL77
jm1n0Kw5h46HPvucGZsFi59zKP9R3c7eW9Z39p///Cd2vWzO4bcV8ccxTZNz
6HfKsi3HjY3qkHOUQ9qcw471GVe0HesZYnYMdB1/9SwWew8pqfhtWXffffdo
msaS8a8JHHtM13jiPo0F6o+PWq2obaozatSoimnVvh+Nf+rms9dK4rc50f2e
JOQcAFAueeUcaqc45ZRTRvOoLur6b7zyyisVr9ezWdw9hbjij/efZ86htgmW
vU/SlTmH7iPa19uxTETXFfb6QNe1jj8OqU/tUtx0m3OIrn3UnlyfTWN+2j4u
rvjfv+XuR6rOYJ+D44q2gb///e/B7bffXnWcjzRU79b3rP7Ccf39df2m+zi6
J6RMTeO/d2WJGx++WXVmfA71b9I+b6epHZDPzzlsm3yxzz5Mm3NoXAT3d9VP
qx03VJKeS1rmnMOxfQP1Xdnt0885/OdL9e/fP5rWrDmH+uT77LjFtXIONz6H
MmV7TtGxJW6sH5tz6Pkxlv/MzTQ5h/Yjm0WpLlVtW9YYNEnIOcohTc6hfMxu
i9pX1YZTRec9tVfw22eJrpXsdqhrGLW71PnSHxvMH3/Gtt30jweW2l+4+bbZ
ZpsO09W/0b6Psphq27zdz/w2U0n5hPY9O5/fx8weo2o995acAwDKJY+cQ+dY
225QRff+HdWfbD3VP6emXUeVvHMOm2VkyTn8fidx97clKee49957K17vfy5d
i9vpaq/v1Mo59HxZN93POXyqC+keuOoX7jW6l5PEjkOqe8Jqw6E6a9w9G7UD
0Hage59xY4EkrY9rO2L7qts6iWs74j8fB8k6Ow6pMiu/34T/jD4/+7PP1lHO
YK/V0+Ycd911V6q6ci3tkHP4zzqy/dD879HWGZR52Hu+eeUceoaDfU+/z4nT
mZxD4/O46WlzDvHbCSnv9tl7xKoXWn67uLT9VuzYytWOs7WQc5RDmpxD49rY
7Unj1tai+xm2T5faXdj2dcoCko7l6iNq25JqfKxa6550Xae+rHYeN3Z8GrYf
dLV8wn8miz8esZ7j56YpZ6mGnAMAyqWenEP1aN3P0nltl112ieq+ruj8+sEH
H1QsQ1m9ne5n8+p7obbX6ifqP0e1GXMOXRfY5ap9qD6Tir1XmpRzqD6vNhFu
mq5X77zzzjAPUF3O3ptVncY+477enEP3LHXN4o+joesfW8/cfvvtOyzTSXqu
rOpnLvOIe3awXqfsQveg/P4Marui9hFaN1u3sJ9R7fC1fLWDRXZ5PFf28ssv
r5ju943wr8dVF9QzfvTMHz8jSZtzqE2IHYNWz2nyM0X1H9I1sX1mgK+MOYc7
3uhY5I9TMuOMM1Y8r0PPR7DT1aZObciUKWo8TDstr5xDfQTtcnUv2a2zPT8U
kXNou9K4Qm6a2r/4bYH69OlTcXy+4oorwkxY5zz/GJU259AYjO7vag+neS2d
F9T3QPcN7LM+feQc5ZAm5/DbDqmdQy2692RfozFHHbWxsNdsOr/a/qZqm2pf
q21R52ftt7avpvYnO5/acT7++OPhfO46y++3ovZX/jWYjk3qq6wxvi177eSf
iyx/jBD7WXQMtPdLNL57NeQcAFAu9eQc1YquRZ988skOy3j77bcr6rC6Ttd1
u66p/f4TrZBzqD6SNE6EHc+72nNltW7+eBf+M9BUdtttt4rX1ZtzaCwx93fd
r9HzWTWWh81bVNTGPUlSzmGpX63qkvrO4sbzUF1bdZ4bb7wxrDMkZRv6vs4/
//wOz4ZAdnnkHMqjbD8BFdvfSvfbVL9OOjaon7f77yzPlfX3E7U9UN1cdW59
Hvd31XmTlC3nqFX0fAZL1/saxy/Nb5NXzqE6uz1222LbMhSRc4i2AzvdP6bZ
TKLa96WSNudQGzj/d9QYI/rONb6BPaeozV8Sco5ySJNz7LrrrhXbi86vafjn
VR271XdQ51bbfkvXAZaO8/4ztuLWUVll0v6hY7bj54J6b7Wr0PWBHWfU33+1
v7tp1e692Gey2PE9RPeM7HsrM6qGnAMAyiWvnENtNPScs6Rndojq2fYeWVzR
ec8f66IZcw5R2+e48S3S5hyitv62faktuubV89L8Ph+dac8Rlym4ooxFbSqq
PVc2Tc5h6VpIz2qxY6NWe3/Np/mT+gGhPnnkHOKP6bbyyitXTFcdzx+3Re17
VO+u53krjtqExD1b2JZ2as+RVJQz6fgQR5mUbY/u9jn1iWvE81ZEz9+O69PW
DDmH2nTYjFffhW03p35xqo/5667zxEUXXVTxt7Q5h6i9X7XxoFWmmmqqqs+v
IucohzQ5hx0rQ+fvtLTv+fdNlF/o3oFtyxR37afnC8Xtt+r/Zul+Rdy9DNtn
UXmnP0a9X9TmQsd4R9eRdro/DrBlsxK1KbH8NojVxiAVcg4AKJc0OYfqqsrB
bdFzUDVGhcbB8vuo1KK2jeqnqWtkXe+qv6nOvUnPLtM1pXvfZ599tsN0vU5j
5rtiqW5v11tjellafzdN43Naajfsljls2LDYddO9FeVAWn+3HHsu1fPk3TI0
NmccrZPO8bp/qOem7rvvvuGzz/yxAp0XX3wxeq+4ZwXoOttN1/tbuq+r9dN1
jOpXuteieo7GkLTXJkmy5hyW2rErA7J1ExVdWygz8tvxID9pcg7laXZfsded
ju71qX+Znc9/lqDabimP1Lal/lzuGUfa/t1rtM9Y6rPl9hP9dxy1F1Gb7SFD
hgSDBg0K9t5773BMPbU/StpXnDLkHMpE/eOwin4P/VY6NiY9F8HRsVrjW+q3
0b7o+mpozFC3PP9Yp2Ok+23Uz8XSsdxN0/rFUbas45COae49HnnkkWi6+ja5
ZaivvaW+UO41ceMj2+/ELlOU69jvyc+43Xvbefy2iNrmdK5T/qvtTeun71jt
9+3r7FhB+o7t+ShpHCGNV6JMSsvV9qztWs9UV75R63ck5yiHNDmHtj+3nakN
ZBZ61p2ur9Qm9KSTTgqvV3QNYLfdpLq/tmO9n503rt+o+p2or5W9Jom7V6Lr
NB17tS8pk9TxR9u79nH/Xs7o0aMr3jfpGtM/Z2lMVkv/ttNrjR1OzgEA5ZIm
5wCczuQclu6b6hpHdWI0Xpqco8zKkHMADjlHOaR9riy6BjkHAJQLOQeyyCvn
QNci5yDnQHmQc5QDOUdzIecAgHIh50AW5BytiZyDnAPlQc5RDuQczYWcAwDK
hZwDWZBztCZyDnIOlAc5RzmQczQXcg4AKBdyDmRBztGayDnIOVAe5BzlQM7R
XMg5AKBcyDmQBTlHayLnIOdAeZBzlAM5R3Mh5wCAciHnQBbkHK2JnIOcA+VB
zlEO5BzNhZwDAMqFnANZkHO0pmbIOe65557gm2++KeS9yTla088//xzccsst
Ra9G0yHnKAdyjuZCzgEA5ULOgSzIOVpTM+QcOsZcfPHFhbw3OUdrUsYxcODA
olej6ZBzlAM5R3Mh5wCAcnE5xyqrrBLccccdFErV4rYXco7W4nKOGWaYoZDt
ZtiwYcGkk04a9OnTp5D3v/DCC1si57j22msL38ebqei81KNHj+Dqq68ufF2a
qfTv35+cowRszrHtttsWvl21e+nVqxc5BwCUiKu3UihZCjlHa3E5B6W5cw4K
JUsh52htNuegNE8h5wCAciDnoNRTyDlaCznHH4Wcg1KWQs7R2sg5mrOQcwBA
Odx5551hH2gKJUsZOXJk0ZsuMnjyyScL21bUF2OiiSaKriEXXXTRQrfdd955
p+ifo8Lrr79e+P7cjKVfv37RNtOtW7dwbJei16nZyl133VX05otO+PHHHwvf
hvIo1113XdC9e/dw/Kei1yWP8vDDDxe9aQAAAKDJXX755RX3ynQ9/NFHHxW9
Wmhi3333XTiei91uTj/99KJXC0CMLbbYItpPn3jiiaJXBwAAAGi49ddfv0O7
4NNOO63u5f36669he6Lhw4cH7777bn4riqbhZ2Mqyy+/fKeW+e233wZXXnll
TmsIQMaMGROMN9540X664IILFr1KAAAAQEN9/fXXwYQTTtihzqo+CVmNHTs2
WHXVVYPJJpssWs4JJ5zQgLVG0dZdd90O24z6rrz33nuZl6W2IfL++++H24//
dwD1s205XHn00UeLXi0AAACgYS644ILYcd5UZ83aFkM5x3777RfcdNNN4Zgf
5BzllJSNqQwdOjTTsj744INg7rnnDrdDZSTKOT777LNg++23DzbYYIMGfQKg
Pdi2HBNMMAFtOgAAANAWVl999cQx7bPWWa0HHniAnKOkkrKxep+DMHr06GD3
3XcPFltssWCmmWYKllhiiXBM03HjxjVg7YH2YdtyHHPMMcHSSy9Nmw4AAACU
2ueffx706NGjIc/uI+cor2rZmMobb7yReZn33Xdf+Jwf3XtWW45PPvmkAWsO
tI/vv/8+asuh5xtr/Bs9q8TtpwsttFDRqwgAAADk7qyzzqpaX623zirkHOWk
PiXVsjF33zgt5RlrrrlmsM4664RZh/qtXHPNNcECCywQHHfccQ38JEC5+W05
HNp0AAAAoMz69+9fM+c4+uij61o2OUc5nXnmmTW3md69e6de3i+//BLcfffd
4X/bcUg1Bun999/fiI8AlF5cWw6HNh0AAAAoq48//rjiWYNJZZFFFqlr+eQc
5bTiiivW3GZUXnrppczLVtuOXXbZpQFrDbSXpLYcDm06AAAAUEYnn3xyqvpq
vXVWco7ySZuNqRx++OFFry7Qlqq15XBo0wEAAIAy6tu3b+qc47DDDsu8fHKO
8jnppJNSbzPzzDNP0asLtKVabTkc2nQAAACgTDQOQrdu3RpaZyXnKJ9lllkm
9Taj8swzzxS9ykBbSdOWw6FNBwAAAMrk+OOPz1RfVXn66adTLXvzzTcPllxy
yWD++ecPXzfLLLOE/1b5+eefG/zJ0CjvvfdepmxM5YADDih6tYG2krYth0Ob
DgAAAJTF4osvnjnn2H///VMt+6KLLgrbcMSVsWPHNviToVHqycZmm2224Lff
fit61YG2kKUth0ObDgAAAJTBa6+9lrm+Sp0V9WRjKo899ljRqw60haxtORza
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
rbcG3333XcU07VuXXXZZ2A4jqR25n3PstNNOFcteeeWVK6YPGTIkmj527Niw
Ln3//fcH11xzTfg967M88MADVetNjco59Pnvu+++8DPrO9FvrXXM4qWXXgqP
eXfffXfV+dQn5LrrrgvnTXsMKzrnWHPNNTv9vll98sknwQ033BB+T2+88Uam
177++uvBlVdeGdx8880dpmkcNf2+bt+59957g++//77q8jT9scceC/t06DXa
Z5555plwP4yjbefZZ58N59P8et0jjzzSqb4Wn3/+eXD77bcHF198cXD11VeH
Y3nos2Sh/F7f57XXXhtuh3H8nEN9z+S3334LXnjhhWChhRaqmH7ppZdGr9X3
oe9e+4D2ay1L/6tj1Y8//pi4Xo3KOXTsUj9C/QZajxdffDH8HGlp3hEjRoSv
f+KJJ6rO++abb4bbnH6b999/P9XyyTlQD3IOFIWcA/hDnjmH6qrnnntucNRR
R0XL1PimGrvNp/rKAQccEOYT5513XofrK03XNa7uvesabtCgQWF+klS/qpVz
/PDDD+H1tOpxu+66a3D88cdXHXdV16dHHnlksNtuu4XvG1c/Vb1Ln1fvrc8S
9zmRTlfmHK4OqbLccssFG2+8cfTvWWaZpUPdWf3cp5566oo+Xvpv/c2V2267
LZpffdTVp2q66abrcG9Vr/v73/8ebte++eabL1qetk9lLt27d49eO+2004aZ
g7blrbbaKsxo3DT1O4mrL1bLOUR1Gzt9o402iqYpy0m6RzzJJJOE58+ff/45
mv/kk08O1139Qd18aktgvye1vdp9993D/7afTVmTnU99+x193r322it8T389
5pxzzuDGG2/s8LlVL7bLe+6554L11lsvet3CCy8czqdxSex8WpY+13jjjVfx
Pttuu23NTKUVco5XXnklrK+6z3vIIYdUTNexzE2bbbbZKtqBaN9w00499dTw
WGp/a5XNN9+8w7FcWYL9jpUlbLnlltFrZpxxxor5zz777Io6td3GjzvuuHD/
8h1zzDGx24eK2m7pmG8pG9TniZtf2+Xiiy9eMf/gwYODiSeeOCxu27GUR2jf
sdu0bU9xzjnndHiNcgb7vTz//PMd+tPpeOEyDCsp53CUa9jpWn+nd+/eifu1
1uOf//xnRc6QZn/VtrjOOusEU001VcXyJp100or5rC+++CI8jvnbkIr2pbjr
EX1ut6xpppkmGDVqVLDMMstEr1O7TlHeZd9X+YcyV/se2sdtrpuEnAP1IOdA
Ucg5gD/kmXOojqnlDBw4MFrmn//85/A609H1k+oMqqPp+mTVVVcNrx01n71f
resfXR/OO++84b0p3XfWdeyCCy4Ye++6Vs6h6VoPjeOh9Zt11lnDf991110d
5lX9UuuuftiqO+h8petuS/Uw1bF0DbX66qtH144nnHBCPV9d2+uqnEP3Me21
ruprum9v/3bPPfdUvOakk05KrBe44ura2r632WabmvP36tWrQ9YxwwwzRNNn
n3322NcpO7G5jF8PVN3ByjPniKvDqQ7kqA5a63PrXvf2229fcz7XNkDna9s+
RMXmO+7fun9uqe2MnUdjr9h/u7qqxue0f59nnnkS10ntgKopOufQZ1QO5hfd
H7dsezv9pmqfI7qnbr9bf1xe1VndtLnmmivxe/Lb8LjzQtJvYXOO/fbbr8Py
/N97xx13rFi+2gD4r/G3VZsBKbvx+6358+tcY1Ubn+PDDz9MzExs2X///Ste
p2w0zbanz69syMqacxx44IHRND/niNuvTznllGj+NPur2kn079+/5nyOjlPK
dav9zspI3bbp+G3x/G3J5RwPPfRQ6v1ax4pqyDlQD3IOFIWcA/hDI3KOySef
PFqm2nzb5/Dp+kzXVbfcckv0N93H0nWnrd8q59DrlU+4e0u6J6v7SLoW9tXK
OdTWwj77QfehdY2kfMVSPUzve/DBB0fvq/9VmxNL7QB0vaj6uaM2HbpHpPoH
sumqnEPX+/b6XvcDdf9ZGYH7+9Zbb13xGrVBUD5g6zLKuPQ3V3TPWnSf2F5D
676w2lmovqnl2mn+PWabc6gok/vXv/4VO2aqtj21GfEzD79uWi3n0Ha60kor
VUy39zeVW/znP/8J2z2pTYWoTqd6pq2LfPPNN+E01ZO1fHsvXvUL+z2pzq1M
Qv9t779rP7TzuX1V7VrcPDpGqM+KzuHqW6A2Hm6an/H4OYd7D32mf//73+Fr
xc853G+meuMee+xR0a5D+3w1ReccSWXdddft8NoNNtggmq7MQr+x/d122GGH
Dq+xOYeK2m5ou77++uvDur+dpvvpjp9zqCi7Vrs/tQFyuYXq8nYeHU/Vjk7H
atXb7W+h9jqO2ke5vys3d/mh8nD1W1H7BNvP4oILLojm12dW9inq96I+IzrW
+1lNtZzDzwN1LlI9W/mpX5dX/wrHzzlU1lhjjXD71PNS7N/VrtCq1m9F59Nq
/VZ03at+X+q34dpjKVdUfczNr2Odk3Z/1bFK9zDs++r4YudzbHaidmq636D+
NFqOPabp+GH7/dicw/7mOhbqHoPa9Yifc6joXonW0V1bJB3vfeQcqAc5B4pC
zgH8oRE5h607+X3b9SxLtW/16W+6H+ToWkT1UJsjiK7/dC/cV8/4HKpPKzex
dI2le+lJfbrl5ZdfDj+b315e12j6u39vGbV1Rc6h9u5qi+/mtdub6mzu76rP
xfWPSjM+h+4nunnU5tzvA67t301XHmi3M5tzaFt27Zu0LrbPjF7n6nJ6vdoU
JX13WcYhVbuqpPEq9d1pLAa1Y9Jxwr7O1jklz/E5bD1x33337bBOavPlptss
0s85lD3E7dN+zrHAAgtU9LuwmY7fv8LXSjmH8gPbJsNm08rQXK5l2ZxD9Wjb
t0H9Aux7Khdw/JxjkUUWiV2++ji6edTWz6e2RnF105133jn6u56hqwxd22oS
e85TPwtlANqu4/rDOEk5h7IUm7/45zb1E7LtJdT/0vFzDmVP9jtdaqmloml+
n6Qs45Cqnp7U31P7hHsOtLIP+zr/2JXX+Bzav3SscfP4fXqUm9rvTFma4+cc
6v8UN5aHn3OozaX9fe24RHoObzXkHKgHOQeKQs4B/KEROYe9X+LnHLqe1vFf
dUZbdP9IdVBHy4irV+h+s7IJ/9qmVs6hfvh77rlnWI/x+3Hbeo2uwePqBZbG
h9PrdH/X/xxqS5umzy8qdUXOoXYZ9nfXuBuOxiC00+KyqjQ5h7u2UYl7Tq22
Dfs+dv+wOYf6vljaF2x9yFpsscWiabvsskvFtLQ5x5RTTtlhfA/lecoplCXE
tW13RePoWHnlHH6dye/rr2LrmGp/4fg5h9ocxPFzDt37t3Sf3E3Tvl1tfMSi
cw7Vv9VeyS9+Gx9HzxtVexz/O1bdPI7NOWyO4dixGVZbbbXo737OoTZCcZRR
uHnUdsf/re14wZrXURufuO1S+4xyB9W1bZsA1enjxoTQuUnZ57HHHhu1UXKS
cg7Vwe0yNLaIzx4Tll122ejvfs7hj41rx5PwxwvJ8lxZ/5ioto36XnS+rPZa
2w5T8so51PbN/97939r2YVHfQsfPOdR2JY6fc/j7v9qWuGlqM1INOQfqQc6B
opBzAH9oRM6hulZcPU6UMahNhvpU+0Vt/h3lHLq+8B199NHhNao/hn21nEN1
E9UFNdaH7vXpPpXuwx166KHhOtpxQTT+x4Ybblj1c6pe565p4z6HxrtHNl2R
c/jtlbUtaRxZldNOO62iLq+20L40OYfaYLt54saFVL93uw6qazo251C/Kcve
e7f1eXH1axXd27b8nEPje6g/jIraluhzqM23ckBLzyWZbLLJUtWlVM+08so5
dE8+zfu7Yu/x+zlHUn3Izzn8zMaOZaFS7Z5/0TlHPc9b8fstufEN4ticQ31O
fHYbtX18/JxDY0zH8ft4VCs2a9DxXf0VlNUlza/PaTMqPSPG72tji7I92yYk
KedQNlht+xGb39gxTP2cw39ejW3fovOX5eccGm/K7ddqn7DpppuG56dvv/22
4nXaL+IynrjiP7skr5wjrk9JtWK3NT/niGsXFPcefmajex5xv2cccg7Ug5wD
RcmSc6i/r8apjis6r+pc4x8/W4nOq0mfzxbd30DnqF+7Pe/aexRF6uqcQ9d5
qm/W4sZh958lqGs/nT986m+v8dfjqC2+1kWf1V+W/m5zDo1RqqyjGvWx1uts
e1p0TqNzDv3GaevtKso8Pvjgg4plpMk51KfKzaO2QT5/nEU929WxOYffJsjW
yfz+G1lyDn8c0iS2L4DGvlB7Fzf+r58NNCrn0LnattdQ3URtcpKKshnHzzk0
TmIc/7P4933V5sdOL1POof4Ccdu+HcvBsjmH325Iz6Kx7eRsmzg/50h69qfa
Orh5Vllllaq/tT8up2gf1/auMT80/oOfY2h8J3+dR44cGfZ30ralfiK2HYGy
Tycp59A4JPY9NLaGpWzFtptQ3uL4OYc9Fohtc1Ar54h7JkscewxT/0yN8+me
o+tnA43KOdReyF/3ar+1He/KH4c0if9Z/JxTx1ByDjQSOQeKkiXn0Lhqaa6J
V1xxxQ7j3LcC/15VUom7t4ls/Gc66HqsGXR1zqE6rNok+9cd2i/t2ADu3rue
deGoLqw2rXE5iXIjXff496VF7ZS1LDuGvOqwrk+6zTkuvPDC2Gt99WF2dH2s
ayPtF1pvS21Fku4xIVmjcw5db6c51tmiMSstOx6ora9Y9h6sip5n4mg7s+OD
qK+WvcfcTDmH6szuNRob0XL7iCt+zrHWWmulqnurfZWbT+2x4tjxTFRHS8oZ
1C7G7vvkHNW5MZ3da9Uvwv23jotubE7L5hzaVm1bgSuvvLJiXfRMbidtzmEz
QNWp4569LDpP2DZzGhcp7pm/+pvdp3QOFtXrXd3eZ8cUVfbhJOUc6vNo8x3l
EfZZy/64xPY5vkXkHHaf88c2dc8ZS/qd0uyvamdp24soc/JpH7K/i3/McnRs
1LOv7DmWnAOtgpwDRcmSc9ix3msV/5zRCtI8L0xF456jc/Qd2vNz3LNRi9DV
OYcyAI0xp3HINIaY+o/rnq/a+9v2qcoy1D5DucZmm20WttfQMy70N+UWPl0T
69pYbYTVH0Fjr7vrcF0v6V6hrke1btpX1Xfb3Xe2OYeuwdZbb73wN9J1jV0/
S/VHXffr/r2eran10z1ItQOwmQjSaXTOod/GzaMxCVR/dX1WbLH3XjWWi6X+
InYf1th2OoaqPuL686v+aNsgqC2E6m/aJtWWyR5X1V/EaqacQ/uIe41ySbWB
V91B+5XfLsbPOWxbEO0Pqn+778nua/Y3UZ1b+53msWM/+M8MVYaiLEL30W+9
9dawraEbn8T+9u2Yc7jjUVzRPRtH99y1bbvXaSwN1c11XHZ/ixuL1H/eitq9
abtWHmAzE+1f9h582pxD9Xy7HO0v2rd1XtLYFbovo8xN25RtN6FtUsd+7Z+a
X20AtK0qa7HtM9z5TduOzgVbbLFF+PuqL6P+puew6Pzi5tf1n1PteSu2zqyi
diHaLvW92PE29d+2jVgROYfNL9WHTfuu2nSo3a7fn8X/ndLsr2Kfia2+RBrb
W/PZ3Nh/BrWemaM+QPod1HZMfUrdMU9j5jrkHGgV5BwoSpacQ30c7bHSjT+t
DF/XfXZatWfO6dpI9Vr1XfCfH1GLrkn0uiz3iDWv1jVpjG3HjuetMcTUByeu
ZF3nLJT/69mOfv+EtK/Vd2PHkfSn6zrWPk+0Fv1Wqqd+/vnnVa9pLc2rvrz2
Pk5n6Lxe7XPVovtY+txp1ifPnEP32XQ9Y+8L+TmH6HOpTbDaNqsvscbD0PPe
9Jkd5Rzqr60xy5RzqO6gZx0m1VdE93NVd9TzOrUeto2VchDVNzXOnO7Z6fmx
unbWfH6bDG03ul7WdY3Wz40n4lO/L13Lapm6BlRdTvP5Y4egtkbmHDq+2Oyh
2vWqrd+r2OdAqp+SrTfZov3N0bnBvl9c0Tbv34NuppxDn9s+48UWtWOy//Zz
jrhnurpi79HHPSNSxe9/ZjPiaqXdc45q5eqrr45ep3zZ1nVdLqtny9rnrvjP
PbY5h55XkbSN+2O5ps05RGM826wjqfg5R635dRx3v53f1ySuKO+0+3S1nEPn
M5sBxBVlP/Y3kCJyDj83rLZf+79T2v3VPu/ZFjsus459/jOxkwo5B1oROQeK
kiXnsH2t/fu5/vWRPwa+6HivY6ifk+ucp4xB5/Q4epa4zjm6F2hfp2sQXV/4
15WiOp3uPdu2hSrqIx737ADVxez1RFI7bJ/6EbhnS2j/tfmE2oLq3OWmq87g
ruV1vW2fS6F+sbqH4MYO0zWTxgBXncSnc5t7neoHqhPpOe3uXsnhhx8ezav3
0zWArjXtdZiuW/bff/+K+4mO7vurbq5xt/3fSnVtXRfarEfXS+rbrGfI+9dk
aieg+xz+NYK2D/cZ/OtA0bMNNI6evZ+kdVGbA3svztK9NLdMZQH6/nX+duPe
6/W6ZxX3mZ08cw7H9oeKyznScDkH2kMjcw71V7Jj+fvPA7a039p5dYyyVE/Q
sVljLtr5/P5Sqkspx7N1Qx2PNE6g+n3EPbdD27tbnr2XLGqn5KbpXqelY52b
5t9b1T5t11PnpLSU69hnuehYreOLPqtdZlwGqGdUqu6nNlh2XtuOTcdR/TZa
f/XhcfPE1Tt0DFS7A3t/XEXnSP1d94ftsvWsW/u+tn2B5X8W3du3dI/fTm+m
nEP3MnSsT1PcNq/jfbV9QfuSna66uGO3ZZ3DdJ2i58u6v6k+qDZRPmXVdpm1
xjTTuVDnXDumr4rOtfo+tE/a84rm17Wcvn8/m1PbAp33bR8bZW06dyqf9rcn
rZ+eMa3Mx1J/E/dd2me9OLqe0nlP7WBsFqprNl0T+WODiHJ2+734z3HVvuqm
6TrAUr9K+1o7lkgt2l/tmLHKV/V7PvPMM1V/p7T7q3IfHaPUPkjtbNx8fv9n
HQN1Lat7hP7vpvxN11F6P/s8aF3bueUljcclOv7az2LH7hGtn5sW93ta5Byo
BzkHipI251BbCDv+vuqSjo73Onfa43JcZmGfBRhXdD707x/pmWtJ9wxd8cc6
1/WorR/HFdtfVtS/1U6Pe05cHPXbteck3YcXnYvUptT9Xf3Q7XgL9nmK+ny6
vxK3nrpu8u+v22ed65zkjy/mntOhdhvu+jCp6Jxqz5vKaez90LiivMC2p1HG
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
Ra655ho8B1QaPEdjWvEceobRyjU05HP4OVGOOOKIOO/D+w/VGdXrP/nkkz7r
Uo6IxqIccsghqb8ffvjhfTzHdtttFzt0v36L6qDqfRdccEG/3yPQjuf4+9//
Hh111FF9QvU/NNbmlltuabp9g2G11VaLc10Uv/zlL1PLttxyy2TZT3/60wGt
f5111knWoXyYToLnAABoDzxHfuA5oB3wHOUDzwFVB8/RmFY8x1lnnRWNO+64
mfV77DwqwXNoDtiA5pidf/754zlQPFdddVX8+kcffbTPMtUxlRvZe++9k79p
PIzGynjP8be//S3+m7yJRTU59PkBzROjvr6fD1evy2q/tOM5NJanv3GBqoGq
2qidRLk0k046afIZO+ywQ2p52F8K1Wm1aP7g2WabLY4FFligT/0Uob/Jb4R1
bLHFFh3dfjwHAEB74DnyA88B7YDnKB94Dqg6eI7GtOI5lFux8sorx/O2brPN
NvG8KzvvvHM099xzx/8OyHPITWj+14033jjOxdC4ONX/VH/WI5eheWx1Pzjh
hBNin/LWW28ly9daa634M3/729/G81PNO++80WKLLdbHc4jNNtssHjOz3nrr
xTkfu+yyS1zv2dYEeeyxx+JxMHPOOWdcu1Tbt9FGG8We4J577umzfe14DtVx
bqUGkvaP5qDpFBrPY9d/5plnJss+/vjjeJ+EZdovFuVmhGVLLrlk5vo1l41d
v3dJgwXPAQDQHniO/MBzQDvgOcoHngOqDp6jMRozopqcN998c9PXKS/ilFNO
ia+lys9Ybrnloj333DPuZwfkOeQ0nn766WjdddeNcwRUA+jOO+9suF7Nta25
TjTvrLZD7w2on665Wn72s5/F947TTz89rrOh17322mup9Xz33XdxvVPV6tDn
qp6Iapj6sSLyFaNGjYrreai+qlyKvtdg8jk0d611AdqGDz/8MA59H+Wy2OUX
XXRR033dDvp+4bMU9vv+4x//SH2u/Y2Vp6G5hMMyzZ3Tyvptfkwz5LD0m/QH
ngMAoD3wHPmB54B2wHOUDzwHVB08Rz4Ez1EVWvUcqs1hfYL2g+WAAw5ILR8z
ZkxquVxRmANG8fLLL6eWayxKWHbGGWeklmkcTFimHBo79iTUeQ0Rclu23377
2O/YZXJDYT2aRzjwl7/8Jfn7hhtumMytI6699trUdsuDqBaJ5r7ROpWLo8+x
OToePAcAQHvgOfIDzwHtgOcoH3gOqDp4jnyoq+dQ3oh1BldccUWyTLke88wz
T7JMY3qU69DoczSuxc4/48ee6LUW5dWEZQsvvHBqmcbkhGUzzTRT/Dfl79j1
ZYXGGgVWXXXV5O8ap2RRjdOwbPLJJ4/nx8la3xprrNFw3+E5AADaA8+RH3gO
aAc8R/nAc0DVwXPkQ109h2qD2H69aoistNJKcf0L9f/D3yeeeOI+uRzi17/+
dSqvwuLHnujfAeVuqN5IWGZrpQh5ibBMeRXioYceiuuKKtciLJP3CPOpKFQP
JTDddNMlr1O+iEX3cbttWo/GAqnWq/275s0Jcw978BwAAO2B58gPPEe5UN6o
xkKH+Oqrr4repBR4jvKB54CqYz2HrgUHH3ww0YWQ59BcK0VvR6dCdTZa8Rxy
E83yI0Jf/+qrr858v2qxhtf5+Uzs2BN5BN3jA88//3zqM1S/JKA5ZDRHTiO/
p/lnG+WBBF5//fXU+m0uiXJS5LTCsvHHHz8exxLQeWbf6+e4CeA5AADaA8+R
H616DtUik+fvLzTPHAycG2+8MdW26K9GfN70iufQPIWqfWfj/vvvb/j6V155
JXr44YfjsHX5egE8B1Qd6zkIYiDR6F7q+/uauyXM1WpzIRR63d133516v7yF
HUdy8sknp5bbXA/NEWu57LLLUuu/7777kmV6zmGXXXfddan3/uhHP0qW+TyQ
gLyFXYfNJXnggQdSy3bbbbfUezXvTVimsTqNwHMAALQHniM/WvUcuue30pb4
4x//mOPWVw88R5qBeA7VWQt11GyceuqpDd9jn/spZ7eXwHNA1cFzEIONRvdS
uW37ur333ju1XPO82uUa42K57bbbUsv/+c9/ppbbXI/1118/tUy5M2GZr+uh
+V/tet98881kmeqc2mW+tmlg9OjRyWt8Lon/Xt7vzzXXXMky1fhoBJ4DAKA9
8Bz5MVDPMXTo0Mz405/+lN/GVxDlHCy77LJJvP3220VvUope8BynnXZaZjt3
u+22a/ieaaedNnmdarP1EngOqDqqY/Duu+8SRFuhsR79eQ7Nd2LvE5deemlq
+TPPPJNavtpqq6WWH3nkkSmXYNtRmpPWvveII45IvXfllVdOlmmuX4utGaL7
k0V1Uu16lZuRxZprrpm8xueSbLvttsky1fSw87zoO9gxM5pvphF4DgCA9sBz
5MdAPIeeO+SNnnMo1+HPf/5z/LyklXndA2rvXHnllfF7NebVo3aM2g3KRVGf
sT+3oHpcjz76aJxHeu6558br1japrnojNA5XYynOP//86JJLLomfAb3xxhst
fwfPZ599FuegXnDBBfE61b9VHfZ20H5Ru0Tv1/dphbJ7Dv0GNp/X5hMvueSS
me/RczLbZtRztP4YO3ZsfKyojaz/2mdtraA2pfKfNeefH0+j40vzHGqZXmPb
n1ngOQAA+tJKHdKdd945df3Xtd3i8yp23XXX1HLrI/SsJ6Dr9tprr5167803
35x67/Dhw5Nlvq7HvPPO29CtqI6KbY/5+V8CM844Y/I6zaViWWSRRZJlK664
YmrZHXfckdpu3WMagecAAGgPPEd+dMtzqB9u52JTfYRvvvkmWS43YO+j6msH
7LzwqrWlMaZTTTVV6vWqBSJ34NFzifCaww47LDrhhBOiCSaYIPnbE088kbxW
93Ktxz/313MMzeem+eQ8119/ffTjH/84M19AfWr1yy3PPvtsNGLEiMzXKzTu
9d///nfyerWDVEc9hOpGWFSXdJ999onHEPt1qU6a2mza95avv/469bqzzjor
OvDAA1NjkhVqkzVqLwXK7jn22muv1P7Yaqutkn9PNtlkKWegfanaa41+G4Xa
mha5LV+jPhwzG264YfT+++/32SbVw7PHyD333JNqYyr0XvkN1fIP178Qmnew
WT1aPAcA1AU989C9W/f2o446KvOaG2jFc4R7mkL3A+VzXH755fEzhJ122inV
ftByP77D1rEIHuS8885L1QkNofFXAd3b7TJb10PfUe2ssExew/J///d/qfce
csgh8TYrNG5TvPfee6nXaF8F1Caw87X4sTp+nl3VM20EngMAoD3wHPkxEM+h
Pp3yEXzofmdR/13PN8L7Qr1w5TFMPfXUyd+33nrr1Pus55hhhhlS7Qwbs846
a59ttp4jyy8Ep6D+qu/j2naFQnmkNkdC222/j8Jvm9Zp0Tr8Z/jPUb830Kw+
hzxRVtvJxxJLLJGqje49R7NaK/3N2Vhmz6F9Jbdh224XXXRR6vtpXHPAj8vO
ik033TR5vXJ3+3u993nCHs/yU762XQg5Ku+eQjTLMcFzAEAdUE6krpG6z4b5
WJWP2Yj+PIe8t503tlmo3aOaFp5G9wW93l7rZ5ppptT7VLPdvv6uu+5KlqlN
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
66H3hKp72yp6rt1uHprOg8GM0dNnqm+WhdYrT91K+3ig48K0/kaf3wpq4371
1Vd9/l5Wz6F9OcUUUySv1XUl1EdWn0aOyB4//vrZCO2HZseOvG67ddb1euvz
N95442S7NG6xlfe3cmzavqzaXx7lBuk4CdHqOaLPbievSL+N1t/Oe3Ts2u/4
6KOPpn6/rDGfoqyeQ88R7Pa3kzujY6ydc1nzADR7JuXbA8qDagUdd4OdU6Dd
9+vY0fdpFb22lZp0e+yxR6rtE45N7ef+tlF9+vBe9fWbEc6xZujz7P1N52o4
J3UMe3/b6NgfCPq+ja4B99xzT+pzr7nmmtR7p5lmmmSZ8syz6PY1Bs9RLlrx
HDrmbN9DLk39YuWD33vvvQ2vdTpP7D3eOjmhuTrs8WprmFrPoePWegzb71B9
xKy+s0Iew+I9h+/72NDzBYvyR2yNgkbhfX6VPIf2p/0ucsbbbrtt/Hy9UQ6N
GKjn0O9uPZhiIJ5jpplmavjZGn9o0Xdp9Fp/vPS65zjjjDNS30fjjMP/63lt
QOOCwt+VL+ixz7zlKizy5GGZ7pnqZwV8juYss8ySud/lu5ZffvnMZWoX+TmM
1lxzzWT5xBNPHEfWe3XPsH0mtV10fNnX6Lrj3+/zJNV2U+5mWO77x4p33323
z37Dc+RPq55Dntz+fuuuu25mTpevb6Nnaha5cY1pCaHzUfeW0F7RvVTnl89P
DOgzldukdqvavfacUD3orDaX8pbC5wUvp7oHwU2EHGDlLq6wwgrxttj2rO71
+tuOO+7Y57hV30N5K/Y7a3x0+DztD9uX0XVZeQHqv4c2hD5rwQUXjNseWf0e
+Ve7z3TPlHueddZZ4/f7sdqirJ5Dv7/dV1tuuWVquc57u1z3vIDuTXY/KJ9V
Y1tUz0Kv1XFj0bGlfurUU0+drE/33h122CGe9y0Lja3XdT+0bfQ8Stdw9cms
69XzHY+OTd0v9QzBH5vHHHNMn2NT9wJ9D9uW1PPi8P3UVhKXXHJJ6nvb67t8
sV2m/A+dHyGPXevWOIxG7Sz1N+XBdfyFZ8L6r8abNDtu1JfSs47QDl1ggQXi
30f5N/b30/Uli7J6DrVh7Pb7sVN6tmP3t65TOvYXWWSRZN+pv/vss8/2Wbfy
f3QNUfvAPkPRM0G9R79DQO1Ie99WyAGGz1UdpICOkyWWWKJPe1zHoH4XHXtZ
1xU9dw3r0+fpuNJzlRlmmCFpK+j63cjVaT/KQ6i9Gq6X+kxdj5TfbVHbSt7B
9n9Ce0XHkc6bLOxzV/nAJ554Ij73wufpGqjj3aN+ut3HWc95lcOgOgPhOqpQ
u0X7XfNmevxzvdD2Dqj/bpfreZJFfQJ77PjjXn2lsEy/jUXfsdE9xfZZFSEH
X98t9KFsezWsx86P4K8xth3orzG6B+r3stcYtY+b5bfhOcpFq/U51DbK6iso
dC7r/pp1ruyyyy7J62x/Vuj+G5apHpXFeg6F+kDyKsrd8M/QdJ068cQT4+um
zWfyfS7vOXRd0Dp1LVG/ebLJJktdi+31zs7fIL+y3377xd9X9Uj8WFP5xkCV
PIeuBZpPpdFxoHNQnuK9995Lve+QQw6J71P2tfr3PvvsE4fyYALWc4R9rWNP
v49eF67x7XgOhcYZ6hm7P45tTU3dK2wOp9p8Gneo40N9ItuXVfS651Atp/A6
5Ubodws5uDqPQtvYPrvdZJNNUutQjpbNsfB+0I7v9Oe/z9HUea3fQ23HcD23
x4GuF8ol88egz5e0+T8K3avUn9BYKbWP7DLbttU1xH7eoYceGh9X8h/W1yg0
piWg+7k/3hZddNH4eNVxqmM6CzxH/rTiOdT3s/cCnfdZnkroGZb93f3zaY13
sst9XlkIHbP++Zr6cGoTN7reKuTcfP6F+tL2mqw+nH1PqFdjr1GNQg4jtAH1
X9tHzQrrQdX38eN+fOg+7/sk6nuE5epHyDHZ92SdT2X1HMoNs9uu9pZFz4ns
cvXTAro3hr+rjaW2rX1tqNkpn6B+W7P9rL6NP4bVP2h0P5dDse0s1eCy6NhU
7b5mn6k2hT02m7Ud7O9m+yo6fi3qN9tjw+ac+PPMIy/R3zMX5Wh51NbLeq36
xfKE4d+6dzZ65ldWz3H44YenvpN/Nqj2dlim46FRP8DX0lBfwvq2rFAOpJB7
sm2IrFCfP9Dfsa5Qn9fz05/+NFkuz6V7dNZ7w3llUVvFujwf9rmQaGWsmn/u
63O/5IZ9mzNEqGMT0Hhuu1z9eIvaZT5H2YaOXXkNi/cJF110UbJM9yo796bO
K5+vorZzWK7f19Yr9WNPvAuwNWN8nVF7DIY8M7XTsp6F29BvHrD9S10bLbZf
2uwao3EGjcBzlItWPYeOS91jml2P1AbytTs0nt7eL3VfF2rb2Pwin39uj0N9
ps0X8NcnPf8J2GfPPnfLew7vJ+Wy7fLQj9U93X5vPw5bz6Xtcp0ngSp5DiEn
LCfV7Hqia16ooxFotT6H9xyNarO14zl839z2Hez9Se1V+z61byzq92YdH1n0
guew+yGMYwzHgUJOwee1Hnvssal1yPM1+13tswP/O+y+++6p91rfpbkt7DI7
RlvezC4bO3Zsskznql2mtpR9Du9/Yz1rFnI6Nm/D5+Lrvm7fp7odAdUKscu0
D1vJbcRz5E8rnsP/nsoZbIR/HupzDfz1TPdIOV4d337ss55DBpQLKS8Ylsm/
6txTroZcoH2frw+pvrK/Jmvcvdpl8inBw6sPo+1VX0ftZj3H0jHpXWCoLa57
sHL4bHtZ9z1b4z/ks+i6YZ2x2ovbbLNN/L21LXb9vs1ur0EhlMOg+7lyBfT7
eMrqOeyYP4V9BqJ7lv+utk1ix5mH0PMe/V3+SHWTxGabbZYsl6/WdVXHia6n
tnaEnjkF1B9X39T+jvJJ6uPZ/mAI3c8Cyg+yOWvy4LqO6jOth1Dob0LtR/V7
fV9RtQbDsROey1rHrW2yeLei7dZzf/939XlsHojaiPaz1YbUsa59aD2g+pXW
N3qPqftZqLvunV+zORvK6jn0DMB+B5/3Y5/vhZDL1H3V9wXsPC12vboeqb2m
a6XyHPT8Ub97eMZ0//33x79/qGGvUJ/BXld0TAfkEJSnpn2qPArlEegZhc39
1XFvn9Hr/+36FbqOyZ/465Gv6aD+vf2u2nb9/rp+6vjUZ+n/A2pv6PzU9U5O
WceYzgO1H6238LVQ1Ffy+1p5MzonvevV+i0+r8i2idQns8vUf7n88svj6649
17yr0vbb98m76NqjOccmn3zy1LVd11+P9e3+u3q/68f1Wh/p77/yFWFZaL/r
WVd/9yY91wuEnDiFnsVZfP9S69G+8dcYeZpG413wHOWiVc8R0LmoZ5tqH2Xl
g+tvfvy6fQ4RcmbtGAjlctl8dmE9h38ObM955XJYbBvQ+jvhPYefG8bnkIY+
ncbS2r9n1WG15411z1XzHELXce1L3XvUxsjyqP655kA8R1YtiEA7nsN7BuWv
hWVq0wX8OA7/Pl/Popc9hzyjPX9D7pPu6eFvcup+X/r6AzZ3Udd9+zuovWjb
B9ZjCJujqWPePte1+T96xmHvJ9bn+2doul/a7Q3t7IAfT618eKFts39Xe8Te
I33+qfZxwI730THra6c2As+RP614Dp0L/V3vA/Z8yWozqU1o20u2Pah+nb12
6p4XsPcxHeP+3mzHFNhnlzr/7HMy/b99tqdrdzjPGj179vW4fI61vTfLO2Rh
X6N2sPXe6g/Z9qj93sKPM5T/sa4ya7vL6jmUb2O/i/6tPqD6j9YDKdR/Uvs4
YJ+H69jR81GbH6H9oP6KXYd/XmRz9uxzUZu7prB5DGqLhfnzQtgazHad+m1t
n0romAjL/Thee39XX8nnIqn+tf1c20eQO7auQueOfoeAfcalCL5C+8k6RfVj
rQPx/ctwXw/z6oa/q79uayT4PA/7fMtTVs9hfyuddx5/jNo6udavKWxtd+sO
1L/3v7OuU76+m82NaVanptF1y+cfWO+iWlx2mfrRIf9cbQvrSHRtDeh8tG5C
fV2fr6x5TZTzG7DXWI/OB3v8W+Rs7DaqTW7X452ovVZYv6j1huults26Tj9v
iZ7X2HVaz2XrfTQKuSM/Zidg89z9fCb+t9KYvIDGg9hloY0mdN5av+ifRa6+
+urJMrnYLPT72fXbZ2i+rrCuMcrJC3jv12hOXTxHuWjXc1h0fVD7wo9Ht88s
hH3mq/uU8tRsbWA/plnYdpLG5lv0XDgsk3uz2PPd5oAK7zlsHojw7Tvlzwr1
lezf1bbwWMdo/UoVPYdH7Qn1Bez9QP9v720D8Rx69tiIdjyHH/suFx+WWYdt
2yIKP6+IxirY5b3sOfxYiz/84Q/x39XGDW1J9ZFUC9++zt/jbY6xP9/872D7
Az5H099/7TNp/0zP3n/9+e/HjPrnU37umPAs3I+T6y/sGD053/D3RvMKZoHn
yJ9WPIfNmVX4cccWO7ZAYeu2q61px7/43GZh+xEh/1DHrPUA6n/IvdiwuZDq
bwR0XbXbo+1rhPKM9UxPz+10DOu8UvhxmP5ZnfUQWfPx6T5q/WbWOBPbv1Je
WUDf3X62nEArlNVzNKsNZUMu1d4n1D+xy31dj0CokxCu12pL2ePE1jm1/Vjb
D82ae9HOlWrnbtDYF/tcPOvYtHUT/Hbba2VWDVJft9o+59UzW7vMjjkVtlab
tjng+3LKRbDb68fUBoftn4OH+iEB3y9tNldOGT2H7vU211ptQIufn93XKLVj
0tX3tM8i/LgNtSuV/6/8GN+GEDq+rFOyz9496gcrf0g5Hfotw3XLnms6F6wP
8b+lr3Fhr0f2Om2v77omtzrnkHK8lXeq9pHy48I22jwF74htTSj9Lt4fqm6+
/Q7WK9ncXDtPjc8nVDvHHvt23ixFmEPR9/flYLX9ut74OnVyAbfddltqW5W/
ZR2+aklZbK6Hb+erTWbXb2vo+fub9ZzC+iqfPxzwOcj2ebdtHyjU/rXYvqeO
10bgOcpFq57D1/qz6HmRPTZ8Hq2uYTYHV7lc9nxX3prHz7disfczmzsh2vEc
NhdT+Lqo4RmHz7EKue4BtRHsNdqOl6mS51DuX7Na/NYfKOyzj4F4jkbPCkU7
nsM/N7COzXoO326xz+yFH2vdy57Dn7P297D5UvZel3Vs2Dwm5clYbN6M+j22
Prl3irbP6cduKq8+4Ott+WdodtvV9vLHq712hJokwuYuh7lYmkV4zuJ9zV57
7dX0t7HgOfKnFc9h54NQ+HruAf32fl4em7eg+hR2mZ3DSOj5tD3OQ7vM54j0
F/aZlp0TS+HbygFdk3yN50Zh2/b+WZgfxyZ0f7evCWNVLTbv2fYrrK9Q+JzL
RpTRc/jcBB+6Juoep3uen8/erl/hx84L25ZuJUI9BH2W/bvNuQ/Yvoyeswf8
mK7+wq5b54v8Q1immo4eXwfJPuf1NcJ9u9E+a7Lb3KxWfVaEOcHUrw9/k/v3
9xL/XMSP1W302rJ4Dt8etnVBhW+7+vaOrQ3u55bW8dtojLvcr5+z0efUNMqh
U25XszoTIXy9dFtzQXmsdl55+V7bJ7e1aGy/xfc1stA1XTkbvoZgVqi9b7Hj
1GyecdZ30L4NefM+z8l6Zetv+gs71ss7RTvmTcgT2eV+LL+vYerrvtjaHr6u
+4EHHpj6njZnwudcBy8jdK2wy2weiMWeGwr7LMy2yRT+Wad9/pZVAyiA5ygX
rXoOuVLlN9jjSqiPb/uNWceGsO0v28bJmr9B5OE59Nyu0TxqijDvpPr3dr4r
bbPtV/vnBSEPRFTJc9x5553x/Uz3KD+nlpyGvXap72fx82E3cgRFeg61B+z9
TjmKwdXov74mYC97DvvsQD7AekzvQBrdj+QcbFtGdbsDag/bZapB12gbFbaf
7+cNs8/Tfb0t/wzN1y+1czhpvTbn0fp+mxOq1zSqO6l12OPJ+xpbt6M/8Bz5
04rn8Pnv/llUwPdFQz8y4H2Ff+blx8GFmvM+J0nt21CzOSvs/Mj22iYHmYXG
Vdl7sGoOqH+pY1e5itbz2Pk/hB8XlnVts3MjKmxfVSjHu9H90rZB/Ti4ZpTR
c+j3tt9T7XeN/1CobZ01P25AY/LD++z8khZ/ndRx2+w4CXmouic0u4bq+mb7
adbd+tpIam81+0zb9/dzz9i6hgE7R7l/zmtz/tVXtTn9Pp/dbrOd81u5Js22
VxHGUNv7va8vIKwHkTNvNjdlGT2HrROp8PkqNn9Ax4N9biXno2f8YXnW/J06
zjSOIKt+p85tu12+zZHljPz1VvlA6lfouNYzKjsO1+a4CVtzwddQ8n3ykCOg
72hzl9Q/6A/fh1b/X+eXttHnlGg8j92f9lmpdyDC1s2xY/l9DkKod6R12nNC
/aFmx72thefrZ/uxiz7fzHpF4cfF2Rwefx3QcWaxY098H8DWoLV5ZsK3+xu1
fW3tGH+PtPnL6vPZ/qEfE9osVxLPUS5a9RzWoWpfyz1qX9vnueHelHVPlj/1
Yz4VjZxbHp5DofHTeuaguZvs35WfZZHjtcvVp1dNNeXb22uJ2o92XGDVPEf4
HvIB2r9qW8lr+voF/j6j39/2e9Xe0PVM1xw7NrhIzyG861KNNR1/ds6REL3s
Oezx7veBfqusOt+qqWdRO9Pme4Tzyda3C+Hzz20+qPcs/nmwfdbp2wqqtxHI
en6q65P6DPrN7bbqHmnPRV/HSz5Px5jqkag9ru0Nz0bs+3z7LGt+vUbgOfKn
Fc/h5yBQ7UdfP0p9dVs/QddDn7fg+/u+/23nUdQ5EHyAf6adle8YsM8lhR3H
4OteBPxzaDu2XM827X1azwIsftu87xa2j67wc47bOZj0vdVmzlrm79/NKKPn
0LNnux/8HObNsOPAlfeehY4Lu347ZspjjxP/Pp+fan2CwtZ38edG1jOtrM8U
vp+ada20dTSsNxc25847Rf+dbC6mHUOhPOJGOanq09h2hK23rjaZfZ/Gwtp2
n28vesroOfy8JT6nyF6ffK0Dn3+RNU9NQPd2tUP8XC3W+9r2tR8DE7BjLNQH
sZ5LbSy7bvWzA+qP2Hu/rWkq5Jfte8P1KMsTZM0tbn2lnV/Kj7fX/cZ+jm0/
em/gr7s+z832nX0Ogp0LzvbbdE1phL6D3Z++Rryf087nVajfZbHHltxA2G/a
p9ZlKnwNtTDPr8KPlbL3N59P4Z8PWC9nsfM++XukdaJ+DlD/XKJRXRKB5ygX
A/EcjULXhGZ9P3/uyJU2mtc9D8+R1R9TKK/O9p+Errt+Xjcf6hv6719Vz9Es
5LqyxjH6+dFD2DG8RXsO9ZX9+HSFnmf49ruvEW0pu+ewdQGynsX4OuwKPxZS
ZNVjD/cP67V8G7xZjqbmOgnL/BhIm7vpn6HZ2saKrPkKFHKROpYtGo/aaM5P
G+rbWmxejM7/rHZQI/Ac+dOK55CntnU1FHp+Fua11j3G1+DOyvmwed3hOFdb
SbVdfC172/b2eQB6VmZrzukeono6apPZOVr8mC6bJ2Hxzj7UWdNn+LqZcvkW
P95b61J7T88rg6v0c9Do/q37qcL3dfz67fxMqpvQKmX0HHYst66Fft7gZliv
7vsQATkp+6xc9277HFyfpzHEalfY9ryfO0q5ujrm5KM0BsqPN7Bjn7KusfbY
1L1Wx6baZb7utL1/+melQvnp9rPtOAq91ubU+vqmvt9lXYJvd2o7Qt9UfWCd
j3L46kPYPqI/R7Vv5GaUX+jnSlK/rhll9By2BkuYn9Nixy75Wgd+jK+tdRfy
z7RfQ7tMv5+du0a/s/Wb/rqg3z5cV0L/27bX1S4IXkauzc9fbe/v2g67zOcR
2faGzxGw+yjsBzk1nStq48lHWH9p7wuq+6uxJVqfrk82/0Vh89y8A1R7U890
dO7pnmPds/oHdq4Hn+dknzNbVxdqUofvp99G7UNdX/Q8yJ6PtiastiXk+inP
Q3Vx7H1Gjt/mFAo/VkyfoTa7r32lsH7Nz5dn76v+/ubHCHs/q/M1HEOhneiv
McpPC+g4s8/3/FgdPybU1/2z4DnKRaueQ8981KZS202+zebvKLdVz8Ftbb4s
dF2z4wJ8bXqL6hDp2qXw7R3NbxCW+XFhul+FZd5f6lwMyxRq8yp3LIxT1vms
XLhG30PXAZ2ruodbz6s2ifqKWWOh1X5QOyJEs7kYyu45dP1Un133MHlVW29M
1w7d+zUvXladKaFrs96r5yt6bfgd7PVKv0f4u8+Fs+j6Zferdeqqs2J/Z3+f
V9s6LMu6XsgD6zjSd9T4e+0b3Te958kadx4os+eQy7H7x9foF3Ls9jUKP2ZN
yGepHxOuB9pfuj/L/9v3+n2gMUFZv79Qnk9Y5n2+rhmNfjvlZNjP1D1Tfb0w
JlzPdPQswdbvssh16Nmm/KjN25YX0bGg+54fZ6r2Wfi8rFzTZuA58qcVzyFU
k8PPG5kVOu6zalT4vG5bj8qHcqBsPpPe6+v4KbQ+71fs/Ed+TgGfhx7Iqv8R
ttXPr+BrWJ155pmZ38H2W/VfO89Mo1CbwbbJ/fxM9plsf5TRc1hf7ueBbIav
n9Fsvh8/b61CbXWfX6m+vcXXH7Rha2jYuRuEjs2seeWzjk2/X+xzIlsrMeDn
/LbHr6+b7fPo7fNjv83ygr6PqXao+o52XIIfC+Pn2Wu0jxQ6L5pRNs/hcxx8
/oDGbdrv5/OubT6m9qXN3VH+mz82fH6o9yYaM5G1n9W2Dvj5XXTtDe7LXrd0
77YewD8T83lEtuaCra0n5Akb1RnJ+iw/tln9ch1Xep29B/h5Iu3cPdqf/ngN
od/M1+qxOQj+ua/q+vpaIdomHfv277peW7Jy7xt9f/UhPX78TgjtS1sXyo+L
lEO0r292f7N5ZsKPwwqha2FwO74Gox0T7ecZ8LVqrfe068wCz1EuBjrfiu4j
apf4fN7+3mNzkrLmXC4KXaua1Vr1hO+vZyqdouyeIwt5Uu2HZmONewndr32+
bcDmCql95OdPtpTZc3QDHQedPBc6jY7RZvclj47nbh/XeI78adVzCHlM/zzP
nv9qa2h9Wfi8bj1vtnV5QxtRzxKz8mt17MnxNapnp7az8o8++OCD5D1+TJfP
Qw+oL2fnSQrtT+XV+XHVdj5RofNcuV6+7e/nGdL2Z70u9F3UL/TP830ei8+5
akbZPIcfy+2fxzTDz+/mn5VatA81vj1rnGHoM2mehFBbM6DnLT6fVbkhOk5t
HYAsH6FjTr9ts2NT/UU/psm2/bLm4JFjtuuxz4R8/VM71krYfPaseVyU52Ln
nvGhfrJ/fiuUh2h/x7B+f540qqseKJvn8DVybO1N4evw+HNRzzbCMps3rbaT
d0D+2NBzDT8uRe/LypfWuOiArmd2zEFYn/ow9nrma6k0q7ng67pk1VzQsZfl
qXVu+ecwuo/71+rfmufNek89y7FY76gx8dr/Nn9JoWeD/tmaz3Oyc4wHdK2y
554PrdfeC+UFG702hK43ugY0arcob8LWcA37Qe1iO/7Mz0Hm6//YZ6b+/uaf
K6utpjr0/p5j67HomYRdZnPRfE0Sm9sl7HWx2TNYgecoF4OZV7ZV1BbU+fnb
3/42+Syd8+30O+pAL3qOqqE8BLlsja1XzoiOW92j9OzRXj+zxnpY6uY5oH3w
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
Vlml6E2BAphnnnni33+FFVYoelOgTSaYYIL4t9t2222L3hQYAEcffTSeowPg
OQC6A54DugmeA7LAc0AnwXPUGzxH74Ln6G3wHJ0BzwHQHfAc0E2s51hsscW4
lkIMngM6CZ6j3uA5ehc8R2+D5+gMeA6A7oDngG5iPYdC88cB4Dmgk+A56g2e
o3fBc/Q2eI7OgOcA6A54Dugmt99+e2ruYjwHCDwHdBI8R73Bc/QueI7eBs/R
GfAcAN0BzwHd5vTTT8dzQAo8B3QSPEe9wXP0LniO3gbP0RnK7jkuvvjiaLvt
tsuM0aNHx/3HN998M5ftzuKjjz6Kt2PuueeOJppoouR7bbjhhvFybWf42+ST
Tx59//33Hfnc//73v9EZZ5wRzzs0wwwzREOGDInGGWecaKaZZoo22WST6P77
7+/I58DAwXNAt8FzgAfPAZ0Ez1Fv8By9C56jt8FzdIaye46VV145NQY9K3Qu
H3PMMblsu+XLL7+MFlpoocxt0vEpFl544eRvyyyzTEc+969//Ws0/fTTN90n
ch777bdfRz6vV9Ac4WFe8S222KLozcFzQNfBc4AHzwGdBM9Rb/AcvQueo7fB
c3SGsnuOH/3oR/16jhDXXHNNLtsfuPDCC1Ofv/fee0eXX355HK+//nrsQbT9
oe+95557Dvoz//CHP8QOw37uj3/842jxxRePP8PvkxNOOKED37T8fPrpp9G4
446bfO9DDjmk6E3Cc0DXwXOAB88BnQTPUW/wHL0LnqO3wXN0hjJ7jjfeeCPV
Z19ttdWihx9+OI4bb7wxmm+++VLL11133X4/+7PPPouefvrp6IMPPshc/skn
n0TPPPNMNHbs2Ojrr79uuq611lor+eyf/OQn/X72YBkzZkzKcUw66aTRJZdc
koyF+eabb6KddtoptU8mm2yyeIxLK2ifqK+ksTit8L///S966623oieffHLA
Y4fee++9+Pf4/PPPU3+XI9Lv/9xzz7W0TXfddVfqe1933XX9fvZXX30VH3/a
fm3HQPj444/j7c/ax3gO6DZ4DvDgOaCT4DnqDZ6jd8Fz9DZ4js5QZs9x/fXX
Z44FCVxxxRWp5UsttVSy7JxzzolWWmmlOFZfffXonXfeiTbeeOPkvN99992T
13777bdxf2GRRRZJeYShQ4dGW265ZfSf//wn9bknnXRSvN5JJpkkea3yNsLn
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
VKbMRO3/797/63l/az9nv+85X+e8553u+7rWxffs6dnP3u/ez/rstdZDnght
IQ4nxX7EfeT5PJE33nijeOyxxxrrUiukWZti37W6vzhe2t+ExHKAOoe0G3UO
EWkn6hyDjTpH76LO0duoc4wN3ahzSHuIdSzWWmutTjen71HnkHajziEi7USd
Y7BR5+hd1Dl6G3WOsUGdYzAg3iLmm1DrQ9qLOoe0G3UOEWkn6hyDjTpH76LO
0duoc4wN6hyDAXOLxJoUzWpwyNihziHtRp1DRNqJOsdgo87Ru6hz9DbqHGOD
OsdgQM1R5n1Jxvy70l7UOaTdqHOISDtR5xhs1Dl6F3WO3kadY2xQ5xBpD+oc
0m7UOUSknahzDDbqHL2LOkdvo84xNqhziLQHdQ5pN+ocItJO1DkGG3WO3kWd
o7dR5xgb1DlE2oM6h7QbdQ4RaSfqHIONOkfvos7R26hzjA3qHCLtQZ1D2o06
h4i0E3WOwUado3dR5+ht1DnGBnUOkfagziHtRp1DRNqJOsdgo87Ru6hz9Dbq
HGNDp3WOHXbYodh99901re9ss802U+eQtqLOISLtRJ1jsFHn6F3UOXobdY6x
odM6h6YNgqlzSDtQ5xCRdqLOMdioc/Qu6hy9jTrH2KDOoWntN3UOaQfqHCLS
TtQ5Bht1jt5FnaO3UecYGzqhc7z99tvFa6+9pmkDY++88864/LZksFDnEJF2
os4x2Khz9C7qHL2NOsfY0AmdQ0RERo86h4i0E3WOwUado3dR5+ht1DnGBnUO
EZHeRJ1DRNqJOsdgo87Ru6hz9DbqHGODOoeISG+iziEi7USdY7BR5+hd1Dl6
G3WOsUGdQ0SkN1HnEJF2os4x2Khz9C7qHL2NOsfYoM4hItKbqHOISDtR5xhs
1Dl6F3WO3kadY2xQ5xAR6U3UOUSknahzDDbqHL2LOkdvo84xNqhziIj0Juoc
It3LmWeeWZx00kk9bdNNN135fFlggQU63pbR2qWXXtqW63zdddd1/NzaZTPN
NFN5/eedd96Ot6Vddvvtt7flvjj33HM7el6TTDJJee0++9nPdrQdd911V1v6
9+yzz+74vdNOW2+99Rrju8MOO6zj7Wmn3XrrrW25R0CdQ0SkN1HnEOlepp9+
+sbvU+u8LbXUUm25zptttlnHz0179/btb3+7LffFxz/+8Y6fWzfYfvvt15b+
nXnmmTt+btrY2Ne//vW23COgziEi0puoc4h0L+oc3WXqHFqdqXO019Q5tOGs
33SOm2++ufjBD36gadr/Gr8HkXeDOodI95J0jhVXXLGMjdc6Y3PNNVd5Hdqt
c0wxxRQdP1dtZEauUXp3tlvn4L7r9PmOt1111VXjpnMst9xyHT9fbcLtpptu
6ludA9+u09qRpnWLHXzwwePyu5P+Q51DpHtJOse6667b6aYMNAsuuGB5Hdqt
c0w11VRt2b+MPS+//HLj3dluneMLX/hCW/bfzfzzn/9s9G+7dY4vfvGLbdm/
tJc333yzcY+oc2ha/5o6h7xb1DlEuhd1ju5AnUNy1DnaizqHDMeg6By33HJL
8de//lXTBsqoLazOIaNFnUOke1Hn6A7UOSRHnaO9qHPIcAyKzoHPJzJoPPnk
k+ocMmrUOUS6F3WO7kCdQ3LUOdqLOocMhzqHSP+iziFjgTqHSPeiztEdqHNI
jjpHe1HnkOFQ5xDpXwZJ5+BdNPnkk2ttsIknnrhxH0022WQdb0+/GnqSyISi
ztEdqHNIjjpHe1HnkOFQ5xDpXwZJ5/jABz7Q8VqvmjYacxwl7wZ1ju5AnUNy
1DnaizqHDIc6h0j/Mog6x+yzz15sueWWmtYzNsUUUziOknfNSHSOZ599trjg
ggsadtddd41jCweDbtE5zj///OKcc86p2Lnnnltce+21xf3331+88cYbbWnf
SDj22GOL5ZdfvrSNN964Y+0YLfvuu2/jPPBvmtEtOscLL7ww5J7ALrzwwuKG
G24oHnvsseKdd95pS/veDfvvv3+jf3fbbbem63WrznH33XeXY27u8VVWWaWM
1dx9992L8847r3jrrbfa0s5uYO21125ct1NOOaXTzSlR5xDpXwZR5/jyl7/c
6aaITBB+L5LRMBKd4/e//30ldmj77bcfs+PvsMMOxXrrrVfaL3/5yzHbb6/R
LTrH+973vpZxY+TIoa/i+44Vjz76aOMewB566KHa9fBZUzv4JtGr8KxO5/G5
z32u6XrdonPcdtttw8YTTjfddMX3v//94j//+U9b2jkh8CxL7Vp22WWbrtdt
OscTTzxR+rit+nnaaact5wDtRzi3dJ7f/e53O92cEnUOkf5FnUOk+1HnkNHQ
aZ3jIx/5SGO/e+2115jtt9foFZ0j+o///e9/x6Rtt99+e2XfN910U+166hxj
z1jpHMn23nvvtrRzQuhFneO+++4rtaKR9HG/1nNX5+henePGG28sjj/++CF2
8sknF5dcckkZg9RK4yQ+Z9FFF23Yiy++ONan05Xcc889ZXzZWmutVXzmM58p
z32NNdYo+/6ZZ57pdPMGHnUOke5HnUNGgzpHd9CNOscHP/jBcjzGd/qNNtqo
mGiiiSr3AWPbsWCkOgdxH9dcc01pvfxNu9d1joUXXri8L9AGPvvZz1aWcc90
Ooel13QOfOk555yz0o+LLLJIqWfQRnxC/KXDDz+8mGOOOdQ5xhF1jv/Pmmuu
Oaz+xru82b25/vrrN9abccYZ23E6XQW5fOgZrfqL2MgTTjih000dV77xjW8U
K664Ymk777xzp5ujziHSA6hzyGgYC52DbzWMmbBLL720rOHAO2OxxRYrv7vj
C5155pmVbX7729+W608zzTSN/ZKXnfaDPffcc5VtnnrqqeI73/lOub9PfOIT
pW9A/vpxxx1XjkfrIObgtNNOK/0d2rL44osXRxxxRPH2228Xp556auNYfJOq
Ax+P3Bq+w7D9fPPNV2y44YbFb37zm9r18cHTPo855pjyb6effnqx3HLLldsf
eOCBtdt1o84x22yzVZZx3vE+oJZH5KWXXiq+9rWvFauttlqjv7B55523vL/O
OOOMIT7wUUcdVY534n6/8pWvNPowjgOvuuqq4qCDDirtpz/9aW37qR2z0047
Ne69ueeeu/ThOc6rr746ZP1HHnmkcs/961//Km699dYyf4ZtMa7/008/PWTb
O++8s9huu+2KFVZYofjUpz7VOF981G222aa4/vrra9vY6zrHJpts0ljG7+hj
H/tYZTm+eR1/+MMfyn5BJ6GfPvnJT5b7uvrqq2vXR0fjWZP3L9tvvfXWxXXX
XVe7Xa/pHEcffXSl/5ZYYoni9ddfr1333//+d/H8888P+ftf/vKX8h5Zeuml
yz5CD+F5esABBxT/+Mc/hqzPfR7vezRE9MXVV1+9fLayH36vCZ7r+Cbs+3/+
53/KZ1tdPBc1W9I+eeZTT+TQQw8tt2Fb7vezzz679tyG0zm418htXGeddcrn
MPvjOcMz5+GHH66sy3PmRz/6UaMtv/jFLyrL6V/alZZfdNFFtW1S5/j/fPSj
Hx1RrBHvD3zHnPiM4J3dz/AO+vCHPzykb9773vfW9tlJJ53U6SaPGzFmjWd4
p1HnEOl+1DlkNIyFzvHpT3+6sYz7kLFn3fs8+f2AfzjcmIm6lwnqn+KjN1sX
37IuDhSfuW59xlr4S+nfm2+++ZBt99hjj+I973lP02OyTe6377nnnpXvW/ge
uQ9fRy/oHPRHPBdqk0aoLzDcNWUMH2sp8m2v1froDInh8lao79nqerHNvffe
W9kGfSuug381ySST1G6LjhM58cQTW7adthALk9NPOgcsueSSjWX0Hb54hHj2
Zr/DZF/96leH+M3op8P1b50+0Ws6B22M5zWhsUrota3yzT70oQ8VV155ZWUb
vjfHddAG6/ywH/7wh6UuXPe74veWE/ueOH303bo2fetb3xqybSudg2vF/pqd
I+ef13dCC433StSmo7Y65ZRTlnlDdahzFKWuFvuaZxa6GBoxYwM0p7i8Tsdi
/WTNdNB+gG8x8T7Gtt122+Lxxx8vl/Nf6u3G5fifg5DHEzUF7Cc/+Umnm6TO
IdIDqHPIaBhrnSMZY+Zcl+D9n3ygCdE5+G4+2WSTNf7OuIo6AMxBMMMMMzT1
aZifIO6PfTBGQxPJj5XrHD/+8Y8ry1deeeXie9/7XvkNYtJJJ238ndzbSNQ5
6IPkH+BrEKe644471vZxt+scjIPnmmuuxjL0ifybMzrHxBNPXPo2+K30F77Q
SiutVOlLvl8nxkrnIFc8bjf11FOX/kLq12R8V4xxHbnOkYz8i9y3w+eLoHO8
//3vL770pS+V35QZJ3FPEr+StiHXJ+p10E86BzEa8Z4hHiCH+yD6m8Rz8zfu
yagp8f09gs7B/YpfkPoXrS36Vewv1656TeeI/TehMf3Ej/Gbi884fn9oAjHP
jH7EL03kOkcynlPx37QtXaN8Gc8z4kIise+TEctBbEl8bnLdiM+KtNI5ol7C
cYkL4h4i1if9nf3zrogwZ01azrXAZ7/88ssrv23i/ZqhzlEUv/vd7yrXM6/B
E995WH5dH3jggVLXShbrTKMLxGVcPzQn8iR5t3PP8e7Nf+PAXE/E9vCMn2mm
mUo/jvs1xQ39/Oc/bxpzlI6HDk38KXFPPLeZv5A4H57taR2+seTwTSW2+1e/
+lX5d55/sS94H+RwvFlmmaWyXh5vRD2UuH+eVeiNPPvQ5ThHYlubzb9E7BPP
T2Ir+d7Cb4b+JP+IZ0YdxJ2m4/Es5v3De4fYMPolzYFE3Bf9vtBCC1X6nXcJ
v0f6LtZqYZzAPvGv4znzrEjHi2MC4B3N+5a4Mp6JtJ/zIKa0mQ5MzFnaH+MO
+uaQQw4p5p9//rL9dc94dQ6R7kedQ0ZDO3QOvt0yPiTWIf+O++CDD5bbvPba
a+WcHen+xfBj+VuyFCsRv39wrJijwng9aiAxBp53ZPo7Y/Wbb765sYzxTWxX
1DnQYmLcKT5WhHFx9B84l0Q+5ptnnnmKP/3pT+Uyzid918npRp0DPwl/P+YW
Ybwv63INGL/V5XdA9H+ib4+flN9fV1xxReMeiDEUzXQOxlTxPmJcFPsZLSru
Hw0rkescjAXTOAp9gvNPyxh7R/7+979Xrn2CcR3jv7Qd/kSk13UO/En6hfF2
/Dt+AlpXfg5R78z9V/KJ0jJimhmfJ+jfulyj3E/IY2Z6SeeI1xgjr25CQD9I
26KrknOVYD7oZs/tXOfAn0zzheNfxGVcv1Qz52c/+1llGf5YJNc5onZF/FfU
F9C7Is10DmJR4j7zOLL4e8rfYzw/8NPiMeNvE72kFeocQ+8Hvh8keP6RUxZ/
w/lv9sgjj6xsH58RxODEZfRxfJ8nQ3PPdfU8vrDO8nc38MxNy8kRI8cxboMO
gj7R6hmCjh+fh2g5/H7ifvgu0EyH2GqrrSrr5trRLrvs0lhGfzSr9UF+ZQ45
XPj2zfqE3yDfBXLiNtyDfGOI26ErQR6jWme0P8H7dLj1GZ8keKbkOlA0dF2e
QzmxhgwazDLLLFPZLubhJdQ5pJMw/r3jjjtKjY5cfvTckdT35x14zjnnlMZ4
eULg+Z22Te/8bkedQ0bDWOscaO7x3c5vOG6b/yaHq0OKDxv9KdqZ13yP78Q0
XqANMQ6bd2CE8Svf4tPyqHPwno1t3meffSrHox5gXB59/lznaPbtJKcbdY46
m3XWWZvGeAP9evHFF5ffxNAliNvBYi5Tng8z2vlWqOMQt8/j6fGL47XmG1ci
1zlibhVEH4r8jJxnn322/A7Gt2Vi4dP5xjgV4pab7bMXdY46Y0xJe3N4d8f1
qE8Tf0t8R43LeV5EqNHD+DTv3+irMs9xpJd0DnzCeP74XCMFHzPGw9T5PNEH
5Voncp0j3l/oe3FZzLVDe4zL8rpLse/RLaJuBTEug5irSDOdI2oArJM//2PM
BmP5HGq48j04v2fx6+p0yog6R1FsuummlX6jTgv3Gvd01Jd536IR5KR3D8b3
g0g872Q8q2NMXLJcUyNOkGcymgR6GrWceP/GuCM0iFdeeaWxDT5E1K5TzBPt
4n7g/Udf8A6L7YnxCeg0UYtBb4H4fsIYJzSDMUVcN4/7iN9oMNrFb4t4hlwH
4vkc2xafjbyv0YF5r0U9h99DrNuTP0tSv/AeI4aE4yf9iviavN8Zu8VvQ9wL
6RtFro3WGVoY8PyP4z3GKxtssEF53nFsQh/k34ziWDK1n3shxXPkcZWgzjEU
Yt5SLazc0O7Q1nkXtxoHTiiM+dCzsVa+N7Flab30zbQXIf6LsV9djjTPVLTl
VvXcqaGV1ie2aqTwm4nHit/8xpM//vGPjetITPBwqHPIaGhHfY4I3xbitim+
MzGczpHnBg9nW2yxRbkdcaXx79T5zonfL6LOgc45IcfEz01EnYMxVqu59iLd
qHPwDObdhj8Sz5dxVF1cCmOUkdSrw1eJjFbnQAuP2+cxwLDAAgs0luP7JXKd
I497j2N8rlGE+FzGT8Odbx4H0us6B/cQ2+WaGFpH/v1yJGPcaHG+BuaszGNG
6oy5HCK9pHNAjHfBVxjpfM25VoHvlBPnucD3SPvOt416BTFZcVmsBcz1jcvI
DYjEvq+LTcnzFaMP2kznyOsfD2d12kUeU8Czuc7vyemEzoFfSW3tdluMk2yl
c8RnZzPDb0YbqIN6w2m9XMOJeUcYcQ4pXjOPG8j3X1ePF/JnTqxRm9/3eV2X
VCeD76wxH4x4jQS5q+nv6ADJn8/rkuWabYQ4k7gu3wUSjBniM4H/j++lGE+K
HXbYYY1lsdYPGgcxcYn8dx1/87xz4zJ8Yt6rCfTN4fqdeqpxH7HPgPY0eycC
fl3Ut3h2cr0SeXwaeTwJzjMu41kX67tyPevGYuocQ+G73UieszxDY2zXu4V3
UowZplZUHehyza5/r4BWOJK5qzDGZHXxYNzLMS6SuvwjJfdtmtVybzeMDVIb
0M2GQ51DRsNY6xz5t9W89tSE6hyMIeL2aBNpXrI6S7/5/Lsjc2bkxBrwUefg
m1TclvldWh2Tb9aJqHMQZzJSulHnSHEXfJPl2sQ+yf1z3lWxfgf+P99ZU75s
/D411joHMUJx+7r69XHeTu7XRK5zMG9FhFiMtCzqHNQ6iFo815rv3ul8433d
bzpHqs/B+5Z6vnFZnpeS1xLFr2n1W0rvXca3MR6L9xy1bVL/Rj2t13UOfL/Y
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
5xARERHpTTqhc1Cb4LrrrtM07X+N30M/o84hvYo6h4iIiEhv0gmdQ0QGB3UO
6VXUOURERER6E3UOEWkn6hzSq6hziIiIiPQm6hwi0k6SzjH11FMX8847r6b1
jE0yySTqHCIiIiI9iDqHiLSTpHNoWq+aOoeIiIhIb6HOISLtZM011yyWX355
TetZ23fffTv9MxIRERGRCUCdQ0RERERERET6BXUOEREREREREekX1DlERERE
REREpF9Q5xARERERERGRfqETOsfjjz9eXHnllZqmtbDXX399XH6PIiIiIiIi
/UQndI4f/OAHHZ8nUNO63R566KFx+T2KiIiIiIj0E+ocmtadps4hIiIiIiIy
4XRa5zjxxBOLCy+8UNO0/7Wtt95anUNERERERGQUdFrn+Otf/zouxxTpBX70
ox+pc4iIiIiIiIwCdQ6R7kGdQ0REREREZHSoc4h0D+ocIiIiIiIio0OdQ6R7
UOcQEREREREZHeocIt2DOoeIiIiIiMjoUOcQ6R7UOUREREREREaHOodI96DO
ISIiIiIiMjq6Xed48skni9tvv73WnnrqqeI///nPuLR5rPnd735XfP/73y92
2mmnYrvttivt8ssvL5cddNBBjb/98Ic/HNPjPvPMM8XPf/7z4jvf+U6x/fbb
l9f8iCOOKO67774xPY68O9Q5RERERERERke36xwbbrhhY906m2yyyYovfelL
xSOPPDIubW/G+eefX3zrW98qbf/992+63ltvvVWsueaatedy8cUXF++8804x
1VRTNf62ww47jEn7HnvssWKttdYqJppootpjv+c97ynWWWed4rnnnhuT4/UC
r7/+euOaYb///e873SR1DhERERERkVHS7TrHPPPM01LnSDbddNMVjz/++Li0
v45ll1220ZYlllii6XpHHnlkpd0LLLBAseKKK5ZGrMU999xTWc71GS1XXHFF
McUUU4yoH+eff/7iX//616iP2QvccsstlXNHq+o06hwiIiIiIiKjo5t1jldf
fbWYeOKJG+t+/OMfb+RzEBMxySSTVPzU8Wp/zn//+9/igx/8YKMd5IM0Y+GF
F26st8IKKwxZTi7OOeec0zC0j9Hwhz/8oZh88skrcRvbbrttcc011xS33XZb
cfjhhxdTTjllpR933nnnUR2zVzjuuOMq5/3oo492uknqHCIiIiIiIqOkm3WO
m266qeKH7r777pXlhx56aGX5MsssM2Qf5IH8+te/LrWHVVZZpVh66aWL9dZb
r/Rx0VHqQLe46KKLil122aX44he/WO531VVXLTbddNNSF7jxxhsb67LeCSec
UGnHZptt1tApLrzwwnK9K6+8sjjttNNKnSGtt8EGGzTWe+KJJ8r10B7ybYHY
g/T38847b0hdEvaflhOXwHlzfp/4xCcqbaM2R84ZZ5xRWWfqqacu82si1157
bWP/l112WfH222+X984aa6xR9s9XvvKV4sEHH2x6LWnPJZdcUubhfOELXyiv
w/rrr1+cdNJJQ46VOPfccxvHvPfee4sXX3yxvHdWW221Mn7mhRdeKNejPXvt
tVfx5S9/ufj85z9ftudzn/tceb0OOeSQ4tlnn63slxwe9rn66qs3zhnN7Oyz
z24cL69X8tprrxWnn356eW2XX3758vjpOtMXdfzmN79p7O/mm28u3njjjeKY
Y44pNTraeP/99w/ZRp1DRERERERkdHSzzhHbhp111lmV5RdccEFlOT5u5I9/
/GOx0EILNc3RmH322YsHHnigsg05GzEHpc4+/elPl+uiIzSrd5FskUUWKded
dtppW65H3AXgQ6e/0fbE1VdfXVkfDSBx4oknVuI1+Df85Cc/qWxDrZM60CBi
zAeGrhCZY445GsvQEJZaaqkh50BdEfz5HGrGfupTn2p67osttlhDs0ig+8R1
0DFmnXXWxr+Jn0GPglb7xshpiprCvvvu23J97Mwzz2ysj17xkY98pOm69AUa
TOTf//538b73va+xDjoQOUrxOj3//PND+kqdQ0REREREZHR0s85BDEb0J3O/
j+/pcTn+a+Kuu+6q5JLgV37yk5+s+MrYfPPNV/keTwxHWkY+BzEH5HkQCzLz
zDOXf996663LdfN4kzrbZpttyjljWq1D21566aUh+S9bbbVV5XxXXnnlxjLO
hZgOfPCYvxPnZ6HWRjzOnXfe2bSv55prrsq6nFsC7SfGoaDtcMwFF1xwiH6T
NKDEDTfcULz//e9vLJ9pppnK60bt2JiTtMUWW1S2I5Yl7jevL4LWAsRI0JbZ
ZputjPOgz7D83DfaaKPGvonRGe66pXuN2Jj3vve9jb9POumkpf6Unzf3SSSv
s5K3nxysOtQ5RERERERERkfUOcijIG+i3YaeMhKdY/HFF2+sh09Mrsnxxx9f
+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
b71VTDbZZI11llxyyXY2vSt4/fXXizXWWGOItlFnH//4x4u//e1vnW7yuDHT
TDM1zh2NrNOoc4iIiIiIiIwv3axzvPHGG8Ukk0zSWHfZZZcdss6dd95Z8et3
2mmnNra88/z73/8uVlpppco5zzzzzMV3vvOd4uc//3nxzW9+s5hyyikry1dc
ccVON3tc+Mc//lE57x/+8IedbpI6h4iIiIiIyDjTzTrHzTffXPFbd9tttyHr
nHjiiZV1+HfkzTffLB599NGGvfLKK2VMyBVXXFHss88+xV577VVcfPHFtccn
5+Oyyy4rjj766OK73/1uscceexRf+9rXikMPPbQ477zzildffbV2u3/+85+N
4z3xxBPl3x577LHi8MMPL8/h2muvLZ588snGOi+88MKQfbz99tuVduPDA+2I
57v44osP2Z5+y3NZ7rnnnso6//rXvyr753i0CW2ANh522GHDxtpw/ueff36x
//77l/1C2y6//PLiP//5T+36zzzzTON4Tz31VPm3++67r7wfOOYdd9wxbL+f
e+655TWMkKfEPk877bTKOZ9yyimN49XFtHCdqGmCRsT+DzzwwPL30Azalfb3
l7/8pfwbfXTEEUeU7b/yyiuHbKPOISIiIiIiMr50s85x7LHHVvxW/Ngc4jfi
OslXTqBHxOVnn3126XPm+R11cSB77713y5yQGWaYodQUclZZZZXGOksttVRx
8MEHV+JSaMOaa67Z+PfWW289ZB/4+PFYv/rVr0qdIObokMeT9IKc5ZZbrrI9
+4sQ95GWsU9iQahtErfh39Q0zUETOeigg4r3v//9tf3y6U9/urZdsY7K2muv
XbYh6jHXXHNNud6+++7bst+nn3764sYbb2zsl2s+XP7ORhtt1FgfnWTnnXcu
a5jUrcv9UaeLrLvuuo11FlpooeJHP/pRMemkkzb+dtJJJw3ZRp1DRERERERk
fOlmnWPbbbet+J/33nvvkHWox5GW43MSvxEhXiPuY7rppqv1bfG3n3766cq2
X/jCF8plH/jAB4r55puvrPn5oQ99qLLdvPPOO6RN+OFpeawXkYxaqsR2pH8v
uOCCle3J15llllkay8lTgQMOOKCyn913371p322//faVdYm5iKywwgqNZe97
3/uKiSeeuLZfON+XX365sR31UNAo4jrUAFlggQUqmgVxJrGWCttFTSDvl4km
mqh46aWXynVXX331If3+4Q9/uLL+3HPP3dg3MRnD6RzEggBxLLRtuPU5Zl7P
dvbZZ295Xe++++4h10GdQ0REREREZHzJdQ5803Yb8Q0j0TmIC0jrTT755GUc
QYT8iKmmmqqxzsILLzxkHzG2IvnkZ5xxRhk7EOMLsOuvv76y7fHHH1/cf//9
lb/h+26yySaV7eIcruR+5P7vqquuWlx44YVlXx955JFlH9x6662N5cR6UFs0
gU8etZsHHnig/PsyyyxT2W+Macj5yle+UlmX2IMEx//gBz9YWU4ODxoA55LX
OCUmJvGNb3yj0jbmNUnQr3G72267rbGsLuZiww03LOfDve666yrxJsyNSz5L
3u/53DvPPvtsuez2228vrxW6SNRZ+Fsy8oZggw02aKyDtkOeDvEdnPc666xT
2f9vfvObxvHJDcpzgah7Qt7ODTfcUPYvtVNy1DlERERERETGl6hzdMKa6Rz4
jMQZpPWWWGKJIev8+c9/ruyrLv8jxlbgB6NDJPBx4/Z5DQtAW8HnpvYCPi1+
fR5ngj6QuOiiiyrL1l9//drzY78x7+Omm24q/47PHdtMbYpEnlcS4yxyVltt
tcq65L0kqC8Rl+HfR/Db43JiT9J2Mf9mxx13LP3/ZGgJcbtf/OIXjX3+7Gc/
qywbrl5sXb/nMSqxLkmuQ5BXk5PXe8njYbj+cfn3v//9xjLmq821q3zunzrU
OURERERERMaXbtU5cp9zhx12GLJOHj9w1FFHVZbnsRW5X/v1r3+9sYxaDeSL
JKj7yTFjjECdkQcTiXVC8btTHdI6Vl555ca6KZ5hv/32a/xtxhlnbORyvPba
a5Xjsu9mfjY5IjG/hnVT7AOgGcR95bU3b7nlltp+jW0biV1wwQWNfaKJpL9T
DySdVw61QVk3jzfJjTyWyFVXXVVZTj3UnK9+9auN5cRycKwIsTtxH9/73vca
y6jLGpfl8SbNUOcQEREREREZX/gGj/83nvaZz3xmWJ3jzDPPrPiVeR1N2Gqr
rSrr5PEYeWxFqnOZiLU6qSuZoN7nRz/60cq21BylBgV1G2Kdic9//vOVfcac
j7jPOogXSOtuueWWZUxC1FXQcRLkteS+Pu0cSd9RZyTy7W9/u7IcDSVC/lKd
ZkAMw4ToHCnfBmJNjLzPEmhLs80224j6/XOf+1xl20MOOaSyXa5hADFBafnH
PvaxIct//etfV/YR41GoY5r+Puecc9a2vw51DhERERERkf5nJHVIf/KTn1R8
TvIeIuRsxJqi+Md5fEOMraDOZczzYN1pppmmsXybbbZpLIvf/cmdufrqqxvL
8J9j7gaaQWTmmWduLCPPohXUpUjr4suTo5L+zTwt+fnE2qTYqaeeOmSfaCXU
IEnrEMvBPLYRdIa0nFyYnFjThNyaNI9r1KfQCWLOSp2l9pODQn2VtC3zuNax
6667VmI+iNFIMKdrnB8lj82JdTfqNAz45Cc/2VKDivVVOX7USuaaa67GMuqz
jBR1DhERERERkf5nJDoH39KjT7/88ss3/G3qYay33nqV5eQV5KR5O7B8XpSH
Hnqosj1z2CaoZ5r+jm8c2W233SrbxTqcf//73yvLjjvuuJb9wNwwyf9HO0n1
N8ipuOuuu4asv8suu1T2j6ZCPdMEtT5j27G6fJ9pp522sg55KgliOWKdi699
7WuNZbHPaeMjjzwyZN9oScx/8uCDDzb+lucgxXyWSKw7O88881SWxfqnGDEr
EXSLtIzYjzpiPAr6Vbz32F88b/o6QY4NOllaRl2XkaLOISIiIiIi0v+MROcg
JyPWIcWmnHLKcm7P+F0/fZunJkVOjK3Iv8GfddZZTX39fF4T4jKOOOKI2ryN
6OtfeumllWVRg2hGzJ1JxlwpdaCjxHOKege1PPK/U180nwPk8ccfH7IeMRvU
S6Ut0denr1988cXGtnldD+ZW3XPPPYtjjjmmnLf2S1/6UnmNWEYOSuKkk06q
bEcbRtIX2223XTk/TV5TFYs6Ciy22GKV5dTvQO+IcTq5dka9V+JAuN7xvJnn
99VXX21sR75T3C7G9wyHOoeIiIiIiEj/MxKdA376059WvqPXGbkUdXUq8tgK
dIpIzBHJ53VlHtK6Y33iE58oVlpppca/qaURc0sOOOCApvtsxr777ls5BvVD
Y83QnD/96U/FHHPM0bJPiBFBd6ib55RYirhuPndMMnJfci2Bc6WOSKtjY+TX
RHbeeefGMuqLNqufeuKJJ9buD70l5tpMPfXU5ZzCkXzunGTUNI3tz2u65MZx
4jwuwL2TlqOHxHmEh0OdQ0REREREpP8Zqc4BxFlsvvnmZR4DPjI1Oeaff/5i
0003LetG5v5ugryPFVdcsWG33357Zfnee+/dWIbvnkM9EPIoyPGYb775ir32
2qvMXyB/Im1HPYnIgQce2FhGm0cCNT6jnz1crgtQN5S6rPjks846a6mN0D9o
MPj7rfqU807HIveEuAXqnRL7QAwEdUKonxHjOHKYo5ZaFmghXBNqttJXxEbQ
rlh/FKilkfol5sHUgdYR+514Efr9m9/8ZmMf1E/JQcM477zzis0226zsh7Qu
tWhz0HrIaYp9t/HGGxcXX3xxbZvQOdL+OMcJQZ1DRERERESk/5kQnaPfiTU3
0Breeeedth4v1hhFR5D2os4hIiIiIiLS/wy6zvHb3/62OP3008saoakuBHOm
5vPitgPmaU19/+Uvf7ntxxt01DlERERERET6n0HWOcivoO5nzFVB6yDfo908
+eSTlePWzVEjY4s6h4iIiIiISP8zyDrHU0891Tj3qaaaqlhyySWLc889d1yO
TV2NqHNcddVV43LcQUadQ0REREREpP8ZZJ1DBgt1DhERERERkf5HnUMGBXUO
ERERERGR/kedQwYFdQ4REREREZH+R51DBgV1DhERERERkf5HnUMGBXUOERER
ERGR/kedQwYFdQ4REREREZH+J+ocU089dTHNNNNoWl/aRBNNpM4hIiIiIiLS
50SdQ9MGwdQ5RERERERE+peLL7642HjjjTVtYOyAAw7o9M9ORERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
REREREREREREREREREREREREREREREREREREREREREREpC/5f7CXxhs=
    "], {{0, 749}, {
    1082, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{729., Automatic},
  ImageSizeRaw->{1082, 749},
  PlotRange->{{0, 1082}, {0, 749}}]], "Text",
 CellChangeTimes->{
  3.727281876352673*^9},ExpressionUUID->"de6c869e-6ce6-414e-81a4-\
f6266f05b1c5"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operaciones algebraicas y c\[AAcute]lculo", "Chapter",
 CellChangeTimes->{{3.727302454585701*^9, 3.727302467753193*^9}, {
  3.727359554035342*^9, 
  3.727359559011571*^9}},ExpressionUUID->"59ab4b20-ec9a-4c0f-8951-\
01f6e5b240bb"],

Cell[CellGroupData[{

Cell["\[CapitalAAcute]lgebra", "Subchapter",
 CellChangeTimes->{{3.727122334712961*^9, 
  3.7271223361850147`*^9}},ExpressionUUID->"552f608b-244f-4f51-8b69-\
d93518f00ca3"],

Cell["\<\
El lenguaje WL facilita la manipulaci\[OAcute]n de elementos \
simb\[OAcute]licos. Debido a esto se pueden establecer elementos que no \
necesitan ser evaluados, facilitando as\[IAcute] la posibilidad de realizar \
operaciones algebraicas. Es por ejemplo totalmente v\[AAcute]lido hacer\
\>", "Text",
 CellChangeTimes->{{3.7271228336278553`*^9, 
  3.7271229350831137`*^9}},ExpressionUUID->"5e355864-8a4c-4eb8-9a35-\
6b88d8e45a6a"],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.727122936933547*^9, 
  3.727122941570739*^9}},ExpressionUUID->"452b8eac-3d10-49b1-861d-\
608a3fd4c50f"],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"x", "+", 
    SqrtBox["y"]}], ")"}], "2"]], "Input",
 CellChangeTimes->{{3.727122945275012*^9, 
  3.727122952178493*^9}},ExpressionUUID->"715ff14b-eaf3-4336-91d0-\
f4cdf693d498"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"x", "+", 
    SqrtBox["y"]}], ")"}], "2"]], "Output",
 CellChangeTimes->{
  3.727217752016994*^9},ExpressionUUID->"8e191506-8275-4754-b0c9-\
8b45562f8806"]
}, Open  ]],

Cell["Y realizar una operaci\[OAcute]n sobre este elemento \
simb\[OAcute]lico", "Text",
 CellChangeTimes->{{3.727122961698126*^9, 
  3.72712297227409*^9}},ExpressionUUID->"243d564f-2a87-48c7-be0d-\
b89fbcad67ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x", "+", 
     SqrtBox["y"]}], ")"}], "2"], "]"}]], "Input",
 CellChangeTimes->{{3.727122973092053*^9, 
  3.7271229770985403`*^9}},ExpressionUUID->"93b43170-b058-4cae-aded-\
e0c0830d28ec"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "2"], "+", 
  RowBox[{"2", " ", "x", " ", 
   SqrtBox["y"]}], "+", "y"}]], "Output",
 CellChangeTimes->{
  3.727217752065015*^9},ExpressionUUID->"767545d2-7f30-441c-aa19-\
c910d57864bd"]
}, Open  ]],

Cell["\<\
Por \[UAcute]ltimo, la evaluaci\[OAcute]n se puede realizar a trav\[EAcute]s \
de reglas:\
\>", "Text",
 CellChangeTimes->{{3.7271230158570013`*^9, 
  3.727123029105691*^9}},ExpressionUUID->"def52f9e-8b82-407d-b4bb-\
047dd12d1046"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", 
      SqrtBox["y"]}], ")"}], "2"], "]"}], " ", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "3"}], ",", 
    RowBox[{"y", "\[Rule]", " ", "8"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7271230329855947`*^9, 
  3.727123039145705*^9}},ExpressionUUID->"02847622-85b9-4c2d-9193-\
e2de6cede6c3"],

Cell[BoxData[
 RowBox[{"17", "+", 
  RowBox[{"12", " ", 
   SqrtBox["2"]}]}]], "Output",
 CellChangeTimes->{
  3.727217752084087*^9},ExpressionUUID->"08ca2be1-2e00-4cde-acc7-\
aa5dcaa45e2b"]
}, Open  ]],

Cell["O asignando valores a las variables", "Text",
 CellChangeTimes->{{3.727123051304551*^9, 
  3.727123056753195*^9}},ExpressionUUID->"a870bdfb-3f57-4e5d-97b5-\
58d834db9282"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "=", "3"}], ",", 
     RowBox[{"y", "=", "8"}]}], "}"}], ",", 
   RowBox[{"Expand", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "+", 
       SqrtBox["y"]}], ")"}], "2"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727123057426955*^9, 
  3.7271230691697073`*^9}},ExpressionUUID->"4fd6c56b-eeba-4297-ae78-\
3913919250e9"],

Cell[BoxData[
 RowBox[{"17", "+", 
  RowBox[{"12", " ", 
   SqrtBox["2"]}]}]], "Output",
 CellChangeTimes->{
  3.7272177521328373`*^9},ExpressionUUID->"a7fbbaa8-ad0e-4d04-bd1a-\
e6c5500237e5"]
}, Open  ]],

Cell[TextData[{
 "N\[OAcute]tese que ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " deja la expresi\[OAcute]n en forma simb\[OAcute]lica, no la eval\[UAcute]a."
}], "Text",
 CellChangeTimes->{
  3.7271232025063057`*^9},ExpressionUUID->"b03b090e-475a-4bd3-bb3d-\
d96a156b47dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"17", "+", 
   RowBox[{"12", " ", 
    SqrtBox["2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727123179211276*^9, 
  3.727123189386776*^9}},ExpressionUUID->"92a2c0f8-d815-45da-bbcb-\
cda4a5f17e6f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"17", ",", 
     RowBox[{"Times", "[", 
      RowBox[{"12", ",", 
       RowBox[{"Power", "[", 
        RowBox[{"2", ",", 
         RowBox[{"Rational", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], "]"}]}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.727217752177518*^9},ExpressionUUID->"57774f73-0368-4979-be94-\
3542e7a3ea54"]
}, Open  ]],

Cell["\<\
Para forzarlo a que realice la evaluaci\[OAcute]n se utiliza la \
funci\[OAcute]n N[] que transforma la forma num\[EAcute]rica a una expresi\
\[OAcute]n a at\[OAcute]mica del tipo Real.\
\>", "Text",
 CellChangeTimes->{{3.6884175028665867`*^9, 3.688417528290229*^9}, {
  3.727123099024626*^9, 3.72712316654466*^9}, {3.727123205120215*^9, 
  3.727123205912517*^9}},ExpressionUUID->"ccca1642-bb0d-4cd3-9ef5-\
9a33d33445ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"17", "+", 
   RowBox[{"12", " ", 
    SqrtBox["2"]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6884175309796176`*^9, 3.6884175478655653`*^9}, 
   3.727123113035563*^9},ExpressionUUID->"d4705466-a0d1-4d71-8046-\
e171166b8ea8"],

Cell[BoxData["33.97056274847714`"], "Output",
 CellChangeTimes->{
  3.727217752226656*^9},ExpressionUUID->"bd2d8093-f531-4555-836f-\
eab14a3de98d"]
}, Open  ]],

Cell["Podemos especificarle el n\[UAcute]mero de decimales que queremos", \
"Text",
 CellChangeTimes->{{3.6884175514533052`*^9, 
  3.688417559965838*^9}},ExpressionUUID->"2c0605bc-bfc6-41cc-9d43-\
4bcc921a9ff3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"17", "+", 
    RowBox[{"12", " ", 
     SqrtBox["2"]}]}], ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.6884175612636375`*^9, 3.6884175649355373`*^9}, 
   3.727123230035042*^9},ExpressionUUID->"9e9192e8-72d6-462d-b6de-\
e878549817fe"],

Cell[BoxData["33.97056274847714058562026469051637694283`20."], "Output",
 CellChangeTimes->{
  3.727217752264317*^9},ExpressionUUID->"0c4c7f06-749d-49a3-898e-\
fc06972eca28"]
}, Open  ]],

Cell[TextData[{
 "En ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "hay muchas funciones num\[EAcute]ricas predefinidas, como Sin, Cos, Tan, \
Log, etc..."
}], "Text",
 CellChangeTimes->{{3.688419094979108*^9, 3.6884191227189846`*^9}, {
  3.727123233727785*^9, 
  3.7271232403918324`*^9}},ExpressionUUID->"8bb3510e-b369-4131-953a-\
5e604b5f44e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.6884191260898757`*^9, 
  3.688419151400465*^9}},ExpressionUUID->"016e3634-8d6d-4210-9647-\
0f681f9b2a0a"],

Cell[BoxData[
 RowBox[{"Sin", "[", "5", "]"}]], "Output",
 CellChangeTimes->{
  3.727217752312134*^9},ExpressionUUID->"91b85c25-3b71-4f39-bd33-\
5e734c6c3846"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Sin", "[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6884191302857213`*^9, 
  3.688419133695022*^9}},ExpressionUUID->"ae62c3cb-661f-4eda-a22f-\
a027d7943af3"],

Cell[BoxData[
 RowBox[{"-", "0.9589242746631385`"}]], "Output",
 CellChangeTimes->{
  3.727217752397496*^9},ExpressionUUID->"59e185cf-f72f-4324-8ca6-\
14dfb4b982fd"]
}, Open  ]],

Cell["\<\
Se pueden manipular expresiones algebraicas.
Para simplificar\
\>", "Text",
 CellChangeTimes->{{3.688419170509051*^9, 
  3.688419188294888*^9}},ExpressionUUID->"da541353-d6db-4327-9e4b-\
110bd15fb30f"],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.688419195011386*^9, 
  3.688419197171365*^9}},ExpressionUUID->"482fdce4-a728-4c36-b46f-\
01f8268e630e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expresion", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", "1"}], ")"}], "x"}], "+", 
   RowBox[{"6", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.688419199185305*^9, 
  3.6884192243565426`*^9}},ExpressionUUID->"41f4e39c-f99e-41ce-81b7-\
7ebb9447a232"],

Cell[BoxData[
 RowBox[{
  RowBox[{"6", " ", "x"}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.727217752457296*^9},ExpressionUUID->"2bf39aed-19c5-41f8-9d49-\
b1be082dfffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "expresion", "]"}]], "Input",
 CellChangeTimes->{{3.6884192287556324`*^9, 
  3.6884192320848684`*^9}},ExpressionUUID->"9e2cc79e-db2d-45d5-b1c4-\
196f9a3304d4"],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(", 
   RowBox[{"7", "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7272177525544786`*^9},ExpressionUUID->"ce861e14-2c20-4d50-99a8-\
4f9049ff3314"]
}, Open  ]],

Cell["Para expandir", "Text",
 CellChangeTimes->{{3.6884192354296427`*^9, 
  3.688419237616378*^9}},ExpressionUUID->"b9569eae-cd36-4b27-a5b5-\
d366f4a7f431"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", "expresion", "]"}]], "Input",
 CellChangeTimes->{{3.688419239474825*^9, 
  3.6884192428048*^9}},ExpressionUUID->"9474a380-87a6-4a40-9de2-8a4e7d6ce926"],

Cell[BoxData[
 RowBox[{
  RowBox[{"7", " ", "x"}], "+", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{
  3.72721775257038*^9},ExpressionUUID->"135b8aec-797f-42df-94f9-9cf7cc6534bf"]
}, Open  ]],

Cell["\<\
Hay funciones para factorizar donde se puede especificar el factor\
\>", "Text",
 CellChangeTimes->{{3.727123659873331*^9, 
  3.727123682416883*^9}},ExpressionUUID->"bcd968e1-d382-49c8-989a-\
832d61775147"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorTerms", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "x", " ", 
     SuperscriptBox["y", "2"]}], "+", 
    RowBox[{"6", "y", " ", "x"}], "+", 
    RowBox[{"3", "y", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"], 
     SuperscriptBox["y", "4"]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.7271233046650248`*^9, 3.727123458109247*^9}, {
  3.727123603597081*^9, 
  3.727123637970871*^9}},ExpressionUUID->"b40786d9-0d5f-420d-8472-\
d00b7e71ce18"],

Cell[BoxData[
 RowBox[{"3", " ", "y", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "x"}], "+", 
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"x", " ", "y"}], "+", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     SuperscriptBox["y", "3"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7272177526705093`*^9},ExpressionUUID->"04858292-3229-4c62-8e7e-\
b6a0cb634995"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FactorTerms", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "x", " ", 
     SuperscriptBox["y", "2"]}], "+", 
    RowBox[{"6", "y", " ", "x"}], "+", 
    RowBox[{"3", "y", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"], 
     SuperscriptBox["y", "4"]}]}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.727123652138276*^9, 
  3.727123652362421*^9}},ExpressionUUID->"1138996a-5162-4132-b456-\
6282718087a1"],

Cell[BoxData[
 RowBox[{"3", " ", "x", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "y"}], "+", 
    RowBox[{"x", " ", "y"}], "+", 
    SuperscriptBox["y", "2"], "+", 
    RowBox[{"x", " ", 
     SuperscriptBox["y", "4"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7272177527669697`*^9},ExpressionUUID->"85694c8e-9d3d-48c9-95aa-\
7206312f9300"]
}, Open  ]],

Cell["\<\
Tambi\[EAcute]n se pueden resolver ecuaciones algebraicas. Solve[] las \
resuelve de manera simb\[OAcute]lica.\
\>", "Text",
 CellChangeTimes->{{3.6884205394621267`*^9, 3.6884205479545236`*^9}, {
  3.688420734075357*^9, 3.688420739744306*^9}, {3.727123700648857*^9, 
  3.727123700696822*^9}},ExpressionUUID->"7ff5ba89-9b21-4915-b7d8-\
381f9bd206cd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"x", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"7", "x"}], "+", "9"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6884205489343615`*^9, 
  3.6884205647550955`*^9}},ExpressionUUID->"496b3089-d8a7-4aa3-ab66-\
57e9f3f27646"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["3", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.72721775282434*^9},ExpressionUUID->"fbabee4d-c254-4d08-b9c9-fa1f212fd217"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "\[Equal]", "0.8"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6884205690761967`*^9, 
  3.6884205806041837`*^9}},ExpressionUUID->"1465d9d6-623e-4d84-94d9-\
4ec9567faa36"],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,161,1,25477687411001132556,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.727217752907805*^9},ExpressionUUID->"d5699b5a-702c-4efd-9631-\
4bbef26e3d88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.9272952180016122`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217752932293*^9},ExpressionUUID->"2cbc742c-7419-4d08-8858-\
c7b9de75b1b8"]
}, Open  ]],

Cell["\<\
Algunas veces la manera simb\[OAcute]lica de resolver ecuaciones no es la m\
\[AAcute]s eficiente,\
\>", "Text",
 CellChangeTimes->{{3.6884207281354017`*^9, 
  3.688420755120559*^9}},ExpressionUUID->"d05f2235-0182-4164-b3a6-\
aedd1e5c081f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", "x"}], ",", "x", ",", 
   "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.688420603694083*^9, 3.6884206484634743`*^9}, {
  3.688420712755465*^9, 
  3.688420713416391*^9}},ExpressionUUID->"66c9e48d-3d1f-428b-8693-\
9927a0173362"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"Root", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "#1", "]"}]}], "+", "#1"}], "&"}], ",", 
       "0.7390851332151606416571598004979727732`20.60205998922722"}], "}"}], 
     "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217753091591*^9},ExpressionUUID->"c2e922d2-a30b-4054-b30f-\
99e5d7175343"]
}, Open  ]],

Cell["\<\
es por eso que existe la opci\[OAcute]n de resolver la ecuaci\[OAcute]n num\
\[EAcute]ricamente.\
\>", "Text",
 CellChangeTimes->{{3.688420758209638*^9, 
  3.6884207741202335`*^9}},ExpressionUUID->"4bf6de8b-05fa-403d-b83d-\
d4d359faf457"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "\[Equal]", "x"}], ",", "x", ",", 
   "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.6884206371027956`*^9, 3.688420653239462*^9}, {
  3.6884207082225704`*^9, 
  3.6884207089685984`*^9}},ExpressionUUID->"8e985993-81fd-4a1f-acda-\
bc709290fec7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.7390851332151607`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217753126748*^9},ExpressionUUID->"49c8cdc9-7590-4dc4-a675-\
b911a4a78704"]
}, Open  ]],

Cell["Para resolver ecuaciones simult\[AAcute]neas se hace", "Text",
 CellChangeTimes->{{3.688483605204033*^9, 
  3.6884836192042804`*^9}},ExpressionUUID->"e12f5703-1190-4994-a69c-\
038811641e36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y"}], "\[Equal]", "7"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"4", "x"}], "-", 
       RowBox[{"5", "y"}]}], " ", "\[Equal]", " ", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.688483624704646*^9, 
  3.688483645161948*^9}},ExpressionUUID->"363beb75-5140-4991-ab1e-\
1e2c7d90eb84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["37", "9"]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["26", "9"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.727217753165101*^9},ExpressionUUID->"d49373ae-d04b-4325-babe-\
8a4b9db2b482"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio:", "Subsubsection",
 CellChangeTimes->{{3.6884835452308173`*^9, 3.6884835462167993`*^9}, 
   3.727123817390807*^9},ExpressionUUID->"2963a7e5-29c0-40c8-a390-\
514622586105"],

Cell["\<\
Resolver el sistema de ecuaciones
Cos(x+y) = x,
y = x+2\
\>", "Text",
 CellChangeTimes->{{3.68848354783876*^9, 3.6884835515152335`*^9}, {
  3.6884835826669836`*^9, 
  3.688483594158276*^9}},ExpressionUUID->"4606d8d7-97cf-4da5-ac14-\
288175736e66"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["C\[AAcute]lculo", "Subchapter",
 CellChangeTimes->{{3.727123819782507*^9, 
  3.7271238211422777`*^9}},ExpressionUUID->"d79c636d-e69c-4a00-a604-\
511f7c6e8043"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " puede hacer operaciones de c\[AAcute]lculo de manera simb\[OAcute]lica, \
por ejemplo derivadas"
}], "Text",
 CellChangeTimes->{{3.688419943586521*^9, 
  3.6884199720593596`*^9}},ExpressionUUID->"a95d812f-87e6-4d68-9b66-\
6dc9f91e23c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SuperscriptBox["x", "7"], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6884199747320766`*^9, 
  3.6884199843346653`*^9}},ExpressionUUID->"37c39337-abcd-4588-b56d-\
4d48c20ff68f"],

Cell[BoxData[
 RowBox[{"7", " ", 
  SuperscriptBox["x", "6"]}]], "Output",
 CellChangeTimes->{
  3.688419984499889*^9},ExpressionUUID->"3767511e-f065-4ba2-82e1-\
edcb38e24cb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"Exp", "[", "x", "]"}], "]"}], "2"], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.688419986253172*^9, 
  3.6884200059903517`*^9}},ExpressionUUID->"5743d284-f959-45ee-97ba-\
b1f8b18aeee0"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[ExponentialE]", "x"], " ", 
  RowBox[{"Cot", "[", 
   SuperscriptBox["\[ExponentialE]", "x"], "]"}]}]], "Output",
 CellChangeTimes->{{3.688419988746295*^9, 
  3.688420006124178*^9}},ExpressionUUID->"d93bfd1a-1d0a-4d68-a73d-\
531051017456"]
}, Open  ]],

Cell["\<\
Para evaluar la derivada en alg\[UAcute]n punto se puede usar una regla de \
sustituci\[OAcute]n\
\>", "Text",
 CellChangeTimes->{{3.6884200194777665`*^9, 
  3.6884200307394295`*^9}},ExpressionUUID->"4b892b52-c19c-4bea-bb9e-\
d40a2c457fb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Exp", "[", "x", "]"}], "]"}], "2"], "]"}], ",", "x"}], "]"}],
    " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6884200355757666`*^9, 
  3.688420058030138*^9}},ExpressionUUID->"87c73131-0f03-4d76-9698-\
7035e17a751d"],

Cell[BoxData[
 RowBox[{"-", "13589.074528306752`"}]], "Output",
 CellChangeTimes->{{3.688420045371063*^9, 
  3.6884200582080994`*^9}},ExpressionUUID->"6c8b02cf-0eb1-4d71-bba4-\
f4118a8167d5"]
}, Open  ]],

Cell["De manera an\[AAcute]loga se pueden realizar integrales", "Text",
 CellChangeTimes->{{3.6884200644007697`*^9, 
  3.688420072031228*^9}},ExpressionUUID->"c5fcee08-976e-4143-a064-\
f3e6ec29f399"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"7", " ", 
    SuperscriptBox["x", "6"]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6884200735971007`*^9, 
  3.68842008207006*^9}},ExpressionUUID->"30bf87d2-5e89-4dd6-bebb-\
929c287e94d7"],

Cell[BoxData[
 SuperscriptBox["x", "7"]], "Output",
 CellChangeTimes->{
  3.6884200823626337`*^9},ExpressionUUID->"ffbbcb79-814e-4b9a-a4be-\
5208eb951966"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"Exp", "[", "x", "]"}], "]"}], "2"], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.6884200914014745`*^9},ExpressionUUID->"78bc98f4-0930-4f93-852c-\
a49be653412c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"\[Integral]", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"Sin", "[", 
          SuperscriptBox["\[ExponentialE]", "x"], "]"}], "]"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"Sin", "[", 
        SuperscriptBox["\[ExponentialE]", "x"], "]"}], "]"}]}]}], ")"}]}], 
  "+", 
  RowBox[{"x", " ", 
   RowBox[{"Log", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      SuperscriptBox["\[ExponentialE]", "x"], "]"}], "2"], 
    "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.6884200948271337`*^9},ExpressionUUID->"ec466c67-e84d-480f-b85d-\
338a4fe2bede"]
}, Open  ]],

Cell[TextData[{
 "Se puede evaluar la integral en un intervalo. Por defecto ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " trata de hacerlo de manera simb\[OAcute]lica"
}], "Text",
 CellChangeTimes->{{3.68842013277402*^9, 
  3.68842016841862*^9}},ExpressionUUID->"b56f8a52-591d-44ae-bad6-\
7fd16322a765"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"7", " ", 
    SuperscriptBox["x", "6"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "5", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6884201706471243`*^9, 
  3.6884201864949245`*^9}},ExpressionUUID->"5cffc764-aac3-451b-a140-\
81b182cf7138"],

Cell[BoxData["201811"], "Output",
 CellChangeTimes->{
  3.6884201867581625`*^9},ExpressionUUID->"8d688595-227a-4154-a3fb-\
03b77daa79fc"]
}, Open  ]],

Cell["Sin embargo no siempre tiene \[EAcute]xito.", "Text",
 CellChangeTimes->{{3.688420190905541*^9, 3.6884201964640822`*^9}, {
  3.688420394054368*^9, 
  3.6884204004107637`*^9}},ExpressionUUID->"4071e588-a792-40da-8f25-\
d242b3513b37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"Exp", "[", "x", "]"}], "]"}], "2"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.5", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.688420109577944*^9, 3.6884201133096848`*^9}, 
   3.688420285177103*^9, {3.6884203309518085`*^9, 3.6884203670686693`*^9}, {
   3.688420475692268*^9, 
   3.6884204781175737`*^9}},ExpressionUUID->"45d2770d-11d7-4bc2-a49f-\
e8626eebfd07"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0.5`", "1"], 
  RowBox[{
   RowBox[{"Log", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      SuperscriptBox["\[ExponentialE]", "x"], "]"}], "2"], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.688420150820505*^9, 
  3.6884204874518466`*^9},ExpressionUUID->"04b1872f-bcd0-427e-9fa4-\
46fb3f35fb06"]
}, Open  ]],

Cell["\<\
En \[EAcute]stos casos es necesario realizar la integral \
num\[EAcute]ricamente.\
\>", "Text",
 CellChangeTimes->{{3.6884201997419662`*^9, 3.6884202141442795`*^9}, {
  3.68842040558624*^9, 
  3.6884204103616858`*^9}},ExpressionUUID->"dd1e0179-25cd-474c-8769-\
c32f73fb6c23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"Exp", "[", "x", "]"}], "]"}], "2"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.5", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6884202227557516`*^9, 3.6884202627936993`*^9}, 
   3.688420380532119*^9, {3.6884204280901546`*^9, 
   3.688420438982512*^9}},ExpressionUUID->"36960f60-4327-4526-bfd8-\
8f4d3e07d319"],

Cell[BoxData[
 RowBox[{"-", "0.24491267103320408`"}]], "Output",
 CellChangeTimes->{{3.68842022339279*^9, 3.688420263346712*^9}, 
   3.68842043922593*^9},ExpressionUUID->"1c801364-c593-4c89-902b-\
246b4cd4fecf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.727218279741172*^9, 
  3.727218281836782*^9}},ExpressionUUID->"e1b5255e-f132-4867-96c5-\
05094b85b428"],

Cell["\<\
Verificar si se cumple el teorema fundamental del c\[AAcute]lculo en las \
funciones de Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.727218321828517*^9, 
  3.727218335476577*^9}},ExpressionUUID->"46f65e1f-3e99-4e97-9187-\
aca0cada0770"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2:", "Subsubsection",
 CellChangeTimes->{{3.727218388739293*^9, 
  3.727218390571568*^9}},ExpressionUUID->"566bc6c7-06e4-4e42-b94f-\
3dbb166f00db"],

Cell[TextData[{
 "Encontrar la soluci\[OAcute]n num\[EAcute]rica a la ecuaci\[OAcute]n\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      SqrtBox[
       RowBox[{"x", "+", 
        SqrtBox["x"]}]], "dx"}]}], "=", " ", "x"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e5d92b68-22e2-4280-a4ee-472769438d78"],
 " donde x \[Element] Reales"
}], "Text",
 CellChangeTimes->{{3.727218643247869*^9, 3.7272187242468157`*^9}, 
   3.7272188140415688`*^9},ExpressionUUID->"2fdbcbde-4b3c-4f3f-a57d-\
6a199807d61c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3:", "Subsubsection",
 CellChangeTimes->{{3.6884860240776453`*^9, 3.6884860255256524`*^9}, {
  3.72721873974293*^9, 
  3.727218740214327*^9}},ExpressionUUID->"1ca53ae0-598a-44ab-8764-\
b4c995b1a714"],

Cell["\<\
Obtener dos listas con la primera y segunda derivada de las siguientes \
funciones:\
\>", "Text",
 CellChangeTimes->{{3.7272187425588617`*^9, 
  3.727218803215747*^9}},ExpressionUUID->"9860423f-333d-4cab-89a9-\
c5adb616c94e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"funciones", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", "x"], ",", 
      SuperscriptBox["x", "2"], ",", 
      RowBox[{"Log", "[", "x", "]"}], ",", 
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"ArcTan", "[", "x", "]"}], ",", 
      RowBox[{"Cosh", "[", "x", "]"}], ",", " ", 
      RowBox[{"ArcCosh", "[", "x", "]"}], ",", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"n", ",", " ", "x"}], "]"}], ",", 
      RowBox[{"EllipticE", "[", "x", "]"}], ",", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", "x"}], "]"}]}], "}"}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.727123826663981*^9, 3.727123827808096*^9}, {
  3.727123861416409*^9, 
  3.727123875398513*^9}},ExpressionUUID->"c32b5434-dd29-4d6c-bfbe-\
f54c16907ef9"],

Cell["\<\
Despu\[EAcute]s crear una tabla con funciones y su primera y segunda derivada \
utilizando la funci\[OAcute]n Grid[].\
\>", "Text",
 CellChangeTimes->{{3.727359082823983*^9, 
  3.727359125983801*^9}},ExpressionUUID->"40580e51-0268-4a75-bd59-\
9c17e71c7538"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Proyecto: Eigen-estados cu\[AAcute]nticos de un potencial bidimensional\
\>", "Subchapter",
 CellChangeTimes->{{3.7273597630533733`*^9, 3.727359793589058*^9}, {
  3.727364440092078*^9, 
  3.7273644652332973`*^9}},ExpressionUUID->"58143a28-3f34-4f7e-88de-\
1288ab80a5aa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXn0jtX+/5/ZqWUqh0OK41N/WC11WscnEks/SjjNrUIZoiIZFy0NKmNm
GQ4lEZG5EyKRwqdMOWQ4qYMolCkhiiPV/vXcZ+37e92XPbyu6b7v9/v9elh3
ve/rvq69X/u1X/u15339uX33ezsUvuiii3qV/P0/97Z76v/r2bPdM/eV/f3L
/d16derY7bFHm3Z78rGOj/Ws077I7xdv/v3eJr//UfT3vwXDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAyTNbZu3ZptERiGYRiG
YRiGYbLOV199JUqWLCl++OGHbIsSmC+++EK8+eab2RbDCEW+p59+WnTq1ClD
EsXHsGHDRM2aNcW9996bVTn8On7nnXdE3bp1RZUqVQI9F5S48m3VqlWiQYMG
omLFiuLHH3+MHB6VpO0uE/aRKzaYi+Rn38Nkjmz5JxO5XucnTbZ9XlzxU+tp
4M9znU3mmp1mkrj9eEEvY16GDh0qLrroIvHGG29kWxQry5Ytu+Bahw4dRIkS
JcR//vOfLEjkxiXfrFmzRI0aNcTu3bszLFk8DBo0SNxyyy1ZlUGn49WrV8s+
f9DnqMSdbzt27JBlMFN+3SS/roxFIRP2kQs2mIvkd99TEIi7PIYl0/7JRq7X
+SbizMts+7y44qfU00CX5zqbzCU7zRRR/XhebFdnkh49eojq1auLpk2bZlsU
K507d77gGua8/vWvf2VBGho2+T777DPx0EMPiVOnTmVYqviYOHFi1tumOh1D
ty6/G9Z2ksi3w4cPZ8yv2+TXlbEoZMI+csEGc5H87nsKAnGXx7Bk0j+5yPU6
30SceZltnxdX/JR6GujyXGeTuWSnmSAOP54X29WZAvNor776qnj22WdF0aJF
xXfffZdtkbScPn2aNA+bl0Cafvvtt2yLEYls+2kTVL8bhiTyLZN+3SR/EmWM
+0e5SX7wPfmdXKrzClq7M27izsts+7xM9490cP8ouh/PJR+TiwwcOFAcO3ZM
9hVhV7D7oODZ4cOHi7Fjx4oxY8aIEydOpP2Osx/Gjx8vw37llVfEmTNnUr9t
3rxZDBgwQM5h/frrr+Ktt94SkyZNkvepuT2sK61Xr54oXLiwDAcfhIm+HeTv
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
sVWrVnK9C8YfUM4//fRTku1gbhXh4pkPPvhA+gns/8cexvbt20u/ZgvfJpfN
lt577z3RpEkTqRPMh3jPrTbpGHmD/XXqnGvoGXIhLNNztngotmDDphfIctdd
d8l477//flkOTdjsA9c6duwobRfjG1dddZWoVKmS7CdR895fxhSucky1D2pY
JqLaYNg8wvoB1D84F0v5TNgv3jGO62ovsarvsVccZ6pivA5n/Ci7Ay5bgs1S
fICtPGXL98SRfsiWjXIYJP02v59knQdMfoqiG5uPM2HyT650uvx9mDwy2TV0
D92h7Yc1URgTx14B1e6OI9+j1G2mvKTkWRx+NWxegCR9rqueNuW5zib916Dj
qOXBlK4o+nS1meNol8bdrqbInZT95QdQRvxnV3jBPBzGdqK+kxD9WpyDGBeY
h4dcAGNO+NvbZwY4c0O9QwFgjNC/l8+Vfh1x6cSP91xMjDH41w6ruIPK631W
nXGI8QeE418XpgufIhcIo0sbKLfUMxldUGzBRhS9x4VLBlsZo9gsxT6oYUWJ
I6yuo+SRd72Iy+6i2hK1POlIyvdkKv25Ug5tvipbdV5U3QTFlM4o9qnCpeQR
1rrefvvtafMISDPmk3D2Wpgwg8pFTaspLyl5FsWvRs0LavxR9BtnPe0ljvLg
T1cc+rT5jrjapVSC+Jgwbf049MUwDMPkXUzr6QsKBT39TObBeiKMuevA+lf/
ngiGYRiGYRgmM2DsE+cuoX+A90zk2trqpCno6WeyA+YdMH/0/vvvp65hrB37
HUz9JoZhGIZhGCZ5cO439tvgneR4n6J37UNBoKCnn8ke6h1sOMcLex5wjl22
1zEzDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDFNw6Pv7vz4B
/20VW90BMwzDMAzD+MC5MwzDMLlMoZ8LiYsC/rth3A3ZFpthGIZhmDzE9u3b
5Xt58Q7devXqyfcBFxTeeecdUbduXVGlShXnvV988YV833A2SVKGjRs3yvdw
N2jQQNpBly5d5LuZO3fuLN+9jPdG56f3qCBteE913AwbNkzUrFlTvk87aVat
WiXzq2LFiql3A+qu5ScKny8s2vz+74Tv37z354ljvxxLu7bi93/oH/119F+z
LTbDMAzDMHmIv/zlL2LdunXyvde33XabOHPmTLZFyiirV68WJUuWdN7XoUMH
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
maA8a5NX9Y+8Z4ahb4g1R2h3KdS+F4y1A9W3VOdqIM8UpviiyuqXgao3pKNJ
kyZynN8F3g102WWXWe+hxhtFDyaSsi/k3zPPPJMWBt6V62/j+7njjjvEkCFD
0q5hP89NN90k/0bacV6D1z4A+kCqr2CyJYrcyia8Z176r9lkwDkKYdKtwBza
n//857Tz5yhpttm5DV3/6KOPPpLp9du3qX8UpDwwDMMwDJN50NZt166dHO/G
2XVoU3jb5ei74FwErFnBWXePPPKI3IcAVq9eLdtnF198sXwvDc7NRR/mxhtv
FJdccomcAzGNA+NePINnceaUd0+2Lc733ntPti3wHMbnveco2+TBtY4dO8pz
H3BGM85Iq1SpkmzHoq2HeQvsf8C+e5wfhzP1atSoIc/vUmdk6XA9izSY5AUI
+8knn0ydCY30tmrVSqZTgfYX+rEIA21fnLcFsP8COsaeDXXusk0/UWTVyUDV
G856Q//hyy+/NOrxn//8p0wL9vH84Q9/kPtc1LlpQXWOeKPowZTfSdrXuHHj
5JmNOK8a513jnBTKOQWYs8Bz6Gd88MEHsg+AcyGw7qx9+/ayr42+BmwKZ1pj
Lgj3fvrpp2nh6GzJJTf6JHfddZdM+/333y/XuMFO/NeASYaw6VZgbeEVV1yR
NsZiiw/YbMOFt3+EPhbOelf5j3M/kd/K55n6R5TywDAMwzBM9kE7yn9mnBes
TcG5UEm/2zKbceIMra+//jr1He9Uoe7fjvKsAm087znnFDBWf/z48UDPxCFr
kuFlKt5My22Lz3uWO+Zr/HuKXKCsKNvBfBDKsv8cDXy3lXGTLcWpJ78MUdMN
1LvRKPFFBf2jpr//W074N/b3f7y+jmEYhmEYhmGY/Ar6RxcF/Mf9I4ZhGIZh
GIZh8iN1BtYRiwL+u+2R27ItNsMwDMMwDMMwTOz89a9/lWec//vf/3be+3//
93/y3r/97W8ZkIxhGIZhGIZhGCazvPPOO/I8d+9+LBM4DwL34hwPhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYJv/wyy+/iG+//Vb+H5w/fz7L
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
GNvVs2bNEjVq1BC7d+/OsGQ0li1bFmt4Ln3kKlu3bpW26JI7r6YvDuLyS5ks
95nMr7BlKUkfESbP8oNftpGr7YG4fXEQwpSTOO0k0341v9s4Y4bzPp2JEyfm
pD80kU15W7RoIapVq6b97ejRo+K5556LLa7Dhw/neTv94Ycf5HvsdHz22Wfi
oYceEqdOncqwVHQwTxgnNn3kMnhXO6V/lFfTFwdx+aVMlvtM5leYspS0jwiT
Z/nBL9vI1fZA3L44CGHKSZx2kmm/mt9tnDHDeZ9OrvpDE7nWP0Idrhg8eHBs
ceV3Oz19+rT47bffsi2GEchXpUqVbIuRE1D7RwWZvNg/yhRhy1LSPoL7RxeS
i+2BvOiL87Kd5GXZmWjk57z/5Zdf5DrV1157TQwdOlSsX7/+gnswzwEfOGXK
FLF06VLxyiuvaP3hhx9+KCZMmCBGjBgh5s+ff8HvGM8YPny4GDt2rBgzZow4
ceKE2Lx5sxgwYIDo3r279Gng3XffFS+88IL8BJWVIi8lnHXr1onZs2fL++bO
nSsmTZpkV6QBXf/o2WefTf197Ngx+X+lhx49eohff/1VvPXWWzJOyE5tY/rt
lKovHa70h8lr129YMz1w4EBpC/40Y73W+PHjZb5CJ2fOnIlNby49UeLAOtx6
9eqJwoULSznxgcwufa1du1b069dP9O3bV455q3Bt+jDpwhWejaj57Uf1j376
6SexYMECqVt/nujSB9tV+ps8ebKYNm2aePXVV8WcOXNI6TcRxM/YdBEmbkVc
ftSPrn5Kouz780tXLhAfPufOnZPyIAykZd68edq4dGm1laUw5SWKLuLIM0r7
Aenq37+/6Nmzp/SH48aNk3t7YPfQrR+bHVLKkCuMpHWSpA5cvtgmW5D6JGg9
5rLDoO3MIPG76gVTWFS/GcYHhamrqDYSNe6wPiNsPZoL6QrbdgiT93G1r5Om
T58+Yvr06fJvlKXatWuLhQsXpn7HOQPYf4X2DtizZ49o2LDhBf5w1KhRok2b
NqmxO8xtwwYUaCPVrVs3Ve6WLFkimjVrJo4fPy5eeuklqV/VV/j2229Fly5d
LuhXuGSlyusKZ9u2bTJ+BfK/adOmNIX6QP+ofPny0g6mTp0q/S72JPmBXrAX
qWjRomLRokXiyJEj8nrXrl1lmaHgt1OKvnS40h82r12/wf+iPveXtZkzZ4q2
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
kGonYeIHpnLjCoviN8P6oKB1FXDZSNS4w/qMqPVoLqQrTH4Ezfurr77aWsfk
CpD14YcflmsAsRcR5+zhXbh49zjOn0B+Yd4V58RgHOqDDz6Q+Yl9tthr1r59
+9QYDtLWqlUrOReIfiPux3yBAuW0Xbt2chwR56PATpS/AzgDEGceffzxx+KN
N96Qe7igY/SdsQ+TIitwyYt5dlc4OFsRYeDMOex1xX5FtX8MZ9qg7v/yyy+t
usU5P4899phcY4lxLJzXgbTj07FjR1lWsM5TvcNu9erVsu65+OKLxT333CPP
WoSvv/HGG+UaiU6dOln71x999JG466675PP333+/PE+Roi8dtvRHzWvbb0gD
fDXSgDoX56cAtE1Rt2OOGvtCH3nkETm3GYfeKHYVJA7YML5jTa0609Kmr/fe
e0/2txE22jTec5B1+rDpwhVeUvnth6ovXfpwni7KBd6bjLKLfal//etfU3MP
rvS7cPkZmy6ixB2XH/XjL/dYS0X1lTps6ffnF3Rnymdcg5+DTnE+8FVXXSUq
Vaok+0kKV1p1ZSloeYmiizjyTJc/JlT7CGdHoRxgzgLniCHNXlx26CpDlDCS
1ImNuHQAdPbjko3qu4LWYy47xPg61U5A0Pht5cbVNgM2vwlfEcYHhamrKDYS
Ne6wPiNqPZrtdKEsBc2PMPUP6gWbnnINnCPx9ddfp75jrMm/PwtzZupMT4zN
oN7TzQPjmv9cGS/wn6bfcQ4gzvkA6Mfgb+/4B1VWiry2cNRZipABfWD/euu8
BFVfXqjpj5LXtt9MID7YRBLvfwyjJxMYT8G5qH5c+gpCnLqIK78zSZT02/wM
RRdR4o7Lj1JIsuzHiS2tprIUlCjlO1N55l1fg/a/itMmV1QfEDaMpHQStw5s
9hNHGQtaj8VZz4SJP0pYlPaZn7jTC6g2EjXuoM9HrUdzNV1hMcWTn9rXDMMw
DMMki2n/QUGCdcC4yK82kl/TxTAMwzAMEwaMFQ8ePFi2j/CunVxbi58JWAeM
i/xqI/k1XQzDMAzDMGHBexmx3+Ddd9+V71/1rkspKLAOGBf51Ubya7oYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
RseqVatEgwYNRMWKFbXvhYvCF198Id+ty/w/hg0bJmrWrCnfScwwwGQTQctP
kmWZ0ZNLOmffkrfIJdvJBNmyz/xYLoKmqaDZGgjT/ixoesqPZSNuduzYIc9r
j9seOnToIEqUKJF6zy7zXwYNGiRuueWWbIsRmWXLlmVbhHyDzibClJ+kyjJj
Jpd0nl98S0Ehl2zHRJx+Plv2mVS82awDg6YpW7aWLR2FbX/mhTIZJ1xn2Dl8
+HAi9vDDDz/I8+CZdCZOnJgv7LFz587ZFiHfoLOJMOUnqbLMmMklnecX31JQ
yCXbMRGnn8+WfSYVbzbrwKBpypatZUtHYdufeaFMxgnXGXYKmj1km/xgj6dP
nxZVqlTJthj5hrhsgsty5sklnecH31KQyCXb0RG3n89P/aNs14F5oX+UbR2F
IdfLZNwUhDpj3bp1Yvbs2XK95dy5c8WkSZPSft+6dasYP3681MUrr7wizpw5
k/rNbw+bN28WAwYMEN27d5f2DfA+4BdeeEF+/KCPPnz4cDF27FgxZswYceLE
Cbn2c+DAgTIM//ymTRYVd48ePcSvv/4q3nrrLZkW3OcP58MPPxQTJkwQI0aM
EPPnzw+kDx268ILIY+Lo0aMyrVOmTBFLly6Vz/rt0aaTIOlZu3at6N+/v+jZ
s6fMh3Hjxsk1pnPmzJHye/nll19keK+99poYOnSoWL9+/QVh9evXT/Tt21ec
OnUqlW6s0a1Xr54oXLiwlBkfyO/SZdC06KDaJjXfXDrQYdJLkDBdNmEqP66w
Kb59+fLlMl581Prsn3/+Wbz66qvy2qJFi7TPUXQfpLyE0b3rmaDldeXKldJn
wU737t0rpk2bJvr06SPffU71gTqd2+R02U8QKL7FVhb96PSHNOBz7tw5mUak
C+HNmzcv7dk488YkcxxlT8eRI0dkfKNHj06tB1LlIGh9GETfpvIaV31AkckU
ls3PU/VMsU9XesPUF1HKBcVObbqhlG9X/kbRpSldlLohSPvBlQ5XOyGK/r0E
aX9S7JaiJ5dNBvEBFJ3H6YOi2lEcbeJMsm3bNtGlS5fUd+Rv06ZNU99nzpwp
2rZtK20DfP7553IPGvSk7vfaw/Hjx8VLL70krx07dkxe+/bbb2Uc1apVS4t7
wYIFom7dujJfwZIlS0SzZs1kHk6ePPkCO3PJgnBefvllUbRoUVk/od4CXbt2
lfajGDVqlGjTpo347bff5HfM4SIfKfrQYQqPKo+JNWvWyPR988038vuePXtE
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
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhmHj55ZdfxLff
fiv/D86fP59liRiGYRiGYRiGYTLLzz//LJ577jn5mTJliujXr5+YMWOG6Ny5
s/jmm2/kPV988YV48803sywpnXfeeUfUrVtXVKlSJduiRGLVqlWiQYMGomLF
iuLHH3/MtjgMgYKWZ3nNN9ig+o2ClsegIKY5CJRy8PTTT4tOnTplSKJg5MX8
zWsy5ydfycRPHPYxbNgwUbNmTXHvvffmq3CyxQsvvCBeffXVtGuLFy8WRYsW
FV9//bX83qFDB1GiRAnxn//8JxsihmL16tWiZMmS2RYjMjt27BAXXXRRnvD/
zH8pSHkWxTcsW7YsAYmiQfUbBSmPFQUxzVRc5WDWrFmiRo0aYvfu3RmWjE5e
zN+8JHMYX5mLPpJJhrja2YMGDRK33HJLZHlyLZxscPnll6f6QV7uuuuu1PUf
fvhB/Otf/8q0aJH47LPP8kX/6PDhw3nG/zP/pSDlWRTfgDnqXIPqNwpSHisK
Ypqp2MoBbOqhhx4Sp06dyrBUwciL+ZuXZA7jK3PRRzLJEFc7e+LEibH0R3It
nEzz22+/ieLFi4s33njjgt9ef/11bb8pr8D9IyZbcJ65OX36dE6uf+X+kZmC
mOY4gK2jrs118mL+5kWZqeSqj2Rym1zr1+TV/hG49dZbRYUKFcTMmTPFyZMn
U9exL+nXX3+VayIHDhwounfvnpr327x5sxgwYIDo0aOHvOett94SkyZNEq+8
8kqoucEPP/xQTJgwQYwYMULMnz8/dV0Xz2uvvSY/586dkz4R6zXx7Lx589LC
VO2c77//Xvb1Xn75ZXkPwlHgLAo8j/CGDh0q1q9fnxbG2rVr5X6svn37yrE/
lUYvK1euFGPGjJGy7927V0ybNk306dMn1bfcunWrGD9+vLQRPHvmzJlAujH5
f1e469atE7Nnz5bpmzt3rpQ9CBjHGD58uBg7dqxM34kTJ1K/ufTmijsp2Sn5
ZbI1YMtLZYsoB6i3wLvvvivXp+LjxZ9ncdiZSe6o+ezSiY2wvgH7BurVqycK
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
SZeU8g5cfkOl218ubXJHySfXs67yFJev1qWZqlMXJt1hjRrqJ5xlhfNvAdKP
d8zjujovw+avbOErVP8I+8Nx9i/GlXEunTfPbfHoykEm8yaOfEgqf5P0yWFl
Rl786U9/Mu4t0GGTk2KnOhuh+IUwPpKKrS6Dbii2GZcPsOW1zYYo8cfZXlWg
f3nFFVeknREWpU1p8iGuvMZ6X9gQrn/wwQeyj4H2O9b/tW/fXvYzKfnjCsc/
D26CGk5cNpw06hw+rIdGHuF8HnX+YSbB3Jr/rJ+4gA2rdPrB2THe9+BiHMi0
B9AL5tBvv/32tDWyeBZjIDjDw4s64yruszlM4aq5aZQNjBv414NSgS2b8sSk
N2rcSctuw29rQfJSyQjZlZz42ztOqCOsndnkjlNXSZY/Gxgzw3mzFHmC5pOO
IPlg8xsmdHJHyaeo5SkTxGHbIKoN2vyVLXzv+jpKnrvi0cWbibyJKx8yFa6X
qD45qMz4G2u5osoZBWrZDuIjw8gQtC7TEcVGMu3X48L0LsskZHHlNX5Xfgvz
jrjXu+adKpMrnCDyUsLJVruDSRbMS/rPLVFgXp3a32ayD+dl3oDziUkC0/4j
JnskXdYxp5CL49UFEfbrDJO/wDgjxjzef//91DWMu2CdoqmsM7kJ52XegPOJ
iRuMceJsQvSP8D4U6t49JlmSLOsYO/efE85kD/brDJP/wHoJnPmOPXpYV475
ep4rzJtwXuYNOJ+YOMF5zNhv9O6778r3/XnXoDDZJamyjra37iw8JnuwX2cY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYJlvgvdV4DzWVVatWiQYNGoiKFSuGev9Vtsnr8vvJb+nJK/jLDd4PXbdu
XVGlShXrc5nKL6o8BYkkdR/UjxYEXPp++umnRadOnaxh5KJe16xZI99tj7OV
8encubNMy1NPPSU6duwo7rzzTnl9w4YNictCtekg/sCrc134uVTnZNI+cind
ucKwYcNEzZo1xb333hs5rFzRb7brCYpfLGgsW7YsK/F26NBBlChRItC5nTt2
7JDvvcirPiKvy+8nv6UnL6ArN3h3YsmSJZ3PZiq/qPKAbPmfTJOU7sP40YKA
Sd+zZs0SNWrUELt375bfTfaXy3pt0qSJqFSp0gXX8S4otBdffvnljMhBtWmq
P/DrXBd+rtQ5mbaPXEl3VOL094MGDRK33HJLLGHlin6zVU/4/SLzXzAGlQ3w
TgO8yyIIhw8fzgkbDktel99PfktPXkBXbj777DNS+yNT+UWVB2TL/2SapHQf
xo8WBHT6hl0+9NBD4tSpU6lrJvvLZb22aNFCVKtWTfvb0aNHxXPPPZcROag2
TfUHfp3rws+VOifT9pEr6Y5KnP5+4sSJsfWPckW/2agndH6REeL06dN5ah1M
rthwWPK6/H7yW3ryKnm1f5TX/E8UuKxkFp2+YW94r6X3e160P13/CGVOMXjw
4IzIEXf/iBJ+QS1H+SHdcZc37h/Fg98v5lXWrl0r+vfvL3r27ClOnDghxo0b
J9dhzpkzR/z6668X3L9161Yxfvx4aUd4z/GZM2dSv2GtY7169UThwoXlPfjg
fgXejTxhwgQxYsQIMX/+/NT1zZs3iwEDBogePXrION966y0xadIkGb5/7g79
1eHDh4uxY8eKMWPGSJkB1kIOHDhQdO/ePe2ZX375Ra6RxPuYhw4dKtavX58W
nsl2TLKCdevWidmzZ8tw586dK2V1EUfadZjkt+VTGPmBTvdKfugdZQLgPfQv
vPCC/Hhx5YUpPXHlRVBd23RoIy554yybprhN5Ua1P7C+5vXXX5fra+bNm3dB
vGHKjwmb/BR5XP7HJFdQu9CFgbzq16+f6Nu3rxwzU8+7cNmDTSd+3Qcpi0H9
qEuWIDqM07e6fApVrjC+ya8rm/3Z9GrKC4pcYX25H13/6Nlnn039fezYMfn/
qPUVsOV/0P6RzR/odE7tH7n0Hra8U8sdJXxTWFQ/kAvpVph8iy0+l7+nlGnM
jSLOKVOmiKVLl8qwdf2jMG2BMPo1ka16AujyLhP1RC4Avzd69GhRtGhR0adP
n5S+hgwZIm6++eY0mWfOnCnatm0r8xh8/vnncu8XbAzAV0HPRYoUEd988438
qPBGjRol2rRpk+pTYk4U/hFA3/BvkGHRokXiyJEj8nrXrl1l21CxYMECuS9T
la0lS5aIZs2ayb8Rz+TJky+wR6Rp+vTp8m+kpXbt2mLhwoWp33U2bJN127Zt
okuXLmnPN23a1KrjONJuQie/LZ/CyA9Muj9+/Lh46aWXpAyqDv32229lHP76
1pUXuvTEmRdBdO2ydRNxyhtn2TTFbSo3aH8gXtRLKh745VtvvTUt3qDlx4RL
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
Sd3glMdOYq2fdJ57nUPr+m8m5SHW6z3W685r+37bMqkH0uG4TeoWr/25XW8m
x1KqVCm11pEV5vkULFgw+nPQtgAEzV+7VN0nwOvcJeo+kW50XYP1QbDeHmI5
rFExZsyYTO9D/zrmWaEPEnO5atWqpeJwuwYNGqjnOBgnqdcvxLmsUqWKGheE
+Bnr2MybN0/9Dd+FjbJ61llnSbly5dSajsjPu+++W84++2y1LcTKOA81atSQ
F198Ua2jgfOk68KpU6eqc4ltoIxjLRKcr+rVq6sxm5gLhvVt8F3C+E5frCOC
2L1MmTLqMxUqVJBZs2b5phVrLGN9DqzzgzUXMV/Nb05sPI7dCY7ZKf1e5ylI
+sEr7wFrVeK8T5s2TQYMGKDmFKJMoZ8D8/X8zgXKoNPxxPNcxJLXpmU9lnMd
JO/jdW267dvputH7bdGihVqHF+vmYps4Lut+3cqfVx648Uu/SXo0p/rHK12x
lAu3bSAdaItiG3gWjzT68SsPXnnilvfgdy3GWo+anB/TPIzn9WFSp5ika+3a
tYHqJre8cip/bu/1Ohd+x1e3bl3P/ML6UJdeeqmsWrXKNQ+xhtczzzyj5jbg
OTzWsEJa8ML2Ec9g7of+Ds4w9yvwOv9eZdrOtH6y5jnmOjmdQ/vvTMpVkOs9
lusOx+W1fb/7MXjVAygz6XDc4FW3mOzP6XozORaMG8P1gzL4/fffqzi9du3a
ag2RmjVrRvtBgrQFgpYrJ6m6T3idu0TfJ9KJta8ax6fXO3Sj1xbzen6A2BLr
CDp91r6+RaxQbmPZBtb9wD1QO3z4sNHcQqe0WtcORextH78a6/YSyek8hUk/
eOU9to396e3j39ZnpZAu58KUSVl3+1w80huvazNMXpns1y0tsZZ3k/w2SY9b
/RM0XYnYhuk5CVIGTa7FWOvRoGlx2068ruegdUqitgNe5c+J17lwS1cy6r9E
iee9MGj95Cee5cEqyHUXdFsm9YBdqo47TN3idr2ZHAv2q8sP+qOQRqfxnfGq
+2LN31TfJyDWMhuvvEoHbmN5iSi1eG0SERERJRfiZqz5gjYY1iD3m4dCRMnB
a5OIiIgo+fDdW5jTgO8hxndlWfv9iCh1eG0SERERERERERERERERERERERER
ERERERERERERERERERERERERERERERERUTwtW7ZMPvnkk1QnIy6+/vprueee
e+Syyy7zfN+kSZOkcOHCctFFFzl+v3O6yC7pTKYXX3xR6tevH/ftdurUSW6+
+WYpX7586G3xvIUXz/NBlB3E8178/fffS6FCheTCCy+UgwcPxmWbJ6oTtS5K
1L1WOxHyNZY8zElt8ZyiTp06csYZZwSqQ8eOHZuAFIUzefJk+dvf/ub7vqVL
l6rvC0339mt2SWcyfPrpp5I3b1755ZdfErL91157TR566KG4bIvnLbx4ng+i
dBfmXuxkwYIFqg5ifBTeiVYXed1r49nuy8n5Gmt7Jd7XP4W3e/du9f2ZQTRs
2DDOqQlvyZIlRvHR5s2bs0X7NbukM9FwXp966inZs2dPwvbx/vvvx62u5nkL
L57ngyjdhbkXO1m/fj3jozg5keoiv3ttPNt9OTVfg7RX4n39U+rs3bvXdxxb
KjA+yplQ3o4fP57QfTA+Si859d5JlAyMj+LnRKqLvO618W735dR8TUZ7JTuZ
O3eudOjQQZo2bSrHjh2TYcOGyYcffii9e/fOUj+h3/vdd99VZQN/379/v/F+
JkyYIO+995507txZhg4dmulvM2bMkM8++0yNYRwyZIjavxeMd3z11VelSZMm
0TSaHAfmV9x7771yyimnqOPAC8dkms6JEydK9+7d1d9Wr14t/fv3lzZt2sja
tWtl+vTp0r59e2nXrp2KvfW+taNHj6rj++ijj+TNN9+UmTNnZtq2jo/++OMP
+fjjj6VXr17yxRdfqGOxcmu/eqXbi9PnYikTbpzS6ZcHbpzSg23gdejQIbUP
bBfHgTyz8trnuHHjpG/fvuqlx88ePnxYPvjgA/W7kSNHRt/rVfbdzr1TOQ2T
D9rWrVtVOpDGb7/9Vu3Lqa4OUiaczpvfdR/r9avhmdNbb70lPXr0UNfVzp07
o3/zyyO/fSYqzU5Mzkes5yJRZd5t217Xt1Paw9Z3frZs2aL22a1bt+i4GH09
6vTjusL9HEaPHi1t27ZVL5P0m3D7XKxlJx75beV13QS9z3qdL69z7VbHQdD2
go6P9u3bJ8OHD1dpsueVafnyyiu3/PIr205iKZNh6y4viayL/I4tbLshTJ3n
dVx+7T6T/Da95wY5dyb5ZnIOwuafWx4Gvf79rr0w5TxZkGa0xXPlyqXuP7gv
wbPPPivPPfdc9H2DBw+WatWqqXoJfv75ZzWXG+XGz9tvvy1Vq1aNxqXo50T+
w8KFC6VRo0bR96J9Vrx4cc/toXz06dMnUzvO5DgQe6BMnXrqqaoOxkuXNb90
4jw+9thj6m/Y9gUXXKDyANcK4qPt27ereXtXXXWVOt+//vqrSt+KFSvU5xFH
DRw4UP0b5ejOO++UESNGRPeN+AhpRxnU5Qx158MPP5yp3Dm1X73SHeS8mJYJ
L07p9MsDN17padCggcpvbA/Hcdddd8nnn39utE+ksXXr1mq7un8Y28D1Xq5c
OVm1apX6nV/Zdzv38+fPz1JOw+QD/PDDD2rfKLuAfT3wwANZ6uqgZcJ+3vyO
Pcj1C2j3YE0SXWeOGjVKSpQoEf27Vx757TNRaXZicj6CnItElXm/bduvb7e0
h63vvEybNk2Nf8f9HmbPnq3ur0WLFlU/79ixQ7p27ar2h3TAhg0b1DlFekzS
78ftc0HKTjzyW/O6bsLcZ73Ol9e5droXQ5j2go6P0BZ1yyuT8uVXxwQt205M
y2TYustLouoi02ML224IU+d5HZdXu88kv03vuUHPnUm+mZyDMPnnlYdBrn+/
ay9MOU+233//XR3fd999F/0d0o81OgDX8Lnnniu//fZbps+1bNlS5acX9LOc
fvrpsnLlyujv0G7MnTu3Og/oK3niiSfkyJEj0b+bPMvdtGlTlnPidxzw008/
qfITazqvuOIKVTa0Bx98ULWtrdDGPu2009T9XKdHe/rpp6VixYrRnxFXP/LI
I9GfER8h7fZxn9jPK6+8Ev3Z3n71S7cbv8+Z5KUXp/jILw+8uKXn5JNPlm3b
tkV/h7qgdu3axvs8cOCAinXHjx8f/R3OM+ojfRwmZd/t3DuV06D5gOepKIdf
ffVVpt/b54oGLRP6eHV6TY49yPWL8cpYnwrrNmqo163tBK888tpnotLsxOR8
hDkXiSrzXtu2Xt9+aQ9T37lBubv88svV8ygrbMtaxjF32NpWANyTre21RNSN
aLMHKTvxyG+v6ybsfdbvfHmda3sdF6a9ADo+ss6nt+eVX3r96pgwZduNSZkM
W3e5SXRdZHJsELbdEKTOMzkup3afSX6b3nPDlnmTfDM5B0HvGWGuB/v173ft
hc2rZNP10caNG6O/w7OYq6++Wv170KBBKp/ssM4FjtPr2kJsiXKJ9yJexQvj
0rA/5CvyCuNCzzvvPLVeIu4/Oqb04tT+9jsOcIuP/NKZL18+1e+oFShQQF5/
/fVM20CMg3KIvkwnyKdFixap/k7U77fffnumz2Jf9mN/+eWX5T//+Y/rcful
243f50zy0ovbOECvPPDilp5LLrkk0/uwLuWTTz4Z0z5btGih+os06/M007Lv
du7jmQ/o+8a28DzMqkuXLpnq6qBlwp5ek2MPcv2i3YN9+LU53PLIa5+JSrMT
k/MR5lwkssybXN9+aQ9T37nB+s7YPu7XVqh7rWVcp9/aVkD6rW2FRNSNGBMS
pOzEI7+9rpt43Gf97k9u59pex4VpL5jmlV96/eqYsGXbK91eZTJs3eUmWXWR
17FZ3xe03RCkzjM5Lqd2n0l+m95zk1HmTc5B0HtGmOvBfv37XXth8yrZ/PId
z2b++c9/Zvkcxic69XlYoRydf/75qg6wvzTEmxh/WLlyZZU/JmNdvOIjr/Jj
v050P6tfOtGXj+9lQP8f+lvz58+fZTyl1xoLqMfx+X79+qnPoTyaxEdvvPGG
+j4at+M2yV8nfp8zrQ/dOJ0fvzzwYpoeXPeVKlWKaZ8YR4dnI7ieUR/qcT1g
Wvbdzn088wFlENtCn5eVva4OWibs6TU99livX30cu3btcn2PXx657TNRafY6
Dq/zEeZcJLLMm2zbL+1h6js3Ok/t9xT7fOh4pN+N3+eClJ14pNfrugl7nzW5
P7mda3sdF6a9YJpXfun1q2PClO0w6YawdZeTdKmLwrYbgtR5Jsfl1O4zyW/T
e24yyny83gP2e0aY68F+/ftde2HzKtn88hTz2FG20NdohTHhfs8FsKYB5sXZ
42/kJfIesaQ1zsT7rrzySlm3bp3ndsPERxiHqmH+r0k6MQcU6UQ9jD5Np/mG
bmUI2zjnnHPkm2++if4O9aOuz9Fn6RYf4Tu6rPcx+3H7pduN3+fiHR+Z5IGX
INd9LPvE3AbMc7SPxTYt+6bxUZh80N8LsmbNmky/R5qtdXXQMmFPr8mxB7l+
MQYf+7DGodb0+eVR48aNXfeZqDQ7MTkfYc5FIsu8ybb90h6mvnOj89S+bk7P
nj0zlXE8H7WnH/flWNLvxutzeKYapOzEI7+9rhuMpwl6nzW9P5m2j8K0F0zy
yiS9fnVM0LLtxaRMep2HMPmW6LrI5NggFfGRyXE5tftM8tv0npvoMg8m5yBo
fBTmerBf/37XXti8Sjace3sfK2I5XLeAtTCw/geubQ3HiflX1t85QV8Z5rLh
2K1QPrEN/L5Vq1aZ/oZ1EOznyU6Ps8SzGNPjAJQbvEf3/eh0+aWzXr16as4b
xn1gXpx1XQcN4zXRD2HvH0Q5wT6t8zsx7w59UMhbjLXX8ZG1XYDyg774H3/8
Mctx6/T7pduN3+dM8tKLPZ0meeDFLT2XXnpppvc1b948Oi49ln3i3P7rX/9S
fbxWpmXf7dzby2nYfChVqpR07Ngx0+8wnr1gwYLRn4OWCWt6cd5Mjj3o9Vu2
bFkV51hhW9i+Xx5dd911rvsMm2asLYX7Hq5xE37nI8y5SGSZN7m+/dIepr7z
Urp06Sxl49FHH83UHsHzXNyvrfvAmHprX3si6kbMYQ5S3uOR3+B23WA+S9D7
rMn5cjvXYK/jwrQXTPLKtHx51TFBy7YXkzLpdR7C5lsi6yKTY4Ow7YYgdZ7J
cTm1+0zz2+Sem+gyDybnIEj+QZjrwakt7nXthc2rZJo8ebI6/2eddZaag4G1
/JDGu+++W84++2zVf4FnG5jbhblT6IdD/0mtWrXUuF8TuParVKmi1gjEMx/c
Y+bNm6f+9s4776h1LLDuINommMflN9916tSpKv+RZpRTrKdhehyAtTzwM8b+
WtcF9UonYhRsB+UV/ZB4FoE1c3Q8M2bMGClWrJjaP+Jy6/qJKA/Vq1dX443x
nA/r0i1dulSt0YR1eBAb4YV5MHrtReQx0oLtWo+7TJkyah8VKlSQWbNm+aY7
yHmJJS/dzo89nSZ54MYrPfhd3bp11Vw/rG157bXXysUXX6yu/1j2ievz1ltv
zdKPDn5l3+3cO5XTMPkA6LPG9YJzhbkaqL8wzxJzK2vWrBl9JhOkTDidN79j
D3L9AurSGjVqqOdYWNsGdad+DuCXRzjfXvsMk2a8P0+ePNG1sfyYnI8g5yKR
ZT6W69st7WHrO788xT4xBxrjXbHePtoB9vWi0KePuhzr3Q0YMEDNfcd9GuOW
9NzfeNeNQcp7PPJb87pugt5n/c4XriO3c+1Ux0HQ9oJJXmG9WJPy5ZVXXvnl
Vbb9+JVJv/ITpp2VqLrI9NjCthuC1nlgclxO7T6T/Da95yayzOt88zoHuGcF
zT+vPPS6Htyuf79rL0w5T2foI0MfSpA5VPisfc0KPU4N/TGIi53ap4mAmFev
UWZnTyfWHsTzS+t8I3xPDvocsLaJKTzjQ91u3YbTfDeUHb2WZCyc8jeRnwvC
NA+SvU+8x/7sxC5M2Q+SJr+06DKCZ2M4f07f6Rqvc+t27GGvX9xb3NLnlkem
+wyaZuwD42hjYXI+svN1FiTt8Sjjep6xfby/hnOp13LA+cS/rc8xw6Tf6XPJ
ul/5pdfrugl6n01E3RzPOtPONL1eeaXTGM/r0qtMhq27TCSyLjK93lLF77jc
2n0m+R3LPTdRZR4SfQ7ieT2YXHuJzCtKPPTXI253grE+9nGUlD3g2TS+Qw3w
fX362Qed2PA8z/SZKiWHW3xEREREqYH+HPQfWb8jB/E6xhG7xU2U/vC9Uuhf
xpqEsfYXUM6EZ9D2dfsptbBWGcZwYAw9xpUEWYudiIiI4k+vhY91cjBOEu3p
ZI2VocTYv3+/GvuK8esYg0+E5x5Oa1NS6mDMP75rEOPY0d+b6PG4RERERERE
RERERERERERERERERERERERERERElDw9Iv+1iPG/0ZH/iIiIiIiIvPzyyy/q
OzxTAWtUBfnerzOXniknxfjfDSNvSMAREJ0YsK7RPffcI5dddlmqkxI3kyZN
ksKFC8tFF13k+P1j6SKR6Vy2bJn6jvHs6IcfflDfr4014fFq2LCh+h7pF154
QX2HdenSpdXvrd8nTeGYlBecA3wXeXbRqVMnufnmm6V8+fIpTYc9b2Opc8Nc
x/E4X0HrKKxX2rp1a3nkkUekUKFCmb6H1GrXrl3qu+UffvhhadKkiWzevDnL
e7DeHr53fujQoYGPw0mHDh3kpptukpdeeimu2433trFOaIsWLaRcuXKq7sN3
KuDctmzZUmrWrKnqQuR1doNzvWHDBs/3JOLcb9myRapVqxZdc3X+/PnyzDPP
SJEiRdTLK034brd7771Xletnn31Wfc9prPcrrNuL98Qq96rcUiDy336H/4aP
HS57j+6N/vxH5D/ER9cNvy5YJhGRgmv+b3/7m+/7xo4dm4TUxMfSpUvlpJNO
Suv4CBKVzjp16sgZZ5yRrddaRrvp4osvzvL7P/74Q7V5e/XqlYJUZZadrgkv
fuXl008/lbx586rnrtnJa6+9lvLvRXXKW9M6N+h1HM/zFaaOqlWrlpx33nmZ
vvvOqmvXrurvH3zwgePf0T4uU6aMPP/885m+t6ldu3ayYMGCmNNjd8cdd8gX
X3wRejvJ2DbiTMRIdviujMceeyxu+0kWHMvbb7/t+ne3cx/WU089JevXr8/y
e8Sb11xzjfpePzfvv/++uhbQB2QXy/3qww8/VN+pHgvER3dG/tPwvWb43ud6
9eqpNOFZg7Yv8h/jI6LwlixZYnSvDvLMI1XwbCo7xEeJSie+h2bx4sVx3Way
4bnhVVdd5fg3fCdtIp77xio7XRNevMoL6ge0Kfbs2ZPkVIWH9kyq4yOnvDWt
c4Ncx/E+X0HrKPQhIb5DP8qAAQOy/B3P7REfYdvr1q3L8ne0iZ9++mkZMWJE
pt8fOXJEzj77bFm9enVsB2Kzd+9eOe2001R/QrzFe9uIj1FenNrl6MNADJHd
eH0Pl9u5D+unn36SqlWrOv4Nz1Lw3da456Ds2iGmwneIobw69enGcr/C+bzz
zjsd9+PGHh8h7tq2bZvql2J8RJQYJvdq1PfZaQzeiR4f5QRO9xuUVe2NN95I
dpIyyW7XRFA4zlju4+kkHeIjJ6bxURDxPl9B66iFCxdKz549Vf537Ngx09+Q
Ply/OD94Zu8EbWSn5/wzZ86UK664Iqa0OBkzZoyK3RIh3ttGfyPOAcZbarou
XLNmjWPclJ25nfuwEEfie+qdID7C2LpTTz1Vvvvuuyx/R4y/b9++mOIjr/sV
+n1mz55tnHZ7fKQxPqJ0NX36dNUf+9xzz8nOnTvlnXfeUePeP//88+j4VsD1
jmvqo48+kjfffFPV8fbttG/fXo0bwHM/9L9a6zy/z3vBOIR3331X3YuwTYxn
ttL3ajyP+Pjjj1U/MMYF6PRjDDrG3J5yyilqO3jZxzagznnvvfekc+fOmcYK
z507V43Fbtq0qdoevr9dH5t9zIjbNvzyxonTPd0kD2fMmKH6vfG+IUOGqH15
8Xu/X95b06nzCuPw0caB0aNHS9u2bdXLDs+V33rrLenRo4d0795dlT/APfTV
V19V27HmsVdaYjlP4HauYs0/L073G+s4ezw3jTXdbmI9Hr9rIuj16pd/bunU
3MqE19/cygu4lZl45LvXsfodpxs8p0Va+/btK99++61Kjz0+8tq2X/475aFX
/eSWt351rtNnE3mP8MqToPER7oXIL/QDNG7cONPfMP7v119/lcqVK6sxeHaY
r4Rj69atW7SNuWLFClUWn3jiCfnPf/6j/o3fWW3cuFHlJ8brOR0/0oPygXoV
c0Ts/b9+n/fit2234zKB8445YBrKBsoBoD9NnxvcN/r166e2j/oR9RSOBfEV
TJw4UZVb/O3nn3+W/v37q3PhdCxIJ/pLcE1Z+yKxDfwNZR8xDMohXvY5Zogl
Bg4cqMqjNSZBPIfr0y02cDsHpvv1csMNN0TvrXaIjwBzhXDvsUI8j/gI12Es
8ZH9fmWFbcQyb4zxEWU3KPOoi3LlyiVt2rSJXnt4Xoa5fvqeiL+hrgDdt2rt
O8Z2EFfh+kIdi3sHyryu//0+72bw4MFqLqIev4s6EfNtUedpqKeRftS3Or1o
G2DOLH7GPRx1Pp6roF7Cy1rHYAwx+qz1M0vcF3CfBdRluPdj+yNHjoyON8Dc
RsSUJtvwyxsnTvd0vzzE885GjRpl2kbx4sVd9+H3fpO8t6Zzx44d0fEmui7F
8yzsw17vDh8+XM3x1m1c3MdKlCih/o1zgzHp1uP3S4vpeQK3cxVr/vnB/eaf
//ynuo/gno+2OMZ4W8WSbjdBjsfvmghyvfrln9c1Al5lItbyAl5lJmy+ex2r
33G6wTxppE8/d0Y98cADD2SKj7y27Zf/bnnoVT+55a1fnQv2zybqHuGX30Hj
I8xNxzYxT71ChQrR36Oe03MxMF9j0KBBmT6HY3j88cdVmxyfr1Gjhvo91vzC
uS1YsKC65+Lf1jFamONUtGhRdW3iczj3U6dOjf4d5blKlSpqOziX//jHPzLF
gn6f9+K3ba/jMoG2xK233qrqQrQtbrnlliz9IIitUX6RflwLt912m4pDEHcj
nsR5RGyPmAJ5qPO9WbNm6n1Ox4IynidPHnWNg3UbOKcoj9gvYh1sU0OdUapU
qWi9gHGWKL8o04hDEAP997//zXKcbufAdL9ecC+9/vrrXf+u4yOcP8z5Qxo0
xJmIw/ziI7/7lRXmD6E+McX4iLIj3OtQPu1rNubLly/6jAfP0CpWrBj9G651
rIFihWc2GLOsn6v8/vvv0b+ZfN4Odcq5556r1kuxwjxE6xhcnX77ePUHH3ww
OlcR43ZxP7fDGPDTTz9dVq5cGf0dxpXnzp07er/FcWD71j5r1MFYW8p0G155
43bs9nu6Xx7imRWeTeJ5nObV/+H1ftO8t6cT86mt8RGgvrbGR5iTcOGFF6p1
sDS0N6xtuU2bNkW3a5oWv/MEXucK99hY8s8P7jeXXHKJ6sOYM2eO2hae7dmZ
pNtNmONxuyYgyPXqVZ78rhGvMhFreQGTMhMm392O1aQucIJn1Rhz9dVXX2X6
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
7Rdswz42zGnbpvkfJA+9+NW5sQh7j0hk3WsKx4D2m/VZvpV1fTMrnC/7+Eor
+/f4WNcVMfm8F79tg99xhYVYA2uiaShT1n1Z5x6hvnIr337HYp27pOHeZP/e
M+SldS1Iazrdnp14nQPT/XpBPIK4JB3gGYHTPd0N4qPrI/+NNPhvaOQ/jq+j
dOA2lpyIiIgo1TCeC9+PeiJDLIW+TLcxdsmCsQbWNQhNID46Kcb/GB9RKuEZ
DfqzER/huz/c5qoQERERJRv6f/HdtBjrhXFpJzKMYbXPU0wm9KlhPJ/bOBw3
hVsWlnEx/vdQ/Yf8N0yUIJi7h/lG+M4DzBe0jm0gIiIiSiXMD8S8Hsw/0WvG
ncgwZwl5kgqYz2kyn9IO35+FdS2s6wu6wffm4r1YC4OIiIiIiMiP2zy2dN0v
1qbAs3iTZ/CIv/DeVMWARERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERZHD0qcuBAbK9D
h1KdaiIiIiIiovjr0EHkpJNie91wQ6pTTUREREREFH86PqpfX6R5c//XFVcw
PqKoo0ePyoYNG9T/4ciRIylOEZ3Itm3bluokEBERBfbLL7/IN998k+pkJMzh
w4cztRvTlo6PNm82evv6G2+U49dfn+BEUbpD+X7ppZfUq2/fvtK+fXsZNGiQ
NGzYUNavX5/q5OVYX3/9tdxzzz1y2WWX+b532bJl8sknn6h/T5o0SQoXLiwX
XXSR/Pnnn66/S5ZOnTrJzTffLOXLl4/L9hYtWiRPPPGE9OrVS+699145duxY
XLabHZiWCWt5SKVUpSOV5d1NOqYpGeJ9/ZtsO2i58/tcvPdH8ZMdz8GWLVuk
WrVq0XvYgAED5Omnn5YSJUpIyZIlpWXLlpnef+DAAXn88celWLFiUrx4cRky
ZEiWbb744otSH30gKbY5Emc0aNBAunfvLuPGjZNXXnlFZs6cmepkufOIj0aP
Hp0lvjtQsKBszp07WamjNNW2bVv54IMPMv0Ozzty5cola9euTVGqTgyTJ0+W
v/3tb77vq1Onjpxxxhly8OBB9fPSpUsjl/pJmdphTr9Lltdee00eeuihuGzr
1ltvlRkzZsjPP/8sRYsWlf3798dlu9mFSZmwlwdt7NixiUyacTqSIZXl3U06
pikZ4nn9m2w7aLkz+Vw895dMyb72ky07nAO7p556Kssz5j/++EMuuOAC1+cJ
hw4dUjH6unXrsvzt008/lbx586o+qVTLnz+/eiak3X333VK9evXUJciPLT7C
c9guXbpIvXr1VJ29a9euzO9/8EHZlSePfPbZZylILKWLSy+91DEOKlOmDOOj
BFuyZIlRfLR7925ZvHhx9Gc8u7G3w5x+lyzvv/9+XNpHSPvJJ598wsVEViZl
wl4eNPT5JpNbOpIhleXdTTqmKRnidf2bbjtouTP5XDz3l0zJvvaTLTucA6uf
fvpJqlat6vg3nKszzzxTHZPdxo0bVbvdDvcFxFt79uyJe1pj9dtvv8k555wj
x48fj/4Ox7t69eoUpsqHLT5CnIox/D/++KNrfITxdXfeeWem46QTB8776aef
rvp97T7++GPGRwlmGh/Z5dT4aPv27eoY0n4scwIFLRN79+41GquZU6RjLJKO
aUqGZMdHiZTs/cXDiXbtZwfPP/+8TJgwwfFviCVQT3z00UdZ/ta5c2c1n8cO
5zhd2um4R+XJkyfVyYiNy/g6r/gI6zOgf2n27NlJTCilk4cfflguvPBCGTx4
cKYygnlJGDc7d+7cSNHqIE2aNFHXKGC8Jsbl4aVNnz5djUF97rnnZOfOnfLO
O++o8dyff/654xySBQsWyLvvvqvuR717987UZ6D32bRpU/XZYcOGyYcffqje
Z+9fnzhxohoDi3oFzy/69+8vbdq0icZ2aGtj3DLqojfffNNojKzpMceSTie6
LYxnGYhHMefmiy++yJRfGHf96quvqrTobZrGR37HjnOG+Wbt2rVTz6V02v1s
3bpVnTfMV/v222/VZ5zaFLg/vPfee+rcDB061HObKA9II46hR48eqmzoOMmr
rHgdg9P5QV7ghXEMyCvkD9KIfLcKUm5MPueX535lwqk8YJwD5mqdcsopKp/w
Qp757S9MWp3SESbf3LiVoVhjETx7fuutt1TZQn2BOgpMr3WT4zJNE8aPYtwG
toc5BshXk2N2Ylrvmh6nSRoScf2bbtup3GH+A96Pl56jgvsXxo3jdyNHjnQt
r0H2F7TedMuPMPeRoNe+X5r8yqhdmH2B133c7dyB270h1jyNVz5oN0Ta1vo6
c4IxdJhratesWTPH97ulz6Reimd9g221bt1a9R/p8oZ69YUXXpBu3bpleb/b
ef3qq6+M25Ve5cr4fhMwPsK2cbx0YlqxYoVcfPHFqoygjsW4UpQzzBWEHTt2
SNeuXdXf8Xwf8HyjUaNGctVVV0W3g7/h+sC8JZR/XeY7duwoRYoUyVQnIRbD
vEXd/sVcE8xtxr0KcJ9HuxDbwr0N8xzh2WefVe0ADdfmY489pp6r4D0Y14tt
4T6n4yOkZeDAgerfSAP6S0eMGOGZJ6bHbJpON2gL47O49nX+oP5CzKp/Rj72
6dMnU7vLND7yO3YcG9pSOCbcX3799Ve1DZQJNz/88IM6V3pcNT7zwAMPZGkf
vf3222p8gX7mhTEFqCPd4DgxJhj7xzwOvX2/suJ1DF7nB3NL8X7kC9J41113
qTalad65CZvnfmXCqTwglsK95dRTT1X5hpe+/rz2FyatTukIk29OvMpQLPHR
8OHDVVtEx0SjRo1Sc6TB9Fo3OS6TNC1cuFBt2/oZzMU2OWYnpvWu6XH6pSFR
17/ptp3KHcYkoX122mmnqesHsN/XX39dSpcurbbj9Lmg+wtSb3rlR5j7SNBr
3ytNfmXUSdB9gd993K2u8bo3xJKn8cwHwHV1vc/aZ/patJYZxAL253R+eedX
L8W7vsGYwO+//17NBdPlDecI58FeB3id1/nz5xu3K73KlfH9JmB8hDaJUxxL
Jw6U+Z49e6o5g//85z9VeXkQ4y//umYwH9BajgFtDvt9FfcmvE/HVlq+fPlU
ew9wfZ577rlqDKsV1nKxjtf9/fff1ba+++676O9QH+K5i3bFFVeoa0ZDmu2x
PtaLqVixYvRnPOt45JFHfPPE9JhN0ulG55d9TDGOA8+EtU2bNgWKj0yOHc/V
0a7Qfcg4Hjf79u1TeY5nP1b2Oc14ToRxmytXroz+DvVh7ty5PccI6PF1uq4y
LStex+B2fjDPybqGOO6btWvXjv4ctNyEzXOTMmEvD4AxG2gLOHHbX9i0OqUj
aL7Z+ZUh0/gIdRv6x7E2oIZ2k7WNYHKtmxyXSZrQJ4j1Ga3fn6Cf5wa9bkzq
XdPj9EoDjitR179p3QJO5Q5taNQV1jnjaFNvtrSHrJ8Lu79Y6k2T/AhzHwly
7XulCX1pbmXUS5B94fhN7uNO90C/e4NJniYiH+bNm+fbpkYMh7xq1apV9HcY
k2fv2/LLO796KVH1jX0MuFMfst95NW1jeV1rxvebgPERYrZrrrnGKRvoBIRn
MYiVUGb0vQPPCOzlGDG6W3xknz+CPu5bbrlF/Rtrh+d2WDcRa7OgvtPXpd4n
ng1a93n11VdHf8b9H/3CWoECBdQzQztsE88B0AeL6+n222/3zQfTYzZJpxu3
/Hr55ZflP//5T/Rne7srlvlHfseONCBWwHgzP+iHxz7wzNIK80mtdSPaJbhf
45yiTwYv9Kvjs7jPubHHR6ZlxesY3M7PJZdckul9WDf1ySefzPS7IOXG5HNe
6TUpE07n2quN5LW/MGkNWuZM+JUh0/gI63rhfV7tV9Nr3e+4TNKE92CuyHnn
naeeR6ENps910OvGpN41PU6vNKBtmajr37Ru0XnolM/oE65UqVL0Z4yDcPtc
2P3FUm+a5EeY+0iQa98rTRiz5lZGvQTZF47f5D5uPwcm9waTPE1EPowfP16t
veoHa2BhfSyM/0O87jSOy6TseNVLiapv7PGR07w9v/MaS7vS61ozut8EjI8w
XhPliU48GKOt+ybt8HxVr88fNj7C+FF8LwggvkcflR3GvVqfm5vsE2kvVKiQ
ehaDsRIYG6jH0Gi4bvCefv36qb+hTkhEfOT3Pidu+fXGG29E8wuCxkcmxx7L
egDIb6fn1PY2BX4+//zz1XHZX17s8ZFpWfE6BtPzg/jI2rYKWm7C5rlJmTCJ
j6xj3932FzatQcucCb8yZBof6TKb5f5nYVJGTI4rlj4tPG+tXLmyuvfqvqyg
141JvWt6nF5pSOT1b7ptcMtnjCXC83DcD2bNmqXmPrh9Luz+Yqk3TfIjzH0k
yLXvlya3Muol6L5M7uP2c2Bybwhb3oPmA8bJYWyrH6QF6cMzHKyRhTlTsead
Sb2UiPrGJD7yO6+xtCvdrjXj+03A+AjbtD9LpRMD+nKfeeYZx79h3hzGfQKe
v9jLMcq+aXyE61Jfk5hLi7ocz0usMIfP+lzH5NrB80E8F8Y1gX5Ze9806lLM
I7R+fzXqCX39eK1LYnrMiYiP8P1v1no4SHxkeuyx3OfxPA37WLNmTabfY7yy
tW5EuwRz2ezPZpEmr7rXHh+ZlpV4x0dBy0088tykTLjFR5iDoFnnyjrtLx5p
DVrmTPiVIdNYBG1mvM/e9rCWRb9r3fS4TNKE597Wviwc35VXXqm+7yTodWNS
75ocJ3ilAXmYqOvftG4Br3zGuCZ8xt53ZP9c2P3FUm+a5EfY+CiWa98vTehD
cCujXoLsC8fvdx8H+zkwuTeY5Gki8gHjxvA9fn4w5g1jf3HfwfhuJ17pQ9zj
Vy8lqr4xiY/8zmss7UqnchXT/SZgfIT6weRcUs6D8nrWWWepGNwK/ZXoC12+
fLn6Gc/YUD6tcwlxPVufTYK+T+v1cwDXAMowyiGgLxnr7eC61XAt4r5m/R3K
pb2fF8+GcG1rWHsRcy8xjhbjRO3rxej7uTXdmJuJ5xhIB+YPujE9ZpN0unHK
L9T36A/X+QV6HLX+vgT9s/VZjP13pseO8cYY22u6dmipUqXU3G8rjG8uWLBg
9GdsC/Occa+ywn3bq97VY8z1vCDTsuJ1DG7nB+MarJo3bx4dxxy03MQjz03K
hL08gI4t9fm35r3T/uKRVns6TLaJ9Y9wH3Vaw9bKrww5XQNuypYtK40bN870
O2xXl0W/a900r0zShP1a5xwA5jCjjRL0ujGpd02OE/zSkMjr32Tb4FT+NbSv
/v3vfzuuJ2f/XJj9xVJvmuRHmPtIrNe+X5owZ9+tjHoJsi8cv999HOznwOTe
YJKnicgHjAPD+tdO6/baoR5Bn6fT2m9+6UP7369eSkR9o8+z9fgwJwNrY1j5
nVfTNpZbuYrpPu0SH02dOlVtQ6/3FPVXfIS+Pfu4ezoxID5CWcIzM1xD06ZN
U33DmKeO/korPAvA+G68B33BmPeHcoVnlHqOpL5P41kC1tPEsxqsEzVmzJhM
20L7F3Mo0b+L5wq1atXK9F0AkydPVvcuxG7lypVTaUKdh+9oPvvss9WzdDz/
wL0fP6O+Qz8xnqFh/RLdTsA1gu90xrhbzNHEOmBYGw3fQY11T/RaR278jtk0
nW6w/xYtWkTXl0ZeVKlSJVN+4fpF+w77wL0bz7Qwbhk/V6hQQY0jwXvsvzM5
duynWLFi6nN4huW0do4dnrNgrRrcO7CODepSlBfU8TVr1ow+z0P9i2PBGB88
38H7MW/VDfIOeYi0YM0pPYfUr6x4HYPX+cHv6tatq84j1hm99tpr1TqOiJOC
lpt45LlfmbCXB6zno6GsosxhjLle59Rtf2HT6pQOk23ieNB2cBvXa+VWhpzK
uxe0qWrUqKH6CLF2HdoD1rgBvK51tLP8jss0TVh/G9cP1o1FrIi1IqxzvmO9
bsC03vU7Tl2Pe6UhUde/6ba9yj+gzXX55ZdnWnsFnD4XdH9B6k2v/Ah7H4FY
rn2/NPmVUSdB9wV+93G3c+51b4glT+OZDxryAHWEH732QJb2uUHemdS38a5v
rOcZc32wD9yr0MeC9enwHErXAX7nFfzqI69yFdN92hYfIebC/EzdFkB9iXt/
9Dr7Kz7CuvLYLp2Y9NqmGK+LegjrPOm1MO0QT+nvSMazAPzb+kzNOs4DdZfe
thv0j2IbQb73DOtEPvroo5me1WI+FZ5XYN0UK/RjW7/rFu8zmVcLfsccLyb5
FUSYY/eCc6fTi+eXqMucxrvgd/Y1hoLuL2hZCSpo3sUrz4OUCTxnxVrOphJR
Pvy2iX9jzIWpeJUh3Le9tuN3rccjr6zr9uO5p33+ixbLMcda75rWaV5pSOT1
b7ptN9bvR0vG/mLdVzzKspNYr33NnibTMhqEfV+x3Me9thmPe0M88wFtarSt
TSA2CJI+zateSkR9YyKW8xq2jWVUL7v0H7n6Kz5CX3Ii2nt04nEbB58I6Dt1
GmMO1113XZZxyUSUHvBs168vgcwls94liqeceh9Hm//+++83GmOXE6XdeQ0Q
H+2PxHFu88KIYoHnb1hjC/dprAPrN0Y3LDwnxfMJrKWpIc7HOEG365KIUgvP
9pzW4Kdgkl3vEsVTTr6PY2yYfX7biSLtzmuM8dHxBx6QDeecE6g/lsgO42gx
7h3f5Y3vTbL2dyYK+tPxPRaYi4txxxizk6ixC0QUHu6RTutTUTCpqHeJ4ikn
38fRj4K5TyeitDqvMcZHv113nRw0WDuSiIiIiIhis9l0TBclTozx0aFChdT8
IyIiIiIiohxHx0elSok8/rj/68ILGR8REREREVHO1LVrRswTy8v2PWhERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
RERERERERORswYIFctNNN8mkSZNSnRQiIiIiIqKU6dWrl5xxxhnSokWLVCeF
iIiIiIgoZb788ks56aST5Pnnn091UoiIiIiIiFJm1apVcs4558j1118vR44c
8XzvwYMHZeLEidK/f39ZunRpklKY3iZPniyNGzeWYsWKSenSpaVRo0Ycn0hE
RERElE3Vq1dP9R199tlnnu/bunWrFC1aVBYvXiwHDhyQTp06ySuvvJKkVKY3
5EeuXLmYH0RERERE2djevXvl73//u5x22mny559/er63Vq1a0qNHj0y/y5s3
r8yePTuRSUyaHTt2qL6gUaNGqdeECROMP4v+IsSYc+fOTWAKiYiIiIgokWbO
nKna9QUKFPB839GjRyV37tzy448/Zvp9xYoV5YUXXkhkEhNu3rx5UqJECald
u7Z069ZN+vTpo16ffPKJ8TbatWun8ufYsWMJTCkRERERESXSp59+quIjzJvx
gn4RvG/JkiWZfo+Y4s4770xkEn0hxqtcubKUKlVKBgwYIOPGjZMKFSpIy5Yt
1ZhAL2PGjJFKlSqpvqMwChcu7JuHRERERESU3tBPgrjn8ccf93wfYg68b82a
NZl+36xZM7nmmmsSmEJ/27Ztky5duqj01ahRQ8VF3bt3Vz+3atXK9XOIiUqW
LKnWnAgDc4+wLnrXrl1DbYeIiIiIiFLLND4aPny4et/vv/+e6fcYW5cnT55E
JtEI+rWQvvPOO0/FO+vWrZNq1arJwoULXT8zbNgw6du3b+h9Yz0/7Bvj9IiI
iIiIKPsyjY/Gjx+v3rds2bJMv2/YsGHK+49Ax0dFihQx/kybNm3UenwYX+f0
qlOnjtF22rZty7lHREREREQ5gGl8tGDBAvW+WbNmZfr9008/LXfffXcik2hE
x0dlypQx/kzv3r1lxIgRat0+p5fpuLv77rsvpv0SEREREVF6Mo2Pjh8/rsbR
oR/JCnFB69atE5lEIzo+Klu2bEyfqV+/fqj96rlHmO9ERERERETZm2l8BE2a
NJEOHTpEf8Z4sssvv1z1LQHWkStXrpxs3rw5Yel1EyQ+gubNm6s+pKD0uhXz
588PvA0iIiIiIkoP7733nmrfP/roo77v3b17t5qv880338iuXbtUbIHvC9IQ
Z6CPaeDAgYlMchajR4+WfPnyyZlnnikXXXSR3HbbbbJixQqjz2IMHeK+evXq
qbGDft+Rqy1dulQaN24sN998s9ov5ioNHjw4zGEQEREREVGKYf1rxEf58+c3
ej/6jLBO29dff+343UKIN9Anld3gmDp16iRVqlRRfVB41axZM9XJIiIiIiKi
JIplfJ2JqVOnqu+SJSIiIiIiym7iGR8dPXpUfU8rERERERFRdhTP+Ajzk0zX
xCYiIiIiIko3sazPQERERERElJNhPBzio4ceeijVSSEiIiIiIkqpeK/PQERE
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
N/p3xCJ58uSRgQMHxu0YRo8eLfny5ZMzzzxTLrroIrnttttkxYoVRp/FGLom
TZpIvXr1ZNasWWpcnYmlS5dK48aN5eabb1b7xVwlrHeeiPfEy8iRI+XSSy9V
MSsRERERETnLnz+/ipG81nqz2rdvn6xdu9bzPevXr1drNzhBTIJ5T+kEa8Z1
6tRJqlSpovqg8KpZs2aqk0VEREREREmm5yChHyMZ8H1Ic+fOTcq+iIiIiIiI
YoFxc8WLF5fTTjtNjTFLJKyD57SGAxERERERUbr4448/1Jyhq666KqHz93fv
3m28bjYREREREVGqYL5QhQoVVIy0evXqVCeHiIiIiIgo5YYMGaLWtSMiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIqL0cuTYsei/
9+3ZI2t/+03WrVsnv0X+f2j/fpHI37dt3SqLfv5ZvRZHXjsiP8uhQ3Jw925Z
vnKlLFq6VBYuWSJ7Iz/L0aORjR6Rbdu3yy78TERERERElCbmzp8vI7/+WtYt
WyaCeCXy+mHiRBn++efy1WefSZ8ePUQ2bxbZuFF++fJL6dmsmbzfsqW817y5
bPvuO5FFi2Rs9+5Su0QJ9ar76KPyAz4zfbpsGDpUXqhUSWoVLy7VHn5Yfh4y
RGTBgshO58rT5cpJ1YoVZfDHH8vcyHslEnsd/uMPmfHjj/Lnvn2pzhYiIiIi
Isohjh47JsfQT/OXTZH4pm27dtK+bVtZOH68yPr1cnjlShn+3ntSrUwZKXrX
XTLu7bdFZs9Wcc3iSMwyrWtXmdatmyz+6CORCRNEvv9eZPJk9ffoa9IkOY6/
TZsmMmvW/16Rn49HYiyZMkUkEu9Ef4+f8f7I3xb37StzevVS+1g+aJDIzJmy
JxJvta5ZU16oV0/Kli4t/SJxl4rZjh9XMdOOXbvkwMGDKcxZIiIiIiLKDvb9
8YeMGTdOJkZijGZNmsg0xBw//yyyZIl83KaNtKpcWdpXqyZ7R4/OiGsiMcqf
o0bJvm+/lQNjx8pRxD+IafCaOlXkhx8yXoh9Iu+P+wvb1fvA/iL7Rax1KBK/
7f7mG9kybJjsjaRPx2S9X3xR6pYvL3X+6nMSjO2LxEr7GS8REREREZ3Qtu/Y
IR/06iXNmzeX7774QmTtWtkViW96ReKiwZE4YkSHDrJp6NCM2ELHO+jvQSxi
jVHwd/1KRAwU5GVNk06XPoaZM2VO796qz0kdy4IFMj1y/DVr1JAWkbwYF4n1
jlj6zYiIiIiIKGfB2Lgd27ap9Q5k717p0bq1NK5cWTpUry4/9uwp2776KmPM
GuKISPwgM2ZkvDCWLdWxTiJeus8JMVPkZ/SBLe3bV6a8/bYMad9e9iOOisSL
OzdulAWLF6u1JNjHRERERESUvU0cO1b1EVUuU0ZGdu6cEfv8NXdHxQmIAzBG
LafGQbH0NyEf8NL9ZZH/L+rTR9pVqyb1ypeXt155JWM8HhERERERpbVDhw+r
da5n//STTB0xQmTFCpH582Vp//7y3Ztvys/9+sn+MWNSH4dktxfix9mzZePQ
obIU85Ui8eXxSL4O+eAD6ROJnTZv3arWsSAiIiIiojRw4IB6dX75ZXnuySfl
2fLlZRrWxUbbfsKE/80Z0v0iqY43sutL97P91a+04KOP1DoVZQsVks8RNx0/
HuDkERERERFRWGPHjZN2L70kvd56S45gjlAk/lmE9bPRjsfPaMunOp7I6S+M
R5w5U/aNGSO/fPppxprma9bIL0uWyIHDh43PJRERERERxWYb1lX4q5/o+379
pOKDD8qX7drJxiFDMr43CH0a7B9KXZyEeBTnIfL/z9q3l6bVq0v/vn3NTi4R
ERERERmZO2eOdOzYUZrVrJmxroL+biG0x/FKtzUV7H1XlrXAj+NnxHB4T6rT
mchX5Pj/GDFCOtSoIRvQp8Rxd0REREREgRw9elSOHTmivq904DvvyAtVq8qQ
l16S1Z98kt59Q5G07R87Vu666SYZ/uqrGTFQJDaqXbKkPF+pUsbPkfju45Yt
5YH8+dV3yqY8zQmOkY5EYtkj48er71bavXmz7EP/HxERERER+dq5a5d89913
0qBuXdkUiTPQvj40bpwcifxO9b+g3yXVbX6f+Gjvt9/KSSedJD0bNxaZNUvF
Q7dcfbU8/N//ivz4o/rdS08/rd6T4+Ojv/JE/X/KFPnqlVekXbNmsn37dv/C
QERERER0Als4d660qFNHXqtZU0ZE2tGH0eeQzn1FPvFRr6ZNM+KhSHx0+w03
SMm77orGR+2rV5e/nX76iREfWV/Tp8ucXr3ktUiMhFiYiIiIiIj+Z/HSpbJu
yRKRZcvkz3HjZMuwYRntaMwxym6xEeMjs9e0afJTJEbaib41IiIiIiKStWvW
SNt27aRM4cIy8513/jduDussZMe4iPFRbC+9nsbixfJ7JDYmIiIiIjpR7dm2
TZpUrSp9n3tOto8YocZcHU91e53xUcripPdbtJDvR4/OUk6IiIiIiHKyRXPn
ivzyi4qFjmK9BfQZ5bTvb2V8FHN+Yf2NLo0ayehvvrEXGSIiIiKiHGfL1q3S
q0cPGdimTfYeO8f4KDGvKVNk96hRMn/oUDl6+LAQEREREeVUB/ftk96vvir9
Xnghe65Hx/goaTGS6kvkXCQiIiIiyqkOHJCD8+bJpqFDM767KKfHRrb46N0m
TaLxUf7rrpNiBQpE46O2VatKrlNPZXxkex2KxNDf9ukjW7duFSIiIiKinODY
sWPy2aefyi/Dh2fERHqtshPhFTnefWPGSJ4LLpCBrVplrFM+Y4bqO6pWtGjG
z5EYqWuDBnLNJZcwPrK/pk6VIW3aSIOaNeXQoUNCRERERJTdvdu7tzxWqJBs
/eqrEys2sr7s65Tbfz7R4sZYXj/8IJ+/9JIM7tNHiIiIiIiys+VLl8rzVapk
jKnLaWvT8ZW814QJshLfFXzggBARERERZUv798vB6dPl8LhxjI34CvfS/Wuz
ZwsRERERUbZz/LjI/Pnquf8JsQ4DX0l5HZ8wQb7q3Vu2bNokRERERETZAdYa
6962rawfMoT9RnzF9zVtmox69VV5qXVrISIiIiLKDl6LxEaj3ngjYw3vVLen
+cpZr8mT5diECfJR8+YyGeM2iYiIiIjS2OiRI6VPy5ZyEG1XjqvjKxGvKVNU
+do4enTGOE4iIiIionR05IgcmD5djn//PWMjvhL7QvnC67ffhIiIiIjI1PHj
x9XL6XfxfKnt/vprRpt14kT1PadhXqoNjPXK+DJ/Ya4XXtOm/e93OB/6d3jh
3+mQznjEz5FtrRg8WMZ+/XUSriQiIiIiyu7mzZsnb7zxhrz55pvSvn17efDB
B+W5556TTp06SceOHePywva7du0qj5UtK/VKlZJOzzwjHWvXDvV6M7KNtlWr
SrUSJaTOY49JzTJlpGZk+3w5vCJ5U/fxx+XZypWlVrly8nQkzx78738l/3XX
SdFCheSBO++UfFdeKf931VVS5r77pEbp0uq9DStVSkm+1oq8noqk8fd4fB9W
5PO/DxkiDZ94QlauXJmCK4yIiIiIsqvVq1fLueeeK9OnT4/7ttdEtt2paVM5
+t13/xv3FOY1bZpsiLSfS957r7zVpo0M6NZN+r39Nl+2F/Jl6PvvS6tGjeSq
yy6TCy+8UG7Mm1fq1a8vXfD3gQPVq3UkD5tF4uJ7ChaUKyOx0sWR95UvXlyG
9Oolg7p3l/6R+DZZaf7s3XelyD33yOzIvuOyfkdkGxM6d5YWDRrEvVwTERER
Uc61ePFiOemkkyJNyklx3e6Ro0flrfbtZXqkna3Gb8VjbsnUqSo+KhFpz69A
vLRzp8iWLXzp1/btItu2yb7ly+W52rXl5htvlDJly8qcOXNk1apVrudqx44d
MnPmTKlRs6bkveEGKV+smMwdNQoLsuOPyUn7vn3Sol49mf7OO/Fb33DKFFn3
1Vciu3fHrVwTERERUc42ORJnID4qVapUXLd7/M8/5XC8v+PIEh8tGj9eZOPG
jHn4fImsXy9/LlsmXV56SS6+6CIpV768TJ8xI+bztjMSczZt1kyuueYaKVe0
qPwWiZtk3bqMVyLT/8cf0jQS082IZ3yk12tYuDDmfCAiIiKiE1P16tVVfHTL
LbdkWa8hlEWLRCZMYHyU6Nfvv6v+l42zZ0vphx+W0qVLyxdffBH69GHeTq1a
teSeAgXk6759M/p4IjFYtouP/io3K2bNCp0nRERERJTz5c2bV8VHmKMSD4ix
erz1lqwfMiRjTTLGR4mNjSL/H/7hh/KffPmkfv36cuDAgbicR23wp59Kvptu
klYNGsjuJUtENmzIfvFRpBy+XrduZLM/xDVviIiIiCjnyZMnj4qPTj/99Lis
0fDd999L7eLF5bBekyG7xUeIOf6KO9QL48oS2W8S9BVJ05HVq+WFevXkpkj8
MnTYsNDnzs3y5culVOnSUqhAAfkNY/Y2b85e8VGk3PzYs6e83Ly5HDx8OGH5
RERERETZ27Fjx6R5pM3YpUsXadSokQwYMCDU9g4fOSI1q1SRcW++KYJ5K/Fs
4yYjPorEQruWLFEvPedm/4oVsm3+/NTHQ9bXX8fd4pln5I477pDfkNYkaNas
meTPl0++++QTtQ5EpjgyneOjSJx+YOxY6demjWyIxJRERERERF6GDRum1rEL
a9+uXTISsVG812VIVnwUafMXuesuuf+eezLa/9u3S+fWrSVXrlxyCOu/JXqN
AsPYaPuCBVI/Eofedffdsnbt2tDnLRb9+veXa6++Wkb06ZORJ/GKkRIZH+nX
hAnoDEtqfhERERFR9vPZZ5/JgkibOzTEK4mKjZIUH2EMWeE774zGR51atZKT
Tz45PeKjTZtkx6JF8kihQlKxUqVIaPJ7+HMWwNTIeXi0ZElpWLVqRr7EY05S
MuIjvLDtP/9MZnYRERERUTYTj/hod6R9u3vixMS1a5MUH92H+OiuuzLFR6ec
ckrq46PIsSI2evDee6V6jRpxX4chVps2b5b77rtP6j75pBz+9dfwc7SSFB8d
GDNGXnv++UiIxBiJiIiIiJyFjY/QVu/y8suyvH//+H0XLOOjTP1GGFP3cCQe
qRGJjfbv3x/4XMXTpki6ChcpIg2efloO/vJLuH6kZPUfTZkir1StKu++914y
s4qIiIiIspGw8RE+27l+/cTGRidqfBQ5xp2LF6t+o2rVqsn+FPcb2W3ZskXu
LVRI6lSuLHuWLlWxXFrHR5FtL4vE8bUrVpQdO3YkM6uIiIiIKJsIGx81qlVL
pnTrlth27YkYH0WOb1vkvDwUiT9qRWKHdIuNtI2RmOiJSLyBuVsbZs8Odl6S
FR/99Toe2cfx3buTmEtERERElF2Eio8OHpQVkZgloesynIjxEdZiWLxYjalD
v1Gq5xv5OXr0qDRs2FDuvf122TRnTuzfkZTk+EitZYd5U0RERERENqHio61b
kxMbnUjxUSS2+OOvtRhq1KyZtv1GdkeOHJFGzz4rBf/734wYKZbzk+z4KPLa
9M03sgXjAYmIiIiILILGR+s3bJDFX3yh5rwzPorDC9tfv17mjBolRQsXVuvU
pctaDKYOHTokDRs1kkJ33JEx1s60HynZ8VGkLI3r2FFatmiRvMwhIiIiomwh
aHzUo3NnGd6+vciMGTkmPrr9llukwK23ZsRHkTb7a5H280knnSSHsD5bIuMj
bHvTJhnaq5fc8n//Jx06dJC9e/cGP6kphH6kBg0aSEGMtfvpJ7MYKdnxUSSm
3z58uFQuXlyW/fxz8jKHiIiIiNJekPjowMGD0rJ6ddkxcmTO6T+KxCddXnpJ
3n755Yx12CLt+nGDBkn9KlXkyOrViYuP8D2vkX191rOnXHfNNTL622/DndA0
cPjwYWncpIkaa2e0ZkMKxtchrh8RiUMnT56ctHwhIiIiovQXJD5aOGeOfP3m
m4lf0zuJ8dHxtWsz5lNFXvi3+hn72L49cXHRhg3q+1VfjsQSeW+4QYaPGBHq
XKYT9CPVb9BA7onESPj+Js/zlYr4KBLXbx42THagj4uIiIiI6C9B4qPDK1bI
8QkTkhcbJaP/KFkvfI9qJOY6tmaN6jO68tJLpUTJkvLzsmVhTmNa2rlzpxS6
7z55pnJlOYw5XIgJ0yU+wgt9R3PnJis7iIiIiCgbCDT/aP78jDWSGR95v/5a
c0HFRHhF0rxwzBh5/fnnpXiRIlKsaFHp3qNHiLOX/jZt2qRipEZVq8pBzONy
ipFSFR9FXgfHjpWJw4cnKzuIiIiIKM19+umnkXBnvvH7+/TpI9927CgyfTrj
I6cX0oVxepE2/9HVq2XLvHmyIpL+zq1bq7XxCt59tzz51FNqLN2uXbvCnr5s
YWskP26/4w7p9dprIjt2pE98NHmy7Iich4rlyycrK4iIiIgozY0cOVKWLl1q
9N7de/ZIi7p1ZWnfvsmde5Ru8RH6hfQL/UNYow2vSDt/cSRtGDf3VqtW8njx
4nLbzTfLTTfdJE2bNZM+kXzbE8nDE9G0SNxz7dVXy/hPPhHZsiVt4qPDkfPV
qnp1mfXjj8nKCiIiIiJKY7t375YDht9Buj4Sk/SItPuTGhelQ3yEsXFY0w79
QpH/H/n1VzmwcqXsW75cjZdrVrOmtKhXT31v0f/deKM8/NBD8kSlSjLkiy9k
aiSOXBZ5H4kMHDRI/n355TLp888z8jPV8dFf5er7zp1l5LBhScoFIiIiIsop
jkdexxBLIV6ItCtl4sTsER+hjwd9FrG+Iu12rKWwcc4cmTtqlIz+//buOzrq
Kv//OLuubXc9e45fXVDXhggqzQIiilJEFCIKKIKi6CqQSO8guIBgQ1RAQugJ
ICW0JHQpQRACAiGhSeg1EKrUFBKS1+/eTwi/0DMpM5PwfJxzzzCTZGY+5Y/7
4t77vkFBGtizp6pUqKB6Pj4qU7KkatWsqVdffVUdOnZU/wEDtGfvXp07d85N
VyT/adO2rV43+dFZi2Svi6fzkW0LF+rcrl1uOX4AAAAUUHYPVTsnKTzce/JR
xnw3+zP7aJ/v2+es/xncp48GffGF83i9ZtfJ2H2QPnr7bf23fn09+fjjKv/0
0ypeooQavvuuM09unvkOC+2xwyV2fqGtS2H33r0whuTpfGRz/rp1Jvynuuck
AAAAoGA6fTq9ToM7MtL18pHNQvv3O3vtLJs6VR2bNVPDOnVU8rHHnJoIZcuW
ValSpfThhx+qZYsWat68+TWbn5+fGr73nr7/8Udt2bpV+83nHbM1FxgbyrFo
c42eMJkzfOLE9HG6o0c9m4/MZ07s2VPbzHUGAAAAcsTWJbC1GvJ6rt218pH9
d1ycBvXurVcqV1bp0qX1Xb9+GjN2rMKmT1d8fLwbTwiyIjAoSOXLlNEpWxvk
xAnP5qPlyxXQurX69OrlnoMHAACAVzp69KiGDRumTz75RLVr15aPj4+6dOmi
DRs2uPZGmzbl/RjS1fKRyWcLJ0xQpXLlVKFCBWfe20E7JgGvlpCYqFImx/Zq
184WCVG7pk09l49Mvl82cKBaNG7snoMHAACA1wk3eeahhx5y5pwtM31SO8Zi
X7v//vv1n//8R6tWrcr6m5n+rdOvzcsxpCvlo/37tXbuXN1buLBatW6t1LS0
3Dg1cJOVK1eqcqVKOhodrQ6+vp7LR7aZezdk8GC3HDcAAAC8i11H8/zzz6tQ
oUL6zNbrzuT77793Xm/UqFHW39DmkpgY9+YjO6/PZKRXXnzRqYmG/CfN3DdN
mzXTT717q2uLFh7PR3J13BQAAAAFQlxcnKpUqeLkIH9//4t+FhgY6Lx+3333
ufamJ044+226Ix9tXLjQyUd9OnXSC5UqZescwDvYMaTXXn5ZtUxbFRDguXwU
Hi5FRbnlmAEAAOB9Nm/erJkzZzr1ljPr1auXk4+KFCni2humpkpLlrglH202
zycNHqy777pLq1evztbxw3vUr19ft956q9aNHOm5fGTajH79FLV2rVuOGQAA
AN7rwIEDCgkJUd++ffXRRx85+eiee+5x7U1s3eu8XIN0Ph/5VKqkqDlz9Fat
Who+YkSOj/1G8Zs5fyVLltRBOy/Ry0wx19XecxsCAz2Xj0y2//i11xRwyXgq
AAAAbhwxMTH63//+59Svmz9/vlJSUpx6dtnKR9bOnXlXx+58Pqr90kuaOnSo
ypYpYz5uZ46O/0YSGhrqXNc9tuafl7HXsYi536KHD/dcPjL31+jOnTXMroEC
AADADcfWrCtWrJjefvttnbb7vJ53tXwUGRmpFi1aqEGDBgoICHDW1l/GDfmo
btWqer9ePXU2fVlk3YwZM7w2H9k68xUqVtRKWz/OU/lo8WJN691b4XPmuOWY
AQAA4D02btyoBx54QP/85z+d3JPZlfLR+vXr1aRJE3355Zfy9fXVHXfc4dS5
u8z27W7JR3bdUVBQUO6dkBuAN+cjq027dhrZvn36XsOeyEeLFinZZDNqxAMA
ANx4+vfv7/SV7V5HO3bsuOhnI0eOvCwfRUdHOzXvMrQzfVlb/+4iqanS77/n
6fqjuGnTVKlsWT3zzDPm41Jz63TcELw9H3Xo1EkrPF3fm1ofAAAAN6Q+ffo4
feVbbrnFyUPWuXPntGvXrgt1v239Orse6ezZs87PrIw5dYMGDVLXrl0vftPk
5Dyv730oJESPmUzn8/rrV57fh6vy5nyUkJCgmrVqaZUn59eZfPQ7Y5IAAAA3
pBUrVjhz62x/+a677nLmztl1SNWrV1fDhg2d1//2t7/prbfeUtu2bZ3+awb7
706dOmnTpk0Xv+nx43mejw6HhqqYyW3+th8Nl3hzPtq2bZuK3HuvZ+szhIfr
m9at3XK8AAAA8C52btrYsWP16KOPXphL16ZNG23dutWp/1yxYkX99a9/1WOP
PaYJEyZc9He/mr6knW93GfO3eTa37nw+2jtpkm6/6SYttPvDwiXeno/uu/9+
j+ejD954wy3HCwAAAO8UHx+v48eP68yZMxe9npSU5LyemJh40etRUVEXrVey
v+ewfx8Rkbf5aOlSbR83TrfdfLOWmKwE13hzPtqyZYvKPfustpjr67H6DCYf
/dCtm1uOFwAAAPmbXeszefJkffvtt5ozZ45mzZqliRMnOnXtHLZunR3Tycv+
q8lEO81nPmf60X/88YebjrzgCAsL89p8ZPc/KlqsmNbZtXAezEdxJqcBAAAA
1xNu+o5PPfWUypQp4zQ77+79999PHz86eFBasiTv+6+m37xp9Gg99PDDl699
wnXZOYl333239u/f7+mvchmbuW12Wz9qlGfm19l1czaX2RojAAAAQHadPJme
jfJyXl2mfLTB9J+L3HOPYmJi3HeMyHN2z+G/3Xxz+viRu/ORyUYJc+dqR2io
kjPVIQEAAABccuyYtHate7LR+Xy0MTDQqXNGPio47Bq4ShUrqvgjjyjKE/UZ
zH0VExSkpu+8oyNHjrjpqAEAAFBg2DlIsbHpc5LclY0yjR8VLlKEfFSA/PDD
D3qndm118vPT8kGD3J+PIiK0rH9/DQsIcNMRAwAAwJtdqU7dVZ06JUVGpvcr
3ZmNbPvtN20fP15PPvUU9RkKEF+Ti3q0bauuLVpo+U8/eWT9Uad33lEQe8MC
AADACAkJ0YYNG677ewvCwhQ7bZrb+66Z85GtX1emdGmttfP6kO/ZevElihdX
3OrV6ujr65F8lLpwoWJNSzx71l2HDQAAAC9m93+94n6vlzp0yP1z6jK3pUu1
OzhYNxcqpEX2OfK9mTNnqtKzz0r796t9s2aeGT+ye2nZexsAAAAw7D5GWRqP
OXw47/eAvU4/9mBIiB7+97/1348/zpVjh+ekpqaqarVq+qpjR2feZrsmTdyf
j8z9PLVPH52xdRgBAAAAuZCPjB1hYUoLD/dYPjpk8lHZRx7Rq6+9pnPnzuX8
4OExdk+tRx9+WHtXrHDyUVt356MlS3R8xgy1a9RIJ0+fdttxAwAAwLu5ko/e
r1PHo/kobto0PV+mjEqVKqVk9vLM1ypXrqzuLVum14k3ze35KCJCob17y3/A
ALcdMwAAALyfK/nI94MP9JvtTy5d6pF8tH/KFNWpUkV33Xmn5i9YkAtHD08I
DQvTww88oDO2TvvevZ7JR+YeXuzvTy1EAAAAXMSVfDQ5OFiTe/TwSA3mjHz0
dvXqKlG0qJo3b54LRw93s/Mia9aqpS/tuqO4OGnPHs/kI7uOzn42AAAAkIkr
+UhpaUpYssT92ShTPqr90ksKHjxYJR59lDrf+dCQoUN1X5EiOrB6tXTggGfy
kb2H7efY/bwAAACATFzNR9qyxaP5yKdSJW1YsECvVa6s3r175/j44T6nTB6p
UKGChnz1lXTkSHo2cnc+Mtlob3CwAr/5xo1HDgAAgPzCpXxkrDH9y+1jxrh/
DdL5fFTrhRe02TyfERio2rVrKz4+PqenAG7yWbdueuOVV5S8Y0f6uiNP5KPf
f1fXBg00ytw/AAAAwKVczUeDAwI0qEULj+zjmTkf2flZJR55RBHLl+f0FMAN
pk+frmJFi2q3vV4Z8+rcnY9Mpt8UFKT36tQxH3nMnYcPAACAfMLl8aM1a/S+
j4/OzJkjLV7skXy0fv58Z+1IFz8/ValaNcfnAHlr48aNKly4cPq8uoyaDJ7I
R0uWOPfQ5shIdx4+AAAA8hFX85HVwvRlj4WGejYfHTyoY+Z7P1G8uMLCwnJ0
DpC3XqlRQ11btFDa7t3Svn0ezUdat86dhw4AAIB8Jjv5SGfOuDcbXSkf2Tla
JiNNHTJEZcuWNU8P5OAsIK/YNUcvPvtsei66UjZyVz5aulSbx41TEvPqAAAA
cA3ZykdWdLRnx49sHrJr/M3jh2+9pabNmmX3FCCP/K9HDxW5+24tt2ONl645
cmc+Mu8ZM3q0Gtepo1OnT7v3JAAAACBfyVY+SkvTPtPvPD59uvsy0pXyke1b
m8fYlSv1ZKlSmjJ1ao7OBXJPt+7dVb5sWW1csEDav//q2cgd+cjcO32bNtXE
SZPcexIAAACQ72R3/GjYiBEa0rq1Uy/Zo/nItoMHFTZypB5//HEdPnw4+ycD
ORYbG6uOnTqpnMlGMYsWXbkegzvzka3JMHmyerZvr3MpKW4+GwAAAMhvspuP
ItesUcf33lPiL7+4ZwzpWvnIzrMz/fJPP/hAlStX1mG796ibnTlzRkeOHnXW
Qc0z36+hOTcffvSRWrRsqU/9/NTcPP62dKn5qnt1uoDO8Yo299Hzzz+vJubY
N9hrlJVslNf5yGS0ZJOR/mTdEQAAALIgu/koPjFRU4YP1zFbO87WBfNkPrJt
3z6d3bZNn77/vipXqaINGzbk4KxkzdatWxVqjt9/8GC9ZHJZrddec+rpNapT
R/+tX1++jRop4OuvNeiLL+Rn/v1s2bK6t0gRvfnmm/rKvG73bkpNTc3z75nX
Es298F2/fipRrJi+6dzZyarXnVPnjnxkc7sd37TfBQAAAMiCbNdnyLBihfN/
9B7PR+czUqLJLN1attSz5ctr7M8/Z/+4ruCcyTJbtmxR7z59VLt2bZUuXVpV
zfepXa2aJpi+/ZrZsxU9d6506JDT59fRo87cP+f58eM6HBWlqDlztMQcx9s1
a+plk6nseFePnj2d982PZsyYodpvvKHKzz2nyFmz0rOIHc/LajbKq3xk7pfY
SZPU+9NPddiefwAAACALJpk+5ObNm7P/Btu3e8f4UaaMZOd1/TJunIo/+qgz
tnPU5pRs2G/6+nYcaoLJkG/WratqVauqbMmSqvHSS+rTvr22mu9lx6ycfX1s
H9zOJ7vWnDI7rmJ/bn7X/k2S+dtxAwaoUrlyeskcVy0fHy1cuFDJycnZvBju
s2vXLr373nsqWaKERvXrp3h7D9lz4Eouyst8ZN7nR5OTJ+RyRgYAAEDBlJaW
pnEmQwQEBKhr166aPXt2tt7nqMkjv5v3sPvLeEU+ymimr/6ryX5vvvqqXq5W
TR06dtTIkSN1/MSJKx7Hn3/+qWDz+6MCA/XFF1+oSdOmKlW6tMo//bSqm8/8
oXt3TTbHudP23+3YkM05Nu/YsRJXx0sy1kzZZt/HHEukOf/9unXTfYULq2at
Ws7Y1xEPrKO6Hlv/YsjQoSpTpoxeNTkxcuZM+2L2zkFe5SNzL87/9lu1Mu95
Jj7e/ScJAAAA+VLRokV177336u9//7sW2DrM2bDX5KP2jRrl/TokV/ORbSZ7
2HGNP8yxfdKggaqb/vzTTz6pJx5/3Kl1l9FKlSypF557zhkLeb5cOTWqW1cD
e/Z0/m7P8uXpYyMmPznjI66sq3Gl2ZxkckZcZKSmmBzW4M03nVzXzNdX27dv
d9b4eJIdgxswcKAqm3Noz898k99Sdu7M2nVwdz5avFgHzSPz6gAAAOCKUqVK
qVChQrrzzjtz9D4/9u2rFYMG5c3eNTnJRxnz7Wymsc38zbpfftHQr7/W8G++
cdow0wL79dM+u47fvmdGbQH7b9vsv+175EUmulKzn2eyUsqOHZozerRTb6LI
v/+t6jVqaO7cuUpKSsrRtXJVRESEOnfpotdefVX1fXw0b9w4pe7alX5ucuu8
5GY+sjUZVq6U3HyeAAAAkP/Vq1fPyUcPPfRQjuqoHTV95RN2/Mmb5tddK3/Y
cYXMzdZQcGcGykrLmHtnvt+a83PvapuM8txzz+kz8+/4+Pg8W6d09uxZTZs2
zVlf9OADD8inalXNHTvWWWvlnKvcPtbcykdLl2rZwIHp+y4BAAAALoqMjHTy
ka03nWM2Z+RlHbvcykf5sdlMYo43bdcuzQ4K0svmHJQpXVovV6/u5Jg99ndy
6MSJE4qKilKvL75QVZOHKjz1lD586y3tjohIz465OV6UF/nIZKNjoaHOd473
8FxEAAAA5E8xMTFOPppl6zLnhjVr0tcgmSyT68300w+FhOj1SpUUY/vDtiZd
xhy4G6Fl1Mazx22y6NKpUzXmxx/1/DPPqGaNGvLz89OwYcMUa+cHZpHd0zbE
nNNBgwapSpUqqvrii+pgcsqswECd3LhROnny4rp8eXVsp0+rg69v9vORueeO
mmz05aefKspkfgAAACCr9u3b5+y1Y+sz25oMNh9NmDDBGYOw+53mpH31+eca
17WrdgcHa+vPP+dq2zF+vJaZ/nOF0qU1ZuBARc6ZoxUzZtx4bfp0/W4eo+fN
03pz/Wwd88lDhuiF8uV199136+bbblPxJ55Qvfr1Ncf8zkqTWaOio7V23Tqn
fduvn2rXqSOfN9/Uv/7v/5zr//CDD+rjBg0015zn1bNnO++72mRm+1nuOCb7
eW+//rp+9/fPXj5atEhJJkMfcSEbAgAAAJZd4z9ixAgFBQVp+PDh6t69uwYP
HqzRo0crMDAw223MmDH6zvS9X65YUYNatdJok5MCO3fOtTbGvN93vr6q9dxz
6mD6/q3r1qWZ1u7tt9XenI+O77yjDqa1festdWrYUF3ee0+tTA5qZ54/WbSo
7rrjDj1drJhamlxkf6dNvXrOoz2XHc7/rX0v+7q7j6G9+dxqTz2lTeYedLlO
vB2vtHsUe2EtdAAAAGDogAFaappsPbjly3OvrVyp2ClTNK5bN2nt2vQaZbSr
N3v+7ePq1YqbNs3JHgdDQv7/697UzPWc1KOHtti9XO1cyqxmo4gIrfL313iT
78+lpXnqlgcAAACuyvZSU+z/54eH53p9hu3jx2tkx47peSmv6kAUxGYzh523
5kr2cGcz13N0ly7aMnZs1r/j0qVaHRCgr8z9EGdrEgIAAADe6tgx5//2nb1o
crGPTz4qoM3VfLRkiQ5NnarBPXrokK0bAQAAAHi50OHDtWrwYNfXk1ytkY8K
bnMlH9n7adEinV23Tknx8QIAAADyg82bNql5/fpKXbgwd/rQ5KOC27KSj+xY
pPm9NUOG6MSqVRLrjQAAAJDPjDR92ZEdOuTOGBL5qOC26+Ujk40S5s7VgBYt
1K5pU8WfOiUAAAAgv0lIStKsoKDs7WlzaSMfFdx2vXxk8vX/PvhA42z9bwAA
ACCfS42OTq9nl5N6DeSjgtuulI/svWJamp2fGRmpGNMAAACAgmDz2rUK7tVL
52xfN7sZiXxUcNul+cjWPjSP3zVtqt323wAAAEAB83NgoII6d85+RiIfFdyW
OR+ZPPTrDz+oXcOG+sk8xickCAAAACiIfh4xQjO++op8RLu4rVih8d27a8uY
MdLKlRrQrZuWMG4EAACAG0Cq3c8zK3uAko9ujGZyUFp4uFrXrauY0FDpzBkB
AAAAN5K0Awd0Zt689P7xkiXkoxu4BXfvrqYmGzVu0EBbN28WAAAAcKM5ceKE
OrZtq59attSJmTOzNp5EPioYze6FZa/34sXaOGGCPmvfXoePHtXYsWO1detW
AQAAADeqYNMn/qZ5cx2fPj19HOla65LIR/m72WtrrmHEwIFaM2qUtGePlJh4
4V4YPXq0tmzZIgAAAOBGdmDnTiWuXev0oVMWLLj6fDvyUf5sixY5127N0KHy
eeEF9enSRSf//POy+4B8BAAAAGSyb5+Ce/fWjnHjpGXLyEf5udmxInsN7Tw6
m3c3btQm83zD+vVXufjkIwAAAOBSm00/ukPjxvqtf//L59qRj/JNOzB5svxb
t1Zgr17S0aNSSspVr3kG8hEAAABwuUOHD2uYv78Oz5+fPv5g1/PbvXDMI/nI
C5sdH7LXw86jM88TzPMuzZrp56AgHT958nqX+wLyEQAAAHANycnSwYOaM2CA
xto1KzNnau+kSeQjb2omv+4NDpZ/q1Y6ZbOsybYpp0/riB0zchH5CAAAALi+
gyYjDf3hB3X86CN9/cknCurUKX08Kav7JtFyr2Wc98WLnazay1yP16tX17TJ
k6W0tKxd0KsgHwEAAABZd8DkpB/69lVgjx7SqlWKmzo1vQaAnX/n6dxQ0Nv5
Ogsz+vTRlvHjpc2bdXjTJq0x1yG3kI8AAAAA18Tu369Rw4Y5c+9+/vFHff3p
pxrYooWS5827sP7FyUvX2keJdv0sZOcv2vMYHq7k+fM1qWdP9fHzU4eWLXUk
NjbHY0VXQj4CAAAAXLN9+3aNtHuLGskpKTqTkKDv+/bVkgkTpDVrlGD68utH
jEjPR7aPT05yrUVEaE9wsEJ79dIaex7Xr1dCTIw2RkcrISlJqamp2blsWUI+
AgAAAFzj5KORI6/8w/h4JR86pB7t2qmvn59+atlSh6ZNS89I5/codcZE7OON
npsy709kn58/P183aaJGtWqpY8eOirA/cyPyEQAAAOCaa+aj886YnGRrhI81
/e2tCxc6a2XsWNIfgYFaExCgPRMnKmHuXM9nFHfnoUzrtE5Mn67ooUM1pUcP
fd+qlVI2bpSOHNGuPXt04MABF65I7iEfAQAAAK7JSj66orNnNWzwYH3z5Zf6
uF49Lbdzx+z4SXh4+hhKxthS5nEl++/8Ns506Xe2tebMcaaanLjSHL/zWlSU
Fo0Zo1YmF9m1XL+a11JdP6O5jnwEAAAAuCbb+SiTPbt369SRI1JCghL27FFP
X1991rixOr/7rjab3JBRl+DUzJlK/OWX9OcZYy82e3hZXfE0+2i/3++/K23R
ovSxMZv7zPdc1L+/mr7xhlqbY/uxTx8pMdFpiebYvQ35CAAAAHBNbuSjzGwV
tsSzZ3Xy1CmNHTdO21askOLipB071N3PTx/XqqWwL7/UxsBAZ41Okskep2fP
Tq/9YPLIRfvUnq+Bnad5yO4/ZJv93GXLlGZzkMlsq/z9nT10vzffuV+7dkqz
cwpjY7XSfOc/YmJ0NjlZqXlQcy43kY8AAAAA1+R2PrqWvfv2KXz+fM2ZNUvR
NpMcPaoTpv8+omdP/di6tRpVr65eH32kJFtb3GSj6OHDFRMUpBTzN2cz6o2b
/GLnttn64/Z1J89kbvZ3Mtolr58zf3f2l1+cv7fP7d8ObdtW/Zs3d/bJHdGt
m7Rhg7RnjyLMz/yHDtUCk98222yUD5GPAAAAANe4Mx9diR2BOX7ihPbHxWnb
zp3aFxur1KQkKTVVv5oc9UX79nqvXj119PU1AWuvk1+ig4PV2+SpnibXDOzQ
QQl23VNUlJKWL9d/fXz0rslZzd54Q39MnuzU0z5oclTn999Xh8aN1bRhQ/1h
5/jt3q20rVvVtU0b9evXzzkPh+0cQfO53j0qlHXkIwAAAMA1ns5HOWH3D1pn
8k9SSorzPMVkm8lTpmjCxImaGhKig4cPO6+fjo/XrDlzFJNPx4Gyi3wEAAAA
uCY/5yNcG/kIAAAAcA35qOAiHwEAAACuIR8VXOQjAAAAwDXko4KLfAQAAAC4
hnxUcJGPAAAAANcUtHx07NgxjRo1Sh9//LFq1qypatWq6d1339Uiux/SDYZ8
BAAAALimIOUju4/rk08+qcKFCyssLEznzp3Tpk2bVKpUKd1+++2aPXu2p7+i
W5GPAAAAANcUpHz0wQcfqFChQqpevbrOnj174XWbE+zrL774oge/nfuRjwAA
AADXFKR81Lp1a910003y8/NTcnLyhdenT5/u5KMHH3xQsbGxHvyG7kU+AgAA
AFxTkPLRyZMnNX/+fB08ePCi17///nsnHz300EPau3evh76d+5GPAAAAANcU
pHyUmR0nmjp1qgYMGKA2bdo4+ejhhx8mHwEAAAC4qoKWjw4dOqSePXvqk08+
UWhoqPNaSEgI+QgAAADAddl8ZPvRGdLS0pSQkOC0iIgIrV+/3oPfzjWRkZF6
+umnVa5cOW3btu3C63Yc6dJ8ZOs32Jrf3bt319q1az31lXPF+PHjL1yzzHUp
JkyYQD4CAAAAXLB79259/vnn+vXXXxUcHKyGDRvqvvvu02233aZbbrlFvr6+
WrNmjZYvX+41bdmyZdqzZ89Fx/Hnn3/qhRdecHKQzQuZXSkf2Sxh/120aFEt
XLjwot+3c/PsZ3j6OLPaSpQooVtvvVX33nuvkw8HDhyo3377Te3atVNMTEze
3kAAAABAAWJrGZQvX97JQjZDZG5FihRx9gyy9d+8qdl5c3Zfo8zmzZunf/zj
H/rLX/6iGTNmXPSzzPPrMtevS0lJ0WOPPXbZ3rFbt251PsPTx5mVNmvWLDVv
3vyya2ebreV36XkCAAAAcHV2/GjIkCE6cuSIkx0CAgLk4+PjjEM8/vjj+WZt
0syZM50xL5sLmjRp4owP2f1h7fzB2rVrO6/ff//9znyz1NRUJSUlOTXAr5SP
8ptXXnnFOY4KFSqoVatWioqKctZh+fv7XzTPEAAAAMC12RwRFxd31Z/b/JQf
2HGwihUrXhg7qVmzpurWretkh2bNmjnjSvb1ypUrO7Ub7Jojm5Pyez6yx3C1
a2QzUnx8vJu/EQAAAABvsG7dOtWoUUP/+te/nL1g7fobO3505swZNW7cWLff
fruKFy+uYcOGKTEx8arz6wAAAACgILD192wNN5t9LmVft3PuMj8nHwEAAACA
nDEkW79uwYIFnv4qAAAAAOAxdl1OWFiYUxN86NChOn36tKe/EgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAs+n+FJDk3

    "], {{0, 576}, {840, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{840, 576},
  PlotRange->{{0, 840}, {0, 576}}]], "Text",
 CellChangeTimes->{{3.727359817644969*^9, 
  3.727359822431753*^9}},ExpressionUUID->"b3c40ed1-7036-4799-ac63-\
0d58f1c7ea6c"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQn8TdXe/81UD0meJhWN97pd3dzrJuLR1URR4iIlc8rc1USTsRJCMo8Z
0sDNEDIVV6bKVJGLaBAiVIQKrf/zWc9/nbvP/u291tr77DP8zu/zfr0Ov7PP
3mv4ru/6rvVd076kVZf6bQvky5fv4WL/+0/9lo//rWvXlt0blPzfLw07P9zu
gc73t6nd+ZH7H7i/63WtCv7vxQ758+Wr979/FPrfvwUhhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIISSvbt28Xb7/9tvaekSNHiuPHj6coRYTYY6O/JqjfhJBs
xtZOJsMWRmGj/aDtJiQcK1asEG3atBF16tSRnw4dOohu3bqJxx9/XLRs2TJ2
/ejRo/L+LVu2iKlTp6Y51eGZN2+eOHnyZGTh7du3TzRv3lycOnVKLFq0SLRr
107cfvvtonbt2lJ+48aNk/d99dVXUrZBWLdunbj//vtFjRo1RPXq1UXHjh1l
2Tz22GPigQceEAMHDhRHjhyJe8ZdPkuXLpXPn3vuueKnn37yvZZsvvvuO/Ha
a6+JMWPGiI0bN8auf/jhh1L/kJ5q1arF8tilSxfRtm1beX+q0pgoSDfK34ZM
qUdO/QU6HY5Sv93ljmcfeeQR0bVrV6nfmzZtij6zwk7uQcqR2JEOm5MXyBQ7
omPOnDmiatWq4sILL9Tel6ltFwhiJ8O09VHF7fdb1OnN6/b7hRdeEBUqVBD1
69dPajy5jaD2KFvahVq1aonzzz8/x/WtW7eKP/7xj+Kzzz6T39GnLVq0qPj5
559TncTQfPLJJ9LXePDBB0W+fPnEDz/8EFnY9957r/jmm2/irt12222idOnS
4rfffou7Dl8APkRQGjduLK688sq4a7ClrVq1EmXLlhV79+6NXfcqn82bN8t8
O/XT61qyWLVqlbSp8JtWr14t/vznP4vWrVvHyadBgwbi4osvjnvul19+EaNH
jxbXXHONrJeZzLRp00T58uXlOKENmVKPvPQX+Omw7rcw+o1yv+SSS+KuwdaU
K1dOPP3004HCssEk96DlmAksWLAg3UmwIpU2J6+QKXbExLJly0SxYsW092Ri
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
nDCOgHk5yKhSpUrG8FFW2Df4yy+/xK7Br4VO47yk119/XX6wVgPlgDIDV111
lZynVFx77bXi2WefjQvbWXZTpkyRuuQGcaAuKh2Df49n9uzZE7sHvvGll15q
zAtI1H8y5R15wnrdM888U55dCTttWjOs8uRsZ5And1ps8x5VOdvkF5jK2l1H
U1HWYfKj/tfZA53/BHSyt82PSZ62+uJnj3Vp9JObH0uWLJFxoH1wgvQ7+zKm
NNvomRubZ0wyx7ojU5m75WgTr58cTfINU3fDlLMfYe1AUHsPbOxAMu29iUzW
7TDtTFR6EpVcwsoGa6DwO+YnnAwcODAufl3YWAfmJz8bm+BXT7xkrPq77vJ5
+umnxZ/+9KfQcvCLD+jKNIzuePlPfjKIsn33am8Tsb8m+YSRjY0+2qQ5qP+k
0yev8ILsf4qyj5DJ6NoH+I0KyKJ69epi4sSJcu4U5Wnbnrr3qkEvzjrrLFl+
7o8C83+ID/O1mNusWLFibC5c4Sw7pBXnzLrBGlGnr23bd/QjUf/JJu8Yv8Ka
0CZNmkh7YZr/Deo/6e6Lspxt82sqa3cdTUVZh8kP8uFuI9y47blz/Z5J9rb5
MckzEf/JlMage1OVzNxjYe69s6Y02+iZG5tnTPHalLlbjjbx+slRJ9+wdTdM
OfsR1g4EtffAxg4k096byHTdDtrORKUnUcklrGxU/MePH4+77vafTGH7yc/G
JvjVkyD+03PPPSffvRNWDn7x2ZRpUN3x85+8ZBBl++7V3iZif23kE1Q2Nvpo
k+ZE/SenPnmFZ+s/Rd1HyGR07QP8RgDZFC9eXLz99tux36AfSiZqHs4LL1lh
nzD29Ln9bcSjyhT7zjB+A9ljzt5rv6+z7BYuXCjrifv9v1hT7RyPSLf/ZMo7
xl6c41a4r2zZsuLrr7/2DRPjL+48oU4G9Z+iLmeb/AJTWbvraCrKOkx+1q9f
L+NTa/q98gp7jvXYCuydVveYZG+bH5M8bfXFLXebNAa1jRjHVeO5Tl5++eW4
vowpzTZ65sbmGZPMsd7dVOZuOdrEG9R/SqTuhilnP8LagaD2HtjYgXT6T5ms
22Hamaj0JCq52ORTF/8XX3wRdx17SZzx68LG2L+f/GxsQhT+E97vrPrmYeTg
FZ9NmYbRnSD+U5Ttu1d7m4j9Ncmnc+fOgWVjo482aU7Uf3Lqk1d4Nv5TMvoI
mQz27GLtpRvoGd6tC2AHICPnHi/s0cMYIc7scK9jdoI1gFjr6FyDi7+xNw71
wR2nKtMHH3xQ7gvEHD/2jTrH6RVq/Sv8faQDZ62gbisQFvZwOq9BR91z2hjX
gI7bAHmVKVMm8G8KU95xvXv37jnCddcbJxi3gD46ywf7KJ1jCcCU96jL2Sa/
wFTWznIGqSjrsPmpV6+etKFOcK/Kq2pH1Ni6CsdG9rb5McnTVl+U3FVabdLo
Jzcdd9xxRw6Z1alTJ64vY0qzjZ65sXnGRuamMnfrr028fnL0u55I3Q1Tzn6E
rTdB7T2wsQPJsvc4ywP6ibTqyFTdDtPORKknUcjFJp9+1K1bVzz//PNx17Bv
5frrr7cKG3v5dfIz2QS/euLWcaD6u05/E74F1omtWbMmITmEKdMwuqP20nz3
3Xexa34yiLJ992pvE7G/JvlcccUVgWUDTPpok2Z3Wfpho0/O8JQueoWfqj5C
poE1Evfff79cpwn/HGeGdOvWTbRp00a+JxoywPuHAfLdokULuZ4Te/VwVgfO
UcH5OThrA+XhxTvvvCNq1aolTj/9dDmOhzMSFdCnpk2byrMM4avCHmH8XoFy
POOMM2RdwLwl0ohzPFSZ4/xL2CiEDT3DOR6om9hfiLlOjGG2bt1arr9U4L3L
0FM8c9ddd8mzFFEfq1SpIuOC/+03TrBo0SLZxsN2n3baafJsGBW27jcvdHkf
OnSofB7nP6KNxr5Tm/MvMX7bvn17ea7RpEmT5D5GlCHmkLEP0ybvOOcq6nJO
tKy9yhkks6wTyQ9sTcuWLWVdwplLsHdOmwRQTogfa6PV2Z6mOoa9Abb5MdUd
G32B3O+8804ZX8OGDcUHH3xgTCPKQic3PzAmCXlivyzWgo8ePVr2k9xnYZnS
bNIzL3TP2OqQrsz99FcXr5/+6fQyrI0OU87JsANh7D3Q2YFk2XuAuM4777zY
OVN+ZKpuB21notSTKOViyqcufuQf92I/Fvqh6Ptgj36rVq1icx9+YZvkp7MJ
fvXET8chx0ceeUS2AbgXuoc0IRzb8o6yTIPqDuod6h/igd+Me022Isr23au9
DWN/gUk+DzzwQKj+m40+6tLsVZZ+2OiTWxcx3+oOP5V9hGwAZ4qgj6349ddf
E94Dhvk+9zkrOKsSY1FOPxdxYXzSa67MK0yMY2a6f+uVd+f5kfDh3WtideBZ
tScXz+Nv5ziWLckoZ5BtZe2VHwXsnd9vAOM2OKPXTaKyDyLPsPqSTP1Qe4Hd
exGCpFlXLrq4gz7jxlTmyYrXSZRlkyo7kKgNUGGm2g5AFlhvaEOm6XYi7Yyb
RPQkKrmosMLIRp0ZjbkKPO+1/skdtq38wtgEHfArVHr9iMKm6Mo0St0xEVW9
9mtvw8rKTz6JysZGH6NsM2z0KQzJajuIGczxYdzJC8yPutfFktwLyzpaskWe
fn0pkn3kVp3FGLhpnsML6rY3lAshhCQGfGKMR2INhQLjTVhX6tfOktwJyzpa
skGeOL8Hawew7wTrdkxnSJHcTW7UWYynus9Xt4G67Q3lQggh0YD5WqyLxtkd
WPeKdRJRzoOTzIFlHS25XZ5Y/413T2LfwIwZMzjvnwfIbToL/87rjEAT1G1v
KBdCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEJIKnnhhRdEhQoVRP369dOdlFyDl8y2bNkipk6dmsZUEUIIIYQQ
QlJB3759s/6d5gsWLIg0PLfM2rZtK4oWLRrqfSeEEEIIIYSQ3MOoUaOy3n/q
0KFDpOG5ZYZ3RX766aeRxkEIIYQQQgjJPLLdfzpy5Ii48MILIw0z22VGCCGE
EEJIWPbt2yeGDx8uBg8eHFsHNnv2bPn/unXrRO/evUWXLl1kPx3MmzdPPPPM
M/Lj5t1335VhDRgwQEyfPt0Y96pVq8Rrr70m99a88cYbYsyYMQmFB/bv3y/7
/+PHjxfz588XI0eO9PQF/MJOJE0nT56Uz40dO1b069dPrF692irNpnD90rR0
6VJRrVo1UaBAATFs2DD52bhxY+By08kMe5/69Okjw3Ku3zPldeXKlaJnz56i
R48e4vDhwzLNCJcQQgghhJDcyvvvvy/Kly8v+9vgww8/FEOGDBG33nqr/H7o
0CExaNAgkS9fPnHgwAF5bffu3aJjx46iXLlycWG9+OKLolmzZuK3336T37Gm
DL6AHx9//LEMR/Htt9+K2rVrhw4PrFixQtSoUUN888038vuOHTtEzZo1c/hP
fmEnmqYnn3xSTJ48Wf4NX6Ny5cpi1qxZ2jSbwtWl6eDBg9IvKliwoMwzPvCX
gpSbSWYIb9y4cTKsn376yTqviBdnUSA++GYIF2Fs3brVKA9CCCGEEEIyDfSF
L7roIjln4aRx48Zx/sb27dvj+uFg5syZcf3wnTt3iiJFioht27bFrm3YsEGU
LFky5hO4mTBhgmjUqJE4ceJE7JqaVwkT3tGjR8XFF18s3nrrrbjr7rMQdGFj
/iWRNN13331Sfor+/fuLW265xTO9NulBuDo5gbVr14pChQrlCNem3Gxltnfv
3hz+k01esWeqcOHC0i8Hu3bt0sqCEEIIIYSQTGXJkiWyT4z+uxOsIXP2nTEv
4e6HY57B2Q/H/AT68NOmTROvv/66/LzyyivyOfS9vcA8CvbtnHnmmfKsbPgu
WBMWNjysf8PvmJNxMnDgwLj86MLG2rdE0wSf55NPPpHr2uBjVKpUSVsOpnB1
cgJ+/pNNudnKDGlw+082ed20aZPInz+/+OWXX7QyIIQQQgghJNPB2iv0ibE3
xYn77ACbfjj622eddZbs17s/OnCuG/bENGnSRJQoUSK2Li1MeCo/x48fj7vu
9gVMYSeSJvgS1atXFxMnThTff/+99I1M/pNNuH5pAm7/Se13sik3W5l5+U82
eYX/VKxYMW3+CSGEEEIIyQ1grkXNuTh5+eWX4/rOe/bsydEPR7/b2Q9/7733
5BkG7nkM9Lf9fJ4pU6bErefCs2XLlhVff/11qPBUfr744ou469hH5MyPLmzM
+4RNE/4vXry4ePvtt2O/wedRPoVaw+bGFK5OTgD+E/Y/KXAOCLApN1uZuf0n
27zSfyKEEEIIIdnEHXfcITp37hx3rU6dOnF9Z8xNoA/s3PffqVMnce6558a+
Yx0XzhzA2RNO0Jf383dwb/fu3eOuNWjQQPoHYcIDdevWFc8//3zcNewduv76
663SinMcwqYJZ3C4z0fo2rWrqFixojh16lSOfWY26UG4OjkB+EeIF3NAQIVj
U262MoP/hjgwDwZs84p9XNj/5LVnbc2aNaJWrVry7D9CCCGEEEJyAz/88INo
2rSpPC8Ae2FGjx4t+9ju8+pwPnX79u3leX2TJk2SZxqg/4z1ZF999ZW8B/15
hIUzqzEvAV9k/fr1vnEPHTpUNG/eXJ6BjfO5R4wYEXcuQtDwVH4QJu7F/i74
IG3atJHnM7Rq1Uqel6ALO5E0wW9o0aKF3KO0ePFiec745s2b5fmGOKsOczF+
6MI1pQmgbNq1ayf3RjnPEbcpN5PMcKZ9vXr1xOmnny79KpyjZ5PXd955R/pH
eO7uu+8Wb775ZlyacUZ+mTJlxOeff64tU0IIIYQQQjINrMfCei/g3vuiwBnV
6qwJ7LHB32o+wh2W6pvrUO8SQliYx3DvwQkanvsZdR435mfwvPvsA6+wo0gT
zsn78ssvY99//fVX6/MTvMK1TRPmiHBuuZsg5WYjMyeJ5JUQQgghhJBswM9/
IoQQQgghhBDyH3CmGtZqYV0V1nyZzs8jhBBCCCGEkLwK9r/MmTNHzJ07V8yY
MYNrsQghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEkDzMyZMnxe7du+X/4MSJE2lO
ESGZCesKIYQQQkje5ddffxVPPfWU/IwfP1707NlTTJkyRXTo0EF888036U5e
2nnhhRdEhQoVRP369RMKZ+nSpaJGjRri3HPPFT/99FNEqctstmzZIqZOnaq9
p1u3bqJdu3ZJS0NU5QcSqStLliwR1atXF+ecc474+eefQ6fh1KlTYtSoUeLb
b7+V3xctWiRWrlzpe79f/m3KJlOIKq1R6kKq8Epzbio7J0HlH5XNzK3yIoQQ
krk888wzYvTo0XHX3n77bVGoUCHx5ZdfpilVwViwYEFSw+/bt6+46aabEg5n
8+bNIl++fHnGf2rbtq0oWrSor78wbdo0Ub58ebF9+/akpiOq8ku0rmzcuFGW
fyL+065du0T+/PnFhAkT5Pe//vWvom7dutpnvPJvKptMIsq0RqULqcSd5mSW
XabZ0qA20yv9uUnXCSGE5A7KlCnj2fe78847c43/hPH/ZILx/ij6XJgzyEv+
048//ig+/fRTz982bdok7r33XnH48OGkpyOq8ku0rmCOKlH/Cezduzf2N2R8
9OhR7f1e+deVTaYRZVqj0oVU4k5zMssu02xpUJvplf7cpOuEEEIyn99++00U
KVJETJo0KcdvGN/ODf7TkSNHxIUXXpjUOOg/RQ/KDfqXCqIovyjqSlT+U1By
o8+QLHKjLFKV5ky0pUFsZirSTwghhICbb75Z7sl49dVXxQ8//BC7jr0e2Guh
ePfdd8Xw4cPFgAEDxPTp043hYk9Gr169RNeuXcX3338vhg4dKte/v/7663Hh
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
etx1zKW++uqrvs+lUtfwvOksQtaneK6//nq5/0mBtXrO9bG271WgXAnJXrzq
ohMb/4n1kRASBswxFClSRJ5/gPPcnB/s24bt2bp1a9wzGBPG2QDYc4J5CsyT
gwkTJsT2JPTq1Utccskl1unYvXu3uPLKK3NcR9hYx4x0tGzZUvZH1Jqt7t27
x92LvjTeO6QD/Rq8l8jmg32pNqj1j8hDtqCbg3r44Ye17VFYwvhPaDsh+/79
+8euQT9167tSpWsKnM1YunRp399zc30CUdcpZZOw5hF9G+xRwBkgb7zxhnX+
QW6XKyHEH7+66MTGf2J9JISEQfX9cUbN559/HvdBf/b888/P8Qzu3bhxo9i0
aZM8d0L1eZ1rYnCWwW233WadDpxP4WfDEA/SiDWGWBuG91LhvJ2PP/447j7Y
U9M4P/pgeMeVzWfXrl1Wacd5d+k+ozpq/OagcOaf157+KAjjPwG8txhr5BQ4
LwJzDH6kStcU6EcXKlTI9/fcXJ9A1HUKZ9+rOUXM7b7zzjvyvH6vM1N05Ha5
EkL80dVFhY3/xPpICAkD9j6dddZZgfY+qflyjKs719gMHTo09jfCC9LPXrRo
kbj11ls9f1P9khtuuEEbBsatsWci1YwdO1amz3T2wZw5c+QZ56YP5necYAzd
uS4u6o/fOeNYf+Seg8KcZBRzT23bts2Rb5yphvOq3df9zhBQVKpUKbZWEGfS
mva2pFrXcK4IwvRbZ8L6FA/W6cEHce59cp5fCP2zmceiXAnJXnR1UWHjP7E+
EkLCgL1PWLvnBnMpfnufFBUqVIjtHcDeH4wTK7AfwO/dQF6sXLnSt9+h+iV4
74sO7Ne64IILrOOMCqx1RPqOHj2qvQ99NYyBmz4YE88E8P4k5xwU5p7CnsPt
Br6mO9+NGzeW+1Xc101nI8HPwzp4gHcEmfbGpFrXsF7MRj9Yn/4Pr/2YzrEJ
6KPubBM3lCsh2YeuLips/CfWR0JIUNQ+g0GDBuX4DXsVvPY+OZ/F71ijAtBH
VOO96O/i7DX8j8/kyZPFv/71L7nnAGvd8N39LlOst8J8lxeqX1KvXj1tftC/
9wtDgfe6Ihybj2neQ4F1Rkif7X6p3IRzDgpnHSVj35Mi7Po97DXBO6Cwjgxt
qolU6Zpi2LBhMn06cmt9AlHWKWWTXnzxRc/fsYYP80W2crCVq/puCjPVukMI
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
zUadzERs7EOqyGZblS32IDfi1Cu/csikepCXeOGFF0SFChVE/fr1464HLY9M
sh1+ecomGjRoIC6++OK4a0ePHhX16tUTlStXln/nZTZv3izy5cuXFbZ+wYIF
6U5C2mjbtq0oWrSob9932rRponz58mL79u0pTlnyCaPDy5YtE8WKFdPe4yVT
r7iypQ5t3LhR5iNV/lM262SmYbIPmZSW3K4X2WIPMhW/dt6tV17lkEn1IK/R
t29fcdNNN8VdC1oemWY7vPKUTbRo0UJcfvnlOa5v3bpV1q1evXqlIVWZw7ff
fps1th5zi3mVH3/8UXz66aeev23atEnce++94vDhwylOVWoIo8OQicl/8pKp
V1zZUoe++eablPlP2a6TmYbOPqSabLdV2WIPMhW/dt6tV17lkEn1IK8xatSo
HL5G0PLINNvhladsws9/OnLkiKxbd911VxpSlTlki61HeZrWY+VVIJvffvst
3clIGsnyn2zjypY6lEr/Kdt1koQjG/QiW+xBJhKknWc5ZBbJ9jXSYTvyqv+k
1qq89NJL8jv2QmFd5dixY0W/fv3E6tWr4+5fuXKl6Nmzp+jRo4f0b8eMGSNG
jhxp9awJXdiKd999VwwfPlwMGDBATJ8+PXZ91apV4rXXXpPxv/HGG/JZdz6H
DRsmyxlhHjt2LO53p41ZuHChGD9+vPyoNaa//vqrGD16tLw2e/ZsY3ps8qLD
L1xdXrHWGXvcChQoIPOKD/INEi0bm3RhPKR///5Sl4YMGSK+//57eX3dunWi
d+/eokuXLrJug3nz5olnnnlGfpzYpNMvHqwJ7tOnj4zH3ff1K3+Vtoceekic
OnVKzJgxI1ZWYfrPXvKJMg6d/BPxnw4ePCj3Qo4YMUK8+eabMp3AT6a2/pOu
PBOtI7o6r5OTCeU/YU3zzJkzZdrdZZWInbR5XodtfbLVuyhsg6mcsb6ha9eu
sq4OHTpUrpl//fXXY3pmIzPgV4/nz58fs9n//Oc/5bW1a9fK9IwbN068//77
nrrsJSM8g88vv/widRn5gi6hXtjm2YmXvQpjq/zSG7UtiSqOoPbAln379sl0
Dx48OLaGTbXJQdoanQxMmPobYcK1TbuunffSK3c5eN2D31RYqC+vvPKK7O+g
jiqyzWb59SMUUdXD/fv3yzBgm2CncI/T19DZgky1HaY8KRJphzMJL/8JayOx
fxy/qXbsySefFJMnT5Z/Q6bYGzVr1qzYMwcOHJBtX7ly5aT8duzYIesm1gGa
njWhCxu8+OKLolmzZjHfGvPXKJePP/5YnouhgL2oXbt27Purr74qmjdvHjsn
47PPPpN7KqEDzmeUjdmzZ494/PHHReHChWX/EiDOZ599Vtxxxx0yXbr02ORF
hy5cXV7RB4ZNKliwoOwD4qNsVaJlY0oX+pnQJWWD5s6dK2677Tb596FDh8Sg
QYNk/iEXsHv3bpkPyMeJKZ26eJBX2H53m60rf4QDn6FQoUKyDUbbDDp16iT7
e1HIJ6o4dPIHYf0npAt9VmVD0R+4+eab5Xc/mdr6T7ryTKSO6OqBSU4mlP+E
tsGvrBKxkzbP67CtT7Z6F4VtMJUz+rpIB+5TNun5558XN9xwQ0zvTDLT1WOU
GfQUcWAcAKB9O/vss+X3vXv3euqyTkbt27eX6UD6oEvXXXddXH/SRm5+9iqM
rQpSpiZ0dSSqOILaAxvgB2NfB/qCAOdjoV956623yu9B2pqwdsLU3wgbrm3a
de28l165y8HrHvTJa9WqJe8FiB/zW+j7KrLJZun6ESCqerhixQr5HMoIwKbV
rFkzztfwswWZajts8gQSbYczCfhIJUqUEAMHDpQf9JfwP8bonNx3332icePG
se/wfW+55Za4e+ATw7eA7QK7du2yftaEX9g7d+4URYoUEdu2bYvdu2HDBlGy
ZEnZz2nUqJE4ceJE7Dc1HgR7gHx/9dVXcfE89thjsmwVXjYGz2GsRwGdVfZF
lx6lL3550WEKF30Bv7wClCfqh5tEy0aXrh9++EGeV4bz3BSop842BX0Zp+0E
sA/uNk2XTqz5NcWDfpK77TCVP8oFzyxevDj2O2wRzpSJQj4ot0TjsNG3sP4T
nnGvlb7xxhtjeyLdMvWLy+uaSe/C1BHgVw9s5GRC+U/O/dnuskrETto+r8O2
PtnoXRR22xSG0rPjx4/HPXfVVVfJtkjhJzNbOw57ULFiRRkP/kZf14mXLvvJ
KH/+/OK7776LXUM/A2fZ2ubZZK/C2CpdeqO0JVHYxDD2QAfCueiii+T4uhOE
5+y72dSNROyErg1O1P7Y1mu/dh546ZW7HNz3YD7NWdZ16tSRZ445yRabZaqX
UdVDrF/AmW1vvfVWXDheZy24yyNTbYdtnqJohzMJ+E/nnXee1b3I3yeffCLn
RqGnlSpVivsdbSHaFqxvCPqsCb+w1dgizhXBGCA+mGOGLmDOEmMlZ555pjxD
Ef6U8sGnTJkiy8wNwoG+6fqeGH+8++67Y98xT2yTHui2SU5+mMJFOv3yCnR2
NZGy0aVL/a/r+6o+qdN2YrzIbTt16UR/1hSPuxxtyl+lDfOOzrRdeumlZsH8
f0zllmgcNvqWiP/kfofB008/Lf70pz/5hhtk/5NO78LUERWXVz2wkZMJ27JK
xE7aPG+TRlN9iiovNpjK2UvPsJbk6quvjrvPS2a2dhw0adJE+v9vv/12jvu9
dNRPRhdccEHcszgP+J577rHOs8lehbFVuvRGaUuisIlh7IEOvFsA4aFv5gRz
JM6+m03dSMRO6NrgRO2Pbb3WtfNuudvYanzHOCjAPBHic69nA9lgs0z1Mqp6
iLVr+B3zhU4wb+H2n9zlkam2wzZPUbTDmYSt/wR9xPtPJk6cKOsP5ODVL/Da
c27zrAm/sFE+Z511lrRT7g+Av441mGg7oS/KT8e4ROnSpXOEh7WYznF3LxuD
sUv40Jj//OCDD8R7771nnR5dXnTYhOuXV+C2q2peP9Gy0aUL8+iQnbK/Xtja
Tl06beJxl6NN+Qfx7fwwlVuicdjoRZT+03PPPSffGeIXru01k96FPb8CeNUD
GzmZsCmrROyk7fOJpjHKvJiwKWcvPcN+J6Vn6j4vmdnacYA5rOLFi8s+hRud
/2SSJfwn53iaKc8mexXGVgVJrx82dSQKmxjGHuhQ8nTPlbv3rtukPVE74dcG
JxpuWP9JtfMgjP+k+Oijj8QZZ5wh+zvA2dfNFptlqpdR1UMVj3vO3cZ/ylTb
YZunKNrhTMLGf0JZoN1xjtvBRii9VGsqvNo422dN+LWf8F2wX9Lt9yJe+LVO
Px33lC1bVnz99dfyLAjYGff7rbBm2ulz+9kTrD/Fmk3n3JMpPUpHwvQNTeGi
T+CXVwC7inXRCuw7iKJsdOlav369lJ1ak+5OM8B4h7veoi46660pnWrNry4e
dznalH8UfQVTuSUah42+Rek/4b17zvUMYfwnG70L6z/51YNJkyYZ5WTCVFaJ
2Mkgz+uwqU9R5kWHbTl76Rn6n87xHz+Z2dpx7JfGekCs/Ydfhn6Wk6j8J5s8
Y/xNZ6/C2Kog6fXDxpYkw39KVNfUWVfqrATFyy+/HNd3s6kbNjLwQ9cGJxKu
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
jKl++OGHqv6yLUHZsvaem5G8tmjMmDH2+hdffHGO79h7SppXifLR/Em0dhgr
rbDCCo3ORpumNfZJIWgM3TbR/Kk5wbf6pptusi/ns8uZVZ4HymeMC9OYOHGi
GT58uP3dXXfdZQYPHlz1Pc86vvrqq80ll1xi7r77bm9e0tJ7+eWXzTnnnGOO
O+44a/dg/Pjxdk0/uq7/7LPPWj/xE044wZ4xufLKK+0ZhTvvvNM+8zTOq6++
aq666io7BuJ5qDNnzqy63/HHH29/N3LkSJsXrknak//yyy9tGsjr/vvvt9e5
MRV5Ouuss8yZZ55p95ZcOg7OBVNengd94YUXBvm4h8ojbzmilCVLfFC23npr
M88889jveXFtlDQ9yZN/1vsuvvhic8UVV9i9IHfGCF/0c88918oq+huf3PPa
otdff91eH9dzynD77bcHpREnqfzkl9esWbNs3igDshsxYkTVb3y6UUu7dzz2
2GNW1tQba+O33nqrOe2006wfai06n6fes9pelLy2KI2Q++W5V5E6jpIly7zt
Pynf9bBfjmnTptn7XX755RVfKqd3oXqclfc08ti2rPLVQzb0gZynZP/J2Uvs
2kknnWTl5MhTt1my8fXhSaTZWkeefjVU10PqLFRnsvqk0DrL29+kySRNLml1
WbTfKlMHio77arEVRXUOiupdM9kJN3/65ptvzM0332zPApDXaD6K1H0SzTom
bUaQOfZ6vvnmq+w5sw+CDeBM/Pvvv5/4u9dee82e+Yimw/l4x6WXXmp69+5d
2VNhr5z6SyMrvW+//dZcdtllVf5RxCTi+tVXX73yG76jj6EsjONcPQ4YMMBs
v/32VfXDmPaggw6qxDV666237Pk7xke0FfSTdOjP6efhmGOOsW0pyjPPPGN/
98knn9j3H3zwgdlxxx0rYyryRJsjn7Rtvqcc77zzjv2efA4dOtT+T/4233xz
c++996bKKY888pQjTlmypL3Tjuadd14rI14uLcjSk9D833PPPfZ8pbOp48aN
M7vuuqv9n3vdeOONc9gVn9zzzp+4D9dj4x3I48QTTwz6fRJZ5edsOfpE3pHd
FltsYe16qG4UbfcO+qq9997b/oZ8Lb300rbemVNgI2vR+dB697U9R15blEbI
/fLeq0gdR8mSZZ72n5bvetgvIMYKZz3RFXjhhRfsuKhr1672fageF5F5HtuW
Vb56yAbfr0ceecSen3H2csqUKda+RvUstG6zZOPrw5PIsrVQtF/16XpInYXq
TFafFFJnefubLJnkqcuQ/CX1W2XqQC3jvqK2ohadg6J610x2gvkT+WAO5u7L
3PXPf/5z5X3euk+jWcekzcpPP/1kxz8TJkyofEY9I5M0mAP36NGj6ry8W4dg
LXqBBRYw7777buW7yZMnmyWXXDLVRy0rPSCmQvx8Ce0q3peiZ1xHmaKst956
VvcAPVt88cWtn3kUxrroGkydOtWm8/DDD1e+p50Sb8sxY8YMs+qqq5rRo0dX
pRM/U874dP7557djBJe248ADDzT77rtv5T3j75133jlJRFWEyiOkHGmUJUt8
92kvcUL0xJd/xhvLLbecjVHjoH1Gbfrnn38+h13xyb3IXvgyyyxTFTuRfMRj
gdD/YP+/+uqroDTTyj/33HNXpYH9OfTQQ+3/obpRpN070Huudey00052Puao
Ved99R7a9orYoiRC7lf0XkXq2OGTZUj79+W7bPtFm1pllVXsHDwK6UTrLkSP
i8o8xLaFlK8etj3JVydpn9NXtz7Z+PrcOD5bW0u/GqLrIXUWavvS+iRfneXt
b0JkkiWXeD+dt98qWwdqGfcVaQ9l6BwU1btmsRMuH/Hz8fS77JE5WeSp+zSa
eUzarPz973+3684O3xyVusJ/eIkllrDxe/FncfN/1l+wTfjxMJfnhW8PMsO2
5E0PWCOK1w1z4rT5U/x5GewXbrjhhvb/YcOGWR2KQ35pi+iWu99nn31Wdb81
11yz8p59Ua5hPSvKwIEDq/o68kQ7Za84Ce6H/xf7pejupptumnhdlFB5hJQj
jbJkmdZXheiJL//4/fB91B7FSZsLZcm9yPyJ33fr1s3+jz3H1yAK+9bYE+Yn
yJD9DB9p5V9ppZWqriPufc+ePat+49MNyNvuHfQf+AQ4/vSnP5nzzz+/8r5W
nffVe2jbK2KLkgi5X9F7FanjKFmyDGn/vnyXbb/YXyHteDwE9CladyF6XFTm
IbYtpHz1sO1J86ekc3a+uvXJxtfnxvHZ2lr61RBdD6mzUNuX1idBVp3l7W9C
ZBLNd0g/naffKlsHah335W0PZehclnx9etcsdiItH6effrr54x//aP/PW/dZ
NOuYtFnBX4f5MXrKWMH5VWTB2gDrYvvvv7/VVbcmwJhiqaWWsnUdfxVJD2qd
P+F/Smx8YD697LLLznF/fEPdHD/kfuxxJq1NJM2f0s7+oaPbbLONueWWW+ze
JjpfD10NGUvHKUuW8b7K7YOH6Ikv/64Opk+fnlqOpLmQT+5F5k/77LOPWWed
dez/nFfgPJEDe7XZZptV3tPett12W2+aofWH3d9vv/1y/cblI2+7B+SO/PCR
YB5IvOWoT3qtOh9a7762V9QWJZXXd7+i9ypSxw6fLEPS9uW7bPvlZBlfS43P
EcrIexohti2kfPWw7XnnT2nyCZFNVp8bx2dry+pXIUnXQ+qs6PzJ9Um+Osvb
34TIJE++8/ZbZetA1vW+e9ViK2rROSiqd81iJ9LyQWwql48idV80P0m0xJi0
mcH3nLNeIWvQzPujawKsy6622mrm448/tufKOZsZX6ulXtPqLis9YK4alzlt
K3T+RFt37Zyz89hOfHKi4H/v5sAhdcyZRa756KOPqtJBfiHzJ+TBOeGxY8dW
PsMuOV11e71JhMqjHvOnvLKkr8LX3OHOQYfoiS//+MPxfXzcH00jbldC5F5k
/oTPAOcW8EvmzGgU9qfd3hRg1yl7XG5xitj9UN1w5Gn3Ds6V0l6xreypxc9+
1qrzvnKHtr0itiiJkPsVvVfRvj1EliFp+/Jdtv1ysozHkRk0aFBV3YXocVGZ
h9i2kPLVw7aXNX/yycbX58bx2dqy+lXIM3+K1lmo7Uvqk0LqLG9/EyKTULkU
6bfK1oGi4z7mXEXaQxk6B2XPn1raTqTlg/MCUV/GPHWfRLOPSZsZznP97ne/
s/t9PtDPU045peozzpNTV+z9ca6aa6Jgo9LqLSs9YN0X/XNn7gBf1egaADg9
i/bN1Cs6MWnSJPueuB/E38EWOMgXZxTdZ4yT4vucrGlgK6Lsvvvu9jxhFPyD
t9pqq8p7fE5Z44/7nGITuEe0TJyhYy2fPMbPB0QJlUdoOZIoS5a0E9Jx+xNO
L0L0JCT/e+65pzn22GOr0iBNl4bzt8WGQ4jc3W/icX6ywM7wG2xwHNbJ0AsH
Zaf/jvttx0krf/v27auu69+/f8VnOVQ3HHnavePwww+3v8MHi3Oi0ZggUKvO
h9R7SNvz6RixpBiXUgYfvvsVsXtZZc2qYwiRZYgcffmuh/3q3r37HG12t912
q5ojhOhxUZmH2LaQ8tVDNi7NaGwt5paciY/iq1ufbHx9bhJZtraWftWn6xBS
Z6G2L6lPCq2zPP1NiEyy5BJtp0X6rbJ1oOi4j3F30fZQq85BUb1rFjuRlA/m
jPhSunzkrfskmn1M2swg006dOs3ho5IEsRyJeUKcQ8YgnOmLnjukPfXq1cvu
czKXJQ7IK6+8Ujg9YM2beCnEbhoyZIg9y0g9sBbgxqFOz1ivIzYi81pitTzw
wANVaXFmkPOF7HGyfn7IIYdYX0/gWc+MlRZZZBF7NoS9BNoiz4BfdNFF7Zzf
rc+wr0y+KR9+/egm5w85t9e3b18zatQou+9AWqxrRONjoo88Ux4/Ys7SsW/B
M6SJS0UMFMqShU8eecqRRBmydJBP7oe/dDQeZpaehOaffurggw+28xZiM2Av
nE156qmnrP0lDca6xL7xyZ150B577GF/g0/e888/n1kPDuTCc1uSfA3Yp6Cf
cdDWkC2xtdLIKj+f9evXz9Yz56o6dOhgVlxxRWv/IaStRPMS2u4dyJc6wObh
I8BckDg92HfkUIvOh9a7r+25NcksHUNfqTMXbyiLkPvltXu11LFPlpwnCm3/
afmutS6zZMn9iL+B3yhx8+lr43ssIXqcV+YQYtt85cPelS2bqLw5d8B11CPt
k1gvjCPRs9A2kiWbkD43TpathaL9qk/XQ+ssVGcg3ieF1lne/sbXP4bWZdF+
q0wdKDruq8VW1KJztepds9gJ/nJW2cVYp5zI2eUDvctb90k0+5i0mSGmSnyu
mobz12Hdmflm2tiL/UDfGnue9LjOnTvmWv53+woQ3eekXblYw2mQP9Ko9dm1
pOPuxdoWZQ71/ULu0XE052bSzhnG8cmjFsqWJesjabHdQvUkC8YVedKoRe5J
4JMXXXuJQn9DrFEHcmA9yue/VwuhupGn3QPxYdkriO7NITv2o4hRF0KZsg9t
e2k6xn3xQyzzfmXocyhlyzJvvmu5P/dz54jjZ9ccoXqcJ+95bFst5SvbxhQl
STahfW4SPltbVr8aJU+dhepMUp8UWmd5+5uyZFJUp8rQgVrHfbW0h2bXuZay
EyFjsTh57XqzjkmbDdb+mFcDz0RjvaQ1k+YnKvIjWZYHfXQ0Pid+3UljxZai
lnbPHj7rTEmstdZadZ0T1gPWxHz7FaL+pM2f6oFsW+tDdSZaGumcyILY8exV
EkcrzxpsM8KcnHgk6Dvn9bP8uEU2kmX54KPEPg/xbfD3Yg7VKGpp96x/sf8U
fW4U60v4xafNq5oV1tWicddFY6BN4PfEeQR8P+o5XpFta32ozkRLI50TPmbO
nGl9KfFzjJ5XbY3wjDL8U3m2OM+5zDpbIrKRLOsDMXJefPHFXL4y9aDWdo+P
BHtY+Nzja84crKX81cqEeV88dqBoeThPxjMyOd/Avmg9fdxk21ofqjPR0kjn
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQojyI
l/zpp5+2mecJ8MzY6HNUgWevCdEsEG9dCCGEEELMydtvv21uu+224Osff/xx
s91225nll1/ePp+57PSjELf6yCOPtM//eeihh+zzd5577rnc6dSSh7Ig3vNp
p51m9t13X3PeeefZZyQcf/zx5uWXX7bxPq+44oqG5u+3xkUXXWSfzfvXv/61
8lkRPQn5zcknn2yOOOKIQvn0kVSOWuCZQj169DDXXHON2XrrrVv98xnykte+
NYJ65rEZbOVvkbLbsWid1LOviNLM7VxtQeTlwQcfbMh9DzvsMLPgggvmep7L
m2++aZ+PFtJ3F0nfsdFGG9mxgqNz586mT58+udNJy0NLyfz99983G264oZ0j
xcejl156qVlmmWXMwIEDWyQvtdIoPa0HzGO7dOlSeV9EV32/ueOOO0zHjh3N
e++9V3N+04iXoxY6depkJk6caN566y3TtWtX+8yrlqCZ9CqPfWsU9cpjLfZa
1EaZ7Vg0Hz4b1xJ9haPZ27nagsjDUUcd1ZD78ixMnnmWB/aFQvvuIukDzxVt
166dfeao46WXXjIffvhh7rTS8tASMme+tPnmm5t+/folfk/5tt1221Yzf2qU
ntaD6667rspGF9HVrN+88cYb5oADDrD+mvUkXo6i0J7nnnvuFpszRWkmvcpj
3xpFvfJY1F6L2imrHYvmJMvGtVRf4Wj2dq62IEL54YcfzMorr9zobATTEuML
7MkKK6xQt/RbSuaDBg2ysnr33XdTrxk6dGirmD+1Nj31UW8bjbyi8/96UVY5
vv76a6urLX3OsNn06rc8fxKNQ2PGtovPxrVUX9FaUFtouzz77LP2LM4JJ5xg
4wBceeWV1mfzzjvvTDwv8Oqrr5qrrrrK6sS1115btb6LfxrnDOaZZx57DS+u
dzz66KPm6quvNpdccom5++67K59zbuacc86xZ2i458iRI83gwYNt+vE9WdYZ
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
p1H7Rl58aYW0myi+631yjecxaoOJ5YwsiTHNmJcz3fRT7Amwx91IfU6ry7zy
C5FhXv2H0D49RM6++9fajmu1I1lp4yvBXIS+lljXgHyJh8vnxC0PlVdWO83K
Q1b9hrRv333zyAPKkHeZNi4rP3zWr18/q4fEJe/QoYNdv2UeBfF2ju6Gli3L
FhRpx1CvPk00L9G9a3TKxV5Mg31GYohkrYWwJkB81KTfxmOe5AUdzJMGMVSI
Ge5gPSrkHGZrI03mEFJneWEdCrvIuUnfWap63D+adlwfXMxZfLNZ24v7JDvS
ZFaLzvj0syxZkE40Njf3DPFDzdt+3L3qWX8h5SjDdoTkpYxy+tpi3nKUacOy
0gptN47Q64vKlfT5nbsH/0f3DaCR+hyvy7zyy/ObPHqTt08PkbPv/s3Qjoum
nVdeefIQUr/1GqPUU9Zl27hGkWQLirTjeJqNbguiZUjz/RVCCCFE60J9ej4k
LyFEXpgjX3DBBdZ24B/m8+8UQgghRHOiPj0fkpcQogjE9MTXl2dK89yv6B6y
EEIIIVoP6tPzIXkJIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIRrJzz//bNq1a2fmmmsu+1p33XXN+uuvn/nq2LGjWXHF
Fc2CCy5Y+V30tdhii5nvvvuu0UUTQgghhBBCiNK5/PLLK3OfM844I9dvZ8yY
YT788EMzcuRIc8ghh5iFFlrIpvPPf/6zTrkVQgghhBBCiMbyl7/8xc575pln
HvPEE08UTufLL780Rx55pOnQoYP55ZdfSsyhEEIIIYQQoq3z3nvvmbFjxwZf
f+2115qffvqpjjlK5quvvjIrrbSSnUO1b9/efP311zWld9ZZZ5lx48aVlLvm
oLXUpRBCNIq8dhJkK4UQ4rfDlClTzDPPPJP6/bRp08xBBx2Uax/m3//+tznq
qKPKyF5uHnvsMbv/xByqe/fuNaXFuSr8AhvFr7/+aoYNG1Zaeq2tLoUQoqVJ
s5Oszw0fPtwMHjzYvPrqq3P8TrZSCCF+O9xyyy2ZcRIOOOAA88knn+ROlz6G
vqYRnHbaaZWzUFdeeWVD8lAGb7zxhpkwYUJp6bXGuhRCiJYkyU5OnDjRnHji
iXbe9Nxzz5mNN97YnpVljSuKbKUQQvw2uOKKK1K/e+mll0zv3r0Lpfvf//7X
bL755nP0Ly3B//3f/5ktt9zSzp+Irzd58uQWz0MZXHfddebHH38sJa3WWpdC
CNFSpNnJPfbYw8yePbvy/t133zVzzz23ufnmm6uuk60UQojfBlnzp3/84x/m
0UcfLZz24Ycfbl544YXCv68F/BKXXHJJO4daZ511SpuHtCSXXnppaWm15roU
QoiWIMlOEk+IfqR///5Vn6+yyipmv/32myMN2UohhGg7fPHFF9ZX7/777698
xhlZ9x57f9ttt1X9hnnHDz/8UHmP38L+++9vdt99dzNkyBDz0EMPmX322cf6
NdDHxCG9U089tU4l8kM8cufHd/DBB9flHlOnTjU33XSTPaeUdY4sFNYt6b/x
A6Fvvv32281//vOfmtON1yXkqc9G16UQQtSbJDuJTSaWEHtTUZZZZhnTp0+f
OdKQrRRCiLYBcRDOPPNM69e2wgor2HOwgO/B999/b/8/++yzzRprrFH5zaef
fmrWXnvtqnT43cCBAyvzEcbZPCOJ96eccsoc93399detH10WjNnvvffeoBfn
evPSr1+/yhzqjjvuyP37LO666y6z55572nzRx/bq1cs8/fTThdN76623zL77
7msef/xx89prr5lHHnnEznuJy/7BBx8UTjepLiFPfYbUpRBCtFbS7GQSzz77
rLWT2Og4spVCCNE2GD9+vD33SjyC+eefv+LLFvXdmzVrltl1110r71955ZXE
PoA06DeWWGIJ6+v98ccf21hFjPfj0B/9/ve/z8wbc5Bbb7016MVeT15mzpxp
1l9/fZvnxRdfvKZ5SJQnn3zSxkifPn26fc/zd9dcc03z0UcfFUoPOXbs2NHK
DK6//nr7XF8YOnSonZsVJa0uIbQ+Q+pSCCFaK1l2MgrnoDbddFNz+umnJ34v
WymEEG0D549w7rnnmt12263yeTQ2HbFaL7jggsp74r517dp1jrTceHv77bf3
3pe5C3OWRkOeF154YZvvzTbbzO7D1QrrlCeddFIJufv/dOvWzVx22WWV99H/
R48ebeM9FSWtLiG0PpulLoUQoh5k2ckoJ598sjn//PNTv5etFEKItsUGG2xQ
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
EEIIIYQQQgghhBBChPH/AEa4+/8=
    "], {{0, 363}, {848, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{848, 363},
  PlotRange->{{0, 848}, {0, 
   363}}]], "Input",ExpressionUUID->"3c098ba2-818f-4bd1-abb5-137a5e96fa00"]], \
"Text",
 CellChangeTimes->{
  3.727359848212343*^9},ExpressionUUID->"a283a1e0-a0e2-4231-8117-\
7ce7bc206e73"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qn8FWP///GykzVuSSnSjWw3ct+UnSj7dotCSkiyR8oW2YkKkSStihal
ulVaUZJIyJYoRKlUWijV9fe+/Ob858x3zpmZc+Ys32+v5+Nx+H5PZ6655prr
e+a65rquz+xz5U0XXLNZuXLlWm/z138uaHbHSbfe2qzdhTv/9ctFN7Zu2eLG
q686/cbbrm5x9a1HX7n5X29O+euzJ//1wxZ//WwAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAoJRbt26dWbBggVm/fn2hswIAAADk3GOPPWYO
OeQQc8EFF5TJ/SG9hQsXmuuuu8507tzZjBkzxtx///3mvffei5TGF198Yfr1
65ejHOYfddRfmPPctm1b07JlyzzlqDiVhfqTz7/pslBeAIDS68EHHzT16tUr
s/tDaocffriZOHFi4vc6deqYpk2bRkrjmmuuMVtvvbX5448/Ys3b6NGjY00v
CupoSUHn+ZVXXjG1atUyc+bMyXPOik+m9aeQdd4tV3/TqfD3BgAolG7duuX1
GpTv/cHf/PnzzQ477GA2btyYeG/GjBnm22+/jZTOihUrzKeffhp39kyrVq1i
TzMs6mhJ6c7zZ599Zi699FLz22+/5TlXxSnT+lPIOu+Wq7/pVPh7AwAUCv2g
TZParnvssUehs+Fr5cqVpmrVqgXbP3U0Gp0vd396U5dJ/Sl0nS8k/t4AAPny
yy+/2OvOSy+9ZP73v/+Z559/vsQ16OOPPzbPPvus/Zz+fc2aNYl/+/DDD02H
Dh3MzTffbDZs2GAGDx5sunfvbj/nN48izP7Gjx9vunbtap544gkzaNCgSMfz
ww8/2LT79u1r3n333UjbBpk6daoZMGCAnSv/6quv2uN0i7Oc/Oie7OOPP266
dOli1/AsW7Ys9P4dfmWr47rzzjvteJC210v7ueOOO0ynTp1C50PrCB544AFz
0003JR1TqvMZpkw0T+/YY481m222WSJvOs6gY3IEnTM/Yepo0H5TSbWN9qP9
6TVkyBD7nsbjXnzxRdOjRw/zzjvvmClTptg1W7feeqst86efftqupxg4cKAt
P4fiW+h4te2jjz5aYo1XlLroV36pzrPk8m8g6LhSCaoDqc6Jyvu+++4z7du3
t2NbTl6DZFt/gup8Jvn1K3uVo15r1641q1atsuWjdF977bVEmn7nOux5DHu+
sr0GSSZ/525aD+n8/TlroRQv5oUXXrDvDR8+PFJ6AIDip37CCSecYH788Uf7
+9y5c83JJ5+cdA3q37+/ueKKKxKxwz7//HO7ja5dovbYc889Z7bYYgt7rVi0
aJF9/4YbbrDttaj7e/LJJ02TJk0S95M1N0TX+zB0/TvvvPNsHrT9ZZddZtuP
cZg1a5a5/vrrE78rpsDpp5+e+D3OcvLz+uuvm7p16yb6HCNHjjRnnHFG6P1L
qrLVvJdx48bZNQA6N3rNmzfPpudtj6TLh+5hq81erlw5265Kt8+wZbJ06VIz
atQos/nmmyfypv0EHVOYc+YnTB0N2m8q6bbR/lR2KouePXva97S2Ztddd7W/
//zzz2bJkiW2X6rP3HXXXYlyeOSRR8yJJ56YaIPq3/r06WN/1ntHHXWUGTZs
WCIfYetiqvLzO8+S67+BoOPyE1QH0p0Tlbf6mXvvvbdtf6su6Ji/+uqrlPuL
o/6kq/OZ5jdd2Ss2ij6vMlW6Rx99tO1bi9+5Dnsew5yvOK5Bmfyde2kb3QvS
MTlzAFUW6gOef/755ptvvomUHgCguK1evdpUq1bNDB06NOl99xpVXRt23HFH
u3bErU2bNvZa7NAYjK6Tb731VuI9XbsU9yfK/rQWZauttjJff/114t9nzpxp
dt5558B5NpMnTzZVqlQxy5cvT6RVo0YN89133wUVRShqizZs2ND8+eefifec
e45xlpMf9VN2331388YbbyTeUzvEudaH2X9Q2Wpe3DbbbJO0vfe+bFA+RO11
p80U5nyGKRONi6h94hWUfrpz5idMHQ2zXz9ht1F5Kl7F77//bn9WG89N50nl
pX93O+igg+w4gFx++eXm4osvTvybxu5OO+20pM+HKfd05ec+z5Lrv4Gwx+WV
7hjCnBO1ibfcckszffr0RP5TibP++NX5bPObquzLly9vFi9enHhP/Zmrrroq
8bv3XKdLy30eg85XXNegqH/nqehvqmLFimbs2LGJ99Q//PXXXyOnBQAobppb
oeuY7j26dezYMXEN0twyXWO9FAtK1ybn2qt7eUrrp59+SnxG9/3UD4myP+d+
uNLX/Ui9evXqZbfTtTid/fbbz87jyhVdjzVff6eddrIxXTVXwrk/GWc5+VHc
KG2Xqg0WZv9BZevXD/LO0w/Kh6icnDZTmPMZpkxS9YOC0k93zvyEqaNh9usn
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
xR2VPn36mMsuuyzjtD/66KOUbVfFHtC1b6eddrL3C5UPxTTTtdhN+crn+H8u
yyPf0pX/s88+m/hZz+Vzynj27Nn2PrBDcfLUZ9XzOKIKsw+1ERQnSnnV+8qv
+iheYeuB0u3Vq1eo1w8//BCYnj7jLg8vjbVlGu83qp49e5qGDRsmtZ90z13P
ntxqq62S5hWpDbbzzjsn2qw6Dm+sXY1xHnLIIWn3qXvX2i7fsctff/11m2fd
l69UqZK9d+LQ3+DRRx+dtF6sSpUqtj3rlq7u5rL+K88qs1TjsF7FUsdS1S+h
jiXXsTDfW3F+/3lFrWMAAH+KO6Pn6zncP+tZFUcccUTGaSvGWv369X3/zekH
nXjiiWnTWLNmjdlxxx0D96U1xGorhHnp2eWp5LI88i1d+a9YsSLxs+59uu8D
e+m+aSb9oDD70DwRdxtPayD8+jth60Hczj33XHPVVVel/He1+dTGSaV9+/a+
z3EJ+9L2Dt2fr1q1qr13oFhRagvpPnWPHj3svWE9K1P3n/VSP0/b//zzz3Zb
xQvU7z/99FMiPbW3atSokfb4lba2c+4FBInreJ24JPq7vuWWW5L2cfDBByfF
D9Qxli9f3nc8IVXdzWX9V38iSpkVSx1LVb+kWOpYtscaVx0L870V5/efV9Q6
BgAoSffftt56a/Pdd9/Z33VvqlOnTol/v+eee8w111yT+F1reSZPnmy308+6
j7d06VJ7r1D3Tb3P+JsyZUrKfo7TD1IbIB3Nt9hzzz1DHYuua2FeqeKORSmP
qGURVpzppit/N7V90j1fMdN+UJh9aP6MM7dGdL+1YsWKJT4Xth7ESc+nr1ev
Xtr72WpTaW1EvqhtpTUXWl+nfqHmLWm8YpdddrFtVu/L4bRRnXk/ojbq3nvv
nXZ/OmfarlDPrVGbUPOFHGqHbrbZZom2t6i9fvjhh/tuH6buxl3/NQ6g75Ew
iq2O+dUvoY4l17Gw31uObL//vKLUMQCAP80D0D0uZx6EsxZGNN6uZ7V98MEH
9nddr3Wdq1mzpp0robaB5oHrGq7/q8+gWAXu5+zMmTPHHHbYYb77dvpBiluQ
jvokqdKIW9jyyKQsZPny5UnXVq9M0tWcQvV3vvrqqxLppSt/h55T6l6jrDXO
3rUQ2faDwuzDceWVVyaNgTjC1gNtHzZehtZIp6L2ndaKq/2jNpGe4e5H/Xh3
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
woWx9oP0nUI/CABQ2vj1gzRe4Hj44YcD01i5cqWpWrVq7HlLZcmSJfYavn79
+rztsyx58sknc5o+5wd+8v09EaTY8pNP9IMAAPDvB915552Jn9WmdWie04AB
A+zamFdffdV0797dzjXX+o/NNtvMPPvss/ale8oOtYX1+RdffNE8+uij5r33
3iuRB790U1HaSkfX8C5dutj9TZ8+3XTo0MHcdNNNtm0jo0aNMvfee699OT78
8EP7uZtvvtmuVxk8eLDd1/PPP+87x01jPo8//rjdT+fOnc2yZcvs2qAHHnjA
7su7jfKm/KhNoDTd4yFR9j1+/HjTtWtX88QTT5hBgwZlXFZuWhOkdPV5nfP+
/fvb44mb3/lx+kPpymfKlCnmvvvus3Oyfvvtt0TZiF/ZqT7ptXbtWtuWU3mo
zF577bWk/ATVv6h1wm/bdPUum/Td/Oqiu8zjqHeqb+3atUusfYvz+IK+J9Id
Q5BU26arU0H5SZdu1HOaSf5yWecl236Q5groeF566SXzv//9z+bbrx+U7rvM
K5tjDjruqOcsVb7TnbMw5Z7OokWL7D47deqUmK85fPjwpPwHXePS5R0AUJLa
xLvttpv9/n755ZftdUJrhrxmzZplrr/++sTvuo6efvrpdh2Rvo8333xz8+OP
P9qX8z0td911l+nTp4/9Wdebo446ygwbNiww3VSUttbg6xquOe7a36+//mqe
euop+57Tb1uwYIFN193HU9tR65222GILe33RdUduuOEGc+uttybt5/XXXzd1
69ZNtDdHjhxpzjjjDLt/rSX3tiHUr7jiiisSbX6ti9FaZLUXouxbYzVNmjSx
/RbRvB1dzzIpK4fycvHFF9u2n9IYN26c3fbMM880c+fODdw+Cr/zI0Hlo/Om
9dY6X2pfKV9K46uvvkpbdtddd539vOqWyuzoo482AwcOTOQnqP5FqRNeYepd
Nuk7UtXFMOUaZf86byeddJKNnxL38aX7ngg6hnTSbZuuTgV9b6VLN0qZZpq/
XNZ5yaYfpBg7Ogbnb1v5Pvnkk0v0g9J9l/nJ5piDjjvKOUuX73TnLEy5p/LO
O++YWrVq2f6O6N6e7ndobaWEvcZFLXMA2NSpH7Tnnnvae5YffPCBvb+lOHFe
PXv2tPG//vzzz8R7zljEjBkz7PXFz+WXX27b4A7d0z7ttNNCpZuKM+9q+fLl
iffmzJmTdI0QtR+9Y10//PCD/dxbb72VeE9tFcU7cmj9z+67727eeOONxHu6
hjp9jp9//jmpDaE2xY477mjmz5+ftK82bdrYa1LYfX/77bdmq622Ml9//XXi
32fOnGl23nlne13LpKy+//57e33VNVNeeOGFxPoPXbMvu+yytNtnwnt+wpaP
xjy23HJL2wYQlZcjVdlpHZI7NrfaNU47XoLqX7q03XUilTD1Lpv009XFuOqd
m9py7vKL8/j8vifCHoOfMNumq1OpvrfCpBvmmLPNXy7rfKb9IH13VKtWzQwd
OjTpfW+chKDvslQyPWYJOu4w5yxMvlOdszDl7kfnYK+99rJjhm5Ky12mQX+L
mZY5AGzK/ObF3X///Ymfdc9P98503dRc+p122snGkdN8COceZ7p+kOg7WPea
NV9A14ojjzwy8W/p0k3Frx+kfHqvEboX5z0253OKjeX+XI0aNRK/a06CPuNu
k7h52xCKQa1rjdcrr7xi20HONSho3xpnUjlqO93r1KtXr152G/W9Mikrje3p
PqLD/bPaMkcccUTa7TPhPT9hy0fr0tTe0RwYr1Rlpz68m2K/N27cOOm9dPUv
XdruOpFKmHqXTfrp6mJc9c5NcVHc7cs4j8/veyLsMfgJs226OpXqeytMumGO
Odv85bLOZ9oP0pwrbafxNLeOHTsmtdmDvstSyeaYg447zDkLk+905yyo3P1o
fF7pqx/jprlt7jIN+lvMtMwBYFPm1w9yz0fR+IFzH073pjUXulGjRvY67oyP
eNsT7vkluiYcd9xxds6d5ibou9p7bUiVbipx9IPSfU7jJN703bxtCN3309xC
L83N1uc0jzzMvtWW2GWXXWzfxvvKpKx+//13G9/7u+++s7/rGq2554577rnH
xgB39O7d20yePNlup591LVd7R9dntem894BT8Z6fsOWj9sU222zjm2bY86v2
keq0I0z9C5t2pvnKJv10dTGueueWTT8oKH2/74mwx+AnzLbp6lSq760w6YY5
5mzzl8s6n2k/yKmP+o5w8/aDwnyXxXnMYY47TNph8p3qnIUpdz9OmXrrujf2
RBzXDwBAsnRxs+Xaa6+1/1c72H1PWu3j6tWr23lXak9onr3DaWvrGrvDDjuY
ESNGJP5NbXjn2qB5BenSTcWvH+Q8+8R9jdD1JZN+kNbQ6DPOXG2HjkfXFG8b
YsyYMbY95Y03rPnd7nuNQfueMGGCXbftvdfq7DdqWan/qvuWzjw6Z22QqM2n
uRiaCylaK6H81axZ08610z41j17XYf1ffaimTZuGeu6Q9/yELZ+424Rh6l+U
tP2EqXfZpJ+uLr755pux1Ds3bz8ozuPz+54IWzf8hNk2qB/k970VJt0wx5xt
/nJZ5zPtB2n+tLZz7q04tAbF3WYP+i5LJdN+UJjjDpN2mHz7nbOw5e7HKVNv
nI5nnnkmqUyD/hYzLXMA2JRdeOGFdr63H13HTznlFPuzrt2KJeXdVt+5TrvX
Wcetz4rabs4aUofWpB5++OE2Zo/mQ6dLNxVnfY57vrjuT+ra5N6X5pDrmelu
un575wno/qz6E27nnXeeufHGG5PeU151PXHmmWtsRnQsij2lfopDn9Padvd7
QftWX0PrjZ3yc6h9pvQyKavjjz/expgTrStRm0xreDX3XPcrHYqD58y7W7du
nX1P/SGtR3Joze60adNS7svhPT9hy0dz2TXv3m8uVKqyq1KlStLnWrdunZij
H6b+pUvbWyf8hKl32aQvqeqizlMc9c7N2w+K8/j8vifC1g0/YbZNV6dSfW+F
STfMMWebv1zWeec7zB13UN8Tanc7awlTOfvss80jjzyS9J6+J4455pjE70Hf
ZalkcsxhjzvMOQuTb79zFrbcUznnnHNK/I1rna67HxT0t5hpmQPApkgxf66+
+mq71kT3RBV3RvfY9GrRooX9PtVYgvOcwaefftrGPVJcOV0v1aZ2r9FXPJ+W
LVvaNStOvFB9/2sMQWtZtDZVcZ4VQ0zr9rUeW/fVgtL1UtzS888/32y33Xb2
2uH+rGKVKh+KvaN5XYoroGuT5pBprfKkSZPsNVzbKg2lpfZInTp1TIUKFWz+
nbEV9XGaNWtmy0PxuXRtUR/g7bfftu1SpaFrvxNvTW1+rX3W3AStXW3evLmd
V+YIu2/1aRS7QLFZdW9R8X8++uijUOfAj+6Bau6b5oor5qrypDaEk6ab4nHr
mB06d0OGDLE/q/+ktojfnPgw5yeofDS2obVM2k73ed1xcdOVnd5TfdX5VVxZ
jWdVrlzZHmOY+helTqSSrt7pfm226aeqi2HKNerxeftBcR+f3/dE0DGkk27b
dHUqXX6C0o1SppnmL5d1Xt9h5557rk3noosuMu+//77dp/K3xx57JGKepaJx
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
LqZz585m2bJl9n2nXFXWapOK1lNozqNeUfOWaj9+51RUlirTbt262fJes2ZN
4t/CnvMk/9cPUtta53PGjBlJ/7zrrruapk2b/v1LQD/IrzwzypOH99wX83kP
m7+o511SnfuMyjiDftC8evWSvqcAAADC+uqrr0zlypVtO0P9hMMPP9y2k37/
/ffEZ5588knTpEmTxD1fzS9Tey0dtct69OiR1FZUu+q5556za4+GDx9uFi1a
ZN+/4YYbzK233mp/njVrlrn++usT6ai9efrpp4fKy5IlS8xjjz1m9t57b9su
mzt3rt2/2nxqH26++eY29oNeTrtR7rrrLtOnTx/7s9poRx11lBk2bFhg2fn1
gzJNK+jYXn/9dVO3bt1E23TkyJHmjDPOsD//+uuv5qmnnrJ5URmIYv+pHFUW
UfKWbj9+51T95yuuuCKxhv3zzz+3MQQ0liNhznkJnjgJburrav/jxo37+400
/aBU5ZlRnjy8576Yz3uY/EU975Lu3GdUxhH7Qev/SrvHX+9/8MEHacsXAAAg
Fc39f+aZZ8wFF1xgdtttN9vmOOWUU2y77Ntvv7Vz57QuwzFz5kyz8847B86F
+fnnn0u0nX744Qf73ltvvZV4T+2pQw45xP6s+XgNGzZMitvtjAeFyYvuaW+5
5ZZm+vTpif2JxhTUJvNz+eWXm4svvjjxu+6Jn3baaWmPTfz6QZmmle7Y1P7T
mN0bb7yR+De1Md39Q61Pd7eHRW1bd3s4KG+qB0H7cZ9THf+OO+5o5s+fn3Qs
imugdr0j6JyXkKIfpDHKI4880txzzz3//80U/aCguhI5Tx7ec1/M5z0of1HP
u3P8Qec+chlnMB70/V/HwHgQAACIg+7tqk+kdsfQoUPtfWD1HxQPauDAgfbV
q1cv++9qG6Xj10/QWIze++mnnxLv6b50jRo1EttoHc9OO+1k+2WK5e3cbw6T
F63Z1jr6tWvXJuUlXT9I1DZWfCrNG1KbUe3tIKnWiGSSVrpjc/7v9On8OOXq
bg+rXL3t4XR5Uzy9oP24j1nx1dVe99IxqI3s9E2DznkJKfpBisv80EMPJb+Z
oh8UVFci5ylNOTiK+byny1/U8y5hzn3kMmZ9EAAAyBPdX3fmynjpXrDu7Spu
7S677GL7It5XkHT9oHTtNt2f1jqCRo0a2TaVc186TF7UD9pmm21K5MXbD3LP
i1Pb8LjjjjMvv/yync+jtmmm/aBM00p3bDpHvu1AlzDlGpS3MPtxH7PGFDR+
6KX1LfqMEz8sSlvd8ukHqT+sNSslpOgHBdWVyHlKUw5SzOc9KH9Rz7uEOfeR
y5h+EAAAyBOtE7j66qt9/01rorXWZsKECXbdkGLYuqk9FNQXyqQfpPvM7vvS
2m/16tXN999/Hyov6fpBWh/k6NSpU2LbHXbYwT4zyaE+mNNGdObXhTm+bNJK
d2wfffSR3Y/Wnqc6bt1z95ar2rdOuYbJm9ZmBe3HfcxjxoyxfcvVq1cnfV79
Ffc9/2z7QVrbpTEMt8S4UIp+UFBdibMfVMzn3fl8uvw5a3/CnncJc+7pBwEA
gGKlftB2221n7xW7aU7Lf/7zH/Pll1/an08++eQS9+LVjwjqBznrAzS+4/ju
u+9KzKnTPWT1dUT7adeuXVI6F154oW0nhsmL1lZofZB37ZLaYtqvsw7cSUNt
P72veBEOreNWvAitO1AsrKDjc8fvyjStoGM777zzzI033pj0b/qsc9yKa6H+
n3vfWpNeqVKlSHkL2o/7nGo7xeFT39Whz2m9vfu9oHNegqsfpBgXjRs3tvHG
9NK8K8UGUPwyK0U/KKg8I+fJw33ui/m8S5j8RTnvEubcRy7jFP2gt99+26bj
xN5wbPjr73x01aol3gcAAAiifpDaQopNpb7HO++8Y+NxXXXVVXb+jEN9kMsu
u8zGMNY9ZcW30r3qdNR2UdtK/SzFPVDstkl/tVnPPvts+975559v96U2U506
dUyFChVMy5Ytze23325jUCnGr+Jna722O252ury8+eabpkGDBjZ9PV/mNU/b
+LrrrrP70BwrJ26w2nOKway1SFrPrTjds2fPNrVq1bIxtjS+lOr49IxP7eui
iy4y77//fsZphTk2tT+bNWtm18golpfaqLpP7qY4fzpGnUc9E0oxJ9R+1PxC
tUnD5C3dfvzOqZ5zqXXxmt+l9fnNmzdPGrsJc8411pfk//pBauM7cTu8r0Rs
6TTx4lKVZ0Z5SnPuVZeK9bwrjkGYehn1vEu6c59RGXv6Qbqnobjb2kbpKH6d
niXlbKd+0Ct/vf/NN9+kLV8AAAA/mrsims+v9o5iRjkxbr00J8YbHypuzrNF
tH5H96/d8bvjyIvuayvesJfi07mfG6u1U95YC2Flm1a6Y9M8pHTHrfJTDDJR
Gepn93hc2LwF7ccvz9pXLM/TVL/m2ms12BH8Gjs28Dmq+ai3UsznPWz+op53
J9+xnHv1g2rWDHfe9WJeHAAAAMoS9WuivtL0g1BKqB8U9bzTDwIAAEBZ0bp1
9NesWYXONbKl+a9Rzzv9XwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIvnwww/NxRdfbP7444/Az65f
v97ssMMOply5cvZ1wAEHmIMPPjjtq1atWqZy5cpm6623Tmznfm2//fZmxYoV
eThS5Bv1BQAAAMXoo48+Mi1btjTTp083LVq0MOvWrQvcplOnTok26b333htp
f6tXrzbffvutGTx4sGnevLnZZpttbDqdO3fO9BBQ5KgvAAAAKDa9evUyGzdu
tD9///33Zvz48aG2O/PMM217dLPNNjOTJk3KeP+//PKLue6660zNmjXNhg0b
Mk4HxY36AgAAgLJg8eLFZs8997Rt2ypVqpglS5Zkld59991nRo4cGVPuisOc
OXPMiBEjQn/++eefN7///nsOc1Q41Jdg1BcAAIDc+uCDD8wtt9xiGjRoYM4+
+2xz44032vlx0rt3b3PllVea008/3Vx00UXmjjvuMKtWrfJNZ8KECfb+vtq2
55xzTlZ50joSzZ8qFI2J9e3bN7b0Fi1aZK644opIYxbz5883rVq1ii0PUale
aP9nnXWWufDCC81tt91m2rZta+uAxmDOPfdcW18y7cNQX1IrjfUFAACgNFqz
Zo3ZcsstTYcOHUr825AhQ2xb1ekbpXPXXXcl1n48/fTTuchqXnz22Wdm7Nix
saV36aWXmh9//DHydt27dzcDBgyILR9Rqc+rvsrDDz9c4t90PNWrVze//fZb
xulTX/yV1voCAABQ2mgdkNqiihXnpfGhPfbYI1Q6f/75p6lbt65NS/G9Zs6c
GXdW86Jbt24px72imjFjhmnSpElG2ypm31FHHZVYs5Vvb731lj2XOgY/bdq0
ySp96ktJpbm+AAAAlDb33HOP2WmnnXzn4Rx22GGmUaNGodOaN2+e2XnnnW3b
dv/994+tfZhPTz75ZGxp3X777aHjTfi59tprbfy+QtB4zY477mjnnTnc4xRd
unTJeh/Ul2Slub4AAACUNscdd5xd6+G1bNkyOy/qhRdeiJSe4ho7852aNWsW
VzaT/PDDD+all16y6zLefffdrNPTPXS1PzW36JJLLjH9+/e3x58tte1XrlyZ
9N57771n+5Yqc63BGjNmjF1/pfEVxUBz69evn7nzzjuzzkcmjjnmGLs+yKE5
cHfffXfi9zBx1cOgvvx/pbm+AAAAlCZaG7TVVlvZteo9evRIemltvNqmX331
VeR09fwhp237yiuvxJrnV1991Zx33nl2Pbnao5dddpl55513Mk7v888/t8+O
nThxopk1a5YZN26cWbhwoY3vPHfu3IzTXbBggdlvv/1KvK94aR07dky0+9We
1TNw9Hu7du2SPvvJJ5/YuWNB1DYeNmxYqJfKLYhTLy644ALbtlZ7X/EyVPa5
QH3Jb30BAADY1Dlrg0aNGmW++eabpJfai5UrV84oXbWjDz74YJu25lZl0z50
mzx5so21vHz5cvu7nqtZo0YN891332WUnp6TVKtWLdsGFY196Xmd0qdPH1sG
mVJsiVRtUq2tV9loPqLWdSgfihGmdrWb8rXvvvsG7kttfT3/KcxLYyNB1LZX
/gYNGmTX7bz55pvm6KOPNj///HO4g4+I+pLf+gIAALCp09qgXXbZJZa1QV5q
u2277ba2/fbvf//brovPlu6XK3ZzXBQv/Kmnnkr87v556NCh5ogjjsg4bcUQ
q1+/vu+/Oe3aE088MW0a6h+oX5Bvmv+mNrd7bdAjjzyS+Fn9ijDjSlFQX0pv
fQEAAChttDbI7/ktv/76a0Zrg7wUS0vtt8MPP9zex86G7uErrWnTpqX8jNZP
aAxAz5TUzy+++KJZunSpHQfQ2hC1VR36jOKUOWMDmjPlfg6N+ojXXHNNRmnL
lClTUrZbnXatnsOTjtac6Jmj+ea3Zsz9nE6Vk8ZBNAaiMtHaIa3z0e/ZrJPJ
Z32Jej6j1JeoaUtpri8AAAClibMGxH1P26F1JJmuDXJTW3CvvfbK6HkoXpMm
TbJ58ntmjdqkmtun/dSsWdOuZ1HsseHDh5t69erZ/+szTZs2TTzrResuypcv
nxh3cNZ6iNaqK996nqhETVvmzJljx9T8OO1arVtJR23uVGm46Xm3SivMK1Uc
bIdTL1LFQdPcOD1TaOTIkbZMNA9L61XU5ldfSLHWM5Wv+uLkPcr5DFtfMqkr
ks/6AgAAsCnT2vpUzw266aabMl4b5FC7rlq1aqGewRqGxqi23377EmtHevbs
ad/74osv7Hr1qlWrJmKZqR3asGHDxGc178g9PnD88cebqVOn2p+fe+45O8ah
cQitg1esCEcmaa9du9Y+e8lvzmHYdu3o0aNN48aNA8smTk698OsvqQ90wgkn
2HENp0x23XVX23cSPQ9V4yKZyGd9UR8k6vmUMPUlk7oiuagvijV3/vnn2/wA
AABs6vTMFvVzDj30ULPddtuZ5s2b23Xwov/rfn7FihVtm0yxqebPnx95H5oD
dMABB5g33ngj1rxr3b5iiyn28WuvvWbHIdTudAwYMCAp9rLuuw8ZMsT+rDar
1syrvenQfXvNZRo4cKAtE81fat26tW9bPGraopjKs2fPTnpP4wUHHXSQXQtT
qVIlu6Yk1bjbAw88kLMYbV7qL1x//fV2TY3a3K1atTJt27a1L72v+ZPqVyiG
nMNbJoqzPWHChMj7LkR9yeR8hq0vmaQtcdcXjevq71jzFQEAAJBbat9pzMC9
diJOuseusQO/9SMtW7ZMavPts88+dj6TaM5WkyZN7LbOPX2H2uGKQZxuTUom
aatNqrZppvQMnxUrVmS8fa65y0T51HiO5o1pDUxYhaovmdYVCaovmaadi/qi
PLrHNgEAAJAbiuer59oXQp06dRJxoTUXqHbt2ol/U4xwraPRs1i8c48070j/
HnfaaoOedNJJvnOdgmhO0w033BB5u3xyl4nWyGidf5cuXeyYY1iFqi+Z1hUJ
qi+Zpp2L+vL222/7zn0FAABAfB588EG79iHbmMcff/xxRts561Qc7hhnojXr
fnS/3PvZuNLWXEN3zOkwVH6aI6U1LsXMWyZqx0c594WsL5meTwmqL9mkHWd9
Udxz9bcAAACQO1ozccghh2Q9j0vPiOzQoUNMuQpHzwrNpWeffdbGRQ5Lbde4
4gUUK+pLanHVF5VttvHHAQAAkJrm5FSvXj3SfCg/ivurdfru2AdlRZSYXWU9
vhf1JRj1BQAAoLgphrLWx6d7vmkQ3dNv3769qVChgl1bgbKL+gIAAIDSbvny
5aZWrVo2prLWTAS9FGdYccHUhlXcYa1pOPDAA+3zKRWrWa8XXnih0IeFHKG+
AAAAoCxo0KBBoj0ax0vPSFFbGWUT9QUAAABlwZIlS+yzJeN6LVq0qNCHhByi
vgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADFoXfv3mby5Mnm999/tz/r
WTBLly61z9Hs27evGTp0aKGziCJCfQEAAEBpN2rUKBvXuGbNmqZ79+5m1apV
Zvjw4aZevXr2/xs3bjRNmzY1Y8eOLXRWUQSoLwAAACgLvvjiC7Nw4UJTtWpV
s27dOvue2rcNGzZMfKZ+/fpm2rRphcoiigj1BQAAAGXFgAEDTLNmzRK/637+
kCFD7M+rV682VapUMWvXri1U9lBkqC8AAAAoC1q2bGn69OmT+H2fffYxixcv
tj8PHjzYNGnSxMyZM8dMnTq1UFlEEaG+AAAAoCyoU6eO+eGHH+zPmvNUu3bt
xL+NHz/eXHnllaZjx45mw4YNhcoiigj1BQAAAGXBmjVrkn5XHDA3rYUHHNQX
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACATcMHH3xghg4dWuhsoAz55ptvTO/evQudDQAAAMDXjBkzTN26
dc1vv/1W6KygjLnrrrtM9+7dC50NAAAAIMmSJUvMoYceaubMmVPorKAM2rhx
ozn11FPNrFmzCp0VAAAAIOG8884zffr0KXQ2UIbNnTvXHHPMMWbdunWFzgoA
AAAKbP369WaHHXYw5cqVs68DDjjAHHzwwWlftWrVMpUrVzZbb711Yjv3a/vt
tzcrVqwInYdx48aZ/fbbz+YlrA8//NBcfPHF5o8//sjksLGJuueee8zdd99d
6GwAAACgCHTq1CnRh7n33nsjbbt69Wrz7bffmsGDB5vmzZubbbbZxqbTuXPn
0GnUrl3b9OvXL/TnP/roI9OyZUszffp006JFC+7vI7SFCxeaihUrRuqnAwAA
oOw688wzbf9ls802M5MmTco4nV9++cVcd911pmbNmmbDhg2Bn3///fdNtWrV
Io0F9erVy673kO+//96MHz8+4/xi09O0aVPTtWvXQmcDAAAARWDx4sVmzz33
tH2hKlWq2LgF2bjvvvvMyJEjAz+nMaSrr746q30BUbzxxhs2JgcAAAAgEyZM
sONB6gudc845WaWl8R3Ntwuyxx57mIEDB2a1r0JTjLsRI0aE/vzzzz9vfv/9
9xzmqOzIRdkqLvuWW25pPvnkk2yzBwAAgDJCz1lx1go9/fTTOd2X1hWVL1/e
LFq0KO3n9GzVW265xTRo0MCcffbZ5sYbb7RrhETPx7zyyivN6aefbi666CJz
xx13mFWrVqVMS/Pp+vbtG9sxKO9XXHFFqDmAjvnz55tWrVrFlocwVIba51ln
nWUuvPBCc9ttt5m2bdva8tI8xnPPPdeWbTbjgKWpbI899ljz4osvZpO9oqS4
Ibqfobmjs2fPLnR2AAAASo0///zTPstU/SDFg5s5c2bO9qXYCIo9F8aaNWvs
PfwOHTqU+LchQ4bY/Dp9o3Q+++wzM3bs2Mh5TeXSSy81P/74Y+Tt9EzPAQMG
xJaPMNQ/1Hjfww8/XOLfdAzVq1fP6hm2palsFV/jmmuuyTRrRUlr8+rXr28+
/fRTOyb22GOPmfvvv7/Q2QIAACg15s2bZ3beeWfbt9h///3Tjq9k4/rrrzen
nXZaqM8qFoLyo3jZXhof0vy6MLp16xbb8cyYMcM0adIko2113/6oo45KxHvI
h7feesuWofLtp02bNlmlX5rKtmPHjubwww/PNHtFSWvtunTpkvSe7jMoriIA
AADCURxsZ35cs2bNcrIPzc9q1KhRqM/quS877bST7xypww47LHQ6Tz75ZKQ8
pnP77bdnFavu2muvzWsbVXMed9xxx6TYfO7xFm8bOqrSVLbDhg2zz7kqK3RO
de9i2rRpSe/rGVua+wgAAIDwNHfI6Qu98sorsad/0kkn2TGhMI477ji7fsVr
2bJldq7XCy+8kHJbjQuoTa35Updcconp37+/3S5bGitbuXJl4vf33nvP9seU
T61bGjNmjF2zpHEWzVny0rzAO++8M+t8hHXMMcfY9UEOzYFzP1M0k+cw5ats
JUr5BpXt5MmTbb0OG6/9hx9+MC+99JJd//Tuu+9GP6Ac0zipjkdzE92uuuoq
OzYGAACA8LQm5+CDD7btK40jzJ07N9b0//Wvf5n27duHysdWW21lY9j16NEj
6aX1/srfV1995bvt559/bu+JT5w40cyaNcuMGzfOPktTz0vK5ngWLFhg9ttv
v6T3FHtc862cMTS1z/U8Wf3erl27EmkoXpnWYuWDU4YXXHCB7SOo36LYEq++
+mrGaeazbCVK+QaVrdNvWLp0aWB+VEbnnXeejdugft9ll11m3nnnnegH5kN9
OY1NhXmliyeidHQ83333XdL7ii+y7777xpJXAACATYnuL2+77ba2jfXvf//b
xlGIy1577RVqLpazNmjUqFHmm2++SXqpTVq5cmXf7fSMVa2PULtaNGa0evVq
+3OfPn3stplSTAa/drbKS3nVHD6tU1EeFPNM/QQv5StfbVT1UZSvQYMG2dgX
b775pjn66KPNzz//nFF6hShbCVu+QWX75Zdf2nSC+msaN9LztJYvX25/V4zD
GjVqlOhvZEp9LMV2C/PSmFQqr7/+uj0e72c0Jy7s2jkAAAAk0/p3tbG0rlxt
z7jsvffe9n5+EK0N2mWXXSKvDVKc7aeeeirxu/vnoUOHmiOOOCKDXP9NcdEU
m8vLaaefeOKJgWlojEbjbKnoeZ+aaxb0at26deC+NP9NfQf3PLBHHnkk8bPa
+UHxy90KUbYStnyDylZ9LaXj9ONS0bhUaVhfozLT8XzxxRdJ7yuGOONBAAAA
mdE9cY3dZBLDOJ1DDjnEN4azl9YG+T3X9ddff025NkhxgxX327lvr/lM7ue6
qm/lxE3WWhMdo7bRz3qujOZL6d6/1oOoXe81ZcoU37a4007X83iCaB3Nnnvu
mfLf1e9T/LWg19q1awP35be+yv28UZWN+g4qJ43nqDy0fkjxMvS7e81PocpW
wpZvUNk6sfN0zKno+PQZb+wBRybHlisff/yxzev777+f9P7ll19u6tSpk7d8
AAAAlBVz5swx1apVC/Vsnqg09ykoToCzrsU93uDQmolUa4O0lkTPaHXm8Tnr
V0Tr79Wv07NFNddO/buaNWvaNTPqVwwfPtzUq1fP/l9t/KZNm5Z4Lo7KRWNR
Xk47XetJgqid7ZdG3JwyTBXPTXPjnP7oyJEjbXloDEFjdWrjqy+k2OSOQpWt
hC3foLIdOHCg7culM2nSJLsvv2cqOeUU9di89AxgHUuYV6p456L9af6bd3/q
L+YzFgcAAEBZoHvbBxxwgJ2flQua06W2YjrO+m+/5wbddNNNKdcGyfHHH2+m
Tp1qf37uuefs+hXN69PafsVYEM0j0tr+qlWrJuKlqV3bsGHDRDqao+UdE9AY
jNqd3rl6UfpBo0ePNo0bNw78XLacMvRrR6sPdMIJJ9gxDHHKY9ddd02MlTz9
9NN2jMetEGUrYcs3qGy7du2atu6IxhsVW9u7hqhnz562v5HJseWS/h7czxlW
+alPqrEiUV40n9EvdiEAAAD+prao2sfu+U5xe/DBB20sZz96lqvadYceeqjZ
brvt7DMitbZf9H+NT1SsWNG2lxU3bP78+SXS0P16zc/SvX+lpXlLWkvjHdsa
MGBA0jOS1DcbMmSI/Vnte62T95t7pn7c7NmzE79r/OOggw6ycSUqVapk18ik
imMnDzzwQFbx2oKo/a645Frjor6D1oq0bdvWvvS+5hqqna8Ycm7e8lCs7QkT
JiR9Jt9lK1HKN6hs1V84+eSTU/67Q3ElFD9esbJfe+01O0bmrMHJ9NhyZcWK
FbbvNWLECLveS+fD/fercSrlSfFFAAAA4E8xuPQsylzSvLbdd989p/sQjWsp
rnKqGA8tW7a0a2Ac++yzj537JZoT1qRJEztXyxn/cKidrfZ2ptQHVNu12LjL
Q/nTvEjNgdOaF6/SWrZ6hm/Y+WIa71EevceY6bHlksaA1BfVGC7jPgAAANFo
nEb3lbONke3Mx0lFc7IU5yCuGMSpaC6VYm+nonXkTrxhzXWqXbt24t+0ndZw
6Lk13nlaahfrWbB+87eC6JmgN9xwQ+Tt8sFdHlrvo5gFim+uMTqv0li2Wkuj
eX8aN8lGpscGAACA4qN5Torjlu04hZ7r4l6rkIrimGldRS5pvYo7NpqXN2aY
97NaA5+K5ui540+Hof6l5n1p/Ukx8paH+iSp+sSlsWzVP1f/2xm7yVQ2xwYA
AIDiofvo1atX973vH4XGd7QmxfssEz8aZ/jvf/+b1f6C6LmhufTss8/aWM9h
aYwgF/H3CqE0lq3WzCheAAAAAKB4YVoHkk18K40BtW/f3lSoUCH0M0s0N07P
SC3taxk0LyoXn0X8ZavnAb/++uvZZAkAAABlgGJL1apVy8YP0zynoJdig+me
uvo8ihWmeUgHHnigfaaM4pLp5fds01TuuOMOmxaQa4ofsP/++2e99g0AAACl
n+YIOf2XOF6Ka6y+VVjLli2zbdMo2wCZ+Pe//22fgQoAAAAsWbLEPg8mrtei
RYsi50HP4nQ/iwWIW//+/Us8KwkAAAAotEaNGtlnPQJx++STT+wzeRlzBAAA
QLFR3GHdr58+fXqhs4IyRPMu9SyiuXPnFjorAAAAgK+1a9eGircNhLV06dKM
5moCAAAAAAAAAAAAAAAAKJt69+5tJk+ebNfu6Gc9O0jzjPTc1b59+5qhQ4cW
OosAAAAAEJtRo0bZONg1a9Y03bt3N6tWrbLx3OrVq2f/v3HjRtO0aVMzduzY
QmcVAAAAAGKheAULFy40VatWNevWrbPvqT/UsGHDxGfq169vpk2bVqgsAgAA
AEDsBgwYkPR8U43/DBkyxP68evVqU6VKFRvjDQAA/D/27gNMiiLx+7hZzPFM
IAhyp5zh9Lg7xZzBM+uJYkBET8V86inmeEZU4AQVI6CikkTgVBTEhGBOiIig
iAEERJSgKNT7/Or/9jw9vR2qp3t2Zne/n+eZZ3dnZ7qrqqu7q7oSAKC+6NKl
i+nXr1/h7+bNm5vZs2fb3wcNGmQ6duxopkyZYsaNG1epIAIAAABArtq0aWNm
zJhhf1cfudatWxf+N3r0aNO5c2fTrVs3s3Tp0koFEQAAAABytWjRoqK/NW+c
n+ZOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqCa//fab+frrr+1P+fXXXyscIjQU
U6ZMMcOHD3f+/N13320WL15cxhABAACgvluyZIm54oor7OuBBx4w11xzjenf
v78566yzzFdffVXp4IV68cUXzZ577mk23nhjs2DBAqfvTJo0yTzyyCO57KeU
bdUXy5Yts/kjL7NmzTInnXSSWbp0qfN3pk+fbvNnpZWSD+NUMl+Vc9+33HKL
2W677cyRRx5Zlu0DAACU4qqrrjL33ntv0Xt6Nr/SSiuZL774okKhSjZx4kSz
3HLL1Sh/Pvvss6GfP+2008yqq65qfv7558z7KXVb9cFHH31kRo0aldv2jj/+
+JLq23369DEDBgzILRylisqHpahkvir3vm+44Qaz3377lWXbAAAApWjcuHFo
feewww6r6nrQzJkzQ8ufUe0E8+fPNx9++GEu+yl1W/XBPffck0uZX9566y3T
sWPHkr6r8vpOO+1k26cqKSoflqKS+arc+1a+oR4EAACqhcqQq6yyiunbt2+N
/z344IN1rh70008/mSZNmpR9Pw3Z7bffntu2/v3vf5vRo0eX/P0zzjjDvPHG
G7mFpxTkDzfUgwAAQLXZf//9zUYbbWQeffRR88MPPxTe17gh/5gNlVd79epl
brvtNjNw4MDE7b799tvmuuuuM+eff77dzqBBg8x9991nX7/88ostN2o8grb5
5JNP1vjeeeedZ+s1MnLkSNt/Ty9PsPypsRq77babWWGFFcxdd91lX++99579
n8Y+XH/99XabXr+f1157zVx77bXmggsuMPPmzTM9e/a04xgef/zxongH9xO2
LY+ep996662mR48epnv37na7orknFFfF/eabbzavv/66w5FxD6NH8VW8VebU
XAKLFi0qbEfjvq6++mrz448/2j5l+r8r1Zd1/PW9Y4891uYVL25ZbLXVVoVj
LEqXDh06mEMOOcTWzZ977jlz9NFHm4svvth89913Nb6vNL3sssuc9hWVf8Py
qZc+Ln3EwupBpRzvsHylbXp5+f777zcPP/yw7cOq4+/R+CrF68477yz0CR02
bFiN+MWdT3F5OirdkvKUjpfyocYc/u9//7P/C9aDSj0vAAAA8jB58mSz6aab
2rKc6hA77rijLZP45+NSG4D6L3l9kNT3TOWiOCon9+7d244zUrlM5TU555xz
zJlnnmnLSCpzaZs777xzoWz3/fffmzvuuMOGZ86cOfY9zWN39tlnmy222KKw
/WD5c+7cubZ8t+KKK9rxJnp55T79VDnS/3ltW2VHhe/yyy8vfPamm24ye+21
V6E8GNxP2LZk6NChZpdddinUD0aMGGH+/ve/29+1/X79+tnfvf5cTz31VOKx
cQ2jqG6i+Qa8+f4+/vhjO4Zf5VFtR/UnpZ/SferUqTb8OvZJtJ1jjjnG1jPf
f/9988ILL9g0Oeigg+x2SqVj+oc//KHovdmzZ5tu3brZsJ188sm2/qP6pP6+
9NJLa2zjgw8+sGmeJC7/xuVT1T+ThNWDSjneYflK9ZN27drZfYiOo9o7VS+R
V155xbRq1crWdURtY0qvtm3bFrbrcj5F5em4dIvLU6+++qrNe964L/1vn332
qVEPKvW8AAAAyIvGBvz3v/+18zltuOGGtjyz77772vLPtGnTbN+5Tz/9tPD5
d99916y77rqJYzNmzJhht/X8888X3lN5ffnll7dlXo/KnKeeemrhb82j7C+3
ieoZcfUg0XgTlWfDfPvttzU+rzH/ei84B/M222xjn3NH7Se4LaWf2tSefvrp
wmdUtj7wwAPt7yeeeKKtS3jUZnTAAQeEhjPINYxrr722nUfNT/UIb/yN2qpW
XnnlQj8yHZskX375pS1nq9wsaotYuHCh/V3l1xNOOMEpDmHeeeed0DqMF991
1lnHlo0VBtXvVAcLUri23HLL2P245N+ofKo5zpKE5Y9Sj3cwX40bN64oTAcf
fLA56qij7O/6zOabb27bivy032B9w+V8Cu7bJd3C8pTyR9OmTc2QIUOKwhA2
T0KW8wIAACBvak9QnUhlIpVl9JxYdYvHHnvMttnopf45+r/KTnH0PFif++ab
bwrv6XnvZpttVvS5rl27muOOO67G9/zlNn0vSz0o7PNemdtrQ/Goj9T2228f
+b3ge+qPpL/j6hYqO6r9Qn2AVP77y1/+EvlZP5cwah5rlU+DdMxUP9K+tR3V
P9Un0ZXaItSW4PH/rrzx5z//2XlbQZpzzt9u4fHiq/auJOr3p/jFccm/Ufm0
RYsWiWGIGh9UyvEObkt/e31VlfbK/157o9rl9FnVV/zUVhSsb5RyPrmkW1ie
Uj86fUbts35q5wsbH1TqeQEAAJCFxgB5/VKC1Jah9gSVX9Zbbz1bDg++kriU
v0T1II07SfM9l3qQf+xJmnqQxj1oTZio7wXfUxrqb//4Kj+V83bffXfz0EMP
2XKsyphZ60H+MOo5utrxgjSeQ9/V+A1tp1GjRk77FLU/aR7lzz//3P6t8qr6
6HmuvPJKO9eyaCzPSy+9ZL+j31WmVTlYZXTV0YJtA6LxJWF1HS++mq8widIy
WKcOcsm/rvk0TFj+KPV4R9Wp3nzzTbPGGmuYCRMm2L9VD/HynI6tX9h8BKWc
Ty7pFpanvHAF2y/D6kFZzgsAAIAs1O/on//8Z+j/NGZa/f/HjBljxw0Fn++q
vJRUFyq1HqTn8sHvqXzlUg/S+CCPv9yeph6ksfpenzaXepD6bOlvb5yGR/9X
n7m11lrLrsnk0Zhxr7yXNN+ZSxg1n4Dqf16fNY/GinhtGmnrQeq3qGf9v/76
ayGOaoMQ1S/VJ0vlc43J0nFu2bKlHSuvOGucjcq8+qn6U6dOnWqsOaS+Wjvs
sENkfA8//PDEMKqOFrYNP5f8m2c9SD9LPd5Rc7Sr759/nj6ND9OcGPqsNxeI
R225wfpGKeeTS7qF5SkvXF792aNxRf5wZUknAACArFQPWn311e1zWT+VXf/2
t7+ZTz75xP6uMc4qU/upjpFUD1JZKNh/Tm0UWrPI78ILLywaJ6BnySpf+cfx
awyR1/4h3pgO/7xlKuf53/OH2fu8ypUer8ztL0uqzKjy2fjx4yP3E7YtldvP
Pffconhp/yrPBeck0Ph7zUeh+cmC4zuCXMKo7WiuPLW9eHRsNP7Ge09jOzSW
I816O3vssYcdoyIa76R6lvKMjpWe3YvG8qsMrfH7al8U1Yfat29f2I76v3lh
9agv1SabbFJj3rs09SD1R/T3pwzjkn+j8mmzZs0SwxDMH6oLl3q8w/KVng9o
TgrvuCmNvTFfhx56aI08pzFEwXpQmvPJ27dLukXlKc33p7qan/LDrrvuWvg7
SzoBAABkpTKtyh16Vqv5uDT/lPorac4C9VXx6JmwxsSrL5ae3+rZtMa5xxk7
dqwtD6medcQRR9jtqkzepk0b+97pp59ux/VrTl+1JWjOOtWHPJqzTvPKKUzq
a6X1jFRuUjuI5tpVvyltR/Mqe/2FRN/p0qWLna/Xm4f35ZdftuVqfV7lMW+e
M6/Mrb5Emi9ZbQCa4+2ZZ54pfC+4n6htqfyoOc7UtqW54lR+VNlfZTq1h2gO
Co15f+KJJ8zEiRPt/AOaL0thiJMURo/ab1Q+Vv8jjYE/5ZRTbP800Wc11kdh
VrnaP095HLWTqO+bxoaofVDb0zEKHvsBAwbYuHsU38GDB9vfVXdSvTdsXJLC
orTwqG1J8z+sttpqtoyu8Udxc9pprmelZ5K4/BuXT9UXTXlJczWECcsfpR7v
sHyl4602uSuuuMLWPzQvRuvWrQttp+qHqXhpDgKNy9E8FqrfhI3DSTqfwvJ0
XLrF5SmFS3Nb6PNqQ1TYdU3RvAudO3e2eSLreQEAAJCVN7etxhmoLKY5z7y5
g4PUlyU4J1k5qZ7mjQNXXyz97n9WHkXPtjVfcBJ/nzPVI7y0yEJlvLA0Uv8y
/7q0eq7vMmdB2jDqGCmd0rT7JFF5WPXkqPV0VFfwjzNr3rx5YT5AleVVP1M/
OK9tyaOyr+oypVL7gkt+8NRm/i31eJdC8fLmeIiaj0BKPZ9KTTd9z8uvaqvV
NoJjn2oznQAAAPB/osbeVJNqCKPCoPaGKGo78ebKUx85tVl49D21Aah8HuwD
p3L53nvvHbombBK19antA8Xi6kEAAACAnlPfeOONto6htWKC48GrQbWEUWOB
gvN/+Wn+ar/gZ4NtAH7qXxUcS5JEbQjqi+XS5teQaJyf+repH6L6v1Vz/R4A
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
zo38jOpKWpPshx9+sH9rfpQWLVrUqG9koXqW5ndzealdKszQoUNtXIL/V584
17F9AACgftG4bZUPNA5A5aa8bL755rFjKTQH9R133FH42//7kCFDzJ///OdU
+9McXJoLKsgrF+61116x31dbgNrFwmhs0HrrrZd6bFDecfTLGl+Ji7NoDRn1
40p6XXjhhZHbyDMNouIseRxn9X9T/cHf/nHTTTcVfldZP838h9V8/JOOvXzy
ySd2W3HtVmqTqgvja5ReisukSZOK3tcc4rQHAQDQMOl5ruospcxDHGeLLbaw
fXLCaM5azdvtPTNWXxr/uqyqd3jzVOl/enaucGqshuZ40N/B8RWvvfZaaNnP
Kxdq7Zc42t5mm20W+j+NDQpbe/b777+PHBuUJo4ay6H46Tv6XXMV6xm8nq1r
vIXKzEFZ45sUZ1G9T3ObJb1++eWX0O/nfZyj4pwm3knHOTgGzL/mqMKu+oNL
WKv9+Ccde1Gbk7bltWcFKW76f3DuAb9S4lYO7733ng3rhAkTit4/8cQTTZs2
bWolDAAAoHpoHfqmTZs6rXuT1nbbbRe6BotoHIPWFvL64XnjJkTjvlUv05qW
MmLECFtH0zNb1atUnlK5U3NVB+Oitpkgr1yo8QtxVKYL+743ZsT/LN+j8QhR
Y4Nc46i+dopfy5Yt7XgU1SuGDRtm9ttvP/tT5edOnTrVWHMma3zj4pyXvI9z
VJwlr+McNZ+b+sZ5+dklrNV+/F2OvTeHuNImzNixY+3/w9ZTUrhLjVuQ1ilW
fFxeUfOda1/q/xbcl+qLtTVXCAAAqA56Jrv11lvbvk/loLELceWLPfbYw4wb
N87+3rt3bztuQv3yNKZc8w941I9F48o32GCDQnmsZ8+e9nm6n9okVM4J9l1z
LRc+++yz5rjjjqvxvje+OmzdoPPOOy9ybJBrHL34NWnSpDAXmcqM7du3L2xH
/Z+Cz9yzxjcuznnK8zhHxVnyOs5h5WjVgfbcc0/bhuEaVte4V+r4uxz7xx9/
3LZpRVF7qOaTC/abe/DBB+17pcatXHS++tdBVtqpPqq2Io/m3DviiCNsuAEA
QP2jMpTKdf5+OnnTuBE9642i58TqF6Sylson6i+jcSZhbVMDBgwoWudI8xqP
GTMmdJ8TJ04s/K3n0dtss42dC2LjjTe24zGi5nW7/vrri+YF03qzCtf2229v
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
7RLvuO/GiQqvS1pESUoj0d96X2UjbXPRokU1tvPdd9/Z/ytf/O9//7OfCytH
uWwrTdwlTfk1bjvjxo0zAwYMsMfuiSeesGkoOl7XXnutueCCC8y8efNMz549
7RiKxx9/3Ka3J+m4e/R89dZbbzU9evSw+UvblLB8XmqaJeWxcqaDyz6i0iGv
/Bjkcmxc8lGaa2Il4l/qtcX1/E2Kk1/a/JJ0XKPyZdR5k/Y8iwtDlmtsUvjT
pqtrmnn1oLlz55oHH3zQ9O7d2zz55JNFaR+X3+LSKSy8adOo1DgDQG1RueCy
yy4zK620UqFtXM/JdG084ogjzGeffRb7fdUZ+vXrZ3/XdXCnnXYyTz31VNH2
Xcqvel51//33F31W9zRd1xU2lT1mzZpl3z/nnHPsfVd0/R85cqRZccUVzVdf
fWVf2pbcfvvtpmPHjoXnfuoXoOuxR/eDo446yv5f215//fXNxx9/bMsIqgfN
mTPH3tO32GILew+aOnWqDd/kyZMT4x333Shx4XVJiyhxaSSPPvqoOemkk2w5
UpQGGk+ucpPn1Vdfte/pu6L47LPPPjXKUS7bSht3cc1Hcdt5//33zdlnn120
zQMPPND+ruN155132vTVsfXS56abbjJ77bVX4R6fdNxl6NChdvyyVyYbMWKE
+fvf/25/D8vnpaZZXB4rdzokpXVcOuSRH8O4HBuXfPTNN9+YSy65xKy88sq2
nCmK43/+8x9z6KGH2nSuZPxLuba4nr9JcQpKk1+S4hWXL8POm7TnWVIYslxj
k8KfNl1d00z5U+FVndhLa9W/9t9//8LfcfktKp2iwpsmjUqNMwDUtsWLF9s6
wKhRowrv6f76/fffJ373xBNPNMccc0zhbz2bO+CAAwp/p3mO/+2339b47IwZ
M+x7zz//fOE93Rs015HnrbfestdlP7XtrLLKKubTTz8tvPfuu++addddt3Bd
btq0qY2nZ99997V1Qj/VDVUeeuONNwrhcYl33HfDuITXJS2ihKWR6Pisvfba
Zvr06UXvX3zxxfYeJgsXLrRpNWTIkKLPBMdZu2wrjEvcXfJR0nb0vLR9+/bm
119/Lfzf/7xWZQrtQ+eD3zbbbGPLGZJ03NXXfqONNrJzOXlUbvDKQ+LP56Wm
mScsj9VGOiTtIykdsuTHKC7nZJrnMgqHnqV7VF7U96sh/mmuLa7nr8t5GMYl
v7jEKylf+s+btOeZaxiyXGOjwl9qurqE10v74Dgn3cvUTueJym8STKek8Lqk
UalxBoBKueiii2z7jyfNcxtd1z744APbH0Vlkb/85S+F/6WpB4V9Vs+u9J6e
0Xr0jLdFixaFv8Ou8Sqz6D3NCaQ+Gnqpz5u2peu+6D6tNnvP3/72N/vM10/3
meWXX9788ssvqeKd9N0gl/C6pEWUqPtg//797b0pSOHQPVhxVN8G7VfPFf26
detWVI5y2VapcXfJR0nb0TbUR36dddax8wWrf5D3nFW8MoX/PVEfkO23377w
d9xx15xM2kZcudQfl1LTzB/mYB6rjXRI2kdSOmTJj3GSzsk016MzzzzTHHvs
sYW/1dfOU+n4p7m2uJ6/LudhGJf84hKvpHzpP3ZpzzPXMGS5xkaFv9R0dQlv
VNpfeeWV5k9/+lPh77h6UDCdksLrkkalxhkAKkX93/R8UfcV3TfVD9iFyhy7
7767eeihh2ybua5/5agHqf+FR9dc9QnxBK/xepare/x6661n7w/Bl0d9aBR2
9TFQv5Edd9yx0MfCEzUONSnecd8N4xJel7SIEpZGomfmG264YY3Pqy+395xR
6RT2vDdYjnLZVqlxd8lHLtvRc2T1Ze/QoYMtS/ifH0eVKTQWQ2vOSNJx99Lq
hx9+iAynPy6lppk/zME8VhvpkLSPpHTIkh+juJyTaa5H6uekZ9q6PkyYMMGO
JfRUOv5pri2u569Lvgnjkl9c4xWXL/3HLu155hqGLNfYqPCXmq4u4Y1K+xtv
vLGQ9hKV3ySYTknhdUmjUuMMAJXUtm1bc9VVVzm3Bem6udZaa5nhw4cX3tM9
wCt7qM9GbdWD1PfZo/7qKrNoXGjwGai27V2L9XxX9T6Vl9TXPGycZ1h5wyXe
Ud+N4hLerPWgYBqJxoTr/qi+M34ac+w939OYWu33888/L/qM8om/HOWyrTAu
cXfJR0nb0fNV//Njfa5Zs2bmyy+/tH9HlSlUplF5xuW4q+ysbQSfI0TFpdQ0
84TlsXKng8s+ktIhS34M43pOpp0vTuNPlM/9bUHVEP801xbX89flPAzjkl9c
4pWUL/3HLu155hqGLNfYqPD37du3pHR1CW9U2mttWH8dMiq/STCdkvKBSxqV
mpcAoJI07vF3v/udbct2oXtQcHyuxkqqXUVzyWgeAq8vcbCdJYz3WT1T8+je
HWxL1/Mw3V88uh7796H7hPoMaBywfvfT9d+7Dp9xxhk2zurL/PXXXxc9I/Oo
T7Payfz9cVziHfXdKC7hdUmLKGFpJAqv5hLSPdyj/an853/vkEMOsWOf/dQX
ftdddy387bqtUuLuko+StqP3L7300qL/aZ4M717tlSn8c3ep74fK1+PHj3c+
7ocffrg599xzi/ajfQfjonxeapp5wvJYudPBZR9J6ZA1Pwa5Hps01yNRu0Pz
5s1rzMdW6finubaIy/nrEqcwLvnFJV5J+TJ4f0hznrmGIcs1Nir8OtalpKtL
eMPSXvUm9c/z0l6i8psE0ykpH7ikUal5CQAqSdenHXbYoUb/iSi6Tnfq1Mn2
hdaYSc1To/XatUa35g5S2eGwww4zq6++ujn66KNt35IoL7/8sr2v6bO6P2s+
I62Vrfu33tPYJc3Rqut/mzZtzBprrGGfeXnPCtWXX3+rT7Y3X67unyeccILt
n6HnxJq/5p133insU/cJbUfXb7Xh63mZ5pjy7inPPPOMadeund2/xgloPlKX
eOveFPXdOHHhTZMWUcLSSGbPnm3H3aovg9rFTjnlFDu+wk/9TzRvkcL0wgsv
2PvZqaeeavsNde7cufDM0mVbaeOuvOGaj+K2ozl9FQfNaav5bTWuOmx+AM2d
oflg9YxT80/pWIrLcReVJ04++WTTtWtXO4eVygJemSQsn5eaZnF5rJzp4LKP
pHSQLPkxyOXYpMlHHl0LN998cxumoErFv5Rri+v5mxSnMK75JSlecfky7LxJ
e54lhSHrNTYu/KWkq0uaKe01tlfjXJUP9BntJ5j2EpbfotIpKrxp0qjUOANA
pWiem+DzG9fvaZ5pj9bacBm/mzc91wqb405t8cE5dzT/6MEHH1z0XFjhVvuQ
5lZyUa54h4U3L1Fp5O1XbWNxz5j1GW/uXT1jVDjD+hi5bCtq+3nEPWw7Xr9H
tfup3SBY3/f3MVH5w4tnkOtxV9kyTVxKTbOkbZYrHeL24ReXDlnzY1A5zsmk
tYuqKf5J0py/rnm3lPwSFq+kfBkl7XkWF4YsXMJf6vXNJbwuaR+X36L2m/V6
XM77GQBkpTkR9AxPtP6b9zyovlM/mWCff8/vf//7Gn2yUf9F9bVvaEgHpEF+
AQDUVVpj4MILL7RzImm+gIZCz87UHuRfM0n9LNS/O6p+hPpLz1E1x5LKc1oL
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
O3p+GZynS21T3ngHj1cG0VoursLqQarnad4977mp+pP411VSveO0005z3sdr
r70WWS5yDbPGNGjN3DAaGxS2dpTa7aLGBuUdx6CoOOcRX9d6kOqFmi8k6eVS
xwgbf+V/HqC0U9k2T9V0rvjL57V1fqQJoz+/VCpvpwlzVP52qQc9+OCDiddh
Lx/UhfWG33vvPRvWCRMmFL1/4oknmjZt2lQoVACAukx9IrTORCnrW0RRnyDd
r7I89/bWQ1dfEVd6XqjyoL+cqTmTvPEO3r3eK4O4lCU8YfUgPTdffvnlC+1o
3tgC0TNYpavW1RSVsdTPRumtcfMqc+pv/1hsrTmvdpkwrmFWuSZsG964Ff/z
bo/65EeNDUoTR435VvxUvtTvahecO3eu7Wejsdd6vh4UFees8ZXa7hfnpXHU
fGPqG+etKeSSH1xV07ni/5xr3nFNi6x5Rfz5JU3elrT5u5zns0tc77rrLlvP
izN27FgbjrD1rHRcSjmnw2iNZoXZ5RU137zCo/5vwbWdVJeMmxsGAIAwuk83
bdrUad3MNLz+Cxp3UiqvnSrNeq+ar3uNNdYo9ElSP3KNE1aZ6pNPPrFjNSSv
epDssccedq4u6d27t332qnY1jbtWu5hnxIgRdhvqv6F++ypXqLynNXs8am/Q
fT6s35prmJ999llz3HHH1XjfG2Mctm6Q5hiLGhvkGkeNOVL8WrZsaecGUPuJ
xp/st99+9qfKMJ06dapRhomKc9b4Sm3Xg7w0DivHqQ6kOa1VfhSX/OCqms6V
4Odc8o5rWmTNKxLML67nbyn5u5zns0tcb7vttsRxM2oLXnPNNWuMD1VbkvrV
lXJOl5OuVf41oJW2qq+qrcij+fiOOOIIO9cFAABh9Exv6623tmMj8qb1LtKO
2Q7Ss2ltw/881sXVV19t52JSOUrPK3v16mXnYNLcSSrfqDyzzTbb2HFRG2+8
se3/HzVHml9UPUjvq+/M448/bu/Rel6qcSTBuqX6tOu+vMEGGxSewavcqr43
fhqHMnHixKL30oRZ8fTPTabyrsK1/fbbm9VXX92uQ+iVcfVTZc3111/flpc0
b9X06dNLiqMXvyZNmhTG3avs1L59+8JnNFYirF4SjHOW+PrVVj1IZcizzz7b
jrNQntV4ha5du9qX3ldfRJU1/WtauuYHF9V0rgTL52nyjktaZMkrEswvac/f
tPk77/PZ41IP0vH94x//mPg5td9r/lDNlf3kk0/auqjim+WcLpf58+fbfQ4f
PtyOtdOx8vdlFLVv63qmOj0AAEF6Tqln08H7R150T1e5TP0pSqX+3ionlLLW
itbg8I/11t9Z54BIWj9I9UqVIePGWA0YMKBovSZtb8yYMUWfUZlHZZ9Sae0a
lRXKISmOwfjpWbE395ies2tOqrAxNlniHBffSq0f5MolP7iopnMlqnyeNu9E
pUW5zo9Szl+X/F2u8LrUg/TMQ993obyj/gHB+Jd6TpeT2oBUT9UzvKh1rBQP
f3seAAAejSNQGbFc1K9F87WmXcvEo/4Wen6uPivVIqkepH4uSevG67m994xS
ZRv1SVSZU8/iPbp/77333qF9aZKoP4g3vqMckuLoj580b968UMZWm0PHjh1t
Wcvrh+QpNc5J8a32epBLfkhSbedKVPk8Td6JS4tynR9pz19xyd/lCq9LPWif
ffZJ1fc3TKnndKW9/PLLoX2AAQAN2w033GD7FWRtH/H3xw6jsb1am7MUn376
qW1Pqqa5XJPqQXr2mDRPuJ7be2tfaBy25pLq0aOH7bvmp/5q/rmWXeh4qg9O
1jWb4iTF0R8/9adp3bp14X8qY2qstPphhZUJ08bZJb7VXg9yzQ9xqu1ciSp3
p8k7SWlRjvMj7fmbJn+XI7wu9ZstttjCzuOeRZZzulI05k1hAgDAT33gNS9u
1n5TWvPPP1Y1zD//+U9z4IEHlrR99SVR2U79vKtFUj3IZSxUcL5kPSuOqo9q
rifNu+tK9/2857sISopjMH7BcqXGWcdJE2eX+FZ7PShNfohSbeeKysmqU2iu
Bb+0eScpLfI+P0o5f9Pk77zCq77GSt+DDjoo9vvqq6a1oNRmk0XWc7oSdH/L
aw0IAED9oD4WzZo1S/WsOYzmcdV48OBadkFai0Z9W0qh8eUq21XTfD9J9aBy
SBP/akqrLFzj4fK5aq8H5aHazhWN2VCdLOt1xkVdOz/yCK/qRkrfpDqV+oUp
X4TNewIAQEOiuXpVJ8lSJlQbkOYf0ly7LmvW6fmq7sOlrEukfnstWrQoJZhl
U4l6ELJpCPWgajxXUHm6Vrdq1arSwQAAoKI0t6juh5q7V/0pkl6aN1bzyOk+
qnlk1Uddc69qvUHVa/RSW08Sjd/WmFr1B0lro402suNvqwn1oLqnIdSDqvFc
QeXtvvvu5vzzz690MAAAqKh27doV6i95vDQ/r+pWLv7zn//YNffS+Prrr+1+
Hn744VKiWzbUg+qe+l4PqtZzBZWleSZWWWWVep33AQBwMWfOHFuGz+s1a9Ys
531/8803plGjRqnmMNPa8tXYr516UN1T3+tB1XquoLK0Hu62225b6WAAANDg
HXbYYeb22293/rzWHGzZsmUZQ1Qa6kF1T32vB1XruYLKUX9kzWOjuhAAAKis
UaNG2TEMWnvcheoa1bIWip/qQSpzaj0OvXr37l3pICHEo48+WjhGf/7zn+t1
PahazxVUzsiRI+28oJo3GwAAVJ7WEbrlllsSP6e6ksYfuazlUdu0HsWzzz5b
eFXb+un4P5pX2H+cXMey1TXVfK6gcvbZZx/Tt2/fSgcDAAD8f5MnTzaNGzc2
8+bNq/E/jTdasmSJ/X3o0KFmm222qe3gAXUC5wri9OvXz+y77762bxwAAKge
mmv76KOPrvH++uuvb9eClP3339+MHTu2toMG1AmcK4iifrtbbrmlnUMQAADE
U9+Jl156ySxevNj+rnWD5s6da9dc7d+/vxkyZEju+9Q6J3369Cl67+STT7b7
u/zyy+0LQDjOFYRZunSpHSumfqAAACCextJ64/5VL1mwYIEZNmyYXetHP9Wv
olOnTnaOgzz9+uuvpkOHDuaFF14oel91r6lTp+a6L6A+4lxB0JlnnmkGDhxY
6WAAAFAnTJo0ycycOdM0adKkMN5A9aH27dsXPtO2bduyzLWl/XXv3j337QJA
Q6Oxl08//XSlgwEAQJ0yYMAA28/Go/afwYMH2981F5XmNWDuVQAAAAD1SZcu
Xez8Qp7mzZub2bNn298HDRpkx/JMmTKF+aEBAAAA1Btt2rQxM2bMsL+rj1zr
1q0L/xs9erTp3Lmz6datmx2DCwAAAAD1waJFi4r+1rxxfpo7AQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACAJL/99ptZa621zHLLLWdfW2+9tdl2221jX61atTKbbrqpWXXV
VQvf87/WXHNNM3/+/EpHDQAAAAAi3XnnnYU6zFVXXZXquwsXLjTTpk0zgwYN
Mqeccopp1KiR3U737t3LFFoAAAAAyMdBBx1k6y8rrLCCGTt2bMnb+e6778yZ
Z55pWrZsaZYuXZpjCAEAAAAgX7NnzzabbbaZrQs1btzYzJkzJ9P2rrnmGjNi
xIicQgcAAAAA5TFmzBjbHqS60KGHHpppWxp3pP52caZMmWKGDx+eaT8o9v33
35sJEyaYb775pmz7uPvuu83ixYvLtn0AaMhKuTdyXQaA7C6//PLCWKGePXuW
bT+zZs0yJ510UmjfuTfffNP861//Mu3atTOHHHKIOffcc80777xj/9e3b1/T
uXNnc+CBB5qjjz7aXHLJJWbBggVlC2c5KH5nnXWWOfjgg81RRx1lLrroItO1
a1cbF/UpPOyww2y807bJffDBB+aWW24xN998s53HQulbDtOnT7fhr29+/vln
+yzg4YcfNhMnTqx0cAA0QFH3xrlz55pHHnnE9OrVy7z22ms1vldfr8sAUJt+
/fVXs8suu9h6kOaDe/fdd8uyn+OPP9589dVXkf9ftGiRWXnllc11111X43+D
Bw+24fPqRnWR6m5qe7vxxhtr/E/p0qxZM/Pjjz+m2qba3z755BP7u8r0P/zw
Qy5hDdOnTx8zYMCAsm2/tmlcW9u2bc2HH35on6mqPnnttddWOlgAGpiwe+P4
8ePNXXfdZWbOnGnb+o844ghz+OGH2/u1X327LgNAJXzxxRdm3XXXtXWNrbba
Kvf2lrfeest07Ngx9jOjR4+2+3/77bdr/E/tQ5tsskmuYaptzz//vI2f0iLM
xRdfnHqbo0aNMqeddlrWoDlRPWunnXYyy5Ytq5X9lZvmOuzRo0fRe5of/o03
3qhQiAA0NFH3xr///e/2OY1H7da6f4wcObLoc/XtugwAlaJ5sL3+cSeffHKu
2/73v/9t6zlxrrzySrPOOuuE9pvbYYcdTIcOHXINU21T/8O1117bjqPy+J8B
BsvkLpYsWWI233zzWhtzdcYZZ9SLeoKOger9eubqd8wxx9i+igBQG6Lujb17
9y5a08KrB4XNRVRfrssAUGmnn356oS702GOP5bZdtTH99NNPsZ/Zfffd7RiZ
oHnz5tn+ZPfee29u4amEXXfd1Y4P8qgP3BVXXFH4W3WatNSvXNvcaKONMs/3
50J91S+77LLEz82YMcM88MADpn///ubVV18te7jSUpuj8vhHH31U9P6pp55q
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
pNJBBAAAAIDcjBw50q4F1LJlS9OnTx+zYMECM2zYMLPffvvZn8uWLTOdOnUy
o0aNqnRQAQAAACAXkyZNMjNnzjRNmjQxS5Ysse+pPtS+ffvCZ9q2bWvGjx9f
qSACAAAAQO4GDBhgTj755MLfav8ZPHiw/X3hwoWmcePG5pdffqlU8AAAAAAg
d126dDH9+vUr/N28eXMze/Zs+/ugQYNMx44dzZQpU8y4ceMqFUQAAAAAyFWb
Nm3MjBkz7O/qI9e6devC/0aPHm06d+5sunXrZpYuXVqpIAIAAABArhYtWlT0
t+aN89PcCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgbZs+eXekgoAF58cUXzZ577mk23nhj
s2DBgkoHp9ZNmjTJPPLII7Gf6dq1q+nSpUvZw3LLLbeY7bbbzhx55JFl35fH
Jf7VqKHn27qgEvm5rqkL+fiNN94wp556qg3nbrvtZs4++2x7TTzrrLPMKaec
Yh588EHz22+/VTqYqKfq6j2qvirnNeuDDz4w7du3N71797bXmqVLl+a6/UpK
ez+sC/eG+mTixIlmueWWa5Bpfdppp5lVV13V/Pzzz6H/f+yxx0yrVq3MlClT
aiU8N9xwg9lvv/1qZV+SFP9q1pDzbV1R2/m5Lqor+fioo44yTZs2LXpv4cKF
5vDDDzc77bST/b0+ePbZZysdBPjU5XtUXqotT5brmrXDDjuYcePGmY8//ti0
bdvWLFq0KNftV1ra+2FduTfUBzNnzmywaT1//nzz4Ycfhv7vo48+Mscff7z5
8ccfay0899xzT62WG+PiX+0acr6tK2o7P9dFdSUfd+rUybRs2bLG+5MnT7bh
v/baaysQqvypnQvVoy7fo/JSbXmyHNcsbWv55Zevd3Ufv7T3w7pyb6gPSOtw
P/30k1m2bFmt7pNyozvybfUjPyerK/k4qh6k66TCf8QRR1QgVPlSXJo0aVLp
YAAF1Zgny3HNmjNnjt1mfe5jW5frQbNmzTK9evUyd955Z6F9ctiwYfbn22+/
ba677jpz3nnn2fwqI0eONFdddZV9BY0ePdpu67bbbjMDBw5MFY6476otccCA
AbYf7RNPPGH69OnjvN2wtFZe1Lbuu+8+c/PNN5vXX389VVhdwqxnPLfeeqvp
0aOH6d69u5k3b559P02auoQzaj/qd3z99dfb/QTb3N977z1z11132Xx79913
F55ReGE7//zzbd/VQYMG2bTWZ0ppt//uu+/sPh544AHzv//9z24n7DwpR76J
i/+YMWNsWuk706ZNMw8//LC5/PLLzRdffBG7TZf0ee6552x89fL6fS9ZssTc
e++99j2dWy7HNeoaEXXsXnvtNXPNNdeYq6++2rbxeeFyTecs55jkdR3JkheS
4pBl2+KSn7Okcdx3s1yzyp03ovKkBPOxy/kRFyaXuJQiqh6kuCn8ur5K0nFI
Cl8e955SjpX642tMwgorrGCPlV6KWzCuUcexXOFKkvaeVMo9OUv4s+SHqHtU
1uMQF5c06ZmUXnHhdNlPXJ6MS7es52CSvMuMipO+411HFE9/faiUe3pY+ips
ev3yyy827Aqv8sCTTz5ZFJ68yr9Zy3fVUg965ZVX7PgQpalozKjyu/ouyvff
f2/uuOMOG1bVZ+Xrr7+2Y0m32GKLom3dfvvtpmPHjoU2BrV1Kt4u4r77/vvv
2/15lHYHHnigcxzD0lpl3n79+tnfdU6q//dTTz3lvM2kMA8dOtTssssuhevG
iBEjzN///nf7e5o0TQpn3H5U3rz//vtrxP3RRx81J510UuE8VF9VjVdTntZ2
NIZvpZVWsuURlW3lnHPOMRdccEGq9Hn11Vftdr/66iv799SpU80+++xT4zwp
V76Jir+uNxoLoO8ofuuvv75NA53HqgfFbdMlfb755htzySWXmJVXXtn2PRRt
6z//+Y859NBDbTq45L+wfBt37JSXNFZReUjXJu1H31e/nqS0ynqO5XUdyZIX
kuKQZdvikp+zpHFS+LJcs8qZN+LypPd5fz52OT/iwpQUl1KF1YM0blLXV/3P
G9OcdBySwpf13lPqsZo7d6599rDiiivaPKyX90xCko5jucKVJM09qdR7cpbw
Z8kPYfeorMchKS6u6ZmUXknhdNlPXJ6MS7es52CSvMuMipPmSNA2NSbGu4ck
pWNcPOLS98wzz7SfVziVB3beeWfz+OOP5xIXTx7lu2qoB2nfm2++uS0X+h1z
zDFFcdG9wF9+EZ0j/vKLnqmvssoq5tNPPy289+6775p11103se9V0nc1X4/m
2Pj1118L/8/aHnTiiSfaeHr0zOOAAw5w3mZcmH/44Qez0UYbmaeffrrwP+VX
/3XfJU2Twql+xUn7+fbbb4virrRYe+21zfTp04v2c/HFF9u8KjNmzLDfef75
5wv/17mquUBcaUyxxhwPGTKk6P3gOLpy5puw+IvCpWuEZ9999zWXXXaZ8zZd
0kfXPaWznnd5dL9T+otL/gvmW5djp+d3Kl+qHuKF1SVeWc6xvK4jWfKCxMUh
67Zd8nOWNHYJX9ZrVjnyhkueDLv+Jp0fSWGKiksWqusoTN26dbMvPYPVz7fe
eqvocy7HIS58WY5j1vNYcVG5KcjlOJYzXElcrrlZ7slZwp81P/jvUVmPg0tc
vP3HpWdS2cI1nC7HLSpPSlS6ZU3zJOUoM3r94pQX/fsp9Z7u/R6WvhqH5J+b
W3UjzYmZV1zyKt9VQz3ohRdesGFQWP3UfuWPi+p7wfKL6o7+MrvuYcrLmn9M
9U691NdI39N5Hifpu0or9R9dZ5117Jx8aoNL08cyKq11HFRHV9ug8sVf/vIX
523Ghdn7GXfeuaRpUjjV9yhpP8G49+/f3+bBIMVD56P25YVNz239YWvRokVy
wvx/agfVNvS8x0/lCn/eKme+CYu/bLPNNjaPe/72t7/ZZ9Gu23RNHz2TOfbY
Ywt/q/3ZLyn/lXLs9Hxd10C1i6dJqyznWF7XkSx5wUuvqDhk3bZLfs6Sxq7h
y3LNKkfecMmTUdffuPMjKUxRcclC9aBNNtnE6bNJxyEpfKUex6zncVSZ0+U4
ljNcSVyuuVnuyVnDnyU/+M+PrMfBJS4u6ZlUtnANp8txi6sHxaVb1nMwTjnK
jGH1oCz3dIlK380226zoc1oH4LjjjsstLnmV76qhHqR2MYUhOF9YcKyTS5ld
8V9vvfXstSH4SuLyXT2fUN/DDh062PyRtV+cjv/uu+9uHnroIdu+qOOVJh/E
hdlLV39+D3KtB8WF02U/wbir3r/hhhvW+Jz6bHp5IU0dLYoXtsWLFxe9HzxP
yp1vwo69wqY0Vbuz2nZ33HHHQtu/yzZd00d9KfQsRPuZMGGCHZPkccl/pRw7
XTMbNWpUUlqVeo7ldR3JkheS4pB12y75OUsau3w36zWrHHnDJU9G3evizo+k
MEXFJQvXepDLcYgLX5bjmPU8DpY5vT5ILsexnOFKkrUMknSvzBL+rPnBf35k
PQ6ucUlKz6T0cg2ny3GLypMSlW5Z0zxJOcqMYfWgLPd0cS2LqB7kf+aUNS55
le+qoR7kjf8MjpX873//WxQX1TWDaa108Ke17mEa6xasHyp+SWWNpO+qzux/
LqHPNWvWzHz55ZdO8QymtX6utdZaZvjw4YXP6Prm5QOv/bHUML/zzjt2f95Y
iWB8xCVNk8Lp9SuO20/YGGVdc4JrYWgsh/eMJo96kJe3Pv/886L31S/Un7fK
mW8k7DzTc2flJ6Wf+mX5x4a6bDNN+qh/teLsf9btmv9KOXZR18xynmN5XUey
5AWJi0PWbbvk5yxpnPTdPK5Z5cgbLnky7l4Xdn64hKlS9SDX4xAVvqzHMet5
rDKnxmJ4NKeJuBzHcoYrics1N8s9udTwa56DLPlB/OdH1uOQlA6u9zA9o4hL
L9dwutaDwvKkhKVb1nPQRTnKjGH1oCz3dCmlHpRHXPIq31VDPUg0LvXcc88t
eu/ggw8uiovqfDoO/jFm6m+odWA9amPTGCkdPz/l6aRyRtJ39f6ll15a9D+N
cw+mbRSvD6V/vjZvrJlH4/bULqCxsMFxDqWEWWvvBdNVn/XSwiVNXcKZtB8v
7nqWJfqe5mfRdd2jz6o84r2nvB3sj6PnE7rup3HIIYeYm266qeg99bHedddd
C3+XM99IMP5yxhln2HGF6selsfr+508u20yTPirnN2/evGiuGtf8F8y3LsdO
fW/VlzjYf6Lc51ge15EseUHi4pB125KUn7OkcdJ387hmlSNvuOTJYD72Czs/
XMIUFRcZP368adeuXapx5aK11DbYYIPYz7geh6jwZT2OWc9jryzmHQtvOy7H
sZzhSuJyzc1yTy41/BqXkSU/iP8elfU4uKSDuKRnXHq5htNlP1F5UsLSLes5
6KIcZUZvHJh/3E6We7pEpW/jxo2LPnfhhRcWxgPlERfJo3wXd2+oTaqbnnDC
CXZ8k/r8ae5SlU2Ccz7oeZ36c2teqL59+9pxgwq/2oi9MV66pmlbmudPdU3N
E6HnMC7ivtuzZ087n4bm+dPclRqv5zrG8uWXXzaHHXaYWX311c3RRx9t+1/o
WOvZn/r56jqmOTA1h4fmu9I8Gt4cRlnCrGvaySefbOvhmmdF+UD35zRp6hLO
uP0o7rqWKe7Kn948TDoPNQZPbZZqDznllFNsH1EZO3aszd/6jtbL0LyNOh/b
tGlj1lhjDdOlSxfnZ3jKWzpuSheNIVHe11g99YXp3Llz4RlIufJNVPyVPoqL
rsVqs9WzKM2X4rVnxG0zbfqo7K85BILXvqTjGpZvk47dM888Y8t/+o6e/QTn
yizXOeYd6zyuI1nyQlIcsmzbi2NSfs6SxnHfzXrNKmfeiMuTUfnYE3Z+JIUp
KS56xqFywGeffRabJp4333zTnrfqU7/aaqvZvvLeXEpBLschLnx53Huynsc6
/xRfjXHxz5cbdxxdlOv6kuaam+WeXEr4s+aHsHtU1uOQFBfX9ExKr6Rwpjlu
YXkyKt2ypnmScpQZFXelgbapZ4au18+4eMSlr947/fTT7T1Vc2trHsxNN93U
1ofyKv9mLd8l3RsqQe1S3lirYB8/j/oPeWOh9Qxdv/ufs/u3FZz/Ik04gt/1
+i1pn6rDBvsklkpzv3jrxYjWsChlTF1cfJUX4tLCJU1dwpm0n6hwa3/lXktV
+/HmVtSzH4UzrB0073wTRnNSqp3C//xB6amyk+Y/ySs8flFrP2TJf1mOXTnP
sbyuI6WkvWscsh5Xl/ycJY3jwpfXNStK1nCXkieT1kbJ6zzMU9bjkMdxzHKs
9BxWc9lHbTfLfaE27+FpwuBJuleWEv5ynJd53J/zOHdc0iuPckRcngxT7mth
be+ztspjnjzLv+Uu31VCVPkFqOvU5hsci+D5/e9/X6OfLkrHdQQAANQlmkdC
7bTqV6C+K2nmagKqndqg1R40atSowntqi1Df76j6EdLjOgIAAOoa9fPT2lnq
Dzpo0KCytzMCtU3tzhrDorHZ6oereePqUnttXcB1BAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAIDvN6bT77rubjTbaqLBOWG2bNGmSXaPZ8+KLL5o999zT
bLzxxqFrMdVmWKqJ1jz/17/+ZdcW1hrC5557bmF96L59+9r1ew888EC7Lu8l
l1xS62nn98Ybb9h1hXUcd9ttN3P22WfbNanPOussu1bygw8+WCvzKNfW8bzl
llvMdtttZ9dnrovbBwAAaIjee+89s9xyy1WsHnTaaaeZVVddtWj/EydOtGEK
luWfffbZWg9LNdG66yuvvLK57rrravxv8ODBNs28ulE1OOqoo0zTpk2L3tM6
pVpXZqeddsptzdKofFGbx/OGG24o65qh5d4+AABAQ/PVV19VtB6kNSw//PDD
ovdmzpwZWg9Se0Jth6WaaM0bpcvbb79d439qH9pkk00qEKponTp1Mi1btqzx
/uTJk208rr322lz2E5UvavN43nPPPWWtp5R7+wAAAA1NpetBYcLqQT/99JNp
0qRJBUNVeVdeeaVZZ511zNKlS2v8b4cddjAdOnSoQKiiRdWDdCx1fI844ojM
+6iWfEE9CAAAoG7x6kHqozR06FBz3333mbvvvruoXqSxHBpnof/dfPPN5vXX
Xy/ahton1Ffr/PPPt2V0rR+vz+qldeRVn9H3e/XqZZ588snC9zR+4/rrrzfn
nXde0f6C9SCNGdI4kxVWWMHcdddd9qX+fH76W++rvKjwqw9ZVNj69OlTI45R
YYmLu+u2k8LoSmO5NDYoaN68eTZt7r333lTbK7eoepDXF7NHjx7276T89dpr
r5lrrrnGXH311ebHH38spHFcvog6nqJ2NeXF2267zQwcONC+l/ZYfvfdd/Y4
PvDAA+Z///uf/VxYPaXUY+6y/bB4AAAAwI1XD1J5a9asWfa9c845x1xwwQWF
z1x++eWmX79+9neVCTW246mnnir8X+Xw3r17m5VWWskMGzasaDtnnnmmLc/p
e8uWLTM777yzefzxx+3/9Sz//vvvr9H2E6wHzZ0714wcOdKsuOKKNrx66bue
Rx991Jx00kmFsfcff/yxHaOvsmRc2PxxjApLXNxdt50URhcqP6+yyirm0EMP
teH0vy666CIbbvU3qyZh9aApU6aYXXbZxf7Pa9dKyl9z5syxcwVsscUWNi9N
nTrVxlf1pah8EXU8b7/9dtOxY0ebF0V96lSPSHMsX331VXvstD9RePbZZ58a
9ZRSj7nL9qPiAQAAADdePcg/1lzlN81P5TnxxBPNMcccU/j71ltvNQcccEDR
dmbMmGG38/zzzxdtZ/nllzezZ88uvKdypeYS83z77beJ9SB56623bBk1SJ9d
e+21zfTp04vev/jii205MS5s/jhGhSUp7i7bdgljEm9skMr9n332WdHrhBNO
MJtuuqnTdmqT6jqKd7du3exL7Tn6qWPp55K/NM5Hc0RoLjpRuktUvpDg8Zw2
bZqtS3766aeFz7z77rtm3XXXtfUJl2OpdlPN/TBkyJCifQXnMSj1mLtsPyke
AAAASObVg7755pvCe3oW36JFi6LPqXz1wQcf2L5LKrf+5S9/cdrOZpttVvQ5
zZ983HHHFf4Oq/OkqQf179/flv+CHnvsMVsOVbhd4xg1P0Nc3F227RLGJBob
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
Iy/EQV70Z+TIkVGvfRXLPZg0aZL9HvTt2zfXfTWmqTYGm5cabhy0cuVK07Zt
W7/PVG+uRYsWdkwLAAAA/9E6N4pzbrzxRlOiRAnz2GOPmRUrVtht+ldrp6al
pdnnM/1tWzkOyJ3WcNFzq+pnR+rcuXN2zRmNH0Szfue6dets/opj+vTpCa8Z
HSiWPnnRH+URXXfddREd44jlHuj/kP7vZGVlhbW/+qlYz011S66//npTvHhx
c+mll5pbbrklx7FZ1cXT2JObYka1YebMmVH1AQAAAPmPag7PnTvXTJkyxWzZ
siVh19VzquKgTz75JKLjFD8pl17jcpmZmaZjx45m7dq1EZ1Dc/E0/uHQ8Ypl
o+FFHBRrn7zoj+L7+vXrR3SMI5Z7cPz48YjmkyqGUSwTLfXx2LFj2T5XjTnl
rAEAACD1KZ9EY1iKfzQ3SH9H1/NwInL8NeahOs0auwiXcvgbN25sc93dn9Wo
USOmHB/laoVbVy1QrLlb8ehTNP1RG3KbU5aTROavKV658847g86Ny42+4z17
9gy6TWNqwea8AgAAIPWotpa7PteuXbtMgQIFbO2wRFC+utafDZfmQ1WuXNm2
001zpYYMGRJVG2bNmmU6d+6ctPpuXvcp2v5ceeWVNscoP9BcuqFDh0Z0jOYd
6p4GW69Ka7dqHVYAAACkPo01aF5a4LpCeiZ355rE0+OPP26aNWsW83m0pk1g
7ns41qxZY4YNG2Z/PnjwYMzt8FI0fYq2P6o/cOGFF9q1bfML1bfLrb6cm+Ic
1ZEIRvPkNM4EAACA1KfxgpdeeinbnKayZcva/BSHtmvNU9WL0N/U3333Xfte
627qHJrP9cYbb9j8FKd+RLi03tIVV1wR0THbtm2z69nqOXj06NG2XY0aNfJb
N2bHjh22jXppvEtznvSzu32aEzhjxgz7/Ksc/UGDBkXUDi950adY+qNzKSbO
bzU+IqnvRi04AAAA5ER/X9fzsJOjr9z3119/3b6/7bbbzGuvvWaOHj1qt2nt
TL1XLKPxBM0tUkzz/fffh3091YrT9fbv3x/W/uPHj7fXda8Jq7z58uXLmz59
+vjOqVhNMZpiM617u3TpUvsqWbKkjeW0Do1+1rWdV9OmTcNut5e86JNipFj6
o1yimjVret43AAAAIK/TGEPt2rXtuITj/fffN/v27bNjP6pHrNpyDtUIq1u3
rl8eSsWKFSOqc6Zjq1atasdBcqOadqVLl7Y1BNwUh+m5f/bs2fa9+1yqwebU
j1YeTmC95GTLK31q0KCBefrpp2M+DwAAAJDfaB3LwLx8pxayasj17t3bb9sN
N9xgn+Mdhw4dsjUWguWhh6Jr3n333SH30RhOpUqVTPfu3bNtGz58uB0Lcdrq
romscZYePXpE1J5EySt9OnHihClSpIjZuHGjZ+cEAAAA8gON94wZMybH7Rp/
WLJkie+9Yp2CBQva2Md9jptvvjniayufv1ixYiHjp61bt9rxkdWrV2fbpvlf
qikQjOKM+fPnh7y+aiknQzz6pBwh/Z4iqbeteY+KaQEAAIDzyfLly22+vZt7
XEjz4hTzuNe3WbRokV3fxu2ee+4xI0aMsD/reTwSqgegXKOcaK6dYgZ33CWq
J1CiRAmbHxNIOf865sCBA/a91ptxxzyqL60aYhdffHFEbfWKl33S/ELVvFY9
NM2Vq1evnv0d5UbHVa9e3cZCAAAAwPlCz9Cqzax6yXrNmTPHjBo1ygwePNi3
j+IFrfPjprUou3Xr5nuvGglFixa1NRIUA6n+WCQ0JqK6AIF5Mg7FYKVKlTJ7
9uzxfaZ8poYNG5qJEyf6PtN1le+v9igmK1OmjG/bwoULs9Vj0LyzZMVBXvZJ
+7hrnWttWieHKBTFwFWqVPGr0QAAAACkstOnT5ty5cr51RhzXu55V7169bK5
Q2516tTJNt6g8aAPPvjA5vhHQ+sIKS8mJ2pTy5YtTWZmpo3fOnToYKZOneq3
z+LFi016erqZOXOmjd+6du1qaw1MmTLFPvMHSmYcJF716fDhw7aOnENjTWlp
ablev3HjxrbWNgAAAAB/ytsJHC9w141z0/N4tHbu3Gnrzbnn3wXSdZctW2af
8921A9yOHz/ut1aM2pTTeEey4yDxuk+SkZFha2GHorjqrrvu8qv3BwAAACDx
NJbUqlWrhF0vL8RBXtOYUefOnUPGN5pLp3lzTp4RAAAAgOTS3DDN+UqEVIuD
1qxZY4YNG2Z/Vh2+YFRboXnz5mblypWJbBoAAACAELSuTps2bSJajzVaWjvn
oosuivt1EkH1KZTrc+bMGZOVlWUGDRoUdL8nnngi11riAAAAABJPddNCrWfk
BdUf0NqwqnM3YMCAhMRd8bJ792677qq71oXWIAqkHCz3OlAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAgNTwPzkYTaQ=
    "], {{0, 709}, {834, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{834, 709},
  PlotRange->{{0, 834}, {0, 
   709}}]], "Input",ExpressionUUID->"3becb87c-44ec-453c-b7d4-b286e4592a04"]], \
"Text",
 CellChangeTimes->{
  3.7273598889622107`*^9},ExpressionUUID->"91eb4209-6e1d-40ff-b0d1-\
8ff9a341e306"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qn8TdX+x38phNRNbrqUJCm3us2ZmqO4jeqmxJXpKirVpaLhigYKJZeI
DCEUZYiQpNyUJjTIlKlCZCwk0/r/3uv/3+e/z/meYe9z9pm+Xs/H49T3TPt8
9tnbOetz1lqfdVLL+25qU7RIkSIdDv+//9zU4uHL//3vFp1v/tP/XbmlfYe2
d7b/V+sG7Tv+685//btmy0P/78buhxQpctX//XHY//1tAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABA1k2e
PNnUrl3bHH/88UlvY/HixWbUqFEBRgUAAAAAmfXBBx+Yww8/POHjpk+fHvX2
Nm3amBIlSpjdu3cHHRoAAAAAZMS3337rKS+6++67o96+fft288033wQdFgAA
AABkjJe86LfffktprB0AAAAAePXxxx+bMWPG2Pk6r7/+uhk0aFDY/bNmzTL9
+/c3PXv2NOPGjfO0zYULF5p+/fqZgQMHmgEDBphdu3aF3e/kRZs3bzZDhw41
L730knnjjTfM/v377f2zZ882F110kSlatKjdji7apmhu0ZNPPmnuu+++AuPo
osX65Zdfmm7dupn777/fbn/8+PF2HxVXtHF4yewvAAAAgPz11VdfmXvuuSd0
/eeffzYNGjQIXe/du7dp1qyZOXDggL2ucW3KF+J57bXXzB133GH27dtnr3/3
3Xfm0ksvNRs3bgw9RnnRYYcdZrp06RLKTZST1atXz15XvjR16lRz6KGHmp9+
+sle1H8k+v8rr7xiihQpYnbs2JEw1q1bt9q8S683adIks2HDBnv/vffea/79
73+HxZ7M/gIAAADIb+qradSokdm7d2/oNqe/aOXKlaZ48eJm2bJlofsWLFhg
/vSnP4XyhkjKq4488kizZs2asNsfeughm284lBcpr/n111/DHnfllVearl27
2r+/+OILm8tEs379+rC8KFGsP/74o338zJkzQ/crfzvzzDND15PZXwAAAAD5
T3mM5vAcddRR5qabbjJDhgwJ9fOoT0Z5yejRo83YsWPtZfjw4Ta/UF4SzciR
I20eEUnbUL7k5BdOXuS8luPxxx83Z511lv07Xl6kuN15UaJY1d+kv9etWxfa
xsSJE02VKlVC15PZXwAAAACFg2q7aa5N48aNbe7ijKPr1auXOfroo23uEnmJ
5bnnnjPlypUrcLvm6bj7h2LlRc8884wpX768/TsyL3LG0UlkXpQoVicv2rRp
U2gbyosqV64cup7M/gIAAADIf+rf0Rgzh+b1nHjiieaHH34w77//vq17oNvc
lIvEyhVmzJhhc5mdO3eG3d6nT5+wvplYeVHbtm1DeZnyIs0vcrzwwguhvyPz
okSxesmLktlfAAAAAPlP+Urnzp3Dbrv55pttbqAxb1dccYV9jJvyk1h5guq9
qY6c8i2HHlu7du2w25y8yKkxJ8qlNKZv3rx59rpyGD1GdROcWB3OfCH1dUmi
WFetWlVgPJz6sJQDOpLZXwAAAAD5r2/fvrZ2nGp0q1636ra563QrP2ratKl5
4oknzNtvv23rtc2fPz/uNn/55RdbY0Hj0iZMmGBatWplBg8eHPYY5UUdO3a0
9bBVn1uP0+tMmzYt7HHt2rWzfUia9/TJJ5/Y2+bMmWNuvPFGU6pUKVszYsWK
FXFj/eCDD8x1111nH9+wYUMzd+5cm6PVqlXLlC5d2m5f/WPJ7i8AAACA/ObU
yNbcnaVLl5rff/896uM0liyyxlwieo5qvCWq5aY8SuPcYlHf0JYtW3y9rt9Y
07ENAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACAg9GBAwdMx44dzZAhQ0yvXr3sdQAAAAA4mPTv39906NDBjBs3zhQp
UsQsWbIk2yEBAAAAQMbs27fPVK5c2Xz66adm69atZvjw4fQXAQAAADiozJgx
w5QtW5ZcCAAAAMBBq127duaqq67KdhgAAAAAkDWVKlUynTt3znYYAAAAAJAV
K1assHUWxo8fn+1QAAAAACArhg4davOiVatWBbbNjz/+2EyePNls3LgxsG3m
gy+//NLceuutZvfu3dkOBQAAAIAPd9xxh625EATVbXjsscfM/PnzzaJFi0zt
2rXNxIkTA9l2rtM+t23b1nz22WfmzjvvNHv27Ml2SAAAAAA8Un3uevXqBbKt
OXPmmNtuuy10fdiwYebkk08OZNu5zl3b/IcffjCzZs3KckQAAAAAvFizZo0d
Q9epU6dAtrdhwwbTs2fP0PX33nsvsL6oVC1fvty8/fbbnh8/YMAA8/vvv6cx
ovQ62PYXAAAAyfv888/NAw88YOrXr2+uu+460759ezseSl599VXTsmVL06BB
A3PLLbeYhx9+2OzYsSPLEQfrtddes3nRuHHjkt6G+klq1qxprrzyygL36f3r
0qVLChH+v9QPM3LkyKSfr3xN4wX379/v+TnKGe++++6Y9wd57qS6f5HSsb8A
AAAo3Hbt2mWKFStmunXrVuC+N9980+YNTnu3sLn33nvt/qkmXSq0/pG25aZ2
fuvWrQNZK/bbb7817777btLPb9Kkifnpp598P2/QoEFmzJgxMe8P6txJdf8i
pWt/AQAAUHhpHojar6olFkl9AMcdd1wWosqMCy64wBx11FEpb+eMM86weYBj
5syZpkePHvbvdevWpbz9gQMHJt1X98UXX5hmzZol9VzVlatRo0bM3C6ocyeV
/YuUzv0FAABA4fX444/b3CDamKOzzz7bNG7cOAtRpZ/awMWLFzeXXnppStv5
5ZdfTNGiRe3/RTW6NY5M29+2bVvUvhS/evfunfRzH3zwwZRqINx11122xlw0
QZ07qexfpHTuLwAAAAqviy++2M4PibR161bb3n/55ZezEFX6KX9RX8d9993n
+7kaG6Y+DvURaW7SmWeeaW/XXP8yZcrY7ToXzb+RTz75xOYJeq+VN82YMcPO
vXnooYeirnOkPgu17zW2SzXuNBdKx8SvU0891fz222+h637jGDVqlHnkkUei
bjuVcyeo/YuUzv0FAABA4aT5Ieozuf76680rr7wSdunYsaNt1y9dujTjcant
qnV/vFw0xz4ZL7zwgt0/1dL2Q30bmk+k9Xm0Fuwpp5xSYG5RNOpP6tWrl33N
Fi1a2HZ5nz597PXOnTuHPfa7776z66POnj3bfPXVV7au3c8//2yuueYaX3Oh
1q5da6pVq5Z0HPL111/bdZgipXLuBLV/mdxfAAAAFF7O/JCpU6ea77//PuzS
tGlT85e//CUrcb3++uu2zpuXy48//pjUa6iPQvu+YMECz8+ZNGmSbXe71yxV
/4R7blE8qi+g19TYM42z0zo/qpum3MCh26pXr27b+KI+l507d9q/R4wYYY+L
V+rXitbG9xKHQ3FEW4Mp2XMnyP3L5P4CAACg8NL8kKOPPvqgm1skymdUS+2P
P/7w/By1l7t27Rq6vmnTJnPooYeG5hYl4rTPL7vsspiP0bi7559/PnTd/fdb
b71lzj33XM/xqsbb1VdfnVQcDvULHXnkkQVuT/bcCXL/IqVzfwEAAFB4aX6I
xkFF2rJlS6GeW6T+Ce3fWWed5fk5GjOntrXqnTnGjx8fmlvkhdM+v+GGG6Le
r3VFS5QoYV9LNAdH4/0cykXatGnj+fXmzp0bNRdIFIeb5vxUqFChwO3JnDtB
71+kdO4vAAAACidnfoj793qH5u1Ezg9RG1bjnD788EPz66+/2pxA191z5TWv
Xfer/au/Bw8ebDZv3mxWrlxp1/NRf4AXWhP0xhtv9HRx5ylezZs3z+6fxlJ5
pb4Itff1vjnatm0bmlukbSbitM8VdzTqdzrkkEPM3r177XVn7o2olsAJJ5xg
11P1cixEdSDUd+M3DjflMJHb8Hvu+N0/SeZcStf+AgAAoPBSbYNYa8+oRlvk
/JApU6bYtTI1lkzz1tVeVXtc69SI5pno/qpVq9oaY1qPRvNx6tata/+vtnzz
5s0DXb8zWaolp33v27ev5+esXr3alC5d2uzbt89e17ymcuXK2XxkyZIlZtq0
aQm34aV9fskll9haefLSSy/Zvi3NiVGdAtU0kETHwqExglpDKHKsm588Yfr0
6eb2228Pu83vueN3/5I9l9K1vwAAACh81L5X2/Vvf/ubKVWqlGnVqlWoTa//
q21dtmxZ275U7a41a9bY+xYvXmxrhh1zzDGhPhPlFRr75L7/+OOPD9UlUJu2
UaNGodfW3A8v/Srppn4etZOdvgmvunTpYmubKQdRn0X//v1tTbMnn3zStu3j
UVv/9NNPNyVLljTly5e382ii9akoH9BYsrFjx9rjpH6SDh062JoCjkTHwk31
JRYtWuQ7Dof2TXUwJNlzJ9n9S+ZcCnJ/AQAAgGjGjBljax07rr32WvP+++/H
vF+/6Tu12tQvULFiRV91DtKlVq1atp3srivnlda8cddZ0HVnXFiQNGZMOVes
fCvRsXCoja+2frLq1Kljtm/fnvTzY/G7f17PpVzdXwAAABQe6mfRuDFR27FS
pUo2J1DfSeT9ctJJJ4VyCPWxNGvWzM4BccZRZYPGYB1xxBF2PFcu09gv1cKO
JdGxcCjvuPzyy6PWjUtEa6J6WZspGX72T7yeS7m6vwAAACg81M/irBekefKq
/fXiiy/a8VWR92sc1HnnnRd6rtrAqqegcWjJtFmDsmzZMjuG7uGHH85aDF5o
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
HXab+sHuuuuu0HXlgCVKlLA1C5ycwpHtvCjZ+FM5j+bNm2fP6XStCeWFxnMq
x/ZqwIABWa2jl2/xJiMf9tFPjLlwDIJ+T8mLAADZ9Nprr9k25Lhx45LehtaA
VV6inCJSy5YtTZcuXVKI8P8VLy9S7nP44YeHzY/atWuX/X598803PdeTUI5Y
rly50Pe21ootVaqUWbJkScrxu11//fUJ5xY5VEciMmetUaNGgTFl6m955513
bH03t2znRanG7/BzHv3666/2nFbd7mRoDF8qNe2U02lsqp81ZnXuqQ6iF6nG
Fynd8QbhkUceMQ0bNjQNGjQwzZs3N//73//C7lffrsa/Ove7+yclH46J3xj9
HoN8OG/IiwAA2aTf7tWGVE26VGj9I23LTd/BrVu3DmSt2ET9Re65Kg7Vf/bT
Z6A4Ix8fVN0IN/UVae6MF4pH++HmruvmpnZKpGznRanGL8mcRyeccELcGujx
qG327rvvJvVcadKkifnpp598P09r0rprUcSSanyR0h1vUFQrX/2Ksfpvn3nm
GfPSSy9FvS8fjkkyMfo5Bvlw3pAXAQCy6YILLrDjzVKl+mLqm3Hot/oePXrY
v9etW5fy9r3U6c4HylOUh6rOQKZeL4i8qG3btlkZs5PseaQ1YG+66aakXlPr
zDq19PxSjfdmzZol9dzdu3fbvrRE+V8q8UXKRLzRJHM+9enTx/7biVbbXu/H
f/7zn6jPy4djkmyMfo5BPpw35EUAgGzR91Px4sXNpZdemtJ29Pu/5tY7/QCa
I/Lqq6/a7WvtoG7duqUca2HJi1avXm3bdrNnz87I66l+eenSpVPejtYbCqpN
5VUq55Ha3Vo3NxlabzZZDz74oJk1a1bSz9e8q88++yzuY1KJL1Im4o0mmfNJ
64vp347W/oqkvqJYa4HlwzFJJUavxyAfzhvyIgBAtqjdqXbGfffd5/u5qp+s
3x/VR6S5SWeeeaa9XfNwy5QpY7frXPTbvWgdHdWMu+6662x7d8aMGeaWW24x
Dz30UMLxaoUlL1I9CL0ny5YtS/trqR2petUae/T444+ntGZqpvOieOeRFzqn
/NRB1G/XaudpjI/mfmneXeQcFS9OPfVUm4u6+TnvR40aZefSpCu+TMWbSDLn
k2pKRpsL+eWXX9r3I5Z8OCaRMQZ1DPLtvCEvAgBEo+8UzU33cok1LyORF154
wbYzVAPZD/3uqPlEe/bssbUOtHZq5NyiaNSfpPV09JotWrSw35fO2JjOnTvH
fW5hyYvURtH+rl27Ntuh+JKN/qJUqOafamh4oTVgtU6V+vC++uormz/+/PPP
5pprrvE1707HtFq1agVu93Peq+2vtZrSEV+m4vUimfNJ7XDF4NRzF9UyVHyx
5MMxiRZjEMcgH88b8iIAQDSvv/66rfPm5aI1YpKh3w/1naU+DK/UB6HvROVE
Dv126J5bFI++9/SamtOk8VE//PCDrWmk7+14CktepNp42a4hnYx8y4vUHjvs
sMMSPk7nX/Xq1UN5qurhqQ6hqL679tsr9aHGyhG8nveKw93PFWR8mYjXq2TP
J62HrDGSDtVZUN9iLPlwTGLFmMoxyNfzhrwIAJAtymeKFStWoF5YPPou69q1
a+i6xvQfeuihMWuMRXK+Ny+77DJfscbLi1S/2T3eKpuXRLWkBw8ebB/nZc55
uvYrUYxt2rSxObP7ohp6N998c4HbNf8608fES71u1bXQYyPH+kTS2Lznn38+
dN3991tvvWXOPffchK/lUK2vq6++Oup9Xs971Zc/8sgj0xJfJuKNJojzyXH+
+eeHxlOq5rPW8I0nH45JrBhTOQb5et6QFwEAskG/HapWwllnneX5ORozp+88
d9tF/R/O3CIvnO9NrTXiR2HpL9Las9p/57fbXKScTb/luy8aj6MxOJG3B1GD
PR2GDh2a8H3WfmrulbPulfZFY0sdmpOlNr1Xc+fOjdke9Hrea+5HhQoV0hJf
uuONJcjzSfNV9HuOPPzww2H91tHkwzGJFWOyxyCfzxvyIgBANFrHUrmAl0ui
31ijmTdvnv3+0hgHr/Q7oXIp/dbn0JgWZ26RtpmI872puP0oLHmR5oxr/5Od
E+aF6mlMnjw50LWXMjmOLoj4+/XrZ9uG8aiP85BDDgmth+PMwRD1M2kNJNU+
U7tSY48+/PBDu2asfgvQ9cj56xrPdfbZZ0d9La/nvdqyzja8xufQXHfFqHax
/lbf5ObNm83KlSvtGlDqJ0hnvH4kez5pzoqOq8YZq32eSDaPSarnTbLHwE+M
fs+ZePGmErP7+eRFAIBMUy05fX/17dvX83NUY1o1nzXXWTSvSXPb9V2/ZMkS
M23atITbONjzIuWW2v/vv/8+8G2rHab1YjX+f9GiRXYOgOpyBCETeVGQ8ffs
2dMcd9xxCR93ySWX2DxMNFdF/UuaF6H+DPXtyZQpU+z6lRpDqnlLakOqjdu+
ffuwbWk8ql5z//79BV7H63k/ffp0c/vtt/uKT6ZOnWpjrFq1qq09pmOluYB1
69a1/9d727x587B1PdMRr1fJnk8DBgywcXXq1MnT47N5TFI9b1I5Bl5iTOac
iRdvqjE7z/eSF+k3OI0VTMe62wCAg4/6efT9FW0tkHg0t0M1h/T9rt8T+/fv
b2sNqf6Xvnfj0ffw6aefbkqWLGnKly9vx7gvXbrU0+sWlrxIa3b4rXXh1Zw5
c+wcDYfqDCYzJz6aTORFQcav8/Svf/1rwsepXagxRWPHjrX16vV7eYcOHWxu
5li8eLEd86U5/05fqX5P0HikSIpfOZ2bn/Ne/47UF+InPneMxx9/fGhsmdq6
jRo1Cj1Gc0Ii+3SDjterZM8n/faiNrnWs/Iq28ckmfMm1WPg57z2e85EizeI
mMVrXqS8rWLFimn5fQkAcPCpVauW/f5KND4/Gv1G566zoOvOmI10SSUvUqxj
xoyx3/kLFy4MODJ/1E5QXqSxK0HT2Dz1kzg0dqZs2bKBbDsTeVGQ8bdq1crU
qVPH8+M1dkj5fazcXuePag87rr32WvP+++8XeJzaemrzJUsxb9++3Xd80WLU
b/1OnUj1F6gdGVljJV3xJpLs+aTxaF5/S3Hk0jFJx3kT7xj4Pa+9nDOpxhsv
ZsbRAQAyTeMjjjjiCDvWIl8kmxdpLInmJCgf0rqD+g1TbeZs1QvQWBrVj/a7
ZlQyNEfNS+02L5KZw5aqVOK/4oorfI3VVHtMa0vFov5VjRcVtecqVapkfwtQ
n6mb2p+XX3551DFGiej8jLUOWKL4ImOUk046KfT7hfp3mzVrZueGOOOr0hlv
Ipk8n3LlmKTjvEl0DPyc1+LlnEkl3kQxkxcBADJt2bJlts9C9ZzyRbJ5keoi
ufvEtO+ak6x6Zdmi+cYdO3ZM62uo3dW6deucrReXSKrxV65c2c5V8kpzLuLV
Tlf/qrNOmOauqx6XakRrzl0kjfXq3r27r3jVVtbYpFjrWiWKLzJGjY8677zz
Qvepbaw8U2NgI9uy6Yg31+TCMQn6vPFyDPyc137OmWTi9RIzeREAINM0BkJ5
UVBz8jMhmbxI4/u0nxpX76Z6TO55LJn2r3/9yzRo0CBt2585c6bp0aOH/Xvd
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
FmTNmjWmTJky5sCBA6HbvvjiC7Ny5Urfr5/u/QMAANkTKy/67bffbJuxYcOG
aXvtINulmzZtstsqjPMG8iEv0vly/PHHZ+z1gkBelH+SyYu+/fZbc9xxx6Up
IgAAUFjEyosWLlxo24wvvvhi2G39+vWzbZMBAwaE9c3MnTvXPPHEE6ZLly7m
119/NYMGDbKPiSdau1R5jcbvDx482PTo0cPTHADFpcc68SpGd34UK+54MX/5
5ZemW7du5v7777fzlMaPH29j0uWPP/6wMSvO/v37mzfeeCMsnmT2wW3jxo02
1iFDhph33nnHxhTZFpw1a5Z97Z49e5px48YlfF8jad/VF/jvf//bbN261fTt
29fO3xg7dmzUeVnxjr3GJ2k+V9GiRe1jdNHjE8Ub7T12jkG0cUr6nf65556z
x1jzRBS3aM7Hk08+ae67777Q87wcA795Uaz3XGM3x4wZY1/v9ddft/sQj5/9
jnec470nqcSc6L2L9e8m2nFwxDt/4vHybyHRfj7yyCO2v8g5N/V+Pfzww+aF
F16wj/F6PKLtXzKfewAAIDdFy4uWL19uateube9z2sivvfaaueOOO0L5hubw
aN662i2i/hq1qytXrmzbMStWrLBtTo3HiyVau/TRRx81I0aMsH+r7aE5ThMn
Toy7D+qrUM0FbUtzRn766afQffHijhez2peq33DYYYeZSZMmmQ0bNtjn33vv
vXb+th6v+DQ2p2bNmjafSGUfHB999JGNz9kHxXTFFVeEtQV79+5tmjVrFhoX
pPFrag/Ge18jad/VLtT+KV69h9K9e3dz2WWXhbUHEx37zZs3m6lTp5pDDz3U
xq2Ls7148cZ7j5WvuU2YMMGek067f8qUKebvf/+7/Vuv9corr4Tts5dj4Ccv
irUPX331la1Z4t5mgwYN4m7L634nOs7x3pNUYk703sX6d6P8IvI4SKLzJxYv
/xYSvU8a9/bee+/ZOUHOubl69Wobj7Mdr8cj2nmWzOceAADITcp9jjzySNOr
Vy970e+e+r/G3zvUbtJjNE7f7aGHHrLtEYd+uy5WrJitdSc//vhj3NeO1i79
5z//aW699dbQdf22e9VVVyXcD2cc3bZt23zFHS9m/a1tzpw5M3Sb2niax+Su
Ba72k2r7pboPqnGhGhhvvfVW2O3uueaaE1G8eHGzbNmy0P0LFiwwf/rTn0Lt
Qq/tfY0v0uN+//33sNtPP/10ex442/Jy7HW+qF0ZKVG8sd5j1R1zqG177LHH
msmTJ4duUzvW3ZZfv3592D57OQZe36d4+6B+DNVA3Lt3b+i+RP1Fkmi/E71v
id6TVGL28t7F+ncTeRy8nj+RvPxb8PI+ic7zww8/PGw7kf1OXs7DaPsX770A
AAD5RXlRorH3I0eOtO2MSKNHj7ZtHnf7QzmDxpl5Eatdqu2p/0fjeNRGO//8
8xNuK1pe5CXueDHrt2Vtc926daHb9Lt5hQoVwh6n+ua33357yvugsUB6PfW/
uClPddpw+r1a+Yf2QX1UugwfPtw+T2028ZsXRc7J0niiv/3tb/Zvr8c+Vl6U
KN5Y73GVKlVC11XnTo+J196Mts+JjoHX9ynePmh8mOZVHXXUUbZ+tHIOL3Pc
Eu13ovct0XuSasyJ3rtY/24i31Ov508kL/8WvLxPTqyReVHkPCUv52G0/Yv3
XgAAgPziJS/S78XlypUrcLvG8auNoHH1Eq39EU+0NobaYhdffLEZNmyYHd+i
dk+yeZGXuOPF7LSVtG2H2koaM+OmvOi2225LeR80dila/427Lai/jz76aNuO
jbw4Us2LNF9C6/qI12MfmRc54+gSxevlPXbeF/exjRS5z16Ogdf3KdE+qO9G
/Q+NGze2bf1E4+i87Hei10z0nqQSs5f3Lta/m8j31Ov5E8nLvwUv+xkr1lh5
UaJ/67HyIj+fewAAIDd5yYu0DqLavJFrGWmet/v31FTzIv1f86Pffvvt0GPU
dnPaZM44lWii5UVe4g46L0plH5xaF6tWrQq7XXMlnDbc+++/b+sbRP6Ortd1
2oKp5kVqKzvtZK/HXnmR5hc5nDntieL18h5rPowzf8XLPns9Bl7fp3j7oL4J
d5+NHnPiiSeaH374Ie42E+13ovct0XuSbMxe3zuveZHX8yeSl38LXt6nWLGS
FwEAgEhNmjQxxxxzTNzHqPaC6o1pTIxDbQ7N+XbfpnH9Gmcfa2xMJGdMvzNv
XG28yDnLmvesNRkVg2pJxeKM+3fP+/ESd7yY1SZzj8cR/c5dsWLFsMd16NAh
NB8jlX2Q6667ztY+cNNckDp16ti/Fafmnqtd6aY8xGkHRr6vsTh5kbt2nMYR
qV08b948e93rsXfyUuc1nfgSxRvrPVY73U3rDLdv3z7sNm0zcp/VD+L1GHh9
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
Dhw4kO0wAAAAALhs2LDB9O/f37zwwgtm+vTp9rZJkybZ/3/55ZemW7du5r77
7rPteZk6dar5z3/+Yy+RZs2aZbfVs2dPM27cuLD7Nm7caHOTIUOGmHfeeccM
GDCgQJ6yb98+M2rUKDN48GDTo0cP88knn4Tuc2K5//77zf79+8348ePNoEGD
7HZ2795dIBYvr7dw4ULTr18/+zjdv2vXLk/vWbw45eOPPzZjxoyxj3n99ddt
nLJ48WLz5JNP2vczWswAAAAAMu9///ufneeinEM+++wz06dPH3P11Vfb61u2
bDHPP/+8KVKkiNm0aZO9be3ateaee+4xlStXDttW7969TbNmzUJ9IXfffbfN
j+Sjjz4yl156qfnpp5/s9RUrVpgrrriiQJ7y6KOPmhEjRti/lTfUqFHDTJw4
0V7funWreemll8xhhx1m8zblc3Lvvfeaf//732Hb8fJ6r732mrnjjjtsjiPf
ffedfY7yqUTixfnVV1/Z98fx888/mwYNGti/lVu+8sor9v3csWNHwtcBAAAA
kF5ql59wwgm2v8Tt1ltvDcsfVBvAnRfJhAkTwvKilStXmuLFi5tly5aFbluw
YIH505/+ZF+nUqVK5q233gp7nWh1EP75z3/a13c899xz5qqrrgpd//HHH20s
M2fODN2m/Ea15hw7d+5M+HrKVY488kizZs2asMc89NBDNrdLJF6cQ4cONY0a
NTJ79+4N3e/0F8n69evJiwAAAIAc8d5779n2uXIaN42Dc+cr6nOJzIvUN+LO
i9QHon4c1VkbO3asvQwfPtw+T3mL/r958+aw1+nVq1fU+T7qb/r666/tGDXl
H+eff36BWNatWxcWS5UqVULXNZYv0euNHDnS5myRFL/yJS/zf2LFqZzr+OOP
N0cddZStC65xfE6flHM/eREAAACQGzQOTO3zyLpokfUJvORFyjmOPvpo2/6P
vDiv8/vvv4e9TrS8SHnGxRdfbIYNG2bHzSnfipYXxYvFy+upf6dcuXIF3hPN
iYr2nkRKFOf27dvtfKXGjRvbPMsZRyfkRQAAAEDuUM0Btc/1f7f//ve/YfmK
+mYicxHlHu5c5P333zdFixYt0Eejtr/mLun5q1atCrtPc4/cr6PHlilTxrz9
9tuh25RbOPmG5j55yYuc/Yr3ejNmzLD9Wxpz56a5Ve6+p2gSxdm+fXs73s+h
9+TEE080P/zwg71OXgQAAADkluuvv962492uvfbasHxF/S6HH364Wbp0aeg2
1TooX7586LrGlKmugfIKN9W4U5/RddddZ7p37x52n+bg1KlTJ3TdyZ/cr6N6
Cuecc46tP6d5UMp19BjN0XGoj0d5h1ui19P2LrroIjuezqE4a9euHXZbNIni
POWUU0znzp3DnnPzzTeHckZnjpT6lAAAAABk37Zt20zTpk1tTQLNy3n55Zdt
zhM5vk21qNu1a2fr17366qu2toDa9hon5tQuULtf23riiSdsX4rq082fPz/0
Oqr9pts0r0n5UuvWrW2thpYtW9p+G+UUzZs3t3NyVFdB9a0XLVpk6+Wp/pvm
PSnfKVWqlGnYsKGZO3euzWFq1aplSpcubdq2bRvqk/Hyer/88outsaDxdaoj
0apVKztXKJFEcd555532tVWjW/W6VUPPqbswZ84cc+ONN9p9UJ6mOnkAAAAA
coPGdDm1DGLVQ1A9aqdGg+pN6+9ofR7aVmSdN/d9Tu1sjYXT4yLHk6mO2+rV
q0PX9+zZY/7444+k9yvR6+m69sXvWqux4nTWJdJ7pD6lyHlOAAAAAHJfrLwI
AAAAAA4GqrOmcV4VK1a0Y+bc9aUBAAAA4GCguTiTJ082U6ZMMePHj096/BoA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACA6D7++GMzefJks3HjxpzYTrrlS5zR5HPsAAAAQDp0797d3HjjjaFL+/bt
fT3/wIED5rHHHjPz5883ixYtMrVr1zYTJ070HUdQ24m0a9cu89RTT6W8HUe6
4swEL7EvX77cDBs2LDsBAjCdO3cO+0zWdQAAkH763u3du7d577337OWTTz7x
9fw5c+aY2267LXRdbeqTTz7ZdxxBbcdtz5495h//+If56KOPUtqOWzrizBSv
sSt36tu3byZDA/D/+fzzz0Ofx4MHDzYXXXRRtkMCAMAz/Q7fsWNHM2TIENOr
Vy97PV8oL/rggw9i3j9+/HhTp04dc8EFF0S9f8OGDaZnz56h6/ouL1u2rO84
gtqOW6NGjcwbb7yR0jYipSPOTPETe8OGDc3o0aMzFRqAKL799lvyIgBAXunf
v7/p0KGDGTdunClSpIhZsmRJtkPyLFFeJA8++KBp0qSJp+21bNnSdOnSJeW4
Ut3Oiy++6DnmVAS1v9kQL/bNmzeb6tWrm6VLl2Y2KAAh5EUAgHyyb98+U7ly
ZfPpp5+arVu3muHDhxea/qKdO3fa8VQVK1Y0TZs2NX369LEX5Rzbt28v8PiR
I0ea1q1bp7z/qW7nm2++MVWqVDFbtmxJKY5EgtrfbPAS+9SpU815551n9u/f
n8HIADjIiwAA+WTGjBl2LFI+to0lUX/Rjh07TLFixex8/HhmzpxpevToYf9e
t25d0vEEsZ1LLrnEjBo1KukYvAhqf7PBT+y1atUygwYNykRYACKQFwEA8km7
du3MVVddle0wkpYoL1LeV6FCBbNq1Srz8ssvm6efftosXLgw7DGq+/zqq6+a
3bt3m23btplu3bqF3a+6Bxpr2K9fvwKXWbNmed6OF+rjUP+Wai7E8sUXX9j5
zKtXrzZ79+41Y8eOtdc1P0z5rfr9Bg4caOfiTJs2rcDzg4gzFanE7zd25VB/
/vOfze+//57OXQIQBXkRACCfVKpUKa/rqCbKi7Rv1apVC/W/rF+/3hxzzDG2
PS7qRypTpoydV+Vc6tevH3p+165dzd///ndz9913276He+65x9aH1v91cepE
J9qOVxr3pdrjsaj/Szmaag5ceOGFthbfpk2b7H233nqrva78748//rBjJHV8
Fy9eHHp+UHEmK5X4k41d7TKNuwOQWeRFAIB8sWLFCtu2VM22fJUoL6pZs2bY
mkZaC/SQQw6xfQ2JzJ0710yaNMn+rT4O533q1KlTilFHp/q2JUuWDOUJ0UyY
MMH8+OOPtm+lfPny5pdffgndpzlU2l/3mEj1PSkHyRXZiH/o0KHm4osvTmkb
APwjLwIA5Au1F5UXaYxZJmgM1OTJk21uEpR4edFvv/1mDjvssLC5RVOmTDGn
nHKKp22rv8Lx8MMPh9rwd9xxR/IBx3HnnXeGrc8TjfpbpFWrVuaBBx4Iu++M
M84wY8aMCV1X35hywFj1G/yu9RSEIOL3ex4pz9R58N1336UYPQA/yIsAAPlC
7ftMrF2j3/+11ub8+fPNokWL7Dg0Z/xZquLlRdOnTzfHHXdc2G333nuvadOm
ja/XUPw33HCD/Vu5kcZ7BU010zS+75VXXvH0eK1nqtzAodyhaNGiNpdwqE/m
nHPOKfBcjSnTOlVHHHFE6oEnKZn4UzmPLrvssgJ5GID0Ii8CAOQL1eeuV69e
2l9nzpw5Yf0gw4YNs+3iIMTLizTerXHjxqHr6v859thj7ePVb/H11197eo23
337b3H///fZv1dCuW7du6oFHUJ109d2tXLky4WM1Dk05hOoTOJQfnHbaaWGP
07F97rnn7N/qY3HT/mcrL0o2/lTOI9Vmr1q1agDRA/CKvAgAkA/WrFlj2+Hp
mivjtmHDBltbzKH5IkH1U8XLizRXxd3/smDBAnPUUUfZvpkRI0bYtT+9uPLK
K22dONH3vPIJp25DUJ588klz4oknenqs+nvOPvvssNvUD3bXXXeFrisHLFGi
hK1Z4OQUbtnMi5KNP5XzaN68efZ8T/eaUPFoPKdybK8GDBiQ1Tp6+RZvrsm3
9y8d8ZIXAUB+0Bx3jatRPavrrrvOzs3X+BxRHeCWLVuaBg0amFtuucXOLXHm
RRQWr732mm0njhs3Li3b1/qwykuUU0TSe9ulS5dAXidWXqTc5/DDDw+bO7Vr
1y77Hf3mm296rjWh/LFcuXKh73+tFVuqVCmzZMmSQOJ3XH/99QnnFjl0rkbm
szVq1Cgwpkz9Le+8846t7xYpm3lREPGLn/Po119/tee76nYnQ2P4Uqlpp5xO
41b9rDGrc091EL1KNUa3TMSbqkceecQ0bNjQfk43b97c/O9//wu7X327Gv/q
3O/un0wk1493kMda0hUveREA5A+1k7XmZ7Q1UNR2VjvKyZUKG/0+r/1TTbp0
0dpIeh03fZe3bt06sHVk4/UXueeqOFT/2U+fgeKMfHyQdSMc6ivS3BkvFI/2
w81d181N7Z1ospkXBRF/MufRCSecELcGejxq37377rtJPVeaNGlifvrpJ9/P
05q07loU8aQao1sm4g2CauWrXzFW/+0zzzxjXnrpJd/bzfXjHeSxlnTFS14E
APlDa3IqN/jyyy8L3KfftCPn7BcmF1xwgR1Tlk6qL6b80qHf6nv06GH/Xrdu
XSCvkahOdz5QjqLzUHUGMvmaqeZFbdu2zcq4n2TPI/UN33TTTUm9ptaZTbbP
WDXemzVrltRztX6t+tK85H+pxOiWqXgjJXM+9enTx/7biVbbXu/Ff/7zH99x
SK4f76COtaQzXvIiAMgfjz/+eGi+SSTNf3DP2S9M9F1WvHhxc+mll6btNfT7
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
eb9+m3Nqsuk3vooVKwZW6yBZtWrVst917jH4QdDv+O46C7rujP1Ip2TzIsWq
46V2w8KFC9MQmXdqb6itpvEv6TBnzhzb9nGoPnsy9cIiZSIvCjJ2/Q5Sp04d
z4/X+CPl97Fy+0SfBw61GdV2TJZi3r59eyAxevlMSme88SR7PmlcW6w2u9bW
qVevXui65o+q5ky0OWa5frwTxRctxmwfb/IiACi81Nei8WGi74FKlSrZtr/6
SCLvl5NOOimUK6gvpVmzZnY8tzMmItP02/sRRxwRNu843yWTF+n9V3+g8iGt
X6jfQtVmTjS/O100Jkf1o4NcT8pN85b0u7lD8xPUL5qqTNSdCzL2K664wtdY
TbXpVM8/lkSfBw61Yy+//PKoY5US0fkZbx0wPzGKl8+kdMYbTzrOJ+VB7how
mp+jcWXR5PrxThRfZIyS7eNNXgQAhZf6Wpw1gzTnVXV8VBPWGZPhvl/jGc47
77zQc/V9ppoKGm+WzPdPEJYtW2b7JVSzqbBIJi9SfSV3f5neF81tVr2ybNG8
Za0nnAk6D73Ub8tFqcReuXJlOybPK83diFc7PdHngZvGenXv3t1XvGpzq68s
3rpWfmL085mUrnizQbVFNSdI649qf2Oti5brxztRfJEx5sLxJi8CgMLLXXNN
9Dube6xY5P2R32HZrt2l8RLKi4KYW5Ir/OZFGt+n90Dj891U18k9XivT/vWv
f5kGDRqk/XX023br1q2z1jeWilRi19ghzbfXb+ZeJZrvlejzIJLq4UXWS4tH
7dfIOSSpxujnMykd8WaLcgTNqYyXV+T68fYy/zDXjjd5EQAgV6lek3ICtREK
C795kdrUTzzxRIExO5pPrbH4Dt2v+c36LVhtH8151nWtDaptqD6vavtpjJeX
mnuJ6DdtjctJp5kzZ5oePXrYv9etW5fW1wpaqrFrnpLOfXctlWzw828vF/6d
5lu8uSbf3r+g4yUvAgDkKtUiqlKlSrbDCFQQ9ej0G6nazM66IPpNVTX1dP3C
Cy80vXv3Nps2bbL3qTauriuPUR+E6lspn1EtqFTot2DFoNpTydDvtsrTNMda
86sjt6P5BFrPRL9xq25Xt27dUoo3aPHiDyJ2jb2rXr16kCEDSIC8CACQq449
9lg777YwSTUv0jyj888/P6ze7oQJE+wYffUNqUatu86eambVrFkzbCyXajw5
OVWytD3NkdZYFr+Up7Vr187ui9ZYVC1q97oqmmddpkwZm3c5F/dal9kWL/6g
Yr/44ovN/fffH3ToAOIgLwIA5KK1a9faNuXw4cML3KccQOPBNO9f/9fa6F7u
ywWp5kUaW/j000+H3eaMwVeNugceeCDsvjPOOMPWwnWsX7/e1mwIYq654ohV
KysWrddYrVq1sDoSp556qh33lw8yEb/myBcvXjzra4cBBxvyIgBALtJ67fHm
V2jNcq0LE21Oe7z7si2VvEj9QapTFYv2efLkyaHryn2KFi1qcyH3Ns4555yk
Xj+S5s0cfvjhvnIsxdi1a9fQdY33U4yqb50PMhG/xkQqnwWQWeRFAIBcpHX7
qlatGvN+rRd41113+b4v25LNi7Seu+oouLn7jdRPpva56is4VMfvtNNOC3uO
1ox87rnn7N9BrEulGuIaV+aFxpwp13XXkFC9Na1TH4vWG8kVfuLXe6scVfUE
/VAur/4o5UYAMou8CACQi7Q2e7x1i7TuRayxS/Huy7Zk8iLlBrfffrttg+sy
evRo8/zzz4et+a6a0FpTyE3rF7rzQ9VcKFGihK25oHa7ap6l6t1337XzwFR7
wMtjlbu5a/NqXUcnRve4Me2P6upqXd9c4SV+5TVac0h1GRYtWmRq167tq868
8t8TTzzR1sgAkFnkRQCAXKM2dsmSJWOuf6H5F8WKFYta/zjefbnAb16k9TzK
lSsXNo/fuYwbNy70OM3719wjtxo1ahRok6u/6J133rH16YKidYyeffbZhI9T
DfHSpUvb/EzUx6V90/qPS5YsKVA/XPOmcikv8hK/ck33ulLDhg2zY++8uuKK
K2wtOwCZR14EAMgFmp/hzGVXfbV4Y6s0fyhyfJiX+3JBEHW6o9Ecn8g+Bndd
Oreg5/IsXbrU1rhzj+GLRfWn1Q+kfi/1CWm8mMY9qu9Lda3dci0vkkTx671V
vQ+H6v6VLVvW07ZHjBhhrrzyypycFwccDMiLAAC5QG1Hp79DfRrxcgc9Ltb8
oXj35YJ05UXZpv6nW265xdNjNefGnbPputaijZSLeZF4jV9atmxpc6lEtP6R
+pVUhxFAdpAXAQByQYsWLezv748++qi9xKP1eGLNH4p3Xy4orHmRaK2pQYMG
Bba9XM2LvNL53Lp164T9P/v377fz6dTXCSB7yIsAALlCaw2tWLEi5v3Lli2z
45VKlSplazK460/Huy+XKC9SnWenhoLm8hcW6jNp3LhxymvGOvI5L5o5c6bp
0aOH/TvRXDetEeueKwYgc2bPnh36PFY9G/IiAAAyo2/fvqZ58+ahS6K+sXyj
OWLx1ljyQzU0VOcg36jWn2onaL7Rtm3bTLdu3WI+VnOz3GtOAcgsrXfg/kyO
XDcbAAAgmyZNmmQeeOABW1f88ccfD6wPKt2WL19uypQpE1Y3sH79+tkOCwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChUVAtZ9Y03btyYE9tJt3yJM5Z8
jx8AAADIJQcOHDCPPfaYmT9/vlm0aJGpXbu2mThxYta2k275Emcs+R4/AAAA
kIvmzJljbrvtttD1YcOGmZNPPjlr24lm165d5qmnngpkW+mMMxO8xK81f3Q7
AAAAgP/f+PHjTZ06dcwFF1xQ4L4NGzaYnj17hq5rvc+yZcv6fo2gthNpz549
5h//+If56KOPUt6WpCvOTPEav/qU+vbtm8nQAAAAgJz34IMPmiZNmiR8XMuW
LU2XLl1Sfr2gttOoUSPzxhtvpLydWIKKM1vixd+wYUMzevTozAYEAAAA5KCd
O3fafoOKFSuapk2bmj59+tjLiy++aLZv3x722JEjR5rWrVvbOSypCGo7itFL
LpesoOLMlkTxb9682VSvXt0sXbo0w5EBAAAAuWfHjh2mWLFidt5JLDNnzjQ9
evSwf69bty7p1wpqO998842pUqWK2bJlS9LbiCeoOLPFa/xTp0415513ntm/
f3+mQgMAAABy0owZM0yFChXMqlWrzMsvv2yefvpps3DhwtD9qvn86quvmt27
d5tt27aZbt26FdiG5vf079/f9OvXr8Bl1qxZnrfj1SWXXGJGjRoV8/4vvvjC
DB482Kxevdrs3bvXjB071l4fMmSI7T/ZunWrGThwoJ2LM23atLDnBhlnsjIZ
f61atcygQYPSuTsAAABAzuvcubOpVq1aKM9Yv369OeaYY2x7XH1IZcqUMUWK
FAld6tev//+0d++xUVRtHMdDRQGhMWkQNApoooKCCSgCIhgDNIohXoMG/kCF
qgiCoEbQBLUlKiCoMV6xAW0UNAQrFRAx3lACiuIlVi4q0SheIn94STCi5Lzv
73kz8870tmd3Z3e68P0kG3Y7s9vToX/M03Oe34m9v7q62l188cVu+vTpdo99
8803Wz60/tVDOdE+n+NLcxxa96fMhZZo/ks1mjIHhgwZ4pYsWeL27dtnx66+
+mp7rfrv77//dv/++6/r3bu327Fjhx1Pcpy5Kvb4Nbd07LHHur/++qvgPxsA
AADQXg0bNszNnDkzfK29QDt06GBzDZls3rzZrVmzxp5rjkPZdjJ37tzCDPa/
tO7rgQceaPV4fX29+/77721upWfPnu7XX38Nj6mHSj9vtOdGNZZqkPYijfGP
GDHC+pEAAACAw9Gff/7pOnbsGOstWrt2rTv11FO93q/5isCcOXPCe/hrrrkm
0XEGtm3b5rp06RLOn7RE8y0yZcoUN3v27NixAQMGuJUrV4avNTemGrBQfUq5
SGP8y5YtcyNHjszrMwAAAIBStWHDBnfcccfFvjZjxgx3ww03ZPU5mr+49NJL
7blqI633KoQbb7wxtm9pW7SfaUNDQ/hatUNZWZnVEgHNyQwaNKjF92/ZsiW/
weYpn/Grx0jv1dyfD9WZqo+//PLL/AcOAAAAlBitd5swYUL4WvM/PXr0cO+8
847NW3z++eden/Pqq6+6WbNm2XNlxY0ZMybxsSozTX1PtbW1Gc/VOjTVEMon
CKjPqV+/frHzKisr3aJFi+y5agnRerLFixe7bt26JTj67OQ6ftWn2rN1+/bt
rrGx0fq89D4fF1xwQbP5KQAAAOBwoF6VaJ3xySefuGOOOcZqkLq6Otvjxsfo
0aMtD0G++OILqymU25CkDz74wHIE9uzZk/Fc1TYDBw6MfU3zYFOnTg1fqwbs
1KmTZRaopti0aVN4TDVhmnVRruPXIzqftnz5cpt38qH9oE455ZRkfgAAAACg
RKj26dy5s+VzB/bv3289+KtXrw4zFDL57rvvXPfu3cM8M+0Ve/TRR7udO3cm
Ot758+e7Pn36eJ2rHImm2Q9Dhw5tNnei+Zb169dbvltU2nVRruP/5ZdfLLs7
oDyGiooKr++5detWqzuz7VXS+apZS3GfJwAAAECivSoB5T9nc2+stVtNz/ft
a8nGJZdc4t1bpPHo54iK5rpFqZZoKu26KN/xByZPnuzuuecer+/5xx9/WF2k
3G5fWme5cOFC20P2+OOPL1jeRiHcdddd7vLLL3djx4511157rXvvvfdix7Ue
VD1zwfHomkYAAAAgLZorUu9MMaRdFyVBa/Gqqqpimd6Z9OrVq80M9KYefvjh
cF4w2Ee2lGh/La1FbG3N5/333++eeOKJIo8KAAAAaJnqFM1lKH+tWN8v37ro
pptuSm2vVM35aA5Hslnfpj1gr7jiCu/zN27cmHV2YaHkcr0feeQR+71qKfdd
vwN33313UsMDAAAA8vbtt9/a/evbb79dlO+nfZ26du2a12doD9ZgL6JiUgbD
c889F87f1NTUeL9XtYX2zfV14MABm2NSHmHacrne2pNYv1faF6spzRW1tU8W
AAAAUGzKydP96+7duwv+vXSvrLxqra+aN2+eZRfkIo26SPvzlpeX27UKHpoD
8nXHHXd459eJepvGjRtn2e5p1xC5XG/1R+karVq1Kvb1jz/+2L3wwgten6F8
Eq3vVJ9VlGrG6urqrMYDAAAAP6+//rplkvk82urHLzVvvvmm3b/u3bs37aF4
S2u+KB/K/FO2oI8VK1a4W265xbLctTewcgzSlMv11rygfq+CPaBE+eeqD6M+
++wzt3bt2hazL5Qxon2MJ02aFPv6s88+684666ysxgMAAAA/L730kt1v+Ty0
N+ihQn+TzyVDOk2lWBep36Zjx44Zz1Nf0TnnnGM1hNx66622L2yacr3e2itY
6wcDylnQvFtA6xDr6+vtd097F7///vvNPuPcc89t1vs2ePBgy6UAAABA+6b8
5uh6q7QePjnSzzzzjJ3r01dfqJ+rrXEqe0AZ4tGH8vOuvPLKZl//6KOPUvk/
8bnOurfXuZpHaUv//v1t/iSg7Lszzjgj4+cnJanrLapfgrWG2otL+9sGlGOv
+i/w9ddfu/PPPz/2fu3XdeSRR9qxwFtvvWV75DbNWgcAAADyUVtba/frugdt
j1Svaa4i+tDaqp9//rnZ17PJzS62ZcuWZbzO2ge4S5culusQWL58ue31o5+t
rq7Ovfvuu7Yfkub59Dq6948yIXRc10zPVfNqLd6ePXusvnr55ZczjjPJ6z1+
/HjXt29fez5nzhzrCwqoxyjan6WfqaysLHZ9lP13wgknhK+11k41otbeFet6
AAAAHG60T+dll13m9cj0d/JSor543a8XsmdKOW4NDQ2J7Ulb7HV0SYz/scce
s7yJtmgdWdO5Ic3fqDbSHNIPP/xg2Q1ak6d7fdUCM2fOtPPWrVtnxzWXsnTp
Urs+yrkYM2aM/as6Qnuoap1etnK93uol0s+sNaqbN2+OHVPf0VVXXRW+1viO
OOIIm1cKKHNh4sSJ9lz5f6oP1Q8naV4PAAAAHHp0X6i6KLpWKSm699S97fbt
211jY6MbPny45Vbkq1h1UZLjf/DBBy1DoS2a69B9/sGDB+215jaGDBli80c7
duywORv17Ozfv9+OP/roo5brJ8HxE088MZyXUT0QrT0uvPBCt3Xr1qzHnuv1
fvLJJ+13a+7cuc2O6XpobV5A/VQ6V7nxgREjRrinn37a/g6hMQT73Eqhrode
ax4rqRoeAAAApeHDDz+0+1HldSdt06ZN1ocS0LxHNlnVrSlWXZTk+NWD5NMn
9OKLL1otpnmR6dOnx3IKVq5c6a677rrwtXK81W/T2nHNh6xevdqea32a1qTl
0peT6/V+7bXXrBbUXE9Tzz//vKusrAxfK3tBvUTBOjrVMj179rS9jlSLtrRm
rxDXQ3NJ+noh/k4AAACAOPVJ6J5Nf7/+9NNPUx3Lrl27rC5SH0bStDZP8wIB
7VdUUVGR9+cWqy5KcvxTpkxx5513nte5mv/45ptvmn1d2W7qoZHff//d9e7d
2/3zzz/WK9P0uJx88slh/rXWmCnvWnWW1gVmI9frrb4f/X61RHXQmWeeGb5W
z5DWuGUjresBAACA/OkeTH0Xqoe2bNli+7DonjmtzAD1ZSg/WnMhhaYeLp/s
tkzS6u/KZ/yjRo2y3rR8KLM6yIhXrp3yu5XxFqw9ix7XGrKzzz47fK/mnzT+
xYsXh+v0fBXqemuNnHqDtAesxqbaKBtpXQ8AAADkT73j0Vyu3bt3uw4dOlhe
WVoGDhzobr/99oJ+D/0Nv6qqql1nxrUl3/GfdNJJtj4uH0EfTUB9R5ofae14
0+z19rjnk+qVbdu2eeXEN3UoXg8AAIDDgXq5tWbttttui329V69esT6WYrv+
+uvd2LFjC/b5yltesGCBPf/xxx8L9n0KJd/xq4dFWWtauwUAAAAc7jTXcO+9
9zZbl6RMLfWEi45pnxWtBdLfvtWHr9faF1TvV2bZU089ZX0v6mtPgtYzqTcj
V8pr05jU065+duUjB7RuUHvH6G/56r+vqalJYsiJKvT4ld+gejiaQQ0AAADg
/7Svi+6Z1dOvdT2PP/64PVc+85IlS9y+ffvsPO2tqdeqYTT/oFxj1TLKI86X
sug0hmg94EtjmjZtmq0N1L6kylwL9pBRT3t5ebl9dvCI7uXZHhRj/OpJOv30
05MeOgAAAHBI0L344MGDwz1X6uvrrU9cc0PKKA6ys0SZYMOGDYv1tyhPWDVU
vvSZyurS3qPZUKbxaaedFuuX6tu3r81xlYJijX/kyJFu1qxZiX4mAAAAcKjQ
fpf33Xdf+DroA1c+3ezZs2PnDhgwwLK9Az/99JPlNSjvOAkaR7Y5ydrLp7q6
Onytua2ysjLLty4FxRi/ctKOOuqonPZTBQAAAA51mhNSRnFLdL/e0NAQvlbt
o/t11ULR9w8aNCix8ShPoHPnzt51ltacaV1ZtFdKuQL9+/dv8Xxlkrcn2Yxf
PUb6/1BuRra0LlI1LQAAAIC4devWWZZCVDBvpHV0qoGUrxB45ZVXXL9+/WLn
V1ZWukWLFtnzpPalVIa4+m18bNy40cYZzULWPppTp06158H8iPKttUdMt27d
EhljUnzGr/WFytZWLkNjY6MbPny4/V/40vu1Tk+1EQAAAID/07zJxIkTbW5C
jxUrVriHHnrIzZ8/346rjtB+QlEzZswI79dFmQudOnWyzAXVRMo7S4JqhR49
elgmWybKy+vatauNRVTPde/e3dXW1rqdO3fGsvK0PrC91UU+49d1jeana+9b
zeX5Uv3bp08fy8kAAAAA8D/aV1L33tF8s+CxatUqO0dZaOo7iho6dGizeQrN
F61fv97y6ZKkfYwWLlzoda5y1jQXpPpO9ZzmRe68806r8ZRrHWiPdZFkGr/6
jJSHHlDGRUVFhffnjxo1yjK+AQAAAGRH/T1N5xeiuXRRhcg32LVrl+XcRdfx
tUU9N9Hx6bX2XYpqr3WR+Iw/MHnyZKulfNTV1bnRo0fH8gMBAAAAlA7NQY0f
Pz6xz2vPdZEvzSdVVVV51TnaB0rr7fbu3VuEkQEAAAAolEmTJrmlS5cm8lml
Xhe98cYbbsGCBfZcuX1tOXjwoBs3bpzbsGFDMYYGAAAAoIC0lmzChAmJ7Bur
PXyUcVCKlGuhHiH1G/3222+upqamzfOnTZsW9ooBAAAAKH0HDhxodY8lX2vW
rLE9apWfN2/evETqrGL56quvXHl5eSwf46KLLmr1fPVmRfedAgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAufsPOosPgQ==
    "], {{0, 391}, {838, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{838, 391},
  PlotRange->{{0, 838}, {0, 
   391}}]], "Input",ExpressionUUID->"97a09d09-fd4e-48d0-806c-e21dc4b55dbc"]], \
"Text",
 CellChangeTimes->{
  3.72735991766074*^9},ExpressionUUID->"95ec4e80-5229-4b52-ad5a-897a3475c486"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQe0HMWVv0EIwYJBEtHkYNg9mD8YdllAgACThck65CRASIi8AgMCm5wz
GJFzTibnvGQwQWCCiSIHkXOQoP58ZddsT7/uquowb+ZJv++cAb2Z7upbt27d
qlup59t2tw2G9Zpsssn2mPqX/2ywzd6/Hzlym1GD+/3yx4a77jFi+K7bDx20
657bD99+5NLbTsFlk0822fK//KP3L/82QgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC9FQ++siYPn2Kf/73f9st
uRBCCCGEEELEMW6cMbxa4D//05ihQ8OflVf+5/X33ttuyYUQwnzE2I0QPZjH
H3/8l+Z1qFlhhRXMcsstZ3beeWezzz77mN12280MGzbMnHnmmebrr79ut5hC
eDnqqKPMIossYjbYYIN2i1Kae3/p21IPZ5111rbWuU6Ro7t58cUXzcUXX+y9
Bt84YsSI8g9xcc+BBza++uSTT+xzR48ebR566KHm66+6qmPinrrt4oYbbjDL
LLOMmXPOOWuQTsQQY+OdyKTqk5K0u+yeffZZs9FGG5lTTz3V9hV/+umnbnt2
u/MuJk4GDx5s5p577qbvfvjhB3PGGWeYxRZbzNpdJ3Dbbbe1WwTRoRx66KFm
lVVWabcYlXj++ecNrxpud9veKXJ0J4zzTDXVVOb777/P/P3SSy81Cy20kHnl
lVfKPyQV9zz66KPmlFNOMR988IF57733zPrrr2/WW289M378+H9e30FxD9Rt
F/fdd5+Zeuqpo66V769OyMY7mUnRJyVpd9nRD3z44YfNCy+8YFZffXXz7bff
dtuz2513MXEyZMgQs8ACC2T+dvLJJ9sxuU7wNzvttFO7RRAdyumnn97j4x76
v53QtneKHN3JF198Yf7+979n/vbcc8+ZzTff3Hz55ZfVHpKKe9Zcc03bh3Dc
c889Vu8333zzP7/osLinbrtAr7Fxj3x/dXw23ulMij4pSTvLDp1PPvnk3Rrr
JOnJdis6F1/cg81PP/30Zr/99utmqZr56quvtCZC5KK4Z+KTo1PA9/z888/V
E0rFPawZ2X///Rs/u7jnpptu+ucXinss8v1CPql9fPzxx1b3EyZMaLcoQtSG
L+6Btdde2/zmN79p+u7uu++2a9KPOeaYX5rnq6Kf5buPedTLLrvMruW84oor
7P4iYH0va0p79epl14XwGTNmjP2Nusj1Z511ljnyyCPNI488EiXHk08+aQ4+
+GCz++6727WqV199tU2DD2v88K9u3f2VV17Z5X7fc7PSJi+nnXZa5lxtnk5Y
73/gL32kAw44wI41uzSq5Nun55A8eSDnQQcdZEaOHGk+++wzO0fInpvLL7+8
aR2w0wv7x+jLAGPb9P2S/b8YGcb90ock1jnnnHPMLbfcYvWSFfeUyUuezkNp
hvSKzWK7yE2a6fGzZNt+++2327zxcWubf/zxR7v2lO+uv/76oDwxeckiq49R
xd58MgJjeUcffbQ56aSTzIknnmhtCIrYS4x8ec9hHe8hhxxin5Oun3llVrSO
WzL29yTZc8897Vo6ytlSIO4pYi95hHRYpu/ps3kX97DH6dxzz7VxIL426TN8
vh/y7KoOH1y2/kCWLyhizyFfkkeePnw2TrxNfeCe119/3Zx//vl2nPONN97w
phmj4xi7jKm7Wbbns61W+vEs6qh/nVZ2TseUCbrHb6Jv9oWH7Lho/Svqm31l
X1f/q2wd9N1Xtt+cp5+69RHqo8TIUpdPbjWhuIezD5jndDZ+3HHHma222qox
BsoaBPIYwnffM888Y89VcODnBg0aZP9Nu0i9mmKKKcw777xjP04W6viFF15o
/43ullpqKXPdddcFZaGsaGd79+5tfdKHH35ov99ll13MjjvuaMud9JB16aWX
tn34JL7n+tImNojVCeMsxA/zzjuvlee1116z/uell14qnW+fnkPy5IGcJ5xw
gs0vcrmyOeKII8yKK67YsOlPP/3UHH/88TYP3APvvvuulYc8xsrw4IMP2n2u
2AGgl5VWWqlL3FM2L3k696UZ0usll1xitt5668aYGeukyQPxW/Ie17az32Pv
vfc2U045pe0fAs887LDDzDrrrGPlCuUxlJc8svoYZe0tJOO1115r97c738lc
B+u/INZeYuTzPQd7Pfvss7vk2VdmRep4g4y4B53QTtKOcC4H5d6gQNxDme27
775WHrcmhLTpM7Bv6NVXXw2mEdJh0bgnZPPYNfLSN3U+gn7Cqquu2vjb5/t9
dlWHDy5bf/J8Qaw9h3xJHj595Nk4fRz293IPOpphhhlsOTGWRN+5qo5j/FiM
b0nbXsi2WuXH86ha/zqx7NyzOdOAZ7PHivoXY8dF6l9R3xwq+zrqflk78N1X
tt/s00+d+ojpo4RkqcsndwehuIc4ALt7++237ZhCnz59zMsvv9z4/emnnzb9
+vXzrgUJ3cd4H+eFNPb0/kIyTn7iiSesvtJsueWWZuONN278Tf9htdVWC2f6
F8gP+brzzjsb31H2xHjJ8xopF2K/Is/NS5tzxxwxusSH0mYwxuLSrZJvn57L
li3QppHf7777run7hRde2PZrHOwLT/pLoC45fxmS4ZtvvrFncFxzzTVNz0mf
a1AlL3k696XJmF6eXvF9rBV98803m56z1157WR/hSLft+HzuuzfR76UN4LrY
POblxUdW/7asvflk/Pzzz80ss8xiz/Zy4BeT7UvIXmLkY3146Dnvv/9+U55j
yiymjjeRE/cwxkY/j/aD8doGBde5Uffo+9xxxx2N7+jz0U+JIVTGReKeGP05
n5HeN7Xyyivb+WNHlu+Psf06fHCZ+uPzsTH2HGoLs4jRR9rGAV+KjTjQPf33
2DRjdBzyYzG+JWl7sf60bj8eomz96+SyA7fODX/tiLHjmPSL+ubYsq9a98va
QV7dLdsfCemnLn3EpBOSpU6b6w5CcQ9nDCE74K9ogzjfiDkQPrTV5AX7zCN0
H3pnDXffvn3tuCd2l1xPmhf3ADplTIJ5cnzoEkssEZVvxi54fnKMlf7H7LPP
3nQd59duttlmhZ6bl/b8888frROgb0Acxtq7OvLt03PZsnVyZq0BZk5z0UUX
7aKXpL9EL85fhmRgDpV/Mw6c5Nhjj22Ke6rmJUvnvjTpu+bp9aKLLmrUnySk
g69xPiGrX8mYwyabbNL4mzUHRfLos5888vq3ZezNJ6P7v68vGbKXGPk4Cyz0
nHSeY8ospo43EVjnho8jPdZIWErs72GtHOPLjpjxxCS+Mi4S98ToL89n/PnP
fza/+93vGn9n+f4Y26/DB5etP3m+IMaeQ21hFjH6yCo/xqVYk+JYcskl7VxM
nToGnx+DkG9Jyh7rT+v24zGUqX+dXnZZcU+MHcekX9Q3x5Z91bpf1g7y6m7Z
/khIP3XpIyadkCx12lx3EIp7fvvb39o5aaB/2b9/f1uW6Y+PmPuIJ1nrt+mm
m1pdJ2P+dNvn1jrgKwcOHGjOO+88O4+G7ovGPaE+FXFP0mfHPDcm7Rid5O39
rZLvPD2XLVsnZ1YfhjXWvHchVi8hGVgPkTWvlI57quYlS+ehNPP0yvjlTDPN
1CU91r4mx7uz2jbmzRlDYa75scces+u5i+SxyJlZjiw5ytqbT0ZXlsn2NE1s
HfXJF/OcdJ5jyqxITGZJxT2sb0vPdVBW7Gf518MKxz2sp2GMm7aJMQLWVMcS
KuMicU+M/vJ8xuGHH97kM7J8f4zt1+GDy9QfyPMFsTbjawuziNFHVvlRNyhz
/AvrhxdffPHGGpa6dAw+PxbjW5Kyx/rTuv14DGXqX6eXXdW4x3dNUd8cW/Z1
1P2ydpB1X9n+SEg/dekjJp2QLHXaXHfgi3vuuusu66/+8Y9/2L/xV+wxTY+3
Y5O+MgzdR7yZjCO5bp555jFvvfWW/Zu2jzXeDvaTcO90001nbrzxxsb32Jvz
mW5+O4+ycU/Mc2PSjtFllu+ukm+fnsuWrZMzqw9D3U/6C+L8tF6oT04vIRkY
h+H+sWPHNv3OuFoy7qmal6z20pcm4xp5emXPK/021uglYU9gcpwjr1/Jelry
lx4jLWs/IdJyVLE3n4xPPfWUfU66b5CUP2QvMfK59eG+56TzHFNmVeIeV1/+
+Mc/Nn5mTO3f/u3fzIABA/75Rcnz3Dgbm/3FReZ6Ysq4SNwTo788n8G7YdNj
XmnfH2P7dfjgMvXH52Nj7DnUFmYRo4+s8sOn8CzqCOuUkvuL69KxI8uPxfqW
9JkvMf60bj8eS9H61+lllxX3xNhxTPrEw0V8c2zZV637Ze0gr+5ecMEFpfoj
If3UpY+YdEKy1O0vWg3vpsiaZ2J97IILLmjHYRy0zewhRx9JaIt85Re6j+9H
jRrV9Bt79pwOXd1z4xlcj/75LrnPlP1RjHtwXgT7/nzQd07PMxLfzjHHHE3X
7bHHHk3rj2Oem5c2dSBWJ8D6SMaPkmtAq+Tbp+eyZQuuD5M8awnfSJvG+xkd
zNPQFiVlZ/+UG9+NkYHzBTkzIQlrapdddtnG31XykqXzUJrs58vTK2XCGD4+
0YEM9AOS37m1r+nzUWhP5ptvvi7nEZW1nxBpOarYW0hG1tDuuuuuTb9xrZM/
ZC+x8oWe4/LMWB3ElFlMHW8iEffgz1jT7PZ6g3s3Y0NX/4p79viv/7L7hmNh
z+jMM89s1xvEEqPDPPvMIkZ/WT6Ddpd1IkmfkeX7Y2y/Dh9cpv74fGyMPYfa
wixi9JG2cdhhhx2svbA2Hxtz6yhi0yxSB7L8WKxvSdperD+t24/HUrT+dXrZ
uf01yT3PMXYcm34R3xxb9lXrflk7yKu7+LCy/RGffurSR2w6Plnq9hetgrEU
3oXLXjz8A+dQMLeB38GGWWdLjJeGst9iiy3sGibGabARxm5D+O7j7GPOkuDs
P9Z/sF8qvY+MNcKMBbJmkrMuKSvmqlhHyT4pzgKi78BZsJwRk+xTpOFd4fSf
p5lmGrsel3MvKV/GWvlu+PDhdo8X5+4xFzbbbLPZ+AdCz2XNbV7a0047rc2D
Gzfw6eTWW281a6yxhk2H+SZ3nnaVfIf0XLZsXR+GfZacT+j2aZOHNIxTUZYP
PPCAHQdhLyD3MjeEzkMyMO5EHvie+UjqFedOMC+57bbbNsYsyuQlT+ch/YT0
SpvB/kDmghmb22677exadsf9999v1l13XfvcDTfc0K4FcdDGzDXXXE3tTkie
mLxkkSVHFXsLyUhbts0221i/w9kw+MxknxdC9hIjn+855Bl/Tp6Jn91Zeb4y
8/mPdB1vkFrnRj1hTRdrVOijLb/88rZNafTT/hX3bPCLf3bnXcVAG8P71dNr
QX2EdEhfNc8+8wjZPOXCfgj3rgCuwU6yfEba94PProqUT146ZeoPhHxByJ5j
2sIsfPrIs3HqAPqg38EaFebVOE/NxaJ16Riy/FhM3c3ySSHbapUfj6FM/evU
suN7fuc69jrE2jH+KtY2ivrmUNnXUffL2oHvvrJ9q1AbWZc+QunEyFKnv+hU
mL9Kn/9Q9j43R8uYBWMIeT6D2D99PgpnZ7jz6oFz84vsQy1Lnc8to8syz4/V
c1F5kmtWqD/ujGmfHIxTOVn4d3IsK0YGfnfPYTyFa7PW4JS1Ux/pNIvolbwW
fQ9m6F3Zrchjmqr27pORWNUnf4y9xMgXek6e3GXKrAsZ5xqQB85/op3pIte/
4p7xv/QHWcsSC3pIj7kVubduXxqjvxifkeX7Xfp12H5d6cT4Ap89x/qSPGLz
wTm1a621VtP8HeXNHAJnhZVJM0SeHytrd1XrZlk/7qNK/evksssixi/HUtQ3
1+aXTX12EHNf2fII6acufcSkEyNLq/sjQrSbvLX6Qoh/ETjPrQv/invG/NKH
Co0Lsoea+SPgPDg3JixEHqwhS+8ZdLC+Pb3WX+TT3fVPZSeEEO2DcVrW6xD3
cBZ7kbXQQkwylIx7Lk69OywL3nfDOlzOdioyNyQmXZhjY84g+b4ZxurZn5DX
pxbZdHf9U9kJIUT74PwL9vPwXnXeJ5pcryCE+Bcl454fE32bPFg/xFo59kew
Z0KIGFjLwlwF+7dYy0+fXetTitOO+qeyE0IIIUTH4uKegQON4cyf0If3H5Y4
x1oIIYQQQggh2oaLe4p+FPcIIYQQQgghegqcj8NZR0U/OitECCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghRJt48cUXzcUXX1xbevfee69ZYYUVzKyzzmrf
JdtdHHXUUWaRRRYxG2ywQbc9sxPYZ599zIgRI9otRmFaaSd127QohvQvhBBC
iE5k2LBhZqqppjLff/99bWk+//zz9t2a3Rn3wKGHHmpWWWWVbn1mO7n00kvN
QgstZF555ZV2i1KKVtlJK2xaZHPbbbd1+W5i1X9WXoUQQgjRc+Ddw7wPs04+
+OCDtsQ9p59++iQT9zz33HNm8803N19++WW7RSlNq+ykFTYtstlpp526fDex
6j8rr0IIIYSYtFHc03q++uor+x7pnky77ETUAzY455xztluMbmFSyqsQQghR
lYcffthcdtlldt37FVdcYc4880z7/ZNPPmkOPvhgs9tuu9m2FW6++Waz//77
20/o/jxcurvvvrv56aefzNVXX23vOe200xrrT1iHf8ghh9hnu+9uv/12c845
59iPW6P/448/mjPOOMN+d/311zeecffdd5vRo0ebY445xlx11VWN7/P6s3nX
l8kfjBs3zsY6yHXLLbfYvGXFPb7n5pF3T4xeQ2k89NBD5sADDzQHHHCAna9x
9ye55557zIknnmjvff311835559v9ttvP/PGG29kltuECROs7s466yxz5JFH
mkceeSQqn0XKO02ozMaMGWNOOeUUW0bk79tvv236PW0nsXUBmE84+uijzUkn
nWT19Nlnn9nvs3QTkqdImUJeuRa14Rg7KPos0jzooIPMyJEjrU5OPvlku/ft
8ssvt3mLzUtIz+zPWm655UyvXr2sTvmg37I+JWS/WWXEtXx++OEHa0PcT16u
vPLK6HzGlH1eXovoUQghhJhUeOaZZ8zOO+/c+Jv+3qBBg+y/P/30U3P88cfb
/t/HH39sv3v33Xft9fPOO2/w/jzon5x66qmmd+/etl/x4Ycf2u932WUX2ycC
+pZnn312U9/zvffeM3vvvbeZcsop7VoqYF7hsMMOM+uss4557bXX7HfHHXec
2WqrrRpzDqwBoc138qXjHt/1ZfL34IMP2n3x77zzjv0buVZaaaUucY/vuXn4
7onRaygNypm+KOVLHxzZ0ddLL71kf6dfNXjwYHsv6c8wwwzmhRdesLEdcU9W
uRETXXjhhfbf9NeWWmopc91113nzCeh63333tflxa5N4Ln3X9ddf37z66quZ
94XK7JJLLjFbb7217c8C8lNexKrJe5J5iKkLcO2115plllmm0Qe/6aabzJpr
rmn/naWbkDyxZQp55VrGhkN2UOZZpHnCCSfYvGATLn484ogjzIorrtgUx4Xq
hk/Pn3zyiY1Jp5hiClsH+fCssj4lZL++Mtpxxx2t/riPdJdeemkb58XkM6bs
8/Iaq0chhBBiUuLcc881G220kRk/fnzju+RYMPvSk309oM/h+nqh+/N4++23
bbp33nln4zv6f5x75nj//fe79BFp06effno7zumgL0P/Cph/6NOnj3n55Zcb
vz/99NOmX79+tu1P92dD1xfN3zfffGPmnntuc8011zR9nz7XIPTcLGLuCek1
Jg1iDPqBjz/+eCNNB3mjH+dYeeWVbWySJF1uW265pdl4440bvzNGv9pqq2Xm
Mc13331nY6s77rij8R3PJw7Jw1dmlD/28+abbzbds9dee9n+oSMrPg7VBfaO
zDLLLOaGG25o/E6/NRljpHUTI09MXfGVK/MWZeponh1UeRaxBXmhXJMsvPDC
dm4plD42GqPnJ554wsYLacr4lBj7zSujySef3Hz00UeN74hZhg4dGpVPX7rJ
ss/LaxkfI4QQQkzM0LazNrxv3772nGX6LW7cGRg/TPf1GOt0fb3Q/Xm4dBlv
TaY7//zzN8mWtSaNMdRNNtmk8TdrTxz0V+gDcJ4Y46p8WIdFOvR50mnGXF8k
f6wp4V7GYZMce+yxTXFP6LlZxNwT0mtMGvRN6a+xRicN/VPWzDiWXHJJOzae
JKvc6Gc9++yzdu0P/cglllgiV4dp9txzTzu/4wiNV/vK7KKLLrL9vjTog76v
6w9m5SFUFzhTi9+TcWKWbMl0Y+SJqSu+cmXdU5k6mmcHVZ7l4p7081nLteii
iwbTx0Zj9JwXC5TxKRCy37wymn322Zuu42z3zTbbLCqfvnSTZZ+X1zI+Rggh
hJjYYfyUNeObbrqp7Wslx01Dfb3Q/XnEpJvXR2EtDeOYrAN67LHH7H4TB/FF
//79bb8q/clKM3R90fyxHiZrPDsd98Q8N03MPSG9xqRB33TqqafOzd/AgQOt
7lnPt/jiizfWGjnSOqa/yD3nnXeevZb+WJG4h/VszDvQzyWuZN9DiLwyY6x+
pplm6nI9+x6Q2Z1BVybucWX/+eef58qVTjdGnpi6EirXMnU0zw6qPCsv7mEv
Ee9Likk/Rs/pWMCt/SrjU2LsN6aMgLjHxVd11GdfXsv4GCGEEGJihvHm5Lgp
8xTzzDOPeeutt+zfjDOm2136Ha7dDd2fR5W4B1jbz7h/elyW/gp7fNPzLaRB
e59OM3R90fwx3k36Y8eObfoeWZNxT+i5WcTcE9JrTBq+uAd9ow/6fqzxytpb
n9Qxn+mmm87ceOONjd/pE7t+o1tDFWL11Ve35wfE7E3wlRn72Okjsh4xCfvi
Q3ONobpA35nf03FZUrfpdGPkiakrvnJljL9MHc2zgyrPyot7iJFcfBSy0Rg9
Ewuw58XBviIo6lNi7bdM3FNHffbltYyPEUIIISZm6F+NGjWq6Tv2rbu2knkL
+j5uPzOwRt2NzYbuz4O4IL3egjFu+kgOt7ad8eM09Dfnm2++LmdMsR6FMwSQ
Kwl9Adp6l6abowhdXyZ/a6+9tt2rnYQ9D8suu2y0nFnE3BPSa0wa7AFgfiVr
D8AOO+xg91izd4B9/ck91I5kudE3Te6HB/ZkM0/EGVWckxADz5x55pntmp0Q
vjLjmZx/RWzkIN/0eZPfpe0EQnUB1ltvPbPrrrt2kcfpNm3TMfLE1BVfubK3
vUwdzbODKs9ycU/yzDHiSWKLRx99NJi+02NIz8QJyfJzaRX1KbH2m1dGc8wx
R9Mz9thjj8ZeoTrqsy+vofTR9xprrNF0nocQQggxMcNZspwlxTmrnD/L/uD0
nmfGP1n//sADD5gLLrjA7hunnWWMlr0XofvT3HfffTY2mGaaaey+Dc63pY83
YMAAM+2005oRI0bYvbv0bbiGmMGd1eagDzrXXHM17Rl20MfaYost7NoZxmnp
iz311FPm/vvvN+uuu65Nc8MNN7TrWXzXx+onDetvuId07rrrLtvPYC8z62i2
3Xbbxti+77l5+O6J0Svj7r40br31VtsXIg3GpdPn7tJXIi36XayhYZyZ861c
PxYdJ8uNswCGDBli93qwN5tzjZ9//nmz0EIL2XOy3BlaIeinLbbYYl3WD2YR
KjNshjMDWAfEnNV2221n92048uwEfHWBswnoT2+zzTZ2XJ8zxuhzuv58WjfO
pn3yxJapzzbK2HDIDso+y8U9nE3BuczMXXAOG8+LSd/h07ODckI/7DHi7Ok8
/TuyfAqxTch+fWXEd8OHD7e2wZnUCyywgJltttls/BPKZ5GyT+c1Ro+MJRCX
5Z2LKIQQQkxsuHVKjNszppnXr+Q6xvjdtfybvkfs/a0g/c6VNKznSJ+TVfT6
KvkjPXeWNWOypJ21vqaonGXvqZoG5yuvtdZaTXMgvOuE/hPnvPngfC/OuU7e
l3Vugu/+9Lh1HrFlRv6x46JnW+XVhSTEtmXKtIw8Wekkn93KOlr0Wcl1bsQX
rn7Epp8mpGfmd3xn/6XJ8ylV7TdEHfXZl9c60hdCCCGEmFRgTU96P5VjwQUX
7LJHpSqcYcCcAPAezPT4vOh55O3vEUIIIYQQolNgfJ75nuS7dJjnYD9HXjxU
hYMOOsiuB2L/AecoiJ4NczuHH364jXtYxxraXySEEEIIIUS7YA0W8zDs/WYP
CvFIq9bPsOaI/S7sqWCfhejZ8B5U9vPcfPPN9r2+yXVjQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhOj5fPnll+azzz5r+m78+PFtkkYIIYQQQggh6uH77783++23n9l4
443NoYceag4//HCz++67myeffNJcd9115qSTTmq3iKIFHHXUUWaRRRYxG2yw
QW1pvvjii+biiy+uLT0f9957r1lhhRXMrLPOar7++utueaboHvbZZx8zYsSI
lqXfCtvvRIrosTvrrpi46Um+uZWyTgx16vHHHzdDhw61OlpuueXMzjvvbP3K
brvtZoYNG2bOPPPMwnq74YYbzDLLLGPmnHNO73Ux+utEX96d9h96Vh1t6cRg
x0leffVVs+iii9rY5qeffmr67bjjjjMzzjijOfbYY9skXXFuu+22dovQoyDO
XWWVVWpLDz841VRT2Vi6O3j++efNZJNN1vFtaxLZqJ9LL73ULLTQQuaVV15p
+r5uvdVt+51Gnh7z6O66K+qnk3xLT/LNrZJ1YqpTgwcPNnPPPXfTdz/88IM5
44wzzGKLLWb7xkW47777zNRTT+29JlZ/nejLu9P+855VtA3II68cOsnfxEKc
s9RSS5nhw4dn/v7zzz+b5ZdfvkfFPTvttFO7RehRnH766bX6iy+++ML8/e9/
ry29EB988EGPaVsdstF8nnvuObP55pvb9bZp6tZb3bbfSfj0mEd3111RP53k
W3qSb26VrBNTnRoyZIhZYIEFMn87+eST7dxNEf3ho0JxT6z+OtGXd6f9Zz2r
TBuQR145dJK/ieUvf/mL1dXLL7+ce82FF17YY+Ker776KjhvKprpRH9RhJ7U
toJs1A/6Ybwl6/u69dbTbd9Hnh7FxEun+Zae5Jt7kqztwhf3oLfpp5/e7peI
JSbuiaUTfXm7455WtwGd5m9iWWONNcxcc83lvQZ9Xn311Y2/x4wZY0455RRr
Z6eddpr59ttvG7+xH+jggw+2e4OYS+I+1n5yXdF53rvvvtuMHj3aHHPMMeaq
q65q+u3hhx82l112mV1veMUVV9hnsMaRtae9evWy8vFB1iQ+2UNkPTNW3jwe
eughc9BBB5mRI0fasyQYM2Gt6uWXX9605tDplfW02BrcfPPNZv/997efInKM
GzfO5v+cc84xt9xyi9VD2l+UyQswz33IIYdYOSnvLHs466yz7If5ceoo+uRZ
V155ZSnd5PmWvDxUkaloumnb99nohAkT7HOR48gjjzSPPPJIF30ceOCB5oAD
DrDjNy7tELG2U0fdbZVu66rbMbZf1kfE6K9KWdShR58NpetuEsb5jj76aLsW
+sQTT2w696asvmLrN/jqRqhehOpVDFXqvMOnQ6jarvrqiE9HrfI7kOWbQ88L
tbM+Qvf6dJyWtUibC1nl66tTdfWjivaTquCLe2Dttdc2v/nNb6Llc3HPJ598
Ys4991xz6qmnWn/m6r9PfzG+HKr0+ar6jry+iU+msmWWflaW7sq2K1lpxbTJ
eWVft10WZZZZZrHr3GK55JJLzNZbb23tAV544QW7nwobBOo6ttu7d29z/fXX
mw8//NB+v8suu9j2LRb2FW211VaNWJW5NHQHzzzzjN1X56C8Bw0aZOsOfmmK
KaYw77zzjv04fxUju4+8Z8bI6+Pjjz82J5xwgtUX4yRO3iOOOMKsuOKKDRv7
9NNPzfHHH2/tmnvg3XfftTLNO++80XI8+OCDNs/oBl577TWz0korNfmLsnkB
5D/77LMb9c9nDzvuuKOt9+SRZy299NK2z1NUN1m+xZeHKjKVTdfZvs9GySNz
q8DzqZecKZLUB/1CyhsZKTvy/dJLL3nLJNZ26qi7rdJtHXU7xvar+IgY/dVR
FlX06LOhdN11XHvttXb/seun33TTTWbNNdesrK/Y+g2+uhGqF6F6FaJqnQ/p
MEaPVX2LT0et8juQ5Zt9zwu1sz5C94Z0nJY1tq5CXvnm1am6+lFl+klVCMU9
nH0w+eSTN+wu1Jcg7iGPxNSuvtMPXnXVVe3fefqL8eVQxT9BVd+RZf8+maqU
WfpZWbor265kpRVqk/PKvhV2WQTkmW666WzMFgPyMY/55ptvNn2/11572fw5
3n77baufO++8s/EdZc15GzG8/vrrpk+fPk1r755++mnTr18/KzPjAhtttFHT
2douXnziiSdsmZaVPQ/fM0PyhqDuo6/vvvuu6fuFF17Y+gMH+9KSPhjwt84H
h+T45ptv7J7Ea665puk5yf2AVfMC77//flP9yLMH/ONHH33U+I66h98sqpt0
fY/JQxmZqqSbtP08G91yyy3teYoOxg5XW221pmsYU5xyyint+TrueTGEbMdR
te760qiq2yp1O8b2q/oIX96T+qtaFlX16LOhdN1lTTdjY5y95KDdpJ2qQ1+x
vi9UN3x5iqlXedRR5306hDrb1bw6Ank6aqXfyer3+Z7na2dD+O6N0XGWrDF1
NVS+6TpVV3lX6SeVJRT30HdGZmSPqTuu/qf3n6y88sp2LhjS+ovx5VCHf6ri
O5wMRcq+Spll2W9ad1C2P5aVVp6/8ZU983N122VRiHn+/d//PXgdOr3ooous
3Gk4L4KydLZM3Id+3nvvvcY1xMjzzz9/lEzEleiSdIk3+Zx//vk2TXSPLKwp
7Nu3rz23ED262DmvHGJl9+U/75kheUO4uu/SczAXyTl7DqfXpA9Gr84Hh+Rg
zpF/E6cnYe+W8xdV8+J0lawfefYw++yzN93HWYubbbZZYd2knxeThzIyVUk3
afu+vgl2+Oyzz9p5Z3zuEkss0UUf+CfmpIsQsp30dWXrri+NqrqtUrdjbL+q
j/DlPam/qmVRVY8+G0rXJc7qcf2YNHXoK9b3ga9uhOpFqF7lUUed9+kQ6mxX
fb7Fp6NW+Z28dT55z/O1szHPyrs3RsdZssbU1VD5ptOtq7yr9JPKEop71ltv
vUbeYn1RVv3/85//bH73u9/Zf6f1F+PLoQ7/BGV9R5bsIZnQSxX7T9uvz6aL
9sey0srzN76yZy1c3XZZlL333tuuz0vGeWmoz6zFI9adaaaZuvzOur1kzB7b
rueB/fbv39/qIv1xMMbCushNN93U2osbW0mXg5t3i5XdR94zY+T1kVf3WVPN
eeyOkF5DcjBfmzW2mvQXVfMCeXFPyB6oZ5tssklh3aSfF5OHMjLVlW6ejeJb
Bw4caM477zw7H43vyOp/lNkHWrSvXbbuFkmjqG6r1O0Y26/DR8Tkve6yKKpH
nw2l65LT2+eff97l2jr0Fev7QnXDl6eYepVHHXXep0Oos13NqyOQp6NW+p2s
vlLoeXntbAx598bouGzcEyrfdLp1lXeVflJZQnHPb3/7W7POOutEy5dX/3l/
ZF77HuPLoQ7/VMV3ZMkeI1PZMisa9xTtj8XEPc7fhMq+brssCnV1jjnmsOWR
xwUXXGDn5W6//XabR+YZk7CHr8x4Zh733HOPjcXS8Tz6Rm/EzMmxFa6bZ555
zFtvvWXLgfWGDtaPQ6zsefieGZI3RF7dxyaS9kB8ntYrPsDpNSQHcTb3jx07
tul31lw6f1E1L9AdcU9SN+nnxeShjEx1pZtlo6TBmtMbb7yx8T1+wflYt76k
bP8jZDuOdsU9MbqtUrdjbL+qj4jNe91lUVSPReIe1mLzN/th0+mxl7iqvmLq
d0zdyMtTbL3Ko44679MhadTZrubVEcjSUav9TtqeQs/bddddc9vZEL42OkbH
Wf26mLoaKt90unWVd5V+Ull8cc9dd91l1zb94x//iJIP8uo/79jMa99jfDlU
9edVfUeW7CGZqpRZu+KeLH/jK3vmfeq2yzLccccdZrbZZsssR+Rjbx9w/gPr
4igbB/bKfr7kd9hjel0U8Sx5i4F5RfaoYQtJ0CnP4/tRo0Y1/cb7tNAfZcmz
3f5Cl0as7Hn4nhmSN4Sr+8mzMPC31LlHH3208R3jG7Q9yf2krMF04yIxcnDe
CvuGk7DWctlll41OI4RbP0pMD3n2QLydZI899mhaSwsxunHPc2Uek4cyMlVJ
N2n7WTZKm8l3ybJl/+riiy9ubZezUoA1sqyzL3o2Zch2HFXrri+NqrqtWrdD
tl/VR/jyntRf1bKoqkefDaXrLrB2hf5oEtL/8ccfK+srpn7H1I28PMXWqzzq
qvN5OiSNOtvVvDoCWTpqtd9J++bQ8xZccMHcdjaEr42O0XFaVoitq77yTdep
usq7Sj8JqF+c5xu7xx94F0xWzMD+L8qOeRFHTN3Jqv/EBKyDSrfvSZ8U8uVQ
1Z9X9R1J2Z1NhWQKlVmRZyW/S+qubH8sK608f+Mre847KJvHunn11VftXjLi
bM6n47w+ZOYMuuSZoqyHY/8V81js79tuu+3sukcH79/FJqeZZhqz/vrr2zMw
Kc8BAwaYaaed1qYfE9ehgy222MKudyDeRldPPfWU/Y3zTjkPgzPwOA+PPYTJ
fVHsreM5rBtMnjsYkt1H6Jk+eUO4us9ZGpwrSOzNWTC33nprl2s5S5H8PfDA
A3Yejn1w3Mv4KHNyITmY3yMffM/4DHbI3jXGabbddlvrc6rk5f7777dtAOWP
H0K+PHvgO96Xi9ycrcg4EvE39S1WNzxv3XXXtWltuOGG5rHHHguWh89GQzKV
TTdt+2kbpY4xlsZ6V/YbcqYN71/mPcucKYMeyDPtFOkzDpN1frGPkO3UUXdb
pVtHlbodY/tVfEQR/VUpiyp69NlQuu5yRhLQzm2zzTZ2/I9zqmgXXJ+kir4g
xveF6gbPzstTTL0KUUed9+kwRo9VfIuv3Fvpd7J8c+h52LWvnfURaqN9Os5r
RyBUVyGvfPPqVF3lXaWfxHle9HXp+4VgTHzYsGFmhhlmsPEv53GRV+IA4kD2
vTDvlSbk07GvPffcs3FuMrrg+mT7nqW/GF8eo2cfVX1Hnk35ZAqVWZFnZemu
bLuSVw6Q1ybnlX3ZPLYS4jdsjr1jvvWPzFdxZkOr34vHc9JnX7jzDllLSCye
XucJxKacQ5mXZlHZY56ZJ2+I5FwvdcKdzeiTBfmdPPw7GYPHyMHv7jmUOdem
956WyUvdFNVNmlbloY50s2yUM07eeOONxt+MqRfdS+wjxnbaTUi3Vet2rO23
2r+1uizqtn36EnnpldVXkfpdpW7UUa/q0KdPh+4Zddidr45k0Wq/E/u82HY2
iyJtdJn2P6auhsq3Dlny0inTT+ouYupO2fY95MvddWX13Kq6kSVTJ5VZEUJt
crLse2oeRb3krXEV0o0QEzOq30IIIcSkA2MVnF1C288Z6u1Y49ipSDdCTLyo
fgshhBCTFuwHZE07773lPVzJ+dRJHelGiIkX1W8hhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQYtLhxRdftO+W7W7uvfdes8IK
K5hZZ501811con20yya6g1bmrTv01p31hneW867qiYmjjjrKLLLIIvY95d1J
d+iyk+vtk08+aXbaaSez3HLL2Xev+7jqqqvsdZQR731vJ2qnwsTYXXfYf7vq
dppOrodFmFRtv1PsWRhz2223tSTdYcOGmammmqrxntnu5Pnnn7fvt5iU6lRP
oJ02UZSi9aKVeesuvXVHvbn00kvNQgstZF555ZWWPaNdHHrooWaVVVapLb2Q
DXaXLju93v7000/mD3/4g7XdL774IvOa9957z2y66aZm+umnt+887wTUTvkJ
2V13+pK663YZ8vTRqj5cK5kUbb+T7HlSh7GyVkD7w7sm2sEHH3wwydWpnkA7
baIoRetFK/PWXXprdb157rnnzOabb26+/PLLlqTfbk4//fRa+0Y+G+xOXXZ6
vX3qqafM+eefb22Xf2dxzjnnmG222castdZa3SxdPmqn/Pjsrrt9Sd11uwx5
+mhVH66VTIq230n2PCnDuNecc87ZbjFqZ1KsU6I+JtZ6EaLV9Qa9/vzzzy1J
uxOos28UssGJXZdFOPHEE82nn35qZpxxRruWLc2dd95p3nrrLTP//PObY445
pg0SZqN2qjzdbf+dEPdk0VPbKtl+Mz3FnxO3HX300eakk06yfvezzz5r+n3M
mDHmlFNOsfXltNNOM99++639nvXIBx98sNl9993t/PzVV19tzjrrLPv54Ycf
rB2wBnD06NHmyiuvbKT30EMPmYMOOsiMHDnSPuvkk0+2604vv/xym47Dpb/b
brs15vN5t/f+++9vPw7WWLLWuVevXlZOPsgMEyZMsDIg05FHHmkeeeSRQjpg
HeMhhxxiZUjO6eXpJE8vZ555pr0uPS8Yki+vTt19991Wr7R96fbx4YcfNpdd
dplN94orrrDPjqHONIvoIPRs8NloWbl9usdGDzzwQHPAAQfYcQsnO+TZBPjs
Ig/fs6rkMa9eFM1bkbK85557bPkg5+uvv27Hrvfbbz/zxhtvZKYdk/c8fDop
0hbF5C/WF5X1iaE8hfRUxu6SjBs3zt7LXMItt9xi00j3jUJ1NAufb/al68tv
WR1XtW3w6bms301CfmHJJZe0PinJ559/bv7617/auAfb/tvf/lYo7bzyK6qD
LLLqW2zbW1Rm7BM75YM+4IknnrDPOfvss80DDzwQ3ccIyVlEN3nlX6a9qKNM
HFXrdsius9rmom1MHX04Hz3N9sv0h2LbqCLyZT2nbP+nTpuuyrXXXmuWWWaZ
Rj/ypptuMmuuuWbj90suucRsvfXWVk/wwgsv2H1c1CXuOfXUU03v3r3N9ddf
bz788EN7zS677GJ23HFHm3fyQ+y39NJLW58DH3/8sTnhhBPsffSJXBkdccQR
ZsUVV2zogHGv448/3toU98C7775rdt55ZzPvvPM2ZPzkk09s+U4xxRTmnXfe
sR+XJulfeOGF9t+ku9RSS5nrrrsuWgekgy9N2rVPJ+DTC344SUi+rDp13HHH
ma222qoRUzM37Mb+nnnmGauf5P2DBg3KKPlm6k6ziA58zwZf+VSR26d77I12
EjvDjl977TVbDi+99FKmTUDILvLwPatKHvPqRdG8xZYl/m7w4MFWTq6ZYYYZ
rA5oa4l7stIO5T2PkM0UiXti8hfri8r6xFCefHoqa3eOBx980F6PfQBpr7TS
Sk19o5C+8/D5Zl+6vvyW1XEV2wafnsv63ST0Beirw2abbWaGDh3a9Pu5555r
r8FnsbfHyRGDr/yK6CCPrPoW0/aWkRkbohyRF50A+wiYI+Pv999/P7qPEZIz
Vje+8i/TXtRRJlC1bofsOq9tLtrGVO3D+ehptl+2PxTbRsXKl/ecsv2fumy6
KqzRm2WWWcwNN9zQ+A65nF1TnvjXN998s+m+vfbay5YLvP322zb/zL87yP/k
k09uPvroo8Z35C3px1kDyH3fffddU9oLL7xwY8wL8GfJcgTKI12OjPegzzRb
brml2XjjjRt/E7uuttpq0ToA/Kgr4xid+PTCWSpF5EvXKcbQ+/TpY15++eXG
NU8//bTp16+frSf4/Y022siMHz++8Xto3LEVacbqIPRsX/lUlTuke8Y6ppxy
SvP444838uNI2gTE2kUeec+qmse8elEkb+73UFnOPffcto1zrLzyymbfffdt
em5W2j5ZsgjpBIquPYjJX6wvKuMTY/KUpaeqdvfNN9/Ycrvmmmuavk/ufY6R
zUeeDYbS9dlF2XanrG2H9FzWRyZhPw/9AWB89ve//33jN8Zj2T8N2267bdPY
ZIiY8ottr/LIqm8h/1pVZtqBxRdf3PYh+Dd99CSxfYyQnDG6CZV/mfaiapnU
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
suk6wf7TZzEkYT6Lcdy63keUnINGX+6cxTxYM8PzgXFk/p0cK3AQh7q9oQ7m
BThH18FYUdZeu5AO0tSlk1j5sp6fltetLUJHxPPptb3tSLPKs5P4yqes3GV1
76PuupJMt2zZZNWLOmGtCe+PT86voEvmf9z+7FYQsplWEOuLylI2T1Xtjvud
H2bsFRnS6wSr6Ntng+0ox7Jk6bm7fGRVulvPdfjXsjIX6WNUlbNK+beqvUg/
o0zdjs1X0b6Tjyp9OB89zfar9Idi2qhO7xdPjOStvRVC9DyYG0+/Z9HB+pP0
ul8hhGgl6mMIIToFxh0OP/xw65M4nzN2DbQQojNhPJX5njvuuKPxHeNLrA3P
i4eEEKIVqI8hhOgkOHuStba8n5d3aiXn2oQQPRPmtXlnBPvSWNfLuW49Ze2S
EGLiQX0MIYQQQgghhBBCTDIcc4wxc85Z7POvs96FEEIIIYQQokfwpz8ZM9lk
xvDernXWCX9mnNGY//f/2i21EEIIIYQQQsTj4p7YM22XX15xjxBCCCFqg/fB
3HDDDWbcuHHtFqUUPV1+ISYZFPcIIYQQog1w/gnvXeVdjLwvkXe6cwZBT6Gn
yy/EJIfiHiGEEEK0Ad73vskmmzT+Pu+888xvfvObNkpUjJ4uvxCTHBlxD+/e
uOyyy8yZZ55pxowZ03y94p5o7r33XrPCCiuYWWedtcu7kHsizzzzjD2PmPc7
A2eDFn1HcixHHXWUWWSRRcwGG2xQOa2JrRyyePHFF83FF19ca5p/+9vfzP/8
z/+YNdZYw6y99tpm1113tWOacMEFF5htt93WDBo0yGy44YZm7733nmh1207q
rAedTKvq6MRY9/fZZx8zYsSIUve2yp6efPJJs9NOO5nlllvOrLvuut5rr7rq
KnsdMhx77LHmww8/NMdwvtK/uOuuu8wMM8xQq3whOkX+hx56yJbtmmuuaT9b
bLGF2WuvvfSeZ1GJnuAHu1XGVNzDGlXqGfHOI488Yv7zP//TbLfddnYu16K4
pxDMe/OutNhyvO2221osUTmwi4MPPtj85S9/MQMGDDArr7yyOf3001v6zEMP
PdSsUtPZgUXLod0UtYNhw4aZqaaaynz//fe1yvHtt9+aKaec0pZ9mr/+9a9W
py4WEq2hznrQybSqjva0uu/j0ksvNQsttJB55ZVXSqfRKnv66aefzB/+8Aer
a95RnMV7771nNt10UzP99NObr776KvMaxlMOOOCA2uUL0UnyI8eMM874f/0u
ISrSE/xgt8mYinsY6/jxxx8bP7/88stm8sknN+eee+4/v1DcU4gPPvigUDky
5tSJ0CYkadU8TxLiqrra56Ll0G6K2gHtNPNvdcN7R9Eb46FpmP/59a9/Xfsz
RTN11oNOplV1tKfV/Tyee+45s/nmm5svv/yyUjqtsifGP84//3zvWMg555xj
ttlmG7PWWmtl/n7RRReZoUOHtqW/30nys25u3nnnrZSGEEl6gh/sNhkTcQ/n
kPDMPfbYo+mSueaa6//WryruKUSRcmT8aE7ejyQsk2rc00l28Oc//9n07du3
S9wLiy22mB37FK1FcU9nptvd4BfqiAdaZU8nnnjiL92IT+08BWvB0tx5553m
rbfeMvPPP3/TurDk70ceeaT9N/MqIRiTff/99zN/Q0/su+lk+X0o7hF10xP8
YDviHnzFgQceaJ544ommS/ADQ4YM+ecfBeKe22+/3Y6P8HF7D5hLOuOMM+x3
119/vZkwYYL9jX0j+AzW1hWBtbWjR482J5xwQmNtEOk6GKdmjc5uu+3WmJe+
+eabzf77728/SRjbJi18Wpbfy8N3X2w5sraRNcO9evUyp5xyiv0k91b59OTy
uPvuu9v+6dVXX22v48O8DM/mXmS88soruzy7aNrs+zrttNMy11QhM7LTtnIN
66RiIe7mPmzjlltusfdntc9lyimrHMraXhV9h56ZZwes+6Zusn6C8V5XBsDe
nkMOOcTauCsTZHD3n3322XYck3p3+eWXR+XRMXDgQLu3J81nn31mZSTNdtHu
us/aT/ZBUp5XXHGFLZOqaULVelBFrqr+mDnHo48+2px00km2H4mdxKad5yvz
0owt3zJ131fffJTRfehZVcuklX41iVvbteSSSzb6/47PP//croslbqAs2DuY
BL2xZxD/xbVZ62rTvPPOO2bVVVc1b7/9dpffdt555/9bo9Kh8vsoEveE2tyQ
TabBHg866CAzcuRIW9dOPvlkuy+MtiM5/hVjl6Fn+2QvKnedsreqTobS9dXB
KrqEpB+M6ZuHZCrrI31ptiPuyYK8IQd79SwF4h7ysO+++5revXs31uAQW9FH
W3/99c2rr75q9ttvP3PhhRfa3/AZSy21VPQZkA888IBd6+zW4Dz++OO2XVx9
9dUb1zB+c/zxx9s8uP347777rvWLSb9y3HHHma222qoxnsY6o6wxnTSh+2LL
8ZNPPrFt9hRTTGH9OZ/k+mGfnqjfp556qtUz9kp/EHbZZRez44472nrAPci4
9NJLd+n7lk0b35LkkksuMVtvvbX1CfDCCy/YfWox7zN48MEH7bXkG1577TWz
0kordWmfy5ZTVjmUtb0q+g49M88OsF38NzZL+uiH/Lz00kv2d2KbZP6IhTiP
gHwD9zOHhK+JBb/Zp08fs84669j0k58999yz8fx20O66zxkfpONAz5zxUCVN
qFoPqspVxR9fe+219gxfF5fcdNNNdm92bNpZddSXZmz5lqn7vvqWR1ndh55V
pUxa7Vcd9Cnpb8Jmm21m13olIQbhGvLB3hjXRgB7laabbjqbZ/fBd8Xw5ptv
2rwQjzjKxDztkj+P2Lgn1OaGbDIL7JGxJNo3bM/1Q4444giz4oorNsbWQnYZ
erZP9jJy1yl7q+qkL11fHayiy+Q9zg8yH8lZROzdZf0s8NzDDjvMtvfIBT6Z
yvjIUJqdEPcQ/y2xxBJ2rUuDguvcvvvuO3u2yR133NH4Dh19+q/nbbnllmbj
jTdu/Ma43mqrrRZMF72w/o74NglppX06finZNgLtqfMrr7/+uu3fMW/uePrp
p02/fv286wpi7itSjsyzUV+zCOmJMS+ew1y7g7rA3izO53PQN0/79LJpcy6Q
g3zSHtAOJeGMDGzcB2fVzD333Oaaa65p+j69/7ZsOTn50uVQ1vagrL5jnpln
B4wd4Kfo4zsZHKz3SOaPsaGkbKxHHzx4cFTeHG5vD3EYYxTJD+cMzTbbbIXS
q4tOqPv0gzbaaCMzfvz4xndu/K1smnXUA8bqqshVtk6wv2yWWWax7210MDaQ
bJtDaafraEyaofLNSjc2n776lkUVm/A9q2yZdIdfdbAfxo0RM9f2+9//vvEb
Y+HsVwb2/Cdj4TpwsQ//x98WjXmgnfJnERP3xLS5Ppv0QV+YOkP/LcnCCy/c
mBcL2aXv2SHZy8pdl+zQijqZl26oDlbRpSPtB4kJuY81Jg7GNN1YaYxfKOoj
Q2l2QtzDeZnEf02U2N/D2DDzO470OBL5ffbZZ+2cIfZErBWC+Sf0gx6TMJ6d
7vsw1pVuG4nNnV+hrOlnclYOY/N83P7GvPXDsffVFfeAT08uj8l1xeRx9tln
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
j2eeecbsvPPOjb8/+OADM2jQIPtv5m/OPvtsM9lkk9nYw3ftJ598Ym6++WYz
xRRTmHfeecd+uN9x3HHHma222sr8/PPP9m/WwxH/wGeffWZOPfVU07t3b3P9
9debDz/80H6/yy67mB133NHGHsQT3Lv00kubyy+/vJHufvvtZy688EL7b65Z
aqmlzHXXXVc6z3DJJZeYrbfe2sZU8MILL5gVVljBjBs3LijvyJEjG+lwDbr7
29/+5pVHCCGEEEII0VrOPfdcs9FGG5nx48c3vkvOfbz//vuNuCd07RNPPGFj
gTSvv/666dOnj3n55Zcb3z399NOmX79+jTjo7bffts+58847G9cQf0w++eTm
o48+anxHbDF06NDG31tuuaXZeOONG38fffTRZrXVViudZ2Kg6aef3rz55ptN
9+y11142bnPkybvIIos0/ibuu+mmmzTfI4QQQgghRJuhn8+enL59+5oNNtjA
nHPOOY15Dve7i3tC1+bFPcwZ8f2ll15q52r4nH/++TZd4ipgfoi/33vvvcZ9
zNvMPvvsTWnts88+ZrPNNmv6jtjp2WeftWvdiIOWWGKJ0nm+6KKLbDyWBtmJ
h1yclifv/PPP7322EEIIIYQQoj2wD4W9KZtuuqnt2yfXfCXjntC16bjHrXM7
9thjTf/+/W1skf44XBzx8ccfN74jjph33nmbZCXu2WSTTRp/E+8MHDjQnHfe
eXb9GTFWKO7x5YP5oplmmqnL9exHQr4vv/yykLxCCCGEEEKI9sP8Bmu2HOzT
mWeeecxbb71l/07GPaFriXvY3+M44YQT7P/vuecee94B1ychTRf7lIl7uH+6
6aYzN954Y+N3YhkX9zz++OOF83z77bfb2O2bb75puufEE09smstR3COEEEII
IUTPgf78qFGjmr4bPHhwI0Zx+1iYHwldSwzAtcy7uLSBtWErrbRS428HcZGL
e8aOHdu07g2YY5ljjjma7tljjz0a+3k4V417XnrppcbvnCuw+OKL2z01nMdW
NM/cx7l0xEYOZFxmmWWavsuTl/jJ8eijj5o11lijcR6CEEIIIYQQoj2cfPLJ
9uwyznPmbGfOIHN7/O+//36z3nrrmWmmmcaeA8C5zXnXOjh/bcSIEXbPTPJM
aWKKLbbYwhx44IF2fobz3Z566in723333WfWXntt+5z111/fPPTQQzbGGDBg
gP1u+PDh9pwBzo5eYIEFzGyzzWbjH2KUIUOG2D06nC/AedTPP/+8WWihhew5
b88991zhPAPnKHCGAevzOId6u+22s3uHHD55p512Wpt/5o4464247dVXX62t
vIQQQgghhBDFce+bYS8O8ybfffdd5WuZI/r0008zf2NtWvqstKpwLtsbb7zR
+PvHH3+07/3JIzYfyMpZdO4sAyGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQPYuP
Pvqo3SJU4p133jHHHntsu8UQQohu4+abbzYTJkyonM6DDz5ohg4datZaay37
2Wmnncw+++xj9t57bzN8+HCzzjrr2O8fffTRGqTuLO69916zwgormFlnndV8
/fXX7RYnl54iJzz55JPWhpZbbjmz7rrreq+96qqr7HUbbLBBy9rwfffd16y/
/vpm0KBBZsiQIeaBBx5o+v3vf/+7ldP9/tlnn7VEjlbx4osvmosvvjj396OO
OsosssgiVsedTJ1y9qT6EiJUvkWvx7ePGDGiDtEyKVqO3V1Wzz77rNloo43M
qaeean3PTz/91PJntgL0fOedd9p/33XXXWbgwIFmlllmMd9//323ytATfEsd
tNJOO1WPMb6n0/xJXbQ6XyIefDb9wx122MFMNtlk5vPPP68t7TXWWMPMNtts
Xb7/5JNPrM3RTkyMPP/881aXnd4/6ilyAn2JP/zhD1beL774IvOa9957z2y6
6aZm+umnN1999VVL5dl5553NVFNNZcaPH5/5++GHH95j7XvYsGE2b77+zqGH
HmpWWWWVbpSqHHXK2ZPqi4+Y8o29/tJLLzULLbSQeeWVV+oWs4mi5didZbXY
YouZhx9+2Lzwwgtm9dVXN99++6257bbbWv7cukH2ZMw2ZswYq8PujHugp/iW
OmilnXaiHkO+p1P9SVW6K19l6Yn+qgrEIMzPM/dSd9yzySabmHnnnTfzt3Hj
xpk//elPtT2rk/jggw96RP+op8gJTz31lDn//POtvPw7i3POOcdss802di6x
1Zx44olWlo8//rjLb+hz//33b7kMrYK4kjkrH6effnrHtalZ1ClnT6ovPmLK
N+b65557zmy++ebmyy+/rFO8TIqWY3eVFelPPvnkNtZJwvx0T+Lpp582f/zj
H5u+Y91bO+KenuJb6qCVdtqJevT5nk72J1XoznyVpaf5q7rorrgHG3AwJj4x
0lP6Rz1FTiDO+PTTT82MM85o17KlYX3GW2+9Zeaff35zzDHHtFye66+/3uru
b3/7W5ffsOuseGhiohPb1CwU97QO5lR//vnnbnlWp8Y91HOek1wfjl7mnHPO
lj63bkaOHGmeeeaZpu8U97SeSS3u8dHJ/qQK3ZmvMvREf1UX3RX3sDfCkewb
sk7gsssus2s/r7jiCnPmmWc2fmN84OijjzYnnXSS7f+m90swH3/KKadYWz7t
tNO6jL3BPffcY++lT/z666/buYP99tvPvPHGG/b3u+++24wePdr+nuxXP/TQ
Q+bAAw80BxxwgI3XkYtn+MjzZT45fflPc/vtt9u5DT5ureyPP/5ozjjjDPsd
fXKgLeb3s846yxx55JHmkUceqSxnSB95eiyaxzQ8D5ZcckmblyTY7F//+lcb
9+TFImlidZgH60N5VjqP7EW65JJLovOVRVl759kHH3yw2X333e16lauvvrpR
Pum+S15ZsP76kEMOMbvttlvTPczP8jx0c8stt9g0s9qNMvUoZKdF8hUrZ4zP
SJNVX0KyZ4EuDjroINvXpGxPPvlku+b88ssvb6wzivE7vrqWZ0N55VvUHnz6
K1JeecSUoy//sf3JkE/y5ZPfKHOeg565jn0x7PHp1auX/ZsP1916660Nf4Ov
wkedffbZ9u8rr7zSpofP4W9kQO6QbVXxxUl4Dmvc0ri455tvvjHXXnutlSNd
hlVlBF9Zd7LeoGo7krbTMv4kRo/g6iV12a0DZ083axPc+oSQbmLly/I/eb4E
Ot2f5FFnW41O+fzwww/WHtAz8jg7d8S0HzFlDewxy/JXMXmYGGhV3DPTTDPZ
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
mIdK7mXDR6CftG6TEMdWtfcYXxcqi6RduHd4jB07tumZ6CrZppatRzF2GpOv
WDljbTyLdH2JlT2LvHaL/rfre+f5HZ+uWRPqs6GsfBSxh1j9le2nxJRjjK3F
xD2+fMfmMy/uYb28g7X4DuQiXdbHsK6eMdO55prL3sP+5GReYmyrjC9OwlxP
3rvOQmVYRUaIrbPQaXrLokw7krTTsv6kiB6ZW0iXKW1nTNwTI1+oDSvb52i3
P0nTXW01FIl7ku1HTFlDnr+q0lb2FO6//36ro6z9SsRE9OGK7mXiLAG3JikN
OmWfDaDHUaNGdbkXO8Qv77rrrk2/cT3lTZ+Ysyhovxx8TyyQ/I74iv0hrONk
HXPSz+M/2eNGmkkoe2dTrPVkLCd2Xs+t23RzSiE5ffkPgR3PN998Xc7IoT4i
Q/L8BfYAMteFPJz1UFROR5Y+Qnosm0fOnmBeNQnxDb4gCetNs87MiAHbYJ9s
+jkh0Dn6S8sCjJWwFsOBfvAt6bWyaaraO/49PT9PjEh/LpmeryycXbj3w669
9tpN6+eBvC277LJN+StTj2LsNDZfMXLG2ngW6foSK3sWrt1Knp1DO0W/An+b
py8I6dpnQ8l8uPItYg+x+osprzxC5Rhja+myysKX79h8uv0KyfX4LhZyz07L
Sf/4t7/9bWOMhrli9inQPjlibauML3Zgb6xTyiNUhlVkdMTUWUen6C2PMu1I
0k6r+JNYPTLvQUyTfAb7R9wcAeSVV6x8Pv+T9j09xZ9k0aq2mjM6kuyxxx5N
e6ogpv2IKWvI81dV2spOBxtnTeCAAQPMNNNMY/eFo+fkODz1mbIInU3iYC3Z
9ttvb9dN09fjDAn6hnyGDx9ubYz1o+5dSYzXsLeSc984V5T1u25/KfWDd1Fy
L/M/lIkrV6C9oc/LXCVzOdttt51dd5qE66eddlpbR5jPRCbOIXE2Qzu3xRZb
2DlCxjI428O9G5NzNOlPoxti7vSZgmmIH9ddd117Peug3JyET05f/kNg24x7
pffNY7NDhgyx69bZN8ecBPv/eWcwZ4DQZy8qZ0gfPj0WzSO+gPSpo6xXZb2t
g2c4v4mM2BTlyj4u3oVb9JxF6jJrJtJz4SHQxa9//evMOVLGk+hDJZ+Bb3Hn
pudRxd5Z+4GPp2xYa84cFP6Juo39cwYD9dpXFtgv/pw0aBvYQ0z+uJ7y5Jxe
2gP2WbLGkrMk3HhQmXoUslP8e2y+YuWM8Rlpsup1jOx5uHaL/c+cYco4H74X
Pfn05fDp2mdDWeVb1B5C+ostrzxiytGX/zwfnCbkk0L5JF/kj+dwjmbyXvZe
kk/2DKXP+mUuOHmOHPvI02tgY2yrrC928J2ztzQxZYgvqyJjbFl3mt7yKNqO
pO0UOynrT4rokbUh2OcDDzxg1zhyvge+iLkC9h7k6SbW3+X5nyxfAp3uT/Jo
VVvNd/RpGCNlj/ACCyxgzzOkX+4ItR8xZZ0cg83zV2XaShGHW3fGPAyxaZbf
wDZ9Y+XMLzLukx6j4Nw9zpBLjvuxD4NYLj0XRRqh8fiqZMkZk38fvn4+Y2PJ
vjZ5jzmfIU+fMWTpsWoeWwk6So/1xMDatbzzzOlLrbrqqo2/OduAMTTfOrck
Ze09hrJlwTPdGUqMESFf1jqiMvWorJ1WlbOsDpOUkT25ToG2xclbFJ+uQzbk
qGIPdejPl36oHKv47Nh8l80nY9t5Z3ql18bn+fCq9cKnH/q3sWfL+Kij7sbW
2U7QWx5l25GsdMrKHqtHbN/Nk2H//NuNJdYlX6z/ScreE/1JK9vqPIq0H7Fl
7fNXrS4bUS/MvWadcwYLLrhgdD9UTFyw95RxEuC9hW7sqS7wH8kzNlkP3JPe
nS1aS976bCG6A+ZK/ud//qfdYvR4Wt2OCJGF2g/hg1iY+Z7k2frEuqzrzouH
xMQPZyUwb8yeNc67aAWsGWD8jzNwmE8n9hGCsbnDDz/ctlus3YnZxydEnXAm
S5GzK0U23dGOCJFE7YeIgbk5xmXY08LaRPxTq9ezic6G9RGsV2WNMuuWWwXn
1/DO3k5a1yfaC2PtrMfmXCrepxfa8yVE3cS8W1eE6a52RAiH2g8hhBBCiHg0
7ieEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBA9
k6OOOsq+x3GDDTZotyiZdLp8QgghhBBCiJ7BoYce2tHvrO90+YQQQgghhBCd
z+mnn97RcUWnyyeEEEIIIYTofDo9ruh0+YQQQgghhBCdx7hx42wscc4555hb
brnFnHbaaV3iirvvvtuMHj3aHHPMMeaqq65q+u3hhx82l112mbn44ovNFVdc
Yc4888zoeydMmGDvO+uss8yRRx5pHnnkkVLyxaQjhBBCCCGEmDR58MEHzQor
rGDeeecd+/drr71mVlpppaa44rjjjjNbbbWV+fnnn+3fO+20k41h4JlnnjE7
77xz49oPPvjADBo0KOpe2G+//cyFF15o//3999+bpZZaylx33XWF5ItJRwgh
hBBCCDFp8s0335i5557bXHPNNU3fJ88NeP31102fPn3Myy+/3Pj96aefNv36
9bOxzLnnnms22mgjM378+Mbvbr4ndC9sueWWZuONN278fvTRR5vVVlstWj6H
Lx0hhBBCCCHEpAvrzyabbDLzySefNH1/7LHHNuKKs88+2/Tu3dtceuml5vLL
L7ef888/3973/vvv2/mdOeec0/Tt29eeLc1aNNacxdzrIAZ69tln7Ro14pcl
llgiWr4keekIIYQQQgghJl1YF0Zc8d133zV9n4wr+Hf//v1tLJP+OL744gu7
52bTTTc1008/fWOdW8y9xCkDBw405513nvnss89srOTilRj5YtIRQgghhBBC
TLqMGTPGxhVjx45t+p79Ny6uuOeee0yvXr26zLl8/fXXNn656KKLzNtvv934
nuvmmWce89ZbbwXv5f/TTTedufHGGxu/ET+5eIV5m5B8Lj1fOo8//nhBzQgh
hBBCCCEmJtZee21zxBFHNH3Hfp1ll13W/pu1Y5wjcOKJJzZdc8IJJ9jYhe9H
jRrV9NvgwYNtrBO698knn7RxzUsvvdT4beTIkWbxxRc3P/30kznllFOC8kFM
Oo8++qhZY4017NlwQgghhBBCiEmLzz//3Gy99db23LW77rrLxiRDhw615xFs
u+229mwBYpgtttjCHHjggXZOhWufeuope//JJ59s7+cMac6zPvXUU5vOsfbd
S0wyZMj/b+8+gKYoEr+Pm+Uwg2fCDHqlnoqhTjGXcoqegGABZhEsOcxi1lMx
KyaCkSQqoBJUTKiYBVQMgGJGBVQwYEBMoNBv/fqt3v/sMKFndvYJ8P1UPQXP
7j49PT09PZ23s10XNG7cOLsH9nvvvWe22WYbuz/btGnTvOLnE86YMWNMkyZN
zPTp02slnQEAAADUPs0Vc3tFz50718ycOdO+Fv6MXg/SntEyf/58O94SXouT
9LeO9oKbMWNG6feFCxeaBQsWZI6fTzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAXbJw4ULz
1Vdfmb/++qu2o1Kjvvvuu9qOAgAAAFAvqS59//33m/79+5spU6ZUHN6kSZPM
iSeeaPbdd1+z1157mVNPPdVccMEF5owzzjAnnXSSPc4vv/ySK+yvv/7anHzy
yaZ3797m6aefNpdffrl59dVXM4fzwQcfmKFDh+aKg7zwwgv2/NZff/3c55LF
O++8Yzp27Ghuv/12m6aLFi2q+jHrq+uvv95sv/32pn379l6fL+paVpqnAAAA
UD0TJ0405513nm3vqP2w8847m65du5rFixdXHPbhhx9uNt1007LXFixYYO66
6y7TvHlzW0/MaqeddrL1VKdFixamc+fOmcNR+2vVVVc1f/zxR+a/dd577z2z
3HLL1Ui7R+mla/X++++bgw46yPz2229VP6Y89dRTNXKcol111VWmZcuW3p8v
4lrmyVP1NX0BAADqm7Zt29o5Y87HH39sll9+eTN48OCKw1Z7pFmzZpHv9e3b
12y88caZ6pkzZ840a6yxRlmb7M033zSfffZZ5rjNmzfPvPvuu5n/LkhjTzXR
7lH4uiY11dYJOuWUU2r8mEW48847M7V7iriWefJUfU1fAACA+uTbb7+1db2z
zz677PVNNtnEHHHEERWHn9TuUf1yzTXXNBdffLF3eNOmTTMbbLBBxfEqSk21
e+bOnWuPU9NrmebPn2/bpvVRbbR7sqrP6QsAAFCfaNykZ8+edswkqHHjxrnm
joUltXukdevWpmnTpmWvPffcc+a2224zN9xwgxk5cmTpdc3xuuiii+x4z623
3mp/evXqZc4//3xzyy232M+89dZb5oorrjBnnnmmXf8yatQou5bojjvuKJt7
pPl1V155pV1v5F6fMGGCTYvLLrvM/Pzzz6W/SxJVV1bbRGs8BgwYYK677rol
1h7pPLSWSp958MEH7XGSaP6hwtFx+vTpY8/75ZdfTo2r/k6fVf1f7wXHinzS
SXMJtY5ohRVWKKV3cO1X3HVKS8ei08dRG17nOmjQIPPkk0/aY0a1e+LinaXd
ExXHqDyVdD5p6RsX16hrp7TUj+aQKv46lv5uxIgRS8Q9Lf0BAACWFaq3qv73
7LPPVhxWWrtHex9o/pb6veWmm24yxx13XGkem+YAqc4nmkOkOGn9xJdffml/
ZsyYYY4//vhS/fbHH3+06/5XWmklM2bMGPPNN9/Y10877TTTo0eP0nF1vIED
B5bVczWmovXwm2++ua0/f/rpp/b9jz76KDb+UXVljV/de++99v+q/+62227m
kUcesb9PnTrV7vEQ/PuDDz44MQ0VV+1poONoDYrOOy2uw4YNs+nixoe0Jkjr
9tU28E2n77//3jzxxBNmxRVXLKW3z3VKi1vR6SPjx4+356c4io65//77L9Hu
SYq3b7snLo5ReSrpfJLSNymuSddO+30ozZWu+rvdd9/dPPDAA2XxT0p/AACA
ZYXW+ey6667mkksuKSS8tHaP6mmqJ37xxRd2jc4qq6xi1xc5kydPNmuvvXap
7qd5bg0aNCgLI9yvr7AU5rhx40qvqR2g/b2C5syZs0Q9V2szVl55ZbsfnQsr
SVRd+dhjjzWdOnUq/a4xqQMPPND+X2umtCfbn3/+WXrfZzzDzXP76aefUuOq
OGn+oNZCBWnvCtWjHZ900jig6tdBPtcpKR2LTp9ff/3V7p3x0EMPlb0e3tcg
Ld6+7Z6kOIbzVNr5RKWvT1zjrp36EIL7nKstpL6FoKT0BwAAWFZor+mrr766
sPDS2j2HHXaYrcuJ+spVBxw+fLjto9bPkCFDbP1O9UmJaveE13Go31x/M3v2
7NJr6s/ecssty/4uqp6r8FV31HwhH3F1ZdVNNUajuUSqZ6ot6T6v9RxrrbWW
3WNZc7J81uxEtXvi4nrfffeV0jRI6ar2kGub+KRTVL3c9zolpWOR6aO5YDq2
xk+CbrzxxrJ8kRZv33ZPUhzDYaSdT1y7Jy2ucdduo402KgtH9/NRRx21RPhx
6Q8AALAsUJ1M34lTpLR2z7bbbmvatGlj/6966jrrrGPrheEfJ0u7R20FR3VC
zbsKimv3hMNPEhWG6pN77723ufvuu+2cJNVhg/VKzdfTGNWRRx5p2yE+87ji
2j1RcVX//brrrrvE61ofojC05kZ80ilcL9c8rLzXqVrpozlbOo/ff/+97PVw
uyct3lnW98TFMSqMpPOJSl+fuPrmcbV7wvuTpKU/AADA0kzrDNT3G1TEuE9S
u0drdTSX58MPP7S/P//883aNd7jfXnVIV9+r6+0e/at9Fx577LHSZ1TndfXK
008/vWzOl851s802M7NmzUo8TpZ2j77LVXVpzf8KUps2OJbj2+7R+hNH+0fk
vU7uM0Wnj/YC0Hl8/vnnZa9rLUwwX6TF27fdo/G0uDiGw0j6rESlr09c87Z7
0tLfzUsEAABYGmk/J82F0b5Q+tHcmptvvtnuTeW89tprplWrVqV18b6OPvro
JeaXidZ/bLXVVrbP2dHcG61FD485qS7o6tNa46B1I9rHyunXr59d0+6o/huc
cyUa61B9M8itkVB/vOPC9/3OVheG+s1Fe22F90LQPgH6rlXFWed84YUXloWh
73YN12/D3LqR4NqNuLjqONonTHVuR+m3xx57lL3mk06uveXOT9cmy3UKx61a
6aN9Aa+99tqy17SuZs899yz9nhbv8LWMo7+Pi2M4TyV9VqLS1yeucdeuSZMm
ZZ/X/vTBtTxp6a895fLe6wAAAHWZ5gZpTpTqQuGf4B6/2jdKdarp06d7hat+
Y313faNGjWz9V3taqe9ZdSyttdaaAu11Fab64DHHHGP3QVaftPa0evvtt+17
Y8eOtfWxhg0b2r/XmIL26m3evLk9jsYKtH+x6sD6TLt27ezedKrrt2jRwqy2
2mqme/futq9d+0BrbZE+p/qx9v8Khq8+8qg9gIMUhr7zVZ/v0KGDef31123d
UWNcWsuhNefat1h7sG2zzTZ2H61u3brZfda0j7D2N9a+XGnr9nUOOhcdR3MC
9fm0uKp9pD0MNF/q4YcfNl27di0bz3vxxRe90km094R+1zxIt+ex73UKx60a
6SMaB9PfKR4aR1T7QOv5NZ7YpUuX0thXXLyjrmUcfd9uVByj8lTcZ4Oi0jcp
rknXTq8pDbWnhfa61ljrhhtuWPp+rrT01z2V9V4HAABAfpqPE96PrD7R/l3a
Y9vRPnla4+++10XrONTnHl6TUjSlo/YG8x2/iqNxjB9++CEy/DzXqVrpo/i4
vaw1lqK4Rc1bqyR/ZYmj72fj0rfSuMaJS38AAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
qLaff/7Z/Pjjj2Wv/fnnn7UUGwAAgJr13Xff1XYUlhoLFy40X331lfnrr79q
OyqoR77//nszdOhQc9ttt5kJEyYUGvYff/xhLr74YtOpUydz1VVXmWuuucac
eeaZ5q233jKPPPKI6dOnj1c4L7zwgtl3333N+uuvb3755ZfC4letcGvC9ddf
b7bffnvTvn37qh2jrqRPXYlHfVETeQP/3wUXXGC6d+/u9dkPPvjAlrVIvqd9
05T0rK5w+sZds7pyHYos96rxzHnnnXdMx44dze2332722msvs2jRokLCrc/y
XrOvv/7anHzyyaZ3797m6aefNpdffrl59dVXMx/fJ+/yPF26vPbaa+bWW2+1
eWj27NmmXbt25rDDDitkHGb69Olmhx12sG2b8P190003mcaNG5sbb7zRO7z3
3nvPLLfccoXXe6sVbpSnnnqq0PDUlmzZsmWhYYbVZPrUh3j4KvpaZ1UTeWNZ
N3z4cLPNNtuYTz75xOvzJ510kll11VVtfxCi7+moNI27l5bG9KytciPquFHp
G3XN6tJ1KLLcK/qZ07x5czNx4kTz/vvvm4MOOsj89ttvhYSbprafRWnyXLOd
dtrJtk2dFi1amM6dO2c+tm/e5Xm69DjkkEPs/ec8//zz9j5/4oknKgpX7Zzd
dtvNdOvWLfL9xYsXm3322SdTu0dts2rUe6sVbpRTTjml0PDuvPPOqt+LNZk+
9SEevoq+1lnVRN5Ylk2bNs0cffTRdv6ur3nz5pl33323irGqX8L3dFyaxt1L
S2N61la5EXXcqPSNKofr0nUostwr8pmjMJZffvkaa+sE1fazKE3WazZz5kyz
xhpr2Hqk8+abb5rPPvss87F98y7P06WHxlsvvfTS0u+u3fP4449XFG6/fv1s
OB9//HHsZ+69995lqt0zf/58s/HGGxcaJu2euqka1zoryunq0jUOPneRXfie
jkrTunAv1ZTaOtcsx63r5XBdbffMnTvXhlXT61Dqw/2T9Zqpf2SDDTaoYoyW
xPN06XXOOefYOQZaK1aJVq1amU022STxMypTRo0aZf+vskBzLAcMGGCuu+66
yHmacWWQ2uq9evWy8+k011N7J2j90BVXXGHOOOMMe9+LxrDUxgu28+LCTYqP
1kD17NnTXHbZZbZfsn///uaOO+5IPFeNx2o+7worrGDnFepnypQpZZ/R73pd
95fCi+oX+vbbb+37gwYNMk8++aT9XPheTAtH4+z333+/Pb8HH3zQxj9JXLoX
fRx57rnn7DqzG264wYwcOdIrHlF/466/1pJp7FH5TNdSPwsWLLBhuDVtI0aM
8I5LVLju+rtx8iKudZ6088kbaWkcRef4v//9z85xDlIZoTnVNcUn7X3v+0rz
R1waJpUNmkd+5ZVX2rgF51RElV+OT7kYx6c8iZJ0TJ9rkCXuwXs6Kn2S7qW4
9JS4NE2LU7XyRVHlRpZ71/deiDtuXPqGy+Goz+k9F9bAgQPNkCFDzF133WUe
eOCB3NchLp/5lnt57oesdYM4OrY+q7CUJxUPhZNWl0iKc7XzVFLcKimXxOea
xcVLz8aLLrrIjve4c9K9fv7555tbbrnFO20kqQxJi2OlaYDapf415SXlHa3b
0jqfSq233np2npsv7X2g8R9R/tPfat+DoKgy6OGHHzZ77LFH6bmmcSrN3fvh
hx/MzTffbD+vfhbRnh+nnnqq2XzzzVPDTYqPwlMdUOHovvj000/t33/00Uex
56e9I/TMWXHFFc2XX35pf9yzSIYNG2aOP/74Ul+Q5v9qTaXuPWf8+PH2Nf2t
6Lj7779/2b2YFs7UqVNtGgTP/eCDD46Nd1z6VOM4WvN13HHHlfp7NTavMi8p
HnF/o/ygscyVVlrJjBkzxnzzzTf2/dNOO82uhdR103XV3+2+++6l53El4fbo
0cP+v9JrnSftfPKGTxpHUby0L4n+Lkh1mZ133jnxb4vkk/a+930l+SMpDZPK
BuUB1QGDeTiu/HJ8ysUoPuVJnKRj+lyDLHEP3tNR6ZN0L0V9Pi1N0+JUrXxR
RLmR9d71vRfijhuXvlFjdOHPqT6pvk99VnR8jTmoHlvpdQjmM99yL+/9kLVu
EEdppD0NFJbWDLn4JpUXaXGudp5Kilveckl8rllSvDQv7dlnn7Vrctw5zZgx
w6aVC8M3/8TlcZ84VpIGqH3KW+oD0DXT80H1mUrDU1tc/Qy+jj32WFu3ctQG
O/DAA8s+Ey6DlP/Vvnr00UdLn1Fed3VErYsNlvmiZ6JPuyctPupPXHnllc2k
SZPs71988UXqOWr+qe7DMB1/zTXXtHNWg84777xSXfPXX381m266qXnooYfK
PhNca+cTzuDBg+1+MsF9K7KO91TjOJqXu8oqq5TNi5w8ebJZe+21S2VfOB5p
f6Nros+PGzeu9L6eJZpjHdxHVGXhiSee6B2XuHC134tTybXOmnY+ecPnvJJo
zaj6vYJ23XXXUv9aTfFJe9/7Pk/+8EnDpLJhzpw5pTycVn6JT7kY5pPHkqQd
0+ca+MY9fE8H08eJu5eiPp+Wpj5xqla+qKTcyHvv+t4LcceNuh5Rz8vw59SP
GjzPQw891Bx++OGl3yu5Di69fMu9Su6HPHWDOG6e208//VT2elR54Rvnauep
uLIsbxr4XDOfeGmeW4MGDcrCCI/H+JZT4bzrm6/ypgHqHt0jygOaY1MJtXm2
3nrr1M+5/iBRnlafiMYNladUrwp/Npg/tUeJfo9rc6itHi7z1bbzafekxUf3
nZ6DmvvgK678ue++++w9HaZ9jVT2KR4a81Uc1X8TpPVR7l70CUfnqn63tdZa
y47tqS6bNt84nD7VOI76XJQ2CkN9qPpR+1vHVbkUFY+0v3HXPzh+qeu/0UYb
lR1be+YeddRR3nGJC3fLLbcs/V7Jtc6adj55wzeNo+g5oGef9md0tA6wWbNm
mfJ/EXzS3ve+z5M/fNIwqWwI5uG08stJKxfDfPJYmqRj+lwD37hH9alkafdk
fSb4xKla+aKSciPvvet7LyT10/i0e6Kuo6vfa8xJxwt/d1/e6+DSy7fcq+R+
yFM3iBPX7okqL3zjXO08lVSW5UkDn2vmG69wuye8/sa3nApfY998lTcNUPvU
LxPeO0f5KctYTRTNtdSc0qTv59KzybWvlHf23ntvc/fdd9vyUXk/7RmpMcao
csSppN2TFp+o+y5NuPxx483qJ1h33XWX+LzmtCpeuj7uXH///feyzwTvRZ9w
RH2i6hs58sgjbRmadZ5bNY6j81hnnXVs/T78ExePtL/xvf6qvxxxxBHecfEJ
t5JrnTXtfPKGbxpHUX9ZkyZNSr/rnt52223tfDxR2a84vPTSSzb+mkut34P1
nHvuuce+rzjq/3pO6Lmivj0948N9a3F80j5ruydL/vBJw6SyIZiH08ov8SkX
w3zzWN5j+qZbnjLdp90TnKeT9ZngE6dq5YtKyo28927edo87bt52j/PGG2+Y
1VZbzbz++uv2d1dvLeI6+JZ7ldwPeeoGcZLaPeHywjfO1c5TcWVZ3jTwuWZ5
4xXX7sla//PNV3nTALVLeUfX99xzzy29pjrM3/72NzuvpRK6t1VX0v0bR/Uf
jeMqv2le3GOPPVZ6T3U+l4fcGGs4f6repd+1hi1I7+seUTs/nO+Vp9PyvU98
8rZ7NM/WcXOE9J1bKpfUrx6k9biub0LzEBXHzz//vOwzmvPq7kWfcFTHDPaF
qu652WabmVmzZsXGO5w+1TiOxg/UTg73sbhrGRWPtL/J2+4pItxKrnXWtPPJ
Gz7nFUd7Grh+bd3Xbdu2tX1ijtZPKE2aNm1qz0PPC7V9Tj/9dPu+5pfrfY0P
ab6ejqc514qb/lWZo+9deOaZZ2Lj4Pikve99nyd/+KShb7snrfzyLRfDfPJY
HJ9j+qRb3jI9rt0TdS9FfT4pTdWX4BOnauWLSsqNvPeu770Qd9xK2j1Kb5UJ
WqvhXHvttd55Iy29fMu9Su6HPHWDOFnaPb5xrnaeiopbJWngc83yxquodo9P
HCtJA9Qu5QfNdVQectz3dOn+cvTdplqj6LMmNkj1mA033DAyD6hep/Fv0TNK
xwzuC6C1Z/peKu3Fof063N/oc8F+ZH3HqqtfOYq77g/Vv3RvBMPVnGx9/3I4
LsFwfeKj+aaa+5NlH1tX7rnjuDRWmBpfU33XUfy1Njf4WuvWre1zI0jrQPbc
c0/vcHTMCy+8sCwMzbsOlzFJ6VON4ygdtW4wmO9EZbQr68LxSPsblVvheSDq
LwuOXcjZZ59dNk83b7hqmziVXOs81ygtb/icVxzFV3sx6fl5zDHHmA8//LDs
fa1h1rND30Ps9hvq27evueSSS8re19w9t0+k2j+Kn6PvEFM5k8Yn7X3v+zz5
wycNk8oGl4dVJ5Sk8su3XAzzLU+i+BzT5xrkLdPD6SNx91Lc5+PSVM8hnzhV
K19UUm7kvXd974W440alb9RzOOpzahP+5z//Kd0Huve1NsU3b/ikl0+5V8n9
kKduEMetIwnPgYkqL3zjXO08FRW3StJA0q5ZlnjpeI6+O0V7EWRJG4nKu2lx
9E2DvHVnVJf6Za+55hq7f4Xykr5LVM+MYD5Xn6zK/OD8fl/6mwMOOMB0797d
7qmovf6Un7Wvi8uz+lf9vVrLoDk12rdX7S/tp609M9Que/nll20/c8OGDU2H
Dh1K4+bKqyeccILte1O/s8IO1p+0v6D24XnllVfs+JLWjCu/av6Qxpqiwk2L
j8Y7lZf1Nyrb4/ZBjqK4KC20ZiO476HKQj0TFLbWnXbt2tXOBQpSP5H2LFH/
mfYzUTmgdbVaA9ilSxfbN5QWjuqjCkP7L2qOo9b8Jq2Zj0v3oo8jqterXq29
M9WPovN8++23E+MR9zcvvviiLbv0+Xbt2tk9OfW80DimXtP36er6a69LjUOo
fa56TFpcksLVfA5dWzcuk/da50k7n7yRlsZRVFdRHUllhPrK4tr5mq+q+9DR
Omb128W9r/tr9OjR9v+Km8qXtLVCWdI+7b6vJH8kpeHYsWNjywblYdXJ9Z6e
odojKKn88ikX4/iUJ1HSjqly2+ca5CnT1bYOp48TdS9FpafEpalPnKqVL4oo
N7Leu07avRCXxlHpG1UOR31O9QqtC9FYscoi7YW8yy672Hui0usQTC/fci/P
/ZCnbhB3Tyr+Og+F1aZNm1J5nlRepMW52nkqLm6VlEvic81846U1NTqeyqXm
zZubRo0a2fqr9p32SZu4MiQtjpor6JMGldSdUV16TmhsRvdWeP+QoqjPQflV
82Pi5tNq/yrtR+iozuW7blr3Slzctceg+x5f5Vf9P9i2j1NJfJKof0F7jEbR
+KnilzSOpM8E98F0cwV9wnF71Csd1FcRnsOaVTWOozCz5sM8f1MT4ea51pWm
XVrecJ8rMr30HHF7eure0n44un9c32Twfdliiy1K/Z6qI+n5rr2n1M4rSt77
3leRaZhUflVSDvmUJ0UfsxrhSNK9FCUuTatVrjtF5Iu0ciNr+L73QtY0rkSR
1yFLuZfnfgirdh4KKirOReepStPAtx5TrTqpj7Q41mQ+AADUHepHc2uSVK/a
b7/97PfzuWdC8H3NeVPfr6O+EPWhqV8zOG8BAAAAAOqS8Hefq385+P1D4ffD
Y1hRfbMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAgHx+/vln8+OPP5a99ueff9ZSbAAAAAAsqyZPnmzGjx9fWHh/
/PGHufjii02nTp3MVVddZa655hpz5plnmrfeess88sgjpk+fPoUdqzZ98MEH
ZujQoYWF98Ybb5izzjrLtGrVyrRu3dqcfvrp5u2337bv3XPPPaZLly7m4IMP
Nh06dDDnn3+++eWXXwo7NgAAALA0W7Bggdluu+3MwIEDCwlv+vTpZocddrBt
m0WLFpW9d9NNN5nGjRubG2+8sZBj+XrqqaeqEu5JJ51kVl11VdvOK8pvv/1m
Vl55ZXPFFVcs8d7o0aPNcsstV2oLAQAAAPBz6623mk022aSQdo/aObvttpvp
1q1b5PuLFy82++yzT423e0455ZSqhDtv3jzz7rvvFhrmc889Z9s2GhsL0/jP
BhtsUOjxAAAAgKXdlClTzKOPPmr++c9/FtLu6devn62zf/zxx7Gfuffee2u0
3TN//nyz8cYb19jxKnXJJZeYtdZaa4mxMmnevLk58sgjayFWAAAAQP2kvQWu
u+46+/+i2j1al6KxoyRff/21GTVqVOl3tb005nTnnXeaO+64w87zcjTmofle
WhukdoD+rn///vZz4bllEydONPfff79db/Pggw/az73wwgtmr732MiussII9
hn50PJkwYYLp2bOnueyyy+zeCy7c4HHPOOMM226SJ554wlx66aX2R7S258or
r7SfcXFJCtPX3nvvbdf2hGlvCJ3HXXfdlSk8AAAAYFmm+vM333xj/19Uu2e9
9daz89x8DRs2zBx//PHmr7/+sr+///77Zt999zXffvut/V11/dtvv92stNJK
ZsyYMaX4nnbaaaZHjx6lcKZOnWpOPfXU0u9qW2n9//fff2/bKyuuuKL58ssv
7Y9rx8ydO9dcf/31ZvPNN7dtrk8//dSOVX300Ufmhx9+MDfffLP9XZ+Tr776
yh5DnxeFozTTZ9z+Aklh+lCbb5VVVjFt2rSxYQd/zjnnnExhAQAAAMs6jVUE
x1yKaPdo7c4aa6xhx1d8qG2y5pprmpkzZ5a9ft5555njjjuu9PsXX3xh6/vj
xo0rvab20vbbb1/6ffDgwaZjx45l+2NrrEXefPNN226KorU52kNg0qRJpWM5
n3zySVm7Rx5++OFSu0fmzJlT1u5JCzONW9ujtpr2hwj+HHPMMWbDDTf0DgsA
AABYlmm+mPaVDipqvEdtnq233jr1c2rz3HfffWbttdde4r3hw4fb9pDaUaIx
GrUFZs+eXfqM9sLecssty8LTGh6ti2nfvr0ZNGhQaQwpqd0zbdo0s/zyy9s9
7cLccYPtHh032O7RccPtnqQw02htzzrrrMPaHgAAAKBCat/oO3WGDBlS+mnS
pIk54YQT7P9//fXX3GHrO2W0BuW7776L/YzGP7QOp1evXmbddddd4v2RI0fa
toTWx4hP+0O0t5rW0qhtoHaT5rlJuN3j5rmJ2igNGjSIjGcl7Z64MNNobY/m
uIVp3h1rewAAAAB/apN8+OGHZT+an6Y1+vp/cK5YVj/99JNtQ6lNE0ffv6m5
bU8//bRtj4TbWb179y4by/Fpf2jsKDifTOt6NttsMzNr1izb7tH6HueWW24p
/T+pjaLxpfBxtRddtdo9bm2P1hWF6XzDa3s0Hqb4vPTSS7aNqHmL+l1rohyl
td7//fff7f8HDBhg0+azzz6zafbQQw9ljicAAABQX62++upL7Dv22muv2f3Z
3B4Dvp555hm7DsWtbwlS28TV6zWXS/PiVP92NDdtjz32KHvt888/t3V+raVx
NCakdo2jttKFF15YdqzDDz/c1vHVbtHfu/aAPutMnjzZrsVxc+qC1FZQ+yXY
1tB+Cuuvv37Z+ShsjTX5hJlE7cC47+3RnnHhtT2PP/64bRM2bdrUnpPiq7aP
vuNHtEZI7zdr1syudVLbTHtDtGzZ0v6r+HXu3Nler6C81x0AAACoq1RPPvro
o03Dhg3NjjvuaM466yxbfxbVjTV2ozX1WelvDjjgANO9e3e7l/Srr75q6+a3
3XZb2doVjT1pDwN9n4/2DOjatasdk3BefPFFu6ez4teuXTu7T7TaRC1atDCr
rbaaDV9jOn379rX7wmkPa+1nrT3g3L4GcvLJJ9vPat2P4iJjx4619XuFfcQR
R5gRI0YscR7a51t/+8orr9jxEu2foLaJ5tLpWIcddpj9e+2poL3bfMIMmzFj
hm3X7LDDDvbvlAYKx8VR7ZhGjRrZ7yvVng9uHwjtTaHxpsaNG5f2/lY6aI1Q
8H2te1q4cKF9TWmiuDoHHXSQbecEVXLdAQAAgGWRxlpUd9c+ZW69ThSNRWju
VdYxEsd9f47W7mh8xrXdgjQ2o3UyecJW3Fz4+n9wfKc2aZ2U1mU5hx56qHn+
+edj39f4zujRo+3/Nb9Q7Zs8+y8AAAAAQE3RGJbW9IjaYptuuqldn+XmCQbf
ly222KK054TG+jTWpv26NUYGAAAAAHWR5vu5/Rw0FrXffvuZPn362Llz4fc1
522XXXYp/a3G4Lp06WLnGEbtmw0AAAAAdYFb1+NoTl5wP77w++H5f8F96AAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAQP01d+5cs2jRotqOBgAAAIBlzLfffmvGjh1rFixYYH//8ccfzaOPPmoW
L15cSPg//fSTOfnkk821115rhg4dam677TbTuXNn8+qrr5Z9TsfcY489zMYb
b1zIceuTDz74wKZNffLCCy+Yfffd16y//vrml19+qe3o1Lj6eM2Wdtdff73Z
fvvtTfv27QsJ74033jBnnXWWadWqlWndurU5/fTTzdtvv23fu+eee0yXLl3M
wQcfbDp06GDOP//8ZfI+QH5F59eaoHvilFNOMYceeqg5/PDDzTnnnGMuuOAC
m//1nG/btq29V9THCQB10bPPPmuWW245s8IKK5jVV1/dNGjQwNx7772FhP3O
O++Yrbfe2rz88stlr//www9m7733NjfffHPZ6y+++KI9vo+nnnqqkDjWBSed
dJJZddVVzR9//FHbUcnkvffes3lnWazv1ddr5qM+31tXXXWVadmyZWHh/fbb
b2bllVc2V1xxxRLvjR492uZ/1xYCsio6v9YElfeqL1xzzTVLvPfll1+azTbb
zPz888+1EDMASKd2z8UXX2yuu+46M2jQIPPFF18UEu6ff/5p+7LOPffcyPen
TJliVlppJTNhwoTSa9OmTfNu96jPaWkxb9488+6779Z2NDL7+uuvl9l2T329
Zj7q87115513FlqPfO6552wef+utt5Z4T+M/G2ywQWHHwrKn6PxaE8aNG2fv
iTfffDPy/fPOO6+GYwQA/tTu0U/RbrnlFls2fvXVV7GfUXm/ww47lH73bffM
nz9/mZwPV9csy+2epVV9v7eKrkdecsklZq211opcl9i8eXNz5JFHFnYsLHvq
Y7tH/aRrrrmm+euvv0qvaZzH6dOnT21ECwC8uHaP1uFoXppb51Opf//732aN
NdZI/Mxpp51m682uzHTtnu+//94MHjzY3H777WbEiBFldQ6tK9lrr73sOPut
t95qfzR2FKQ+Wq0juuGGG8zIkSPta+qv1VyVM88804Y3atQo079/f3PHHXdE
zlWKCkNjUz179jSXXXaZHcd3f+8jKjzROpErr7zSnHHGGWXxeP75503v3r3t
5z/77DMzZMgQ+7yZMWNGapg+5/r000/b8T39uHUqCxcuNHfddZd9bcyYMfa5
pvcGDBhgxwPDa7Li2j26HroueqbrmJor5PikYdx5TZw40dx///02Tg8++KD9
2yQ+55gmKi5x10zyXreirllaGjoaq+rVq5etoyi+Wtfnc29Vcm2T4pT12jpa
n6i46PyffPJJe7xwPTItLZJoPq7WK4QpvZROSvu65JtvvrHnqn4nN1/R5QuX
x5Rv1b6VJ554wlx66aX2JyxPukXlq6C4/JOUd6pRZijMyy+/3PTo0cPGsW/f
vna9zQMPPBDZxk3K91meLT75Nel8sj7HwtLKdB977rmnXd/j6Jr873//K/2u
MqkSRZTborkr+vx9991nxo8fX1GcACw91Obp3r27nauueerHHXecfT5Uar31
1jO77LJL4mf69etn682PP/64/V3tHs190/PNleGKi9pQ7ne1ifSsXnHFFW17
ST/uGS433XSTPQe3L4Pm7OjZoWeb2lEKX+Wm6geitpeefUFxYWitpp6Nm2++
uX12ffrppzb+H330UeJ5xoUnivvAgQPL2g96vmrNqD6veDZq1Mi8//779jnp
6s9JYfqc6+zZs+1aVK1dULqLwrr66qtNmzZt7Lmpvu7Wein9d9ttN/PII4+U
ziuq3TNs2DBz/PHHl/oCFW/tf6DnvaSlYdx5TZ061Zx66qllx9aa8iT6zEUX
XWTTwc1JU7hqs7Rr185Mnz4913WLumaVXreirlnSMZyHH37Y7iHi6qS6/w45
5JDUe6uSa5sUpzzXVlSX0fFdv4mOt//++5fVI9PSIonqtqussopNW13v4I/W
c/vc+zXplVdeMdtss01pTt6kSZNs2+Oggw6yv2tdpdZUKt5u3bnG45X2umZB
edItLl85SfknKe9Uo8xQmGob6n5TOefyufbf2W+//craEGn53vfZ4pNf09I+
y3MsSlqZnsbdE9qLQW0StbmUpkXUGZxKy21RfA477DCbPvrbY445xt4fAKA+
kY8//rj0u+o+GnNR2Z6XypmGDRvaeSBJ3Fw4PVdEdTn9Hl4TecABB9i+OUfz
ilUmhql/XWVy8HwmT55s1l57bRsnnavC1/xkR8fWOiTfMFQOq96pOoWkrYdK
C0/mzJlTVofedNNN7fM9eP56DmQJ0+dc9azXfAX18zuq0+m5I8cee6zp1KlT
6T314x544IGl38PtHv2u8GbOnFmWBprvree4E5eGSeelfruOHTvadWOOz5jA
77//btsfzzzzTOk1pa3qgEnS0jh8zaTS61bENUs7htYlqU9C+yc6qke5+mDc
vVXJtU2Lk8Z2s17bX3/91ab3Qw89VPZ6cJ24z32SxK3tUVtQda3gj+pRG264
YWoYNUX5cJNNNrFt7yDdv8F69SeffFLW7hG1V4LtnjzplpavfPJPUtlajTLD
PW9URgRtt912tu/NN94uPkn3rk9+TTufLGV7nLQyPY3bB0ljUIqX9oLdfffd
bXlYpLzltrz00kumSZMmdg6LKE233HJL8/nnnxcaRwBLj3/84x9efUdJ1I+U
Ns9NfXEqQ7UvmLjnUHDesGiO/Y477lj6Pa5upvqfXh8+fLidr6AfzTNSmCqX
1c+m/6vf3FFfl8pE3zAUx+WXX957PmBaeBJuP+i5qzkOzr/+9S/bp58lTJ9z
Fe09esQRR5R+19yHID1rNf9R8yL0zNx1111L74XjrfkEej6HKZ6qO7jndlwa
Jp2X5plo3YnWWqivUXWacD6Jo7559RM6Pv39aWkcNdZV6XUr4pqlHUNzn/T/
uPZ63L1VybX1Scus19a1SdRPE3TjjTeW6pE+90kSlTvrrLNOvVjb4+qjquMF
KT8G69UujwXbPcpjwXZPnnRLy1c++SepbK1GmRH3vNEcMrfu1Dffp927Pvk1
7Xyylu1xksr0NJrPpvQMppnGyBy1NdwYVKXylNuiPWQ1Lg4AUdS+Ce/Lome6
xogroTnkafUL9TOpXuHK0LjnkPbL1PfEOOG6mZujoGeICy/8Iz7P/LQwsuw5
5xOehOvQmoegdQWaR6G5ETvttFPZPHmfMH3OVTQXRP2LOtbrr79u16c4ejYq
Hnfffbc9vp7JSe0e9R2uu+66S6SB+gaD43hxaZh2XupT1jx21TdV5/CZCyXq
n1dfsepkqn9E7c2VNS5R7Z5Kr1sR1yztGIqjjuH6QsPi7q1Krq1Pfs16bd15
hPvqg/VIn+Mm0bXUHLcw9TnXtbU9Lj3CY+XhdfNFlIFJx4/LVz75J6lsrUaZ
Efe80Voi97zxzfdp6eqTX33Ox+dYSdLK9DRR692C56Q5HMG1T5XIU25rTEdp
89prrxUSBwBLF/U9qVzRd/AFaf/9SvtL1Oej8jtqvaxobrbqV1HzDsLPIa0/
Cj6vVDfTGgRHZa2o/qf6SLhPTXVThenzvEgLI2u7Jy08Cdeh1X+vsl7PJM1B
iVo7nxZmlmej5uSrLy04bqCwNF732GOPlV5T/cE9IzXfJBxvrUfVNdWcjiCt
MQj2RcalYdJ5qc8z2Jeszyifzpo1a4lwomiNg/Kib59hWhpHtXsqvW6VXjOf
Y6jNFLUvs3s/7t6q5NqmxUl96lmvrfrydR7huStKE1eP9LlP4rh1DOHvGBNd
k6i1PepHV/1W82xUH9aac/0ebPuqrNX7qivq/+pzV/w0TqN0CM+D8uXSI7wP
hdZQBuvVGiMI5zHFMUsZGCUtX/nknzztnkrKjLjnjdpI7nnjm+/T7l2f/Jp2
PnnK9nAYaWV6EndPaP1RFPVxuu/08bkXfGQtt/UdgFHtfxenat1/AOoPjcsE
52zrWa7ni/asctR3ou8sd+s4fWmMXnN0w+sQVX6rz0g/wWO751Dw2a3njeYq
BPtvVN7rc64M1TNIFJbWibrfHdXddEzXFxQcg1K/nZ6FTloYmtOstqLP+gCf
8MTN11bfpPz3v/+1a1ZVFmvdcXBtuW+YPufq6Hm0xRZblO2RpPpLuG6nsUGN
YWjej9YRuHi766DXtR+Ynh+O4qM6evC1uDRMOi89ay+88MKy17WHQLh+EEfp
+fe//93OH/GRlsbhayaVXrdKr5nPMURjufrumSB9Xu/H3VuVXNu0OOn1PNdW
5Udwjo1oPYf2m/JNiziq78Z9b4/KzKi1PVrHrzpp06ZN7TFVt1J9z6W11gnp
/WbNmtn+HtVDlV9U79W/im/nzp3L1jSI9iTTZ5K+E0A0NhW+rtp3K1ivVpxU
vgfva62JD46n5023pHzlk3+SytZqlBlRzxu1C9U2cM8b33zvc++m5de088lT
tgf5lOlJ3D0R9b09iov2bHDzLNPuBV9Zy22Nxer7190eL47WEGqeY577L2/9
B0DdpH46reHUc0VzxPfZZx/bVx2kMkHrBH32UQlTH1KLFi1suaPyWv0x2uNH
+/OEn2F6DmlOr+aka/9qxUPrh7V2MkxrHDQOpLIsuBennmn6G81VUL+Wnn3a
p07H1XNH+y1ozrD2MdVzS3FbbbXVbFiuHzAuDMVD5Z/C0PoKxdFHXHjy8ssv
2/qCwtQzUOW1ylnFSc8xjZmp/13rpYLP56Qws5yr6JmkNdHfffdd6TU9B/UM
0Lx4rZ/V/jhah6X9orQnkOrbbdu2tcfo0KGDnW8lCkPrfTVfQ9eva9eutk/N
SUvDuPPSPrPaU0l7CKkeqDXTvnsdi+oMmr8ZnmeS57pFXTOp5LoVcc3SjuGo
rXbCCSeYCy64wNZPVC8J9ivE3VuVXNukOOW9tppTpb9TWCq7VDc88cQTbZ90
ly5dbJ9JWlqEad89tWu0vkPnoXN05Y/+Vb1NfTn6vlKtbQ+ud1dfkcYBGzdu
XJrro3PTOqHg++rHcXv96jyVhxz1b4fn6CitdTy3D1dSeuhctVZe84I0D09t
mvB+YRoj1DXW/lbq81bZrPqsxjnc+WRNN0nLV0n5JynvVKvMcO0ezQVUnVxj
Jno2hZ83afne9971ya9paZ+1nAhKK9PdHpFhKt+0FlfrZpRe2l9O11g/el3t
bbU1FK6Tdi/4ylNuqw3YrVs3O9dYeUX5UPHJe/9VUv8BUDepX1p9HPoJ9l8X
Sc9TPTPUV+Szv7+eNcHvQouiPve4/V3UlxPegyerIsLIGp720VMfbXA+gNJL
Za/2A6pWHOPmZGsvpOB3zyguPns6KF7q+/MdF4v6++B5uTljyqvqr8zyHBSd
R7gPNW9cotTGdUubR592DNWz4t5Pu7fyXtuoOFV6bRWmKys0XqXww98pVfS9
HEffFaO6v6M8EVx/FX5f9VB9h4Doeqh+FXV/6TXNn/Shc3Vr3sPrRxylueub
V7rr/1Flf550S8pXLsxKyoakcLOUGcF5bj7Pm6Li7ZNfo86nKHnL9KzS7gUf
ecttnZP2LgzPNc57/wEAqkNzDcJrNpytttpqiXnmiKc+b/Xjip534bkPReK6
QdTf7sZl1I5Qm1d1NzcnKvi+aK6iG7NTXtW4guprGp8IUj9/2nhLlLh2D+LX
96AYafdCnGqW23nvPwBAdagMVr9YcI6xnhmapx5Xr0Y0fefT2Wefbedl+/aV
58V1g2i+kVtLr3EGfQdmnz59Sv3rwfc15yb43c6q72m+k9oqwb2z1Xcd3A/d
l/bu0nxM9WFrThv1+/+j8RatwXffH+e7ThD+0u6FONUst/PcfwCA6tI8CpXB
WkOjeeQq+2tijs7SRvPANLdS89hr4jnGdUN47qHm2QS/NzP8fnjuVdR8J7Wf
w/N1fGgNib5HVGtt1JfN/J3/o+9B1Xoe7TWhPbzS6uLILu1eSPq7apXbee4/
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYFn2
/wCIhuPX
    "], {{0, 371}, {830, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{830, 371},
  PlotRange->{{0, 830}, {0, 
   371}}]], "Input",ExpressionUUID->"4a6708c3-13f9-4f78-802a-ed2a1e8bc6a4"]], \
"Text",
 CellChangeTimes->{
  3.727359935028596*^9},ExpressionUUID->"78940559-46b2-4ec0-ba7f-\
75a551235531"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQW0XcX1h0sSIHhwLyHIWliBloUUKJrQUDQhQCAFkhAgSAIhEAJFikNw
d3eXFncoVrTF3aG4VIF2/nzDmvufO+/IHLkv9738vrVu8u65R+bs2SN7Zu+Z
hUeMHbRDj5/85Cd79v7hn0HDJ6w1btzwiYP7/PBlyJg9R+84ZtT2A8eMH7Xj
qHErj+j5w8E1f/j0++GPXj/8b4QQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYTowiy11FJmgw02MLfffnvuuccff7w9d8iQ
IZ2QMjE5+OSTTyZ3EoQQBVCZFe2GdFJ0Fs8888zkToKoyCabbJL62x//+Efz
/fffF7omiccff9xsv/32Zo011jCrrbaa2XXXXc0+++xjxo4da3bYYQdz1lln
mb///e+F0x7Diy++aC655JLMc4466iizzDLLmEGDBmWe96c//cmMHj3arL/+
+vYzbNgws/fee5t//OMfpdPHPXfeeWfzm9/8xgwcONCMGDHCXHnllY3f33rr
LXv817/+tdliiy3M/fffX/pZWfzlL38xm2++uTnttNNsHv33v/9tyXO6Ovfe
e6/V47nnnruwzj700EO2HGDL89lll11sOZgwYYLZcccdzUYbbWSPP/rooy1K
fWuJKWtdmbvuususvvrqZq655jL//ve/a79/bD3k6K5ltrvrUXemu+pkZ3LT
TTeZX/7yl2aBBRbIPC8sJ0ltU1p71eoyVrQuK8ubb75pevfubb766quWPicG
0kBbvt122zX6iHvssUehe6T1lekrjBw50px33nlNffJWt0mdRWhTUI8cc8wx
ZqeddjJsP/Lll1/mXhPL4MGDzU9/+tOmY//5z3/MmWeeaZZbbjlbNuoGO2fa
aafNzaNDDz3UrLvuulH3xGaYffbZzf/+9786kti45xxzzJH425577mnnor79
9tvanheC/B9++GHzwgsvmPXWW8/885//bNmzOpvbbrut1vs9//zztmyUtZ2x
Keedd94Oxz/77DNbb9OGd0Viy1pXIUlvGHsj71v1jkXqoXYos1XKVtq13U2P
8qhaP9Vdv1WhHXSyLO0kx/vuu8/2r7NIKidJbVPSsc4oY0XqsrIceeSR9t0u
vPDClj6nKIsuumild0/qKzPeTd97pZVWahr7bnWb1BmENgV9IeZUGZOt2w7B
TiR/kjjppJOs/V/3vAg26l//+tfc884444xovdlyyy1N3759qyYt6p7Mjdx6
6621PisEmU811VRdqs0oAmMJdfLRRx9VskOy9Ofjjz82v/vd76okb7IRW9a6
Ckl6895777W0zo+th9qlzFYpW2nXdjc9yqNq/VR3/VaWdtHJsrSLHOG5557L
tUOSyklS25R0rDPKWJE+VVl23313069fP+sz0k6ssMIKpfvJkNZXfvnll21e
/v73v28ca3Wb1Bmkyaqz7RDKyMwzz2z222+/UveuSjvaIRdddJG5++67a31O
Ep9++qnN6yQfvK7ON998kzu/XZRW2CG0O47DDz+8UvpEddL0pl3skHYos1XK
VivKZVekqhzaSY7toJNlaSc5QowdkkSsHdIZtNoOwX8GX5p9993X9OrVq61i
klplh6Cn5OWmm27aOCY7pBhZdghsuOGGZpFFFml8pz7Dh/Hss8+282+PPPJI
4zfi6s8991z7cX6O+C2hlxy78cYbrZ4ecsghNg4lzCPGnSknnHvLLbeY008/
va3skBNOOME8+OCDqednyQaefPJJc/DBB9t3R3eBeJ8DDjjAfhzM6bm5zRNP
PNGccsop1keRaxlrwL/3mmuusc/hgx8d9RnPPvXUU81VV11VKl3+vYkPQv5V
yhH2GumZNGmSufrqq+0xfGPxsezRo4d9Lz55MW156YdW2CHUpQ7ac0AvnY5f
e+219tgTTzxh03bOOedY/SC+iLGRcePGmS+++MLOK+Kbe8UVVzT5ZteVL/hc
XH755fZezNVxDmSVNWSO7Clv3M8fL62iD0nXxuopJOkMZOmNq/OZF7/++uvt
s9LSmvXejjL1UFKZdX2/rGeiKwcddJA58MADzddff92QcxZp+Z0lozxdy7q2
jB4V0aGstGXJJ6a9KSrHvPqpihwhTb+z8jWLLN3K0skk/va3v9m04W/s/KF8
Gca2X3XUa1lyjElH1XooCWeH4J9CTAC+ulzr6vS0chJjh6RdW7ZsOPLqsjI6
lwXvQFvJvA7vx7NDWpE3MbTKDnE+WJQxR16bFFt31Z0/RWgnO4T4HOZ1XXln
boQ5AUCm+MXdcMMN9vsHH3xgY4Kmnnrqxlgy8RqHHXaYjfd9/fXX7X3or4Xl
knhh4oDIP+Dctddeu23sEGwQ0nzBBReknp8lG/j888/NcccdZ+/j+rXvv/++
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
1rvYYotZO9yBrcbz/RhK4m7wkydGx/cvpU5YeOGFE+cNnG+gv98m63IRx+uD
b9yqq64a9R5Je8wAdRf7ETqw5Yg/TpJh0j3nn3/+DscZl2EsinEKF68WKxvG
J6g3/PPwgXTjKQ7nK+qPwVOn+H4qwPhXmEb2WHQ+pbHpSrs3eu9g7QbqMGIC
s2BshHg42kQf8oI63LWNjO9AeJ5PbPqdTrl7QtG8TtIfoM3H/8rBuhajRo1q
6C8+sZQVX59dm+W37bSdtCukq658QXYTJ07s8C6uvxOWNe7NOjT+HA55wriB
fyxGH9Ioo6d5OgNpehOT1tj3rlIPhWU29pn4jTImFrMHa15+J8koVteyymUZ
PYrJl5i0xciHeNc555zT+iXFkCXHNDlUkWOefufla0isbiW1I0ng8zBmzJim
Y8THhXZIXvtVZ3uTpY8x7WiZeiiLpDodOxDfGep0SOrbJLVNWcfctVXLRl5d
lqdzRdpP+p9+n9tBm4ffGOtj+VTJm5h0IbvpppuuEU+BvjB2zNqVRe/loK/M
ejQxFGk/0+quovkT2z+LJbQp0DX8yldZZRUz/fTT273pyR/fLipqh2BLs38n
cTLosdurHj2nPDOHEMbeovvYhPiqEV/EWhGsw8E6G6zr4O+3QL4TSxHWf9hS
pJX3oEw4O5nxGtb+YE0R5mGon4lPYj5mxIgRHcZ9HKwJQZ8QHzrGTtx7cC37
yKILvKeDPEfXs9ZS4Z6McWD7kk7e2V+zAf1AbvxGvU88URHZMEdEDA1jCPRh
uZ50MlZO3CHr8eEzyP1pHyhL7OVKvcIxfuMc2hunE8zRcC3lnfkt9gZHR2LS
lXXvGWaYwcoCXSMOEJm49TuyoKwMGzbM+iExnkO+PvXUU43feX/ui89j0jq8
jpj0o1Mbb7yxTf+QIUOsL2CRvE7SHz7IlL4D9ajbTwt/CNoB8p+1FoE4dfbB
5biLKXFtFr4NrEvIWAjl1u1/WVe+7LXXXrbcsM4X9RBpcXVvWlmjTBLLyhw9
eTpy5Ejre+yI1YckyuppjM4k6U2RtOa9N5Sth5LKbMwz0QfaEq5j3C9vnUra
0bT8TpNRkbopqVyW0aPYfMlLG/eOkQ99cOr70A+lrByT5FBVjln6HZOvIXm6
laaTSaD3pI04ZvxD8EOlH5A0D5jVftH/qqu9SZNjTDpoo8rWQ2mQdvz53Xqy
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
EEIIIYQQQojuzf8BSOzn2w==
    "], {{0, 64}, {802, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{802, 64},
  PlotRange->{{0, 802}, {0, 
   64}}]], "Input",ExpressionUUID->"3eb6e60f-e1b5-4d72-90d6-d7f5dc45307e"]], \
"Text",
 CellChangeTimes->{{3.727359966485382*^9, 
  3.7273599704784727`*^9}},ExpressionUUID->"f0d96405-19ec-4b7e-a058-\
c911b005287d"],

Cell[CellGroupData[{

Cell["Soluci\[OAcute]n:", "Subsubsection",
 CellChangeTimes->{{3.7273627465766563`*^9, 
  3.72736274904123*^9}},ExpressionUUID->"7d0160df-6274-4184-a2ac-\
60b3d7896a06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MSize", " ", "=", " ", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[HBar]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", " ", "=", " ", "200000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", " ", "=", " ", "0.000001"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regionI", " ", "=", " ", 
   RowBox[{"Disk", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regionIBoundingBox", " ", "=", " ", 
   RowBox[{"Apply", "[", 
    RowBox[{"Rectangle", ",", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"RegionBounds", "[", "regionI", "]"}], "]"}], "+", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[CapitalDelta]"}], ",", "\[CapitalDelta]"}], "}"}]}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"regionII", " ", "=", " ", 
   RowBox[{"RegionDifference", "[", 
    RowBox[{"regionIBoundingBox", ",", "regionI"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{
  3.727362827750678*^9, {3.727363656710866*^9, 3.727363684717608*^9}, {
   3.7273637564927807`*^9, 3.727363761443046*^9}, {3.727397194094637*^9, 
   3.7273972285232563`*^9}, {3.727397276373005*^9, 3.7273972869266653`*^9}, {
   3.727398316893034*^9, 3.727398335788925*^9}, {3.727398502764608*^9, 
   3.727398518133555*^9}, {3.727398550631195*^9, 3.7273985557178*^9}, {
   3.727398596664693*^9, 3.727398596894458*^9}, {3.727398642013872*^9, 
   3.727398668045833*^9}, {3.7273987351674347`*^9, 3.72739874594424*^9}, {
   3.727399404528852*^9, 
   3.727399423007235*^9}},ExpressionUUID->"e94a0ef0-8746-4f95-b30a-\
fa1900216e78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"base", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"m1", ",", "m2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m1", ",", "1", ",", "MSize"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"m2", ",", "1", ",", "MSize"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}]], "Input",ExpressionUUID->"9d5316fd-dcd0-4490-8d9b-\
df3e5e904386"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]m", "[", 
    RowBox[{"x_", ",", "y_", ",", 
     RowBox[{"{", 
      RowBox[{"m1_", ",", "m2_"}], "}"}]}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "m1", " ", "x"}], "2"], "]"}], 
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", "m2", " ", "y"}], "2"], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Nu]", "[", 
    RowBox[{"k1_", ",", "k2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]m", "[", 
         RowBox[{"x", ",", "y", ",", 
          RowBox[{"Part", "[", 
           RowBox[{"base", ",", "k1"}], "]"}]}], "]"}], "  ", 
        RowBox[{"\[Phi]m", "[", 
         RowBox[{"x", ",", "y", ",", 
          RowBox[{"Part", "[", 
           RowBox[{"base", ",", "k2"}], "]"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "regionII"}]}], 
      "]"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.727362792337731*^9, 3.727362792552786*^9}, 
   3.7273987658680763`*^9, {3.7273994561044283`*^9, 3.7273995341277447`*^9}, {
   3.727399793920216*^9, 3.727399816321226*^9}, 3.727400312512454*^9, {
   3.72740040660463*^9, 
   3.727400409867332*^9}},ExpressionUUID->"6fd15d40-95ff-4d8a-8de0-\
d304fbdd9b69"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Nu]nm", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Nu]", "[", 
      RowBox[{"k1", ",", "k2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k1", ",", "1", ",", 
       RowBox[{"Length", "[", "base", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k2", ",", "1", ",", 
       RowBox[{"Length", "[", "base", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]nm", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", 
    RowBox[{"Length", "[", "base", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.727363394064769*^9, 3.727363402438777*^9}, 
   3.727400261720343*^9, {3.727400423016109*^9, 
   3.7274004245623903`*^9}},ExpressionUUID->"10b0269c-ecad-44f1-82bb-\
12b5bdd2c698"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.727400452555435*^9},ExpressionUUID->"0e2b3a94-70ca-4303-950f-\
e715e24e2a4a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]Coeff", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[HBar]", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"]}], 
       RowBox[{"2", " ", "m"}]], 
      RowBox[{"Total", "[", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"Part", "[", 
          RowBox[{"base", ",", "k"}], "]"}], "2"], "4"], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "base", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hnm", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Delta]Coeff", "*", "\[Delta]nm"}], " ", "+", " ", 
    RowBox[{"V0", "*", "\[Nu]nm"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"En", " ", "=", " ", 
   RowBox[{"Sort", "[", 
    RowBox[{"Eigenvalues", "[", "Hnm", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cm", " ", "=", " ", 
   RowBox[{"Part", "[", 
    RowBox[{
     RowBox[{"Eigenvectors", "[", "Hnm", "]"}], ",", 
     RowBox[{"Ordering", "[", 
      RowBox[{"Eigenvalues", "[", "Hnm", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7273637449131193`*^9, 3.72736381464186*^9}, {
  3.727363868809682*^9, 3.727363881704131*^9}, {3.727363918288472*^9, 
  3.7273639703581257`*^9}},ExpressionUUID->"3e483b91-7fae-4f50-b893-\
4df9b7131792"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cm", " ", "=", " ", 
   RowBox[{"Eigenvectors", "[", "Hnm", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.727399237218977*^9, 
  3.7273992377742443`*^9}},ExpressionUUID->"166b8a11-5b15-48e3-8122-\
0cacf67a5bbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"x_", ",", "y_", ",", "eigenstate_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cm", "[", 
       RowBox[{"[", 
        RowBox[{"eigenstate", ",", "k"}], "]"}], " ", "]"}], " ", 
      RowBox[{"\[Phi]m", "[", 
       RowBox[{"x", ",", "y", ",", 
        RowBox[{"Part", "[", 
         RowBox[{"base", ",", "k"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "base", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.727398885426364*^9, 
  3.727398995369512*^9}},ExpressionUUID->"8d17c154-f292-41e4-b427-\
5b15ab93e395"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"\[Psi]", "[", 
       RowBox[{"x", ",", "y", ",", "eigenstate"}], "]"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Mesh", "\[Rule]", "Automatic"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "200"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"eigenstate", ",", "1", ",", "10"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.727399332734105*^9, 
  3.727399362199724*^9}},ExpressionUUID->"f490a5a4-6740-4785-b743-\
17ea0865aba0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introducci\[OAcute]n a las gr\[AAcute]ficas", "Chapter",
 CellChangeTimes->{{3.716156519791831*^9, 
  3.716156525448053*^9}},ExpressionUUID->"953d73cf-335c-4773-8ed8-\
e67c4dc951f4"],

Cell[CellGroupData[{

Cell["Introducci\[OAcute]n", "Subchapter",
 CellChangeTimes->{{3.7273024854329576`*^9, 
  3.727302488185108*^9}},ExpressionUUID->"db01738e-f3fc-4b1e-be6c-\
776b1f68fd23"],

Cell["\<\
WL es un lenguaje de naturaleza simb\[OAcute]lica, eso significa que no hace \
distinci\[OAcute]n entre un tipo de datos num\[EAcute]rico como un entero, y \
un gr\[AAcute]fico. La capacidad de mezclar elementos de cualquier tipo es \
una de sus caracter\[IAcute]sticas m\[AAcute]s poderosas ya que resulta \
relativamente f\[AAcute]cil implementar gr\[AAcute]ficos con elementos \
interactivos, valores num\[EAcute]ricos y todo tipo de funcionalidades.

La funci\[OAcute]n gr\[AAcute]fica m\[AAcute]s elemental es Graphics[], de la \
cual se derivan todos los dem\[AAcute]s elementos gr\[AAcute]ficos. Graphics \
trabaja con elementos simples denominados primitivas, por ejemplo:\
\>", "Text",
 CellChangeTimes->{{3.727121616017247*^9, 3.727121760611319*^9}, {
  3.727121805835166*^9, 
  3.727121880386994*^9}},ExpressionUUID->"264c1eae-a2d3-4e70-b528-\
6c7d784c7fa7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}]}], "}"}], "]"}], "]"}]], "Input",Expressi\
onUUID->"1d71b48c-a049-42b1-9004-451a3de90d18"],

Cell[BoxData[
 GraphicsBox[LineBox[{{1, 0}, {2, 1}, {3, 0}, {4, 1}}]]], "Output",
 CellChangeTimes->{
  3.7272177536656847`*^9},ExpressionUUID->"52bebc75-ea5f-4dcd-948c-\
696e2737b941"]
}, Open  ]],

Cell["Es posible combinar varias primitivas:", "Text",
 CellChangeTimes->{{3.7271219019697523`*^9, 3.727121909921969*^9}, 
   3.727121960634077*^9},ExpressionUUID->"afbf9e08-dd32-41e8-bce1-\
8a0672aaab10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Disk", "[", "]"}], ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727121893674402*^9, 
  3.727121898506373*^9}},ExpressionUUID->"8330eae8-a0df-4548-b1d7-\
8fb7578e6e1a"],

Cell[BoxData[
 GraphicsBox[{DiskBox[{0, 0}], 
   LineBox[{{1, 0}, {2, 1}, {3, 0}, {4, 1}}]}]], "Output",
 CellChangeTimes->{
  3.727217753689028*^9},ExpressionUUID->"7afc8be9-cc62-4481-afca-\
c14f2cdaf476"]
}, Open  ]],

Cell["Y establecer directivas para cada una de las primitivas:", "Text",
 CellChangeTimes->{{3.7271219459460897`*^9, 
  3.727121957930337*^9}},ExpressionUUID->"1abd5def-91cc-4396-9f2c-\
b6319586ff93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{"Blue", ",", 
    RowBox[{"Disk", "[", "]"}], ",", "Red", ",", "Thick", ",", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727121928562833*^9, 
  3.7271219424748363`*^9}},ExpressionUUID->"4a9f3c82-c485-4e47-8457-\
0887f5cff206"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], DiskBox[{0, 0}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    LineBox[{{1, 0}, {2, 1}, {3, 0}, {4, 1}}]}}]], "Output",
 CellChangeTimes->{
  3.727217753858059*^9},ExpressionUUID->"a85e2b59-c1d4-4098-a1f9-\
23bc9774870c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Gr\[AAcute]ficas de funciones", "Subchapter",
 CellChangeTimes->{{3.716326417738494*^9, 3.7163264201716623`*^9}, {
  3.72712046097309*^9, 
  3.727120462580867*^9}},ExpressionUUID->"acc7597d-afe5-4d7e-b127-\
99831f31aa08"],

Cell["\<\
Para efectos pr\[AAcute]ctivos uno no suele utilizar las primitivas \
b\[AAcute]sicas ya que existen funciones que crean elementos gr\[AAcute]ficos \
de forma adecuada para graficar funciones. La gr\[AAcute]fica m\[AAcute]s \
simple se puede crear con una funci\[OAcute]n Plot, que grafica funciones \
definidas en los n\[UAcute]meros reales.\
\>", "Text",
 CellChangeTimes->{{3.727120435476811*^9, 3.727120471162619*^9}, {
  3.727121976674344*^9, 
  3.727122071587111*^9}},ExpressionUUID->"9e5ae142-9447-46f3-ba72-\
72a1e7715428"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"6", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.727120447601584*^9, 
  3.727120448827628*^9}},ExpressionUUID->"ae7119bc-56ac-4038-aa41-\
de90c1c24ebb"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwlWnc81d//R8ge1977Cte4orSclxahKEKFltRHRaWslBINSYqGqIxKElGi
jI4iUWSE7L2598jefvf7+P11Hs/HeZ/nazxfr/d5v+7jqhzx2nOMg42NLWIF
G9v/1lBFkY91VTGmNQr/vzbrVb51SPdFTh6+K3ex1rxiNX619BtIZfN7HzbW
miq8az1v+iP0Votj+HLaI6Rm3L17IS0ZqR59rPYnNRm1/0hrnUzLQe0KVp27
X+agTaJRSWNpP5Bn0iEZz9s/0MjHUO5/aX/Rh4z9y1Hqf5Gdcv/+ePEGdFA1
5rphyF+UG2bxzuZiA1Ietw2J7v6Lbh7kd0q3aET7PBIFnyc0IA3eeyknu5tQ
ZLr+iw+yTcjVOc66T7oNGT/edHolWys6cXVfGcOsC9UHOuaetehEcWvCvLdd
6EKZTi/173l3osrhXIWnr7sQ5yXLT9eedaI1DvLnrIW7kdTp2h0d452IU6dd
NrWlGykPbvE+GdeF4mvdTp3w7UVqS1mPT/Z0o0bNM8LdbweQn2zYmg07+5C0
aUDOn5YBBLktLte8+pCTfcjBYoFB9KflnnbMvT5Uf+Xxu5enBtHgwQfBtLo+
VNNYaHOCNoTqW5WHB/f1o/LbopGM1GHkVeQqGLRvAPEnypm0NQ8jzRfGby/7
DSDLTxodv/lHUPtRzYPmjwZQWc86g4yTI2ivdQDDsHYAlWw6UnVOh4G+J5AN
J60GUSF5LzLzholw6xZM1R9Cy1wFnwaamCga89s+thxCpvI/DjXyETT6/E/b
72NDqMCiOSPXgyC+2RiOsNgh1Fp19bWpxCjy2fuhjs45jJq03liw142il3xa
8+I/h9Gc0bu42ZFRxK5h/y+3cxjJQNboP85/6MD2PDvV2WHk5PDlcZfRP8RT
nn7bSHME/Q2uGSiK/oe6HfVph6+MoNrmuZvX7cfQbbG16hlUBsrZo3uZ+9QY
2nS0yWt8HQM9KTvoff3aGLoRE/Ru2pqBDucUu1x/P4aiFc2Obz7HQMz7EYbX
RcaRfku8S8tnBqrm/arJvWoccfQ9HVL9xUBZV8blr6NxJB180lCrhYEuejqt
vO45jmpr5Q+dX2QgHkvVltDycTQzWL6bfRMTDRfaV3P1jCMhzouVZtZM9Hvt
jZLQ+XG0f9HrHxxgogcaIxmh2hNIsdk+IcCPiVTZs0NDb06g13P8lg3vmIjL
byCAK34Cxd2RCeIrYKIBpuyZ0JwJdEBR9dhcGRO9awnaH9o3gW4OidZRuplo
46cd+qFbJ9GdDbb71SgEKekHqnM5TyIyQdcCBYI4XqXLhHpPIoHya40yqwgq
ixLjDE2cRAHlJ66u2ETQW77ts5y5k+ifbLuVmDlBkVf9mCHVk+irYfjTdluC
HLxaG0LYplBTaWRw2lGC1vUJ/+aUnkJePx0Z6acIknfZXBSiP4XOjxtFnLpA
ULdlclqI6xTi0HbSlL9O0Bnq2eCQ/Clk/9zll+ULguyeJvly1k6hhzFjUzqp
BK0Rrz8VMjyFAsWqq0szCVpk3+AYIjuN7n1nOht/IajD77Q1p+E0kp04NMZZ
TFAxeW4WsmMaVZQGs0eWERTWykkL8ZtGDx5FuzT8Iei0/VoVzshp5CnqEP2g
gSDbX/9JhiRPoz+HPKSFWgky2hzHz4mn0ZkHtA6zToKkPv9mC6mfRne5wrsM
egma02efWsGcRq8OC0g1DxDU9mr18DWuGZRU8v0CjBD0VcG9Y4XCDFr47TZ9
iBD0Ivpx3TWjGRSYqP1g4xhBJQz/DPZdM2jGec6CZ5Kgwe0Hbgcdn0Hue13b
gqcJEojf6L54ZQZt/8Jv83aWIL1ZBbOLT2ZQ0bfQByHzLH/3LMvNfphBz6MV
0vgXCTqX2jHlUzGDpP3G7pktERTN+a16om8G5Vf8A+oyQTkuSW/Psc2ijbJ/
cz6zcFN2yI1RmVm0SoA2Oc/CC8LuRzxXz6LkIIuZERZW/M9804j1LFK/sudr
OAvDt1XSHu6zaNDcdHczi/+IHN94f9Asyt70O6WBZT/0/HDFsZhZZDV6vyJk
gaDXFeWvu9/Pok7hYdw+R9BPavq1w+WzKPHYitDBGYJGgu66tvfOIp6yepXE
KYKEG8+sc1meRVvE9OJ4JwgyNNwj3iw9h66KxM8p/SPI/vZq4mQ4hzZ43dva
yyDIp0f8Z73VHDqVZhS8b4igmE1TL+yPzaHvK8LyA/tYepBP+20fzyG5KRub
KpaebDueGP/OnEP06uICtkaC1BIvilj/mkMFfBP2Hax6OGFvWmK+NIesNJ0N
00pZ9ZKmlPBdah4NtHI8ePKNVf/c7IFb6POIfw/atzafoH+fiujIbR456qtY
BKUTJE55KVBwaR5RLsc80E5m1evJ6/3rH80j0UXrsNDnBAUo7Hi65uc8chCo
yrG8S1Ccj7ZfVvc86hSskfnIqn9cyW9nuDiPkj97X6i8RBBn8G8ePYMFVNad
fV78JEHU5nfdqTsWEHd9tzk6TNAOo3tftI4uoKjOEm9ZR4Ii+uzOazxk7U/7
buoyI0jaqrFdfmEBSTsox+aKEbT+RW7uE4lF1NwiRD+5kiCXxdgH0vqL6HpX
zoqKOSZKfOdqJX5kEcn4KHa86GAiHfGebP7SRaRQJ62Z8pqJTFuZd+ailtB2
7TZudW0m6uvL7y9OXULCY4a/lGWZKGI0zOxu0RJq9NrG0czLRO0rNCfVxpfQ
pTOK+24OMNAV7YPOO/csI761vAU/ExmoM++4hC0PG8g17qoX4Weg7MJdm43F
2SC2/HbX1NQICvtu7CWrzAbzhtAb1zWCDCtXlPWsZYOfbI+CtT6PoOCu54H+
x9ng17vLOpZHR5Aab0N3YgkbbDm55P2Hda/NCGKRmzVs0GTMTa+MGkbllFeb
TrexQYDx58k7F4fRefnzj9ZOsQG7B/X0XsthVKwvYlWuwQ5d6ncolN4hdMzB
4v1kCDvEbd7Y6i08hJKTPl2x2MIBitpqSlfXDaAnMr7xNFsOWK8VHp8hNYAi
7hoXirhwQN0talTCZD/yufh+ucGHA27Y2uiVZfSjrXZvL//3hgPmL60WWafe
j7o44gPDRFdA7WSRxshyL1I8csOvvH0F9H3aW7vlTjeKVnY4YxvIBT++zlab
67YgD+vUQzM3uWDFjZvHNtY0I+THtjv+ARfQrZSdhn2a0VDlG/poOhfcKkCM
i7gJQdDy2N1OLjgRb8R2dWcjGml9faFyOzdYDwtS+1zq0dbY+YBdoitBc4P5
jwcOVWhSIiHU+hUPhDi/l+rpS0cU+WC/hhh+iPNyipX2+oMtRTViX77ih0Nf
+T/fr/qDg7lLC8594IcFNifZJnotHhsVXCFYwQ+vcwaLysdrcc33mDtmbAKw
N/rTA+qFenzfKzPxjbsAHFosUqw71YjFijrKA1cLgl5XalCoVju2/nSN7ABB
GDZqq60KbschaVSK1E5BcD3eHPCruR1PPDrlmOkuCLSAfQ+Obe/AtadmOntj
BMFRdm3m6ckOHC0pMr2LTQjKvsWpmFp1YXEPpKJSIQT/KmnjwzU9+G6O0zXx
RiFIKPW8ozzdg/m4zvWu7BWClog0V6pcL2aLf5HCXBCCR3VLbi+O9OKROl7D
fJowpO9StT1MenGxWe1mx3BhEL7hHPhkuQ+ju4wXlo+FQUWo8VuBcj/ObeFe
afpCGDqD+k+lmfXjDN91v9TzhUFsg37JaHA/jkt7Zjc2LAyvKyTjlzkGcG64
0fsSDREIfOrIzzY7gP1Wmx0t1BGBRJ4+6VLJQWzctFM8ly4C2/a/13IyGsQZ
msd90jaJwFW1+J2VnoP41beY9dF7RaCD9+V1Sucgvj+z9O1wqAhknIx4/jF3
CP/nVvZnoUcE7A86u1fBCJZ2VzndMCQC33ZL8nxwGMElx/25s0ZF4LuBRbfT
qRGselJr3ckFEfjX3BnOeDiCW87eetYoJgreJqafjQdHsG3Qjv+yN4tCs/n2
23LBDLx0JYHjvoUoXDeeVlGIZuC04NnY07tY+z/cdrS/ZGC+6ym/1feLwrX1
ye9flDJwUTivUdRZUbj5madPn5+J1zwpW/KKF4X1Yy07tUKYuCdW5bHVK1Hw
V3uyWe0+E0c99adrvhWFz15Wyc3PmXg0XsutLUcUXHe4Wd3IZeKU5Ftl1pWi
MFxkNlgywsROKZ1HVtWJQmlD7NbMGSbmTl23sKKZZc92dvU+ToKPpA/q5fWJ
gnuwzclOWYLlP+6I1loSBaHm+KSqrQT/zE7Q5eKkwEWKB8fLXQT7f5ot6eCl
wGa1zo1rnAiuz0uZfSRBgcDDDuMRHgSHFLBHectRoGV43tzBm2BDvI9mo0KB
SpdnWk0XCb77jfcgty4F+r66WkmFE2xafHim05ACDptTTlRFETzy/fO9AhMK
PBO1rNgWS7BF2X/F57dSgMtBXfdYCsFTP7+62FpS4LuxOJ9wBsEvy2WmdWwp
8CDgx7/z2QRzVJVpdR+gwElnzdTz3wiGsDsbTY+w9ptdFENLCb68dbdNzAkK
rHi4ym7bb4Lzl8SPTHhS4EcSx4aPfwie/9Rw3uYCBU430ktrGwhe7x13481F
CrwaKmEktRLsp3voCVcwBZhhT5+rdhE8kdCP8yIocHP+wkW9IVa8zqk1kg8o
kLlB814eg+Azkl69Z2Mp0KbgzzczSnB6leFMeQIFts+g9u5xVrxhU3yrXlOg
NFeOJ2iKYO1tuQrX0ll87H6Xy2YIPrF8yaAtiwIRGuEbi+YIfvXZbMu6PAoc
sjqw6dQCwb3eXA7RXykQ45UVWLxIsLpe2QnygwJBZw2nfy2x9B0Iv2j5mwL3
5Ta+CV4mOD7RNuJlLQVUtTmjB1i4zVk8ga2ZAnU2tz4ssrC8VMOHA50UMDJ5
yPONhfdXx5Zk91PA4ObXKGMWfnz7YKMokwIpLacdnFj89dvURk5NUGCopGyP
Nsu+OFv/0o85Cmj/qLydOk/wntw3omrsYsC1bTtXyyzBkec91S+vFIPpUFyU
N01wpZ7h2kZBMShPiCm3nCRYaHByh5G4GMhdWNK4NUawddJn57uyYpB+r7ve
hxAc5nLJa0hZDCZpfP1iIwSXSpkFb9MUg7MCy66HBgjmruF8EK/LOn9G1sK5
h+Ct4aXJ86vFoHou6O3KDoKDt4fnOqwXg7zHio+ONBP8lc22IhNY/EczxE7X
E8yWJ9YhYC4G0aG5eprVrPq88Hfs+E4xqJS+Mxn5i+DcQVdpxf1i4Nn9FXtj
gmeSVHX8D4mBR9nnzpFPBK9x7dtU6y4GGQYvRyTeE/y+5vTRMG8x0DZdvcIv
ieDUvMD0qXAxyNV3sbgcTPDQBfi6O0oMdFbGfPXzJ3iVAWft2xgxMFq7UKR2
huAXL27PHnklBqmqqOi2M8Fxd55srcRiIMOZduYVneAmc1dH7RIxoGnHjmlS
CZbmUPUILWf538NbtZ/Vzw98Uu5uaBQD++MuEnXsBEcc/NSUPCYGfkoNG5Uq
mJi5ba3gwxkxYMcP1ikXMvFOWjYKWRIDd1OrZ63vmVhg9sOLQ3zigPzKxCMe
MfHt++88ZVTFYUrnNV+ZCxPf/P6K4/Zucbj0/kVCUSsDD6RqGPs7ikNxiC7f
k3IGNr//4vhxF3F4yDf/Ty+PgbkPJpZv+U8cBN7LNkY/YuDQmacPF66Ig1ZH
kdPenQwcrPNA2zNDHIRKZG9XvB3BXaLiLs7Z4nDP25zy/NEINpu5f9cyXxy4
TvRjevAIZvseOUEtFQf3gTNWsaz3d5Br+Jf2dnF45bvlVMjCMA68d23PbmEJ
SB7r+9u0cRj7Tp8NMPKUANrBJ1/F7g1i94fO1MTzEuCu+c6B69wgdjA2rxG+
KAFsqVGrP+4ZxEbe8trDNyTAh3uCZ7fYIB5jljQmJEiA58FRteB7A9izT26d
cJ0EOL2/aSHOus+O1X2fHtwgCVcuCd7yWNOL7c9nJDluloR7p/7J/BbuxVvF
Ym2+W0iC4huRbfMDPVh195nk+L2ScG1j0vyHJz24o1zW0dFLEtwnqle8me/G
zsVe2cWJknCrP553RVYXtvsgc+E5rxSYNL6OdmTvwEZpNrxEWArEQmx+SqW2
Y/Hk0KemklKQ5uL0iG7Xjmuf/PveqioFldmBKoGJbdghuExSfqMU7FB6LRa6
qRU77fb/9NhTCkRCr+VpuTdhV9Iwf++PFGS3fU2av1GL/9N5HBzyVBoijvXt
4LtWiFtTOy/TJWUhR1qgqW/jb+QZZvo2Sl4WPOddHmxaUYnY/ottnFSVhZP8
TPttZZVInbrXKFdfFvh3ybIZvKlCHvGlg5t3yELj2cKb21bXoKnod/b2gbLw
ou/726sb65DI5Uvavl2yQPHZ9yhUvRklOjc5Ng7IQuet1PLOK81o9Ya1oRsI
y56e/tR0SzNymBltX56XhUV2t8Bd0S3o6Tm3Bzcl5GDdrfzmsOVWpH3ciu2J
hRykVLsV5x3tQFtsZerz0+Xg4dSuqiD+bjS1n672PksONHbEJXyid6M3x3ac
Sc6VA0/lOy0ljt1I5KI/3/0SOVCcnN10JKkbtbxsND3eJgdykYfDbpv0oPPz
McmiQvKwSajB/dD+XvTylay/+2l5YFONUh/070dOmYYlB7zlwcIlXnv1k34k
kG8ptttfHoILL9dY5Pajc9UBaRtC5cHb7uhw3Ww/Ml1o6hR5Kg/vLv/3wMtn
ANXvjrXMK5eH9esnmG7HBtHKRTl5EZoCXFTnErsvPYwsC593hRgqgL+d9d+B
1cMo/JpayqyJAnx0qCqY2TWMKHw6a7q3KYCzi0XD5pBhpCi13jb7oALUahbk
+g0PIyO6U4hzlAJsF7nrQn87gnwnmi2rYxRg69OlP3PfRlBuzkHR7fEKEPGE
38W/cQSB6fFn+mkKYKF7oCCai4GsrHw+cfxQgPEXey6b7megI8eiR17PKcBx
9RWlepMM9HKV9AcFdkVQKn0ar7+SiQaGY/3vr1SE4pFNqEuaiTzPJXEHiisC
Zx+RdN7ARP5B75Vt9BRBvTXM8WkgE+VvXtNfZKQI9SaGwZrhTLTElZtmskER
uo/6Sx+JZaKQ8K/rVS1YuIlrqP8TE0XGVNlPHlYEC/Pzi/RRJvrjbC/ncUIR
KId/H9iwyESSyg2dbZ6KsHJg9fI4L2vefNXuWXpREdZtcbt3TpWg9v+OGm8K
VoTMOwfBRI8gVd3++cybisDV8CPr7TqCkj8wb8Y+UATpxr2+CTYEDfmcsxGJ
U4Q3TRbhKvsJoq2fkghNVIQv3FsnbNwIel+4mOj5ThHGloTtc3wJ+lIhUGBW
pghphn/i054QNDbcfPJxpSLIu523809kzbN8qbKkThGC2wcfTKYQdGf7Dr+4
LkXIixkMWs4hqNBNWnN8QBFuK6/mvPOFoIng/rodRBGqGyurfxYT5IxDV0/P
K8JxbVl+xyqCIlvtu3ZyKIH7vtJ9L+sIKp5Xu/eCRwmEVv/KSWoiaEZmHM0L
KcHCo8fSe9oJ0jH5xtwtoQT7tnmdyegmyNXh3tPXckrgNuaQ9aWfoPvnD1kv
qyjB1EnlpsBhgkru68/vXaUECunHGoaYBM1lLKW81VOCd/O3XvGMEaRXWeG0
wlgJmOOfN9ZPEHSEEbdy/wYlMHg1HGU3TdBD/lPZGWZKcCOp7eWVWYLKtDYc
W2mhBAFC8qdd5glaMOcTd92lBJ9fT/UMLhBk4N74LcteCVrawnipSwS5hbw+
y39ACbRrvvwVXSbocaKv8pHDSuB6aPPONBYuL9xe+em4ElzUuntihoXZ2iUu
C3sqQWzUwKpxFjZa7KG5n1eC3+UHIp6y8HG5rOb8ACUY/4ljpln8T9ZdCxO7
qgSJOz5as7Pwb8c96zxuKAGl5FVKLssfDh+VgcI7SsDjX/pBjeXvmujRh1LR
LL5d0l4bWfF4vMfbPJ8owapWlw5OVrzPqiImiuNZ+XXUFrzEykcN0yVJLlkJ
1K80zL/4RxCXoO6ec2lK0BwT/iGQlU8TnQW2sg9KcNLeaCMnK9+ndvx6p5Sr
BD6frz/bwNKjNvQ/wYoSJSjrmZTMbSOI54VJvlqFEvBneG5mZ+m78dvKkwF/
lEB6bse5mVqCkpZelmp2KIGybjBluoygevkLvpf7lCDtz9VnS0UE8W3YSq0b
UYJiPS337AKCzvl2XQueVYKCetuBNRkEvXyQadi4rATBW7KLl18TNLKvcFRq
hTL42dxR9k8gSNnv7nNPXmVYX0wSL90jaP3K6akYAWW44PL0H88tguwfuu76
LqwMk/fYRLZdIehmlu6inKQy/Jr7JF51mqDELQ/szWWU4aPacS0lVv/k1yyk
npNXhhTnQA8lVn+Njv7aX6aqDFrDIn9XbyPIUdfjk4++Mvy4FLrjnRRBwXve
PT9pqAzJGRsyXAQIeus7cf2QsTLsOLNhYykbS69vl/dablAG1yWmVs0AE711
iBpTMFeGWyOHt+V/ZKL6iw2NFEtluOEUmbfrNROxJyh8XblTGVIPZ9GfPWEi
h+Hku//2KMMHZ7mH5y8zEduVfNp3V2U4to4jhWMLE2m/ZBfPPawMt5t8Q66s
ZqK9P7fPp7spw/3cVQfz1ZjojXh12WMPZeDf/DzOcwVrP6XX/ZSPMrzWYFf+
ihnoTY1QgliEMqiH5LogGgPVTtvd5LnH8r/WNjxdmoGW5WO8FqNY8bWbqLdx
MpD9cTXT/hhlGI79simoZQQtz69tzn2pDOx2ylMVN0eQvcZhiSMFyqDrnk0v
qRtGS74fbmWMKENBPoVybfMQOuOfrttLlGHNCb4SUY0h1B2QUi0zrgyM1Zdt
XFYOodJLz2WuzbLyFfxdnPZrEN2/djtlL7cKcP96M5xhM4iod4+WzSmpQI3M
Yb5n1gNo1ysx3m12KjDXm3Bzn3QfKkwWSvN3UIFSkVt71cZ70eoU3t3p+1Tg
Gb35S1ZFL5J+u/xY6pAK63053a8f3Iu6ModXDZ1SAYEXlRvuD/Qgn4Iii7vX
VaCPK3fMJbUbPav1vtn4WQXWOwpu6eXvRCqnrPP/5qvABScVI6vuDvRihcZo
HVYBA8lddrdzO1CqYb1jzXcVyN+381bsiQ70KdJE81e1ClQXqf7gv96OaqwX
v+cPqsCjT0/SkrtaEPf36yviZVSh+GBGTsepv+j0x5jL7v6qoKthm+jb+QPt
m9C+bGCsBrSyrojUihIcJ9F+5KCJGoQd61/P9fAH7lgTZR6xQQ0cy/I01VxL
8Qn/eZERMzWw/5jfkMQowz5Lv5KSd6mBUUjZzqu8Ffg+z+kyxRNq4JDzakNA
TDUul38nLhirBnlD3txRz/9iEdOjsxueqcGKmSo55aW/2O6gVJtHghporTf3
OOPcgJsSgpJLk9Ug4bzvtIN0Ix6k2q4PyVIDlU3HGlTuNGFu+r+D8xVqcHhl
Mnvnf60YbVudOsimDklvK/Taznfi6IVipa4V6sCeOrs9Pq4TD3xwiG7iVgej
KJnQDcWdOFI14NIvAXXgKhSSXKB04a7lQps0aXWgRNaJxqV34ZDcXRNnDNQh
km35t0BbNy7T99g0c1Adcu+7xHnJ9WFF1vU5ekQdTru9lc/a1IfPPbtDHTym
DhZLL8N/HOzDsoKZwk0n1UH3rYPw/qQ+fGpoujPPVx1qzCqvaqzqx0IvQ68H
3VWHDyH0J5KrBrCdbEIlN1aHL/PF6y4tD+LRtAE29E0dLjy0pbspDOFwMwND
3+/qICctdmnlhiFcfAJH9/9ixXvyc9vVC0PYKKd1X2mDOoiOv7y7qX8IS9rL
9twaU4esezoK9wqG8fv+wxLfJtVhddDXNtm/w3jXxZTtczPqoPJp7KLz6DC+
kWiS4rGsDsduyWzlVh3BM6MOnlYCGkCcLUQZV0dw052oGQGqBuzL4zWtWc3A
PirNWtu0NCDvwts3+RYMTPmoeuASTQPOJ0oZH3BhYKuWzAKGoQZMPrT7/SGU
gfO1q4J/Iw3IcZr2qKhhYKcvUlncWzSgiSIpY9fLwBO7D/aabteAHZnrbG5P
M7CuP9P8nbUGiN0KekSRY+JnPwQEI/dpgMjrD899XZl4/QF701JnDVBx0I0M
92TiemasF9shDfi9Q+LlnstMLCypU3PGXQP2n7gU8y+Oia+47Xi021sDaHpp
7j71TCw/E1l6y0cDPFpW6Iv0MPGn2w2zX/014NCZbcP7/jHx6PvjzoZXNODT
zafZC3wEH2a/riJ2RwN2Hvm4MnA9wT6bx7dvjNSAo5EKxa7bWPP7tUOnjkWx
sNcP93EbgrO4NuTkxGgAXxOZpLux5vntr1s64jQgs6DtXfNpgltvSHDwxWvA
0yujQ2t8WfM936i18ysN6NQqvcF+i2A5K5dzoSka8CdXseDMPYINwn8+Sn+r
AVrks+y9GIL3Cb3sYvugAb069ks9rwn2tKHwaGdrAIcKv6t0BsHBkUG6dp81
IHTMJ2Yhm+C3lP1+L7EGqHHvP/i3iOBCux9Pf3/TgPwz2WUVZQTXRRsVTX/X
gH9O9yvPV7Lm97qEAeUyDWj9UnmkvJbgJUlhIctyDVglLOVT20iwmFPgau9K
Vj1s/bsQ3saa72MGneJqNGAN9/bhyS6Cd8sVJzEbNIC3o/9PwxDB7s70MqkW
DVBOOZG7h0lwwNNnTGjXAPv7qzsD/xF8t41f3KNLAx6YHAbHCYJfKPmvi+rV
gCT/6qrOKYI/HepzzR/QgJZQnXD5WYIrEuxCeoc1QGa09dTKeYK7ugpThIgG
ROYpeiYuEDylple5dkwDqo4P32YsEsx/LHbi0KQGfJvjKRpYIlj5FY9s2AxL
Xx5O0ehlgo36L6AP8xqs+8zgPGHhHau63VqWNKC7+s3wHAu7/mcbxsVBhdWp
e32zWfjcm4J3elxU2GzaIqXKwjeGtesceaiwXz7z9yYWfxzt8dwVfip8PiX0
jJdlP+M0l/IbISos9k3eDGX5+z393LY/olR49ssgKpMVTxNp91gQp8K1Jpuv
d6YJZhrsjNSQpsJd81Rp2UmCV5zL/bhLjgp70o48dxgjWPqDZrOvIhVyFp2d
txCCaRPRbAkqVKg4Y+HYMUywmTEH9ac6FSLPPnmsO0Cwg4+X1bgmFWpu3tXS
6SHYI6fljLwOFTS264g3thMcNLPj4TY9KtRRTY6ubSY4el1OniedCgsB5qrb
6wl+HaDe+ciICrEWmS5c1QQX5N3j/rqWCl9o0aoXfhHct+nUbjFTKqQ3Kl11
xwTPX2702WhGhYPPe00GPhEsUrg97thWKuhpu2bLvid43WaV/hxLKpzfpGZ+
P4ng8O31gc6OVGjttS+vCCb4vYKKoc1+Khi8L7txPoDgvxMn+81cqPAv919r
/VmCVZPY92gepYLn++qXvw8SnLNM0xzzpIKob2BtuAnBLfW+LT1nqSBfqX6f
okcwR/q3e3/PU0F5yifSXo1ga2enhfwAFr87T5qgIKt+Pl2rvnGdClrHwqQc
W5mYJ/L39YBbVJCuULv5tYqJdY/LbDwdToWlslWcg0VM7Cfx7tWe+1R4npMa
4ZXCxELnmi4qPKMCrahU0fUsE6/ToVM/fKTCh8sSES0TDOzKEdj88hMVeC1f
c1N7GDiksSTycR4VFB/jcL0/DPz7hvP8pa9UmNl9ee+lDAZ267lRZVFBha3u
vJySJxg48mlbQFsPFboKTCcdfo3g7PNaBtX9VGipv4+Tskdws9X53qIhKsh9
vkl9nzCCqXO8timjVCg5039F3HcE5zkYa5xfoMI3u1/BE4ojuE84vJJXXBMG
EzitrY8OY7uicLONUpqgkBHwPstiGBf63PngKasJbT/FD//VHcaxrRGP/ihr
gtjphRTr6SFsm3rv4FNdTZA9tPbx0vUhnLf9ETEw14Qzk813ccwgjryUKOwU
oAn5N+YE6yP68aJB0tWwS5pgZeJwVeZUP/boSRrPv6IJO5OXZVV29ONtVi//
qtzQhCTTLZqXOfrxnPTr58NRmjCZWR3hf64Pu2Wl6QelacLf9debSsx78brh
TzavOjThqIznkyM/u/Ano0e7E7s1ISa1jJKc1IXXXL5g96xPE5ROWfN9C+zC
hqKGjg9HNMGjNqI6UK8La69Ndb0+owk/7VxshSM7sey1p6fdRVYBe6bI20mr
DjwnG3ybCquAbhdXc3tPM86ztPrx6vkqsEhIKHmrUIX38+yw6NmvBT1ZQucC
j+Wjx80c8yKuWnDMcstp/dkC9Dc9P23TYS0wVSnsfhiOkf1eA7FHx7VAW3Iw
Y92+r2hnolTbjvNa4NR9q242sBjBxj7vd3e04IKvxX+7cn8i6plrzwMKtcBD
kbyzDPqD3LZs2pNcpAWbt8UoT7T/QUmS05y1JVrw+5j45ZNQi5QLPDx0K7SA
7Un56kK2OiTDt8e4o1ELbN9TJPov1yOBF8q/to1rwdCfqV9OZxrR2N+CKRGq
Ngg1yzs6q7QjM7O961ZqaYO7xcY7fOfbUeSbkYuLOtpQc4FR4l3SjvQuybEP
0bXhyvld69Ybd6CTqv78RZu0ISFe6Pqdvx2o55SR8oW92rBqoJlGl+hC9eyp
OxpDtGGN7zUzyrkepHFyc3jlDW3ISL6SfuZhDzpf2/j7e5g2/LkwMJ6Q24Mo
yTz27yO1AVHqf17k6EU21u6ut+O0Yb29oRhnZC8qfajivSlLG974JqWrJfah
zzqP4xK6teFoucRoTPwAsj3bG/u3TxtKOUpHzb8OoP5sw1jBIW1QeyWnlt05
gCQ2V8T4j2qDd/bo72qVQXTWiePR7kVtUKa8NV98Noi0Qk/dY5fSgcYQJm97
+BAq/Pk5cq2sDmxQPnLMI2UIOYqsjDytoAMPu6x4Mr8PodDYhIhGNR3YaZbG
7rU4hDoz629nGujA8bH+yZf/DaOYNrh+2FIH5I3eVhYZjSAD9YjQRzt14HdH
G0e39Qj68V9zSIUti9/NcetntxE0OXHh2jpHHbAyEl+8FTWCdvOnXhF104Hr
NnN5HxkjaMB2Jsj8uA4EjPvVXF/BQEEPtwVd8tCBz0qByoIyDJSm0nFp8IwO
RPP1hZpsYSBeE4mLXy/pQJ5SWDRnNAPFXzoSMH1FB4Stda/4JzPQ2qJ3/roh
OuB07OtCQi4DHdtl6RcTpgM3by50C3Qw0Fe3oAtnH+nAqbWVRts0mcj/3qCX
SiaL78byF+lkJlI+Lb6snKUD6w6f35qfxUSlFihCOUcHEOeTH7LfmEia7cFb
pQIdsKg9asPTwkTZnjCoUKYDmyX+mSWy5ldXy5N+CuU68DP93R1ZaYK4qQ9X
KlTqwMri8mlrNYL2tg5ryNex4o2RKmo3IWjC6tER2U4dqEuTiss9RFCc5rd/
Mj06UFGfvJHdg6CtKxhXZPp1YOZj6BZ2b4Kicjc/l2boAIdA52rdENa8/vC0
nvSoDhRy/5hyCieo6+zjAqlxHdCVLK/ZFE2QoRazWXJWB2hqLXcNkwhq4pQ5
KbmgA2sOWdpsfsOavzu2zEks64Bb4LMevkyCqh/FSEtw0eCe4lP7kgKC/LyL
k8V5aLDe6Q3lcxFByjZkjTg/DVKkj552KyPoDPe2vWKiNCiIvFLS84cg6S6v
Hoo4DVQuWKV9biCosOCJN0WKBlWeEezmrQSdiPnOQZGlgUOI0OfwToKEL4ze
E1WgQVAa/WdYL0HZtnIqoso0GB1Y0jEbZOWTtj1DRI0Ge2wV69+NsPLJcxaJ
UGkgpNNYWE8ISu+O/S2sRYOXyzK9H8cIcsAlLsI0GjxLOrVx5yRBS0/+jQjp
04DDcqkwbpqgVz7ygUKGNPCLfHr6xSxBO/eY8wsZ04ARlrvJbZ6lh+65J4Im
NPhb4a7bssDSg/epluAGGvD67l0nsMTSo/fHJwFTGigbN7tOsPBI4Zi5gBkN
Lu9kxrK+t1B0nMJf/q006I2nkv/9/2ijn4U7vzkN4tILHBdZuMfOe5LPkgZ6
DyPqvrPwbf1nIXw7afBFSvK/7SxsyF8mxmfL8uf+ObEgFn9T33girx0NHDnd
6r0WWXp9UzTkdaBBMrt1ljTLP+1nO77y7KPBmizdDP85gmr8z9vyONNgV01a
xf0ZggL2Pm9feZAGEw8pom5TBKnSf3quPEID209bghjjBJUJTC5yH6PBK+ef
Cvr/WHoOKN3hPsHyX7B6bBWTpWexpTz3SRqUpqpxNQ+x9LsYv57rLA3OBXKw
negm6Cbnv4JJbxpQAmV8nNoJen3HzKzPhwb9K1IonM0EDT7vMv8RSIPU6/q9
4dUE8Wmt/pUTRAO2mcf6HuUs/99f2/U6mAar3h8s4/hBkEex+t5bN2kQWGwp
655HUNjOCw3+t2lgGBMyZPCRoDf13w94RLDy6b99Y046QUMD7kesomng8now
biqeoJOCKV6C8ax6/ZOxZBZMUPjD2bHFRJb+rirXhvwJeqtk6cN8SQNNbQ1e
m7Ms/ejDgZWpNOjLa3CzPkjQKQfdsHs5NOD2eHZDltWf4e2XBINzWXyGe8xe
6rLOn/gdea6ABjfZDiSMqBLECPB6ZFdEgz+O8ZmZrP73fJ75QqKSpV+kJpZq
ZaKIVRyruGtY8el9tAurYqL0zD2pU7Ws8/o5jrlFTESKxjP/NtHgKdVFwS6F
ycq/MY7po4GqxKkyj7NMFHn2+uawQRpcf9G//OsIE2XM1X8PGGHxT/XfH7Zj
olEBv/IDYzTozLlr427MRGfpuY0KSzQQYQj93DnJQPdz+VyE2HXBZO3hGy97
GOj9lgMdSyt0ISzpc2b+HwYa27vQ186rC7sF1Du0MhnoXIDpRIKELrytqy5e
8R8DnS/6JkTV1YVD8u7+DeUjqGVV2S4HA134N93q4Js9grZGVEZcX60L2Dlg
fcXzESS+r0Wof50u8E5vmX92dgRlMSeFXm/XhaCaI60doqz7QEZLWPuQLiwO
PLIW3zaMXIP0bfYf1YXo9XwKoD2MSnqM74a560JxwMsuqvAwevhus/DwKV2Q
67h2mNowhNZscxZ+668LtVfpnRPuQ8jnzF1hvShdeBqYli3sN4ja6h7YuD7U
hYcyNbEC+wbR9g1xdyNidGGJ7i9etm4QSXKnCJPnupDiX7p0dW4A5cR+E854
qwtHD62NXPAbQDMlk8KGJboQ6Iv8XDz6kb+Cs8iaWV2wcZq7Z6TSi8akoUN/
gcU/lGZzYLEHeYirZ2gt60LXY/cHdo09yJl/xEaBSw8++rrOfI7sQTB78S6n
qB4MrGxjui92I+66WKE/q/Tg2hsv31u/u1BUeLPAGSc9KKb60rfs6UBp8/t5
3+Togb/yFf7jfXWoabhKX/C6PvTJnlv59G4qFjsbmbH2lj4UGT2XrPiUjq2n
bOhHwvWhzPaJeMNoBv7CVmmYc18fZHsz69fKZOEkiQrjw8/1Yd28yoGLx3Px
KVS24eMnFlbW17O5WISX7381dxnWhyeftM6QzkpMUWh857DKALxb4p9kVzXj
nDean6q0DKA0Urnwo0YLdjbxKbTUMQD+c9UhvgEt+JWdWLWpngFoSXHxglor
Xh+2c4xqZAChQQf7q8624cPTX42mkQFc6L55T+tqB86ofvP5kaMB0BxaCNtU
F957cPar6D4DSDi7empBrhvPjZj/vL3fAPg4BXZXmnXjrTy9TUEuBmB7Jyd3
MrwbN5gqLRw/agDfxQ97gUoPXk6NMjXxMoCgM9uVbpj14l3XA4sarhvAvKBi
e55rP5bioL45d9MAWhKFFJ5d7ccdlyojBcIMoPKcldTWF/343AVVV7hjAGp7
x1sbB/rxA7fSmeQoA/h3Uk9NzWsAt2wW1/ONN4CGW8UiXV6D+OWXAnHRRAPo
UZsv+xsxiD3XH59/k2QAsnb/Fm6nDWI2w9zStlcG8Cqz74He0CBWUzl0dHsa
i39ntIr9oSHssZz6WCLXAGKqdpu1o2G8+uLeoHd5LHvPKJox+4fxwtTSsR0F
BnDkY/uwwIVhHMHcvfpSoQEs3BHiVEkZxpmt0xU9JQYg/PC0wYTgCJ7J27Ii
6w8rX8z2dqGfI/jrWsbgzjoDSLb8edGiYwSHfXhY1V9vAK9d3wubTI1g+dTB
p3JNBtCnuR2ZqDAwPLlrcq3DAD5+K/2e7c3AN/yaT+9hGEDU7TTtID4mdsLe
8tVMA1ifZe3ZIMvE2twCv2xGDSAu/9gppjYTl0dtXLVz3AAMjWt5bC2ZWPTd
0y7zWQN4KmEz2xvKxF2TxvdK5lj8m222qEQzcdbG32jbggFIuRabSCcyscPP
pbjNywbwx7w2xaSAiWN7Dzpu4qJDyGDQIRhl4lO0Ga58bjrkH/9XsHeBiU29
I7PW89Dh/sbFVg0egjvYvoqa8NNh1m5gYVKRYA151XJDUTpr3paf3bOD4Kkj
uQGZFDrckDN5s8GO4NKUPVoG4nTg9ccH2pwJ9lh77bquFB1Orr/rsduL4Hd7
emCVAh32pvVxjEQSfCUmkLxSpEO5evXlxMcE7+kQf6ahzOLzphyixBM8cXrb
vKoaHUYFv4gophP8Pas1JUGdDlXB3ws/ZxH8cP6CkzKVDqePuz4SyiN43a1X
HxW06CBx3OpKdwnBfFWmbnHadHiip+93tJw130v+pcjR6DA+W3Q4rprgNBev
rzG6dPiy35UeUU/w5Rcrz0jr08Gh+F+zSTPBNsPPFR8Z0OHMCxHHuHaClQ1N
KiQM6eAVMPL4UzfBRfiEtpgxHTQ78q3lhgmO5mZvvLeGDrtCDdIPMwl23xlz
Q8SEDvJnDn489I/gtdH0NXfX0WHTy0cHpCcI5mku6xHcQIfMlJInN6cIblQ5
EhW+kQ72kf6nM2cIfnNizozflA7i3K2/788RHPju/ugtxHreuSCXtkDwzint
5zxmdFCPvq4btEiw4qainTc20yHxyFb1sCWCR68dWODaSgf9DYlxO5cJ/vpz
/E3INjr83TMcXcbC90XD960wp0PQCz6BJRY+6qTOE2xBh53jYezD//t963l+
Npsly96vhxciWZi7z/5YkBUd2K/NnGCy+P/SGGJL1nQoMJZt5WRhN8vHGy/s
YtlTDLnWxPJv7PiWYyM2dGC8z/Y9OU9wUCjzztHdrHpbU5KfM0uwQFJMdtMe
OkSc3u+Apwl+Uri1fbc9Hd5Ep1sETxKs2UZWlu2lw7N99x6zjROcNf/EABzp
0FHpZrV+lODNMtv35TjRYfMxxeP6DIKr1vy7qrefDnp128faBwl2sY978/IA
HR7Jzo1b9RE8dNb8j7wLK55D/d7eXQT73R2bj3Klw7kx2wCHNlZ8aU/V+Q+x
+FcJiEw2Ehz102Jn8GE6CDldNbWpIzid6/mzM250KHSRiVjzi+CNapY/+o/R
IWvlcHHRd4LLYJK4HqdDnmotFigkuOeildlODzoIDD1cXfOB4HMxU/8Vn6SD
ccaHkl1pBC9nJ9zfcJoOv7tO77nximDZselurTN0qE64GUFj9cNr4SSBhLN0
0OUpcIlh9Yux7i5jaW86pFmvOfrtJsG2J15c5/ahQ5hPp/0OP4Kvt9lqdV+k
Q2ShxW+aPcHiC/O791+iwwfL+u2XLAlOkEkOqL5MB8nkdeFhQHC+/eIvfJUO
Dw1u/GnWYen1M8Uz7gYdLm/vqDiwzMRXBuwfid2ig4HPL9UH40wsyM1WGBZG
B1Nlg+Xb/Uy8ysxB1P8OK19HnbLf/2Zi1xyOrL1RrOej+sX7Y5h4pDatpTya
Duuv+z0WDmdi/zEnrq0P6RCqVHd16hITR+u+czCMYdWvUszy8iEm/pl0YFbo
OR1cpR/LcKkz8ZrILNPSN6x+VolUm3zKwAOxudsOvmX1e8neuNthDByTXGg9
lUaHq04Bx//6MPDCl/L96pl0OLGtKf/uLgb+xujxuZLD6l+Pds5bcyN4p5XE
O5Nilv4rBM5XbB3BSw5y2ZXf6cB125CzhjaCM46oFLj/oIORSMX+u+IjmBKg
+yv6Jx281Y/sNu4exg2vt/WPVtHhxSHzbcaXhrEbt49SSisdVNcsPzB9MYQl
KYFUaKfDbr3BKsaNIfxDIVj3bwcdtNK2zO07OYS1jSM2cPXQoXhiaJ0HfQiT
o68cDw+x3rf5upfO5Q7igK/1d2Wm6dCcnZvlVjiA7wWuZQsTMYT6s68nuJ71
YUs7WiUXxRAEe/p1HQP7MKe2yrOrYoawOiFhwGd/H/b7y7fRX9IQ0jpXC6pJ
9uFDhm2+J+QNweSS/t41t3ux3kAI2b7KEKQuFe0MP9WDf9rVtK0AQ8BHDkpS
hbowp87pgktehrB/4D/dUNyI+c7t/6Rx1hBEJB2pTq6NWPiz+YeKc4bQofXv
Vu9CA5Y1V01R8DGEE4IiePW6Bmxw9G90QaAhvKj4YJmXXo+dY81OLd4yBC6L
iz5uEX9wFr+k3KUXhrDOJrrV0eYnzt2zQlLjlSHMptADC4LKMI4ZFalINoQL
U51are9K8U/NX9wKqYYg0D8aayf8A3dsuTKWn2kIelw73A78KsICgUNlC18M
weHRm4IY71xMKfpb/KKQZW99kmlhxScsxfcdW38zBN9n3dmJmjlY9fHzj3Hf
DSFy2OBlWtMHbJJln7Cx3BDkke7NrMA32HTeLK6nwhDyqgdvfdFNxls26z8K
rzSEqKtL0zfbkvCuKt47LTWGAL4rariDnmB7qekbIbWGkP7xpPbt9ii837Un
mFZvCFvyTrO9DwrDh15WX6r9awjPaoXneK8E4GMjX/wCG1n5L/uTVVcV8+X/
AOECI1E=
       "]]},
     Annotation[#, "Charting`Private`Tag$526663#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 6 Pi}, {-0.9999990687548602, 0.9999987329187721}}, {{
     0, 18.84955592153876}, {-0.9999990687548602, 0.9999987329187721}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.727217753928884*^9},ExpressionUUID->"76ae3fe7-47aa-4133-86a0-\
7b7bd5a4a53b"]
}, Open  ]],

Cell["\<\
Para aumentar la cantidad de detalles que se muestra en la gr\[AAcute]fica se \
pueden utilizar argumentos opcionales\
\>", "Text",
 CellChangeTimes->{{3.727120479256551*^9, 
  3.727120496812427*^9}},ExpressionUUID->"d57b0f6a-e430-4135-9437-\
80e16cde1b4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"6", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Eje x\>\"", ",", "\"\<Eje y\>\""}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.72712049957239*^9, 
  3.727120524200688*^9}},ExpressionUUID->"18b8a338-9adf-4f4b-922a-\
733612d8aa7f"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1: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
AOECI1E=
       "]]},
     Annotation[#, "Charting`Private`Tag$526709#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Eje y\"", TraditionalForm], None}, {
     FormBox["\"Eje x\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{Automatic, {{-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {10., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {15., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-5., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {14., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {16., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {17., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {18., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {19., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {20., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 6 Pi}, {-0.9999990687548602, 0.9999987329187721}}, {{
     0, 18.84955592153876}, {-0.9999990687548602, 0.9999987329187721}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.727217754111388*^9},ExpressionUUID->"46577753-0029-49f4-98ef-\
95d4eca3cfb3"]
}, Open  ]],

Cell["\<\
Algunas funciones discontinuas no se pueden graficar adecuadamente con Plot, \
para esto est\[AAcute] DiscretePlot\
\>", "Text",
 CellChangeTimes->{{3.727120589381062*^9, 
  3.727120626024872*^9}},ExpressionUUID->"b1a8f6fa-8065-408e-9f35-\
e9a2fd200065"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"MoebiusMu", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "50"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}], ",", 
    RowBox[{"DiscretePlot", "[", 
     RowBox[{
      RowBox[{"MoebiusMu", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "50"}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727120631347625*^9, 
  3.727120656344489*^9}},ExpressionUUID->"3dc1f56e-2723-45f2-ac73-\
7b3321e7cc66"],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{{}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {1, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{1, 50}, {0., 0.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],GraphicsBox[{{{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], {{{
           Directive[
            Opacity[0.2], 
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{2., -1.}, {2., 0}}, {{3., -1.}, {3., 0}}, {{4., 0.}, {
              4., 0}}, {{5., -1.}, {5., 0}}, {{7., -1.}, {7., 0}}, {{8., 
              0.}, {8., 0}}, {{9., 0.}, {9., 0}}, {{11., -1.}, {11., 0}}, {{
              12., 0.}, {12., 0}}, {{13., -1.}, {13., 0}}, {{16., 0.}, {
              16., 0}}, {{17., -1.}, {17., 0}}, {{18., 0.}, {18., 0}}, {{
              19., -1.}, {19., 0}}, {{20., 0.}, {20., 0}}, {{23., -1.}, {
              23., 0}}, {{24., 0.}, {24., 0}}, {{25., 0.}, {25., 0}}, {{27., 
              0.}, {27., 0}}, {{28., 0.}, {28., 0}}, {{29., -1.}, {
              29., 0}}, {{30., -1.}, {30., 0}}, {{31., -1.}, {31., 0}}, {{32.,
               0.}, {32., 0}}, {{36., 0.}, {36., 0}}, {{37., -1.}, {
              37., 0}}, {{40., 0.}, {40., 0}}, {{41., -1.}, {41., 0}}, {{
              42., -1.}, {42., 0}}, {{43., -1.}, {43., 0}}, {{44., 0.}, {
              44., 0}}, {{45., 0.}, {45., 0}}, {{47., -1.}, {47., 0}}, {{48., 
              0.}, {48., 0}}, {{49., 0.}, {49., 0}}, {{50., 0.}, {50., 0}}}, 
            VertexColors -> None]}, {
           Directive[
            Opacity[0.2], 
            PointSize[0.009166666666666668], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[1.6]], 
           
           LineBox[{{{1., 1.}, {1., 0}}, {{6., 1.}, {6., 0}}, {{10., 1.}, {
              10., 0}}, {{14., 1.}, {14., 0}}, {{15., 1.}, {15., 0}}, {{21., 
              1.}, {21., 0}}, {{22., 1.}, {22., 0}}, {{26., 1.}, {26., 0}}, {{
              33., 1.}, {33., 0}}, {{34., 1.}, {34., 0}}, {{35., 1.}, {
              35., 0}}, {{38., 1.}, {38., 0}}, {{39., 1.}, {39., 0}}, {{46., 
              1.}, {46., 0}}}, VertexColors -> None]}}}}}, {{{
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], {{}, Null, 
          PointBox[CompressedData["
1:eJxdzTsKAjEURuEfK0sLCwsLFRERGXR8Pye+tXUJgrVbyM7ckktQmdyBnMAQ
Pu6cm+bjdX+WJKW/73/n55PFt1zwO7/LcMUpOlXMa+awr455A30LbqPvoO/i
/x7mffQJPEA/RJ9iPsJ8jPkE+6fwDP0c/QJeol9hvoY32L+FM9jFvTfbe7vY
HtYevdn2H9DDOqI3W3+K7WGd0cO64P3Cob+ih3Ur/AVBDEsh
           "]], {}}}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
      AxesOrigin -> {1, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[1.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
       "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
       Scaled[0.05]}, PlotRange -> {{1, 50}, {-1., 1.}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.727217754374762*^9},ExpressionUUID->"7d810e0d-8d49-4da4-89d5-\
c5d9fc573267"]
}, Open  ]],

Cell["Se pueden agrupar varias gr\[AAcute]ficas", "Text",
 CellChangeTimes->{{3.6884195028168125`*^9, 
  3.6884195089282293`*^9}},ExpressionUUID->"445e1467-686c-43d7-9d41-\
49e50d748eff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"FontSize", "\[Rule]", "16"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\"", ",", "\"\<Sen(x)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6884195169223566`*^9, 
  3.6884195534097815`*^9}},ExpressionUUID->"ff083390-6f95-4fc8-9351-\
0325b0b8cbfb"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.9, 0.36, 0.054], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwt0Wc3FgAABeC3NI3SILRQilCJFCUSGkjekEJkVAgZkVGUUSlEFMXxB+o/
9nROH5577/eb0NwT7N4aCAS2sPm/f4s/XLA3eMca7bxhhWraGGaRYip5wivm
yKGAMup5yUcyOM85zpJOGqmcIYVkTnOKJE5ygkQSiOc4xzjKEQ4TRywxHCKa
KA5ygP3sI5K97CGCcMIIZTe72Mll8imljh4+sINLXOMOj+hmhu0UcY8mBvhC
Nnnc5iFdTLONG1TQSD+fuchVblHLC6YIoZC7PKaPWbK4TwtDLHCFmzygk0n+
/V1FK6/5ynWeMco3ymmgl09k8pwxlgkyzg+aGWSeXCZY5Sm/GGGJEtZ5y3dq
+EkH7/kLfGo0Iw==
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.365248, 0.427802, 0.758297], 
          Opacity[0.3]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwt01W0FWUYBuBNSSMgKSCS0o2USndJdyMp5yApIhJKdzecAKS7u1tKKWlU
OqVLePbCi2e/3/fO+udiZk+6lqE1Q6IGAoEoJPAzSy6UizhqXiBDCeMr2jCZ
ZHxOU0bz9P/zuajLYC7q7hLDnImq/MQR3W8c5hAHOcB+9rGXPexmFzvZwXa2
sZUL3CG6+2WkCn3YojvPbaLZM1CZH9msO8ctotrTU4nebNI9Ib45J3UYxJ+6
m8HnY05HRX5go+4x8cw5qM1AzuoSy3w0ZDg3Au8f8KdUoBcbVEllQZowike6
uDI7tfiFM7pEMi8NGMZ1XWHZnLG8tbeTU0lLeb5nvT5EzuZLvmESSZhHR2ZQ
gAgaM5J/nftVfstMihJJS8YTh7m0ZxrZCKcmP3Pa+fmyU/D/RDHm0IoJJKQD
08lDfYZyzblCshlj+M/eVk7hE8rRk3X6L2RrJvIR+WnECB66XkS2YByxyUoN
BnDK9Q9lbuoxhH90b0hjLksP1tofEMucha/pz0nd37wmtb0M3Vljv09M82dU
px9/6P7iFanspenGavs9PjBnphp9+V13lZd8bC9FV1bZT3CFF6TUlaQLK+3H
ucxzUuhK8B0r7MtZxlKWsJhFwW89+I0H31fwnTOPucwhkgjCCWM2x7jEM5K7
d3E68w4vIorw
            "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.9, 0.36, 0.054], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 130, 106, 154, 86, 150, 126, 156, 70, 146, 122, 155, 
           102, 152, 128, 58, 142, 118, 98, 151, 127, 82, 148, 124, 104, 51, 
           137, 113, 93, 77, 147, 123, 103, 65, 144, 120, 100, 84, 2, 131, 
           107, 87, 71, 59, 143, 119, 99, 83, 52, 138, 114, 94, 78, 66, 3, 
           132, 108, 88, 72, 60, 53, 139, 115, 95, 79, 67, 4, 133, 109, 89, 
           73, 61, 54, 140, 116, 96, 80, 68, 5, 134, 110, 90, 74, 62, 55, 6, 
           135, 111, 91, 75, 63, 56, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 136, 
           112, 92, 76, 64, 57, 141, 117, 97, 81, 69, 145, 121, 101, 85, 149, 
           125, 105, 153, 129, 157, 50}]}, 
         Annotation[#, "Charting`Private`Tag$526839#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           RGBColor[0.365248, 0.427802, 0.758297], 
           CapForm["Butt"], 
           AbsoluteThickness[1.6]], 
          LineBox[CompressedData["
1:eJwl01WYVWUABdAZurtEuhuklAbphqERFAbpkm5plW6UnoAJupESBAyUBhWl
u7vbNR8P6+5/73PPebnnZg/uHdQrMCAgIImPxfIrWYn0PNPPcYQlhBBKGOEs
ZRkRRBJFNMtZwUpWsZo1rGUdfTy7Mhl4rp/nKOvpa6vCB7zQL3CMDfSzfUpG
XuoXOc5IvQF5iMdd20b6O1flQ17plzjBKL0heYnPPdsmBjhXIxOv9cv8xWi9
EflIwH3bZgY6Vyczb/QrfOfcgqIk52/bGNmY/CRkJu0pwwPXJ8vPKEFq5vAl
5dni+iBZgyz8QGfe2qfLL/iYq/oE2ZJiLKAbKZhNB5ZSLuZ3pidR/OO+sTKI
UAown64sIxGzCCacsiyiB5E8dP8U2YYwSrKQ7kSQhrl0pAJLiHnhfnTfYFmT
rMyjC+/sM2Q7PuGaPlG24iNSctI2TjahIIl5ZJsq21KKtGy1DZG1yBbzknNd
TJKtKU4q/rWNl00pFPj+v/DYto2hzrXJTiA3bP/xjXMzCpOUJ7btDHOuQw5i
cdN2ih0M1+uSk9jcsp1mJyP0euQiDrdtZ/iJXezmZ/awl338wq/8xu/s5w/+
5AAHOcTXnlef3MTlju0s3zo3pwjJeGqbJj+nNOn4nk5UJITeRHPYd/8H7nGJ
lQ==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$526839#2"]& ]}}], {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> (FontSize -> 16), DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"f(x)\"", TraditionalForm], None}, {
        FormBox["\"x\"", TraditionalForm], None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}, "AxesInFront" -> True}, 
     PlotRange -> {{0, 3}, {0., 8.999999632653065}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SuperscriptBox[\\(x\\), \\(2\\)]\\)\"", "\"Sen(x)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 16, 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 16, 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 16, 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 16, 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9, 0.36, 0.054]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "16"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.365248, 0.427802, 0.758297]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.727217754859329*^9},ExpressionUUID->"5d4045e1-569d-4549-a4fa-\
8652d48a3136"]
}, Open  ]],

Cell["Combinar gr\[AAcute]ficas a veces es \[UAcute]til para crear efectos", \
"Text",
 CellChangeTimes->{{3.727217967211441*^9, 
  3.727217975251932*^9}},ExpressionUUID->"84e28b61-7c0c-4c86-9ef6-\
8c4db4032b60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Exp", "[", "x", "]"}], "]"}], "2"], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"Exp", "[", "x", "]"}], "]"}], "2"], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5", ",", "0.8"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Top"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",ExpressionUUID->"82c22e0c-2120-48b4-\
a133-e7a8a1700c5a"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
       CapForm["Butt"], LineBox[CompressedData["
1:eJwVjXs0lAkchgeFRDaRW+qwFF00khVZP6xrZTdsa9KeCRUphySlJtdJq82t
jbZ1jVyKRJxumvzcMmEUS+7lw4yZwfgKkZlRa/94z/PPc55X3z/U84QshULx
Wt7/3H3m0koKhYDs1UZdz3iRWCizkGMvQ0CFvXaRmepFVL8Z/gNTloCYlMKC
N3su4uzj4ED5lQTY08/siki6iFUSeouyEgE3km4ZRFhcQuofPyVrqxOwY/GE
hWMKA7flKmuYGxNgesjure2RaDTg5BoGHCTAzCb53b9m8bjByaC1wYMAq6Sc
Tlf3eNSsLQrd5EVA3LW4F90n41G58kFN3yEC1j6qPG56Jx4XbtYc3H+EgOcF
4CtUZSLnSM9lagABBgFpmbGzTDw/qfJOzCDA9itru1tbArYpRSWklhDwhTm0
WfTyGi6qcq1nviz/RxXSKxVv4Dpeii3LdQSCHE/La7EyUJA9y3TLGwFYjAyW
T85CB90Rve8+jkABzd3Xr+cOel9OXPzHZRRClvxazyYV4uHy8O+v54yCZk/M
3vzMe0gU8vMfi0bBKs3EpqjpARrEaPjfdRwDG48535jBShRu4pxvzRgDqlrY
e5pvNWanNffTeGPg31Kt3qT8BJW4l6JL93Kh/9guWy3qc1xaenrBIokLApqb
3CCNhWXih1XMMS7Ese40eK2oQ2e2cK+VFQ9sqsvPzM7X4wmfcm3jazwQEQVd
fYJGtOvYajUwzAMOdn+Crc2Yp2xW/oo6DrFmAxaNQa+xZtsn/3OJ4yDrnH5K
Tq4N63U+B/z5YRzUD9zrNWO1o3tHHPab8uHU0KyIsOzA9JOvD08l8KH95ppE
l+ZO9GX/7bqnlw9CR/4aukcXas2XJkxuFkCufIRP0GQ3XleIXOEfJQDLRGYn
2dCDzOH23rVvBCD2Vy9xyehDy8z3U1eMhGB8hZFNPhjAXkOzg0cZQvCJ8bNS
HxxCaYSKYnibEOrz1lXpyg7j0P27MvsMJqAlaldgwEsC7QsbfvEJnwDX7J5E
k/kR/CvEaKqzYQI+dMyMb7Aew1xdh1Zl7UmYyzOScXrIxZ2pfGls0CS4E2mj
uhvHkcFzDntWNwmGa01ejTbx8YDsTmsTtSnQ06Ic5wQKUYn08ZDxnwLD7TT/
Rp1JZNbalWY/m4KMo9E+zaoijPu1wjtslQiqDpuzSQqJ1u29zqv8RFB3e1rf
M+8jDms4XlF8KoKOrU9zqZxPuMrIar29wjRkqayOyF+Ywen1AqENfRrkjlFb
Wj3nkPZ2k9rZimkw57uxDB5+xgrvrMQ136bheJfO/lqdBaxv6LALOURCf51N
iXfTF6TNpbgrFJPQwVYYVAgTY/MbB2poCQnxyT1STqQYd9+fV+u9R8LJ2yqc
9FgxqtLpfcVlJETrJEduT1v22TuOOT8iIQbkzC9XiNEiixOZwCKhqCyckTst
RjUHpUK5LhLYSrarF0MkGLuh9urpbhKCilew11+Q4PR8WFDXOxIiGMF+ljES
bCnrN73bRwI3MH9PXOqyr3H/ucMHEjjAyLWslCApcHkbJyShyfzqC+qMBH9v
lDwSTpDg5ZG0JUoswdacinSPKRIMfUeTOLJSLPbU9NEnSVBUo+87t06KdNY4
t26OhIGVivX83VLk3MpkG8+TMO61sOXAj1K0Dvu5NG2BhGDLjbeqnaSosflJ
qK+YhB1OhqnXf5NiPOWU52sJCd3b0vSkdCl+HNCzoC6RgIbuNaGBy/3HnZq3
v5KwJc0ocDx0uZ+aIP72jQT9YJ6Rb6QU/wOtfsqD
        "]]},
      Annotation[#, "Charting`Private`Tag$530879#1"]& ]}, {}, {}}, {
    GraphicsComplexBox[CompressedData["
1:eJw9VA0w1AkUX6HdRopNx6kopDQu6ctH8ZwiZnM2n0W1KVvpQxepVavCcSiF
tD53jyTaU1zXdj5yz0eLk0aUluy/1u7a3X+uq0wlRW5v5urNvHnz5s3vN7/3
3sxv0e4jAexpFArFX5v/1dTjvroUigwWWr/MqB3moImJva/bChm0TvbS/H46
g96PTJnpkTLoScma4D9MxuVlwdY7L8tA2ZPhaWqYhj+mW6GbWAYPakOdZl05
jyHZH+bZj8tA3Gcw8twgG0evL/QqsxuCg8qX5fTHl3ClcouD3c4hmGw763fV
PA+7VtPlddlDcK3HOGKQV4jzeTYRj5qHQFRIjL+fK0Cjbz1KP70bArWIRWHM
KcX6qhs3qmzlsH3rOlWueRliiDBpf4gcWKn5S1ucynGfVY3Zqgw5CKscHcor
KlD8mXoqtV4OjdO8t44ZCbF9Yr9A848ciuoP/x3QV4XWxtsygq0UIB7faLJJ
VI1r1hZ5MgIU4Fu8Jydg4284wlU1+KcqQPXG9RkM3cLQx8k6xB0FrG2+43Dy
+G3c57eMFj+iAPX1bLpwwx3skbIklpZKSG2lFQdZ1uIbrjrG318Jl+LEs6Ze
1aHIndOdmayEZK98A5upBnQwDv8QdFsJpixuWYvOn6j3sYu0VWrx8+1r1dQm
5Or5FFPNhqGgKI6f59iMQsu58476DEOSY4+jZ2ALcrePhJFc7dx5buXxwlas
rGbuOVQzDGkvgqWx5D3MmENz5siGgT3gT55d3oZGBR0PckxU0O/x8b45vx03
Oww6rPVSwbjPogUqyl+oGOSGKY+pgN+oiGw80IkLhEu8SytVcML8OX3XtC40
TLf5rOpXweiMJ3pLMx9gafqyE+sM1XBwINiZ6duNI4VJd83c1fD2dz5Ncuoh
ZrVEdVKi1cCkjb4PCunBfoOwgrFSNQTrtXVNMnrxCbt49YleNbDWHJpe6vII
OUPqLH2qBkoWb0pJ2/gYj8W2iASuGnAdS7wSFtSHtt+8utZ0QAPsQ/XskbAn
yH1qs+2NQANOg84JjYkSTKuukgi7NaAfSHDbBf34qrDV4siUBtx0+rJu4gCO
VyhsPVeRwAyfVT5bbxDrxMGf+HtIaM21XxbqJkUTayavoICEftbPPRkVBPqJ
Xa9ZmMlA0rSr4a45F/e+7e0oOk2CMFAYe++1FF8saAmaPVMGNW0fR2viT6LR
DhP5/KMk/HAv85cynhQbz2VXm58nITXC6VwDg0DnTv0q6nQZCMreMebcjMdI
Y1H0jgMkDHTMHpNHSZHusXJ9eAoJCbfizBZbELhf8trqaQ4JtP4LM9LiCWSV
VEh0dbX46MYbCb7xeOGgvmhyLwkhR1QcXqAU1xcmJX1K1O6ns8QomkpgjuP3
UScvkuDgQtcv2k2ge0KJ1IVHwlNqTElSFoEx5zgvE3VkMLWrwyjRNB6v5n/X
78fW6v2Vbh/nI8Ut7cJyxlkSJGJNrumEFCt3Rp3vzCTBm785zy6UwEBhx1R6
Lgm+hk5XdFMItGNy6sg8EiyOuujrFxM4QYn40KT1l1VxsQzeZw4ur24m4yJJ
MOp42DzsKUUp4f5H7BkSYMCs4PB7Ka6Mm+SPau91OXre4pgtBD5r2m586xIJ
4Ss8orzOEHh778z7xlr+7otv2Rt4BApclBXN+Vq+Udbp9lLi6/8o/8cXf/vS
/wuV1ZQB
     "], {{
       {RGBColor[0.9, 0.36, 0.054], Opacity[0.3], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{50, 78, 79, 1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7,
           8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 
          25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 
          42, 43, 44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 
          58, 55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 
          77}}]]}, {}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
         CapForm["Butt"], 
         LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
          29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
          46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 
          63, 59, 75, 69, 64, 76, 70, 77, 50}]},
        Annotation[#, "Charting`Private`Tag$530920#1"]& ]}}], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.5, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}}, {{
     Automatic, {{-1.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-2., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-1.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.3, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, {{0.5, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.7, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.42, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.44, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.46, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.48, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.52, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.54, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.56, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.58, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.62, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.64, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.66, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.68, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.72, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.74, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.76, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.78, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.82, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.84, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.86, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.88, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.92, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.94, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.96, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0.98, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.02, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.04, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.06, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.08, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.1, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}}],
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 1}, {-1.779388568908651, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.727217982189761*^9},ExpressionUUID->"45674a9d-27d7-4ee8-9268-\
33141684a1ef"]
}, Open  ]],

Cell["\<\
Existen m\[AAcute]s tipos de gr\[AAcute]ficas que se pueden realizar, como gr\
\[AAcute]ficas en 3d\
\>", "Text",
 CellChangeTimes->{{3.6884196003027625`*^9, 
  3.6884196138656*^9}},ExpressionUUID->"571cceec-de9c-4abc-8fdc-b6eb546b44fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"x", "+", 
     SuperscriptBox["y", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"FontSize", "\[Rule]", "16"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6884196159339075`*^9, 3.6884196754735646`*^9}, {
  3.688419741551807*^9, 
  3.6884197427057505`*^9}},ExpressionUUID->"325da987-fda1-48e3-8dc7-\
83ab71be23cc"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
lNtjGFryNfveQOG5Z3ufSUvj2PcGihnRtTpPvmNkeh4ori9+3G1hViOTQ6C4
PfH6iY1PYtX3on5sbe5VSY/nvVXfC/zM/O2dXHzj1fcCz+1++UDcSJP6rgw2
f5e98V1AvINeZtr4d4j6LuD7Qup6p56JUd8FfHDFuL/zi2Q+LzTPzSUg4c1/
5oV05oUwL0z+pCN/ii1/skreDP+RP+nInyB/to6o9c03uWuc/s86Ip11RFhH
bL2QznohnfVCY6oF9qkw5z/rhXTWC2G9sHVBfF2o96eknWR2j3TsHunYPdKx
ewS7x+wY6dgx+v/tWAphn2L7EWE/gt8CPIAqeocXu8/3KdLZp6jZ/79PEfYp
th+Rzn5EfD8CL6HjD9Dj8f4uB10ecn+AdPwB0vEHyMG3QLXB9f/jD5COP0Dc
HwDvseX71S6ep/7jHxL8Q+ankY6fRjp+Gun4aQQ/DeMBL1TY4/36P1ua1XiA
e47b0WZ7FzNBbsBr2Oees65YEvdLSccvJR2/lOCX4ruANztauEm//Cb1XcBL
FJ9yy9nfrL4L+ILlW7r5ORq5P0nwJ/G9C8tFe6enfxfTyyd9SCsSpuQ8Vvqx
P3vbytlVto//O//7y/8Gqn78rrQ9eNnls+hz63W+Y63Dlb5hffiMn5s75O50
JbeUAqcT2rt/EUMeHtls/zJc/e4p6Td2Z/p2W/b//uDbp6t2GpS+yXhOLPN2
WlCyu6/Stw+y/6CzF2q47Xyhxmkn46QdH34UyVzHuq4bSH574qZO9TzHPFfz
8l76e8TWqeSHxPhDxWv7/mNdpw1lP8Nm1zWWfmKNgyzxY7J4v2rLvGqfrPvd
OOlH7Wd2bKds/3fmaiUnL7buC2V+x79RYnzmxufbvIxX9jO3jNeajF8wasWX
G0rfmv6OxxPFmYDLAa2mPFdy/iD9ln3M/peX/X8+166uo0+Msp9/yP5HTygS
nHf4M2U/m8n+C+cqmbtHhztKzl0kT+9wbu3cBicMSh9OyrxtVIsTQ7f/ZfVn
vki/4h3bTyV/KTzszPudD4Wreb8k+5m726+t76l4Jf+Cv8f5SiyMuju83BGr
H1tD8h7nyjT5Xv6CQckz00Htdw+IRTl7FAx7YPVbvsq8xtdb9fP/+G71WxZI
3rHGKS/jrk3cb7kj/z2v/JbWsv+LZYfV/uOE1W8pedDSv5Nd7NL+KVa/xV32
P+TKZocfX61+S6nf439K+VqnLN23yGrPh8rzGU9qx6zqddgaN+35LZ+7lP+T
Xceb+63jjJb+hh+Tcy7Z/6rBReqPqxqmxtlF9t+y9+Gsp/xi1Tg3y/5vLgr6
OLq8VT9vyjzSpuzt17Z9HavGWcYif6rVKLbX6gvJapw3fvPb4dRs9opPca5W
/ypB+g8rmX5ek/3POVC7SK1lUWqchWX/tP/5xldbE9U4/5X917/arMeuJyY1
zvoWvaWdlapUr+lkVOulmEX/6Vm0KaBI2Aw1nqHST3Bn67S27KfToas9K/RJ
UuuiqOxn9tqXo2sU9FO/G/yppXPY5ff0cMOEvLnJGg8e8Qz90d79HY0verzO
4xGx6neT5P7egNmfINlPmXJ2MfkuWu3PYdnPkqodS+RqlqB+113yYaf+CT34
/muUmpe5sq7sYMY1tyZ+DVHjGZZldhF3h0+0Jn+4f/wFocZzVO7jA5l9ljwQ
eQSExq9sFqfmZbbsf11h924NTrxV4/xH9u/z2qX6K9dnapxd7s2f6RL2jZ7c
yzI5cvl9tf82kPkv10/HvJ5ODVV2bLjcx+czf6CT7Gff9HlFnQafUvtmPdnP
hR2XvaavDlT7ZmnJKy+o1W9345ERyo7lcCyx6bJLOnn4d1l+45BR/W4ZuZ8O
Zvt1Ntk+s/PkIvfskpSc1T2L8h4eyPnVi/MdHDr8FIW8Tp1eU86seLC7Mu8T
JN/ZAe4n8dcSx3eZZf/b5X07+K6Xsn/Piu0zuUxU9VR0T/ZzVb6zA9xX4j4S
h5/5RvZzsWS026vRcQpH/mS+t+/7RYYk5Q/nlLxua/leEnA7nK+XOPzk8jg3
0LpBvrs3zAo3yX183YD+Ix4+MfJ5F5h3jD8X6hPkO0rAs0rcTuIYP363bJnB
HqYkk8KN8ncDfdI+Rv3an9k6EmFxsXMeDo9S+28JyUuPLjR2b9LCaII9ySz9
hFzX7jz+OTxR2YdMEvcKO5Gz9TNrfHdT8rsvZd0ssw9inVsxr90PY5U+e8v2
lWR9LLMD4lP+6ffbnk7gdk/A7uF37eT+/jzBOP5OLatdkr8jKl7bM63yIJOa
39PsPTvgRyR+VOIYZybZ/7J+heMi9ljH+Vz2/2bthZDi9dQ7U3SOvXMH/KDE
/5Q420cE9hGMx0XmhRrLd+iAD2I42y8E9gv87lTZHu/TAe+HPK3EmZ9D8HMw
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
t0OlEonVexDqPYB/YO9AsToQQh0I8FxyHyS3Z5kLOf6n3oNQ7wEcfsXh/78O
hFAHAhx+QoYcY/5cdNGat/rA3o1i4xEYD9aLPK8p8J4vG4/g45G/K/C7WF+o
O+3B8hSoO0279KPonhJWO498weogb4fM7a1+WhN5DjFVvjMCXNb/iHSGB8NP
l++YAEd9Kd43wXjwu9XKj7t5Yqk1b6J+V74nAhy/+53h+F0/+V4JcPzuI4nD
Tt6UdbAxO4u0r7DOin+U9SpPev55//odE6/XEqjXYnouoOeY3zaSz1k2cfX5
F22s8wU+7e9xAztXzm9S+txB8gZXWN6/hMzX74+bteXDPWs/qK+LbONuyudn
5c0+4XyB5DFY3Syhbhb4OxmP3/uesLbycqs9ETJO7Cvz76yellBPCxw8w+3c
CWGrjlrtww3Zz0CZZ2f1w4T6YeDyfgyyn/atzPAjSYLV/1DatVYTepkS1T6F
uNizVC2x+6S1ruk97rWQ9X7AOzC7hH62yrq7jjVKr2n/2Yqjvs40ZGDy/mxm
XrdMqFsGjngz+mzR3N7rjbxOiUp/iu8zrXO80rdGsv2fDp0XRJ9LUjjO3f5s
8D2m8T6rfg6V4+k87Q9zYLCVl5N13eR2edmMcs2TiK1r4utarhfSWafqHSJm
B0jHDhDsAOQm5HhcnOZmKfPVpHDETVcWzHWd6WTkdoC4HcA4ddY1PWK4Guf/
bzcIdoPZAdKxAwQ7wPwQgh/C7LZ6hx3yRzx14/BAj5L3rX4L4lD4J8xuk47d
JthtjAf+28Z5JZ7W+2j1H4CfM3lUy3LE6ndFMj/N9jxLLAXI925sz7PEUq+u
LzZ2bGe1P8CrnE/u2SHK2g/4q1zyHRlVryLxyfKdF+gDeAn3bS2C+j21nnsC
3tTl/p6hSdZ9CnFx3qZN28ytYLW3iEN15ECQAztPqt7LQD+bpH1rfWGQZ+pX
a10B2jvJ9zLQP+qO1ux+MM4caLU/8vwFdWf7Bepksn+18BKsvoJQXwG8m1wX
DY6mD98VZq17gZ/v/flr2XJm9T6muk8V8TjjQwT4EDYegfEwHk+MWGByONQt
kdtnwe0z2o9/VOnhhMUmzncJ+jelZvNtydxOCm4n0f7P8q1uG2OTOd8oON+I
8/gTDri+jXxmnV/gbR85+brWNgnGxwqvkLnXNP6B6adovjqg1P/WyeAevwdX
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
lp39s/1Ha3yt8v4sHgS+QMaD8M+Bx2/8EHQ0PIi6S74Ov7tCnp/dKXl74D4y
3we7jX5aFWvT73B6opoX4A9YnAh8vYwTIWfg92UdL/Qf/MbPpW3c09pHK14C
7VtLXgL2E+13lk8smqG7uhdF4cUZXwF8nuQrXkl/D3igPJfnJ/124JXa/V9j
Zx5nc/X/cdlnmspX2WUJJSG0WbtkL8uMSpSfGJFkaRONJUU/Yx0xWRokNMk6
DSFmXKMSRUyWUWo0Q2PGzNxr1ChL9TXd1/N9f87jMY/H7/75fJzH+Zx7lvd5
n/f7fd6ndOLeAbtt/sNnN/pq+tM7f7H3zGhnouwSyCXKL+h9MSWr8TmzS8Bd
uwR8v+wSur9j/vpasj+ESN+GN5E/mn6GRynuerT0WHh2j4Adhv40O4z6k/bD
F6r9yDfOBRNT3o6b3jvTi9yAD9gUE//wLz9Zv8HXSw+hHvTe1Y/FfTLioR9t
PsB7X1ry8cywbC/zHx7ye/+ppV/K8DL/4evvKVyQ9tMeaw987YSUkTnbUq09
8M3RU0f+evSM/V/4nMqFOa1C8s2OCt+wsNqG3p2+t/Zz7oiOHVXpxR7Hrf3w
pXvyTteOyzI9Ae6Vn5p93/VT83/hzydvHnK56Wn7v/But4Q+Ua3lt/Z/4S8H
uP1f+JhAPbbPwkvLH82+6fqjWe/wRYH/Zf0DfyPQD2aHRJ8fs3ZvQqmrQb0a
7sa7wol3Zf3C397TffigG3Ktf+ChznyAJ2o+oJ9YvOWeUhnjpuVYP9h3nbhT
+KuKO6Uf4PddWTmnRdiv1g/wTZontN/OCx/tfCKlw1lrPzzhlT1XG9c7YXIV
XuJikxaNa1k+YdMP591cb84H7+fY+YJ90y89kO9Sfmmp8SN6HQtyyh+WHoj8
Mb16/8a4K81Pm95O+Y+l5yA3zE7+1S3bMiKPm9yDn9/+3d1pU9NNv4KHdVnf
v2l6oq0j5Gfo7w3bbfzolK0jeOv4Rv0rTfjc5jm8seyczHP4+NQpc9Lv+c72
TeRequzSzBP47szz9ToUptr4wmNlB2Z84f+8eyCjWctgfClyMl5xaMxneAvF
lRE/hh3Vp3g85hv8fcXL0c/In/Sm0/ftW+WzfQTOeZzyrMeJHXf4Ol2yvEPG
yefMeMGP5Yc0XVUlqA/DyyjPM+PCPO8l+cx34bSTcbH16MhbswtJ3hLvRL/1
UJ5G4p3g87//ckSJsZafyvapPcrHSHwC/JFFSzb07+/3Es/GPP9t5Ml/80X3
1nfh9ypfNHFudj4a3eVq+Kl8b0PFscB7tQqpUpQXeojaAz+hvNAbFN8CH7w0
7dVHm/s92LVoZ1SzN7cPu/mcJ1b6P3z6gM4nf2h8bV8O2JeM14nMar4ozO+J
Cvxf45X//nnW7T/5PQmy51gc3fqE2sk9znrx58K3XA3dcGxvjjdgbyk0PrzL
sKs1/sn3tg70v/Gh5Zq1W9vJ7w0N9I/x8o+FlJ10jWMHxh4e8+7HnXqN8HuX
Sw+B9x9R4ZnsAj/xS2Yn76zzEXZg+q3u+4//UO7tfLMHmv/6qefeWb/Pr/zj
+dbPIXufvtp1ndnn7fzVUfX/f+PDJyg+vLi48VeLid/m/Vo7ryl+e2Qxcd3Y
S5GT9Bt2Ufg0z9nCDyuf8x6UHgtfojy6dwb62fiBad7R65b5Pd+p/+H0fwnZ
M+EHb1/c7uqYPLNDwu9RnlviqeA1ImaUH1wOO8kFO4+0vDDs5Mpr8qSkw9uK
c/8Q7l97cX2RHlLg8Dxx7PzwCOW5TXU4+W+x/8Mf/ahfWpE+s6sYjv0f/tC7
De/pfCnf09bhD4rXVlwWfMzr+6rH1M333u7wF8V1j9X4PuW/Herwb8TXK77L
zq33P9rm6j92PjV+Uhx7Pjw8IuZSRAe/94LDe4tj54dPabDmy/jb8hUnFuRv
iSvuzs4XYyWv5ktewd+RvCoj+Wnxz4oT/kJyzM41kmPjJcfgyLFc2fPhxBU/
qH0Bzr4QiLf5zfgDm9+ZdOMon2eD5AP8G8nDupKH8ETJw42S2+aXV1xxpOQ8
PFn7znnJT/hQyc82kp/GJT+/lr8ATnzyJO1f8A7av0Ikb+Ehkre8o4wcfjd2
68xS1+bPXPn1kLf3T5q99a2t1/QEtRP9IfW3NtuL4iiQ8/Abc5osKep/4pyR
q80jU2ocTvZ7OafbvrkhKqPXAb+9E2z3gDb+XeflYfjZL5h8rjg0//bGE6/p
rbLPIA+bnTlRbfxhv5e4Kfjwm5p+tCDV8ukZD1W+4r7yV8LnxBy7bWlJv+cr
2UPgy75rPb/wst/Du3fwMcpv/IjWO/Kt5WuVl7a4x+d5WH5A+NVFy8p3WOv3
0M9w+vmRYuQG7aT8F+P3Nxra26dxCcaNbPitxrE3RuRh1zJ+eO7JK4XHfN6C
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
G5Xvojg7Bt+F93C+C09yvmvnFNVPP7CuX3H6AZ7l9IPl/1Q/UD88Xv+L9lte
iLVd1lyqFHynHt5Q8pb2WD6Eox98smvkXpsPloffkcPwcZLDzEPLL6o8G3Dq
92V+VmFQzhHTx+DdlY/i+vfg/J4/ZeekPPy3GZ98telgsulj1DNf+QDhlK/5
wORLzVodtv6HP5hZecS4JodNrsLrSn+m/fDJy6+OTw/ZZfMf+TZd65T2w1c4
+ifrfZviAfium0++p3Nveqz8/tSDnNyr8xH18N0ExWHCKZ+hPOHMKzuPyM/b
0znHlbz+HGfnpvq6F0x/so6ypV/RP+hvswL6m8kf+KaAvmfzH76tKO3xyS1J
yBN4UkDPNLkNXxHQS00+02/9pG/bO4wan4rPRj3yTc3gu97UExbQS20/gg8M
6MO2P7Kumzh6BRy9gnbCfY6eAJ8jPSHcuY/2qO6jUR6+S/tjuHOPrJnukVHe
vRdG+5nPYYpjp532XoPi0uk3+jNW931ud+7p1NM9HeYn8zBM5yzmicWNa/+i
fosf07iw7iz/gLOvwdnXWHfMT86bzAc458qejp0Ee8X17zgf8qL/02/Wz7qP
wDyn38p17J7WJttv+yB80D/nFl94Knj+pd8ypLcwjpS/S+9cM47wHXonmvXC
fF6v9U5/so+vrvFpnW53BMfL4nBCKzT/7P5cW4+WPzZ1VEhG56AebvbqQ2W3
Vxnrs/0F7nP0K/g56VfXv/d9yrvMOQfR/9iRGHd4J/ltqYdxaaZzH+PIfLir
2961P/Y5Z/+Lcf8s+/GJ7cucNbkBHx9/pFbVz0/bvLJ4PMk3/i/6z8iVU05l
HA7qUXZ/8ED7lCnNfdYP8E/Sonbc2yH4niy87YzUmot6BecV8+E1Rx+Dd5E+
Rv22jrzRq6dVPWXry+IAta8xH+CJ0mPpZ4uP0r5GP8O53826gJeR3ss4Mu6t
FO/U04lruldxTcxb87NrP6L9zM8k6cmsC/g4nWtYF/BXdH6h/Xx3/vX31q09
e3X+hTM/OXfTHtrZWXEFtJ/vPq/9mvFiPe7XOaiWY/c7KLsf9cMfVf2MC7yb
5j/jaPlOtV8zH/huZ80H2sl4NXDeUYXXc+SM+TclZ5iffHeHs47gk7WOejrx
ipMdvYV+7nnDrtWHXjL/mvX/4pXvxPWqkmv9QD0++XkZL+b/JucdTNr/taMf
Wj5P6YGUp/7d0sf+Cw0JVmk=
   "], {{
     {RGBColor[0.91, 0.424, 0.1486], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXX4FsXXxp9n49l9dvcLiGAgIAgmYHdgYTcWKgqiKCYWNoooSIhid2CA
ioktFogBJrZiYCt2t773h3t+1/vHXnN2dmZz5sw594ntOmho3yOjWq32bbNW
i1W+0KjV1qvXah+mtdrVSa12lbaBOhBltdpeqv9d9YnovUX/Ifp89euqfm+X
tdpt2q7UyW4tarXXRXdR/eG5zqM2P6tt1FKrnaW+/dTmJV3nH2276Ty/6tja
us5a2nbV/rVqv7T6HqG+x+o8T6rPsuq7jeovUdtfq1rtYLX7TW020raF6i9S
fVu12VL0xaJ/UZsn1f9GHd9EdUfpPI/qPD3VZnsdW031Q3V8oupXFT1L5ae6
72t0b1NVbqZn/l31vbVN0n1dp20NbX3Ud13VHaW+F6vPOqKfVrm6jp2nvtvp
vl7Wc32r+gt0H5fp2iuIPlLtT9E519O2p9ospfZ/qr6Ptq1U9xfPoW0b0X+r
3FLbturzg/Zn6763Ez1E/f7TOftrv8Z7Ev2Z6Ejn+lTlGdrWUfvtVb6n7R/R
81QOVvmvuuygbXvR/6ncUduI3O9vD93jTNE3iN5Y9MFqU9f5d9P+YPVPRU/W
tV4T/buOvaKyj8o/aK/tTj3/8iqfVDk69zM9rPN8pXYN3dsClYO0xTrPDTrP
Lown0bur3UVqv6vKR9T+W7Vpqv03Kg9Rm0Rt9uXdqTxE2z6iz839HDPU/ji1
OVfvfBsde0Jbe20X6thOOnaZrtNV33prtR+pc26icqjOu7HafKpjEyOPtS8Z
Zzq+uWhea3+V36vsrO0hnX9T7etz1j5W+7O19db+N+r/qerOUnmEOm2huq9E
f6ztI96ryj3V9hPRKfejNj+ovJBxrvsYqPZ/pR5/jMOWpscH46QU3UHX3Uv9
v9H+GL3TbVSO1/E1c4+d39R3B53za96H6CVjz6mvGHOR59QC0ffque7Rdra2
x9RmR9W3Uv2XanNZ5Dlc6ZzbqvxO57kk8hxn7C6l9ruI3rnuMfUF96ntU7U5
J7zzKbqH3jrWV+Wuuu/LdY4Gc1z3vJ7anqJzP63jm2j7Rfsn6D424vvy3VRO
0PZV7LnEnGqjc3ynvmuIHqa6LXS+zUW/pXY76Nil8B6dfz0dO1DX/0f7Z6r/
tbqfg7Q/knmo9scxBnVsM9Fvqu/+mcfbJNXNVPuNtP3INXRsMW1fav94bcNi
z98G41Xl32q/u657hcpldN29RF8l+jfxgD1FXyn6D9H7ir5O9O+ip4uua8D8
KXp06Xs4S/fzk+j1RZ8qep/Mc/Bq9dk69fd9T/dxqOiLRRcql1CbT3QPZ+tc
J+j5vhY9U8eu43m1faP9VVT+pPIZ1U9QuycYJyo/0jUeFN1K95Dqui+r/4vi
aU21f0r0d+qzifbvU5tVVGZq86rqXxH9ro79oO0pHcvU/kTVf6v9vrq/XbT9
LPoU1f2hco7aPKa+fbU/ivOLflv026I76NoddC9nqHytcL/NVV6k5/pV9AU6
9rHu8yGd43HVn6R+v6j+We2vmrn9diqH6Jzv6z4OVvmZ2j+i431FX9bw9Z9T
ebL6/qb2s7W/DDxK9EWqP03v8R3V9VS5k64xS/TX6vtt7uc7R9/qVBY/1iO+
jdq9qHI5lf/Ca7W9oP0Fud/tjurbTXRd7a/S+VeEp4m+RvThjFvdZ6XyK/iK
thnqs0bm83BO6haE+kLt5qvvR7qv4SojbS+rvp3O8YboFm2naUu0zVX9ayor
ba/xzRijfC/WpoaPP69ybfXtoPqMNVj0WtqaokdoK7W9rnZfMG+0PS/6O+an
yld1D2eEa76h/d10b7vB71T/fe7x9Ybogfr+rVX/JvNKZatwzh76xnepfFdt
b9M1p8a+3ocq52v7U9cbqnf9hN7Bj2rbSue6Uu2fVfs2oq8SPVv0t6LvUr9p
Kk9R+5tU/4rqu2v/atFzRHcuvE69zNoo+n61v4/xo/bXq/4l1fcsvO7PFX00
axvzXtdtp2/xtu7lVL2r01U/W/WZ5vVKOnaL2r+u9muo7608r+i1RU/lWeFF
eieX6ln6qDxbfZ9T35y+anM381dtPtG9TNC2la6xoeqnqf591W+jPler79Yq
T1DfWer7k675O2NS7R9TOVH39KP6naeyc+55eJro69VvUuy5Uap8Joz1VqLn
hHnYWvQLYQxtrWf8S3WXqu9N2tqo7kaVu+vb7ZZ4rHfNPb6vVP0quo/HGBfw
DPV9R+e6P/Oce0/bmmq3GLT6tde2rNrlKm9Q37axeQtjFP7BmGRs7p+YDzBW
8tzr6I065wQ9/y8qO+u97Vh4/P6l4+fqnbQRfajoO9T2dm2Lqu+nKj/Rlkae
W0uoXFfnH5x47iyubTP1XUR9x+p8m4teQvQKus6LDa/dX8BTVb+46g/T+T9S
nzHaNtSxnjrP2LCmn67+r6pcUeU26rMt307Ht9N5ctXfqrqntE1S/cGq20H9
Otf97Z9JPd4WUVmq/5KqP1LXfEvl0tru1bFc9UuIPlz1N6tcVNtE1bcvTK+p
73Ci6EVEb6A2h+hc1+p4a+QEXWuW6hfnfGrThTGsNkNTz7slkHVU35Uxo/r1
9a72QNYSfQDrJnxaz36v3stYHdtQ5fF6tq9FHyP6GPgfMin3Vbg8Rv2OVv0L
ojtoW1L1nVQez/3DX0S3Y2yovqPK41Q/I/U8bVF5eOo5tajKU9Vmsbply7Tw
cxwq+tHU8to+ep+zVP+x6tctvL6wpqyEjBjGFGMFPg9vX5H7EL2ztu6ily9c
nqVzDmPciO6mbVjqsb20ym/0nHvrmaerXEHtl9Xx0Wq/XOG2I5EnI9/DMvBv
1U/R/h0qT4/MR1dFti+8fm6s8mid9wFkJZ4D+Sryt1mqsCzaW+d8vvBa3bvw
WsPa0RN5Ufexr77JipoLJ6n/czpPN5VzUvOcoxi/6rNa3esUawE8eWXWyMLP
uF5YO1iDesHTU/Ock9X3K/XZUuXDyCoqKx2/CxlV9acw19T3IdWfo/rVaadt
AuNQ5Ztqc7LaTNP9jdF8HaH6Lqp/X/VnqP5+1X8ueiT3qfPM0LGL1GZTlZtr
O1t0r4Z1yjFq8yBjT/f4fBhj76l+hOrvU/3fqn8A+QSZQO/wfHiK6PYq34/M
Bw7UdzsgrD0PZV5PLtH571KbO2PzpSE6fnBinrCDnvlM0W+gj2h/I7X/GLmw
4Tn7tN7DE6Iv5DuqnJ55zbxe9FkqN6hbjp/cMO+5TuXruueTVHeP7vkwtR+t
Nj1Uf6+2UYxJlR11bHtdt4PK39Tvbm1P6tgdKp8K83ei7vc8bU/DC9TnQfil
yoN0/mvQa9R3R+2fh9yt8oDUfCJTubGeZ4L69lb5e9P1j6j9r6J3UdtH9NyD
RJ+v+j9U9lNdi84zTX0P0f5jKh9Xm/1Fj1Ob79Gzdb5T1OYIbVfpXP1VP1P1
1+bWvd4SfQeylI53VHkna6fozioP0Xs4RnQh+lZkctZftR+obSzyhcoddKxQ
m9t17clqMwiZTfX38K6ZuypvVv0Bqn9B9dtrv6n6qallQmTFFeqWgZlHy2k7
MLNueKPajND7LhLrqGP1XnZBB9L5jleboapLdb5XdN69VX8lcp/ovuhiondW
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

           "]], Polygon3DBox[CompressedData["
1:eJw1nXfgV+P7xs97nPM+60NpoqGUlBEZJRmFSELZQlSSFL5mZGTPrEIZKSIj
M1RmIjMiWQmRimTPjPpdr67z++P0ee7zjPO8z3me+7nHdd+1GnhKv5PLQRDc
EAVBVX8PTYOgrW6sFHFhHgTz4yC4W/eHqn626Jd1v6XqDywFwa9hEJyu9nuI
nqP6U1S/axYEYypBMFl9mqju3loQvCB6vcDtW6i+j+glGmeU2i/T303Vf5jG
21v1X4huLfo/td9D9Lt6/j0qj9T4L6v9JP39QnRTtblP5Z/UvoPKw9V/f7Vv
o3sXq7y97v2lurt0LxB9oJ55tObymcZ7XLeuVrvXNV5r/b1I9dup/Z9qf5jm
vJnK36k8WvVfqM9a9d1bfRbr3jGqH6H2fZmb6ndR/5tEH6M+f6u+rehLRO8g
erXo3xPNX/QBun+q2o9R/yNVt0p1F4neUPfPU31H3ftd9y5VfV+VW2r861X/
vN7Xibp/oO4dpPIDul9T+/6i31PfbXRdI/oo0X/QX7+vh+a6p9odpf7viZ4i
+jXRt4n+Rr8nVLtDdW+F/n6j+d2s/j00zgjVrxR9q+g9RZ8s+me12UJjR/wG
jbG95nCB3kdH9a+n8qca7z/RbdSupGf9T/dW8r1VPlT9T1b9MaJXqP3l6t9P
v2+5yh9q/M9V/7HaX6m+B6v9ITxf7SPRt+nqp3vX6Oql9vuo7zGq/0ztx6lu
P90/UvS1+ruv6nupfoDo8Zr/vpprV9GHid5O9SPUvsb60z8P6X6i+uP0m2qi
HxQdiz5W9L9qN0/3fq14zM9En6LnLRf9nugRKp+ma5XoIzTu4Rr/79h1k/V7
3hF9oX7ffhqrqca9VvRA1T+scR7RNUjlM9T/B/V/Rc85QvUXq/0Bar+x2o/h
fal+mepD3btCdbNEH6S+s/WMmbx73eutugZqf7XaP6bndhI9Wr+hpcqPR17L
rOlWKt+jdhWVD9GYg/TM7dT/M9EXsm7U/z7Vh6IPV/1Q1c/WM4bzPTTGwSoP
UPtTVd9P7d5T+230G4ap/m/dm6X2T2mcLsxV9JYqv6p7P2qsPTTfj9TuTPXf
S/WvqO5/6v+h+j+ouotpK3pvXW+I3lb3m9UFwVL1L6nfAbr3pf5+yYfT3/0D
84yn1W8njXeVnre1ys01x94V781zNVZL0QdU3Pc8+Iv6l1Uezx7SM15U/Ums
LY3xgsrHa35naaxD9fsWqn2dxjxd9Oaqf4hvqv5/aLw/4Y0qH6L2bVS3XGOc
r/aDRJ+h9ger/wLRC9TmL7Vvpfq1Kr+sZ7RT3y6qb6nfN0RzeEx1j+s6QeXB
6n8m30f176v/ErW/hd+ruv6id9DfU+FL8DSVh6t+qcZ/V2NmKrfSdXDFe/kC
td9H17Fqu6PaTlY55r2Lbqc5P6jycboeUN/XdW8470/Pn6PyiQV/v1pzvlrj
XROYZ8EH4Ad1uh7XHJdn3puHw0NVnql7N6j8jOoHq+0Juve5+m8vei+N/Zbm
MU/l/6lujsafELvvgep3rOhX9fcx0QvU5gy1OUb931T/bXTvNN6V5rNA9AzR
/wvNp+BXua5HRfdkPqpfKvoVPW97XZur/Lbq5mr8SzLzp880znp6/wNT7xf2
zSDVN9LfkWq/le5NU/kG1R+t8gLeFfwfPgiv1RiPaoxhGu/Litf/ZWo7Xc+5
SnN7nDNAbfdS/XjVtxZ9kXjRFZn52XfqW0/P7y76Jr6f6p9W/8nsoWK/c54N
Vf0XFe+JISr30HWz6E/Ufqbad8/97Tvp3TTXeBvp3mzVDVHfF1XXVu2PVPth
Gneg6BPVbjpnrPo8B28T/abK49V+nuqXZt4bfXXvKpW76bpK/W8TnWjsOl0z
i7XyvNqvD08SPUj0C4yfej+yL4eyXtV/tPrvqP4NVM5VP0PtB6j+OdVfpzk8
w17WvetVXs5+U/+P1Ocp0Vuo/QeqO6c474em5i/wmRNEj9Lfj1X/su41V/t2
esZR6jtc5SGq/0D0xfo9O+i7HCT6Rn2D3dgPog8u9iv8ET45WPQAtX9b/Ttr
Tufo3XwregrnNmeO+n6t6zrOc7U/Ue3/Vf3tovcV/ZTo/9RnA7V9mnes73GT
xh+g8d9X/fG8D9FfqP0lBb87Wv1n63kHcGar/ISuS0QPYX9xFup3XCH6lMD8
/CTd+6rib3aiyr8mxfml3/N07vNrlOom6l5v9o/mc5/msqXo91TXS/fOVf0d
xZwHc2bDL5iT5vYJz9B8W8GzOZNU/5zK+6n+ttRyEPLQKYyv8XZX/Q2qf1X0
dM460ZMr3nPsvZ8yn3XIIJdz1lXNS+Gp+6n/YM3vUd3rHvg83Edt7lT/6aK/
EH2srmmqH6JrK5U/0fW1+jbV3F7jvFD7O9R+ue49p+f1Ej1R9Gair9K7OVz3
TlM50e+az3mjfn+rfndkDo15fWpZabjoT9T+XdX/qfrdRH/AN1T9m+p/ivq/
pP5Him6v9j+q7hLR/VPLm8idl4r+CrlO9EKN8YTGWqIxL+P80P3LVf+p6AtF
N0cuzT0O452ke32Q0VLLV8hZl+WWu5G/T+R7qX6N+k9T+Qj1P031gdo/gvzH
vhE9UvQ+nId69hmiv1T7y1XfQfVXIJ/q/Vyjud2lrvXV9iO1+wf+JfpwlfdV
/STR36vPPGSDxPLzUXr28NzP4XmNdT2ve9PV5wO1f0H9zxQ9Qn120fOfVbth
aj9F9bNULzJYqfqTVb+r6p9jnal+lu7dCC/SeMfr3tNqv0jt5+neuar7VPeG
q/27uveI6obq+z+hd7JP4PPycM33WdX1UP/D4HW6nhfdR/R6Kv+W+WxFZrxS
5c+QazXepmqzl8a7Tr9vJ7XdVs86QPO5WfReyP+i+yKPq82z6vuV7m3E2lH9
fZxtqp+p+oP5jqqfypmt8mWZ5Yvlaru+9v8A5BvRA9FLVP5X/TN+q/rPUv89
1f5WzWWaxvhY9ceJ/pCzRfSnrH/R74u+X/RC0bcl3ot/6ln91P8TPedf1fek
vZ6xB/KC6E/VZobe9Vq1f1jlI9X+GbW/SfTuon8TfaDopvADZCe9k9+Qp9S/
n/7+pnsL1X8jPXMj1qbuNVN5Z7W/UfRuar+G/QFfVXkLeLTKV+i6TvQZmsOF
Ncu9yL/N2UMqb6Rrf9FjVX+qyqP1jIWqO0vjfpBb7kX+bVXy+f6lLvTRQ/XP
26xxjbm7+m6JPKByrPluI/o19mvq/Xy++h6kfh9pvFz126m+C/xGddfoOlxj
Xaq+H+aWm5GfN+RMQxdQ+23V/nW+R2q9C/2rbcnr+yr0MNGd9NszvY8PRX8o
uqH6dNeY89VngeiOKn+r8b9O3f4vzX2V6L/U/hvRE3SVkSVFr1B5HDqu2izI
rJseqOe/p/KWavNe2TI4Z/xCtX9H9KGiN4ktj/ZQ+13VfnfVvaXnzed76P43
el5n/V0mekjZOtZitflM5cbsGdXtqGup6MHwrMj8YG/2hsbrEVp/PZ2xkY9V
3k/1nVWvpR38ovqRok8SPTiwvn2W6BPRrQOfD6N1Xaa+3fT+liLjqb6f6g8J
LDNzLnI+jlX9rqwtzf9s9rLafgw/RV8JPMYvqv86tF3iCtG/iv5BtF5TcC36
Lrp76Dp+E7/tHF3DNcDxgfXVM0WfIPrgwPaFy0L35R3xrlIN1kn189E3Ust9
yH/XwiMi2zWwb4xHno3M5+B31yNTqNwQnqO+/TTWuNx8Dn53g+q7IDNF3jvs
oa4qr6/2m6l9Z83jN+wpyNiqvw37R2R7whmq7657L6o8V1dPle9FB4usR6FP
TcGmgWyv5+6i+bdVn1NV3l9XV9GrRPdRub6e9zPvQuWxyNvqs7f6PwqPj7xe
l6N/qs0DKv+BPCm6mdr/DD8XfZXoS0Lzjx9Er+b7qv5L9CX9fVj0ExovU5t6
oqdzHoheH3uPrsWaz1nwCJUbIP+xv3RvA2wSmsMnyIOin1Fdons3MRe1ydCf
9Lw3VG6DrAi/qHl+m6t9E7X9WfVrRO+i+1+h/+nvXNEJZzr6vuonit5BYz4i
XthE954X3U71jUPz+xdEV9lTNdsM3kRmCWxLQMe/Qe2+D6z7Y4P4ptB/sE1s
h0ys37qT+v6QW2ebrfJ3lUKX0/MHlX1mrNB4T+g6vmQZ+fHENoCbNP4PgW0D
2Gy+KuRxbDnT1Oa4km0uDyW2qYxR+5WBbS0Xsv5Ud0/V8ioy71x4RWBZGJvK
NWr/bWBbCzLwq6pvFVg2fib0u/5N186adzW07nef6BTdJHT5F11dRa9K/b3X
Q8/HfiB6TNk2HWw7rAvWBzLRl/q2bUW/VbbOjY7Pd+J7IfMvU/27Gv91noWM
Bg9LLY9+HPl9Xq6/pYq/EefxdaKjir/xJswh9Xqrr/JPan+36CvhB5pPX5Vf
0zWP9aL6FbmfwbNe1b35evZ3Gm+0yh+o/eai/8NugD2nbPsQ9iLKkzhP1Pb+
1Ocd5x7n8c/Y+0R/pj4dde/fyLy9i8app99bwU6juntYk9g2aj4L+mu8v+F1
om8Tfb7mdDlnu+79iryuexG2uprLr3DmYUdS/d2iH8BmoWd9Dw+E16tPe9U9
GfpZP5a9Jn9EXlF5seq3Vl1J1yWBx4j5nuE6kTK4WvTvkfc5+31LPSvS/C8N
Xbe3nve9ymNT2yuPUPmT3HwP/jdX85vKuk+9ll5Qm0mp58zc4UnwvPtqbnu4
6l+vej39ofZNRJ+k9Xi/6l9H/9X1lupXp97LP6r+XZW/0RiniT5Mfd6JPB72
lV2L5yODIIsMqNjeuDL12n1K/e+EF6hP/YrP1PZq2yizfHEwZ7N+zwaZ+Wlf
0b+L/hadRm3rIcNpfr0Tz+8B1VfqbK/Yk/mwd0Tfqb+PVPzOf9Cz+qr9W8h7
fEvVL9N4q8p+Z3sn1nnRfZEBnyzWP99uup53e+p3wLvopmtn/Z671OYxlb9g
zYnun9m+jp29zPi6N0P0seiQunePrpkV37tb5VE1r9VHRU9U+fPQZcZk7IXI
lBXbvJAvOGxbF/aA17QeSqLbVGzff0f0FbHPV87Zv3Pbpzl7OYPP5Xuo/niV
z4AvqP4i0fuJPhK9K7fejv4+Tr93d2xNkWXLLXRvH9YTMprGO1r0iJrtGtg3
xiCzR7ZfHoO8yJlfs70f2+H+oo+q2f6Jrfsg0QNFX6nn91X5GJX/Qp/XO25a
sYw8PvWZwtlymt7vyaHPCM6K/4kegWyq39+hYh1hLrxA95qovFPF5y06BrrG
02q/gcprkSkr9hngO1gEn65YB0PeGhuaV+9c8RnN+8Y2d5J+2y+aXzXzu+Cd
7JRaR0dXf0zjr1/zGcpZego8NvT3wZZ2uvr/mltGRVaFR6yKLAMiC8KzfhId
InOKnqNHv63xv9f1p+pexh6R2sa+F9+5ats7+gr6H3pgXGf9DVsCNoWZKt+s
696KdYS3NP62mffrBfA2jfUO/En0r+pzo+oXZrZNH6bnv5/ZPjShYpveDSpf
G1m3v0v0TTXLO8dVzCPZo+gHA1mvgffweF33I2/q+fOwFbJGKp7TLawP7J8V
t5kg+kA98yGex7vX7/kgND1N1+01+y/gJcics/UObqx5LujMY1W+U+PVq1hm
34rfn9r/czS6rH7vuNT+mSNFL8otD6zzFyEX5d4X7I8+gf1dvK/TRTcUvQ22
Qo0/peJ3Nk5tz+cdqMzWnIkNGZml4j2AT2mc2tdVfKa25uxIrU+jV3+h543V
37ziM3kz1mpm2/8A9V+kjXZXansnds8lan9pZFsm3wR73bWcwcgiyHiaxAmR
eQE+v2tU9y4+FGQv5CneZc38j3vUYW/rpfIRuh/pfb9Xte0NG9zD7Ek9P1a5
nZ55TWIbALYAeNCeNdtgscXCg3rWrC9jH8ZOXNN4v6eW5ZZxvhTybEh77LUa
b0VsewNrNamzzQbbDTr345xlal+p2Ob0rMq/6iqL3hR7mfrPq9o2jY36QbXv
q+c/rPIdnO0aryZ6a9Evo89haxQ9kvNA9f/l/gt9q97fWs5b0efAK3VdpvL8
yLI799BZ0b/217PPZg/X3Ia27AHkfWQGZAf2APrxp6HnwxnEWcQaZi0j46yM
LC/9g7wPj9DveS0yb8fmiw3pJ9X/y9mq+idVbs45D39HZgutr+HrREd8V/0f
1TWoZBmb8+wBXcdwdoneU+XnsNEgb6rvxno/S1gzoofq2jq2PyFX+UfOcdX/
VDN9Avqm/t6h+R2BvI3tIbYOjC48lW8GL1H9UaL7YzdT3fd8V5WPVf/vsV3G
lo2OUbldbHs39avUbjM9b3PdGyD6Y833I43XXvRH2CYL+82i0OXB+EFFfxx6
LPrQ91+N07SQp5Grb9T4GxZr5AaV51Tt++Yboj9zXvB9G+r+c1Xro8jO+5Ss
zyJvLRPds2R5LNAzWldtv8SfVKd3ui37RfcaFOc99u1mZZ/vZbVvW7W/Gn/s
gtDv7jBdrUXvHts+fgnvNPZ34fssYo2F9kdjG+2q8WZE9i+P4HwSPVPlv5CZ
qv4NrNXmGmN/fovqG6nuH84X0W1U/7fKWWJd6g3d20jzfUzvpGfVMtujKtfF
tm9djtxRvN/tRF/NbxD9kNrspnJLtb9LYzVGh+BbiG6EL0PXnSq/pH7jtb8W
qf0Y7H+8Bz1vgcpdVH++/u6mez1j+5s5z/ZUeW1oX++NonvHXpOszS/hgap7
o2Zf5vW6t6/qbsH/IPqziv2fW+re54HXNPZq1ghrZZH6f6L+9UV3Fb2zrg1i
6wToBk2qfj+r1aZb1TpAVfTGsW1vvFPeLe+Ttr/oGatVXl/3dmSdYaNQ31+Q
AarW767GVqL69qJHFPId73sv0TuFfv/T8ClVbRNgf/I8bJH7Ffa+kN9Qtc1l
hv7ZUHTvqn2CT4e2tyxV3S4l22PwX+yj+otV31nlWVX72vco2f6L/IZ9tTk6
CzZxjXcQ61v3z8n9nfheHXRvTs3rFd9Fqez9fnZkeyE+8Jax1whrBX38enRV
1X+r+u90jVF5k9C26fexMarcR+1vrnrPgBkYHdn//bmui1T+PDOeoJPqL1Z5
MWcu34s1E9tvg//mS84PlSt6Zxuq7gXWuN5ns9C+yTdUf1po+QZfyB8ln9dt
sNEFlpGwbz8X2186SOUr9fu7iD6t4BecLdiXsTcP1O8PCn0O+8JdJeuP6H/Y
kwcV+hv6c3vRf5V83qOvo6tMLll/R79vqPKDJdtTsCdupXKl0H9e0vMn6lFD
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
cmzl8CR4Ez6hAYnXwxT8miXHdnKebxA5ZpNYnM9y49jBs99arKcwsg5HrDk2
nkmBY0Ampo5JnxwY4wI+cU3svtgAsAUgYyNr418Dq4MOgS6BDRhb8OXwJJXf
U/vNRV+c2Pf9NjpI6nilh+ElZeNHkKGQpeARxAJdmrhuvtq3S43pAtsFRhW8
yiapbRfTRD+W2qaMbfmEsuOxsLFia+WdglcblrgtNo9QdDUx9h+bAbaDMHFf
bALYBoi5Ji6ANhPUfhFrMPBveq6QhxpExuQTm7QodWwEmKK/C38HWEwwLmBd
8HcQOwSGDCwZ/g18t2DqwdZvU7MdB3sOsRv4K/CNEnNB7EVL0a+UjAnHPoyM
iqyKjR5b/crcuIx1+AyehT2zYp8L+Jr3dX2gcqbrx9gY4NMiY1zAugznTCsZ
0wa27QzRzUrGuIB14TweEdl/S2z17Yl5RZeK44nAwF8ZGUMElgj7MLGbYJjB
nl+dGKsEJvnP1Osd7BaYQrCFS1PHFoA5/UflF7DxlYxxAuu0bRqsC3iYVXb8
DusDrBIYJLBIUeK5rIvByLzewCKBif4ltf+L2FcwiWATwQzODo2XArQGBvCV
0HgpsIHMl9hJ/IVbq+/XueMoufd8ah8avjQw98TTHqX2pZIxnndklifxsb+o
4bfNHZ9+cNU+HHw56E/4yrDZ/ZdYX8JXhk0M/R95/Sq9z29KznWAfoMvC53k
t8RzYm6vlI3/2i+xrEbMS4fM8jg+95m6t43KxyTmNWA6t8osT12g8ReXHFvP
mcjZiM0BeXO3xLLFuOJ8P1L02sCY1C35LaL/DWyTHC+6X2LZkhiZLUQfmjg3
xX66Rqv/4aLXBMbwTcisf4GtIuaZ2GfwT2CT7tf1rMr7q351YMzw2Mz6F74c
bH7oV/i88H0RHzex2N9go+eWzA+QCZENNyhZv9w5sa8NHRb98cDEsX34ZMcV
+4+YpU6q3wP+ndrXTMwl8ZLI/9XINityfxDT8WJomzixHierzRNl+0gz0XNj
21MfLRsfivy/UeQYrDHFfqMOH2tc7LenyvZRNU5tY+e8YEziR9Fn6keOgSfW
8sXU2PzfRS9V2wvQwUW/JrqV6pblxu3TZjb7P7YuTxvio5fmxiHBk2fxW1Pz
jjr2u9rOi60vMyfwbfh4OB9mlh2P/Wbm2F8w4W9lPp+I/T9Bz5+WWt8D8w7e
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
KrDX/wdkG7x9
           "]], Polygon3DBox[CompressedData["
1:eJwt13ucT3Uex/Efxsz8ZoYh1ymJXHKp5K6hNGFcSpSQmDa3otrIboaKaB+5
7FasWgqVxCKXSh5ySWqRXKttJUKbpajH2hZdbLbd5+dx+uPzOOfz+r4/n8/3
fM/5Xk7dIaNuub9sKpX6iJVnjXLcl0ml1mSlUruAqelU6ovsVKp3RipV23Vi
Zip1RV4qNSQ3lTpQLpW6mKYrbTn+i2KPaG/PPyvpN/zt7DL+tSyD/jv+B+xK
fkeWxs7xB7BGYk6pky/HTnXbY793X6DGan3rwN/AaoqbipcVe4bfh10q9nOx
KXy92Gqsu7gj2A3wk/p+K109uuNYWbpNNBfpdzd5DmJlsI1YFdZZ7H6sk9jH
xVbFumGHsR7YE9hWLEvMUewWbBt/qRo/YN/SXogt4deNcTCmr+v3DvxRugrq
tlV3MjYpxseYTsVOuh8h9+tynuW3wStiFdizUUNbJrZQniFYHzleoGutxmPq
VsOX07XhF+BdtO+Taz4+QN0jeEtxDfl76Q7z57ODYgvx08bna35TNg6rRLeI
7nJ+hrov8AfR3STvPPkn4zeJuRCfQH8V/yF1tvMrs8ViH+Z/xKpqP6kvt2N/
5dcS30Oez7AFtCXYdWrMl/8zfmtj1k2+KfGO1aiHPSdHV3512t78E2IHyDfX
uHQUO1fsPry52KLoGzZI20BWSPeKmqfFLtDeU66VtGmaA/J8ynaI/7c+FeEN
6Aa4vhljo/498r0mz6tshZga8W26notxLp/ER57xWIrdjZVnmWw6v6x8Ld3/
Wo0SNRqJy8MKsTw5W4pdiuVgbbBRdHfSNY73iw3D+qq5RN/P8QtYH2xljLv+
3al/h+TZrPxY/EG8qbq12MXuX2XN6RbSXK69KZuLnZdvovsm8g1yrY+NkWMt
XVOsBHsbu07saDVuZO3EfB7vSB8L5R+uj4f0tXaMFzaUv0/8OnnGxDOLb0LX
RWwrsQewFnRXY3XU6B9znKaNGnfRVMHT/JE0A+R9Wa5ReEftm/B67JC45fgr
7AP3pfJ+6HpK7cHYXuPZUv1/8WexAv61+LNq9aJb4v7PbJf7B8Xudl3GX8r2
uB+L7Y1vhf8i+9T9hOi764/ytZJnq5wd2XL+G/hw7Sv1+Tltffh1PEcjfV3D
2ur7Snl+ph2qPYvN0L+NWD9svefMdp/FusQ7E38rzbK8pJ/R398ag87ybJGv
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
           "]], 
          Polygon3DBox[{{2335, 1366, 1554, 3095, 2218, 2219}, {2328, 1362, 
           1542, 3090, 2207, 2208}, {2503, 1547, 1251, 1252, 1548, 2504}, {
           2327, 1361, 1540, 3088, 2204, 2205}, {3069, 1378, 1286, 1285, 1596,
            2534}, {2416, 1473, 1293, 1294, 1474, 2417}, {2334, 1365, 1553, 
           3094, 2216, 2217}}]},
         Annotation[#, "Charting`Private`Tag$526980#1"]& ]],
       Lighting->"Neutral"]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0l9oz2EUx/GzH/vNfvZHkkLb7GbsL8oVW3EjRmkuGWoXk5XNJa3kzlJu
SbI7trnCjJnSZnNLDftjjElNsuXG1VJez9Tv6fP+nHOec57n+X0r27pOdOZF
xIj1dE1E4k66D3Ssi9jAb89EXMAV+ODaiLNyf3MRZeoaxJbkhwojzok38VfV
HqOjYqn5KTyFu/Ebe3rlO8Sa9bouNshf5u/iYdyDX9JbabY5r8Wr7LvPB90j
Nic2g4eEDvC/+Ql8HOecZ1HuHf+AFvI78iPe80V4J/6AS3A1nsJV5p12nmlc
jdvwDK6Rn6W1tM76iDfaV4/n8CbcgD/hzXgX/oy7C7yZ2fO4Tr92/b7g3fJf
aV82Yqv6H2oW+Md0C7+idpLP4r1iS/w4X4CX3TG73mz8RGyan5S/hyfoTZpx
/4fi1/Avb34bv1V/iR+094hz9Ig9Un8+nc2cO/gkvkGP0kqxK7gR/0mz9Gm3
pxzXi/2Ub00e98q14DG50jSDVsiPm1PCv6LF6d50zCrCZ9SMYseJZe9x2P5c
Oi8+hLWMAe9Tpo9jxAu1I5YnjedUKi7qMYzz039En1l+8V2gKW/1M4lveD/W
Jvpt2pb5/43/AzXtWh4=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzjkvw3Ecx/Fv66qjEptJIgxGR4wMpJMIbeJmYSPhcZAocVXrSBxteRg8
CCYmo93S4tXhnc/1+//+v/7NvdxuIiK2sJ2KyLdHzHVF1Pj9jogp+a0zYlY3
kI6o6490d7Z7ZPFhK9AF537tx/YHuSw/0nn7ie6Sr+HPmQM6bB9BzT6BU2eW
5GUEv0gz+l7/rfIVnOlfaYK+0D7bIc3jBz3yjvvP7VnfJumQfpq+0xndoDNN
8gXK3lFBDp+2Im3WF1DlnxqbviSX+BV3tPBFPMtf+LaP40rXbV9FK5+mk/o6
xvhRXOvX6Qba+DWa9J6bxn18it7iHyiJNCY=
       "]], 
      Line3DBox[{2157, 2463, 2987, 3064, 3229, 2156, 3029, 3155, 2313, 3033, 
       2449, 3156, 2314, 2857, 1180, 3157, 3032, 1186, 2464, 1077, 3158, 2929,
        1079, 2465, 3230, 660, 2466, 616, 2699, 3286, 889, 2467, 826, 3316, 
       2831, 891, 2468, 1136, 3359, 3011, 2991, 2992, 3354, 2315, 2158, 2456, 
       3159, 2316, 2984, 1184, 3160, 2930, 1142, 2700, 3074, 3161, 2932, 1081,
        2469, 3231, 665, 2471, 617, 2470, 3232, 666, 2472, 618, 746}], 
      Line3DBox[CompressedData["
1:eJwVzksug3EYhfG3oUIvpqbaYbsLZnUvEqNKLIC4tKi2abECmjA3E5ImDTaB
DRDCAkh0A34dPDnveU7y/77c1k55OxERG2iNRzynI54mIqbko7zJRDT5d72F
NprIZCMa/MD9h6J+op+7v3CGSe5b1vlXmdfXvXnlXpPX8ti2Kcdsq1wfZRS5
I9us7ydtK1wPy+jaDm0l27StrjeGbyGt12xv7trwDVSR4qv8r/sHBf1AP3V/
oIMs9yn3+ReZ05d878K9KC/lnq0iR20L3D3mUeB2bTP+acQ2x92ihLtUxIP8
B5zILa4=
       "]], 
      Line3DBox[{2176, 2390, 2840, 2391, 3321, 2175, 2969, 2392, 2841, 2393, 
       3319, 2177, 2860, 2394, 2842, 3192, 3075, 2178, 2971, 3076, 3349, 2970,
        2395, 3023, 2179, 3057, 3343, 2949, 3056, 2950, 2180, 3164, 2323, 
       2181, 3165, 3065, 3193, 2182, 2490, 2843, 2491, 3322, 2183, 2972, 2396,
        2844, 2397, 3320, 2184, 2861, 2398, 2845, 3194, 3077, 2185, 2974, 
       3078, 3350, 2973, 2399, 3024, 2186, 3061, 3344, 2951, 3060, 2952, 2187,
        3166, 2324, 2188, 3167, 2325, 2189}], 
      Line3DBox[{2203, 2514, 2513, 3243, 2202, 2326, 3168, 2201, 2954, 3046, 
       3367, 3048, 3047, 2200, 3027, 3028, 2850, 3351, 2980, 2979, 2199, 3080,
        3198, 2849, 2978, 2977, 2198, 3087, 3197, 2645, 2494, 2197, 3237, 
       2493, 2644, 2492, 2196, 3239, 2504, 2503, 3240, 2195, 2501, 2500, 3238,
        2194, 2953, 3043, 3366, 3045, 3044, 2193, 3025, 3026, 2848, 3323, 
       2863, 2862, 2192, 3079, 3196, 2847, 2976, 2975, 2191, 3089, 3195, 2846,
        2497, 2190, 3236, 2489, 2643, 2488, 2496}], Line3DBox[CompressedData["

1:eJwVzjtOQlEUBdBjh0qJQURAPsIcGAMVA0BAvo0ORBM/vYaGGGND4hBojQEk
QSejrlfs7H3Xu7l55f51+2ovIlrynIr4PYj4k46s0hHZ/YgnvtQXbM2O7Rn7
0Xdsx3J2187bPbm3T1hPF5z7cn4YcSN5XtMZdpl8c+eUzb155DxInG10gb/w
Dz1gX6xov7JPPWRbVrLf2Eo/sG92Zo/skj2UR7vMxkk7j6ThP26lwuu6ysYy
cafKFt7MJWeZsqY7Nf6u/wEqsSUm
       "]], 
      Line3DBox[{2225, 2516, 2653, 2515, 3244, 2223, 2529, 3207, 3106, 2222, 
       2528, 3206, 3104, 2221, 2527, 2702, 3309, 2791, 2790, 2220, 3096, 3205,
        2652, 2511, 2218, 3095, 3204, 2651, 2509, 2216, 3094, 3203, 2650, 
       2507, 2214, 3241, 2506, 2649, 2505, 3242, 2212, 2502, 2648, 3279, 3091,
        2211, 2523, 3202, 3100, 2210, 2522, 2851, 3326, 2873, 2872, 2209, 
       3098, 3201, 2701, 2520, 2207, 3090, 3200, 2647, 2498, 2204, 3088, 3199,
        2646, 2495, 2518}], 
      Line3DBox[{2227, 2517, 3066, 3245, 2226, 2519, 2707, 3289, 2341, 2666, 
       2531, 2708, 3290, 2342, 2667, 3109, 3177, 2532, 2343, 2668, 3110, 3178,
        2669, 2344, 2875, 3102, 3179, 2670, 2345, 2228, 3247, 2524, 2671, 
       3067, 3246, 2229, 2525, 3180, 2346, 2230, 2526, 2709, 3291, 2347, 2672,
        2535, 2710, 3292, 2348, 2673, 3112, 3181, 2536, 2349, 2674, 3113, 
       3182, 2538, 2350, 2537, 3108, 3183, 2675, 2351, 2231, 3248, 2530, 2676,
        2352, 2540}], 
      Line3DBox[{2232, 2542, 3068, 3253, 2543, 2400, 2545, 1376, 2544, 2401, 
       2547, 3254, 2353, 2546, 3081, 3184, 2549, 2354, 2548, 3111, 3185, 2677,
        2355, 2233, 3249, 2533, 2678, 2356, 2234, 3251, 2534, 3069, 3250, 
       2235, 3070, 3208, 2236, 2552, 2554, 3256, 2357, 2553, 2402, 2556, 3257,
        2358, 2555, 3082, 3186, 2558, 2359, 2557, 3083, 3187, 2560, 2360, 
       2559, 3258, 2539, 2679, 2361, 2237, 3252, 2541, 2362, 2562}], 
      Line3DBox[CompressedData["
1:eJwVzskuQ3EUx/FzQ0qva0EIYeUZ2GldfYU+QmvcsDFF+gIeQC2ML6A2Egvi
mt6DpSGxrGV9uvjmN5zzH+Ya2/WtJCLqeByOaJYjBtOI3kjEcRYxwF9jRT9E
53W/+ORPUUIHX1i1k9J38zP6jXOUUXHfLTKzHRzoFu1n9EHu8of9PVr4x53u
j6/iSd6VA0d4ltf04/YTuY0xvur+df0kv6A7wQU/gRtsmE3TD/0l/cEVprDk
bI5Rsz3M9jv7M7SQN/kWn9MX79/rEnlZfpX35Rr/xv8DQ04plA==
       "]], 
      Line3DBox[CompressedData["
1:eJwVzkkuA2AYxvG3C0mpKWkikSCkdqzZcgWb7i2rg6Koxj1wClPtiCHmsb0B
a7T0An4W/zzTmy/fxGJpoZiIiCyayYhad8QW9nojGvJ0T8QUruQ3eYzfxijO
da+6qvsReZPu6l50iVREh9/QDdvW6bzuhH+21+kPPtxUbEP8Gm3TYzy5mbW1
0ZJXbWm6Qh9tl/oyv4wd/kE3ac/gQr6XB/kaBnCmu9P181X04VR3qwv/+uVL
3krpi3ROd8Tf2A/pN97dFGxJPk+/6AGu3cz8/xOf8pKti+boPh3HH6JfMu8=

       "]], Line3DBox[CompressedData["
1:eJwVzEcuxGEYB+BXi+4OlhYyQyRKgomFRAnJOIHBljMoW+U2WIg2o4zuBNoM
oywtZsXzXzx52+/7OnMr2eWaiJjnpynioSWisTXiUR3lnip3VNoivmVu9A0y
t+oI10yar9QPmS+ZS32RYf7sZt1n+HTbU/fZpatdPtlTceuR3WEi+cuc0m+z
YR7i3a7ZmwX5JRZZt59TD8hSlil6U6fPUc+gzAW/nCf/uJfkCvpa9zN1gDzj
5lO1LPMmc6w/oZ+S3ZF6yKvblOw0feaCWwcv9ml1izH7Z3O3fpM1cy9Pdnlz
Wr9Kigz/+Bg9Pw==
       "]], Line3DBox[CompressedData["
1:eJwV0DkyhFEUxfEr0q3bChDYgZKRoIxlbMoKBLSpexWGgIDFCFBIlSExz1Nm
nqdO/AT/Oveec9736nuVA/m+XFFEZFFIRHSXREyjC9vpiF/eeCoijxym+P10
DRWlEQ06Pzop+xjS6NSp5W+hYL7Bt84VLZFf0w7cyS/pIu+Cfumc0XPMy9rp
KU7wKevVK3JnvayNN5uM+OBX2+eQ4b3bN8yt5km0YNP+xh92fhQjmOCv0FWU
+2arzqvOoD2LITTr1PDX/9/BfIwXnUOalB/RJtzKD/7fjLdPn3X2aMJeVRzR
aN7Fgn2HPskz5nBvnbMNvBn/8shvsZfxl+VLeMA9enT+AIm2QWs=
       "]], 
      Line3DBox[CompressedData["
1:eJwVzr0ug2EYBuDH5q+0X0tiNDQxGIuBsbRNxGASNgfQNjEYOjgEpNjZ+qOi
cQh+6wwkEovBAejWxGW48tzv/bzfl3fxsLZbHYuIPR4mIu6nIvqssco8Ff1w
OmJOfmfACWX9j7mUitixb8uJ7sjM6z7MjPOXeWBfpD4ekdbl7K/0lzzzwo19
hf7/O1jRZdnQXZCT7/QlvicjOvTkBf/q2d3SYEv3634iv/HKMZv6xN1TeVau
m8vOQ3PG+dPc9902Ne9M6bL25/ozHnni2r5M175DQZdmXdckI7f0Rbpy2ztH
/AGS9S5Y
       "]], Line3DBox[CompressedData["
1:eJwV0EkuRHEUxeFroopiZi4loShUIkIkjArB1AIEC2ADlL4tO2AbojfEXN8P
2IAmGPre4Jdzzzk3N//3spPTo1MVETGGjuqIPfRnImaqIurNs3SXr0tFXKYj
9mVFviTPmudoqjZiXHalb5CVsFkTkce1rEDL6JTf8GfmLnM3bvltft6dRn6B
Dro1gDvdm+5A/olFXRNdol/0EOf6e3tH5m8s63J0hf7QD30PHuwc80Puruqa
zWs07e0Tskd9S/I92LLfiidZW/INyfvkeTzLLvhecx9e+B1+3a12foOOuDeM
V9277kT+m/wTXYGW6R89RaW9fzQLNiY=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzj0vQ3EUx/Ej0TLoVoOwWMpaSd+Bh6UNEXeRSmgiqUQwSCwST0OjnYiZ
iQmjxmAUE4mmCa/AYBSbBJ87fPM953fuOf87Wtuc3+iJiATt3ohMf8RhJiLL
Rzw3EPGdjfhQ7/ZFfKGpTsxbqc0X1NOYxBQWZWWu4NX3uVxElzv4Q8gHZef2
q/oLXuId/Ni91K+qr7jODfzKh/3HLUawou9wEfeYwJqsxNf2KnzDW7JZddON
O/2Qt9u8LT+WPZkt40G/nt5F3ryl31Pv4wCP+mf5ifqFz+yepu/zp9mbbNzt
d57hMRTwD+dCLf8=
       "]], Line3DBox[CompressedData["
1:eJwVz71OAlEUReFj4l+hUllqgoWJYKVGWp7ADBa0xMFGCg0PoAXGTjvfg9YA
UhkDDdpKraCJ2ptY8E2xss7eZ+bOnXx6cXw+FxEJHuYjLpcipgsRo8WIT76S
/1civsx/ulvOLUfccVW/Zu57pocz8+5qxKN55KwTuSCnXMcp3u1yugl/INFV
sK37ln/xk+H9lvM3fLONTaRyw27f3MEBGrouH+IIJTR1T5yghp5c4UF2Bvpy
ndf9Q4uf5Wu+QT67l/xiVza/8hbf2w31e+Y3XdGdx1zL/hE7mAG69i2d
       "]], 
      Line3DBox[{1209, 1514, 1956, 2056, 2055, 3352, 2057, 1786, 1787, 1526, 
       1789, 3230, 1788, 2064, 2042, 2043, 2041, 3346, 1428, 1991, 1989, 3338,
        1990, 1239, 1348, 3164, 1250, 1543, 3238, 1544, 1706, 3279, 1545, 
       1897, 1546, 3171, 1712, 1567, 1928, 1568, 3179, 1724, 1592, 3249, 1593,
        1733, 1618, 3255, 1619, 1292, 1646, 3265, 1647, 1648, 1482, 3227, 
       1668, 1935, 1934, 1936, 1827, 3302, 1828, 1683, 1830, 1829, 2097, 3356,
        2095, 2096, 1977, 1686, 1322}], 
      Line3DBox[{1210, 2035, 2099, 3358, 2037, 2038, 2039, 2040, 1743, 1924, 
       3286, 1923, 1925, 1904, 1905, 1873, 3317, 1429, 1994, 1992, 3339, 2122,
        1993, 1240, 1349, 3165, 1251, 1547, 3240, 1549, 1707, 1550, 3242, 
       1552, 3172, 1713, 1569, 3247, 1571, 1725, 1594, 3251, 1596, 1285, 1383,
        3189, 1293, 1473, 3224, 2074, 2076, 2075, 2077, 1813, 3299, 1814, 
       1670, 1818, 1817, 1854, 1831, 3303, 1832, 1685, 1942, 1941, 1739, 1688,
        3276, 1978, 1690, 1323}], Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/H3ucMNd0ZGnSuyG0wUO3XL3RHDSSandJ1isDFQrEoUCxNl
POVrYLjtyELnH5CyWT0Mz56v9+vzs1DbKNVTEVFGkomo90fs9Ubs8j6XchG/
fRE/cj4bMYsjeYGPuWK9Kj/a/4AEi7o53TzezQP5iC5/IKXrwaDuwvma7pJX
OK0f0l+Zt83X3PH2pPztzlH5DmNYNb/yFBJMY103wzfOlfmWN///J+fc0TIf
8j039QfymrUn84m5IT/LbX4zN3kLw/61hHF/W+aOPSP8wkU+tWfCXV/OdHXn
8idnrJ3JO/gDhSAvLw==
       "]], Line3DBox[CompressedData["
1:eJwNzjsvRFEYheElcYtLotVRCBOXTk+iUUlGM6IRiWMkMgr/QVyioNH5D0Tr
MigoJJLR07okjEqFp3jzrm99Z++zB5c3yrWWJHOotyZdncl2W9LNO/zTnnz0
JE35Vz7gRz7kBf1tR3KNWd8P9SY3csM9K+ZRc8GrqOLVrk/3zm8o6+YxrPs0
N/GFb+e33D3iP2cooTCv203JdUyjppvhE2+p8Clv6hblc7ngS/OFfC9XcWVe
437dLt+Z93gfR+7/MzfsBrzriUu6Y7sH/aT8rJuwe+ElHscY/gF6KS8k
       "]], 
      Line3DBox[{1218, 1522, 1868, 1921, 1920, 3325, 1922, 1791, 1792, 1528, 
       1794, 3231, 1793, 1530, 2069, 2070, 2068, 3368, 2140, 2139, 1997, 1995,
        3340, 1996, 1245, 1352, 3166, 1256, 1360, 3168, 1267, 3207, 1578, 
       1899, 1579, 3175, 1717, 1580, 1603, 1581, 3183, 1730, 1605, 1626, 3258,
        1606, 1734, 1628, 3259, 1629, 1296, 1656, 3267, 1657, 1658, 1484, 
       3228, 1676, 1938, 1937, 1939, 1834, 3304, 1835, 1693, 1837, 1836, 2098,
        3357, 1952, 1953, 1702, 1696, 1328}], 
      Line3DBox[{1219, 1523, 1957, 3330, 1524, 2065, 2066, 2067, 1529, 1796, 
       3232, 1795, 1926, 1906, 1907, 1876, 3318, 1430, 1877, 1534, 3235, 2123,
        1535, 1246, 1353, 3167, 1257, 1556, 3243, 1557, 1708, 1558, 3244, 
       1559, 3176, 1718, 1582, 3248, 1583, 1731, 1607, 3252, 1608, 1290, 1386,
        3191, 1297, 1479, 3226, 1480, 1659, 1821, 3300, 1822, 1678, 1824, 
       1823, 1855, 1838, 3305, 1839, 1695, 1945, 1944, 1740, 1697, 3278, 1979,
        1698, 1703}], 
      Line3DBox[{1319, 1405, 1769, 1699, 2085, 2084, 3355, 1313, 1399, 3268, 
       1661, 1306, 1392, 1933, 1660, 1812, 1811, 1298, 1387, 1760, 1642, 3311,
        1806, 1805, 1291, 1382, 3221, 1630, 1459, 1282, 1375, 3253, 1610, 
       1609, 1275, 1368, 3245, 1560, 1268, 3280, 1361, 1540, 3199, 1258, 1354,
        3236, 1536, 1247, 1347, 1908, 3321, 1435, 1236, 1344, 1998, 1878, 
       3331, 1961, 1960, 1227, 1339, 1872, 3219, 1871, 1427, 1220, 1332, 3229,
        1525, 1205, 3151, 1329, 1741, 1505, 1704}], Line3DBox[CompressedData["

1:eJwNzz9LQgEUhvET/isonCMQsqUvUBY0BC2Bm4laU/QBipYQBPELNAfl0upU
ETU2NQhBNQi1eW1LaAiiIYd+w8N53+ece7l38eCocjgVEVUsZyLG2YhPXOQi
Bvq5GXMRRbmJwnRE2/50NmJBP8aVm5ybvnwt32DkJsGGnLh9sMvLW3jn3/DF
r+u3djNmytxH2a5nTtJu3ezK99w8frhXrsJl9Y485sr6iXdkuBY35BJ9iD38
cl03A/5Ff0Ydad99xvfkJ7s1/1fCpftV88/ukd/RV+RtbhMN3PFLnq/LNXzY
d/DtG0bmP4W2MMo=
       "]], Line3DBox[CompressedData["
1:eJwVzS1IQ3EYhfFXmE5E05pYFteWFkQEYWVqcksuKTKDHwOTYWXVoMYVi9pE
28Rospmmd6AM8attxYFJwZ/h4fyfc+7Lza7XV3ZHIqKM3GjEYCyij4V0RMLz
cgmLKOHYdoTDyYgZ+x52+AHPeG9ji3/xW++imys86150T3KWt20TMiWv9Wty
2XYh0/rflG/1q/xGn8e3rqsr6y75NJq8r990U8MGzu0N/av+nb+hihP9vj7R
J/wRHWSnIlq2+fGIe1uGz/Ef2x2vuCnwOv+Up/Ls/97/e7YHWeBN29D7Q/4B
aLIyBw==
       "]], 
      Line3DBox[{1324, 1406, 3275, 1689, 1315, 1401, 1687, 1864, 3274, 1863, 
       1309, 1395, 1767, 1671, 1816, 3271, 1815, 1302, 1389, 1763, 1649, 3266,
        1474, 1294, 1384, 3209, 1286, 1378, 3250, 1595, 1278, 1371, 3246, 
       1570, 1271, 3282, 1364, 3241, 1551, 1262, 1356, 3239, 1548, 1252, 1350,
        3193, 1241, 1345, 2045, 3360, 2109, 2108, 1231, 1341, 3353, 2071, 
       1532, 1798, 1797, 1223, 1335, 3316, 1870, 1869, 1422, 1212, 1330, 3345,
        2036, 1211}], Line3DBox[CompressedData["
1:eJwVzrErxHEcxvHn5Bx14iYDkbrVhDIZLKYbnJTBhEVxV2KxGCy3KvkLcImZ
W+xGZVBmShm4iSy8DO8+n+f9fPr9vpPrzXqjkKSGqWJyiPO+5AzH5aQqH+Cm
lHQwMJjcmuPcHt7ctdB1O8aPYoRv4IXfxaeuwg9jiN/CKbep69hL2ECL++1N
ts01uar/lh/lFbkiH9k/uNr/O+093Ku8KO/7/g9X4J65Be6JW0XRu6/NKzzo
5nXL9hP3dbONC9zr5nQT7mf7kxl8yXf8kttp+467d/PSf/4AoWcouA==
       "]], 
      Line3DBox[CompressedData["
1:eJwVzj0ohXEYhvH7hOMdWEyySDmr/ZCBsipCGXwkVialZDuLyShFyW5CsZzF
JJMy0GFRzuRrUQzK7wxXz31fz9P/fQdWNqbXS0mmMNSRfJaTDxx1Jg390Cx1
JxV5G7t2e11Jv7yJM/vC/lY+ly/QdPOKUfnF7bVdjzyBZ/4J+/yaeWVX4FJf
NWe5GURucAtmXa/gtz255+Za7+k1+Yub1Le83cbtcE1uWV/CIn6449Z7/KP+
gHmU/fcBfyrf2Y0UyTBO3FfNP7sbvs9dVe7l6vqgPi6P4Z2v4du338x/ZzEu
uw==
       "]], Line3DBox[CompressedData["
1:eJwVzyFIQ2EUhuEzmLrhTBqM24LVYBhMZGCwigbXBAWrC6LgGGtrC7KoaWlN
wabFYjIanOFyZ5tJHYLBID4LH99533N//vuXDhu7x5mI2JHVmYjJbMSXbM5F
JLhXiFgzr5hbUspFXNlf8EV8Jqe4i5fNDTnB3/jRvOXsjYy4Ny7V6/jebl7n
9R1/pPfsrnWOz+iE39cP/Ib8ZiNeuTp3ixelgyf8Nnfu3EC3uTH3jsdyIH2+
ySf8CKfT90l5IeLSruZdz3ZLuIb/7J5w3ZkqLth/Tv+FG7o35V90xXcd/sf8
of8B124wsQ==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
SJa1Rq5Brwf+Xl2UTLJpg8Nv2c5QYifB0fDu0ty6fmjaplMzG9UOpxV/Kj1e
osCE9lRWM1MnXDyT1kPVICOq8FrbwqdUZD6XJON8rAv8mB5m31ogo7a/1nGO
fjSUX9Z5V4+lFZ5Ep6xQ85tB7sf058IyCqRqWXTi/px2S85nto0Mj1NiFD4a
0MCqSOv4uR1tcPmYy1789yn3c9SObNemgU/iJWv89ykzyrL81sJN0J04dj/E
hA5yT/T8igoIDuy5WGc904jmY/xNGGYE/3Sf/Jm70gMcNdvPH2RtQp5CvaXf
DtIRf4lnsh4fcW5T9Ay8T0umORSJfQoNKkxn8D7VF67XwvsrmPmPP7G/UKqC
ki7eXwMCyuGYc3juWdwgOAe1X4zTwJwToKj9I5vgCr27J1IIrkCJDk3amCv2
zOwQ6vhAgl28RwqS2EsRCa2Pz/KbguzNW/7po+5/hpfSxi6of8bwnz5K2rKI
ddO+VvB89etDjIyS0r/PKbAryFnR5E3/n39nzvXlR0kIlQFr2lx6teK7UYVQ
2VW/nuOF/z5pMIM6Q/73z5/WGyzFP39S/+Jb7Lfqob+cCL+FkNOrqdhv/8/n
hP98Tv7Bi+uxf+6jPThG+CeSX+Lch/3zW1O6IvZPHYmYJMI/kYqvYgH2T+58
Dvnj6WUoxmPa6MWDIbgQcdaUyENAtui/pMVcATKs5/miPw6jg+ejVwt9nACD
tSyq2Us1UGVyc5vb5gk0yXK12+rnMEw1f7xveSMTTepECyD5ZvB0P06efDEF
GY80Fd2TioDVs0JUibUThdjqvdIjeIGpLDX++DoTtMKv6aR6xhnslZ3OdhHz
LL3E02ewi4RCuorMWaQn4FHyrk3o/DAk/Enm17NPgSXFtri7mTlgzFo1rVDD
gPM3LNYdFiCjXDd5q5KlXnTQ6ZuLPZEL3/y2/OIkW4WeDCrFx7OSkamp/Cq2
GTrkrzW4JWBWA+Kf9/hV5rXAaxGHGbmndOiav8y66kE8KrjMZ2sznYXkNgwF
anQT/ibaPHKmhIycLcnqbw6OIufSxgmFvlH4cSN6Ua2kBX07HLfSrTiG0jYw
nzvlPwIWJL5TSrK5KK3IOmk7Uy0SuV1yYnQHAzy27evkuUaC1W/tPR89GYQe
lxPrbR5MgoBz5k7vjBq04+/rLtMdQ0iA8mPY32cSLDp+amwcLoFDo3bG47Gd
4Bi7i6Y7TQNBnW/3OhqbYbT77cEav0nQuHZAZEvHAKx5atC5JoEEMaeLRF9E
jIHjyAe9Ur5RSI/2X6VUE4bCuxSjx+jJKEx19C0TgwGtNc+dTSeqkK9SjVPB
3RFk+mitTlH9OMRK/MzcdaQE5qMex3pM9UL43CYwpVAhyricTntMgh0LvxNE
91BBaPfVxemwXthVK+aylakBTMQv9D74MAGjbDLHZBeHwOOGaatKeRjKCRN3
O5+Zjo7edxxaP0HkkSMGOn1LDchYlbVQw2kS6ZeFvTpeOQjMzs4u1eV16Jbl
74qcQipa8zfs4427PWCeWXa/hTMHqafMHBMQb0fnOlWOH0yiwwvp965aZ6th
n31xb/PNCdBNM9ITTh+G12FbTDWPVcD+QQNNDjuC4/MNVGQFx6FP4ZLxVo5S
5P7iS4bIpSGktcP4nVzVJJixN5k8XKxCqzQCHvBvmgCBS7/5c7ePwKH7asr4
ffMtp+M3ircTPOf+6wDxvk37Df2CdfJgjSeDl/tqJ3Ll2X2gRIoOb7gPNOHP
M07ze098HrTt9ehL/HmceAq9dAvr0KzC2qfUz5OQadIbeTt7EDgZL3fqifnC
+iHQ31oXh+yjBhPNfxP6H+PYgj//3m7vd8TnRwtv3BdkiM/Pm2KetOnwW5h1
rb/MeTAfMWcUhY4T+h9pDYvE3+vdDlF54nvB8RdrZvH3cpDnY/1Y1gBaj1FK
zn0qenHyvPc+wlftBw8WpK0phEd2L98+aOlCDJ3fvQsNNIg6kHXo+81qtGUs
IDMldQyiRO+aNH4chVr/YXWsk6c3opIJncBb3wAhrBPXwwoce25+Ru1cEZo+
/WWgG9wRv82fAb9D9NqwfpQfZPW6T/WiF++OOGD9uG8w+pWrWg8mNyCKwjWB
Np7/JuVJGoZ+u8i4dYlpiCvm/onNXjXA+Blwz0aBAT0Tz2ptbcpA9tyn6cjK
AeS5M/p5UykFbm+a7cG68q7YPq+TmQ6TK+voWFeNTlvppVcr0U666aub0sPg
0jxtBfQJiJ8hPcF6ux6aGUPoDZjqu7Ox3ixlVg27OFaA4j07j8i2AfQjJfqa
SQwFzrRr83fmVKDdd6rM3nMPwlCafr6bKwUsRtuMAtaWoLcqsyy91FZQ7f1w
VDmXDsPiry/je6o5vqN/LLYTVT0V5dAj7unosJdD3F4ScPuulzlDHUXWG1+k
zRO+MScrZJ0j4Qs2F3LyXjDeIEeeQ+opSwSffOZnxfdUT/aq2yA9GfIO97zH
93ToLCtnuE8ZpLaXPKtcbEXsLz1Wf42ig8kP3eQOfgQan+ZOIelsyDSy8jgf
zwDeOJvN7wYa0fkDvKws5RVooHyiZvLeFGS51Wsz0RvgeWJ4pscgGV5uzuJc
vEWHVDG5sILtjXBIeGNsrUMHUMTvGm3xp4GfEevCNYMvEOcV68PBSAXR4LFn
h4YZsFbB+IIGdxny8dkdyl9WjW4J2Z/b+2MKKhb4e5IzStDVF6NiHtfrUc8P
LYH6mik4mKyZM3O3Ep3b+WGWIdqAkkL7XG8RfFjL94ky5hcKtlo/I/KSI8Hn
0kK+1CKD2AOP+miHfMEuzZhcd+cF8N/SXLqwwgC2iIZoh7FaiOr7nvCS0QSx
eYq7z1LocFK9h185vwWE79LrN54YBinXUpRsPA4v848zp6bUwlxckIV1VieI
h+oFF7rQ4KJZLw+e56WcSQNinmDx3kwAzzN2wu7OfWo0dPawH6mNS4JVw1y7
1acYMLq1p1iiqBzJlGtedpJuQftCww/l9tPhuucrmb8ptajEJfrvqS+9KPqq
7eYj7lTw2aF0LPQQGam6fz1ZTBpEJqtuLDrWTMC5Rs/2tLFmFPiDK2V90CDK
2RU4Zc05CXTxR/PmrCQUX7vT5pToIPL8epdkWjsJOe0y1pFpZajmYXKSrDwZ
pUyfOL20YYrg8wyjx8If4PjEPDNPTAbhp5vKhgcYkDh1J1yw9ztUDRy8GtlV
D9JnJJRYaFMwZiTlwPmiDj4YhMkk+nbBO3EJz7BjNFDgjNTDej5fGHqL0DN6
2Lx3H9ZzkfmwdHomCfGWhenvOj2C3jGfMu87Mw756p8t4thaUKH3Xq5l3Qm0
8MPF11BxCHaeNe5JKWtCZyEn9MarUURf3R6zcWwUdtkKteh2VKDDVcV7Hxd0
o5UO8mdQo4F3O1mywuczGqsuCZ7RK0bDXX9P3PrCgGf+3Lfxvdh+cq1wBOMN
nNwco4bvRf0pZbmdH6uAXnne5wyxj3Tvut1miqRCiPuNa/h+jab26xD3C8ZY
10Tg+9XBcqBAY38z1CpHHjRcMwYTfjPy1w1GIbFtfNakjgxnZYXVnbgJrrYI
DaMlDIG8qv4y6yESPIv8ytX4cRj+WN1Hd2jjYMe2SnPYtByyZULTO1h7YfjK
5pVtrDRIukfmvDtMQm1TgicPXZxEDnO+/EfeDwJ7nTCLwlgNWuO/V+Gr2Aj6
6Th233RyHIzDnwlinzS97STi1V+G8pVff8c+KbnfOwX7nilpJn2jVw26Hvjq
yT++t7yyH/PSu5uvmglegucyrbaYlxi3IRf75zqLVaWEf4KLtgEn9s+xGdJg
CHcDqP/MDWb4jYHfi5BYDYdR2DySWFK7gQSSjhxXpIQmoOZOyp4mm2F4cvnq
NPbVb79oMYSvwuUtXQj76pqTukwPCD/Ui1p/kvBDWF/6wgf74UWuLf9w2uV1
01X3zzgjgV8depjTrh1R/o79NijmaA/ht+jho1IZ7Lddd2g/Ogj/7Etje0/4
JxIUsA3F/rlvz1wl5rrc02GPCK5Dx1UTlgoJrjul/ScJ79/bgRRlYv+i9+sm
z+H9aytqUoT3Zkeirw2xN1H9t/ZivDcPb5m8iXn1sIUwE8GrKEpUPQbzal7s
aRW8l6tUZe+tvtoJNds8e4uJvfyuOHwr3rNtD3dO7a2Lg7TDmR/wnj1n+Wkb
5lvLl29uE3wLvNG8lTsIvn3wsHXl8d56CM5qCZpnp8CXvqWp57sG4dmZBANt
ei2s/mk8Ok+nQJzL3QTtmH4INxGVx3s2hO4cTexZkEm5n4H3LJfzvCfm5NMH
Hv54tJmYP/8Y102CkzdsvFqG9/iPkO1nmA7mw1RTcTLe422NmxbxXnY9fvKN
S0sXZPnqC/4m9nKdoNQlzNW7L0tfKJJvRrwbtsRjrg6miI7nEfv61d7wWWJf
o+tfPu7C+/qK8471plLFqCu1/PcyvR+eqZ3SHrKgwrm3J7ctmCRCwy+Y3XKp
Br1T67uQocoA0uzqHeKzVaBje71u4OA48nQ5keJ9cBSEXA70zkRnQqeEM5m0
l4x65l+EZVhPwQ2WsE1XhT4hYWZ09EBSGUTZ8upKP2FAnIdAkBJHMXB7H2Ic
L+lCHQbxe68W06BY3EYmMeEhyvxN4cjwDoPQ0e+ZTcsMuHhUZYJUXIHKXw7V
Wg8OgpLZTrZ+6iSIigwHnzrShEJ3w/StlknoY1LsA9IAFK2VzUvQCYZfSTYT
q+PeoxMsdwT8iXOs/bGtuNOsHBhP9plucu9G/Zd/1iZb0Ij34Xl7O6MemM04
nj1u7kfNR8VVPxdRQO3ExffTSUWopoP9yejrRPCzqIw7kcQA3YU3O758KoMj
IZJ/jnnXg2HzZ/+ezCn4xV5ReWFrAir+w6l53DMV3YaqxNdjDGiouDtJ1i0F
dbnO+eAgEjzqtY8X8Z+CYy+7N79fqkfGVcGsurdb0e5nzwePydHhrSbnw7p9
DYjLIF9soaMTaWvlH7h1mgZ3U6K/WvkUQEfdopitQDlksHtOZRoS+07BTN8o
B4GonLagjmQtzPo8l3BgZcBGtmDnVRV5kC/ld3ZVRQ20RVebdmxjwHd9xtPD
D/LQNPXg0cMPapC8IxKZ3MUAzWfbvuO5re0Q6OKMew9Ko3Kb8NxS14d9U3Ij
occ2PMFKbgMowm5/pNA+Cui43jhSursZ3TLXj9PKH0ES6zpU90SPgaUaq+35
T7Vovf7v/ec/daO+dpsLJoQf7r36TU17PBbpp24t1xpPQ7mWvE5UYj5F4nPi
awkeYDYQl6JcbUVH+rZxu9XRofp5g3iSVDm4f9/AmyTVCskyB0+3EHsn/U5a
lLp7HazbwRGQpzEAYVo6bHxEjtu2I5lDnjUBCe0+19Hy8zuqqtudk1HBAJ7l
LU0pptUoisRtIXB2APX8alpUrabA0XFOD3QzAvmoNNxU1U9F/KwWPBU0Bnw0
SEzBOkmylSsjdALkbTWZWCfr+zMHKJrFkHfF8e+BzA7YmtP7Ll6GDk9y4mcu
rWkC3138P3WI/bLh4zeqVMYoaK66GSYZSQKy8fhT0qVR0NsyOV5kMAY/b1vI
acwVovNNQaF9TK3IIJoWZv+HDglnaljFNEuhZbd+DX99B1ycJj3V2UIndG5e
uebTQ2TobdDDfT8E2XfZfRAlOOfWH6ts9901yNflALd54AjqmTF8m/BxHGRL
aKpd1qkoNm5gd3RjNUpkt9Z8qM6AXfl7nPC9+7ZJ9JNiSRcckvVfukLcO4Oj
vPxf/paCxG3I0Ng9CFFPoqvXPaOAdsNf3yCveuA5uuNozqFxUL7yU+591QjI
mZxi9NaWw7VSlY0SOwchW3oxZPUDCoylLEji+8u9XSaqxDsMfTm6kobvbxHr
Igv2AeXYuUSxpDKUfcVGDvvAiYL7hfheb2XIbbAZHERed/1a+4h7feNaOGBf
YtpK+bNE70c5VigU+1L4Jsv5ecKXhl7z/9l+qQZEnBXFsC9ZFnWaY19aPFsY
TPgSPKk5R8W+FPPOg2mW8CXrOquHjXvJoLvy/9D15vFYdl37uEoqQyqZGgwp
REmmUrFQSSpTUqmEDKVSkYiiDJkSSsYMCZFZIVPbUIjM8+y6zK7rQqIU6Xfu
7vN5Pu97f3/vXz73eu4P97PPvdc6jrWPtQ/JLzgv9R5IO20sWItWro6Tm2Nj
wBif6Yro/a1QfUNcxf1iGJKJfxwXirLB+kXE9u6+SVCYMVnFIPjsq4LjwQSf
RS7+9Tu+EnxW5wPLYcxnL0u++0XwWZTnK78B89kAjgbjcvY6VOtkEzkwxYCv
phMtOZb1kD+3tcnYogKtSh9gbcvph9dbzHfovB6Hir1VbHjf3mOO3Nc0XQCv
dBuK8L5Vnl57Au+TRHb3NcQ+AUX9jlS8T5Z3njgcs20YMmK7RZ9q5yEKy5ZK
XcowiMdS1bfsHAaRY/GcYmfyILroN2OwYxi0tXkmOhVT0Bf5zXXBu98jZVuH
ZY21kyBiZ3K+yLwNVbpseTCcN4RkUrY6NV8chKYb9qaeb7PRkLiHMyWsFN2a
OFyxn/heNVPikYGzzbAoH75b584APDSO4fQQGQGWnleL3rHlKP7bvK5+bweK
VOTmjs2lQ+Tz5W9wXs1nFF4i8iocdOrUwnlVWTlF8OS+BqS5x+OzUcYA4v/p
djopewQmowMU/UpSwOem0nCYdTGM7Ojx2pk+Ca/XUc2bxBvRjT1emQLEOiva
3V7ecYQKhRdkasucMtByJ56H+x9XoLktw+IDppMg/tjqSfHdBtiSvftNjMI4
lFQ/Mx8X6YeLtkJ3vp4rB0f1AmPOr30g97v1E+d2Ggw/lOBUSPgMO8TO6qlu
64MwkY+cb+VpsKT+VQ7+XnzZ4qrE90IUAwYb/l6J5jdCV83Wo7RUXZZ3XTT0
NnitDq93J7SMBG2rlqlFz7W3xplRx9AJuYLwzv0UmBud1cT7yju2+80zlI1k
0nbuwftqj3fPiUaVUvhkquT8WLMPhtlYKme9aUBZUCkpPFCLUO3ZAxf/4Hel
VMKedvZCTmnpXVzv1N59WXq1eQxtOZNYgevdjeByV7yfxdpKJYn9jD73SIvh
/fzDmNcS78O8zcEviH2IYrihA+/Dkx0Wm1941qHlBzuD1hxhwKMq7SR8z/Wx
XZCliPi7/rG2IsTfhVAxzz78dzlMXBTxfa5UOE/uD2s6eldcu2pWsA1cZo/E
43WmXTUJI9YZvf2W6YjXeXXy936sl+hmKLtgvPVc7sMC1kvMWJqoYL6QJiqn
TPAF+BjHa4/5wsE3ZqFYh/Bn2Calz3QQLrl8zsY6hCaOHVJYP/A24upJ09kR
xL2ofxDrB9wcU49gnO+jbSFH4Hwk6SD8AOP851sqDPH9/k2j2pLNoSMo6+Yz
eXy/L3e4PRvrOqwq6hUuiIyiknr+PyrbqXDl4O88rPMpHPoYx5Orj9jevvir
89EwMy/Euiwmox1NzGlUVBUunIx1WVov1A5hPY+5Q/4ik8MARMxln8Z6nj71
XYFYl5V8uMHpgE8O2rxXOB3rstDuAwFYf6UpsVmw40Q/zPnZd2H9lUaE9i6s
q/mkly6WdKwBGlx1WLGupuFpOwPrpg7eMGUUjgzC4/0vnLFu6riZtijW1cQn
V8erBvainIuqjVhXU7Oz9wXWTUU8n3dWy2iC18krhrFuam4gph7row5JZooe
3NOGTON//8H6qAvrF2exrqyqPunadscc5JPw5w3WldmpTi9iPWH/Q7mU3vFO
lFgUPIz1hDsdC0exrkydt1+ruLoLNA6azGJdWcX9bX/1hJcuWpUcVotFhl4h
f/WEop1lclg32MTL79xt0Q6vbLiSsG5QaubECaz72lgbZHf2WgPsjJzlxLov
uxnn2gjtFrRKsvOKoUUXaNe8S7OijsMK3qw+rPuaC32U2cfchO6xs93Huq++
DY+ssd5vweLT8LXTlVC/0kcC6/22fdDbhHV9Z5Tnz9873IC+Bt19hXV9sXb5
f/WQs4ciVNZHvITt9zk9sB7yX/0Q9J9+SJZv91+9awG/c54KJRsMudbLYr1r
6ovRyznBFPTI1adyhv8jZLavKvVXHYftL61HcX8+88nW87g//89POrisKJrE
ulOTcMuRocQSpNML2Vh3av07hR/3///TtzdPOh6L+/86Ho9Z8f34646RLXfF
GaiobkIQ34+3xD2WVLpYg+pMZ8oPXGSAy0Urh115zaCcfK2x4E8VOvFr/hh1
5TjM93kuFBlQ4NT9ImesG/Gg3WJ+KUoH0xWee7FuROVxvDjm0dtCvfJndEpA
eX3HHsyjj+4clMO89bbyEeEO5h60dMVNKuatjQ75qrhf4TUoX3nkTQ+YWt4X
xf0KYU7nGNw32N2yrjK8swYZ9AgewX2Df+kb0X/0jZNrk3pxn2fO+ueAy6Ua
ULzux4/7PP/SDcJ/dIPsIal/+zkB5yObqqwD0Z/NAX/7Of/SwaL/6GAvJc7r
bPjzGRmf/Unh//MZ9jVPxjQkTMC7odQtWF965VjYkCJ3G2x2M/HC+tKy+GN/
daTFh2Otephz4LVO8UGsI5XplPxxgFhnazFUT6wz4miyO4nXWcm+4U6jQy16
uaHx/l5TBnhJfTx7WLUZDJNj3lMe1qGt3I7RvpQxaDko0OfESwEpy/o7d4Vr
wfWhw9a7whMofCqlqqupFnw/P6x1KqiFkdfa2x7EMpBRo+yWTzGNsGV67PAj
gj9qmJ2/TvBHpORVyhdA8Ed5ax5VjMcatPfqEngM3TcsZFlD4DERm0MF/GFF
SHdwz1SfUxeITiajY0l0SEdb3/jb1iBXdH6tpgUdzn5+sr/DrwOsYixz2Qn+
lhLuK6NmPwp1CTHyWb4DIHXhdviFX3WosW1bh4ofHW72dTxtXdcOQeaatVnB
tej2C1dHlr3jsMvbq5c7tR96m9eufc5aC7GvU69Neg6jTGedMtw3+DjZNI3x
8Fn34KsEHkZBL+yLMB4uW+VjauHYCJmvr+4Jy6WhHQNRM3c2dsLVnZlKLDyN
8HC17Fvd1jGUclGAJf1pP3Tbs33G+HZ1sanuH/sgeOlw9DXGt51KX21xH0lB
wXZhQXsULtjee4b7SNq7WNUx70h/U+tH8A44pt2uj3mH/UhZNe7nbJL+zXuG
fRhZUDYdxf2ck/fE0zFfqNVusSL4Arqm8pgH8wVGqdk33M/Z9+zF5rqEAZTu
9ikD93MmlJ/+kCRwuF6cu8T6mnbEeaHPAePwelsmK8lwN+S6sKCpUXMT3nJ7
az4h6kXOx6gjGHc9ka3OFz2Th2rD0ATGXSa2HocwTttHvfeQwGnQ81uvAuO0
+wGn/+YTlxOiVCKfICe93SU4n4wcbWXO+9yHDl2afSEkkYVuNMZHH0mjwd7L
nmwbA9rR+Htxo9fHBxCPZnHbSeNh6K3dL8gq14ycDwnHlv3sQG3qxmnCNjRg
e+vtvjq3GQms2tOUrt6PON/ZZzR6joFUiJChiX498gwXcLiw2IXunL4H7KE0
+MnBxlNp0AJBWiqnd33sB5HuJ6XZ68fg/bnICye3NUJl7EzeTnoHMO9fvP+2
ngbXeO2TFpxaUUBNQqUQ7yha9vSGC7WOAjc+G699496CrrYJ9Sa5DyF+9iy9
YP4hOLpjjlOR3gwCxqxKdVbDcMfCTvXy8UHINz9UtvZlIzQ+bopa+5IKu/It
Du8/Ngq5TjHSuklNiFV7dpqRNo5uL9lS8+osgbcbN2a0nGtGe/9UrpJ7SUPB
1OreydUdAOtZmnseNaMlOxZ8Vc3G0Y0zO85uqusBT5mmlKy5WkSjHFxgHhtA
TDYzsrJNI0Ct03vt69SMFL3EtLb3jaKQYVPxtlMUoKhv1tfva0BK1b/zA34N
o93f+vjELAbhropWykRWA5p23r5GcPkoclN5LlIuOwAarKIL1sLV6LdfKGW5
yQByGLzw08l3FBRLH8ilzjSB+W2ZeVluGowprWE5+qoLWp5Vbrd80wRjbVah
NRpjEBK6PzZorh9Su/ZR35u3wNFeiy/u82OgGd/+OiS6F+LqizLSHZvg8s0C
hi3bGIw1Sp7lMqaAprV5cBhzE6Q9TLExrRuDPEqC9lnDflg5b1dtaFsPfGXe
BnsfjED5wXJ9Cv8gLKlVH9mn2Ig+uQuubT9FQ/GPFaVbW7tgrv/JcMnZenRG
QJc3KnMMLaGsaykj8GpI68FRnN+Mznz2IfIbsi6ZncP5bcNtewMu0QoUMbd0
8n7bAOK+YK7PbD0K9fNdyfs0GsD14oC0sRkdfgYVO52bbIM9u7iTdL8T/z19
YvlxBG42izaz5OPpA2M/5rjVgw1we1tJJncrkZe7RCXMaD2gz6Slbt5Zj/bx
1p+fTKehGdrDAWutLng9Xdaxy70OaTm8XKlZNoqMvu8PDEihwsH2q+1SmtXo
/lrkIKVJQ3HKagvprr3w3dh2VZp5HYod+BPvspKOrhdNvo992gknlMXUmjmr
0eczSc/nhcYQq8WuBsloKsx+ENe35K+H2IJ3Q/GIDuvbLp+xY22D2oTnM4JX
aqDV/uwWfW0aPNCxFq2Y6gGHegNnXH9rvpjbEfUXHRzwLMf1l7dz6ibOz7NP
bYUpTl3IzjvLHufnjG0PLHB+PrDq2xYiP6OTWT1MOD+zFfaX6s/WojMb2Y5o
dDJQhFlKJfv6BvATKthJ+1iDUhbKltI+MkDM8a1/k1gjzIi4aOO8mrViQoXI
qzBzMLcD59VDFzeb43ze43NmiMjnyEo8ywrn83usXn54fR4bNAcR6wOHv3gm
4vVp/1X4CPMX/+MRnAR/AcNtxnKYv+QUNU5VEfzl1M+VhQR/gbjr0fcwfwkx
LvJwaK4D+yYF3xtPGATuqGjWftMIk6c/GtEf18HPxkQXb0k6Ylkf2dM31QGi
LFwfNXbVwGRqSenMsjFUy+mXMPWUCldXnRHHfOd57aKmn2Yf+sBl5Y/5Dk9k
8crXpysRZzpjrVXPIMwfYtF9dm8Elrw33/NjTT0KWPGT/0IrA8rvb/+441U9
yLOv23bDqB7xT116Nb6PAdft+m84qhH55Wf1eJllPdq5Z/FJqCAdZl/Fbrhb
3AEWmYNZeJ2VpE8fJdYZVP50IrzOvcfzluL79Lb92ctNBagQ8VWzAt+nZ1ZH
fMK80jBGv+/A4wpQa/Tlw7wyD2l+kp6phbLfWxy2bBpGPCMqzj++DEFh23kf
fM/eI2K2qcpzDBk1lMjhe/aXnoqV+J59nx6famDYMEqK+L0P37P/2lxhiHno
cS23VoKHIi2lqDjMQ89w17BgXYHUkiH2a1PZELc94wnWFcwqbmL3Ifg15yXR
ZQS/hgOKO0Qxv04LMZrGeoNj9B1y4ZJD8ORq7Q+sN7g0aK2CdQVCe9aqCyyp
BvfUAEWsK2DnL1PG/Pq78RJ5gl8jC+GQJ5hf2/JsH8B6g6fSLpfv+1LQ9sQm
Yaw34Kx3fmZhNgwp7hdldELy0OXASHgVS9TZL7sVn14ehp/ebDnrX+RB1DPJ
vGtRwyDz7oTuXkoLWtDw9GIroaKhqvPx9IcjwKx4/e0pagNYh69NfZrYC8L3
q7sqY8bhXAn76uV2LSgTXfppG0xDP2KGeQd02uHxoaDHgQ9akC//fkWBTeOo
/HSLStWmXtjntHrsiFQLevgh8+Cg3CjabSm335iDCmGTT8w0trdAWHduNhfB
25NWfJXasqcT2OBXquHrZjDLUo86R9SzvaImQUfm++FVZezPmdtNcM9/t6vH
gWFYgTIH0zsHQdL29Afm0noUHcdaJ/FhGJWfS6e3Dw5C7eTXMPzdbbhWhhPf
HTzv5l3E3/3EGI/Ja49GsLa3OS25kQEvzu20m+ZuAg0OTS2x6UZwVzlXuO8q
HYJmTZQCHrYC/94lK3/saIKuxeErtWY0qJfeIvBuphMiD3qb4vOVUtoWQJwv
8N4rUozPV3P1cWF8vnIbQv2J8wUJqlzJ+Hw5ejs9wOfrkHDMCHG+YG2MlxM+
X4YJiey3+OpBXeD8ZRhkgOd3PV2qQj34v3ddyvqwHoT+yO3PcWDAZOCXmQ8Z
jdC6vHazSmk9rI483pWTT4fimsuxA0mtQDG79SWBOI+bU5tOE+cRDTa28ODz
uDDcL4XP43mrs5uI84hcRE8X4PPocMlnNT6PokbGycR5RPe7fp/E5/Hb+pW1
+DwWKD+KJM4jKj/vxHAgzqOIsWU4xtW2G27aE7ga7Y68egvjanXml1o47xXe
S/g9/pGBZL6UvcJ5D3xM7fG8w6rR8tfm52mgdnurPp53aDz84TGea7jxLmBI
g3scznYaDeG5hlU3RGfwnMhHQ6/I36voyH1J7gieE7lYrs/ZP9wEt57MWJhZ
01HvtuLYnLAW4H6yF/B8gYxbyOxlou5caEOA5wu0xM5I4DmC1OHIwSkRGmKy
E+bAcwTOsVoFeO5GR0gEz92A91jB37kbqemU+WM9rWh7btEuJ+FxUBO4sATP
3VQ+P0LF74S0Kqe+WSo9CiZitHn8TgglbGsUnrvRKt+zZEFgGBI4bbzx3M2l
dSgJz7P43xO03knwAuuQkeV4nkXfp4KB51kuCvK8u/hiHLkJTFLwPAsP1WVe
PuEzyKIT0arb+pCO/MivLOIcfHte/ys9vRq+NF/0vpbdgXgOpnnhe+2Jh/YV
+J76o+BeydsyzZC2+vgefE/NKvViFs9/BXyQSTvzYAzW5+9WwPNfEnXve/Bc
kvCFttDLL0eh7VCwFZ5L2pfjbIH7h2M/Re2G84bgiMk3N9w/XKth34zvrzfu
Cs9e50fURVa3cXx/fZJ77Dy+jz53qvEQR8xbVPR6/BO+j/56SmZ5y+92WLJS
5UPz71G0+liuF37nxLpttRSeD5qU6aO1xo2g+LB7AXg+aMntliTch2wVfrJZ
584A4jgStRn3IZnf3NfEuoVN/Z6VDyhNqCj8yXKsW+DMaDyFdQhiyi8uc338
DAc03+pjHcLji1yH8TwjTytLndU7AqcGGwTieUZlXhcvPB/H4Vj+/sXNQZhb
zR2N5+O2t3Nr7r7SiZZ2yY04/uqHZA6jrecyR4BvvO+vPsH1o+2GvLQIVHr8
WBHWJ6zxnu3D78+Uf2e7TJ0ZRPqTp9fg92e+RA9Q8ZzazoA507B1AygSeX3C
c2qZVw+Ydr1tBQ+KQ6OpdA9SFkvolRUYh319GcZ43nYrpVd8bUwnJG22Xo/n
bfmMrezw/ObGXk3to8dbIIE/vRjPbzZtWJzjXN2IOMpFv36t+gzyy1mp08sm
wNugshK/89NGT9prYtaGflbM6OF3fqQ9d17F85K2d9KushyoR17hAg/xvGTS
pN37fY4fwf/lprIhlSJ0J7rTRtB4EthW1C/HPGX+Z5UUwVOA5ZhLDOYpo6s5
uPPPdUKnRNLzdME0xK0kJG7Jz4AfMqNc+D40w/4I0xxjHE3yFxni+9D5EP/R
mfU1aKXCo2UPBkbg9LRfIPOyQfh2j/J3TuTQNR88J4Lyww/P4jmRqDXxwlgX
6hCsfjuI4OmezJtCsC50VFGpBOPP5xNmYgT+RM7l58Mw/nzAz8rA81AcPnRB
dadx2EM/qoTnoW41i77AeL6IXVSYwPMwFLR6HcbzrlVs+/CcHa1l4vrcKA12
ii7pwnN2wqz7rbCe9q1sVHGc5jjYKu9Qw3raZ0dLcjEPKnSYLiR4EHgFl/hg
HrThErcDnrPz9lPXtmUfhj610Eo8Z7eriuUr1m88MTvifGQ7BZrMOcqxfsPR
ujYIz7sx9Eo/hObR0KuqV+vwvJtSVoAi1uvaLfgcHn85hhx9zqz8ztkHrCYL
mzCfaooOlCL4FAqT4tHCfMr/9nN/rM/RH/NF1TbtKEHL9BTW5xhrauZiXfHU
knIFz8RheIu2n8a64gPax7kwr3TY5XSS4JXQv6W5F/NK9pxTDzB/3OKZ2k3w
RzgdfDQZ88fq5e6X8RxlQAc9udF8CHEW3hrBc5Suv7I3Y/4Y7KR/hOCPSH0x
sBrzR649ViXxW6rALnowmfiJhIt8N7O+moAW9anugBXNSOL8UCbxE8TPy1V8
zaRDYpTULjmDLPjTZpAma5CFPB6y53a3TELsbd7f172/oOZ2trMe7jQkVujx
4KNpD9hUrct1yqmBqmgmDaccBuJu6Gk+5NsIOzadrPShfIHvHfKy9zpoqOj+
uRNfmbuB19vAOqavAlivbL+8XnIYrTvyqLVRcxh05oW2Yl5zsIFHzrltAC59
OiyIec2zS0XP5A/XQyG34fE+DgZ6z5vR3qDXAjsrP6Tc3VIPzzs8JOsTaSjB
zGx4eUcXcL4RFoHVtcj/4o1K5dUTML+qUfsiSz0oJPXx3Lxci3YozaZd1WPA
Uk95oU2xzSDqMN7a01uDLtidGE8spEG46arWErluWPUo7vOH3Y2QnhEhoRNC
R20CjPYolVbY3LW6yzupHo7Pnb+dfJGGRLq0dEJedwNbVcDM7YF6lMgid3rX
qTGwunFxcU8ssQ+Llvng+8EfT77uN/MZBL0RKTt8P/h9x5puxeEqpNX01CJ5
xyAM1kkYYP3J5Nz3DsxnWz6UsLGYDIBgz81OzGebjOaTsT7k1sahO7sFR9G5
h4dYsT7kQpCzGdZdf2KuLcqVZEDUCaYyrLvONLIxwjxuJNhZm+BxoJcTzXqD
4HFRk9ns0gSPE3auZxwtG4WF8KvpmMcVV9O34Tk+xfHjAUVCNBRJBTqe47Pd
2u6Dee57Cz4nguei90veH8Y818XtAgPr0nm3FVp8eEyDgYZzmliX7vD+iAO+
JyoZs4wRiB+FAK+fvPieqK7zez3GdVcjjuQQuA4KrUaWdRC4TmS7WzXuD5x+
ubKHeWwAwjP9j+H+gNdw/UesR6q8scHeo6gL7pwbCMZ6pLpejm34nvpkqprr
uFELBMTS5+9/YYDodwN7PLfY1qS4VFWKgTgS13/Ec4sbTanPsO6d+uSuXMJp
OmLElZ/AundxlUOquD8gtNJgRpabhoYCi3hxf2Dxkt5mtvflEKG7c5bDohsl
eJxbQd9Ih5nIhb94e+zl3fME3kZex+f+4m2dre+eYnw+e2vpYwKfg2FWvTLG
58XaV/QPdLai0Jt7lYr0+lHvuvE0WdYxKKDcdvU/3IE+CN0/5H94DFkyt5xz
Z+uFsxbHGy/NtqIzP5y7ZcNGUWtry6/fX/shySJ6e/inZvSLOXu/WtEIeppX
08Yop8KC5O3dz5c1oXTW5BFdm1E0PywddkOfCmxDLId3OTWiuC/NObmsDFTh
yyon6NYEfnfa1mQ5NiDRfRF1Grl0tDZuxileqhV6ei+NsujXI47pn8alv2no
47HYkedGneDYfWcdxmms7aXmBE6D7gzRBIzTjFZJ2j8jcPHe1oP07j80KLXJ
SnIsaIf5mfUR5kT+rzaRuxYtToPbsaqyght6YH0hu2mpVB148W1IkngwCkKo
WYKXYwCcg7mb8Pkqne0SJc4X/NS8O4jPV4ypKwOfLzsDlSvE+YKKtaw38flC
+rIrKNFf4HzAYMIq71EIfdcwHas6AAEsd799UWpArCHRCW4ELxb6dk1hmU0D
qLfyyBfeq0cmm04lstxiIP+dIYM5g41wietw3Y2jdWjPwM69p4h8YjXxyf/B
lxbgPbHRF+cxX6GV2kQeg4M7rufhPGYzvc0Z5zF0VkCTyGNwYcRsOc5jrTaD
IjiPcTpxvSXyGJg9WBqI89ijlON2uRK1sGcHd9QIDwNas9TXqS22gOv6q63H
1hK/v3OzVvnvcXCeYoICsT74eu6nJe5XDzkbid4VnoCyVc4FuF996uHbeNyv
5ilrk3wQy4An0/arcL9atHJI+kRXLRg8H01c85oO/YNl+0tn26DDtfca7jNz
ahReUrMfRS+TTi1m+g7AoOjaVTgfvngxXk3kQ1Rxna6K86Gl9t7BG0Q+PB9z
9D2RD1F5QOvvjUQ+NN163x/nw9E6VaakQhp6+Cv4Kc6HuuvdxXHfuGGbYZlu
6xj0VedMpz3thzrvjPs4P3cXF+kT+RmceasKcH7W+Dnvj/OzhIzCASI/Q/CD
4nc4P3dvCnqM+9t9Z3mCWfaOo9VO2fm4v11lnMqFedN49W0LgjchpR9mZzBv
2jLauA7zpocui/IEb0Jpvw+vQARv+n6q8jLmfZ0OdH2C9yGUs+E+5n0FO8LP
Yd73PWVJLsH7UI2bzAnM+/wC5/kwzw2M85oheC5InNHcinluVeXdUMxzs8//
2k3wXGAyc9bFPLd72Q4bzGdbZZamE3wWbXCsBcxnExSECjGfjX167xnBZ9Gt
rctiMJ/dLLlqutyuCW3TlnCbv0zwoKejUSW2vVB0RfAaPi9WNgZfifOCJBic
Efi8jJ1rihfhaIb25dcWLRRo6NiVbbl+HF3wwTX5Be6Lyne8NNjeNwoVb4wE
cV/UaIRzBs8vTPNorehWGoaVbz018fzChRUN7bhvGa2k3eg+P4aCiy+G477l
9bfiT86btsL3q4+kU+ZH0DNJhfOVCxQw83UJHqlpQ06rszOkHo5BE4fH9Prb
xL8/duqF16o2KPvU9a0ybRRdfLXzZXh1P0RKZk2/vtOFnucvYeYJGgKXFZaN
C/sGgLXDbceG0g5QFMnRXq80iHIfHZjI2DkE7lzmfr9HWpFsabUq8RPcDJSP
bAijAXPqvNu9z/XA7vdajfiJvqoKGvrkMsCqVUgOz+MzXyw55SXBgBU2L1jx
PP5ibLENntduvc/lVynEgCq7sId4XjssibUIzyn313O9Lz3DQKy9fBN4Tnl3
lJwq7h8es6pmxCM6+vFcQwn3D9u2HmDyXFEPkd2xaq6nxhHbjpaDd3T74WAn
VQbP+9vHN89vY6KDSHJ8NJ73l3r7ciWe95eSSZmelqLD5Hq1F3jeP22ijy+f
txGGtFdKjvuNIrbIW7SdV6lgEU+/IP+mBja2VtovhNPhwAqx/Am/duj9GKiK
87B10GIukYehnNVMGudhNb2U5TgPH2JhaybyMKQoVl7HeRhe26wYLWqBFGa9
lRIzNNRV3mRdr9UKdadGNkZ+aYZlLjVpavvoiOo+3H6nsQUeKW1+gOvIBsbw
YaKOwMhm9rO4jvBdqNbXYmtHqM1Jba50DNQT9M+5mfRAoLX5r5C0DkgsUS8O
SRtDjNY9iQ9UuqH3Qptjum07GG4/y1krM46iTscs177RBZv7Q9oa+5ogg60x
63XOMIqISAt23j8Ipx1eP7BAbYi9gu85VYQGvt9sS+7KtsNy/e5j6o7tKLfa
XqdHcZyoK5Y7jAm8Iefq3ozn2nTocvs8FsYRhRUV47k23elSnqfc7cD93DLu
R80Y0pOVKDOU6YF1NpYaeI7vMZ/M9z1TFIi4YmqJ5/h2rQhdtkulBznl5ydL
qfRAWHbermqrUWBuZ36P34e5Lt729XpqP1puaFuD34d5mNq8LMSqAzyjpqKC
rTqQQocH5RfBs7RGnVdENTYi7pxHrfT9dJi1pK+44N4GTkkudweCG9C95RUB
P17R4H2byqOsFcQ6cKZ3p5rXIe6Xm7JcVtLhtDH7M9zHzvF8QJMvaEDdojVr
1IUZYPrNtTgorQli438PD65qAiafhxvantBRhm3plsjsFuhrV8grXmyAqoHI
VKkjdNR+jtmX51sb5J6W7MD3Ap6bv/O1n6KB6oOUDfhe4OC1J/H1kq3wRt3i
Mid9HN272bvv+pNO0HGe8W0qInCr3TJ52ptx9CVQmesLUR8TAhbp+O+Kn5Tj
I/4u1M6Fb8d/d73L8afO1EaQSg98WnSSDgpRCY1vif18OGN8Iz2iHmXXz8bl
JjKQ/FCmpfCFBtCg/vmq4l+PkhdjD/M9ZSBt66Zmf6ZG4NpyVc9gSR10vI7f
2j3EAAnH2Mz3hfWwgsXSPm6wFq6VDSVLVzGgaSnbIwufBgg1Plc9116Lxl68
SJr8wEBrMm4Jy3U1QMvdvpaaN7VI4FxjsxXx+zszzqQmsjeBpwpfAH7fJuVQ
qNbA5nGo2MmyE79vo9vwhRfPXT4VmWgC01FIf/GSE89dWiSkM64y9yCOq01v
I78MQ9gtaVZpEQpYmznI4vdkxA5l0+tYxpGzgTkvfk/moJxnCp7TPOsS9PHb
qlEk0b/sB57TzJFTfd/N3w1Hlmq8110/jH7bPVvCbkWF/qHj+d7RLcjG0tJX
oIYGbCzq8yDZBjEpT6ZWJzajK5a/9RKI/SBwd21zHaMVbo0tf/drRwP6eFLA
NfUWAzzUxMZ6VBrhfceZ2wqN9WgHVWfZ+lY6cBWfQKxrW/8f3sRP8qa+rJWx
EvxE3d8nd1yCfwJ53Z41iTtfByH7GbmZQrXg0eNyK1NoAnVsbuer668F79S5
bWuHayAw2nhyzTAD1U4qO6ruawBF0sdQmfQxTCd9DP/tu6dF+u5t1DpkZaLY
ADDT1Dn5iIE++lx9dD6pASryZ4R4ljXA7Rs//bq3M9AO/d8cyzY3Qw3/J8cB
2XrgjXpv+aachlq1KjT7DLqgmdRL1JJ6CU9SLzG3/uF1T6ZaZMTsu96TaQLY
TeLrZG3qgT9+T1mMSC0SYYp1ihGZAPnOyyUL6bXgOVF/qoSjFk3O8wuWcEzA
Ut7DXhqs9SDoUhzpHduEmPYEqHxkp0OU1Xf+lgKibk2x5nP+bkJfFT238xD7
P3pLqXRWJ4FnxPgd7zA1I8PWLqHpp3R4KGmtlF/YDAdIX7ytpC9eAemLNxex
kpNDqwlExMx11wXRkMc1jtEavk5g6Q+6XsRoglul090yDnQ0FhtkfOViC6ju
mpSdIfhz+bq4ovhIOiq/GSDF4dgMDVJGQwnNVUj9OzWdmtQL1rfFNjup02BQ
v7WCk7UFHVf/edOFbRSOrHx7vFGLCpud2ZKLtrQhunT/3fab42C4z7RBJb4L
KPlTUlEpbcgk6Zfp1dU0oBlczfwV1w5vSL+5k6TfXArpN1dr0/qeuzAfXN+p
0Gr9alHArS7r1UMTwJQRk58q3wQvWPt/yc4Mocv8n9jk5YfgUc+cmUtsK1B8
5qQ0esfQNvpUb+XmXvikGie0prANbqaw7lxH8MExRx/uxiPtYLtavd+pqB6K
vr3Y6JvVjX4Z/s4qOUuD1Yq+bVTqGyTSQR99wZYLAx+a/lxqmoTdln5+vieb
UZ5Yi7LUNQoonxJXLm4bhaKd9aurMrtRXbRS7aXQUVhdPHHjilwPCGiGcm09
0Y0KlFZkCagR/PTNG6n81F4oJH3f2Ejft0TS9605rJjzgmALEnLpG6NsoIL/
hLoEp9QorJx96Xzk3TvUvJG5jw+VgLg788bPzydh2w0fz19r6yCQb6Q482Un
urTr3aYSVjoE8UcFDkR1Q/O6267SXqPIr+Zl5sb7PeAgcCyd6Xk30LsM9+S6
jKL3sauEKmN7YMXgCvvsuh7YGM7d+nMlBaXstw53Jfgg3Wyg5hexzjC3au/j
mRZUqVj7xdKJDhOtZzxjtj1Hb9ecyFmUCAUNEfk7c/OTsPTAgoHY9370aavq
gJ3pAJSPGRXQFqjwU5jxqsibgrbNFyYLsw3C7oouP/mi/9uXbU3JjHp8Qx8a
F99y/bUUFeJ8Oj3ezg8C6i3rdNRrRwZ9liM/q7uA7Sa/Me+WcbgnSWPqCipC
Bklr758ZKYbAbz9cBh5MQucf7f50+36oTPU6y2igooa9tAy5HwOwoHonideG
AitEtzdsmBpAn6ovJCRPU6CddvHbOr4B+BzzOtiosQV9+3pa5avyCGQ2BtJb
pnqgqqj5y8jGBhRy2vS00Ow4gJf3ogR3NewZeJUa9e0DUra1z1+5ahJ6RHrn
fT52IuFnzM13Qwh+033+cT/xXf4vf7QX869599EG0MoNfj3pZa3w7JpByhrt
YTCN9txtNN6PugUbSn7rN4GSmemvItMx4HpQVLe3vxkZd4hYpHVVAJf02Zzx
1wy4Exm1nzbeDLpDmd9HRirQg86+DKt4Brg/V+9qnO0Hx6g8HW7TJvShePex
0DME79G7v79i4r++XUy39y0TE5cj9turu57cg/3Q5tl4/o/0AeXX1cMb63fS
wM5P/Hg6wXP9OccjzAsUlPkrapKZ0iaghvQjqyH9yMh/hjrpfZJsH4bQLWZ3
Be8y9Q8/XDe9T3QcAYX9LxR1KqlIvTnE8Oqo4od/fo6BYJDOkbVbOlCTrGDH
4HWlD//8ZEAKP1qMWz4Aoa5a2VoErtT2fRr3TW8EwrWvjuPvsur5sW7iuwB1
jeep/5/vAv/5Lv+Xn9dQZNe9m10DqLDI90dcZiv64qBv8c5kGNQi3aT/rv/p
szXE+iPu0J45vP7n0wZq8fqXWY45E+uPphJVsvH6T9m2HHdP7IF7uwvDgqb7
YfzRbh2RwmGojUmoxedITLlqN3GOQDKEUoPP0X6fKTd8jkJSrRr+SISi9XuZ
/p6jPT+3vsTnxf9nYgZxXpD/bnZffF7+L5+sfvliMbd3fYgbwhKWCFBRhKRS
9RruIVB+WNmFz0voyjAKcV5QpsRlE3xedIV7l+Dzsku7+QpxXpCNf9gDfF7a
vs7G43PB1mTfRpwLKNcri8Xn4vJ1rwGcJ1/5diwn8iSUC8q+x3lytqplFc57
kfbSDUTeQ185Bq1w3huVCFiL8165+pG3RN5DbyF4B857K0n/KU3Sf4pB+k9t
Mwtdh/Oef9a3QSLvoaojp3fivLf/qKwXzmN7lIS8iDwG6eeGXuM8dqNyKhnn
MaqKiSKRxyDk+LNNOI/1DQo34Tqlz+Y7Q9QpJBv6ixXXKSOJ+Je4HgWdG3Am
6hHasIyrHNejZtYnY25Jbeh3yaM3faw0JJhsjFxy22F3bPdOXKf2Jt28RNQp
ZGFsnYHr1EbS12kt6evUT/o6fc3rSsV1qjDsW1CdXy2M7nE3w3VK3EP8Aq5H
ljxIlqhHEDBl2Yzr0bgTdROuR/TGLCmiHoGTSt1aXI+87ZE/xgOmajHqBB5A
dcIDKzEeGBLgdHnN3IwyeX6unAylow6fbgXvkGZwFJ1xwHhgr4aaMIEHUP9W
/QMYD7iQvkjppC9SGOmLROPMjjQl8ogb0/pZgUgauDktFXjL6AC7iAwTjAf6
uW5TCDwARhvfnMR4YEtwlwzGA1rqKz8QeAC86Nd3YjxgxtX2fu2uBnRfuyRZ
zY6BBKsz67PFCHwo6/0A40P3XvNFrlY6errjfR3Gh//2D2oh/YP8I5ZfwTjt
CL9sF4HTIIpb1APjtPwVeWIYpz3/4OdL4DQ4paTFg3FaxNDuQIzT/OQYhgRO
g4kpp1sYp+1o0xaWtilFdw8XZuyyoaI9twPu8haNEXhuYn8gpRi4BMRNAyn9
wMQfUsvUNQ6DP2khbHxfYPV3Dxc2Pjpsy1wn5L6/C6r74t9jXKqsZIJxKWxa
t3QDxqUr9f/sx7j05aPVdAKXQmhfkSfGpc6kX48x6dfTS/r1iF/J7TJIrITD
ke4XDBJHIdJSao/SrQHQGHX04BmKRkrMPm/5hxC6RhVXkiichDSNxm4v/Sok
2Z7d4aU/jrhpj7m7v+H3QzOLMZ7U1prGeBL1Lfn+AePJb+Yhp/c01aPTRhlJ
6pcZoHezbGGitvG/eFiDxMPHSTwcsbHgNddIPQg/8zgf4MtAy8ZPrkjuaABe
466AxhtNSHXxq77ldTo4UPYNS7G2guj1YxM9Ok3opvWzdT40OsiHzj08c70J
BB3VTnjkNCKW26Fh1zPpMLng/jRQncCNJP7cSeLPNBJ/WiYd5tTb0wQdWgeK
uoTo6GSV3hv7d22gOrHzM/1YExx6y1KSPEhHPQfT7jHCm+BsneCDFa2NkLQ+
+t0+Kh1Z+i0RPbehGa65PjoaxFWPrPkYxS5zVPBSPvic694olKdckk+QaEXV
EuHcs4k0kOiPEf+k3waBJJ48QuLJbBJPTurcSUrjKAejl2tVxXg6EbUDOpSz
6MBXkneodaEFMvJy5XNv0tBprZND213bweLD+4Gpki+gwF6hbPyqA9lIv1xZ
f40O70n8xk7ityQSvxWtnBB/cbUJpS+J1ZXVo8Cuq2rPfvGOQY+vyWx3Qjco
OF/wZhhS0LiU8yxz8TAYXGx/f8W+F3XJJT+QDB0Bg4YqSxYiTz6nKFd/NuhB
EcYJeQWjI8Byf6Kp+guBu0m89JjES19JvJTvE/r8+cde5BfSk/I6mgrm9Utc
xxYGwf2WRkrl4V5Y3Tj8J8hmBBlmTziXaPdBsgvHjYNPe+DzsatHZnlHUXto
6wjTYg/cPXZW61syFbYkN8Uun25DgqJVV7+sGQH2Lj4xlcEuuPj+Me+1jc3I
XEp+/MzvcfhI4hl7Es98IfFMFJfBTXG3AdQ/M6Fhu9AOTseWBvqsGwba/fl0
M0YfOicetVGC2gr9/A1zdw+OgQXP1Tc/F+pRm3KH+WPdaqilqMZK8UzAKc2t
KEKUqHv6SWZfivuRtcZ29fjdQyBg5bbNgzIIF8NKH+V5JyKY4U2UlB0FrR1f
HX0z+yHnK/AnJL1DJVMS1CgCt6zZe81qg2EDGI8bZwTtz0RecOhIV97Ef31U
lzAxHf2fuGXtjY0HhN4Ooc88hnqv+JPAIzHqwWn7Ebg+QElyCqeizIfCwVfM
c+DTKrNbZdQxMOEIYzU2ake9Dkm6oZQcCKlgcNnZMqBozbl2b4cBEAleHakk
3QRDr18tl3Ebgae5O40CjfrAKoOrsv7RZzh6aK5zrRgNfDoWugU21wOX5uez
04/fgktA9/OLfQS/JHGLN4lb7pK45fBRZV2x44NoS8y8G8eaZmR3w+LDlshh
OCFnbbnpJQUdOttjZ7upBjGm0t7PZI6BWP5dVluFNuSZzpYps+0DOr4spHIh
iAFJZWwZG4d6YerLL9m9hv2wIKynp1M6DPW3hCour2sFdyF2pWqWFmibN/Nj
FqHDh9UHmUrSs8FapMK340UasCva8bYT/OgGiU8mSHwyT+ITLT5h70dn+9Gl
zZHbuXdRkLRl9syk4xD4T6UI9DZ2osJlu6M0l3Si11O1mYbzY7AypUV676cq
tNFp829P/3LUdvltXGzFBKyTrtX2OtoI/HF6Du7nCZylErTfgj4OsqUKES1r
KChR5lSnnN0gyus8GcCaTwF2Em8c+ZffpTeNjUPPuBWllq21HBemogQ3la+C
/SNAb48K8FhCgSDWzYW1VwdBXEC03aOJAuYWz8vcXpeiE9ydghuFW9DEhpu3
Z9oYwK211Utfpg35nk8rNWIdRVTj7kDHBApIkTiBl8QJnSROcDWidZTqvQBT
65qHhlxZEB69YHdldBIW3f36L2e3QOH2xI0vfYfhU6qB8Z3pAbh4dF1rXkET
et0SfTX7Hg3F9028OLO9E1i1anMtHjcjXf3P35i7aMjkDrfwpv42MBrouXpR
vQVFca70Z1lLR0ufZ9Ss2N0KdiQeiCHxQBqJBwJf22wYk22CHV/RfYXSceCR
ObS41aQHCvwsLm0/2AxTZl0uIfdowD5cafKwpAPyB4Qz2qUJ/Lr9ggH/dxpY
SHjxOVe3QoB03ntWlwYkMpWVqnuKgdoefLprldgIwjdT259HNqBbqaGfmfro
6OCrb0xfoAWek3hAhcQDFBIPrJ9UOPbIvQEemR26++oiA7p6V2ysM2mE3fwm
x4yKiP990PaRNzcD0BNdkaivTeDCZdD1pLgBKsKZTpXY0OFWoSvTN502OHp4
zfda6Qqks+SyuMfrYVR+Q/YKf/sQuJL12oSs111kvX77a7mGJlMVRBflyG+6
NgZb+5K/FehQwYh8h2eIfIdHkXyHRzFa6rjJoRzg8DLJTyhsQX92/kxeNseA
7aSfXSzpZ3ef9LNjJ+NuZDyJjHeS7+3sI9/bGSTf27la7YeS1axgVP8i6/IK
fchd0+H97c8kRJA+dx6kz50N6XN3hIwrkPFCMp5Ru6PV/Ukt0nHaeqd7nA6a
08a6lcWtAJKXKwTufEEh8Q5jpT/G4AhdYOu8JgX6SF+8q6QvnhfpizdIxm+S
8Ttk/Nq636z7qXlI1O5G75HAZngyftBmo/AEjAp4rBxSqEafS3c1S5cNwo8+
xrSOyQhYk/hEncQnZ0l8Mkr65YmTfnkPSL+8STIuScavkfHHxpd3TctXQnaQ
GaXo0gBq4I32ZckfBY/apF+8K+vg954hsZnkEXSHYrltC88g3B1nfrLUugk9
XGb6NUOABilHPrBW9nTBssvS8npmLQguBPpHNI7ByTCds5+29wGL16m4IvYm
xNX3MrBvzTDE6MzLxAsNgc3aM/fcSpqBx3fb0xjFUfRLYxm7jygVEkjdrCqp
mw0hdbN5Qgpvq63b0LvSywYsR0eBm18yxWE/Bc6T+lgHUh+rROpjdztv2bWO
vxWSzvCYF9GHUVpwrN8DiwHg+7RCC+e9qF1/PIm8h57fitiD8x7l163y64ZJ
0Kj+R/URbyIS+epzu4c+CWxe/dOq1CoUMm0oo/mjGRr5vj0/5siA36SfnQTp
Z2dF+tnNkHFBMm5LxmNGFNWUf35EcunPbUyf1ADnRMyb8owJeKQt/SVK4T0k
nBpyd731Ed1c6OJ4dWsS7EmfO3nS5+426XNnQsY5yLgHGXc8N7lYTNQRroeu
74k6gqLrT/ytIxr/h/+dNBlXIOMKZLzY9NbfeqG/isbs5V8OHIYX/taLGNIX
7yXpi2dO+uKdIOOWZNyCjD+oyNqGcc46oXYhAufAcq/WUYxzZFj3eVwJKQWa
H3fOiYQimJseCbYk/v9eJv3ybEi/vC7SL8+VjD8m4+1kfIOt+HJBqQZkfHVi
yYEd1ahc+lyPztoJaNT9x0evXfkfH70A0kdvO+mvt47013vynzirxM1V8u2w
bzEltBw1ge1Yl0UKgwarHvgpOt3uBLsynbpZk3Y4IfEgZ739OATfKpvB+JOP
X9mHwJ8QH8X8F3/mkO8yPSXfZQok32VSzIHGTVZlKH6FIt+7E1XokiS7+bGp
CbAjffdSSN89e9J3z4mM55BxazLO/n38Ly7NyryPcSmivd37F5decvKI8NvU
guj5epbM27uQ2CBTzZ/5cRjhMt3BpxMAn/Jmfwh9fA5nvzQtbvw9CbtIPz4N
0o/PkfTjUyXjt8j4FTJO5RHi5TvUDUYwdWyZ/gB0BDo9T9s3BFT5a549n7pB
dWQ5u5z7EKjdTEnY1ECFUfKdpb3kO0ui5DtLirvvxL/Z0YZWuZ3uf2MwjO6e
EJI79nGA+PsdrzRudyHbgq13npmPIpqox8a+JX3A/K/+xgSJN76R7yaZ/evd
JAc/xVMVs81g+fwxfbXCIDxrOCb74d4wLA7849N3ifTpmyV9+v6Q8etkvJmM
00zUVKuqu+CP7zxbUe4oaH50W8uHfbduyvzS29EGi7nBHOdDxmDX8Io5oYRe
8CX18I9JPXwZqYdPjcw8gPPhRRYOHyIfIsoSWwucD1lJ3bslqXuXI3XvD9OP
2PH+aoGEb/LOJgHj0P5qte7Zzd1gRvrujZG+ezKk795FMj5MxlXJ+I9qThlc
Lx7EvUog6gUabDHk0yXqhfd7YWlcX0R+lTAT9QUZm48H4/qyjfTdiyJ993RI
3z2Bf/nxXSLjuyssPwaw1kPRrubyPn9ifSZ3hpX0U2HXuXXncB2ZGkVxRB2B
8bYH73Ed+UbO+7wk531syXmfqLD2hK78AsSv61n96nc72vOV/lBNlQF5pL/e
C9Jfr4v012sj4wVkPJ2Mz+2qbU+8UgtH7Gqc7ubSIEuYmYd9azfcmFbmpa6o
g93c35L/nGfAu/7UX3Lbm2HmX/NEm8h5IumnLN81fSug2iqqTNt4CK7dWX14
dt0I1Jz8x4/vCenH94D04xMmffp6ybg8GVdLYHbBeIApw42j7McYumJ1a/YX
gQcoUYuRGD8cqdnmSuAH9KJJXgzjhxhfRY/DcR+RDtXmvCv7IBhNXXyXSuBK
xcJ393G/ZffIrdoASj+qVOsSX9I1DoG/BjqUvKqQpC/n5PpXo1BzSD1JS2cA
zp7YRcV9mI3bxK6w8dERl8X+K7gPs7lvbD46rgFlpKYXFOnT4YlmlTj79zaQ
If34NEk/PjXSj889cu1BvG4/tojGEeuGttar8coT61ay6hN3ErHOIZzXLhPr
jLaNDenidQ7a6F2juq4CAo6ar39YPoA+cS98+3pvFB5sMBcLFa6DmYxF+p4F
Bko+sLhhFbFvln41WDhK4MNtiwKXCXyItG9ffYfxoR6LegXvUDR6e/4JJ9cQ
gqV7fE7jfk7O/HQy7KqBDeOpTsH8NGRUNlHmgHrBcXjbbm/9KhSztzDDS38c
mp2XnMB9nqhF4XqMY6up+YYEjkX2ujwEYGoDB9JfT5D01/Ml/fUynW0NHiXl
osc7ry+IazTDhA5zQ4UcUUc8rkw0ctSh2EkmhQ9jDLAUufeMPaIecg7ImzZE
16KrLmVXQ9knYH587dRweB2k3/GTvRNQj644UtrL5+jQfd9ZzcK3BQ58yf+L
53+rvcN4HvqSC/7ieW/ynaUB13/eWaKS7yxFRmloYdzO+kTdgcDt6E/ELQGM
22e2k+8vff/n/aVg8v0llcPhnQrfa9A2wclLoT4jcLK9X5JmMAjH5Kwih6Xq
4Vxz//R1gRFUoqo7HBsyCKJLrUsw3+mXdZkk+A5kNTbswHwnivSbayn4x29u
F+k398h14w3MX0S4VjoS/AUp6N66hflL+HKpOZwP7xW0rSbyIWrcbTSL86F7
6+GDOH+WJLWzEvkTLbGy4sL58+n7+r+8+PbOBRmCFyMBpfK/vPiVNAsb5o+D
L5EVwR9huevEBOaPT5tUPoVY96P6TeZWYjeJvJ+9fHJBfgjOlIYJYp4ryJ/5
guC58I7y9S/PHeJ91on7A8M8bJ5K0k3oLNuxlbg/sPOx7l/eveCXjnk3Mmk8
8Jd3ly54GuO+gXTo9oj6R59R5hijG/cNjEbbi66kUpD5nYdxYY8p8Pxm4cWn
BO59G/Dj2Cp5KnILsue1Js4LlY1FWa5tGIw+fWg5UEdFTl0bk7xf1IHTo6qj
bK9HQdwkaH1oFRW575w83FyfA8aGMr42H4h8b/iJ/oqNimpG74jvURoAc4eI
o4ObqWBD9qM8yH7UDNmPsl6+XEBXbhBxb9m4UNndAeyhz54ydg6BTAXtTnjP
IBK4tDsvIqsZAhzp8iFfh6CC7CMZk32kerKPxMWSYxyTN4T2q7Xk71JIAu9u
lpNyt0Yg9fzBk7jv0cATdItjTTNs0k8uxn2PV2rXLuO+R9q52NO2m2qgLHpr
Pu573DGt+tv3cM7oeyaz7QM48y/+7XsUNLx0HRynAO+HDM8s/gEUu6M9+fYl
KoQLffftLBgAjigRwXjtDiT3I8F1umIIsn+d+FlwYhAEh8xXJW9uRlpTc1MZ
ocOgXhwr+40+CM1i7T+iChKRxbKt2rzbifr8Xfdvn8rKoLQzzzsRdtoyXuM+
1flk5b99qsnTRoEJSe9gWFOSgvtU/+r/oP/0f+6TvnX6//Ktu0bGzf4Vr6Wk
XFjl2YkO9+Wreu0uhaF00eykMjoYK5lqhsd2oE0yPP4Feu8hroT3XtJ2Bvis
Vfz73V85xzgQ3x3xHy/xwd89MKCnGe+T/VdEiol9gvx7IzXwPtnrpv33uwSp
RN6WVkhC+zij9PB3+R/9NLf/2U/bxBZzG3/3/vMFX4jvjoY7XGTxd5/Nzt6P
+2zKXqfY4/iTUEKV/N8+2705m799Nkr2kZYr5jmIT77jJu6zXan+x8ct0vJ/
++UFk3Gnf/nohR/u75ha1QxNckzCT7vzEcsu4TA7Ik8GvF3LtXy0EUy3ph64
suQtEqR/Z+Q5Eus8vkzwgwpxbtUOXHDr+IKK8+Ju5hL8eOWJCxeqpvvhjND5
zGv7s9G2+ivfDJfRYPWLx+dxvIIhKX99fzasNtCaxnGBO0qb8e/ZruEeRPwe
uPBn/jr+PXIOtn/3ySmbV4ejCxIh9+RvLbxP5L9Gf8f7qjwoWpjYV1C99TcD
76t/9S3hP33LNNJ3b2bmf/vuITLe+q/4oxHRv99dr21/HPHdUalyrxP+7rl8
y//uk5HFEENin6AupPsO7xM30qfvHOnTt5n06UssTVnh3duNXA+/Soc9baiR
beT6Wr5xsE4prDwHvUiFdavy2tEu5GDT1Jr7cBTYLJdp4vzjXcGyjcg/iJ7w
dj/OP0xiAvk4X7HeFkkl8hUSm757DuerxfXnNuK84bnwhONzdwfSlK3yx3lj
Jdn/jCH7n7fJ/qfm0MAYzkvaHQM7ibyERlblquO8tBzU/vZjP4k73Aml5CC/
s35/+7H/2if/9QE0IeMNlv87LnZufh3eJ7t3uB4n9gnwDTf+3SedX1r+7qsB
30RxYl/BvrQVf/cVJeMf38CXV/+3b+D1i/WVlxb7Yc3Wqri+q2XQf8CuRDZ1
HEJ+K3p5Ulpgy4S0KlryGbY2ONWJEvxrodIpax0rBcLuHs2fjGqHJU5a5R5C
o1Ay81j0wAoKZBk9S9kw0g8fTGSyHu0Ygk7rw944Xx0KT99N5CtY9HvrgvOV
4wN+F5zfQvlcnhD5DWwe7UnE+W2gIvw47vPvsnyesXy6DW4Fv7yC+/z9Q4mv
xKUocKq+RfStbQ9U1V3T8CDOr/qnTxGbnDpAg3/d1IG2Fjhj29V3DmhgfT3w
0a91H6BNJLxRsCIPMnfezD8TOQm3Sf57l+S/nST/pbkfiC961oM8DghxrjHs
QL/P9GelXhqDStIfUJn0B0wn/QHdaiQ6DtJ6kOXTihr6xUGkeGjePjZ6AEY+
3jjWVtyDPr9m3fNceRh9n9Lja/algJdX/0DehX50z2LfuYlfg+juzTSJ6HIK
OJjpXxrW7EXvfRXz/DJH0OHvi6vKfXrB6erOVHwfsVKMd7sEtRWFzyR8x/cR
oz/rh7tyepCypxqThEMHuvQxY0mf7hjEnMr6LPC7FpWqwOoG/yo0f6ozyUR/
Ar6R/J1C8nd/kqfPXvh29OixDlijdPWFcloL3AznkUvUo4E26RtoQfoGZpO+
gc8Egt1s+SnwLF3/nqxOD2zRLvzypmAYNH5vuf2Z0QXh34d5d9H6AFmnSAx9
H4EtrW8K1y4j8GOUe0yK/yCwXhM/MBdIhSODUaYKvL0QfdElPdh7BKhh35wC
9vTBauMm1mUW7RBuYV924zoFPD1Kyz+MjMCnaqXTFt97kOtBFtkuCyKvN5vn
LzhS/+vfV0b69/GT/n19ZLyCjK8i4x3fflUyB3Yi8eVU7e6nY6h1d/0wvbEL
djFfuR/zuAONbR0cMbcYRwcUdid9DOuA+GTJEu51XUijZPQCp8EAkrfdm5YY
MQSGt3K/BHbVI99uAXl+7nbUpGxpn3eNDkk3V22JzOmGybnM1TddCb7cbGl8
emIA3Ek/Pk7Sjy+J9OMLu16zuEG/E2hm9w1bz4/BrYXxRunabnBS6N7N6dgB
g5bMBtEnxyHilfgIba4DToSrHRQTTIblzoMSYoIFwFl2QFu/fBJSWd4lS5q2
ob2xTXckTUeQ7sN3Gr9tqf+Pv+Each2iGNk78b3k9rI2vtlEGiqxfiKE7yXR
H8NAJa0u5Cy/8uAulTHk1qAgVavRDV1RC1lOce3oAK93upzuOIpeNtJtVtMJ
F1pDa16Kt6FZrhd8QfbjCPhGYp0edcEj0ndPnPTd20/67n2qZHXdFFyOUhRk
VDYFt6LzTzb4n7NkwGeD3HuFSS0QlOutXZg0BH4iJxJmxwaBafCffsIVsp9A
IfsJX5/2HcD3oY3m+xVzb9JAy/dlN74P1SP98k6Sfnn5pF/eCTJuQMYzyHjt
Y/8lISe7wGv3msc2GmNQJlr2eYVoN1w4I5Np3N4On5fKOXz1Gge3rQ/k9xV2
gOifJZp8Dm1A76t6Y9ZIfJeYbeKarR1gdYfFQ2NfK7A22PBIWY6BQJUvNWW6
D24JqqdYOjahpG8SRrxsY6jq7OXJFGMKcB/IcMf32pVcOWctr9NRs+HFdnyv
zfi+MI7vtf0z0rl8aHRk9zTeGd9rC5F+eS6kX14a6Ze36V8+em/IuCHpo7eP
9NHjI330PoUFWUyNt6Cfm3+M6OnT0P9H15eHU9m17RsalAYlyhBJkzENRORC
pZImZIgkpKJREmkQCYWIoqSEIiWlDGVYMk+x2bZ52ttsb6RQVPzuVet5v/fr
+z1/PcdxHt5e1r3Wta7hXOcZnPih4Orcekg2qhvLK6hGy6LNvrnYsdEehzd5
7JR6WD+cOzHSR0fxdYE7y8N70egho0VNdm1g0NSkevVGFZoaUhA64dyH8tRb
b72pbYGHX+T3Po4tQ8HWUyM/OrDQr06p8AjZXjhDfPS0iY9eCvHRe3E03nak
uRJMvidGf/reBcV1HazTxzog445uLp6/zyjny33RwYEK+VhnPH+3ZcgmnhOp
AfRrVbF5IBtKFTVGhOtqQXp4ebzDbAYIsO8YX81jQ8P3WxdjKHxzbKhr+Ktq
UOT/+NkstI+qy+bemPujCc7eGNK5sYoO7deEbJ0t2XDjSdO94HmNkH9t5EHX
tUpgXyg5dtaDqkPus5uXTHSA29s1hphXcF/7QOjJNxwUsN3uPuYVuO4T8LBY
X4XO8d++diKc+l71Vd/0ZWrA+q/+kjLpI70i/nSqxJ/uHPGn4yM6pbeJTulG
olN649eau7gPcDlmnvW1gnbgTw5O+90HsF/1riyABmXKG62/T+kDxRMXZtET
20D6iacI7g+kmLcMbPjZD+VBqYK4P+BB/OkOE3+6XOJP5+N/cehOOg0OjO/u
uKXTD1Mj1n/sKaL/hw+jQ+ZfdDL/OrCWf3zkVjm8TrWMyPveD3eMn2k9tqdB
fEzU9d+8CEH+txtZHJh/qF4W8yKuER86fuJDN97wx4duwcs/uqkLRP/opr4g
uqnpQ7tkcd+gdarwXNnt1Whb8blo3DdQ4930DNfj4tYLval6HLUNcfPhelwt
53wD7ifkXaOrZvX2o6YoVx/cT/B1UlyC+wYpV0LaCr5z0KNVYytx36BnGv0Y
7jOIPWLah80aQEsaF3zDfQbOdYuwyLkVyIRpKhRby0HfJborD4zWwDTDLfGY
l7Jpd6p54K1+MPukMxPzUhTNmeWBNypAXcXLfpFuP6iF+zAfX6oGG7OPTWcy
K9DeZPqK2a79aPtjOx0NNTrEKb+1xfzqU4Yiiz/OHkC8brsDMb/aPSCndbVj
Djr3ZP96JUcW6M9SksC8IP8t97wxP+faXdcw47geFDxtwVeNs+2QqPcyetyX
hV4nXIweW82AYUGNpIeMbugvjk475NuBXv00WHKSik8g/Ub8jn8nnJDtK54z
tQPWt8xVVmbWoNSLr5z2KHXB+/U7zfNmVEKQqN7uNpe36Kn20/1ZaADOkHpN
9696zXmjceO3uno0L7/CGW5mgl2aipjRzH6o0GnWwDxJqW9PfL6s35wl3KNu
inmSFpGP5DGvUuxsVUrcxW1Zf/7bDWOzsmlhc+uQwMHlhb5X0yHc0yS/gcp7
b5L81uCvuqlEqPXWAyU6uF/J0Tk6kIxor/vK3Y8OgLyraiDmfxbcARPM/+Q+
cUEY8z/v3rPX+m++aLl99lLMF62siJe1tm0Dvob3Dc3pOZBwen9W7AI2CE0z
/L0OKrfMdal1gN7Nab/XIelf6pSFz3414HUwaHYKptYBSTAZongdgo9Pj+x+
2oiaygOd+e5XIJUBlYsTH9lQ1ff1Cf5eW6pk3lLfCy3aLfwafy/V66Ip+Hvt
9BlfS30vVPxmuij+XqUIKazWYyHn7bLa87rzkKeJ/eyw9F7weXT297rx34UO
at0Qu2487/+zbuhf1g3+WTfH2EOerrJMyNJUC9Z+RIdr6q0BR2V64d7YqUK8
T3jBfju1TyDh+MBZvE9Efc+YzPRsQdPURC+eO81EEQuVXUfnd0HV/ZA7M2cy
0V2Iuazk2o7ac451vaKzoFK4/ZhaYBs4N/vs/N7PgtZdLwIUi9pBnPh8yRGf
L2/i89U7/Opo8rYmdCap8p3zph4UmOA+eepjCzCLsuwESxrh3rmt+oWV3fD1
8hOhpRptQCO+XduJbxeb+HZpSoecLP5Bg9BHfKJmi/vBdU9BtKhDNdwVhTeO
BTTUobV8oucjB8kuCfJb5lEDaYNJXNx8Fcgo56ZgMI0DJx+4Zx4Qr4Verarl
orMqYGGU3NTD1Rx0o379wOj0WrCQV/1Vf5UGtBz9zIv9vWix4YKvXbVtsH40
dmy31ieQZ+SiFz+6UC1jaS17eifoCP/xw4p69scPi0n8sLT+t+8V1z++V9rZ
f/ytuH+rZOqm/+NvlfHwhDXu5xeKyfbFUHlQ0a33W3E/37D+9o8NTSXoOKdR
iGXXDT4nS7308zrAzPpVMu63P6Ntn7PXqhNJTvvFi/vtW+hNI2/WlsP87Xct
cy37kKJIlKOoWxsI//jjG6Wn+cc3ypz4Rj0hflLjf/lJVXKPrX3XUoYaxYaO
MLhq0L4mC3CU64f3HxysPsyho4sz39y5vLsVxdG6xxPU+6CQ+EzFEZ8pc+Iz
FUpw/7/8p3IkWqSmbcmA50W2n6PECsB/ZuWS6QaDMFT9evnFzBL4zHP/+bZx
BpS50fyFd/XD3IgXOWIKIUi9Q7zjW/RTVCy08bTwt0FoJL5Up4kvlQfxpfrH
r8qV4OcJ7v4vPtHaGlZyJX2ZyFhCU82qshxNDQtKk2cMwHHiVzX08I9f1RDx
q/Ik+DziY1VHcAbJf0pI/pNA8p9Fq/LkzmVWAbf0Ijf9vB4Yku+38/rGBP0D
UvVxlZ+QYtw366nrOSghKBJO7G6AO8Tv6TTxe9pB/J40CL6Y4OYE3y0kXmS1
JQX8XulWxGYwwHmJvhvmgbzSvRufE10C5w8HznBZ3QdrDJW+aC1nQgLxh1In
/lAbiT/UZYLPJfgRgu9OTQnK0rEHnsHkozJFRkhm1YPfPBAl3+tNGfcLUDxS
3eyr3YVOfBOnJ+zogmmEr3KH8FX0CF9FQu32BP59MiTV2i6s7kOZfXIy2tTv
07bzzzxlCpmnGJJ5ynPCS5lNeCkC4X94KcFHSuUzqf/fN9JLBn20u0DrCNfS
V9T/rxGZU/CQOcVzMqeQvMVzrDs6H0WF7vZfx9MOdk0qPO1Uvro5Up1vhUQK
qIXkbJ+7gY5OTJ/pMnRkAK4TnyY74tM0h/g0mRNcm+BaBDc6+8e/6SXxb+oi
/k2Pia/T88d/8BGCK89YH8BZ4w/XR5583qgShX6Zouc/xqj9TPybFIh/0yni
3xRC8C+cP3gkwX2If5MR8W9iEv+mvQRXJPhPgi/uKnZnrY9Fg2puEiWHcmBH
0dqwZ1GDoDi8LqE5thgtbRZeO4La4bAmY+lP0x5YS/i0QoRPSyN82kky7zDN
+DPvWEnmHTP41oS2XC6CVd9abt7ZkAVnxCzzdygOwqVYw4jJfDoynBBw1mcW
Ia+urUEfS/qhiMz9Q8nc/zaZ+0vbXtlI1U6o78McT4NzyYhr4kRtTNUg6D8I
Euz9lIRMRAOil4kmI7p6t0Xfp0GwJ30MN9LHSCR9DDPF+X2YN7vo0+clVtH1
IPlxeA7mzd4Y6Qwyv50B6+dp3I++UQIVbXoVTJFBKCTz90Vk/q5I5u8LXS7L
YT5tOY+I/joDJkpNunsP82mjf97tWDalDK1bmNkdF9OApB28lA9s4kC5wp85
+4HuP3N2fzJn37N25SbMH5a6ghqvfmehc4KeHpg/vDMjaeuOy1Wo6NHJ5afk
utHGDPFp7TM7YEF6RENvLR1pe/Rp1eztRpULaIX8t9rBJ6o3EqpoSK85SlBg
ogNVzdU/3xHdBVyE78dL+H59hO8nQeJSU8KfuJRB4tLclQUOpjMckX9N48r7
xzzQUn/lL/eoc52o3kPnGs1FieZC65d216M3wsLv9jGoeiLgRjjmLdv+3BK0
UrgBZim8KcS85WHf057fwipgXVOXKX9zO2TNmEibSeuGX18bSv3UGBA3djN3
5bceGOt9za851gbRqscXzFlAhxuMih3nqrphz+bLhnsk2mF7VcDzlJ5sWNA7
31PPphYm76//rn6pHzou3pB5EPcJ1p/yzSx0agczLdlUpN8DsR1ywSEhlUj5
3O7qltRe9L1ePwHni2/tnV8vp8718+ODiwU20IF92swEn+sY4jc0pfKP39AB
4jc0tPIPzk18iI4TfJj4DQkTv6GzxG+ohOCfbf/gUQQ/eqMSlVXnwAZP3dwW
/iaYon3KRNmKA64bQ2v0N1ZA4YbC4puT3ZAR7C7Kk9AOXh8Y2wapOLD4ol7t
OpUoeBMSlYDjgCLxITpKfIi4iQ/RyJY/uBbBFxP8JPEhekB8iM4SH6LlBLck
eDTBTSsOSuI40Dr/tk3poRxksDvBD8cBvzMnr+E4UHoi8SgVB5D6603jP6g4
AFYa61WpPERuxLSLadeN1nZmp+A8xILUuUPv/tS5nqTO7TlVeLzwWSn4/tIq
dlTrgW6G46aY9HbY5z0un0TlJy9d5+pS+QkkzbodjPMTC1I/9iv9qR9FiI95
4hoLRRy3xUxNuqi4jRy45+WwqLgt+etDr/jYMficIiJjpOSN9ovMqjpN7dtb
jHOZftZZUCb56etnlSZUdPVm2REXDlgL/cnTHvyVp1kQvxs94ndjTPxupoS/
vJ12oQg9l6oaEbpYiWQ4VoFX5AZgrLBmY4LKayj0Lg32lUmFa0lvGSwq/rwk
PjLXiI9MBPGRSSA+LzbE5+Ud8XlhDsSGrilPgc+sUX9pPRpcuHIi0os2AD0l
9xTDfz2DyCbtD1wnsqF53YEf394Owv3GOqGjxQUoaafUmHU3E4UuX3rLuLsX
hi5dLBWl1sHctJvppeQNmsqfKvA6dB8em+1PrQM94W3doEoTLLIxnmdHrYMA
8cu4+5dfhs89r4gQKwbirb/Kf0S2HakZuQTu0OuG2Wf++GUslPnjl3Ga+GWI
eZ1+1XepEl6ZFPxSv9oKzKu2ajWOfXCd8HvTCL/Xj/B7/+lLHCR9iWrSl3iU
EcYXGVOJVikykjONOOj226XqmF+xWrs3hH6chib23vs5zYeNqhVNCzOVmiB1
56tipx/lKOiSRr5NQB8y7DtfKiXcBg691yZxPc63d4YUVY9Dp3mQCa7HZxF/
BwXi7/Ce+Dv84/sgS/BSgtuGesVI2NFRmK+TK89QD1w9/+LlMyq/67g+Yz+O
z3u3jwpS8RkuCOcJ4/isdE7bUky+DI0cPP72gDgLFqQ5BD0+0QsZMc9G576v
BJ7FNvsPFnehsZ9Lpu152gGBW4Oe4DhpnDZXg4qTyJHLvxzHyR9PacbnzSpB
5tvttY67u9BiqyztZ5s6wdJvtgfuN6pV+CxSPNqLYsvGm3G/0TTd3bzA9Dlk
fU3VKDR9j/xyHdfFUvvwwLwpPnqzaejW98iterPboH+2PvvolT7ws+87uWtG
AXJYIm+6a0YNNIbWarz06YekqPNnnTXzQPdaKL+zZjWC8RDRxwPU/cs66X16
LBf0cx549/iUIb7NKtbNJQNQEymt4TG1CNlsMt9ybVUliGdn/erTGIBxwttc
TnibpwlvU4L4JpQQ34RY4puQtVOpBPfVR2ZF64kI1YGkp+o53Ff/xzdBgPgm
7CK+CV4EFyS4HsF/zTzqW7E8EUSaLwUGQwpKnZEyv6ByEE4SnqcE4XleITxP
HuKnsIX4KYwSP4VHgqd+z486870bJAup9awz/j0/Uic8z02E56lMeJ5/8TDR
PzzMv/If9E/+85D4L0QR/4WDxH9h8w3kfDaLhU68EpQadMiHgkPFcy9a9UKa
r6kBfn9qV5CyofWdclagbl4Nfn+askGhBM/vDtso2LY65KKgZ965eH6X2RNv
jd/DXjrluelEiaRmy/kLcfg9bHGYYSLuXwmc3HZmkW4/Sl2UU4b7V5VET6CI
6AnEEz2BHatFXHGf081kudeJcA7ERsVzcJ/zXWqEPM4TFkkd3fnqmAfIeJ8b
wnkCmxOajfMEfrmqUCpPgL23vR7hPGEG48J9fI/bTA+cs9OmFvUISjbje3xq
KGM2vsez955ooe5xtAC+PML3uF3DeX48D9q2IzTn9EkmYjpqFOJ5ULIkIxvP
ZZ4W6VrONW6H78cnE/BcxnPd9od4Drh5nl6/Ri0D+cXsbMNzQBGy3z6S/Rb/
z37zX9+L52juuyZGZFzqYbfuHV48R7tfa/N7jnbv8qhQ5e0ScFU/93uOdprw
ch3/4uX+7acgTPwU9hM+mC2pX9RJ/eK3zXH1mrPlEDtX4cWzjn60qHXur+Zp
lXCJ6fgK34+N4w4PqfsRXfFyOYXvxwuEP29N+PPBhD8vQ3wNyoivQSjxNfjH
74BB8OMEv038Dk4TvwMV4nfQkINacH4Suu26FpWfIG218844P1Faksm3i8pP
2F6MF1R+gmrpszbi/KTyrt9LfE8ZRd/sXKpHQysrz6Tge+p5TKcovqeWM4ol
eU5ko9w9jEF8T4WQfR721z5XF1zye5/LDmSqUfscdfB+mYP3+WLSL1pF+kV+
pF9UTuawemQO+4LMYT3IfG06ma8lkfmaGuHfmhP+rSPh35aNGQ1Gl9FR37eJ
qper+lDEEt24OYta4TzRvR8kuvfeRPf+GsHHCO5KcCOihz8t4I8e/lmih7+N
6NUnEL36DKJXv5fgSQR/S/BZRMd+MdGx/0h07OkkjzIg84ITJI9aF89d80C8
EuY7DLr6pXLgfahgsJJzDXQXhLlKlNKA/mpfWAQPG7gKPOlD/c1Qwn9I64Zj
FWzICfCdO9EHsfl9Hee5myHnsv6UzkIaMu2ajFCR5aBy5ym7VQzrwcv1fVeC
VQX6fMI5yHZzL8q53uwSx82CccI7jSG806OEd7qH6MyXEp356URn/jvhhT4l
vFB+wgutJDrz9URn3oXozK8m5+gYOUdq5Bz9InzRdMILNSa8UE2iA19DdOAD
iQ78ZoK3Etya4IvFi91x/uBdE8A33YcNefb6MTh/UJIKC8P5g63C8Toqf4Bb
gqlvcP5QJiY4en+kAqTL1yutS+hHJk0nq0WqK2HrstfxW6h6zexFcVl0Qz88
1oy5Ju1Bg6svI+Xxe6WudcmOKjl9KCzkoejyw80g+3xQE/d5nlautNfP60Gi
P3VdcZ/nsY02Db/bev7SpFpUigGPm3dfw++24r58ycN9rUUms6+NRD+Flfa1
Z3Bf6x/9813kHYcfecdx4vrmubkGD2Hk6C41M8EkdH5VvQt+tyXANyqN+1fp
VgMpVpXlMGBQ/Rr3r86T9x2h5H3HMvK+A2ArZ8KtGi0aumfWEMBED7REZnxN
6YGNrZt0dnpVQExd9xnfKY1wEOrTuNhs4BfedmdAmYHOnQFBk61s9F5waXhT
Tz3cJPxtb8LfrvpLz9yd6JmvJ3rmrzc7F8sXVIMW+iAcm9wHdR99AiNcm2Aq
4XUfILzuHYTX/ZjomV8geuZziJ45t8RVXa7LVWDvmXvhzux+GNKuUrc8Q4dM
Dy8u/M53yoP7uY1LOHArZH4Yfueb2nvoBpv6LhXZXb47Czjw9e5Pk4lP1XD3
iEg9/u7l3g/XU98dEs8L5eHvnjLNXCRmEQ2Ux54rP+roh7bZ/NuH19Hg7LEf
UXg/tM/glFP7Af0YeeeK98NJo5yveK66uXzPuIsdG1Kzfmbguep+qzgbPIcN
3mbTa2DEhpt+C3LxHNZx2FcOz1V76K8jJ5z7IP697nk8V51O9L0LiL63J9H3
nkXwXIL7E9yK6H6fI7rfzUT3Oz7D7ymek75XvWt6NY+NhnLgPJ6ThoyefYXn
qn4bvfBcFUVN2TSM56rTBe9vxHPS4uiLx5wt2eiq7sRNPCe9GbnuNx9gd+4Q
5gOA4dspv/kA94Xvh2D+wE0dDe3VWr3whn11DeYPiEnLl2CegNXFs6IhF/qA
qZ/+CPMEVn+SOnDerAad2vbwQGRCD+R7ib45wMcECWt6DH6/YLb72fngIz1Q
dFpZHL9fMMmM6fVazUBHnATQHpUe0J7gMxXjZ4HNgrLXeF7/4PtRPK9Hl+/M
+j2vT6+P4cPz/Ws3xX0ct/ci4QtClXi+77NRdDue46crJ72wrepDgwuWrMBz
/JZhPl/c/7kQlzsRfaMErR3gLsH9nyGiH15M9MMTiH44jeDPCf6O4HxEVzyI
6IrPI7riMwjuR/AlBEe+2smYv8H95vQpOetuqInYsxfzN/7WJ19Efl7HxykR
v/u42r2+Jt64CxZEP9PA7z4ehb58ius165lVE7ay7cBx4LuP67XIwxotuB/F
rrGY9jymAeoE3yjiftQFok/uQfTJM4g++b4Ff3AXoz84IvgA0S3nJbrlfES3
vJ/gY9P/4DIEP7EtxQvzOiIb0JaM550o+s7yRMzrGCQ/P0l+Xoj8vNOkgRV+
b/LY8mDTHJUOtMVPG/B7k/ohSMV1pQNNgkbVlchH3HsrriunEf3zJX/pny8i
+HKCpxP87ifbavxuKFkwmPF2VwlMal47ht8N8cn1quO+ooHnHWWDc8nQNEW9
DvcV94c8qWhMbka/Bmh3pXS6YETFbNkPqu6LfCHAxLyvZ5F8BZxDHQBOvJcx
78td++YhzFOy7UiVa7TrBL68KwjzlAo1b/x+N3Rp4XYXyby7iHuW0CR+N1Rk
Wzgf9y0zlxeylokmg9Ae7d99y2uHi37Zf2iCJZZi/itudCLDc8srtOksOOi2
Vhy/G+I2St/Ka9SO5vI63sfvhuR2BqzCvCPV+x+nn/HoQJIpa49g3lHQKdnb
gbItSMHkwVerL42gnH6cvdqrB6Y2zZuFeZLPBeXuw4ZaKr9OPIt5kjnqC55j
/ltH0dqJuQfq4W7Ej2TMfzvDx0gSsmgAKZndvoPH6pDCwZ78ALc+2ORt44jf
eT3R9vMtQHSksXz2cfzOq+ZTuj7mlbG799zUfMVA0lozNmBe2STRP59F9M8N
iP65hNb6fswruLh/1eO87/1o1CVIDfMKNP7SVXtBdNVsDuznCU6nwcdmq5Zb
Ov3IawZfDeYtyPe8v4bngBopFfPNFlN5daxyBp4DhjWnsXG+tHvf0rNUvoRU
Mm4m4nxJ70J/EM6XYqJkfah8Cclky3F9ofIl2xUWw5j34g6bDMvDe2ELt8dc
zHs5SXTUPxAd9V6io+5K8DyCNxI80MniLH7v/KWjyW/aPA78SrCl4/fO4kQv
3Y/opTcSvXSPTcPJ+P3yw+tfDUVG2YipMiKB3y8fInrmg0TPPJXomf+Dswme
TvB8olt+i+iWCxHd8hyCexJcguDszD/1rzKpf8f/qX+JDjmN6JCr/KVDXkT0
9FYSPb0l5B1xGHlH7EfeEd8huuJpRFe8kuiK/4NnEjyJ4PJEbzyY6I0nEr1x
3pm7dJha5Wi+y1X7/OR+yPnKv+G+SRWcP/j40czt5aj/XvF1AwkOmN/WubPV
twF2+qp5iFlVwSu3qh+ybRzknCfv9zWomrr//8yD5Mk86AqZB8W2Zl7DfePG
ARdWS2ovaCtteYj7xm0qYp/tiguQpMVeNZtuJnyKr7PCfbZxoh/eTPTDFxL9
cJXPFwrx3Nls7pSRno8cWBr5PP733Fl+jzjOt7Ne6N6h8m1Qj9NxxPk2/1Vr
8VdUvt065ZIzlW+D6qrWMJxvGxD9yVVEf7KI6E+eITrhqUQnPJ3ohLsSPIPg
SQTfTuYyJ8g7FBUyl/kYX7ENv1vnPlrv7SvUjyrum0rgd+uu5L1kEnkveY68
l5z6vEfjHm896lfqnLjL24uOy6/tLxRtpfKlZq1I0xrEGnC+/Dm1B72ACubT
sTbgaku6GiFVh74zPp96/rUH9audENv0qxUkGYsfumxmINXeoA6xXT3o4Tz7
q45dTBD7oMPv4FWFjIMqPcpE+5Fsfuru04vo4Eb0sfmJPnYj0ce2uZqbGn39
E4S66qWbr+mGyv3FTx4VdECF9n4f/N1lIx6OUd+dqrelgvF3X0re3z0k7++M
yfu7INJnFiY8pQHCU3pbvD/JlU5DG6J/Xfh5qh+prz351jumCvZKMSP6+iuo
+/29uOLcfjTz48fboTf+r671NqJr/Q/uS/D9BC8n7+/ekPd3WeT9ne/yZ7ex
LuVzyYjdsiIDMJR8fzfWpax+eUkQ9w2mPtyS+IzKPxMeVnFw3+Drlectz4Qr
oLBx9jyFFg4IK6pICdFrIGPvmr1YB5K/M2yRN9cAWil9CmEdSKUt78TwOToR
/vYMdY7Qvkd5EvgcFWgLWuBzNOQlEUqdI8T96pYJPkflRHe6luhOhxLd6X/w
ZoK7EHwb0aNeRfSoHxM96nqiR91E9KiFiR718qJKCZxX8+corqfyajTv161d
OK/++kR9D87nPT3oTlQ+j55Uz9+K8/n5bzmBOG+/pjX9BpW3I82uHhuct2df
tnuE6xGDS6azqXoEBOrnxON65B/d6VSiOz1h80d3upjgSQSfTfSol+5LqsX1
SNDq9DlUPYLePl8Vg+uRp0SP+inRoz5J9KgjCR5GcA+CI6LzY0F0fp4SnZ+F
/+KX8eUB6uE9Xot8Hzz4foGKL78SN11Qtm0G1tOk546ZNTBr/reXNrJUHtsz
oCEq1wapf+niHia6uEp/6TNPEn3m9QTfRfABgjcQ3eYnRLd5GtFt1iG6zS5/
6TZvIbgzwVf8i55zP9FzPkJ0m0WJbrMO0W3OMZiYgc/7h32antR5B+kj5rvw
eR8u2BskeY8BWYF8Rbwf2eh28bysdyepPOXjho04/ugER3Ld4+2FaE5xL44/
pYMvcqw966F0x4eb1p69KEw+ckM8d/P/0U/2I/rJpgSfSfBAgq8j+sl7iH5y
B9FPVib4LoL3E9x6FVhiftSew1/PnDvNhB57oSuYH9Xqq8jOsWtB2613Plph
2AabmZ+V0oe6gCPyxgXz5B1eV09fzW5F6U+TFDFPfpHRHCm3o40wP/+YjsLV
ZhQ1wrJpaO0B+b/W8zNZTxbRuzhN9C4uEb0Lsb/0ky2JfrIUwRcSfB/Bk//a
PzZk/xz8q35sJfUjh+hdyBK9C0eid6H7l36yC9FP1voXXWWXf/E7+Ec/eTXR
T15L9JMlRMW1DtHKwarasjiGip8VfZ46eUJVcEjnp9X2m+UowSoqY865fnTV
6IIrrZYOOmZD7pjPz4xT6Dpi1weTtukvMZ//zmuZcsz/p7Xw7mq60wt9149x
MP//0pDOacxDu31zPNF5Uw/cOF46/fTHFjjv3c+d9LEJrWLbz3V/2A1S0pb7
+SXaQLM4QhXz8+N9Eg0eG1J/18KZA5ifr5k1dZqYUQMkLt1vXGPRi+7WjjRg
Pv+K92dOYz6bip2ObmFlN/rAmy6K+WwtJvskl4k3waGDKaubhLtRRXEC/c4S
JqTHjyYEWDJQ1tjj6DuubOh3nP0gsbMOMvj1EmZ9pqE3m3XGbML7IVlgN4Nu
VwmeTbt5O7tosEzwxJPoK/0o45DESz/FKtjwtHn0pzgdCdqp5gv6cOCRiHz6
oSIG3Kw1d9I/UoWc9ze65YeyYeP+yBchiQ2Q0Hphpc8mOgic4k7wf8NBaUuO
fF5YVg0NvFGDk+trEH11C7+tFxu2Pq1/LDFUCyt2809zmF8DLyXM0i5ZsdGU
9EszpVPrgEf5j884T83/9hnfS/zEjxM/8fvET/wfv62lxG+rhvhtzfoxZFHR
UY8yA/XW7H/YC28G9/jq72sCeqxYSpN0A1rIG6rtktMLr6bZrd96sxGu/6XT
3kt02v+Jt94k3raTeLuR+JKnEF/yauJLbkD8xxOI//hb4j9+mvhzDRF/rhji
zyWo/nRGj2892FS1V8vs6UVz6TPHGl43wxXvymYOdT7CrCVDLKt6kaWxvXb+
1kYI/EsffoDow8s+XW2k+rgWPlZEyqo+7kb2HePiBfNY8EImqrdyBwP2SL5y
2e3WitI6+02MUC8MTCw5siiqCXZ35bPluzqQf4PYZiX/dqBXm++Lv3AVpu6P
PvwtVB6ck0vm5mD+oW0ga+WHarTCdOOLPqNW8HueVKvS0wuiGw3OJl1oQoK1
9ltaDDuhVlpEVmp5OySXOBz6nNWCLMTDrhhldsHDIq4jAufa4LBPfGa8VCuq
WN4YLNyN9cBf1B6e0QbfB2gXgzOakZBDQKdififcdhWPMZVmgZtq4oOMojqk
+cXEOsyeBXpPBs5Fz+oGVqvqnaamj8i8Rz6k2KAYznDizuyYNQh3L+jUcteW
g0aZw5Nkv1p06WCE0KJMDojOTZeVamoAFe36BO6VHcjv56WFmX0dsM3eVl9z
QwtIhDO719l3oWL+K1PPUedI7NCPl7sVW2G4+evJxO9daNj055oeeisEjZ75
wO/UAuaj8slVxl1o/EdkWp0EE8o68sxYuq1wy81eKs28BXFdi7c8d6ob2pzK
z7Llq+DLrzOXvsRXohjrsWFx634QiEjc7PAxHS0VOXInVjML9m84eHfi7iAI
FhfZCR9tQM35c884hTdAmfSoBGewF3T5BoamrWCih9kO1iKzqd/vcvbK/uEO
EEJ3eHzOspC5pWVS61IWPJtn4cuoYUHcFOU1o2YsdPDTyXkrRpjU/cgxXivS
DiEb17fezGxD8yMk/Kx2tUHZ6Q1xw02dYFy5bE/DWC1akKEQFuRH7dPcFK53
6lTdvS/GTMrsEWLMlEyVHwwGb4/utfXjg2DE03L8tg8DqitLjjm2M9BhTvay
aEEO9CGvvG6tNvDlJJ/+ubUNTbXT3RkNXSByVXbb9bUsCM523lXymYnqhten
N+q0Q0n64idzL7DgSIbXOev9LPTumPG7DZEsoPPm3r65uB1q9693FGNVoRwf
3ybu5m4Y+cnvnBj+D0/7dcY77YMJc9x6YLZp0BZ7zy7g5nLnTciksvMbhdMT
qH13YEX+nuEFjXCq5OR9+7slaOKKYf0nVQ78HHpdNM+lBf87JvOW6Wvy7txq
MW8ZB9ZMBhlkR7+F8HsHkdOvJ8gpf210EWsQUkWcPZZ6V6O7o3HrxBh5wHP3
alBuYz+8FG9Jz0xgIp5PzWZWiZVQvj9nm5psLySNSCfUJHeg4+6MzFKqfsj+
dqunRKIL3g+J0hf6dGK+7lr5l9uyFuxt2yj/shskex3dtxt1osy4Ya+VEgzY
oi38TNi28z/6w9TPW/73u2NbromYnwIdSPJktXwVgw6y25b9ON7SBX3Wlyrx
v0/9Xevxv19lZaaB/32jm7Xvtre1oveuQV2H7CrgSlng1lMRfSBZZZ2WeIOJ
f15DuGBjFv9Fzjbhgj4YXhzSpvOjBC3q+vW9ecMHuGCqdLhJbBCGp/LJMjjF
4NTCctZO/IBENpyYHr1qEJYaSSkkvGuFO9xBMmcrKtAo7bJUbFQfOJfLt3yc
3QFae76smj9MR61KkmnxDV3gfOiR239/R0WPl3H4Oz56WWvYtbcTVu/dlHJ/
DQNpTh9YFmvdCdMs7QPwflgaqOZO7QfQDKxtwPuhu3frcnPpTtj++YnG4CSV
Rz/7ZV4R3gmqL1ri8fp/SzpYSa0/EiiV6sLrf/z+0it4nWnXk8OodUbrvudG
43WuusUfjdfzteakJrWeiKPQ+x2v5+uALU3497+z3n0j9fuDfsZoMv79pRZ+
Snjwiwn06C93mXVM2DY710bnZjvs3GwzgM/p+YJFDtQ5Rc+tQqXxOXUWj5v0
ps5p4FOHNOqcoof+NjfwOf20NUkRn1M5/wJh6pwiBs8eI3xOVdWcWvA5Hbsp
HECdU5SUZBCLz+nD6vTN+Bzx/qwwos4RzK99kIrP0ePiYzY4ngfqnemn4jnY
a45o43heuuCnCY7DO4p4r1NxGKGZP61wHN7yPOs9jsMzlMPuUXEY0U48Z+A4
LMVJd8VxeN7GvV1UHEb3bZ9G4zh88NJhHRwng4MuDlJxEvpHRicdqTg5ZFMb
i+OkUOr1s1SchNWqH+RxnEyLf56C4yT77tw0Kk5CosWtFBwnuSZ5P+D7nauy
IqYmxQi85sT+vt9b51/ZiO/3PfZmc7ld2lG01tBOfL/LZG9l4Pt9j03sI+p+
R/PqJmzx/a7Q6GOM7/fFl3vXU/c7Gtgn6IHv98iZUu/w/X6iJkyHut/RkLbH
Wny/Z/yLn9f1v/jbmoS/ffOZ8jp8vx+1Xjcat7MSpRYozcP3+y27E4vw/b44
p6iaut+hsXQ0H9/vlfdersD3+9zDvF+o+x0imA038f2OdqVw4fv9+5U1DdT9
DiYvYgbw/X6Jdqoe3++dkSfvUfc7VHh0aOD7vbhYoW5zQj1YTU8/FKzRC1el
5UODK5thZFzMDN/vp3Wur6Dudygcy1qC73cL00NDcXPoaI3FhjP5Q92IXz7u
zuHvLHD23yveFcNAll7HA3bNZKOwFdobKzwaIHjhJTbOxwz43sym8jHELbg3
HOdjhbdmX78lUYPmXksZ4jZlI7XFD+8VV9ZBe7pxgPA+Bmq2EF3cGtSHyh/d
TSgMawLDJjd+i9OVaGHtNpXYqE5k2x7jo9TTCXMr6W9Wq12A4JPupSVfH8OE
0D1B5o9B8OOz8zrfRAOVa7MvFBl0gq5YS4amQRcU80yoIxkGBK7c6n/EuQ/E
lo/2I9FmSEp/w4vzQ5d4t/dUfgi8kQHTcX648keKBY96DXik6lVPXmODrujl
XskftfAhcVN4aiYDkKDa5EsxNpgGzfDsXdEAa5++vm3jRAfehxV919f3wBiN
ayjIhwUPNr3rx/ntMefSIiq/RfaFbq9xfnsql+fYWV06YvPU2yg2cpBpFpd+
I1UXRN9Kk6r+UoXszmSNXDXjoG1QkpdTXwMf77RlqBtVoiNvZ2uY1PWiH7Pz
dKbmtsHKYZfwhfJZaHiegJXgEgY6tcbc1+R7P7zo/azTFJEHYqyMEO6frWBy
N8mzlbpnXY6FSGzOrIS3I6p66k/7gM6veD72VQukNIqFC0+jwwn/l9bW7hzI
9QtIPzylBi7pz12G822TGaKvqHwbAkqu9uN8+4j8qXdLJemQkbejnhbBAc1L
Gv5rDBlwItFpYSGVh0hH8E/0rmSDsfRrh4OBTfBKdn/2HfliWD9hbDd+hgU2
q4McxK17YYrxQjG7piSkNVy6LiCpAgm4bcxs6h2A5Jwc122qlQjelfE4VPei
VaZxhUBrA5+enINPM2lIVSpgZQP0o4+yvW7zqXUrXcGu4jGqQHo6fT9qt7GR
4o/pwt8DmmFZfYWPJDMXLa74WRIQ24bYitMTbVr64IfFe29dhWxge069cp/V
BNNULCzdt3Cg9pXYkdunKoDbSvKslicbiuRTzVbENcHhJX3TjdJpwCeoaLZI
px8cxgI0i0vpcIb/wEQHVddM8jyPouoaEDV8E4frGqVf2XNU6mngVMe99uXZ
foBALzOjgCpYS2vnU9pEA+Wh4Sw7Yw5MxsSxgrrroMV5leRdhWK44OJ/c/mN
Tsinq/bX0btg6p09g+cV/ZHueMOGM+pvUJ+T2ex7nEG4b6cgnXjyE3okMhos
WtqLUuqWV344xwSlkz4dJ/xpyKxqg73qVw5aEBs1//oLat9Xb3swr4eGkrvz
3J4H9KM7OXHXZPIqYYToYJv+pYOtM+wntVqehvaGbEuevoMDMkusps5YXQ9j
luN6/KZFKOzU1MwZmzqhd5nkHtUV3XApQZ+53CYbxHW6n0l2NqGCt57xfdoc
mHdPRYnfsgLcxr927j3HRkvtZox79DbBFIMlv+zTaPCiQKepUKsfnfT/oMZd
Q4eIv3S2eYjO9my26m11dxoUmsUZZzdR9X7+Jqdxqm4/1CXPjBoqg7w3dKc8
vV5UoLVDUlmVBRrKH83Nhm+gDz1TBRsTn4Hbw0bjM98GgXtOx45llp9QgmXj
hoKUXtiQeFJFO5gJyi9G4kp8aMi34CSd3c+BUo33cltLGfC57CX6Sa2bBJfB
J/PAfrgoWDE8nloJK//S91Yh+t47ImfKn5CiI2Wbky6sKA4cyjV8VKfMgM1E
r3sz0etuI3rdhVHq+Quo87WqV8yRU8ZBSR5bb4+vrYbCv3S55YgudyKL/tlf
rwaFOHnra1ewQWzEKML0Ug3obzjg/6aKgZJEm3YHq1Ln/PBbd054PYj+pctt
TnS5e3VGyyd318Bb0ccPFBhsdDTiyP4bB2rAUW5xfLRADWRfk7PedYONnCbW
NbrOqQMn7ggVv52tiFFUMh7M3w3HnQ/lLHdvhcK28qM3hVsh/HrB06DOLjTC
e6vqs0AbTHswuKpRrRUGqrw+9E12oUPyF48/edsKpkSP2p7oUZ8hetT/lm9P
/id/dt+P82cekj9/3r7J008iB36/R+OKzAh7kld5LWEQArPPqCcZVv55p8bl
oXH28+R1gfIB0DWdn4nzz4nJSVWcf0ZtadyC88+0/8mT1/13nvyffDhz3v/K
h/8t75Ui+S3176j9d367JsNYifw+lwXKNbMWhty+gX+fx7cC3+Pfn4drCfV7
g2aRE70C//6zS7ia8d/LzZW9D/+99UX5xvjv/SeP/fN3vcxYTfLY4+qsrX/q
ES0eXI/s47k4Ddcjsw2kqsxHm2BmaY/c+4FS8E1/OTzvBRt+Xf3m3Ds/GyKj
y5qPyz0HyVPfqmSTB8Hbe/xVwDUq/2BXFGfJ5aIlTIGtLkcHQDu6x2ZJcxv6
JnI27qRmJarZrhf3q6QXSqtZgTvMO1Bmn6pciH01Ynl/Parg1gWbiZ623F96
2pVBMSNjMW0oLczWYJMaDd1l37tvIdIHjIc5TUuVaIhfT4QrxDgTPZq9m7sy
cwC6JtqTXPfkgq9MR6PcZAok5k8syXAfhOI83RDjx80gXSMmfO5VObR2hG+X
2cOGKbt2dloFtoO+dZy3TDIdlm6Ie5hu2A3uXukP7FZ3QkSRXzyPJAP4eFvu
HPPphFoeBbvHr6yQ97QrD9mzHiJeE/uXPT8HwXchM3V8kIG+tPK5X6qtQWtr
x3a+KWdDS2hke8LmNuQnzWoXO9CGamMYX6oVu0DnSqly82IW0hpzUFo0i4Xq
1Rbn0jTawZPocqcRXe4XRJe77uqc/G162Whvj/FVC+sPKDTuusrRoEEQcxff
aV1bASJHeMSVVlTCU/URm09F/XCsesHMTKEWePfrwGK9sy2gnvLkfFRJN1x8
oi4Smc4E/8SFS/3fMiHfy7I9trsdZGqeLE6xZ8GaG+bvm/RYwDTyfJuRwgIZ
1Z0Oy2UbkNdAc/Ks1+1o+q1D1pVBnRD1kHPAZ0YL6p8fuWPQrQvx8Y4/2L2Y
CdyFRvPWjLUg061y9/yWdaMGcZFNe31awZav9mDEiVrY+0lX8ss7JoT0xAT4
D3XD53f9YW0azZCnWa12mcrPRE+85f8gz4L5I4tk2hpaYIe9+K8GgW6YGyi1
aUdrK6xV5S6LPdoC3y83lizb0wUfAwZuGysy4cXujKzUOzRkXlJeZzLAgfbB
A/vcPjJg/JF79yJEA9qIjLAjdV987BSyMa2iQ0Dy7sn5F0qR4ku+9d8MqP/9
lXDhMN4+WHfj5Ypv+tXo4vyyhiM6vTB5MGDdoqo2kKjZxiPJKUTpDkuUOxc2
Q/TlJv4NLWwQdxN1Pr8oGwZO6pcciKlGUpsGdd2mDsDR+RteKqgy4LjxUlHj
y33Id63AhW7qXLHEZo1tN6eB3mmPfrF1HahyjYRe7qluGBW3kCuPLoJTcm/X
lUfXoeCfd/u0WNTfQfADBH9A8LGWq2t+eRWhN4dFU3561YFkh8yIQh8HprT+
wTMJLkbwM+nHWpQHa9Di3fyhyoNd4Jto3ThleTucJbgEwb0J3rdo2rfW8Er0
69jl2tZwJgyPSpuu2NgLLIKPEHyc4AuEtoe6rU0C3ffiM9zW5qB1D+96NoYO
wgaCOxB8DcHXRaavpX+uhmcbDn6p+tyBNNPocidpnaBC8OcE1yB4GhfXi7TR
BpAqOiS0X7YDWUX3hH5roereAxIphyLrIEhP+sdxqm6t+XRzqf5eKg4f3jms
YlABu/Wtp9HdatE+/ngu1TQO8Iqmhv7ckgtDS3W2zv1ZjKY9UBeaMzoADmz7
6JGsHJRw7YHKs8VlwJVhx2XZPADqHxq1+jwa0H0///cf2e2gbBiitR06QW1U
QalwpBpd7Vn/afOJVnjR7jEuyegF8YFMRtUcGlqv3mmoU1MDqj3eBd6lHHiR
p1rKpXQDXA/I601EB6LCVrEfpycGoXOTwbalX2rBRWog/fJ0FjrbZS685k43
OJmEDpeJN0O21Ytka7FmOOE3zdDAvQeyW3euHT1fDDQ3dlUqVwmMGM9I4iQM
QKRzRn/GBzo6l9T5q6aXjg5sytlnl8eBhEHfOLxu1kGyi6h1A5fr3PfwupVL
nh77vT6lEf1VbrWwyN1qKl6fpe8SI/E6OFw67k2tA1p2pfvHQWodzAZFxy1u
NSFm38tL0SadSOD9mqlhIu0AIp/W4XXY8VM8g1oHpOA/NoHX4Z2twO+/d3Xq
txlcMYFwM5Y5jv/eLqIDvInoAG8lOsC+ixvW4n1uuvEpH7XPId/E8ive5x4E
30fwAoJLeHxZife5ASe8n9rnaElMVy/e56sIbk7wxQT/rhtcjff5vZYDkdQ+
RzEbFeh4n48TPJTgUQT3Gxrq5FGqQwKK/bE8Sj1IiOUxUSrG/FdcKD/7Jz4X
hi76JdS5QDHyZla/zwXBDQj+lOCbrxwLwedi6+//5sA2z7Ar+FyYEtz0L3y9
vK0MPhedSjUT1LkAdH3R0t/nheBdBM8gODfRF7In+kItRF+Ih+AOBG8k+GM/
HvOv41R+twkt/zreA76PD9ge2/TvuPG1Cx04ftpM7zSl4idqzaqeDKXip7Jg
+PezayvR9n6W0z7PThTzYIoOZ34XzHnQrUv3r0Z2n7+Oeif3IpeRRl9r/jZQ
9stcfVCdgTJjt2596d2HnvH0KT4qb4LSDcFKOA6fKSyoouIwSp94qIHjMOet
j1YqnY4qN8imR+b0oEmF0fKQV9Q9djPCq/hYCZrQOFy61rANJe+/OTInrQ9W
yrtsPW+Ti84fVz6iLF6HWPtnuhtq9oPgtGhbHLeP26evNo+phvdXhVRw3B5e
rcdlMVIClge19MLa26BdXSyfZtQHLTNWN/lY02G1beqO7Vt7oHCz3KTeBRbw
H+2AZ57VwB+8b+3a6F7wO2xWWy/XBgssn7UUiDNA87PKh336fVDKkPHjSm8G
2YYZmZdp1fDK1vT11slesDtvfElprAXWaM6TucRXCbxJdU9XUnmHvtuYx0eH
LihkWXWECJbDMlOHI5EfWbAzlucED60HTs5nFuP7zqpoG52671CT5xY7fN/J
xnAN4PtuxzwLQeq+g31o+Sl833V1vTf42UFD7+l3bD/e6IdF8/x3mP2oBMnw
2Ghc/87XdZ9Tt40NeQGfm79R9e/3blEVXP+mvY+aeTu2DaZfs7uF69/KnlLX
t4p05DH10qmmZA7cL9Gcz51TDc69PAmz9z1Dx1ZXLu8vzoaT5/NnW70ZhDlX
4hIVX5fCJofEg8K7etDzgTvJ4VHtkFH/IW6bAw1c7B8W30jjoAhRj8WywzVw
bQqr0qSHBmsv7VuZ4d+Php4ZfxMoqYTiWQe+rabq3yMVmUVU/Yuy79/+iOvf
picRjBCq/t21TxxR9S9KW5KRjevfxtWcKblqdNASeCqgUMRBR7IPPpDYVw1G
CY25F6i62HrNvkEH9TewbfMVYVwXi7W3PE3dmA0/czrdOxgNKGtL6GpFKn6+
dOE8jfDOR1yGpfLnp7XDuv6SstUyvdBkdsD+yTQa4t4+yfbn54C4e9PWk4YN
/9H1PUF0felE13e+9pdIXEdnhGa5UnU0yC0p8cF1tOxlO2lLzyp0IERLzaeA
DXom1/l1GPVQEkCPx32bL2379U3qesHI1VAR922C/Waa4r6NwIz+H4JLGFBm
+/UU7tv8ePq2Ifzpfbh8oF4npuEDkloqvEeVNgiLNkUoFCpXwGWVG7E/grtR
vaPmqnqFDvhJR3b7H1XBLcF57zX72Ig1Nfhj4PJ6mDgc9wj3W9bdvPVw/AwL
+U3R1cX9Fq107uO43zKUmzrbP6kCRnuNKnC/ZcuXR0bHht/AzMuOCtkHCpGo
1GqZ74cHof1KZMhMpWLUt2j/m7HN7WB702OLRm4PPLgfp+J1rhyljfncsDnY
Dr6p0RpoTw+wSZ5jQ/KcUJLn7H/UboTjhuSlbf1U3ICsu8wQHDc0wejj54pq
lOu6ZmPazD546cFlyUVvgQmSF6WQ/EeC5D8HnCLvKaldgKmxCuG5Xx+jqMWH
hHDf71bGO8kSj3zY7zFat6erEfl+LMsb1uNAJ8lzvpM85xvJczYL7GfjOLCl
6J46FQcQ13jO7J1UHPjhl9N2voIOafdyDAZqe5Bg3wbBT0FMkCb5jwnJf9aS
/MePxTsjsSMbhLUTL6sWV6P3fE5zRajv+G0sf+Pxq3S4xusiffxqO9rqtueE
wsluiDZ/YorjMPeHrSupOIweFlodxnE4iuBcBI8k+NK5SC3uERMmPK9Hf/Fm
opa+xNaglR1QIFSXk3O4DUIUj1UZSrShYu6M28e2dIHK0cTv+H7nluO6Qt3v
oH9Bcwq+32XWqS1eMtmAPDtGrr7l6oDODTLNilM6YXrU4NDV+Sx0y0NXr/Ub
E1Yv5nY0PdAOq2RWbwtRZSIDduzRiMk2WBzQ5R1P3UtvtPTOCXW0IsuZTywE
aK2wsfDjtD3pXVBj+LhL/kcH3DLjqbzZW43GA6LPqRZ1wiLP/EQ8v7i2JiaI
WcdEQoHMI3h+0ZCjPYLzonj5mW+pvAh9bQr/nRcpzdr8/WAUCz6ZjU94pVLn
aXeaOpuK0//0B/6pf5NJf+AQ0W22IbrN94hu85LvBaq4LtsfNVuWqsvgadK2
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
FDj9MgeM4pym4fw5KmzG6r1djfDwTeFrnD+fs5pdhfPhRfuYllQ+DMvH1abh
fDg1ZXtx5DUGjJ6rtZve3QcC4yYB/fKNcO2sVjGeK0nv63uowGBDes+LPXiu
VJG7JVaBWjcuTdvTCtS6SetY8nLFNPwrnj9tg/gPbgY48B085aHQB5snxupf
q7VAt2C8+NDLCjD9tOAU/X477D9H866b2gP1U58J4vrr9cB5bar+QvnI/as2
VX/Na61b+UuSjg50ah07G8NBNVLLMlMVGbBXZLepclIWSrLy1Kz3oqM3GS1j
F9QHQCUw5IKxLB3xzrO8mvCOg2w5Sr+Cyqh681jjwO+52xbDXdoVbKRbZhqO
524PRb+M8DlVoYJXYSt47rFRjiu/edLLBsj9S8c4hOgY3zG8G4TndFo/qvWD
VdlIIjTVC8/pjlvsm3OKXoYiVZnM/fqdKLVllT9vfheUVm96/ICqBzvXPw98
1vABVm0K2IbrQfOQI1y4HkxjPMyj6kGQuxw5E9eDyt/nLVkzmw71dx62u9zi
gNtwlq5DHgMOE13i7L90iX25MhPwvG+5dIjVrhtsKLOQacXzPtkpAnmBMTRY
kS4wX62wB+5Ju7v3nWcB11r1B7hOfB1S9i3rQCHcLB5VwXVictcpB1wnhs7q
ZlJ1IpLaZCKF68QbB9OsMY83UwG88kPZyLLxSyDm8U6KqDSuOUFDG0XY0dIv
OYh3/tqP0mtqwf7yy4u4L7FFeD7uSyCR/e8FcV+Ct3hDS555KfqxuC/h9J1u
ZH3sXNJOnw643hFjM2ffM3R7+LMmuzgbyV+yWYz7FfWxbqdxvyJjqY6v8K4e
cD+1ywv3K/7WE+YlesJb2M/4qr7QwE5g4zaFJ/1QtC++2kejErK9xt6y4mhw
ZDj2kr5oPzyvXXdGJLsauJr38+K+RGCC/DyFIg60FTSH4b5ER+S2cIdD5bBZ
+FLZrCN90OaYNLvNoQ0sHcS+4L5ESEVIdzujAWLex+3FfYk5r0vO4L7E9ZAP
nuentaPPa7r8cV/Ch+gDpxJ94DCiD+z7420Knkcbf51CMw/sR5FR5mw8jxZV
iIrHvGtR3knMu0buutQ9ZlcJq4+f+IT7MP2se6sy/Pvhg77UV9yHsdcKf4zX
c2cCvZ5aT7h+UcsLr6dNr6E1/v1l8xjd1O+PSgr39bRSv/8DrV3H16xigmR3
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
Ni2if8P5M2pXyyecP2v4aeep/Akjz1uP4/y5KgM92/vZHZ1arsrZHfMSzV1a
qY35yc8/s4fg95cGf9wdoaMlwG05m0uaen8JjK23x/l2MHfdsc9FlciXVsco
pPKtlQFXs/bTDNQ5xOw2aNsCobLjF56KMkD64/X0MZNEeCM0yFE8/AGd5FLr
Df4+BDu2Bh10+pyDBGJru5S948HwZVLRl3PD4NGhL7UlKhpZa/nPar8cAOr7
5RtTh4ZBlJ1vXsKzVGDbb5pqzJILOgL8iytNhkGfh4M2IyAJJSuzfnDrz0KX
hiLNsi8Pw/ZgzyIb4QrU+ibVPqq4AZlmGny7ysKAi4ltRq4ROWAuEi3lfrIM
lslyBFx9OAQSM7wdmPJSoGCNhy5TXhHUPis0q19A3Uej4TvrL6SgLvrKjesv
FKGN55B4P7UOMcSv2I34FT8hfsUnNdhs9MOLkaDRd2n98CbUUmdlcIiNAVtN
EzV29wajM7GiuVq9cSj56Gw7es8wZBF/Y0fibxxD/I3lZj+W0osqRSUz354f
mduJhHWfPNxyrQ+sVhVrvXuUgtTnhx/J1ihHXQt8nLlyh+Cj5LLXeJ1nJNzu
pdYZdCZYGvE6t5K8ASRveJO8EdvV9VXzzQfg8p7xbdOLDpgpvzriJaMPLH5f
pC/dVAkHr3xkLczqgXXoaiXtbhcMmj4R515UBP7h0eN3FGhgqH/4qkbZABSR
57qSPNdLyHOt8539654FhVCn5/VTYlYPuC7T2p6n2wNdTcxReJ8IB/maDdm2
oMN9NpvxPlFbvu0ts+k7qJm/fF/CnkokuP9Y0P27Q1Dje8gWn49VnO1tqKfq
7p/s7zkdlYf+qn/8b10c909dLD1NVyVAdFWV03RMz4iOqZDk56skPz8k+Vn6
zsm7GU4VsDh+TUTQ+gHILva1HBCnwTISX0jiRSR+/fdUnrzG8d88eePmMUHc
r2957T1XsbAacuzVluB+vQTJe+9I3ttC8p7Iiw1RQ82FKIF5hbvq7R4UZd3J
0KHqpCWfvU/gddvN5mCWuKcSZA48cMLr9krc+CDH02CoKPpsGxaQCvW+J5Rr
84dh33WXmVh3sERTeW9eQj96Viw8C+sOVvsXWC9HBchBL12AN68bPZK2abwd
2APDbfRDWN+h/jbKXqS4Hzpeu37F+o7hy2ox+PoDZwcrePK6QXHnqbl3qOvl
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
yR5OfaAQRgObNzKxL491gynxSzEnfil+xC/lb3McVgarWvM4daCau5GmKzd1
QGuwqAf/mw5Y9Jc5AvLEF0WQ+KLcI74oT+WUa7V3dsDuRY9+npvfgeJHH85t
nNkJCcRXZC7xFdEhviJ/O8f446tfOs1X/4+PRxnx8egnPh4biJ/GW+KnUUr8
NP74Y8wg/hgyxB/jj0++DPHJryY++XFlhqfwOuRKBVpQ64Bc+lZew+twObW4
Ev+uhfIVbHbzOyAmip0f/65Fqjq6Ixw0OMH0eG5dKLXPFJc+C0rpgZDTTNI4
31YKLj1P5Vu4ckLoJ863HSm0dtaRVvRRt7pIgKcXSWrmHoqpbYPbxEc0k/iI
hhMf0Usa6nE4D8/d4WBJ5WFUqNkxmYeziM9GJPHZyCE+G9FhOYWaQa1w79Vt
e96aHsh5O9Rpf5gGfcSPIof4UUwQP4p2oi/LJfoyAaIvu3bCNdp/diP6mSA3
YPmrH32j6SqtSGqEDuIHqET8AHcSP0C3k5usHvc3gPPVeymosR/63CPyNx5t
AsVHTV9WTjSgsrFVXM7F/SjWnUdn7t0muEF88pcTn3xl4pP/zVCv6J1wI9BT
XjhbMPohg19y/XfqPazyjVMPP6fljXKvqecUGQu45eLndLouO+P/o8uu/TDl
Jy9+aspP/jfxk/+bbrqE1F/WpP7irp2qv/74q78h/ur1xF/9LPEJZ2Kd8gmf
R3zC/6ZHPkvquC7jqTrOj9Rxf9MFu0seE8H4Sn3wsgqFr0BbNtMT46s2PRfl
f+M3OyVWKYzfOEKdPAje08Z4L6y4RxTjvRLiR/Q7dcr3mPw/lK9WWolxJjOT
utzN7G3p364uSMI4c73yk40Yl1Kfo3Wqb2P6tmq//RiXTtf93fqj+5svUyTz
tBDqevNpZnadaGh8yzvlh31g7ymtRXDpfcv369WE8z9EYlwqdl9HE+NhKl7W
ZaWaXiUv1oDxcEx3pALGFdJ2DQUUroCui6YI4wozgivspnAF/MEV714yz8Y4
IVhbcJDCCYg/sr8T4wQhbTMbjBPWNBjGUDgB1T73ZsE44W96tL/pzmqJjoxG
dGS6REfWvWhKF5ZPdGF3iC4sgvDYLxEe+zPCY39JeOkmhJceT3jpPkTvo0v0
PsVE7xNBdDq3iE5nO9HptMpmsWdSddYn26NzqToLmXDeSMF11nHCf4sm/LdD
hP92J2V3IL4vfZ/S+cztOiG+dswH3xdRwmfbT/hsXITPlv321x38XjPTsRZo
1G5Am3plVfB77TbR4wdP0+OfIvr3WKJ/DyT695FbU+ckjuScxIOck7A/mNI5
mjb8V+e4lugR5hE9gjbRIxx/tHmLlFgkLLzUtUJK7D3wZatoG+QNQ1EB19UF
D/NQ7Pq16gse1qIDd0W8DhyjnjNyrgLkXOUtOVeJmvkuEs+53hBSdX6leS/S
u/JuO55zXWCU6IznRPsm3tROfdUNd8V3v8Rzoqfzri8T3rWp6jPa68AyxFM6
TzbVrRN+Ch5B3+f3wXve3Pqz1yrhpxHf3YsTPYhveUnZTOiCVRcYokz2KXAi
KvLTq0OZSC3M6GefxzDM+7lx3ZhDMeLS165LvFYFV2hbb8yLG4T1X7wn8ZVZ
xkFeCl8h2XlZaRhfZRVe48P4KkrIK5/CV4CevM/B+KqL8JBjCQ/5KOEhHyPn
PPnknCeAnPPUE77rQsJ35Sd81zuEh5xOeMhOhIfsJrL1TpdWBdz/MSZ/srkf
ttz9pB+cToPgId06/63lKFty86VwOwYyErh12dqoHm6Vj/J5epXD66KmUc6v
DGAxUfxo86AGoonv4qlpvoui710P5O19BZdHE1Xy9yYjz+yz8mEfhsGUn+3G
Tt5y5PMtaOtOXqo+59WiH7s0AK4nB6x2c+ahw4tl9u7mrIUWvzqV1zcGIT3E
/sx5tRwwuOLHfV6tGqn+uC/ybGgQtHx+XcN4zJ52TJnCY8g274Q8xmPDLIJe
GI+tNfPTpvAYaH26ooDxmFtukpzkRCXck6JZtdpTePvW85EZW2rh6/fF3/B7
7V7zDU7qvQbJR3bp4vfa1mlzIV+QuZCas7M+4Pea5eqWC9R7Dbmdid6I32uc
0+aqzyV9xj9zyZlI35Cf9A2NCN/pB+E7fSN8pz9zuhcQXtNewmu6TubxLSPz
+JLIPL4ZsDYI42TtvtgHFE4Gzp894RgnF0ybRyBH5hH8mS8QQ+YLHCLzBU4S
Hs5GwsPhJjycB4RX84Xwai4QXk0O4b3/7p3ivb8gvPerhJeynfBS1Agv5bft
lA9k9PMpH8hQ4gM5fc5CB5mzMP3cT4mc+70kvAU2wltgEN5CCOEtIMJb+E14
C3/jZb1Zd1wZ7weTLR+OU/sB+RrnMs+k9oMIOQ+8Tc4DW8h5ILq5KR7nGdY4
G2sqz0D1U20dnGesyDz6EDKPPojMox/70J+LnyPPA37u1HMEYlkKFvg5qsvl
YMXPUYHyjO/Uc4T2Hz7dip+j6XzFZ4SvaD67QG2rTivavE7WfVS/FZo0bdJO
ZfbCWHDmUHB/I2xJiVAfHG9Ew8Yt4grx/RBL+rw7SZ93OenzCk6bg7mG8FW2
7aW9wfjwm0FfL4UPIedFrxrGhypVm+wwDjxyoDaBwoFo6X6JMowD//Az7xN+
5k3Cz/x/z7lPAg==
    "]],
  Axes->True,
  AxesEdge->{{-1, -1}, {1, -1}, {-1, -1}},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BaseStyle->(FontSize -> 16),
  BoxRatios->{1, 1, 0.4},
  Boxed->{Left, Bottom, Back},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Directive[
    GrayLevel[0.3, 1], 
    AbsoluteDashing[{1, 2}]],
  LabelStyle->{FontFamily -> "Times"},
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0], 
      Opacity[0.33]], "RotationControl" -> "Globe"},
  PlotRange->{{-3, 3}, {-2, 2}, {-0.9999998001849767, 0.9999412949754951}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7272177552323236`*^9},ExpressionUUID->"fd5a1eda-dc20-4f08-99e1-\
e908de6e57ae"]
}, Open  ]],

Cell["\<\
Se pueden realizar gr\[AAcute]ficas impl\[IAcute]citas. N\[OAcute]tese que la \
intersecci\[OAcute]n coincide con la soluci\[OAcute]n.\
\>", "Text",
 CellChangeTimes->{{3.6884846291738677`*^9, 
  3.6884846605433593`*^9}},ExpressionUUID->"0da7e4a6-40fd-45b5-9258-\
7d970ea296d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "+", "y"}], "\[Equal]", "7"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"4", "x"}], "-", 
        RowBox[{"5", "y"}]}], " ", "\[Equal]", " ", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y"}], "\[Equal]", "7"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"4", "x"}], "-", 
       RowBox[{"5", "y"}]}], " ", "\[Equal]", " ", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6884846163714914`*^9, 
  3.6884846166642885`*^9}},ExpressionUUID->"87e6e0fa-c182-44c4-b65f-\
d4f39dd287e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", "4.111111111111111`"}], ",", 
    RowBox[{"y", "\[Rule]", "2.888888888888889`"}]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.727217755270597*^9},ExpressionUUID->"adc11c57-090a-4243-a23f-\
29042235361c"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxdVn9o1VUUf7/2fu3t/fi+CSMVciwbGSE6MNzqnhFWKwPXCDGQYSBktX4Q
gyT3R42EREJn2hwYEbbGBFsRtQx3L9lKmGWibW221A232kI35+Y296Pv/dx7
voMuZ9y9+879nHM+58d9q1547dmdAZ/Pd9j90/uiWcKHlU/3VTQUVTT4qOby
N65k6Wn9schPffpjTZb80AuQ0c/SaugHrL5DULscsDgO/YmDIAGmwqEA7oXI
mM3Qt9APEb5uyFicHHoKFzJ0CF+ErV6avsMetvppehX6EcLHojQV4p8o/QW7
KXses/eT9Dr0Y3QAAEnrZ5xwXJNHvdhz6X6cJ2ycSzufsx7fYxzGZTtsl/1g
v9hP9pvj4Lg4To6beWBemCfmjXlkXpln5p3zwHnhPHHeOI+cV86zuZ+1cS7V
AdcF1wnXDdfR/+pKHcXKqJt3O1zJqm1HdrqSUQY3qwwPGfXI+Ymy8xOOWps4
40pamfgctSVS60paQe19x95Lq32fFrviqOi797qSNjjHGTelemq3u5JRHTCc
9OwkRz7RYvHTysSRp17BnrLnCTX48AeupNSKn99wJeHh1nVu3dO5NaEaTb7V
VVMPqu7KHVfyVNdXD7qS6+EYc3FVsHeHKwm1++NhV2LqSfiTsPZjCte64qoY
gUW9c21tT2dEPXOxxJWYjSti8aPK5DOshgEcUe9pMwVh7/xHAOSodzRN0bAq
AVBImTTxHlTLEWfIxh30ztet1yto8QImDxUBZerBb+Pwqy35myrzN/kVpUPl
6dDSOcIf8akFAyh5/x1xLMp+TVvdojR9MSdXXCpfeal8XsZ0Gaydk6Woizn5
Evi46+k9CjszsrF5V1Pzrln5Nfybknf2fTHtinxTw/dMykmTGLkK9257ep+3
6nVLVj2n16R8HP6Oywva/Mrbsh11c0O2IS+3ZBvujXh6hcjT3zJPu1E+Jr/E
90Py+fFl1ePLbsr94GlAdoOnUVmKe72e3ij86pEHdTtsG5IncN4tM9Ua4Lrs
x70uecjivA29n+Rm8HxNmv46W3YA/dUrR1FfjSKJ/Q9ZicFwQjDuBuT3nIiY
XZ4x52L6og74tDx7cvTUydE+MRTU8bTJCPCvCrYzW6YTMSgeA367OG3iEA/A
305xEP04Iu4BH7+JJvh9Q7CdfMOT+Az56hObDY9iNfLdL64g3glh+mpAHME+
5dlp1deapkQ/6mZYnDJ5FNvRH8MWb0ZcM3yLWjTujChEvP+KYlM3ogrzZEyQ
qStRgnkzZu3Pe36FtbtpH3WjYSYEz723MJAmxcvanWY/7TZ1Jj40fUHs1wUN
Xxak5eBrWvBcPoZ8zYgNpg+pA7zPCjP3c4j9PAaewrQDDT8v+F34YWBNx8Ca
BYsXtfPeZ9+XmDefX8SgjVGV6UvvXZrQ5Vntp++BF6fD1u9fzdyi4xhAAe+9
27uxpX5jS5DWg6cETaEOgtZunvfeHEV9JumJSm0wx3vvClAfObSAQZyiRuiF
yfC19N6tM3Of/jFzzHvvWuu1A1G6jrmUoVK9DUbNu+U4XlwfAdeh/ajDuPfe
lWr36+NGb8ohk99ci5+172Ou997BXEsutcOvrMfDHPzP0kMY8Py7IJ9+OadX
gv4Dltw6fQ==
   "], {{}, {}, 
    TagBox[
     TooltipBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
         19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 
        36, 37, 38}]},
      RowBox[{"{", 
        RowBox[{
          RowBox[{
            RowBox[{
              TagBox["x", HoldForm], "+", 
              TagBox["y", HoldForm]}], "\[Equal]", "7"}], ",", 
          RowBox[{
            RowBox[{
              RowBox[{"4", " ", 
                TagBox["x", HoldForm]}], "-", 
              RowBox[{"5", " ", 
                TagBox["y", HoldForm]}]}], "\[Equal]", "2"}]}], "}"}]],
     Annotation[#, {
      HoldForm[$CellContext`x] + HoldForm[$CellContext`y] == 7, 
       4 HoldForm[$CellContext`x] - 5 HoldForm[$CellContext`y] == 2}, 
      "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       LineBox[{39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 
        54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 
        71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 
        88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 
        104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 
        118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 
        132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 
        146, 147, 148, 149}]},
      RowBox[{"{", 
        RowBox[{
          RowBox[{
            RowBox[{
              TagBox["x", HoldForm], "+", 
              TagBox["y", HoldForm]}], "\[Equal]", "7"}], ",", 
          RowBox[{
            RowBox[{
              RowBox[{"4", " ", 
                TagBox["x", HoldForm]}], "-", 
              RowBox[{"5", " ", 
                TagBox["y", HoldForm]}]}], "\[Equal]", "2"}]}], "}"}]],
     Annotation[#, {
      HoldForm[$CellContext`x] + HoldForm[$CellContext`y] == 7, 
       4 HoldForm[$CellContext`x] - 5 HoldForm[$CellContext`y] == 2}, 
      "Tooltip"]& ]}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True},
  PlotRange->{{-5, 5}, {-5, 5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.727217755357091*^9},ExpressionUUID->"f0e3f8fe-862d-4347-a023-\
cae1d2db10b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1:", "Subsubsection",
 CellChangeTimes->{{3.688483732453574*^9, 3.6884837351344166`*^9}, {
  3.727122251649885*^9, 
  3.727122252097872*^9}},ExpressionUUID->"b050b923-aff4-49d0-8d73-\
84af74213ba6"],

Cell["\<\
Graficar

cos(x+y) = x,
y = x+2

y comprobar que la intersecci\[OAcute]n coincide con la soluci\[OAcute]n del \
sistema de ecuaciones.\
\>", "Text",
 CellChangeTimes->{{3.6884846769968033`*^9, 3.6884847099993925`*^9}, {
  3.727122255169568*^9, 
  3.727122261977854*^9}},ExpressionUUID->"607b2946-238a-45ae-9b3f-\
c8ebf1fec67f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Elementos interactivos", "Subchapter",
 CellChangeTimes->{{3.7272180114446793`*^9, 
  3.7272180140687933`*^9}},ExpressionUUID->"88e7a893-2f5e-471d-809c-\
d93cd7889487"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"i", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7272180344398193`*^9, 
  3.727218043189728*^9}},ExpressionUUID->"2df7f161-e312-4f63-b6b4-\
60a6c26203cc"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 0, 10}}, Typeset`size$$ = {17., {0., 9.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$532153$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$532153$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`i$$^2, 
      "Specifications" :> {{$CellContext`i$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{247., {51., 56.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.727218043474387*^9},ExpressionUUID->"3b7ec58e-42d4-4e80-94b5-\
8f3464e32ed8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["x", "2"], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", " ", "x"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"FontSize", "\[Rule]", "16"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)\>\"", ",", 
        "\"\<Sen(ax)\>\""}], "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "5"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",ExpressionUUID->"95647243-48aa-4aa7-8504-b64832da6c25"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 1, 5}}, Typeset`size$$ = {493., {136., 140.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$531788$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$531788$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{$CellContext`x^2, 
         Sin[$CellContext`a$$ $CellContext`x]}, {$CellContext`x, 0, 3}, 
        PlotTheme -> "Scientific", FrameLabel -> {"x", "f(x)"}, ImageSize -> 
        400, BaseStyle -> (FontSize -> 16), GridLines -> Automatic, Filling -> 
        Bottom, PlotLegends -> {
         "\!\(\*SuperscriptBox[\(x\), \(2\)]\)", "Sen(ax)"}], 
      "Specifications" :> {{$CellContext`a$$, 1, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{540., {180., 185.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.727218018848009*^9},ExpressionUUID->"86a4d7b2-7662-4b5a-84b2-\
48ab862804ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio", "Subsubsection",
 CellChangeTimes->{{3.688484745756254*^9, 
  3.6884847466692457`*^9}},ExpressionUUID->"0d90508e-7246-4da4-a8f3-\
7931591765d5"],

Cell["\<\
Crear un elemento interactivo que encuentre la soluci\[OAcute]n de
Cos(x+y) = ax,
y = x+2,
donde a es un elemento variable de 1 a 2.\
\>", "Text",
 CellChangeTimes->{{3.6884847492118454`*^9, 
  3.6884848050409517`*^9}},ExpressionUUID->"94b27551-4624-46b3-96bd-\
dcb1eda0d9f5"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 753},
WindowMargins->{{224, Automatic}, {Automatic, 121}},
TaggingRules->{"$testsRun" -> False},
FrontEndVersion->"11.2 para Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info633727335583-9003794"->{
  Cell[1463170, 28701, 187, 4, 46, "Print",ExpressionUUID->"6d42e47f-8f7e-40f6-a822-8e507b11d23b",
   CellTags->"Info633727335583-9003794"],
  Cell[1463360, 28707, 1241, 37, 97, "Print",ExpressionUUID->"eddcc596-802a-4290-852d-d5097b55aecd",
   CellTags->"Info633727335583-9003794"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info633727335583-9003794", 2259076, 43621}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 193, 3, 98, "Title",ExpressionUUID->"bdff2f26-a159-4dca-82a8-f9ffc4e6d163"],
Cell[776, 27, 247, 6, 83, "Subsection",ExpressionUUID->"debb2b2c-ed10-4907-93cc-70685854f19f"],
Cell[CellGroupData[{
Cell[1048, 37, 161, 2, 58, "Chapter",ExpressionUUID->"f205be8a-e2b4-4387-8757-cacf562f9c17"],
Cell[CellGroupData[{
Cell[1234, 43, 1064, 28, 130, "Input",ExpressionUUID->"72dc9dd3-d17d-43df-8714-dd83419e2e9a"],
Cell[2301, 73, 196237, 3388, 561, 23861, 561, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"64a04c4a-febf-4557-a9c1-726b3a59453c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198575, 3466, 251, 4, 65, "Subchapter",ExpressionUUID->"e640789f-b38d-4725-9ebf-d837129c923d"],
Cell[198829, 3472, 244, 6, 35, "Text",ExpressionUUID->"409080a8-81a5-4cc5-8403-27eeed43f783"],
Cell[199076, 3480, 756, 19, 89, "Input",ExpressionUUID->"7cef6025-ad26-4cb0-b259-fae131b025a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199869, 3504, 171, 3, 65, "Subchapter",ExpressionUUID->"fc85992d-c33e-4d7d-8155-7d3112a20cf2"],
Cell[200043, 3509, 67669, 1116, 163, "Input",ExpressionUUID->"b9340e44-e82a-40ce-903f-f2aed75112ba"],
Cell[CellGroupData[{
Cell[267737, 4629, 250, 6, 48, "Input",ExpressionUUID->"6abeef85-bb47-42e7-a1f0-36a352b3efc6"],
Cell[267990, 4637, 80843, 1331, 322, "Output",ExpressionUUID->"e791f3db-f0c0-453b-800c-026af2aa7e36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[348870, 5973, 796, 23, 71, "Input",ExpressionUUID->"b633caf3-f330-4f93-ba47-70199403a6a6"],
Cell[349669, 5998, 631925, 10365, 674, "Output",ExpressionUUID->"2f6b8e6a-4253-451f-885f-c653690524ed"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[981643, 16369, 159, 3, 65, "Subchapter",ExpressionUUID->"ad858a3c-0d32-4a2d-87ce-1c7d45b2b7c8"],
Cell[CellGroupData[{
Cell[981827, 16376, 220, 5, 48, "Input",ExpressionUUID->"c5f97b32-24ce-4720-97ef-7167d4fe3984"],
Cell[982050, 16383, 265, 7, 35, "Output",ExpressionUUID->"fd1e286e-4a15-4c19-90e4-697240b2b369"]
}, Open  ]],
Cell[CellGroupData[{
Cell[982352, 16395, 248, 7, 48, "Input",ExpressionUUID->"58ee490a-d027-47aa-8fa7-c349487adf06"],
Cell[982603, 16404, 270, 7, 35, "Output",ExpressionUUID->"473854bd-930b-47d7-8829-6e0836aafa45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[982910, 16416, 280, 7, 48, "Input",ExpressionUUID->"91fbfd3d-83d5-4c40-aad8-96cf3992c755"],
Cell[983193, 16425, 756, 25, 35, "Output",ExpressionUUID->"39741ba5-d0b6-41f6-838c-73075af1defb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983986, 16455, 312, 9, 48, "Input",ExpressionUUID->"c30831ad-292b-45f4-9e2c-3ea28b49075d"],
Cell[984301, 16466, 767, 25, 35, "Output",ExpressionUUID->"d809dbb6-a36a-4f30-a77a-079db7dcf826"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[985117, 16497, 171, 3, 65, "Subchapter",ExpressionUUID->"d6aebf14-3e54-493a-bde5-8c5bc18e9305"],
Cell[CellGroupData[{
Cell[985313, 16504, 19814, 462, 76, "WolframAlphaShortInput",ExpressionUUID->"23f44575-15e3-4ab7-a608-0e410785cf14"],
Cell[1005130, 16968, 47283, 784, 117, "Output",ExpressionUUID->"1f7ff1ef-82d7-49a4-bc07-9e86318c4711"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1052450, 17757, 17929, 431, 75, "WolframAlphaShortInput",ExpressionUUID->"8df7d435-c7bf-439d-a462-8721e7ec115f"],
Cell[1070382, 18190, 440, 11, 45, "Output",ExpressionUUID->"96824841-fd58-48ae-aa49-dbc025960823"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070859, 18206, 500, 11, 58, "Input",ExpressionUUID->"5eb3281b-5bb8-48a8-ac03-7d33dd4360f5"],
Cell[1071362, 18219, 206, 6, 35, "Output",ExpressionUUID->"ab494f9c-b000-4c2e-800f-3c20734f77c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1071605, 18230, 512, 12, 41, "Input",ExpressionUUID->"f4bfc391-10ec-46ce-b51f-9e1b6d1c8c75"],
Cell[1072120, 18244, 198, 4, 39, "Output",ExpressionUUID->"03a73e44-9b7f-4195-9f8c-bf7131bd6ab1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1072355, 18253, 333, 8, 48, "Input",ExpressionUUID->"3c9afc06-d302-4ba1-b142-024dd537a545"],
Cell[1072691, 18263, 52423, 1024, 773, "Output",ExpressionUUID->"734042fc-39d6-4be7-a191-6dcfc849fa08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125151, 19292, 131, 1, 48, "Input",ExpressionUUID->"e821a287-53eb-4ea7-b6e9-a45d0e4f0fab"],
Cell[1125285, 19295, 1720, 37, 46, "Output",ExpressionUUID->"442ff9b3-bf25-4860-ab10-160278af46d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127054, 19338, 161, 3, 65, "Subchapter",ExpressionUUID->"d4b72b2c-48c5-4cce-8ecc-2289aac5c629"],
Cell[CellGroupData[{
Cell[1127240, 19345, 218, 5, 48, "Input",ExpressionUUID->"aac81c96-8bb2-4df1-bbb7-d970306dc279"],
Cell[1127461, 19352, 286, 7, 35, "Output",ExpressionUUID->"5e0642bb-66e7-4c19-9630-25bbdda09567"]
}, Open  ]],
Cell[1127762, 19362, 469, 12, 48, "Input",ExpressionUUID->"364b02d1-bc5b-4c9c-ac3c-b970e3dcff06"],
Cell[1128234, 19376, 759, 21, 48, "Input",ExpressionUUID->"39c70932-3cd9-49ab-b869-a2a8d16ef858"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1129042, 19403, 205, 3, 58, "Chapter",ExpressionUUID->"ed36cafc-f2c2-4672-b9c5-ff075130d833"],
Cell[CellGroupData[{
Cell[1129272, 19410, 159, 3, 65, "Subchapter",ExpressionUUID->"4dae9897-b6d1-47af-b697-4f515596be7b"],
Cell[1129434, 19415, 640, 13, 58, "Text",ExpressionUUID->"9d7e0e56-e36e-4a74-9fcb-2e271d496a0d"],
Cell[1130077, 19430, 254, 6, 35, "Text",ExpressionUUID->"ccd27eaf-e077-422a-a0a3-9876c8de9719"],
Cell[1130334, 19438, 149, 3, 35, "Text",ExpressionUUID->"3041c4f6-c629-49ce-a6d7-aa330ffc6029"],
Cell[CellGroupData[{
Cell[1130508, 19445, 131, 3, 31, "Input",ExpressionUUID->"504b63d0-4540-46ff-ad3f-4968837f569a"],
Cell[1130642, 19450, 127, 2, 35, "Output",ExpressionUUID->"1a294385-325d-4985-a6c7-ee8ed40bf526"]
}, Open  ]],
Cell[1130784, 19455, 166, 3, 35, "Text",ExpressionUUID->"0b40fc86-22d9-48fc-92f3-6ff8658bcf58"],
Cell[CellGroupData[{
Cell[1130975, 19462, 157, 3, 31, "Input",ExpressionUUID->"8485a129-232d-40b9-b076-d6095b1513fc"],
Cell[1131135, 19467, 137, 3, 35, "Output",ExpressionUUID->"4edd375d-ba55-4abb-a2f7-761546c58d2e"]
}, Open  ]],
Cell[1131287, 19473, 167, 3, 35, "Text",ExpressionUUID->"2d6afec4-2a1f-4125-aab7-a90b675538ca"],
Cell[CellGroupData[{
Cell[1131479, 19480, 187, 4, 31, "Input",ExpressionUUID->"54023c2f-cc9c-4ff8-9ad4-13d450fc3459"],
Cell[1131669, 19486, 166, 4, 35, "Output",ExpressionUUID->"c8f39346-38c1-417f-95a4-39ea4142fa1d"]
}, Open  ]],
Cell[1131850, 19493, 154, 3, 35, "Text",ExpressionUUID->"e13c3d26-505c-42b5-9978-21303e851263"],
Cell[CellGroupData[{
Cell[1132029, 19500, 177, 4, 31, "Input",ExpressionUUID->"fe878ccb-1f5d-41cc-8e1c-5edf78e2f06c"],
Cell[1132209, 19506, 150, 4, 53, "Output",ExpressionUUID->"482de4b1-6f66-45cf-bec1-81c96caf6001"]
}, Open  ]],
Cell[1132374, 19513, 159, 3, 35, "Text",ExpressionUUID->"f4fa3d60-e065-46e0-993c-ce774f775d13"],
Cell[CellGroupData[{
Cell[1132558, 19520, 173, 3, 31, "Input",ExpressionUUID->"68aba1a9-f386-4aaa-b738-8fa28ff9a1e5"],
Cell[1132734, 19525, 150, 3, 35, "Output",ExpressionUUID->"a346f3e2-e4ab-425f-8930-7ff66ace51ab"]
}, Open  ]],
Cell[1132899, 19531, 239, 4, 35, "Text",ExpressionUUID->"2afca0cb-0632-48ab-b13a-40e2a8cc2566"],
Cell[CellGroupData[{
Cell[1133163, 19539, 202, 4, 31, "Input",ExpressionUUID->"f60cc8df-c5ef-4307-9185-3acc51497a5f"],
Cell[1133368, 19545, 127, 2, 35, "Output",ExpressionUUID->"7e76e48f-cc0c-4572-9a16-a8a0bab78d22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133532, 19552, 245, 5, 31, "Input",ExpressionUUID->"b76d31f4-ab38-44c1-a990-178dd3e6110a"],
Cell[1133780, 19559, 127, 2, 35, "Output",ExpressionUUID->"1ce9f98e-27d9-46e7-acf4-bbe80154059b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1133944, 19566, 186, 4, 31, "Input",ExpressionUUID->"9d45fb3b-5d77-4ff9-bd5e-9cebb303798e"],
Cell[1134133, 19572, 132, 3, 35, "Output",ExpressionUUID->"8cbb2f06-31a4-4942-b56c-d281f25ec997"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134302, 19580, 237, 4, 49, "Item",ExpressionUUID->"5e006988-f0d7-4aa3-80fa-3344600cad72"],
Cell[1134542, 19586, 365, 7, 41, "ItemParagraph",ExpressionUUID->"45be4bf4-aeb3-4d0b-b91f-d26ee66572a6"],
Cell[1134910, 19595, 180, 3, 49, "Item",ExpressionUUID->"954120c9-f172-4f41-95b9-4c70ee505ff0"],
Cell[1135093, 19600, 660, 11, 62, "ItemParagraph",ExpressionUUID->"e859f8d1-1e5f-430e-99a3-54e46b4a5f1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1135790, 19616, 286, 5, 47, "Input",ExpressionUUID->"47b6c6d6-d293-476f-a8ca-717a029d5e7a"],
Cell[1136079, 19623, 240, 5, 51, "Output",ExpressionUUID->"723ab268-2897-499d-b0d8-81ddcdb73ea5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136356, 19633, 254, 5, 64, "Input",ExpressionUUID->"49193b8c-b7ca-4674-a35f-f95a54048ee3"],
Cell[1136613, 19640, 707, 21, 51, "Output",ExpressionUUID->"236f9ba2-34f1-44d5-b219-61b0466de402"]
}, Open  ]],
Cell[1137335, 19664, 321, 7, 35, "Text",ExpressionUUID->"83c7c61b-ac6f-463a-97bb-73e5cb65c55c"],
Cell[1137659, 19673, 191, 4, 48, "Input",ExpressionUUID->"4cdba9ed-f199-4771-8026-26ce80707943"],
Cell[1137853, 19679, 340, 7, 35, "Text",ExpressionUUID->"169eb46a-4ee5-44aa-b825-4a8e0586bdbc"],
Cell[CellGroupData[{
Cell[1138218, 19690, 202, 5, 48, "Input",ExpressionUUID->"1bda96b0-506c-4eb8-8e66-4a3c9d2a8e13"],
Cell[1138423, 19697, 150, 3, 35, "Output",ExpressionUUID->"9ba7b3fe-58c9-4585-be7e-9680fcbe9c6d"]
}, Open  ]],
Cell[1138588, 19703, 323, 9, 35, "Text",ExpressionUUID->"0a5df58e-ce26-4ad2-9cae-ecc63f1041b6"],
Cell[1138914, 19714, 256, 6, 31, "Input",ExpressionUUID->"d9d2051a-360e-463f-83a9-b57c71514e10"]
}, Closed]],
Cell[CellGroupData[{
Cell[1139207, 19725, 174, 2, 49, "Subchapter",ExpressionUUID->"129cde23-667e-4e96-b45f-8e37fccf7242"],
Cell[1139384, 19729, 623, 12, 58, "Text",ExpressionUUID->"f180d076-39b3-4317-8053-8b14bf2794b8"],
Cell[1140010, 19743, 268, 6, 35, "Text",ExpressionUUID->"876be217-c665-46c6-8356-559e93415082"],
Cell[CellGroupData[{
Cell[1140303, 19753, 186, 4, 48, "Input",ExpressionUUID->"0e6381c0-125e-4f3b-ae1a-7f79351edcfa"],
Cell[1140492, 19759, 133, 3, 35, "Output",ExpressionUUID->"95aabc0d-5510-48f5-b6a2-0eb70771085f"]
}, Open  ]],
Cell[1140640, 19765, 254, 6, 35, "Text",ExpressionUUID->"879c0838-e2d1-4cd6-8b6e-e872a0353032"],
Cell[CellGroupData[{
Cell[1140919, 19775, 207, 5, 48, "Input",ExpressionUUID->"1634e5f7-ae02-49f3-bc50-be3e05db59b3"],
Cell[1141129, 19782, 134, 3, 35, "Output",ExpressionUUID->"aed177c0-e68a-432e-97f8-d0aaf1cd9480"]
}, Open  ]],
Cell[1141278, 19788, 455, 8, 58, "Text",ExpressionUUID->"52e11669-774f-4f31-bade-b6dc85c53aa5"],
Cell[CellGroupData[{
Cell[1141758, 19800, 210, 5, 48, "Input",ExpressionUUID->"6eb242be-044d-48c6-aa25-099c3c1e1cba"],
Cell[1141971, 19807, 310, 11, 48, "Output",ExpressionUUID->"e03ccfd8-2d90-4979-9f48-3a362b4d2e72"]
}, Open  ]],
Cell[1142296, 19821, 246, 6, 35, "Text",ExpressionUUID->"237c0b3b-90f2-474d-a56a-a0a29c35064e"],
Cell[CellGroupData[{
Cell[1142567, 19831, 187, 4, 48, "Input",ExpressionUUID->"c9b866cf-fab7-47ef-bea9-38b7b7d7e558"],
Cell[1142757, 19837, 275, 9, 48, "Output",ExpressionUUID->"98f4f29f-c766-45df-a970-d5904bdaba44"]
}, Open  ]],
Cell[1143047, 19849, 376, 7, 58, "Text",ExpressionUUID->"632ccdd2-38bd-45bd-ab22-8982827cd224"],
Cell[CellGroupData[{
Cell[1143448, 19860, 185, 4, 48, "Input",ExpressionUUID->"b2acd88b-93e6-4ee3-9bdf-81e46bfb6eec"],
Cell[1143636, 19866, 135, 3, 35, "Output",ExpressionUUID->"db2bce7a-de06-44f5-871b-1e78c1250495"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1143808, 19874, 183, 4, 48, "Input",ExpressionUUID->"1913f6eb-8c84-4e66-9dec-25bb02437139"],
Cell[1143994, 19880, 136, 3, 35, "Output",ExpressionUUID->"6853785a-2748-47bd-aa7c-85fe95dab9b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144167, 19888, 199, 4, 48, "Input",ExpressionUUID->"e647f06f-53c3-4956-a6fe-cad5a142f532"],
Cell[1144369, 19894, 135, 3, 35, "Output",ExpressionUUID->"8b577746-43ca-42f1-9892-c4400a3575fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144541, 19902, 185, 4, 48, "Input",ExpressionUUID->"ba926b92-d9c0-4ac6-9c01-9d1ed08b86b5"],
Cell[1144729, 19908, 133, 3, 35, "Output",ExpressionUUID->"faebeab0-af5b-45db-9e28-7e79e24cd33f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144899, 19916, 160, 3, 45, "Subsubsection",ExpressionUUID->"cc3747d0-91e3-4b82-bd68-688ff23b8519"],
Cell[1145062, 19921, 344, 9, 35, "Text",ExpressionUUID->"fce57a51-e1eb-4fc4-b66c-4017c7c87916"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1145455, 19936, 154, 3, 49, "Subchapter",ExpressionUUID->"6b2db38b-c5e0-4ca4-bd7a-fbfa83db10f6"],
Cell[1145612, 19941, 226, 5, 35, "Text",ExpressionUUID->"7ad9776d-bbb9-4cb6-a858-8fa4e38aff93"],
Cell[CellGroupData[{
Cell[1145863, 19950, 299, 7, 31, "Input",ExpressionUUID->"3de15651-32b3-489c-a5f3-037e32a37915"],
Cell[1146165, 19959, 278, 6, 53, "Output",ExpressionUUID->"0607b507-f8ba-4d53-be3f-b894ac85e881"]
}, Open  ]],
Cell[1146458, 19968, 238, 6, 35, "Text",ExpressionUUID->"2894add8-123f-42a8-ac4b-53637de97727"],
Cell[CellGroupData[{
Cell[1146721, 19978, 186, 4, 48, "Input",ExpressionUUID->"0b75177b-3155-4ee7-bf14-424b6ab0a25e"],
Cell[1146910, 19984, 133, 3, 35, "Output",ExpressionUUID->"9ff1e2af-6d11-4014-92e8-d2dea9e7966c"]
}, Open  ]],
Cell[1147058, 19990, 458, 9, 58, "Text",ExpressionUUID->"be5ecbe8-d455-4f10-84b7-65a5b8b0d427"],
Cell[CellGroupData[{
Cell[1147541, 20003, 192, 4, 48, "Input",ExpressionUUID->"7a8377cc-b119-46aa-9c47-7c67ee0bc4e1"],
Cell[1147736, 20009, 410, 13, 35, "Output",ExpressionUUID->"811ffa62-839d-4b19-8b14-40be8c71a5ed"]
}, Open  ]],
Cell[1148161, 20025, 297, 7, 35, "Text",ExpressionUUID->"3fae7d1e-cbb8-4f61-8eb6-eca6812678f1"],
Cell[CellGroupData[{
Cell[1148483, 20036, 208, 5, 31, "Input",ExpressionUUID->"29ca0bc4-f468-4ad8-9a34-e38816b99cf6"],
Cell[1148694, 20043, 130, 3, 35, "Output",ExpressionUUID->"923ec11d-f8f4-424e-ae9c-ccc71d0fbda5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148861, 20051, 208, 5, 31, "Input",ExpressionUUID->"711b3aed-98e8-4189-9085-2e9c9eacbbb1"],
Cell[1149072, 20058, 130, 3, 35, "Output",ExpressionUUID->"faf569fd-0981-4033-83cf-fca0c7637920"]
}, Open  ]],
Cell[1149217, 20064, 199, 3, 35, "Text",ExpressionUUID->"ac9d8e2e-e698-4369-91cc-e137f823432c"],
Cell[CellGroupData[{
Cell[1149441, 20071, 225, 6, 31, "Input",ExpressionUUID->"c7f5380b-dfc2-4f2a-9eb2-dc1b78cca427"],
Cell[1149669, 20079, 152, 4, 53, "Output",ExpressionUUID->"fe276fcc-7e61-46c9-b77f-9f2f2d1a5e0a"]
}, Open  ]],
Cell[1149836, 20086, 229, 6, 35, "Text",ExpressionUUID->"781b29b4-b943-440a-9986-578c3660154a"],
Cell[CellGroupData[{
Cell[1150090, 20096, 188, 4, 48, "Input",ExpressionUUID->"39bf3b81-a23a-42a7-b087-07754cbb6882"],
Cell[1150281, 20102, 130, 3, 35, "Output",ExpressionUUID->"1d4cb0e1-698c-4b28-80bb-7f597b249e82"]
}, Open  ]],
Cell[1150426, 20108, 351, 7, 35, "Text",ExpressionUUID->"6d35a888-dee3-4b29-b4b0-6b9b90a80d13"],
Cell[CellGroupData[{
Cell[1150802, 20119, 344, 10, 31, "Input",ExpressionUUID->"26b150c2-ff28-4205-8fc3-ac9745147c5f"],
Cell[1151149, 20131, 858, 28, 35, "Output",ExpressionUUID->"ae1b98e5-d6e0-4030-a61f-b3c6c7bee93b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152044, 20164, 425, 12, 48, "Input",ExpressionUUID->"a4d0ab41-3eb9-4375-afc9-68212759b05d"],
Cell[1152472, 20178, 547, 18, 35, "Output",ExpressionUUID->"fc7784cd-3450-4049-b364-70f3b24f4799"]
}, Open  ]],
Cell[1153034, 20199, 360, 7, 35, "Text",ExpressionUUID->"c68b6869-121b-42c6-b982-8636a0c4e2fc"],
Cell[CellGroupData[{
Cell[1153419, 20210, 355, 10, 31, "Input",ExpressionUUID->"2c7ca0b5-304e-4883-afc9-74ec85b27b81"],
Cell[1153777, 20222, 323, 8, 35, "Output",ExpressionUUID->"d89bbb65-a5d1-40e2-9bb2-50418389e101"]
}, Open  ]],
Cell[1154115, 20233, 290, 6, 35, "Text",ExpressionUUID->"ae905511-8c5b-435b-a2d1-c3eaf64629bb"],
Cell[CellGroupData[{
Cell[1154430, 20243, 443, 14, 48, "Input",ExpressionUUID->"79c4e247-ab1b-4465-93af-c17e4a8d685b"],
Cell[1154876, 20259, 187, 5, 35, "Output",ExpressionUUID->"ff00df49-7f63-48c3-832b-2be69d6db483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155100, 20269, 522, 15, 48, "Input",ExpressionUUID->"fee33151-5e44-4ca7-968c-72e8a7f6c453"],
Cell[1155625, 20286, 185, 5, 35, "Output",ExpressionUUID->"decc8be2-5985-4a12-a868-2b03d6834064"]
}, Open  ]],
Cell[1155825, 20294, 297, 7, 35, "Text",ExpressionUUID->"eb631fb8-f910-4e85-991e-88d2324a2542"],
Cell[CellGroupData[{
Cell[1156147, 20305, 571, 17, 48, "Input",ExpressionUUID->"fe52e664-c517-4756-9f99-0ae2c667efdb"],
Cell[1156721, 20324, 332, 11, 35, "Output",ExpressionUUID->"9e77711a-8d9d-4e5e-ba0e-58397bcf9c36"]
}, Open  ]],
Cell[1157068, 20338, 461, 9, 58, "Text",ExpressionUUID->"38ea1ddf-43ea-4555-a4a6-9c8395f49680"],
Cell[CellGroupData[{
Cell[1157554, 20351, 116, 1, 48, "Input",ExpressionUUID->"8700dfe0-086a-4b34-8748-d1c73bf53c96"],
Cell[1157673, 20354, 130, 3, 35, "Output",ExpressionUUID->"8b59e8be-90ec-4612-a516-ec99cb130601"]
}, Open  ]],
Cell[1157818, 20360, 179, 3, 35, "Text",ExpressionUUID->"6fe5cc0b-ca97-47a3-bb68-45183f3b5754"],
Cell[CellGroupData[{
Cell[1158022, 20367, 115, 1, 48, "Input",ExpressionUUID->"95fa65be-db08-4613-9395-2b66fe072919"],
Cell[1158140, 20370, 150, 4, 53, "Output",ExpressionUUID->"ad2fd996-dae5-46d3-9e36-00fc6ba83eb9"]
}, Open  ]],
Cell[1158305, 20377, 189, 3, 35, "Text",ExpressionUUID->"27302cbd-d309-40a5-9c1d-1ae3066ba942"],
Cell[CellGroupData[{
Cell[1158519, 20384, 188, 4, 48, "Input",ExpressionUUID->"06d339e4-cfde-4750-830d-d2db6846d910"],
Cell[1158710, 20390, 222, 6, 86, "Output",ExpressionUUID->"27c6bf38-896b-4b14-ba15-8db69ca289db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1158969, 20401, 163, 3, 45, "Subsubsection",ExpressionUUID->"fa2a40c5-1081-4cc9-b85d-0e7cb89646f0"],
Cell[1159135, 20406, 321, 7, 35, "Text",ExpressionUUID->"b9af310f-c163-405d-b238-cecb6822aba5"],
Cell[CellGroupData[{
Cell[1159481, 20417, 187, 4, 48, "Input",ExpressionUUID->"4f03052c-e43d-4271-8ab6-5b74f2a96e20"],
Cell[1159671, 20423, 260, 6, 35, "Output",ExpressionUUID->"1b23d3d1-2ace-475f-b2d1-bd8e21cbad9f"]
}, Open  ]],
Cell[1159946, 20432, 180, 3, 35, "Text",ExpressionUUID->"256d518e-5319-405c-b97f-21c8b464fc00"],
Cell[CellGroupData[{
Cell[1160151, 20439, 217, 5, 48, "Input",ExpressionUUID->"e424ffd4-4d5f-448f-a4c7-1cfae520f64a"],
Cell[1160371, 20446, 671, 11, 35, "Output",ExpressionUUID->"ac00557e-439f-4718-9461-507cc3b166e2"]
}, Open  ]],
Cell[1161057, 20460, 182, 3, 35, "Text",ExpressionUUID->"29106797-1702-40d4-96a8-7d0e48db182a"],
Cell[CellGroupData[{
Cell[1161264, 20467, 336, 9, 48, "Input",ExpressionUUID->"2e9c8ca9-cc82-4a18-a0a6-4b8cfa824f1a"],
Cell[1161603, 20478, 230, 6, 35, "Output",ExpressionUUID->"b9f619ad-cf2d-4927-85b1-3103e8098592"]
}, Open  ]],
Cell[1161848, 20487, 237, 6, 35, "Text",ExpressionUUID->"db825be8-cc4e-4ce7-b39a-f7a97eeed930"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1162122, 20498, 165, 3, 45, "Subsubsection",ExpressionUUID->"62983eea-506b-4b38-97fc-969208526f0e"],
Cell[1162290, 20503, 332, 7, 35, "Text",ExpressionUUID->"4955c176-25d5-47b8-97de-acc7bcf8b79e"],
Cell[CellGroupData[{
Cell[1162647, 20514, 187, 4, 48, "Input",ExpressionUUID->"40cba748-8af1-4d35-b308-ad7718300dea"],
Cell[1162837, 20520, 154, 3, 35, "Output",ExpressionUUID->"c8181973-7fe7-4b42-a738-ba0466320db8"]
}, Open  ]],
Cell[1163006, 20526, 225, 5, 35, "Text",ExpressionUUID->"2c79e3b5-4190-4813-998c-6309e6ffe08d"],
Cell[CellGroupData[{
Cell[1163256, 20535, 193, 4, 48, "Input",ExpressionUUID->"ce57ab8c-1705-444e-a4db-189b5584e90c"],
Cell[1163452, 20541, 158, 3, 35, "Output",ExpressionUUID->"d810926d-3e74-4147-96a6-17f17084472a"]
}, Open  ]],
Cell[1163625, 20547, 298, 6, 35, "Text",ExpressionUUID->"c45add4c-851d-45fa-ad36-bd3a54d9f470"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1163960, 20558, 259, 4, 45, "Subsubsection",ExpressionUUID->"f36e7123-4baa-453e-9980-ec2f8367c738"],
Cell[1164222, 20564, 156, 3, 35, "Text",ExpressionUUID->"305c42fa-40e6-4dde-a8fb-68ad44bd527a"],
Cell[CellGroupData[{
Cell[1164403, 20571, 271, 7, 89, "Input",ExpressionUUID->"97c221a4-fc67-4c77-bf14-ee9defaa3926"],
Cell[1164677, 20580, 737, 21, 68, "Output",ExpressionUUID->"598722fb-2a19-425a-b154-66cb49de428c"]
}, Open  ]],
Cell[1165429, 20604, 243, 6, 35, "Text",ExpressionUUID->"bca3a997-10e4-4b05-be6d-fdb4a24c6aec"],
Cell[CellGroupData[{
Cell[1165697, 20614, 516, 14, 48, "Input",ExpressionUUID->"40e1a01d-10c5-4b3b-b705-7cde8e986167"],
Cell[1166216, 20630, 739, 21, 68, "Output",ExpressionUUID->"e7bf9147-639b-49df-b314-9ad97d2e1394"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1166992, 20656, 254, 4, 49, "Item",ExpressionUUID->"cf766905-5580-4e61-8406-f7a45a0e17fe"],
Cell[CellGroupData[{
Cell[1167271, 20664, 629, 11, 60, "SubitemParagraph",ExpressionUUID->"6b751d8f-3eb0-49b0-bcd0-4b81bc2e9fbe"],
Cell[1167903, 20677, 38546, 638, 320, "SubitemParagraph",ExpressionUUID->"e779ed7f-f0dd-4cc3-8b29-a89db34cca61"],
Cell[1206452, 21317, 738, 12, 60, "SubitemParagraph",ExpressionUUID->"b0c5e348-1c9b-4ded-b5d4-af528734d70d"],
Cell[1207193, 21331, 505, 9, 40, "SubitemParagraph",ExpressionUUID->"f51b4f7e-9fef-48bf-88b8-a70ef895fbe9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1207771, 21348, 178, 3, 49, "Subchapter",ExpressionUUID->"c64c8181-c911-4d76-8388-bb5c55fcc0bc"],
Cell[1207952, 21353, 248, 6, 35, "Text",ExpressionUUID->"05d95ce6-4bae-449e-a9a1-753dc0b13cb3"],
Cell[CellGroupData[{
Cell[1208225, 21363, 661, 19, 73, "Input",ExpressionUUID->"bb157678-93d5-4a05-9aa7-15e469eb6d51"],
Cell[1208889, 21384, 260, 6, 35, "Output",ExpressionUUID->"22a0b213-3572-4e55-9ebb-685cc23c5b86"],
Cell[1209152, 21392, 317, 9, 35, "Output",ExpressionUUID->"23aef24f-9f61-46f6-80af-d018621cd6f5"]
}, Open  ]],
Cell[1209484, 21404, 376, 8, 35, "Text",ExpressionUUID->"d7e31d48-7067-420b-9534-938cf047a1bc"],
Cell[CellGroupData[{
Cell[1209885, 21416, 424, 11, 48, "Input",ExpressionUUID->"7b2758a9-2fa3-47bb-95a4-ddd8511789d7"],
Cell[1210312, 21429, 317, 9, 35, "Output",ExpressionUUID->"989c822a-ff02-44a9-9db4-eade2c114931"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1210678, 21444, 174, 3, 49, "Subchapter",ExpressionUUID->"670231d9-e1c5-4fbf-ba1f-52f4f987bf23"],
Cell[1210855, 21449, 313, 7, 35, "Text",ExpressionUUID->"99046916-8c7c-4ed2-a604-137e5899eb34"],
Cell[1211171, 21458, 323, 9, 31, "Input",ExpressionUUID->"fdbd6be3-1b81-43f4-b925-c2aca3d027ab"],
Cell[1211497, 21469, 337, 7, 35, "Text",ExpressionUUID->"429d411d-3e74-4958-a6c1-d5e22821a2b7"],
Cell[CellGroupData[{
Cell[1211859, 21480, 187, 4, 48, "Input",ExpressionUUID->"d0f4b5b3-31d0-4c0b-b683-6b69fdf513f5"],
Cell[1212049, 21486, 1296, 37, 250, "Output",ExpressionUUID->"3642bd8a-18ff-403e-af06-55c6c54196c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1213382, 21528, 186, 4, 48, "Input",ExpressionUUID->"2bc75e3a-535a-4b4b-a14f-728140899ed7"],
Cell[1213571, 21534, 9655, 266, 241, "Output",ExpressionUUID->"553d421f-6f75-4e55-9eb9-b3582561a241"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1223263, 21805, 189, 4, 48, "Input",ExpressionUUID->"0a6462d5-7074-4e3a-a9bd-ac0df8357985"],
Cell[1223455, 21811, 19521, 444, 377, "Output",ExpressionUUID->"0d666225-36b2-46f1-a1d9-cecd8d2aefe0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1243013, 22260, 163, 3, 45, "Subsubsection",ExpressionUUID->"29074c59-aed3-4e58-ab96-2bd624ed0f37"],
Cell[1243179, 22265, 292, 6, 35, "Text",ExpressionUUID->"fd5a3119-f687-4002-bb74-b64b0a9954b7"],
Cell[1243474, 22273, 1534, 42, 246, "Output",ExpressionUUID->"b17c0bab-6731-4643-8062-b8ddb01be7f9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1245057, 22321, 157, 3, 49, "Subchapter",ExpressionUUID->"5fa28333-c234-4aa9-a0e0-f75b49bf0170"],
Cell[1245217, 22326, 350, 7, 35, "Text",ExpressionUUID->"bf21fb19-a120-4cb3-b7f4-29e17db3641c"],
Cell[CellGroupData[{
Cell[1245592, 22337, 175, 4, 31, "Input",ExpressionUUID->"80e4c38f-7bba-4a8c-ba70-b24c8b4b75cd"],
Cell[1245770, 22343, 130, 3, 35, "Output",ExpressionUUID->"78bc7c63-48bd-4660-8f89-0d27e8f7373b"]
}, Open  ]],
Cell[1245915, 22349, 121, 3, 35, "Text",ExpressionUUID->"2204fd5f-b0b7-45de-aea4-39e91a46420e"],
Cell[CellGroupData[{
Cell[1246061, 22356, 175, 4, 31, "Input",ExpressionUUID->"689c281f-4ebb-42e0-9b74-9e9dee826b5f"],
Cell[1246239, 22362, 152, 4, 35, "Output",ExpressionUUID->"682cad4b-7052-4a82-a302-4aa056735d4e"]
}, Open  ]],
Cell[1246406, 22369, 512, 9, 58, "Text",ExpressionUUID->"2da4a678-2e35-4ca0-9740-3298516bde68"],
Cell[CellGroupData[{
Cell[1246943, 22382, 210, 5, 48, "Input",ExpressionUUID->"bd38f006-543c-4f39-921d-33fc8c6b184d"],
Cell[1247156, 22389, 310, 11, 35, "Output",ExpressionUUID->"c2ac79cb-cf91-4b31-a416-d19d1c853e35"]
}, Open  ]],
Cell[1247481, 22403, 218, 4, 35, "Text",ExpressionUUID->"644c522e-3756-4ea7-a83f-805a5985f8a5"],
Cell[CellGroupData[{
Cell[1247724, 22411, 208, 5, 48, "Input",ExpressionUUID->"1b81ff35-951c-4126-99cd-74e22f9cfff6"],
Cell[1247935, 22418, 133, 3, 35, "Output",ExpressionUUID->"6b5ca416-9934-48f2-80cd-583aac300b16"]
}, Open  ]],
Cell[1248083, 22424, 229, 6, 35, "Text",ExpressionUUID->"4e7e962f-7443-4d1a-a3ff-6d5c2eafcfe5"],
Cell[CellGroupData[{
Cell[1248337, 22434, 289, 8, 48, "Input",ExpressionUUID->"c689413f-029c-48d5-878b-04b0bf6a0bba"],
Cell[1248629, 22444, 438, 15, 35, "Output",ExpressionUUID->"3b332805-1b21-4011-8327-8b956fd4d519"]
}, Open  ]],
Cell[1249082, 22462, 306, 6, 35, "Text",ExpressionUUID->"d7f36ffa-2db7-450c-a790-61cab6084fc5"],
Cell[1249391, 22470, 260, 5, 35, "Text",ExpressionUUID->"35f73e01-b4b4-47a6-af4a-a7db6a80f6cc"],
Cell[CellGroupData[{
Cell[1249676, 22479, 174, 4, 48, "Input",ExpressionUUID->"849b9372-9fc1-43ee-b1c3-e00ccba85cfa"],
Cell[1249853, 22485, 129, 2, 35, "Output",ExpressionUUID->"3d53d01a-e059-4f14-9e49-046b0bd6858b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1250019, 22492, 175, 4, 31, "Input",ExpressionUUID->"a776691f-02c9-454d-93df-8f854e991a3d"],
Cell[1250197, 22498, 157, 4, 35, "Output",ExpressionUUID->"1d0bf00d-992a-4a55-8164-6fc6e4b52720"]
}, Open  ]],
Cell[1250369, 22505, 175, 3, 35, "Text",ExpressionUUID->"2cc63ffb-27a7-41f2-bcaa-ccaae4d67f44"],
Cell[CellGroupData[{
Cell[1250569, 22512, 144, 3, 48, "Input",ExpressionUUID->"9a4a70a5-f312-4680-92ef-dfc1f3a62ca6"],
Cell[1250716, 22517, 239, 8, 35, "Output",ExpressionUUID->"9bb0e324-00b9-45ca-bddb-6c32bff43683"]
}, Open  ]],
Cell[1250970, 22528, 222, 5, 35, "Text",ExpressionUUID->"9e5bdd53-8844-4a21-9609-b00c90956a82"],
Cell[CellGroupData[{
Cell[1251217, 22537, 175, 4, 31, "Input",ExpressionUUID->"82d3ac3e-c3dd-4406-919c-4bef28033131"],
Cell[1251395, 22543, 126, 2, 35, "Output",ExpressionUUID->"d511f409-f06f-4ab7-b0ac-10994b1d4f2b"]
}, Open  ]],
Cell[1251536, 22548, 172, 3, 35, "Text",ExpressionUUID->"154e6718-c5ed-4a7d-9629-1eb50d94af5b"],
Cell[CellGroupData[{
Cell[1251733, 22555, 282, 8, 48, "Input",ExpressionUUID->"48d85f5f-6629-4442-8774-c9b757292f8b"],
Cell[1252018, 22565, 301, 8, 35, "Output",ExpressionUUID->"059fde98-533c-4258-8b5f-5263cf582e4e"]
}, Open  ]],
Cell[1252334, 22576, 221, 4, 35, "Text",ExpressionUUID->"d728045b-7d65-42e1-a34e-9319933eede6"],
Cell[CellGroupData[{
Cell[1252580, 22584, 145, 3, 48, "Input",ExpressionUUID->"e78acc11-4b3b-4496-99d5-47f34b64e3ed"],
Cell[1252728, 22589, 241, 8, 35, "Output",ExpressionUUID->"73349df9-eb5c-44d4-a52e-a39ffa982106"]
}, Open  ]],
Cell[1252984, 22600, 424, 8, 35, "Text",ExpressionUUID->"7d3a51a4-50f1-4562-bff9-978879d5c2e8"],
Cell[1253411, 22610, 362, 7, 35, "Text",ExpressionUUID->"ddc8253d-9031-40ff-85c2-75ddab2a8f17"],
Cell[CellGroupData[{
Cell[1253798, 22621, 170, 4, 48, "Input",ExpressionUUID->"609e8048-82ca-47f1-9fba-265a62ce434e"],
Cell[CellGroupData[{
Cell[1253993, 22629, 129, 3, 25, "Print",ExpressionUUID->"465cef91-e12a-4e9c-88af-a9d09dfd0d10"],
Cell[1254125, 22634, 126, 2, 25, "Print",ExpressionUUID->"c58d2d53-521a-4885-af35-0fc7605f5a4e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1254300, 22642, 288, 7, 48, "Input",ExpressionUUID->"48d92476-01b0-446c-9004-0954d7aab8eb"],
Cell[CellGroupData[{
Cell[1254613, 22653, 129, 3, 25, "Print",ExpressionUUID->"1ed36370-c086-47e9-a95b-79c1d5a5d770"],
Cell[1254745, 22658, 129, 3, 25, "Print",ExpressionUUID->"98d3fa0d-3941-41a7-bbd8-af42c8ca5b7e"]
}, Open  ]]
}, Open  ]],
Cell[1254901, 22665, 341, 7, 35, "Text",ExpressionUUID->"16bd9efa-f9c4-4bd3-9bbb-8ccb5867dca7"],
Cell[CellGroupData[{
Cell[1255267, 22676, 312, 8, 48, "Input",ExpressionUUID->"b7bef0fe-9f56-4908-bca9-7bc6b1142428"],
Cell[1255582, 22686, 430, 14, 35, "Output",ExpressionUUID->"aa5f5bd0-2cf6-47ba-ab4c-b1d98803a412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256049, 22705, 161, 3, 45, "Subsubsection",ExpressionUUID->"c234b2bb-f980-48bb-85c8-066d1d1905f0"],
Cell[1256213, 22710, 431, 8, 58, "Text",ExpressionUUID->"274a7b14-69a6-47c0-a4e4-01a5e22ba284"],
Cell[CellGroupData[{
Cell[1256669, 22722, 273, 7, 48, "Input",ExpressionUUID->"2101f34b-1487-41a2-bfda-904c0c9ec631"],
Cell[1256945, 22731, 190, 5, 35, "Output",ExpressionUUID->"29240426-8217-4b88-990e-26318f47c8a6"]
}, Open  ]],
Cell[1257150, 22739, 266, 6, 35, "Text",ExpressionUUID->"5aa60f3b-4a4f-4e2d-9bd8-f8f13f5f926f"],
Cell[1257419, 22747, 287, 8, 31, "Input",ExpressionUUID->"1c2ee1d2-9d8d-4556-bd4a-c8315531b7f3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1257755, 22761, 220, 4, 49, "Subchapter",ExpressionUUID->"cff3d9b1-5588-46e2-9169-082c6290c94b"],
Cell[1257978, 22767, 479, 9, 58, "Text",ExpressionUUID->"e91b6bb2-6936-46df-a311-9193e61a2fb9"],
Cell[CellGroupData[{
Cell[1258482, 22780, 279, 7, 48, "Input",ExpressionUUID->"2d7c1a93-c6f4-4055-9c2b-94d09d840a0c"],
Cell[1258764, 22789, 370, 12, 35, "Output",ExpressionUUID->"c4477d0f-8cde-4419-a94e-2b4883b9ebcc"]
}, Open  ]],
Cell[1259149, 22804, 606, 11, 58, "Text",ExpressionUUID->"6f7f03ac-d265-4170-a6c8-b4f651b4a11c"],
Cell[CellGroupData[{
Cell[1259780, 22819, 237, 6, 31, "Input",ExpressionUUID->"baa969ef-9583-455a-88ed-b11da537f2e8"],
Cell[1260020, 22827, 188, 5, 35, "Output",ExpressionUUID->"d55b4e02-d1b6-4e11-8020-20c5f13d20bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1260245, 22837, 233, 6, 31, "Input",ExpressionUUID->"44242665-9f77-40ea-b00c-05c1ef61f01f"],
Cell[1260481, 22845, 190, 5, 35, "Output",ExpressionUUID->"267b648b-a796-4354-bf54-d9beec734191"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1260708, 22855, 231, 6, 31, "Input",ExpressionUUID->"230e160f-f318-42ce-ab97-a8262f64a8f6"],
Cell[1260942, 22863, 185, 5, 35, "Output",ExpressionUUID->"b14726d5-305d-466d-92e8-385c217a83a0"]
}, Open  ]],
Cell[1261142, 22871, 275, 6, 35, "Text",ExpressionUUID->"629ca174-a00f-479f-b8f0-8cda062c70de"],
Cell[CellGroupData[{
Cell[1261442, 22881, 289, 8, 31, "Input",ExpressionUUID->"a14e5ebb-5ad6-418e-94b4-514f659bf0e4"],
Cell[1261734, 22891, 185, 5, 35, "Output",ExpressionUUID->"ff0303aa-d95c-40a1-83a7-989f535fb546"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1261956, 22901, 289, 8, 31, "Input",ExpressionUUID->"768f1938-7b87-40b7-91f9-b718921e01b2"],
Cell[1262248, 22911, 189, 5, 35, "Output",ExpressionUUID->"c78c3562-57b1-40d7-9b8e-3f96e24787ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262474, 22921, 218, 4, 45, "Subsubsection",ExpressionUUID->"b1af573d-9ed6-4e60-83fe-4e3521ad6f9c"],
Cell[1262695, 22927, 234, 6, 35, "Text",ExpressionUUID->"1295e917-b511-4f18-ab93-0624e35fc878"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262966, 22938, 163, 3, 45, "Subsubsection",ExpressionUUID->"0b1220f3-3558-454f-8eaf-79149c90bbb1"],
Cell[1263132, 22943, 305, 6, 35, "Text",ExpressionUUID->"c0af687f-eafc-40c5-b17c-c485650afbdb"],
Cell[CellGroupData[{
Cell[1263462, 22953, 237, 6, 48, "Input",ExpressionUUID->"222f8cd9-a370-41d1-a023-5a750ac0396d"],
Cell[1263702, 22961, 292, 6, 35, "Output",ExpressionUUID->"ee3d1932-bd15-4ebf-832a-83f32cc5bb8a"]
}, Open  ]],
Cell[1264009, 22970, 232, 6, 35, "Text",ExpressionUUID->"1ef1e1bd-508e-46f3-8635-07a371128864"],
Cell[CellGroupData[{
Cell[1264266, 22980, 237, 6, 48, "Input",ExpressionUUID->"69cc9726-4b79-44f0-ac70-b732bead50d2"],
Cell[1264506, 22988, 536, 10, 35, "Output",ExpressionUUID->"d97cf995-a724-4ab8-a358-97054f5c8f13"]
}, Open  ]],
Cell[1265057, 23001, 769, 19, 78, "Text",ExpressionUUID->"e9038292-c2db-43f5-ad18-a28892ca1228"],
Cell[CellGroupData[{
Cell[1265851, 23024, 489, 13, 48, "Input",ExpressionUUID->"d17f9991-77c7-401d-8c2c-ae21ee1be148"],
Cell[1266343, 23039, 687, 13, 35, "Output",ExpressionUUID->"a7ec9772-a7e2-4227-afef-ee6bd3cb67fd"]
}, Open  ]],
Cell[1267045, 23055, 340, 7, 35, "Text",ExpressionUUID->"d88bb3f0-259c-4c7e-94fb-160edb042d37"],
Cell[1267388, 23064, 818, 17, 35, "Output",ExpressionUUID->"c27a6120-f198-4c4b-8502-8c64baf6b790"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1268255, 23087, 160, 3, 49, "Subchapter",ExpressionUUID->"167cc714-c986-4695-ba38-51558cd3134d"],
Cell[1268418, 23092, 504, 13, 35, "Text",ExpressionUUID->"a01c49bb-a85c-4556-98f4-568efe205b45"],
Cell[CellGroupData[{
Cell[1268947, 23109, 187, 4, 31, "Input",ExpressionUUID->"05aecb4d-2e5d-43dc-84b0-939bbd0befdd"],
Cell[1269137, 23115, 132, 3, 35, "Output",ExpressionUUID->"ee67a98e-edaa-41ae-abde-28ca27d0b84e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1269306, 23123, 155, 3, 31, "Input",ExpressionUUID->"717f4924-bd60-48c5-bbf8-f7f4007dc687"],
Cell[1269464, 23128, 130, 3, 35, "Output",ExpressionUUID->"62a36edb-78f0-4f33-9cac-fb5cd3cb3394"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1269631, 23136, 242, 6, 48, "Input",ExpressionUUID->"6fd27062-6415-4ee1-9053-b0ca562fb805"],
Cell[1269876, 23144, 341, 12, 35, "Output",ExpressionUUID->"44d71375-c3e1-4d6f-9ddd-5b2dc69fc455"]
}, Open  ]],
Cell[1270232, 23159, 879, 21, 104, "Text",ExpressionUUID->"5530db1d-d633-4293-964e-ce457c2cf4d9"],
Cell[1271114, 23182, 184, 3, 35, "Text",ExpressionUUID->"8a2a19b8-a77c-4629-996f-fca94f960a6c"],
Cell[CellGroupData[{
Cell[1271323, 23189, 217, 5, 48, "Input",ExpressionUUID->"42107c30-4e91-45b4-a2b3-3484d2f7ace5"],
Cell[1271543, 23196, 148, 3, 35, "Output",ExpressionUUID->"7284ec45-fa84-4132-b3ad-4eb641f3f050"]
}, Open  ]],
Cell[1271706, 23202, 181, 3, 35, "Text",ExpressionUUID->"4b9c9f8c-8e75-4e1d-abc5-4fba62bc6624"],
Cell[CellGroupData[{
Cell[1271912, 23209, 129, 3, 31, "Input",ExpressionUUID->"54bcdf7a-6066-4fd7-bf03-828db480cedf"],
Cell[1272044, 23214, 148, 3, 35, "Output",ExpressionUUID->"bc4f8d63-67fd-4e87-b46c-b897d77f2331"]
}, Open  ]],
Cell[1272207, 23220, 249, 6, 35, "Text",ExpressionUUID->"6a358fa8-df5d-4e5b-90e2-990e0006c815"],
Cell[1272459, 23228, 220, 5, 48, "Input",ExpressionUUID->"4da0448c-0936-4d0f-add6-dfcf8e48732e"],
Cell[1272682, 23235, 253, 6, 35, "Text",ExpressionUUID->"94b3e78e-e7dd-4315-a446-18191a0f9aa8"],
Cell[CellGroupData[{
Cell[1272960, 23245, 129, 3, 31, "Input",ExpressionUUID->"88dc8c80-a0db-49b5-be36-4f473e02e225"],
Cell[1273092, 23250, 148, 3, 35, "Output",ExpressionUUID->"c122a0da-2bda-4aa8-b061-4cfb3fb7a60d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273277, 23258, 129, 3, 31, "Input",ExpressionUUID->"c28149d7-0f1c-44d3-a84f-b743bb829fb1"],
Cell[1273409, 23263, 149, 3, 35, "Output",ExpressionUUID->"8b05606c-9727-4dbe-b30c-7d40c366a7cf"]
}, Open  ]],
Cell[1273573, 23269, 473, 10, 35, "Text",ExpressionUUID->"c7f361e7-4970-447d-8b08-9e5d79525969"],
Cell[1274049, 23281, 226, 5, 35, "Text",ExpressionUUID->"5951e867-e3e5-439b-928c-53bef28899db"],
Cell[CellGroupData[{
Cell[1274300, 23290, 244, 6, 48, "Input",ExpressionUUID->"eafa82ee-3cf3-48b6-8e2a-7880e634dd89"],
Cell[1274547, 23298, 341, 12, 35, "Output",ExpressionUUID->"a1e8e833-c769-46d6-a23d-c1363d1efabc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1274925, 23315, 219, 6, 48, "Input",ExpressionUUID->"0db41ef8-d342-468b-90b0-b66ecea1dd3b"],
Cell[1275147, 23323, 348, 12, 35, "Output",ExpressionUUID->"29e94f6f-0774-4b1c-bbf3-b754f05e91df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1275532, 23340, 161, 3, 45, "Subsubsection",ExpressionUUID->"1c63e77b-0d3a-4786-86bd-08af598924b3"],
Cell[1275696, 23345, 233, 4, 35, "Text",ExpressionUUID->"40ae1ddd-a647-4b56-aec6-5998f9ab0baa"],
Cell[1275932, 23351, 290, 8, 31, "Input",ExpressionUUID->"427520fb-0cd2-4619-8243-2d2385bce114"],
Cell[1276225, 23361, 248, 4, 35, "Text",ExpressionUUID->"10437b50-ce82-47f8-a511-c50048ff7729"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1276522, 23371, 244, 4, 49, "Subchapter",ExpressionUUID->"c85b3e09-500a-4de0-afc1-b51de8965cbf"],
Cell[1276769, 23377, 607, 11, 58, "Text",ExpressionUUID->"0a29a853-d4ff-4cf1-a0d0-11f8a84b88fd"],
Cell[CellGroupData[{
Cell[1277401, 23392, 259, 7, 48, "Input",ExpressionUUID->"04f957b6-eabf-4ffe-82f4-2f697f3d835d"],
Cell[1277663, 23401, 376, 8, 35, "Output",ExpressionUUID->"720502c3-dea2-4020-8552-4091c9cd02b7"]
}, Open  ]],
Cell[1278054, 23412, 185, 3, 49, "Item",ExpressionUUID->"a279dc84-dc56-4043-8af2-9b436292e710"],
Cell[1278242, 23417, 459, 8, 51, "Text",ExpressionUUID->"1d6b520b-fc94-4439-8559-54ed41b49af6"],
Cell[CellGroupData[{
Cell[1278726, 23429, 1135, 25, 332, "Input",ExpressionUUID->"21e80e42-2e23-4c99-9280-681d94ddcc3f"],
Cell[1279864, 23456, 420, 9, 51, "Output",ExpressionUUID->"4a18ec70-b951-4631-9499-20e0c7e27dfe"]
}, Open  ]],
Cell[1280299, 23468, 478, 8, 51, "Text",ExpressionUUID->"dd77e3a9-2c1f-4d26-8bb1-1f6a0b2275f0"],
Cell[CellGroupData[{
Cell[1280802, 23480, 322, 6, 64, "Input",ExpressionUUID->"77267a07-1358-430a-89de-d7b5c15449f7"],
Cell[1281127, 23488, 218, 3, 51, "Output",ExpressionUUID->"fb361a4e-a780-479e-997d-a581cf90c50f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281382, 23496, 428, 10, 64, "Input",ExpressionUUID->"e0d14aa9-6696-4857-b61f-161603149aaf"],
Cell[1281813, 23508, 210, 3, 53, "Output",ExpressionUUID->"2c04aed4-1fd6-4ebd-848c-21549cd294a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1282060, 23516, 295, 6, 85, "Input",ExpressionUUID->"071a2db5-50f3-4a32-8e13-de2e0aecb310"],
Cell[1282358, 23524, 210, 3, 51, "Output",ExpressionUUID->"9b17e639-e1b7-4f51-98f4-774d1e52c512"]
}, Open  ]],
Cell[1282583, 23530, 233, 3, 51, "Text",ExpressionUUID->"932b836c-06fa-478b-a6f1-3f1bcdc16415"],
Cell[1282819, 23535, 249, 6, 35, "Text",ExpressionUUID->"5a12b46d-97aa-46a4-9da8-1b0082108675"],
Cell[CellGroupData[{
Cell[1283093, 23545, 291, 8, 48, "Input",ExpressionUUID->"7a387991-46d0-4f1f-af34-29ef6aa3c2ea"],
Cell[1283387, 23555, 250, 7, 35, "Output",ExpressionUUID->"3e46c59f-cb40-4c16-bb85-bcfebf098aee"]
}, Open  ]],
Cell[1283652, 23565, 194, 3, 35, "Text",ExpressionUUID->"6a187ef7-7e5d-4bb6-bc4f-07bd7f5a0a24"],
Cell[CellGroupData[{
Cell[1283871, 23572, 356, 11, 48, "Input",ExpressionUUID->"76116e84-4871-4eb4-ae5b-7dfdf8e7ebc9"],
Cell[1284230, 23585, 197, 5, 35, "Output",ExpressionUUID->"d8679cec-819f-46e8-8b18-d0fede790742"]
}, Open  ]],
Cell[1284442, 23593, 183, 3, 49, "Item",ExpressionUUID->"37b4e431-ebd8-4320-b434-f7bd195464f5"],
Cell[1284628, 23598, 275, 6, 51, "Text",ExpressionUUID->"9e1b5287-4d9e-4207-a741-8bcf632453b2"],
Cell[CellGroupData[{
Cell[1284928, 23608, 241, 5, 64, "Input",ExpressionUUID->"971bdf08-d519-40ff-a765-d34dabef9113"],
Cell[1285172, 23615, 294, 7, 51, "Output",ExpressionUUID->"97f9a38c-c815-48b2-b3b3-a639d5dac47d"]
}, Open  ]],
Cell[1285481, 23625, 586, 10, 74, "Text",ExpressionUUID->"c4c27d6a-bbd0-4511-9f2d-289f9b1465a7"],
Cell[1286070, 23637, 271, 6, 64, "Input",ExpressionUUID->"f99b384c-01ba-458b-b9f4-2cb097d62c85"],
Cell[CellGroupData[{
Cell[1286366, 23647, 241, 5, 64, "Input",ExpressionUUID->"b3b7d5a4-c81f-4153-8f22-aa88c9275aa2"],
Cell[1286610, 23654, 18054, 463, 51, "Output",ExpressionUUID->"aec3ea9e-4196-410e-8f9c-bfef6345fe49"]
}, Open  ]],
Cell[1304679, 24120, 305, 6, 51, "Text",ExpressionUUID->"b6259d8b-25e4-4506-909d-f88eaf293030"],
Cell[CellGroupData[{
Cell[1305009, 24130, 249, 5, 64, "Input",ExpressionUUID->"426bddee-8305-4802-b786-83d367ed62c6"],
Cell[1305261, 24137, 18140, 465, 51, "Output",ExpressionUUID->"e5adeded-c7f2-4db0-8a6f-360654e1ee18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1323438, 24607, 234, 4, 45, "Subsubsection",ExpressionUUID->"92c069dd-6f16-4091-a713-27ab870140c2"],
Cell[1323675, 24613, 163, 3, 35, "Text",ExpressionUUID->"aa806fa5-02b1-493f-9fa2-fa74ee811957"],
Cell[CellGroupData[{
Cell[1323863, 24620, 286, 6, 31, "Input",ExpressionUUID->"fbd29d12-720b-43c3-86af-a7572cab107b"],
Cell[1324152, 24628, 231, 6, 53, "Output",ExpressionUUID->"bdc89a90-833d-4523-869a-60f44163877a"]
}, Open  ]],
Cell[1324398, 24637, 217, 5, 35, "Text",ExpressionUUID->"582e3ce0-2960-4daf-a143-2e013fe494f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1324652, 24647, 188, 3, 45, "Subsubsection",ExpressionUUID->"0f0cad0a-2549-47aa-a53a-9d1e08321e9d"],
Cell[1324843, 24652, 188, 3, 35, "Text",ExpressionUUID->"10b12d32-8dd5-478a-98c6-7130c770eb79"],
Cell[CellGroupData[{
Cell[1325056, 24659, 708, 23, 31, "Input",ExpressionUUID->"882e01ab-dd04-4d3f-ae5b-2f4942587b8e"],
Cell[1325767, 24684, 756, 25, 35, "Output",ExpressionUUID->"60c28eb2-1e14-494a-9156-90c41976741e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1326572, 24715, 238, 4, 45, "Subsubsection",ExpressionUUID->"5a3324c2-51f4-4103-a3d0-942526be589b"],
Cell[1326813, 24721, 160, 3, 35, "Text",ExpressionUUID->"11569a30-6c1b-4aab-b02a-cd28270f0fef"],
Cell[1326976, 24726, 339, 10, 55, "Input",ExpressionUUID->"f3f4e4e5-36dd-466e-88ec-4ad6800de539"],
Cell[1327318, 24738, 180, 3, 35, "Text",ExpressionUUID->"4ad8d306-ec71-4ed8-9604-70a000746897"],
Cell[CellGroupData[{
Cell[1327523, 24745, 404, 13, 31, "Input",ExpressionUUID->"ccdc2911-6bb6-4076-9835-33bc55238ad0"],
Cell[1327930, 24760, 450, 15, 35, "Output",ExpressionUUID->"ab4d9c5d-493b-431e-b40f-51fca5ee581b"]
}, Open  ]],
Cell[1328395, 24778, 374, 7, 35, "Text",ExpressionUUID->"af91ac51-0a38-44c1-b852-c2b395ded0d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1328806, 24790, 163, 3, 45, "Subsubsection",ExpressionUUID->"45e27c31-81cc-4ff6-a22f-c61bda04f06f"],
Cell[1328972, 24795, 221, 5, 35, "Text",ExpressionUUID->"b68d02a1-b808-4d7b-b73a-546e46f1a64d"],
Cell[CellGroupData[{
Cell[1329218, 24804, 252, 6, 48, "Input",ExpressionUUID->"6002641d-e3cf-4f8a-ade0-3a76d0ba5628"],
Cell[1329473, 24812, 359, 13, 86, "Output",ExpressionUUID->"6baca84f-7240-4506-a18e-b3332c3dce83"]
}, Open  ]],
Cell[1329847, 24828, 195, 3, 35, "Text",ExpressionUUID->"80182768-a3d9-4206-aa9b-266ec8802bc9"],
Cell[1330045, 24833, 2279, 89, 158, "Output",ExpressionUUID->"a8ae4c1b-e5ba-44c2-9f99-52b481243029"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1332373, 24928, 315, 5, 49, "Subchapter",ExpressionUUID->"1e540197-0273-4e1f-85b3-3a3f18d2e078"],
Cell[1332691, 24935, 1429, 25, 173, "Text",ExpressionUUID->"4dc29d32-95a4-4d3e-9c39-c427f415e279"],
Cell[1334123, 24962, 230, 5, 35, "Text",ExpressionUUID->"d8698a1a-7199-4d28-a936-67005e7b98a7"],
Cell[CellGroupData[{
Cell[1334378, 24971, 291, 7, 48, "Input",ExpressionUUID->"6b72616d-cdd1-4fac-b073-2cad6c5380cc"],
Cell[1334672, 24980, 171, 4, 35, "Output",ExpressionUUID->"0ce2eafc-0057-4968-8625-004917a0b7e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334880, 24989, 297, 7, 48, "Input",ExpressionUUID->"c57a0b7d-0845-4881-9911-966d8720b8c1"],
Cell[1335180, 24998, 147, 4, 35, "Output",ExpressionUUID->"9fea5960-75a9-48cf-b55b-2a05b1fa1352"]
}, Open  ]],
Cell[1335342, 25005, 384, 7, 58, "Text",ExpressionUUID->"9d6601a5-e924-4f12-ab49-9573c4b0fd0b"],
Cell[CellGroupData[{
Cell[1335751, 25016, 325, 9, 48, "Input",ExpressionUUID->"6f92241c-0aa5-458b-9b92-2532c25d2e96"],
Cell[1336079, 25027, 133, 3, 35, "Output",ExpressionUUID->"2d0c857c-d12b-4bbf-babb-75f1a0bb6a1f"]
}, Open  ]],
Cell[1336227, 25033, 479, 9, 58, "Text",ExpressionUUID->"4bf493dc-c088-4f2a-a8ad-195c3ffbc343"],
Cell[CellGroupData[{
Cell[1336731, 25046, 179, 4, 48, "Input",ExpressionUUID->"e697ba9e-6e24-4832-acd7-fdadbad3ef8e"],
Cell[1336913, 25052, 133, 3, 35, "Output",ExpressionUUID->"3d53845e-1800-4868-9085-b8e24d39c5f8"]
}, Open  ]],
Cell[1337061, 25058, 217, 4, 35, "Text",ExpressionUUID->"51530827-6324-467b-9946-02fc6d402ab1"],
Cell[CellGroupData[{
Cell[1337303, 25066, 116, 1, 48, "Input",ExpressionUUID->"fd878d0c-08a0-4de0-850f-600050ffdcdc"],
Cell[1337422, 25069, 279, 10, 35, "Output",ExpressionUUID->"5650e723-5e13-4e7f-8ef5-8cbb59263b73"]
}, Open  ]],
Cell[1337716, 25082, 334, 7, 35, "Text",ExpressionUUID->"2905e961-4e12-425f-afbe-8a93ba85a71d"],
Cell[CellGroupData[{
Cell[1338075, 25093, 687, 21, 48, "Input",ExpressionUUID->"65fff80d-2148-44dd-8721-a1be6626edbc"],
Cell[1338765, 25116, 273, 9, 35, "Output",ExpressionUUID->"3bd199fe-293e-40e5-b8cb-3082c41bab53"]
}, Open  ]],
Cell[1339053, 25128, 782, 14, 81, "Text",ExpressionUUID->"d6aee576-88f3-45b5-bb80-bde7be4bde99"],
Cell[CellGroupData[{
Cell[1339860, 25146, 318, 8, 31, "Input",ExpressionUUID->"fa1916c4-21fc-4f2c-83c5-801680935d11"],
Cell[1340181, 25156, 228, 6, 35, "Output",ExpressionUUID->"911cfc4a-7882-42f7-ae94-c1f05a9c89d8"]
}, Open  ]],
Cell[1340424, 25165, 448, 9, 35, "Text",ExpressionUUID->"ceb2d46e-2fc5-46a3-a056-ead45735db1a"],
Cell[CellGroupData[{
Cell[1340897, 25178, 327, 9, 48, "Input",ExpressionUUID->"119f5c75-6ff6-48f0-bb26-ea34b5f7d540"],
Cell[1341227, 25189, 565, 18, 35, "Output",ExpressionUUID->"7b89d69b-879c-4890-aca4-998352fc598a"]
}, Open  ]],
Cell[1341807, 25210, 236, 6, 35, "Text",ExpressionUUID->"4ae8e4d4-ca1e-4031-8793-35bfbfff64bd"],
Cell[CellGroupData[{
Cell[1342068, 25220, 288, 7, 31, "Input",ExpressionUUID->"1983b39c-6700-42a2-b13a-692989c41c12"],
Cell[1342359, 25229, 130, 3, 35, "Output",ExpressionUUID->"210aa66f-4732-4baf-8c8d-8b4bf0e52783"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342526, 25237, 242, 5, 31, "Input",ExpressionUUID->"1f969b35-53b4-4640-a033-19472a3b8c36"],
Cell[1342771, 25244, 130, 3, 35, "Output",ExpressionUUID->"8493a1c5-3b11-4c15-a3cf-34827847f925"]
}, Open  ]],
Cell[1342916, 25250, 401, 8, 35, "Text",ExpressionUUID->"afd5f6be-bab9-480a-a33a-2242c3adc96c"],
Cell[CellGroupData[{
Cell[1343342, 25262, 541, 17, 48, "Input",ExpressionUUID->"c8f2af80-4258-4896-8a5a-78b94fc11d62"],
Cell[1343886, 25281, 275, 9, 35, "Output",ExpressionUUID->"b5e03bb3-f563-4cb4-b939-24949362ffb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1344198, 25295, 559, 18, 31, "Input",ExpressionUUID->"8ad6fc64-6ac9-47b5-aac6-7d1a7d9d2e86"],
Cell[1344760, 25315, 329, 9, 35, "Output",ExpressionUUID->"06d2b2a3-58c7-4f3f-8c1a-5112de482356"]
}, Open  ]],
Cell[1345104, 25327, 545, 11, 58, "Text",ExpressionUUID->"a9d41897-0132-430f-9d1b-6411b913ef2c"],
Cell[1345652, 25340, 422, 8, 35, "Text",ExpressionUUID->"fdbcb5fd-223f-4947-a496-eb9c21244f63"],
Cell[CellGroupData[{
Cell[1346099, 25352, 618, 20, 31, "Input",ExpressionUUID->"b05bb03f-0c42-4bed-81ea-43f566b143e7"],
Cell[1346720, 25374, 392, 13, 35, "Output",ExpressionUUID->"666b9950-157b-49ba-a508-171141a69cb2"]
}, Open  ]],
Cell[1347127, 25390, 295, 8, 35, "Text",ExpressionUUID->"dab5bc8d-c0d8-4177-91f9-c70741fa747d"],
Cell[CellGroupData[{
Cell[1347447, 25402, 429, 12, 48, "Input",ExpressionUUID->"3430ecb2-da0b-4c94-9043-95588f0dbfac"],
Cell[1347879, 25416, 235, 7, 35, "Output",ExpressionUUID->"dcfaa38d-f2dc-462d-8a82-61bb8568dbbc"]
}, Open  ]],
Cell[1348129, 25426, 257, 6, 35, "Text",ExpressionUUID->"932ec9f7-35ab-447f-ab71-89e0aa67ee21"],
Cell[CellGroupData[{
Cell[1348411, 25436, 401, 11, 48, "Input",ExpressionUUID->"df8aeda2-6399-48b3-97a7-8954e24c8af4"],
Cell[1348815, 25449, 257, 7, 35, "Output",ExpressionUUID->"8bfdc327-0f66-4ee3-ad8e-4468626915e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1349109, 25461, 260, 4, 45, "Subsubsection",ExpressionUUID->"1fe0f3b6-76d8-4059-b5ca-7287aac1cf7f"],
Cell[1349372, 25467, 360, 7, 35, "Text",ExpressionUUID->"5e4bdbf0-94a6-4f9b-a21b-74c2b1ee43e1"],
Cell[CellGroupData[{
Cell[1349757, 25478, 331, 7, 31, "Input",ExpressionUUID->"e4c690a1-1637-4807-bdfd-bc5443694449"],
Cell[1350091, 25487, 357, 8, 35, "Output",ExpressionUUID->"287c9439-e38b-4cdf-9b33-a3e7ae0ab634"]
}, Open  ]],
Cell[1350463, 25498, 150, 3, 35, "Text",ExpressionUUID->"177bc5bc-894c-4f77-9b9c-bc3dad9f9df8"],
Cell[CellGroupData[{
Cell[1350638, 25505, 237, 6, 31, "Input",ExpressionUUID->"3ca43335-611e-4b5e-9787-00801f3e4bec"],
Cell[1350878, 25513, 351, 9, 35, "Output",ExpressionUUID->"3f8c3cf3-ec08-4129-b85a-ba6b31f9e888"]
}, Open  ]],
Cell[1351244, 25525, 160, 3, 35, "Text",ExpressionUUID->"e3a2b013-f54b-4450-905a-cb16545f362f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351441, 25533, 165, 3, 45, "Subsubsection",ExpressionUUID->"3665ead2-bf93-49d0-98b3-bd84b8765ac7"],
Cell[1351609, 25538, 197, 3, 35, "Text",ExpressionUUID->"1ed16df6-2e26-49e6-bec6-161d028a4943"],
Cell[CellGroupData[{
Cell[1351831, 25545, 331, 7, 31, "Input",ExpressionUUID->"03be73b7-b7a5-478f-a6b8-3cbab2924278"],
Cell[1352165, 25554, 357, 8, 35, "Output",ExpressionUUID->"313f951b-bb6c-4b97-9bee-3f90d549cf78"]
}, Open  ]],
Cell[1352537, 25565, 190, 3, 35, "Text",ExpressionUUID->"7c802521-c2aa-423c-9a86-2f16d04ae3e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1352764, 25573, 212, 4, 45, "Subsubsection",ExpressionUUID->"ae9e421d-e9ca-47b1-a767-7f76c273530d"],
Cell[1352979, 25579, 414, 8, 35, "Text",ExpressionUUID->"a2f1598a-244a-46b1-8f81-9df0ba2f49a4"],
Cell[1353396, 25589, 326, 7, 35, "Text",ExpressionUUID->"a3ff89dd-af32-4f51-9246-2ec50cc95516"],
Cell[CellGroupData[{
Cell[1353747, 25600, 157, 3, 48, "Input",ExpressionUUID->"6dbcabc0-ad93-4572-b3cb-c45e1b400f1c"],
Cell[1353907, 25605, 1528, 43, 35, "Output",ExpressionUUID->"22226cc2-c5be-49ac-8c20-4546d34072b6"]
}, Open  ]],
Cell[1355450, 25651, 228, 6, 35, "Text",ExpressionUUID->"59ed2b83-b859-4001-8772-8827ef25fa22"],
Cell[CellGroupData[{
Cell[1355703, 25661, 237, 6, 48, "Input",ExpressionUUID->"ac38869e-3c60-4561-a1ca-ccf83f5469c5"],
Cell[1355943, 25669, 1701, 45, 35, "Output",ExpressionUUID->"208a363e-919d-457f-ac85-d3af270eee80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1357681, 25719, 237, 6, 48, "Input",ExpressionUUID->"b9b6294f-80a7-447c-bffd-cf9732f5333b"],
Cell[1357921, 25727, 1735, 45, 35, "Output",ExpressionUUID->"5c5736e3-6128-49cf-a180-0ffe6b6a1cfe"]
}, Open  ]],
Cell[1359671, 25775, 363, 8, 58, "Text",ExpressionUUID->"db33da48-6ef8-45e1-b571-475b38f8e820"],
Cell[1360037, 25785, 16884, 442, 31, "Input",ExpressionUUID->"3a349730-9e5b-4122-a8a5-0543d20fc0a8"],
Cell[1376924, 26229, 575, 10, 58, "Text",ExpressionUUID->"55376302-c5b9-4f8a-b403-df6798eb6536"],
Cell[CellGroupData[{
Cell[1377524, 26243, 290, 8, 48, "Input",ExpressionUUID->"cc884feb-955a-40f2-9903-6a8a7b858a3e"],
Cell[1377817, 26253, 347, 11, 35, "Output",ExpressionUUID->"5c16c554-6bb2-4f92-9bce-5655138761eb"]
}, Open  ]],
Cell[1378179, 26267, 305, 6, 35, "Text",ExpressionUUID->"1e7161cf-5557-49ae-91c2-4981cad4678c"],
Cell[1378487, 26275, 17633, 453, 31, "Input",ExpressionUUID->"42a0b3d6-e7d3-4970-95b9-13eb37fd8f28"],
Cell[1396123, 26730, 240, 6, 35, "Text",ExpressionUUID->"96690db5-59ca-4dee-9b35-c1baedbeebad"],
Cell[CellGroupData[{
Cell[1396388, 26740, 229, 5, 48, "Input",ExpressionUUID->"9279bdf3-3cf0-4ec6-82f7-acd13d77a489"],
Cell[1396620, 26747, 268, 8, 35, "Output",ExpressionUUID->"91edf173-400c-433f-b8b4-f7ed878ec220"]
}, Open  ]],
Cell[1396903, 26758, 612, 11, 58, "Text",ExpressionUUID->"fac41bcb-058f-44d1-aa95-049340e0c322"],
Cell[1397518, 26771, 271, 6, 35, "Text",ExpressionUUID->"cba376c8-751b-4c49-9491-4910bc3f50ac"],
Cell[CellGroupData[{
Cell[1397814, 26781, 281, 8, 48, "Input",ExpressionUUID->"5d21c867-cb15-4bb9-bdbf-ee7d196b3674"],
Cell[1398098, 26791, 490, 14, 147, "Output",ExpressionUUID->"429a578c-0649-422f-bc64-b5304a8ea5a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1398625, 26810, 455, 12, 48, "Input",ExpressionUUID->"1589913a-c0f6-4f2e-a978-4c800acc01cb"],
Cell[1399083, 26824, 562, 15, 376, "Output",ExpressionUUID->"b952dff6-6263-401c-8a24-ae36fb291b6b"]
}, Open  ]],
Cell[1399660, 26842, 366, 7, 58, "Text",ExpressionUUID->"2aa276f6-82d8-4dc5-8a1d-671b34051f5f"],
Cell[CellGroupData[{
Cell[1400051, 26853, 344, 9, 48, "Input",ExpressionUUID->"cdfbca05-659b-4f9e-93bf-ad3f36595b2c"],
Cell[1400398, 26864, 14434, 380, 35, "Output",ExpressionUUID->"2090d15c-a700-4eb8-b00b-3299e8230d7d"]
}, Open  ]],
Cell[1414847, 27247, 375, 8, 35, "Text",ExpressionUUID->"09121a2a-f894-4926-b9a1-98ad4b0c2045"],
Cell[CellGroupData[{
Cell[1415247, 27259, 242, 6, 48, "Input",ExpressionUUID->"63235a63-5338-40dd-9161-5748afc93f70"],
Cell[1415492, 27267, 830, 20, 35, "Output",ExpressionUUID->"cb0591f2-ac74-47e0-948f-52a902a860e2"]
}, Open  ]],
Cell[1416337, 27290, 261, 6, 35, "Text",ExpressionUUID->"d1bebe62-8c4e-4f78-a7fe-00379729fd8b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1416647, 27302, 157, 3, 49, "Subchapter",ExpressionUUID->"dc0b2ae0-9d13-4956-8635-599efa58c3be"],
Cell[1416807, 27307, 659, 16, 35, "Text",ExpressionUUID->"e84f7119-39fe-4a74-b0ec-72dfc66a19bc"],
Cell[CellGroupData[{
Cell[1417491, 27327, 294, 8, 31, "Input",ExpressionUUID->"91f0d566-0cc3-4288-b42b-7470d53dcdf3"],
Cell[1417788, 27337, 154, 3, 35, "Output",ExpressionUUID->"61b5c7ed-c3ff-4c6f-af58-fde26a7e379f"]
}, Open  ]],
Cell[1417957, 27343, 460, 8, 58, "Text",ExpressionUUID->"6018f94f-200a-4483-b550-4178b7940245"],
Cell[1418420, 27353, 349, 7, 35, "Text",ExpressionUUID->"566aed7a-b1fe-42db-b48e-580b5cc2b93e"],
Cell[1418772, 27362, 248, 7, 31, "Input",ExpressionUUID->"fac2fbd7-133f-46e8-b090-a86f41e6f8d0"],
Cell[1419023, 27371, 291, 4, 35, "Text",ExpressionUUID->"e0486eff-9989-481a-a2c4-33e851c08532"],
Cell[CellGroupData[{
Cell[1419339, 27379, 180, 4, 31, "Input",ExpressionUUID->"aaa8d707-bb0c-4068-bce0-700e6b1291a4"],
Cell[1419522, 27385, 128, 2, 35, "Output",ExpressionUUID->"0fe933b5-1fcf-4919-950d-abef1afff6d1"]
}, Open  ]],
Cell[1419665, 27390, 247, 4, 35, "Text",ExpressionUUID->"d2f0c722-ff77-4c44-858b-a0d5b682ca43"],
Cell[CellGroupData[{
Cell[1419937, 27398, 177, 4, 31, "Input",ExpressionUUID->"f3addb50-0518-4827-b83f-6a468ab53471"],
Cell[1420117, 27404, 131, 3, 35, "Output",ExpressionUUID->"c43dbb64-f9d8-4484-86bc-059af0ae3127"]
}, Open  ]],
Cell[1420263, 27410, 175, 3, 35, "Text",ExpressionUUID->"67cfe036-828a-4b92-b691-23dc46f4d03a"],
Cell[CellGroupData[{
Cell[1420463, 27417, 186, 4, 31, "Input",ExpressionUUID->"487f84e7-d292-40ab-a4da-354194c0994a"],
Cell[1420652, 27423, 131, 3, 35, "Output",ExpressionUUID->"9c74ee2b-02c1-4b1a-9e9a-ac996c47424b"]
}, Open  ]],
Cell[1420798, 27429, 229, 3, 35, "Text",ExpressionUUID->"1387e4aa-4409-4e9b-844c-9f3762215ade"],
Cell[CellGroupData[{
Cell[1421052, 27436, 181, 4, 31, "Input",ExpressionUUID->"d9368c95-d3c5-4d53-9e1d-429841d8f844"],
Cell[1421236, 27442, 133, 3, 35, "Output",ExpressionUUID->"108e8e28-dd42-4ca9-a644-49a120d80f8c"]
}, Open  ]],
Cell[1421384, 27448, 483, 9, 58, "Text",ExpressionUUID->"df890306-6e19-4220-b4b2-5c0656d30dec"],
Cell[1421870, 27459, 184, 4, 48, "Input",ExpressionUUID->"ec5c13ad-7afc-4e2d-b547-159f075ac308"],
Cell[CellGroupData[{
Cell[1422079, 27467, 369, 9, 96, "Input",ExpressionUUID->"2179a76b-34bd-45f2-b19b-decace13f6c0"],
Cell[1422451, 27478, 131, 3, 35, "Output",ExpressionUUID->"9be95fed-a9bc-463e-851d-ac178fa87131"],
Cell[1422585, 27483, 160, 4, 35, "Output",ExpressionUUID->"eff6ee50-fd26-4e3b-8e50-0998c6d0ce78"]
}, Open  ]],
Cell[1422760, 27490, 809, 14, 81, "Text",ExpressionUUID->"10b498f1-bc76-423d-a75a-0c628b8122b7"],
Cell[CellGroupData[{
Cell[1423594, 27508, 385, 10, 55, "Input",ExpressionUUID->"b3ae050d-6c1d-471e-a74f-7a03b1d52cf7"],
Cell[1423982, 27520, 130, 3, 35, "Output",ExpressionUUID->"62bc3904-6fd6-4836-96f9-40d0874cced1"]
}, Open  ]],
Cell[1424127, 27526, 236, 4, 35, "Text",ExpressionUUID->"5a57f6b6-a985-4cee-9f63-a5578335c492"],
Cell[CellGroupData[{
Cell[1424388, 27534, 537, 14, 96, "Input",ExpressionUUID->"5e48dd5a-e3dd-48ce-ab16-860f0512b0d3"],
Cell[1424928, 27550, 128, 2, 35, "Output",ExpressionUUID->"6f6340e8-853f-41de-9c61-b2188f552bbc"],
Cell[1425059, 27554, 131, 3, 35, "Output",ExpressionUUID->"821f6691-1172-4dcf-8a4c-c31b8b517ff4"]
}, Open  ]],
Cell[1425205, 27560, 305, 7, 35, "Text",ExpressionUUID->"f5d64d35-2e38-4803-81d2-b6b620826d2a"],
Cell[1425513, 27569, 390, 10, 50, "Input",ExpressionUUID->"609a395d-2799-4ed2-9b43-9d6284c81d63"],
Cell[CellGroupData[{
Cell[1425928, 27583, 210, 5, 48, "Input",ExpressionUUID->"5dd65638-1b50-4fe1-9525-de74f6bea79a"],
Cell[1426141, 27590, 167, 3, 35, "Output",ExpressionUUID->"1d9e2b57-0b18-4f2a-88a3-0944a4cc45ae"]
}, Open  ]],
Cell[1426323, 27596, 498, 9, 58, "Text",ExpressionUUID->"26ae349f-07dc-4dac-9cf9-c7361189a9e1"],
Cell[1426824, 27607, 188, 4, 48, "Input",ExpressionUUID->"ceed996c-9cf1-4b55-b999-357a6cf3d28c"],
Cell[CellGroupData[{
Cell[1427037, 27615, 435, 11, 48, "Input",ExpressionUUID->"18e8f76e-c5b6-4e37-a890-90f6fb2e6899"],
Cell[1427475, 27628, 9596, 257, 35, "Output",ExpressionUUID->"4e003068-1b19-4f1e-bdfb-57e3beeb8c02"]
}, Open  ]],
Cell[1437086, 27888, 266, 6, 35, "Text",ExpressionUUID->"2e7f2d91-b264-45ff-85b8-04e38ecc6e71"],
Cell[CellGroupData[{
Cell[1437377, 27898, 686, 19, 130, "Input",ExpressionUUID->"279c92e5-764d-4714-b73b-3fd9fc4845ad"],
Cell[1438066, 27919, 6486, 173, 35, "Output",ExpressionUUID->"051dbcaf-7ea0-4b55-b885-bc55e83634f9"]
}, Open  ]],
Cell[1444567, 28095, 817, 15, 104, "Text",ExpressionUUID->"1282b750-ed53-4a60-ba42-fd862278db1d"],
Cell[1445387, 28112, 461, 13, 73, "Input",ExpressionUUID->"59a7a23a-1a72-409b-9466-1a5958d1d9a4"],
Cell[CellGroupData[{
Cell[1445873, 28129, 190, 4, 31, "Input",ExpressionUUID->"780dd775-d615-4e51-b418-930ab74d7e8a"],
Cell[1446066, 28135, 145, 2, 35, "Output",ExpressionUUID->"0694c770-3459-41f1-8bd6-45e44e28e4da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1446248, 28142, 263, 6, 48, "Input",ExpressionUUID->"0b636db5-5cea-4630-b181-38e07397a197"],
Cell[1446514, 28150, 179, 3, 35, "Output",ExpressionUUID->"4db99f88-4722-4522-88d8-d5aef07e3578"]
}, Open  ]],
Cell[1446708, 28156, 187, 3, 35, "Text",ExpressionUUID->"edfe914d-0ad9-4ca7-ac56-91bbb28cead9"],
Cell[1446898, 28161, 194, 4, 48, "Input",ExpressionUUID->"01840949-02a3-4748-9816-ced2a570bf3c"],
Cell[1447095, 28167, 456, 13, 48, "Input",ExpressionUUID->"f36af262-c94c-49f8-a15a-fdb8aec4c3a1"],
Cell[CellGroupData[{
Cell[1447576, 28184, 118, 1, 31, "Input",ExpressionUUID->"d9362c23-cdb8-4dae-be58-2eb3f18d0a4f"],
Cell[1447697, 28187, 148, 3, 35, "Output",ExpressionUUID->"13407f01-5c7c-4360-b3c8-915896f05568"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1447882, 28195, 194, 4, 48, "Input",ExpressionUUID->"fcfe4c18-b057-47c3-b398-2d7fe2c82687"],
Cell[1448079, 28201, 155, 3, 35, "Output",ExpressionUUID->"fd45cda2-3b3d-40af-9d27-255fe63adef9"]
}, Open  ]],
Cell[1448249, 28207, 251, 6, 35, "Text",ExpressionUUID->"6d36d7ea-0d43-4022-bda7-e4783cfc36a4"],
Cell[CellGroupData[{
Cell[1448525, 28217, 162, 3, 45, "Subsubsection",ExpressionUUID->"dd2c8d54-ac34-45c9-94c2-ae1b777543aa"],
Cell[1448690, 28222, 159, 3, 35, "Text",ExpressionUUID->"b0c463eb-dda8-4d20-8353-b42edfca176c"],
Cell[CellGroupData[{
Cell[1448874, 28229, 263, 6, 48, "Input",ExpressionUUID->"049fa5fe-feda-4b45-83a5-5a5a47dbb571"],
Cell[1449140, 28237, 943, 19, 165, "Output",ExpressionUUID->"958f8c97-d43d-4d96-93fe-278c5341fbfa"]
}, Open  ]],
Cell[1450098, 28259, 381, 8, 35, "Text",ExpressionUUID->"1167adeb-5c74-4332-b821-67db3d85830b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1450516, 28272, 167, 3, 45, "Subsubsection",ExpressionUUID->"f3085bd5-aa2a-4d85-a186-b6e994652f82"],
Cell[1450686, 28277, 334, 7, 35, "Text",ExpressionUUID->"b5785f43-bf70-4184-89cb-29ab91611648"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1451069, 28290, 185, 2, 49, "Subchapter",ExpressionUUID->"bca519e6-ae5e-405d-bd1e-0c79de15472f"],
Cell[1451257, 28294, 286, 6, 35, "Text",ExpressionUUID->"7ee1d19c-9276-4e77-ab3a-ee5234374e64"],
Cell[1451546, 28302, 226, 6, 31, "Input",ExpressionUUID->"bd3a8605-bc30-41b4-b720-9c339a44b567"],
Cell[1451775, 28310, 198, 3, 35, "Text",ExpressionUUID->"1180e654-4498-400e-9c88-234c7a7138bd"],
Cell[CellGroupData[{
Cell[1451998, 28317, 244, 6, 31, "Input",ExpressionUUID->"3b1573e3-5792-44e9-8f08-0d2876aa6afa"],
Cell[1452245, 28325, 206, 4, 35, "Output",ExpressionUUID->"9f734871-5fbc-44f5-a3e8-c897ef77841b"]
}, Open  ]],
Cell[1452466, 28332, 231, 6, 35, "Text",ExpressionUUID->"24b6824a-c3fa-4f8b-a8fb-415b60f97d22"],
Cell[CellGroupData[{
Cell[1452722, 28342, 375, 11, 31, "Input",ExpressionUUID->"c287a1f7-0b39-4c5d-9461-7cd56941ec1f"],
Cell[1453100, 28355, 133, 3, 35, "Output",ExpressionUUID->"920f6f3f-808b-4fa9-81bf-8e69ac230efa"]
}, Open  ]],
Cell[1453248, 28361, 233, 6, 35, "Text",ExpressionUUID->"6480165a-730a-4092-960d-77d1dc7594f2"],
Cell[CellGroupData[{
Cell[1453506, 28371, 206, 5, 48, "Input",ExpressionUUID->"fcbc5ee8-21f8-42b4-9a47-92b1e39fa449"],
Cell[1453715, 28378, 131, 3, 35, "Output",ExpressionUUID->"c92d600e-0877-4149-af82-99fa3546fe28"]
}, Open  ]],
Cell[1453861, 28384, 264, 5, 35, "Text",ExpressionUUID->"b89dc471-d0ef-4980-b5f7-042d71c23da4"],
Cell[CellGroupData[{
Cell[1454150, 28393, 186, 4, 31, "Input",ExpressionUUID->"29f0e6c6-5d7d-4c43-9ca5-75dcf0e208b9"],
Cell[1454339, 28399, 131, 3, 35, "Output",ExpressionUUID->"067a455f-bb86-4a10-8e7e-862917e4a46c"]
}, Open  ]],
Cell[1454485, 28405, 235, 6, 35, "Text",ExpressionUUID->"164c61a3-d851-450b-9c74-0decd7122492"],
Cell[CellGroupData[{
Cell[1454745, 28415, 189, 4, 48, "Input",ExpressionUUID->"4d0e3d2d-1b8a-448d-b230-9d54e22c795c"],
Cell[1454937, 28421, 320, 11, 48, "Output",ExpressionUUID->"0a9e1f0c-4677-4f77-93cd-1b5c193328bd"]
}, Open  ]],
Cell[1455272, 28435, 183, 4, 48, "Input",ExpressionUUID->"b4720221-b26d-4fbf-b7b9-84f6b5502e80"],
Cell[CellGroupData[{
Cell[1455480, 28443, 243, 6, 48, "Input",ExpressionUUID->"d445cf04-8357-489d-aa8b-89be5ffe3915"],
Cell[1455726, 28451, 339, 11, 48, "Output",ExpressionUUID->"68f4910b-9fa4-4472-9b2e-b6ca2fd6682c"]
}, Open  ]],
Cell[1456080, 28465, 448, 10, 35, "Text",ExpressionUUID->"135a897f-adad-4cc5-87a6-439e64bdb6e3"],
Cell[1456531, 28477, 205, 5, 31, "Input",ExpressionUUID->"0007e34d-e2d9-40a7-bccf-8636818a668d"],
Cell[CellGroupData[{
Cell[1456761, 28486, 129, 3, 31, "Input",ExpressionUUID->"a8cffa43-d420-4ea9-b639-36b9cf992ff3"],
Cell[1456893, 28491, 130, 3, 35, "Output",ExpressionUUID->"c74bf07a-0c92-47d9-ba4c-859e3d2218ce"]
}, Open  ]],
Cell[1457038, 28497, 263, 7, 31, "Input",ExpressionUUID->"2a3bdf3b-d157-4295-85f8-a0801dc9b5c7"],
Cell[CellGroupData[{
Cell[1457326, 28508, 180, 4, 31, "Input",ExpressionUUID->"c04bc6d5-c9ed-44cb-9139-274527c9b440"],
Cell[1457509, 28514, 132, 3, 35, "Output",ExpressionUUID->"791ca02b-3440-4da9-b52c-ed4b189910c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1457678, 28522, 126, 2, 31, "Input",ExpressionUUID->"578b4f21-57dc-4f84-91b3-c3ce6d84bb33"],
Cell[1457807, 28526, 130, 3, 35, "Output",ExpressionUUID->"b5c04095-6385-4738-a1da-071d42d86e9b"]
}, Open  ]],
Cell[1457952, 28532, 388, 8, 35, "Text",ExpressionUUID->"e8060d6f-885b-4a8b-9f6b-900e0125d520"],
Cell[CellGroupData[{
Cell[1458365, 28544, 129, 3, 31, "Input",ExpressionUUID->"5445f389-ab85-4dd4-94ea-e27561133219"],
Cell[1458497, 28549, 130, 3, 35, "Output",ExpressionUUID->"f0f43fb2-0b3a-4dd0-ad70-a781f6917105"]
}, Open  ]],
Cell[1458642, 28555, 566, 14, 160, "Input",ExpressionUUID->"fd58e43c-4051-437c-8d3a-6cfe71a2628c"],
Cell[CellGroupData[{
Cell[1459233, 28573, 182, 4, 31, "Input",ExpressionUUID->"6faddc39-0bc5-415a-8c80-0cb80cb42a93"],
Cell[1459418, 28579, 130, 3, 35, "Output",ExpressionUUID->"39fd260c-b12c-49d0-b3d4-09c9a1798241"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1459585, 28587, 131, 3, 31, "Input",ExpressionUUID->"471cebc2-8f56-4073-94c0-98cb4b34b272"],
Cell[1459719, 28592, 132, 3, 35, "Output",ExpressionUUID->"bbe70193-c366-4d90-855d-4711e3423249"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1459888, 28600, 165, 3, 45, "Subsubsection",ExpressionUUID->"34772545-06a4-4f72-8154-c9ace34e6457"],
Cell[1460056, 28605, 318, 7, 35, "Text",ExpressionUUID->"46eb8914-8604-4af5-a7ca-07045ddeb4ec"],
Cell[CellGroupData[{
Cell[1460399, 28616, 186, 4, 48, "Input",ExpressionUUID->"df5ede7c-e3e2-40ff-8980-8bedc918f016"],
Cell[1460588, 28622, 243, 7, 35, "Output",ExpressionUUID->"9114d7fd-dff1-43b4-9407-640ee14fba28"]
}, Open  ]],
Cell[1460846, 28632, 368, 7, 35, "Text",ExpressionUUID->"117e9008-7446-4c4c-b31b-808eabd72370"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1461251, 28644, 162, 3, 45, "Subsubsection",ExpressionUUID->"b75ae179-ce15-4fb2-826a-6fd85043091a"],
Cell[1461416, 28649, 447, 9, 58, "Text",ExpressionUUID->"f89e27a4-5981-4d2a-bf5f-76e1afe844d1"],
Cell[1461866, 28660, 632, 19, 78, "Input",ExpressionUUID->"a055541c-4811-43b3-a3cd-e1c342f75b42"],
Cell[1462501, 28681, 439, 8, 58, "Text",ExpressionUUID->"809601c5-da82-4015-8264-e8817fa0af0b"],
Cell[CellGroupData[{
Cell[1462965, 28693, 180, 4, 31, "Input",ExpressionUUID->"e1bd549c-3166-4a27-b6eb-1c58649f908d"],
Cell[CellGroupData[{
Cell[1463170, 28701, 187, 4, 46, "Print",ExpressionUUID->"6d42e47f-8f7e-40f6-a822-8e507b11d23b",
 CellTags->"Info633727335583-9003794"],
Cell[1463360, 28707, 1241, 37, 97, "Print",ExpressionUUID->"eddcc596-802a-4290-852d-d5097b55aecd",
 CellTags->"Info633727335583-9003794"]
}, Open  ]]
}, Open  ]],
Cell[1464628, 28748, 183, 3, 35, "Text",ExpressionUUID->"12182435-f85a-4e77-8328-c65c97c0461d"],
Cell[1464814, 28753, 194, 4, 48, "Input",ExpressionUUID->"5f6287ca-7706-410d-9b92-e134fbf7d0d1"],
Cell[1465011, 28759, 295, 6, 35, "Text",ExpressionUUID->"85278b9b-a698-496c-9f63-0d00d43c8496"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1465355, 28771, 207, 4, 49, "Subchapter",ExpressionUUID->"20303379-c971-4296-bb03-80e0490feaf8"],
Cell[1465565, 28777, 545, 10, 58, "Text",ExpressionUUID->"f5f99285-a80c-40a8-b56d-ac346e7be35f"],
Cell[1466113, 28789, 207, 5, 48, "Input",ExpressionUUID->"85d857c0-018f-4fab-afd2-2d88dc10d4fa"],
Cell[CellGroupData[{
Cell[1466345, 28798, 287, 8, 48, "Input",ExpressionUUID->"ee5f9cef-408a-4644-8a3b-297a2220fff9"],
Cell[1466635, 28808, 431, 12, 35, "Output",ExpressionUUID->"2c74ec76-61ea-41fe-b7c5-728df8f87272"]
}, Open  ]],
Cell[1467081, 28823, 291, 7, 35, "Text",ExpressionUUID->"8111d641-67f3-4882-96a6-c62b6c43b75d"],
Cell[CellGroupData[{
Cell[1467397, 28834, 184, 4, 31, "Input",ExpressionUUID->"e39b33ef-7791-4686-9cb5-8f71ea934571"],
Cell[1467584, 28840, 428, 11, 35, "Output",ExpressionUUID->"c7506aa2-3af5-4068-acfd-5d69525baa89"]
}, Open  ]],
Cell[1468027, 28854, 569, 10, 58, "Text",ExpressionUUID->"da1e3b29-bb4d-4d7e-9d7d-92df2370dcca"],
Cell[CellGroupData[{
Cell[1468621, 28868, 301, 9, 48, "Input",ExpressionUUID->"3ebcc4a5-b86f-4057-aa21-95359101c632"],
Cell[1468925, 28879, 437, 14, 35, "Output",ExpressionUUID->"9e7d0484-a040-44de-a3a2-a3dbfb86b004"]
}, Open  ]],
Cell[1469377, 28896, 152, 3, 35, "Text",ExpressionUUID->"69f97d77-fee9-4d6c-88a5-a2e7f5857fab"],
Cell[CellGroupData[{
Cell[1469554, 28903, 335, 10, 48, "Input",ExpressionUUID->"b586a84f-e725-4450-927e-a359c29e67e5"],
Cell[1469892, 28915, 530, 17, 35, "Output",ExpressionUUID->"8ea4be18-8d38-49e3-86e9-b94e5260cf17"]
}, Open  ]],
Cell[1470437, 28935, 197, 3, 35, "Text",ExpressionUUID->"9ca75960-fb53-4179-a0ee-086861c0d4c7"],
Cell[CellGroupData[{
Cell[1470659, 28942, 312, 9, 48, "Input",ExpressionUUID->"01a11cd5-44c8-4dba-b188-d5d0948a76c9"],
Cell[1470974, 28953, 600, 19, 35, "Output",ExpressionUUID->"851b1a38-ece5-4f94-9ade-e4ca6edd4cf6"]
}, Open  ]],
Cell[1471589, 28975, 537, 10, 58, "Text",ExpressionUUID->"f3bf5293-1cb4-4ac7-b702-b53da4b33669"],
Cell[CellGroupData[{
Cell[1472151, 28989, 234, 6, 48, "Input",ExpressionUUID->"91b89ad7-7417-4858-886b-2e7bd2201e04"],
Cell[1472388, 28997, 382, 13, 35, "Output",ExpressionUUID->"4d9c1fce-53fc-4f75-8145-f8e331a61338"]
}, Open  ]],
Cell[1472785, 29013, 234, 6, 35, "Text",ExpressionUUID->"3b8f3f7a-b65d-4ee9-9dca-938a7812f5b5"],
Cell[CellGroupData[{
Cell[1473044, 29023, 249, 7, 31, "Input",ExpressionUUID->"e9601ad5-0fdb-42da-ac8b-4d3260931a36"],
Cell[1473296, 29032, 131, 3, 35, "Output",ExpressionUUID->"f31aef20-5743-44d1-bb54-71bb9d98ad1b"]
}, Open  ]],
Cell[1473442, 29038, 502, 9, 58, "Text",ExpressionUUID->"2ecc8ba3-9991-4366-90ac-a8dbe70d041c"],
Cell[CellGroupData[{
Cell[1473969, 29051, 333, 10, 31, "Input",ExpressionUUID->"dbdc0ca5-920a-4023-b31f-59224023b892"],
Cell[1474305, 29063, 132, 3, 35, "Output",ExpressionUUID->"b7aee98f-5e31-4d9e-92a1-de630bdfd030"]
}, Open  ]],
Cell[1474452, 29069, 332, 7, 35, "Text",ExpressionUUID->"de1031d7-8ab1-4713-886c-411c8ef384e7"],
Cell[CellGroupData[{
Cell[1474809, 29080, 287, 8, 48, "Input",ExpressionUUID->"70fe66c4-830a-4074-a5bd-be981c6a5d3c"],
Cell[1475099, 29090, 270, 7, 35, "Output",ExpressionUUID->"da242af2-30a6-4baf-9c47-c74d98be4fd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1475406, 29102, 282, 7, 48, "Input",ExpressionUUID->"d1753f84-77b6-4b7e-8938-fdf5cc0ed868"],
Cell[1475691, 29111, 453, 15, 35, "Output",ExpressionUUID->"ea2e8014-1255-4c5e-9912-942f4c3f2910"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1476181, 29131, 312, 9, 48, "Input",ExpressionUUID->"f6a79b45-9ebc-43fd-bc8a-e3558af067cf"],
Cell[1476496, 29142, 455, 15, 35, "Output",ExpressionUUID->"7de3823a-3cb6-48ec-b5ca-e682e8f6f016"]
}, Open  ]],
Cell[1476966, 29160, 287, 6, 35, "Text",ExpressionUUID->"f4e9922c-69a5-4a45-a784-6e304833a507"],
Cell[CellGroupData[{
Cell[1477278, 29170, 270, 8, 48, "Input",ExpressionUUID->"69d7d840-7266-4025-a517-495719e78a92"],
Cell[1477551, 29180, 436, 14, 35, "Output",ExpressionUUID->"bb34f531-4364-42e5-8341-bd35a84fdde6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1478024, 29199, 163, 3, 45, "Subsubsection",ExpressionUUID->"0b6cfb44-1d21-4b2d-9e05-52a2e257fc1a"],
Cell[1478190, 29204, 163, 3, 35, "Text",ExpressionUUID->"3c9f8c37-3e77-4e96-9373-0ca9d6aa409f"],
Cell[CellGroupData[{
Cell[1478378, 29211, 242, 6, 48, "Input",ExpressionUUID->"b6498119-fc9f-4daf-a25b-9edab60a3ce1"],
Cell[1478623, 29219, 1130, 31, 35, "Output",ExpressionUUID->"e917cb69-d8d2-4f36-beb8-814b7582629f"]
}, Open  ]],
Cell[1479768, 29253, 149, 3, 35, "Text",ExpressionUUID->"0d497077-43e0-4abf-a4fa-504bf0302dc5"],
Cell[1479920, 29258, 1130, 31, 35, "Output",ExpressionUUID->"fcd4f847-4bd7-4af8-9657-4e4d4c30aa0d"],
Cell[1481053, 29291, 158, 3, 35, "Text",ExpressionUUID->"fc50ee5b-14fa-4309-b821-ac03beac4924"],
Cell[1481214, 29296, 1132, 31, 35, "Output",ExpressionUUID->"05b0c66d-7bc3-4f4f-a60f-d26d06f84479"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1482383, 29332, 213, 4, 45, "Subsubsection",ExpressionUUID->"65f46e4e-f4ae-464c-8428-eb56cf6d98b6"],
Cell[1482599, 29338, 269, 6, 35, "Text",ExpressionUUID->"2401be26-284b-46b6-9a52-a1f2ea2886b1"],
Cell[CellGroupData[{
Cell[1482893, 29348, 331, 7, 31, "Input",ExpressionUUID->"4c6ff125-4715-4517-b475-87a142b4f071"],
Cell[1483227, 29357, 333, 8, 35, "Output",ExpressionUUID->"aa180df7-7516-4fba-b99d-43f05a7a9ede"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1483609, 29371, 163, 3, 45, "Subsubsection",ExpressionUUID->"7bd10cf7-4c12-454f-9908-efc1a087a527"],
Cell[1483775, 29376, 231, 6, 35, "Text",ExpressionUUID->"65d89bd9-4181-4417-8e01-70d70669b3f6"],
Cell[CellGroupData[{
Cell[1484031, 29386, 185, 4, 48, "Input",ExpressionUUID->"350bee2f-de9a-4521-97de-02001c4ef79f"],
Cell[1484219, 29392, 167, 5, 47, "Output",ExpressionUUID->"52a0a400-847a-4008-9052-c920a6f83614"]
}, Open  ]],
Cell[1484401, 29400, 287, 6, 35, "Text",ExpressionUUID->"184ae57f-70ce-4ef8-8fcb-88919502369a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1484737, 29412, 166, 3, 49, "Subchapter",ExpressionUUID->"82a18231-5e10-4e23-98df-dbc555c9564a"],
Cell[1484906, 29417, 392, 8, 35, "Text",ExpressionUUID->"14b22d34-d359-48e2-9d00-39c4aa101edb"],
Cell[CellGroupData[{
Cell[1485323, 29429, 206, 5, 48, "Input",ExpressionUUID->"66c6b6ce-345e-46ca-8b17-12856dd1c7d0"],
Cell[1485532, 29436, 239, 7, 35, "Output",ExpressionUUID->"213315a1-8c25-4737-b886-c0602767e579"]
}, Open  ]],
Cell[1485786, 29446, 212, 4, 35, "Text",ExpressionUUID->"0783e83c-0257-4919-a43d-672fbb2bca1c"],
Cell[CellGroupData[{
Cell[1486023, 29454, 254, 6, 48, "Input",ExpressionUUID->"024d09dc-7a80-42d4-ab18-cc9b4a23f55d"],
Cell[1486280, 29462, 240, 6, 35, "Output",ExpressionUUID->"8f66a951-e0a8-472f-b64d-16287bc3262e"]
}, Open  ]],
Cell[1486535, 29471, 228, 5, 35, "Text",ExpressionUUID->"9b1ff667-6011-4c53-82e5-fbc4f5b4c825"],
Cell[1486766, 29478, 418, 11, 48, "Input",ExpressionUUID->"2fc4ab7a-483b-476e-aa6d-6aed96c36aab"],
Cell[CellGroupData[{
Cell[1487209, 29493, 229, 5, 31, "Input",ExpressionUUID->"82b88b89-ef71-4e3c-b21f-de2c4bf805eb"],
Cell[1487441, 29500, 451, 14, 35, "Output",ExpressionUUID->"c2df0168-c6da-4382-a181-7a54aa868614"]
}, Open  ]],
Cell[1487907, 29517, 405, 8, 35, "Text",ExpressionUUID->"17a4014d-a4bc-4a5b-9078-43c7bb35634d"],
Cell[CellGroupData[{
Cell[1488337, 29529, 217, 5, 48, "Input",ExpressionUUID->"39fd5d72-dd48-46e7-ae62-014e2e78c0ae"],
Cell[1488557, 29536, 451, 14, 35, "Output",ExpressionUUID->"a6f144f4-0597-477a-a320-e6aa251f6418"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1489045, 29555, 547, 15, 69, "Input",ExpressionUUID->"8e42bbdb-0ec9-4d10-b78f-767c23e39565"],
Cell[1489595, 29572, 170, 3, 35, "Output",ExpressionUUID->"8aebed25-ec12-47e1-a4cb-423a3ccb1a15"]
}, Open  ]],
Cell[1489780, 29578, 321, 7, 35, "Text",ExpressionUUID->"8a82694e-4238-44d5-967c-a500d4a760ba"],
Cell[CellGroupData[{
Cell[1490126, 29589, 222, 5, 48, "Input",ExpressionUUID->"af461136-70a9-48a2-a1c9-26b3a83e21a9"],
Cell[1490351, 29596, 673, 21, 35, "Output",ExpressionUUID->"8c20d3b7-3b0b-45f7-a32d-f0c71e6f4169"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1491061, 29622, 163, 3, 45, "Subsubsection",ExpressionUUID->"a46b33c9-94a3-4d7a-9562-21e663e5fdb1"],
Cell[1491227, 29627, 1958, 52, 239, "Text",ExpressionUUID->"ab70dce0-d770-430c-b3f8-cba52c0bf352"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493222, 29684, 162, 3, 45, "Subsubsection",ExpressionUUID->"4b90b5a9-01c4-4164-8422-f0dcbe51bd8f"],
Cell[1493387, 29689, 1690, 43, 127, "Text",ExpressionUUID->"917a3081-decc-4157-8ccb-8a0004652c4f"],
Cell[CellGroupData[{
Cell[1495102, 29736, 198, 5, 48, "Input",ExpressionUUID->"ead04175-9cc1-4dc9-abd6-a548e09a5105"],
Cell[1495303, 29743, 746, 25, 35, "Output",ExpressionUUID->"619984b1-2187-4c64-ad99-33fc9f945d3c"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1496110, 29775, 169, 3, 49, "Subchapter",ExpressionUUID->"5f6e016f-cf44-424e-9696-f61d6b49bf80"],
Cell[1496282, 29780, 406, 8, 35, "Text",ExpressionUUID->"2cb49f17-1c06-44e9-86a4-82353430e9c9"],
Cell[CellGroupData[{
Cell[1496713, 29792, 299, 8, 48, "Input",ExpressionUUID->"473beef7-f722-43f5-88bf-ab33f9b2df6e"],
Cell[1497015, 29802, 575, 15, 35, "Output",ExpressionUUID->"fbabc5a9-8c18-4d62-9f1f-07cae6aea717"]
}, Open  ]],
Cell[1497605, 29820, 145, 3, 35, "Text",ExpressionUUID->"1960f8be-484d-456a-a886-43f3872fad55"],
Cell[CellGroupData[{
Cell[1497775, 29827, 324, 9, 48, "Input",ExpressionUUID->"f87ec558-e0d6-4e2c-b2f5-11296a84870d"],
Cell[1498102, 29838, 553, 15, 35, "Output",ExpressionUUID->"f4e2525d-5f85-4d6f-863c-907ec31933ca"]
}, Open  ]],
Cell[1498670, 29856, 382, 7, 35, "Text",ExpressionUUID->"399be33c-3069-4389-a600-4d7f3ee19f42"],
Cell[CellGroupData[{
Cell[1499077, 29867, 299, 8, 48, "Input",ExpressionUUID->"9a5bd017-8b8e-4669-a516-d7c8a8648a8f"],
Cell[1499379, 29877, 548, 15, 35, "Output",ExpressionUUID->"d60d1a3b-1e19-49ff-abe6-e1d9bf420299"]
}, Open  ]],
Cell[1499942, 29895, 1437, 29, 334, "Text",ExpressionUUID->"22c466a8-9fd1-4ad8-9662-56da8af118f7"],
Cell[1501382, 29926, 98993, 1629, 520, "Text",ExpressionUUID->"de6c869e-6ce6-414e-81a4-f6266f05b1c5"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1600424, 31561, 235, 4, 69, "Chapter",ExpressionUUID->"59ab4b20-ec9a-4c0f-8951-01f6e5b240bb"],
Cell[CellGroupData[{
Cell[1600684, 31569, 172, 3, 65, "Subchapter",ExpressionUUID->"552f608b-244f-4f51-8b69-d93518f00ca3"],
Cell[1600859, 31574, 440, 8, 58, "Text",ExpressionUUID->"5e355864-8a4c-4eb8-9a35-6b88d8e45a6a"],
Cell[1601302, 31584, 184, 4, 48, "Input",ExpressionUUID->"452b8eac-3d10-49b1-861d-608a3fd4c50f"],
Cell[CellGroupData[{
Cell[1601511, 31592, 237, 7, 41, "Input",ExpressionUUID->"715ff14b-eaf3-4336-91d0-f4cdf693d498"],
Cell[1601751, 31601, 214, 7, 43, "Output",ExpressionUUID->"8e191506-8275-4754-b0c9-8b45562f8806"]
}, Open  ]],
Cell[1601980, 31611, 213, 4, 35, "Text",ExpressionUUID->"243d564f-2a87-48c7-be0d-b89fbcad67ca"],
Cell[CellGroupData[{
Cell[1602218, 31619, 275, 8, 57, "Input",ExpressionUUID->"93b43170-b058-4cae-aded-e0c0830d28ec"],
Cell[1602496, 31629, 232, 7, 37, "Output",ExpressionUUID->"767545d2-7f30-441c-aa19-c910d57864bd"]
}, Open  ]],
Cell[1602743, 31639, 241, 6, 35, "Text",ExpressionUUID->"def52f9e-8b82-407d-b4bb-047dd12d1046"],
Cell[CellGroupData[{
Cell[1603009, 31649, 422, 13, 57, "Input",ExpressionUUID->"02847622-85b9-4c2d-9193-e2de6cede6c3"],
Cell[1603434, 31664, 190, 6, 38, "Output",ExpressionUUID->"08ca2be1-2e00-4cde-acc7-aa5dcaa45e2b"]
}, Open  ]],
Cell[1603639, 31673, 177, 3, 35, "Text",ExpressionUUID->"a870bdfb-3f57-4e5d-97b5-58d834db9282"],
Cell[CellGroupData[{
Cell[1603841, 31680, 439, 14, 57, "Input",ExpressionUUID->"4fd6c56b-eeba-4297-ae78-3913919250e9"],
Cell[1604283, 31696, 192, 6, 38, "Output",ExpressionUUID->"a7fbbaa8-ad0e-4d04-bd1a-e6c5500237e5"]
}, Open  ]],
Cell[1604490, 31705, 284, 8, 35, "Text",ExpressionUUID->"b03b090e-475a-4bd3-bb3d-d96a156b47dd"],
Cell[CellGroupData[{
Cell[1604799, 31717, 250, 7, 57, "Input",ExpressionUUID->"92a2c0f8-d815-45da-bbcb-cda4a5f17e6f"],
Cell[1605052, 31726, 511, 17, 35, "Output",ExpressionUUID->"57774f73-0368-4979-be94-3542e7a3ea54"]
}, Open  ]],
Cell[1605578, 31746, 431, 8, 35, "Text",ExpressionUUID->"ccca1642-bb0d-4cd3-9ef5-9a33d33445ee"],
Cell[CellGroupData[{
Cell[1606034, 31758, 270, 7, 57, "Input",ExpressionUUID->"d4705466-a0d1-4d71-8046-e171166b8ea8"],
Cell[1606307, 31767, 147, 3, 35, "Output",ExpressionUUID->"bd2d8093-f531-4555-836f-eab14a3de98d"]
}, Open  ]],
Cell[1606469, 31773, 211, 4, 35, "Text",ExpressionUUID->"2c0605bc-bfc6-41cc-9d43-4bcc921a9ff3"],
Cell[CellGroupData[{
Cell[1606705, 31781, 297, 8, 57, "Input",ExpressionUUID->"9e9192e8-72d6-462d-b6de-e878549817fe"],
Cell[1607005, 31791, 174, 3, 35, "Output",ExpressionUUID->"0c4c7f06-749d-49a3-898e-fc06972eca28"]
}, Open  ]],
Cell[1607194, 31797, 354, 10, 35, "Text",ExpressionUUID->"8bb3510e-b369-4131-953a-5e604b5f44e9"],
Cell[CellGroupData[{
Cell[1607573, 31811, 184, 4, 48, "Input",ExpressionUUID->"016e3634-8d6d-4210-9647-0f681f9b2a0a"],
Cell[1607760, 31817, 159, 4, 35, "Output",ExpressionUUID->"91b85c25-3b71-4f39-bd33-5e734c6c3846"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1607956, 31826, 212, 5, 48, "Input",ExpressionUUID->"ae62c3cb-661f-4eda-a22f-a027d7943af3"],
Cell[1608171, 31833, 165, 4, 35, "Output",ExpressionUUID->"59e185cf-f72f-4324-8ca6-14dfb4b982fd"]
}, Open  ]],
Cell[1608351, 31840, 211, 6, 58, "Text",ExpressionUUID->"da541353-d6db-4327-9e4b-110bd15fb30f"],
Cell[1608565, 31848, 184, 4, 48, "Input",ExpressionUUID->"482fdce4-a728-4c36-b46f-01f8268e630e"],
Cell[CellGroupData[{
Cell[1608774, 31856, 335, 10, 39, "Input",ExpressionUUID->"41f4e39c-f99e-41ce-81b7-7ebb9447a232"],
Cell[1609112, 31868, 274, 9, 43, "Output",ExpressionUUID->"2bf39aed-19c5-41f8-9d49-b1be082dfffd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1609423, 31882, 203, 4, 48, "Input",ExpressionUUID->"9e2cc79e-db2d-45d5-b1c4-196f9a3304d4"],
Cell[1609629, 31888, 227, 7, 43, "Output",ExpressionUUID->"ce861e14-2c20-4d50-99a8-4f9049ff3314"]
}, Open  ]],
Cell[1609871, 31898, 157, 3, 35, "Text",ExpressionUUID->"b9569eae-cd36-4b27-a5b5-d366f4a7f431"],
Cell[CellGroupData[{
Cell[1610053, 31905, 189, 3, 48, "Input",ExpressionUUID->"9474a380-87a6-4a40-9de2-8a4e7d6ce926"],
Cell[1610245, 31910, 196, 5, 37, "Output",ExpressionUUID->"135b8aec-797f-42df-94f9-9cf7cc6534bf"]
}, Open  ]],
Cell[1610456, 31918, 216, 5, 35, "Text",ExpressionUUID->"bcd968e1-d382-49c8-989a-832d61775147"],
Cell[CellGroupData[{
Cell[1610697, 31927, 536, 15, 55, "Input",ExpressionUUID->"b40786d9-0d5f-420d-8472-d00b7e71ce18"],
Cell[1611236, 31944, 386, 12, 43, "Output",ExpressionUUID->"04858292-3229-4c62-8e7e-b6a0cb634995"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1611659, 31961, 485, 14, 55, "Input",ExpressionUUID->"1138996a-5162-4132-b456-6282718087a1"],
Cell[1612147, 31977, 359, 11, 43, "Output",ExpressionUUID->"85694c8e-9d3d-48c9-95aa-7206312f9300"]
}, Open  ]],
Cell[1612521, 31991, 359, 7, 35, "Text",ExpressionUUID->"7ff5ba89-9b21-4915-b7d8-381f9bd206cd"],
Cell[CellGroupData[{
Cell[1612905, 32002, 293, 8, 48, "Input",ExpressionUUID->"496b3089-d8a7-4aa3-ab66-57e9f3f27646"],
Cell[1613201, 32012, 246, 7, 53, "Output",ExpressionUUID->"fbabee4d-c254-4d08-b9c9-fa1f212fd217"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1613484, 32024, 279, 8, 48, "Input",ExpressionUUID->"1465d9d6-623e-4d84-94d9-4ec9567faa36"],
Cell[1613766, 32034, 400, 10, 22, "Message",ExpressionUUID->"d5699b5a-702c-4efd-9631-4bbef26e3d88"],
Cell[1614169, 32046, 223, 6, 35, "Output",ExpressionUUID->"2cbc742c-7419-4d08-8858-c7b9de75b1b8"]
}, Open  ]],
Cell[1614407, 32055, 250, 6, 35, "Text",ExpressionUUID->"d05f2235-0182-4164-b3a6-aedd1e5c081f"],
Cell[CellGroupData[{
Cell[1614682, 32065, 339, 9, 48, "Input",ExpressionUUID->"66c9e48d-3d1f-428b-8693-9927a0173362"],
Cell[1615024, 32076, 478, 15, 35, "Output",ExpressionUUID->"c2e922d2-a30b-4054-b30f-99e5d7175343"]
}, Open  ]],
Cell[1615517, 32094, 248, 6, 35, "Text",ExpressionUUID->"4bf6de8b-05fa-403d-b83d-d4d359faf457"],
Cell[CellGroupData[{
Cell[1615790, 32104, 344, 9, 48, "Input",ExpressionUUID->"8e985993-81fd-4a1f-acda-bc709290fec7"],
Cell[1616137, 32115, 223, 6, 35, "Output",ExpressionUUID->"49c8cdc9-7590-4dc4-a675-b911a4a78704"]
}, Open  ]],
Cell[1616375, 32124, 196, 3, 35, "Text",ExpressionUUID->"e12f5703-1190-4994-a69c-038811641e36"],
Cell[CellGroupData[{
Cell[1616596, 32131, 481, 15, 48, "Input",ExpressionUUID->"363beb75-5140-4991-ab1e-1e2c7d90eb84"],
Cell[1617080, 32148, 311, 10, 53, "Output",ExpressionUUID->"d49373ae-d04b-4325-babe-8a4b9db2b482"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1617428, 32163, 188, 3, 45, "Subsubsection",ExpressionUUID->"2963a7e5-29c0-40c8-a390-514622586105"],
Cell[1617619, 32168, 257, 8, 81, "Text",ExpressionUUID->"4606d8d7-97cf-4da5-ac14-288175736e66"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1617925, 32182, 165, 3, 49, "Subchapter",ExpressionUUID->"d79c636d-e69c-4a00-a604-511f7c6e8043"],
Cell[1618093, 32187, 304, 8, 35, "Text",ExpressionUUID->"a95d812f-87e6-4d68-9b66-6dc9f91e23c6"],
Cell[CellGroupData[{
Cell[1618422, 32199, 232, 6, 55, "Input",ExpressionUUID->"37c39337-abcd-4588-b56d-4d48c20ff68f"],
Cell[1618657, 32207, 176, 5, 37, "Output",ExpressionUUID->"3767511e-f065-4ba2-82e1-edcb38e24cb4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1618870, 32217, 332, 10, 55, "Input",ExpressionUUID->"5743d284-f959-45ee-97ba-b1f8b18aeee0"],
Cell[1619205, 32229, 293, 7, 38, "Output",ExpressionUUID->"d93bfd1a-1d0a-4d68-a73d-531051017456"]
}, Open  ]],
Cell[1619513, 32239, 250, 6, 35, "Text",ExpressionUUID->"4b892b52-c19c-4bea-bb9e-d40a2c457fb9"],
Cell[CellGroupData[{
Cell[1619788, 32249, 461, 14, 55, "Input",ExpressionUUID->"87c73131-0f03-4d76-9698-7035e17a751d"],
Cell[1620252, 32265, 191, 4, 35, "Output",ExpressionUUID->"6c8b02cf-0eb1-4d71-bba4-f4118a8167d5"]
}, Open  ]],
Cell[1620458, 32272, 199, 3, 35, "Text",ExpressionUUID->"c5fcee08-976e-4143-a064-f3e6ec29f399"],
Cell[CellGroupData[{
Cell[1620682, 32279, 262, 7, 55, "Input",ExpressionUUID->"30bf87d2-5e89-4dd6-bebb-929c287e94d7"],
Cell[1620947, 32288, 155, 4, 37, "Output",ExpressionUUID->"ffbbcb79-814e-4b9a-a4be-5208eb951966"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1621139, 32297, 316, 10, 55, "Input",ExpressionUUID->"78bc98f4-0930-4f93-852c-a49be653412c"],
Cell[1621458, 32309, 781, 26, 50, "Output",ExpressionUUID->"ec466c67-e84d-480f-b85d-338a4fe2bede"]
}, Open  ]],
Cell[1622254, 32338, 312, 8, 35, "Text",ExpressionUUID->"b56f8a52-591d-44ae-bad6-7fd16322a765"],
Cell[CellGroupData[{
Cell[1622591, 32350, 324, 9, 55, "Input",ExpressionUUID->"5cffc764-aac3-451b-a140-81b182cf7138"],
Cell[1622918, 32361, 137, 3, 35, "Output",ExpressionUUID->"8d688595-227a-4154-a3fb-03b77daa79fc"]
}, Open  ]],
Cell[1623070, 32367, 238, 4, 35, "Text",ExpressionUUID->"4071e588-a792-40da-8f25-d242b3513b37"],
Cell[CellGroupData[{
Cell[1623333, 32375, 527, 13, 55, "Input",ExpressionUUID->"45d2770d-11d7-4bc2-a49f-e8626eebfd07"],
Cell[1623863, 32390, 400, 11, 51, "Output",ExpressionUUID->"04b1872f-bcd0-427e-9fa4-46fb3f35fb06"]
}, Open  ]],
Cell[1624278, 32404, 285, 7, 35, "Text",ExpressionUUID->"dd1e0179-25cd-474c-8769-c32f73fb6c23"],
Cell[CellGroupData[{
Cell[1624588, 32415, 476, 12, 55, "Input",ExpressionUUID->"36960f60-4327-4526-bfd8-8f4d3e07d319"],
Cell[1625067, 32429, 211, 4, 35, "Output",ExpressionUUID->"1c801364-c593-4c89-902b-246b4cd4fecf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1625315, 32438, 163, 3, 45, "Subsubsection",ExpressionUUID->"e1b5255e-f132-4867-96c5-05094b85b428"],
Cell[1625481, 32443, 250, 6, 35, "Text",ExpressionUUID->"46f65e1f-3e99-4e97-9187-aca0cada0770"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1625768, 32454, 163, 3, 45, "Subsubsection",ExpressionUUID->"566bc6c7-06e4-4e42-b94f-3dbb166f00db"],
Cell[1625934, 32459, 571, 16, 101, "Text",ExpressionUUID->"2fdbcbde-4b3c-4f3f-a57d-6a199807d61c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1626542, 32480, 215, 4, 45, "Subsubsection",ExpressionUUID->"1ca53ae0-598a-44ab-8764-b4c995b1a714"],
Cell[1626760, 32486, 235, 6, 35, "Text",ExpressionUUID->"9860423f-333d-4cab-89a9-c5adb616c94e"],
Cell[1626998, 32494, 843, 21, 55, "Input",ExpressionUUID->"c32b5434-dd29-4d6c-bfbe-f54c16907ef9"],
Cell[1627844, 32517, 267, 6, 35, "Text",ExpressionUUID->"40580e51-0268-4a75-bd59-9c17e71c7538"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1628160, 32529, 280, 6, 49, "Subchapter",ExpressionUUID->"58143a28-3f34-4f7e-88de-1288ab80a5aa"],
Cell[1628443, 32537, 83329, 1372, 591, "Text",ExpressionUUID->"b3c40ed1-7036-4799-ac63-0d58f1c7ea6c"],
Cell[1711775, 33911, 53956, 891, 378, "Text",ExpressionUUID->"a283a1e0-a0e2-4231-8117-7ce7bc206e73"],
Cell[1765734, 34804, 72620, 1197, 724, "Text",ExpressionUUID->"91eb4209-6e1d-40ff-b0d1-8ff9a341e306"],
Cell[1838357, 36003, 37195, 616, 406, "Text",ExpressionUUID->"95ec4e80-5229-4b52-ad5a-897a3475c486"],
Cell[1875555, 36621, 56620, 935, 386, "Text",ExpressionUUID->"78940559-46b2-4ec0-ba7f-75a551235531"],
Cell[1932178, 37558, 11092, 188, 79, "Text",ExpressionUUID->"f0d96405-19ec-4b7e-a058-c911b005287d"],
Cell[CellGroupData[{
Cell[1943295, 37750, 169, 3, 45, "Subsubsection",ExpressionUUID->"7d0160df-6274-4184-a2ac-60b3d7896a06"],
Cell[1943467, 37755, 1841, 45, 245, "Input",ExpressionUUID->"e94a0ef0-8746-4f95-b30a-fa1900216e78"],
Cell[1945311, 37802, 467, 14, 48, "Input",ExpressionUUID->"9d5316fd-dcd0-4490-8d9b-df3e5e904386"],
Cell[1945781, 37818, 1553, 43, 173, "Input",ExpressionUUID->"6fd15d40-95ff-4d8a-8de0-d304fbdd9b69"],
Cell[CellGroupData[{
Cell[1947359, 37865, 798, 21, 89, "Input",ExpressionUUID->"10b0269c-ecad-44f1-82bb-12b5bdd2c698"],
Cell[1948160, 37888, 137, 3, 35, "Output",ExpressionUUID->"0e2b3a94-70ca-4303-950f-e715e24e2a4a"]
}, Open  ]],
Cell[1948312, 37894, 1429, 41, 176, "Input",ExpressionUUID->"3e483b91-7fae-4f50-b893-4df9b7131792"],
Cell[1949744, 37937, 248, 6, 48, "Input",ExpressionUUID->"166b8a11-5b15-48e3-8122-0cacf67a5bbf"],
Cell[1949995, 37945, 714, 21, 48, "Input",ExpressionUUID->"8d17c154-f292-41e4-b427-5b15ab93e395"],
Cell[1950712, 37968, 1456, 34, 500, "Input",ExpressionUUID->"f490a5a4-6740-4785-b743-17ea0865aba0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1952229, 38009, 188, 3, 69, "Chapter",ExpressionUUID->"953d73cf-335c-4773-8ed8-e67c4dc951f4"],
Cell[CellGroupData[{
Cell[1952442, 38016, 170, 3, 65, "Subchapter",ExpressionUUID->"db01738e-f3fc-4b1e-be6c-776b1f68fd23"],
Cell[1952615, 38021, 879, 15, 104, "Text",ExpressionUUID->"264c1eae-a2d3-4e70-b528-6c7d784c7fa7"],
Cell[CellGroupData[{
Cell[1953519, 38040, 430, 13, 48, "Input",ExpressionUUID->"1d71b48c-a049-42b1-9004-451a3de90d18"],
Cell[1953952, 38055, 185, 4, 147, "Output",ExpressionUUID->"52bebc75-ea5f-4dcd-948c-696e2737b941"]
}, Open  ]],
Cell[1954152, 38062, 205, 3, 35, "Text",ExpressionUUID->"afbf9e08-dd32-41e8-bce1-8a0672aaab10"],
Cell[CellGroupData[{
Cell[1954382, 38069, 599, 19, 48, "Input",ExpressionUUID->"8330eae8-a0df-4548-b1d7-8fb7578e6e1a"],
Cell[1954984, 38090, 206, 5, 170, "Output",ExpressionUUID->"7afc8be9-cc62-4481-afca-c14f2cdaf476"]
}, Open  ]],
Cell[1955205, 38098, 200, 3, 35, "Text",ExpressionUUID->"1abd5def-91cc-4396-9f2c-b6319586ff93"],
Cell[CellGroupData[{
Cell[1955430, 38105, 640, 19, 48, "Input",ExpressionUUID->"4a9f3c82-c485-4e47-8457-0887f5cff206"],
Cell[1956073, 38126, 275, 7, 170, "Output",ExpressionUUID->"a85e2b59-c1d4-4098-a1f9-23bc9774870c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1956397, 38139, 227, 4, 49, "Subchapter",ExpressionUUID->"acc7597d-afe5-4d7e-b127-99831f31aa08"],
Cell[1956627, 38145, 541, 10, 58, "Text",ExpressionUUID->"9e5ae142-9447-46f3-ba72-72a1e7715428"],
Cell[CellGroupData[{
Cell[1957193, 38159, 321, 9, 48, "Input",ExpressionUUID->"ae7119bc-56ac-4038-aa41-de90c1c24ebb"],
Cell[1957517, 38170, 20518, 356, 228, "Output",ExpressionUUID->"76ae3fe7-47aa-4133-86a0-7b7bd5a4a53b"]
}, Open  ]],
Cell[1978050, 38529, 267, 6, 35, "Text",ExpressionUUID->"d57b0f6a-e430-4135-9437-80e16cde1b4d"],
Cell[CellGroupData[{
Cell[1978342, 38539, 565, 14, 48, "Input",ExpressionUUID->"18b8a338-9adf-4f4b-922a-733612d8aa7f"],
Cell[1978910, 38555, 28415, 531, 248, "Output",ExpressionUUID->"46577753-0029-49f4-98ef-95d4eca3cfb3"]
}, Open  ]],
Cell[2007340, 39089, 264, 6, 35, "Text",ExpressionUUID->"b1a8f6fa-8065-408e-9f35-e9a2fd200065"],
Cell[CellGroupData[{
Cell[2007629, 39099, 676, 19, 31, "Input",ExpressionUUID->"3dc1f56e-2723-45f2-ac73-7b3321e7cc66"],
Cell[2008308, 39120, 6834, 149, 258, "Output",ExpressionUUID->"7d810e0d-8d49-4da4-89d5-c5d9fc573267"]
}, Open  ]],
Cell[2015157, 39272, 187, 3, 35, "Text",ExpressionUUID->"445e1467-686c-43d7-9d41-49e50d748eff"],
Cell[CellGroupData[{
Cell[2015369, 39279, 980, 25, 69, "Input",ExpressionUUID->"ff083390-6f95-4fc8-9351-0325b0b8cbfb"],
Cell[2016352, 39306, 23804, 456, 295, "Output",ExpressionUUID->"5d4045e1-569d-4549-a4fa-8652d48a3136"]
}, Open  ]],
Cell[2040171, 39765, 212, 4, 35, "Text",ExpressionUUID->"84e28b61-7c0c-4c86-9ef6-8c4db4032b60"],
Cell[CellGroupData[{
Cell[2040408, 39773, 907, 24, 129, "Input",ExpressionUUID->"82c22e0c-2120-48b4-a133-e7a8a1700c5a"],
Cell[2041318, 39799, 14672, 310, 241, "Output",ExpressionUUID->"45674a9d-27d7-4ee8-9268-33141684a1ef"]
}, Open  ]],
Cell[2056005, 40112, 247, 5, 35, "Text",ExpressionUUID->"571cceec-de9c-4abc-8fdc-b6eb546b44fd"],
Cell[CellGroupData[{
Cell[2056277, 40121, 810, 22, 39, "Input",ExpressionUUID->"325da987-fda1-48e3-8dc7-83ab71be23cc"],
Cell[2057090, 40145, 188770, 3124, 294, "Output",ExpressionUUID->"fd5a1eda-dc20-4f08-99e1-e908de6e57ae"]
}, Open  ]],
Cell[2245875, 43272, 288, 6, 35, "Text",ExpressionUUID->"0da7e4a6-40fd-45b5-9258-7d970ea296d0"],
Cell[CellGroupData[{
Cell[2246188, 43282, 1009, 32, 55, "Input",ExpressionUUID->"87e6e0fa-c182-44c4-b65f-d4f39dd287e3"],
Cell[2247200, 43316, 297, 9, 35, "Output",ExpressionUUID->"adc11c57-090a-4243-a23f-29042235361c"],
Cell[2247500, 43327, 4569, 101, 376, "Output",ExpressionUUID->"f0e3f8fe-862d-4347-a023-cae1d2db10b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2252106, 43433, 214, 4, 45, "Subsubsection",ExpressionUUID->"b050b923-aff4-49d0-8d73-84af74213ba6"],
Cell[2252323, 43439, 337, 12, 150, "Text",ExpressionUUID->"607b2946-238a-45ae-9b3f-c8ebf1fec67f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2252709, 43457, 174, 3, 49, "Subchapter",ExpressionUUID->"88e7a893-2f5e-471d-809c-d93cd7889487"],
Cell[CellGroupData[{
Cell[2252908, 43464, 298, 8, 48, "Input",ExpressionUUID->"2df7f161-e312-4f63-b6b4-60a6c26203cc"],
Cell[2253209, 43474, 1603, 34, 126, "Output",ExpressionUUID->"3b7ec58e-42d4-4e80-94b5-8f3464e32ed8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2254849, 43513, 1399, 32, 507, "Input",ExpressionUUID->"95647243-48aa-4aa7-8504-b64832da6c25"],
Cell[2256251, 43547, 1938, 39, 384, "Output",ExpressionUUID->"86a4d7b2-7662-4b5a-84b2-48ab862804ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2258226, 43591, 162, 3, 45, "Subsubsection",ExpressionUUID->"0d90508e-7246-4da4-a8f3-7931591765d5"],
Cell[2258391, 43596, 286, 8, 104, "Text",ExpressionUUID->"94b27551-4624-46b3-96bd-dcb1eda0d9f5"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

